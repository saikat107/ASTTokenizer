<METHOD_START> private void ( WebHandler org.springframework.web.server.adapter.WebHandler ) { Assert . notNull ( org.springframework.web.server.adapter.WebHandler , STRING ) ; this . org.springframework.web.server.adapter.WebHandler = org.springframework.web.server.adapter.WebHandler ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.server.adapter.WebHttpHandlerBuilder org.springframework.web.server.adapter.WebHttpHandlerBuilder ( WebHandler org.springframework.web.server.adapter.WebHandler ) { return new org.springframework.web.server.adapter.WebHttpHandlerBuilder ( org.springframework.web.server.adapter.WebHandler ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.server.adapter.WebHttpHandlerBuilder org.springframework.web.server.adapter.WebHttpHandlerBuilder ( ApplicationContext org.springframework.web.server.adapter.ApplicationContext ) { org.springframework.web.server.adapter.WebHttpHandlerBuilder org.springframework.web.server.adapter.WebHttpHandlerBuilder = new org.springframework.web.server.adapter.WebHttpHandlerBuilder ( org.springframework.web.server.adapter.ApplicationContext . getBean ( java.lang.String , WebHandler .class ) ) ; org.springframework.web.server.adapter.WebHttpHandlerBuilder.SortedBeanContainer org.springframework.web.server.adapter.WebHttpHandlerBuilder.SortedBeanContainer = new org.springframework.web.server.adapter.WebHttpHandlerBuilder.SortedBeanContainer ( ) ; org.springframework.web.server.adapter.ApplicationContext . getAutowireCapableBeanFactory ( ) . autowireBean ( org.springframework.web.server.adapter.WebHttpHandlerBuilder.SortedBeanContainer ) ; org.springframework.web.server.adapter.WebHttpHandlerBuilder . org.springframework.web.server.adapter.WebHttpHandlerBuilder ( org.springframework.web.server.adapter.WebHttpHandlerBuilder.SortedBeanContainer . java.util.List<org.springframework.web.server.adapter.WebFilter> ( ) ) ; org.springframework.web.server.adapter.WebHttpHandlerBuilder . org.springframework.web.server.adapter.WebHttpHandlerBuilder ( org.springframework.web.server.adapter.WebHttpHandlerBuilder.SortedBeanContainer . java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> ( ) ) ; try { org.springframework.web.server.adapter.WebHttpHandlerBuilder . org.springframework.web.server.adapter.WebHttpHandlerBuilder ( org.springframework.web.server.adapter.ApplicationContext . getBean ( java.lang.String , WebSessionManager .class ) ) ; } catch ( NoSuchBeanDefinitionException org.springframework.web.server.adapter.NoSuchBeanDefinitionException ) { } return org.springframework.web.server.adapter.WebHttpHandlerBuilder ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.server.adapter.WebHttpHandlerBuilder org.springframework.web.server.adapter.WebHttpHandlerBuilder ( java.util.List<? extends org.springframework.web.server.adapter.WebFilter> < ? extends WebFilter > java.util.List<? extends org.springframework.web.server.adapter.WebFilter> ) { if ( ! ObjectUtils . isEmpty ( java.util.List<> ) ) { this . java.util.List<org.springframework.web.server.adapter.WebFilter> . addAll ( java.util.List<> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.server.adapter.WebHttpHandlerBuilder org.springframework.web.server.adapter.WebHttpHandlerBuilder ( WebFilter org.springframework.web.server.adapter.WebFilter ) { Assert . notNull ( org.springframework.web.server.adapter.WebFilter , STRING ) ; this . java.util.List<org.springframework.web.server.adapter.WebFilter> . add ( NUMBER , org.springframework.web.server.adapter.WebFilter ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.server.adapter.WebHttpHandlerBuilder org.springframework.web.server.adapter.WebHttpHandlerBuilder ( java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> < WebExceptionHandler > java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> ) { if ( ! ObjectUtils . isEmpty ( java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> ) ) { this . java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> . addAll ( java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.server.adapter.WebHttpHandlerBuilder org.springframework.web.server.adapter.WebHttpHandlerBuilder ( WebExceptionHandler org.springframework.web.server.adapter.WebExceptionHandler ) { Assert . notNull ( org.springframework.web.server.adapter.WebExceptionHandler , STRING ) ; this . java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> . add ( NUMBER , org.springframework.web.server.adapter.WebExceptionHandler ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.server.adapter.WebHttpHandlerBuilder org.springframework.web.server.adapter.WebHttpHandlerBuilder ( WebSessionManager org.springframework.web.server.adapter.WebSessionManager ) { this . org.springframework.web.server.adapter.WebSessionManager = org.springframework.web.server.adapter.WebSessionManager ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.server.adapter.HttpHandler org.springframework.web.server.adapter.HttpHandler ( ) { WebHandler org.springframework.web.server.adapter.WebHandler ; org.springframework.web.server.adapter.WebHandler = new FilteringWebHandler ( this . org.springframework.web.server.adapter.WebHandler , this . java.util.List<org.springframework.web.server.adapter.WebFilter> ) ; org.springframework.web.server.adapter.WebHandler = new ExceptionHandlingWebHandler ( org.springframework.web.server.adapter.WebHandler , this . java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> ) ; HttpWebHandlerAdapter org.springframework.web.server.adapter.HttpWebHandlerAdapter = new HttpWebHandlerAdapter ( org.springframework.web.server.adapter.WebHandler ) ; if ( this . org.springframework.web.server.adapter.WebSessionManager != null ) { org.springframework.web.server.adapter.HttpWebHandlerAdapter . setSessionManager ( this . org.springframework.web.server.adapter.WebSessionManager ) ; } return org.springframework.web.server.adapter.HttpWebHandlerAdapter ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void void ( java.util.List<org.springframework.web.server.adapter.WebFilter> < WebFilter > java.util.List<org.springframework.web.server.adapter.WebFilter> ) { this . java.util.List<org.springframework.web.server.adapter.WebFilter> = java.util.List<org.springframework.web.server.adapter.WebFilter> ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.web.server.adapter.WebFilter> < WebFilter > java.util.List<org.springframework.web.server.adapter.WebFilter> ( ) { return this . java.util.List<org.springframework.web.server.adapter.WebFilter> ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void void ( java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> < WebExceptionHandler > java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> ) { this . java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> = java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> < WebExceptionHandler > java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> ( ) { return this . java.util.List<org.springframework.web.server.adapter.WebExceptionHandler> ; }  <METHOD_END>
