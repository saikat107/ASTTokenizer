<METHOD_START> public static org.springframework.aop.support.Pointcut org.springframework.aop.support.Pointcut ( Pointcut org.springframework.aop.support.Pointcut , Pointcut org.springframework.aop.support.Pointcut ) { return new ComposablePointcut ( org.springframework.aop.support.Pointcut ) . union ( org.springframework.aop.support.Pointcut ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.aop.support.Pointcut org.springframework.aop.support.Pointcut ( Pointcut org.springframework.aop.support.Pointcut , Pointcut org.springframework.aop.support.Pointcut ) { return new ComposablePointcut ( org.springframework.aop.support.Pointcut ) . intersection ( org.springframework.aop.support.Pointcut ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Pointcut org.springframework.aop.support.Pointcut , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Object ... java.lang.Object[] ) { Assert . notNull ( org.springframework.aop.support.Pointcut , STRING ) ; if ( org.springframework.aop.support.Pointcut == Pointcut . TRUE ) { return true ; } if ( org.springframework.aop.support.Pointcut . getClassFilter ( ) . matches ( java.lang.Class<> ) ) { MethodMatcher org.springframework.aop.support.MethodMatcher = org.springframework.aop.support.Pointcut . getMethodMatcher ( ) ; if ( org.springframework.aop.support.MethodMatcher . matches ( java.lang.reflect.Method , java.lang.Class<> ) ) { return ( ! org.springframework.aop.support.MethodMatcher . isRuntime ( ) || org.springframework.aop.support.MethodMatcher . matches ( java.lang.reflect.Method , java.lang.Class<> , java.lang.Object[] ) ) ; } } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> ) { return ( java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) && java.lang.reflect.Method . int ( ) == NUMBER && java.lang.reflect.Method . java.lang.Class<?> ( ) == java.lang.Void . java.lang.Class<java.lang.Void> ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( ) { return org.springframework.aop.support.Pointcuts.SetterPointcut ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> ) { return ( java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) && java.lang.reflect.Method . int ( ) == NUMBER ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( ) { return org.springframework.aop.support.Pointcuts.GetterPointcut ; }  <METHOD_END>
