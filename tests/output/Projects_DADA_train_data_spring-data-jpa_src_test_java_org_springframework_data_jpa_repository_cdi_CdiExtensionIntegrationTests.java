<METHOD_START> @ BeforeClass public static void void ( ) java.lang.Exception { org.springframework.data.jpa.repository.cdi.CdiTestContainer = CdiTestContainerLoader . getCdiContainer ( ) ; org.springframework.data.jpa.repository.cdi.CdiTestContainer . bootContainer ( ) ; org.springframework.data.jpa.repository.cdi.Logger . debug ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { java.util.Set<org.springframework.data.jpa.repository.cdi.Bean<?>> < Bean < ? > > java.util.Set<org.springframework.data.jpa.repository.cdi.Bean<?>> = org.springframework.data.jpa.repository.cdi.CdiTestContainer . getBeanManager ( ) . getBeans ( PersonRepository .class ) ; assertThat ( java.util.Set<org.springframework.data.jpa.repository.cdi.Bean<?>> , hasSize ( NUMBER ) ) ; assertThat ( java.util.Set<org.springframework.data.jpa.repository.cdi.Bean<?>> . iterator ( ) . next ( ) . getScope ( ) , is ( equalTo ( ( java.lang.Class ) ApplicationScoped .class ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryConsumer org.springframework.data.jpa.repository.cdi.RepositoryConsumer = org.springframework.data.jpa.repository.cdi.CdiTestContainer . getInstance ( RepositoryConsumer .class ) ; Person org.springframework.data.jpa.repository.cdi.Person = new Person ( ) ; org.springframework.data.jpa.repository.cdi.RepositoryConsumer . save ( org.springframework.data.jpa.repository.cdi.Person ) ; org.springframework.data.jpa.repository.cdi.RepositoryConsumer . findAll ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryConsumer org.springframework.data.jpa.repository.cdi.RepositoryConsumer = org.springframework.data.jpa.repository.cdi.CdiTestContainer . getInstance ( RepositoryConsumer .class ) ; assertThat ( org.springframework.data.jpa.repository.cdi.RepositoryConsumer . returnOne ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryConsumer org.springframework.data.jpa.repository.cdi.RepositoryConsumer = org.springframework.data.jpa.repository.cdi.CdiTestContainer . getInstance ( RepositoryConsumer .class ) ; org.springframework.data.jpa.repository.cdi.RepositoryConsumer . doSomethonOnUserDB ( ) ; }  <METHOD_END>
