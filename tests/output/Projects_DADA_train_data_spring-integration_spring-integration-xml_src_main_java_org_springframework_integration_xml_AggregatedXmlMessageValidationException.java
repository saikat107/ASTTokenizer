<METHOD_START> public void ( java.util.List<java.lang.Throwable> < java.lang.Throwable > java.util.List<java.lang.Throwable> ) { this . java.util.List<java.lang.Throwable> = ( java.util.List<java.lang.Throwable> != null ) ? java.util.List<java.lang.Throwable> : java.util.Collections .< java.lang.Throwable > java.util.List<java.lang.Throwable> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING ) ; for ( java.lang.Throwable java.lang.Throwable : this . java.util.List<java.lang.Throwable> ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.lang.Throwable . java.lang.String ( ) + STRING ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.Throwable> < java.lang.Throwable > java.util.List<java.lang.Throwable> ( ) { return java.util.Collections . java.util.List<java.lang.Throwable> ( this . java.util.List<java.lang.Throwable> ) ; }  <METHOD_END>
