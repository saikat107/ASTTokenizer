<METHOD_START> protected final org.springframework.test.web.servlet.MockMvc org.springframework.test.web.servlet.MockMvc ( Filter [] org.springframework.test.web.servlet.Filter[] , MockServletConfig org.springframework.test.web.servlet.MockServletConfig , WebApplicationContext org.springframework.test.web.servlet.WebApplicationContext , RequestBuilder org.springframework.test.web.servlet.RequestBuilder , java.util.List<org.springframework.test.web.servlet.ResultMatcher> < ResultMatcher > java.util.List<org.springframework.test.web.servlet.ResultMatcher> , java.util.List<org.springframework.test.web.servlet.ResultHandler> < ResultHandler > java.util.List<org.springframework.test.web.servlet.ResultHandler> , java.util.List<org.springframework.test.web.servlet.DispatcherServletCustomizer> < DispatcherServletCustomizer > java.util.List<org.springframework.test.web.servlet.DispatcherServletCustomizer> ) { ServletContext org.springframework.test.web.servlet.ServletContext = org.springframework.test.web.servlet.WebApplicationContext . getServletContext ( ) ; TestDispatcherServlet org.springframework.test.web.servlet.TestDispatcherServlet = new TestDispatcherServlet ( org.springframework.test.web.servlet.WebApplicationContext ) ; if ( java.util.List<org.springframework.test.web.servlet.DispatcherServletCustomizer> != null ) { for ( DispatcherServletCustomizer org.springframework.test.web.servlet.DispatcherServletCustomizer : java.util.List<org.springframework.test.web.servlet.DispatcherServletCustomizer> ) { org.springframework.test.web.servlet.DispatcherServletCustomizer . customize ( org.springframework.test.web.servlet.TestDispatcherServlet ) ; } } try { org.springframework.test.web.servlet.TestDispatcherServlet . init ( org.springframework.test.web.servlet.MockServletConfig ) ; } catch ( ServletException org.springframework.test.web.servlet.ServletException ) { throw new org.springframework.test.web.servlet.MockMvcBuilderSupport.MockMvcBuildException ( STRING , org.springframework.test.web.servlet.ServletException ) ; } MockMvc org.springframework.test.web.servlet.MockMvc = new MockMvc ( org.springframework.test.web.servlet.TestDispatcherServlet , org.springframework.test.web.servlet.Filter[] , org.springframework.test.web.servlet.ServletContext ) ; org.springframework.test.web.servlet.MockMvc . setDefaultRequest ( org.springframework.test.web.servlet.RequestBuilder ) ; org.springframework.test.web.servlet.MockMvc . setGlobalResultMatchers ( java.util.List<org.springframework.test.web.servlet.ResultMatcher> ) ; org.springframework.test.web.servlet.MockMvc . setGlobalResultHandlers ( java.util.List<org.springframework.test.web.servlet.ResultHandler> ) ; return org.springframework.test.web.servlet.MockMvc ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.Throwable java.lang.Throwable ) { super( java.lang.String , java.lang.Throwable ); }  <METHOD_END>
