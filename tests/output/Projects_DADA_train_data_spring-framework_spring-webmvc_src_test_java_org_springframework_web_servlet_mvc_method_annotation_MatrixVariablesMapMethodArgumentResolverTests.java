<METHOD_START> @ Before public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver = new MatrixVariableMapMethodArgumentResolver ( ) ; this . org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer = new ModelAndViewContainer ( ) ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest = new MockHttpServletRequest ( ) ; this . org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest = new ServletWebRequest ( org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest , new MockHttpServletResponse ( ) ) ; java.util.Map<java.lang.String,org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String>> < java.lang.String , MultiValueMap < java.lang.String , java.lang.String > > java.util.Map<java.lang.String,org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String>> = new java.util.LinkedHashMap<java.lang.String,org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String>> <> ( ) ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setAttribute ( HandlerMapping . MATRIX_VARIABLES_ATTRIBUTE , java.util.Map<java.lang.String,org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String>> ) ; java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.MatrixVariablesMapMethodArgumentResolverTests> ( ) . java.lang.reflect.Method ( STRING , java.lang.String .class , java.util.Map .class , MultiValueMap .class , MultiValueMap .class , java.util.Map .class ) ; this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new SynthesizingMethodParameter ( java.lang.reflect.Method , NUMBER ) ; this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new SynthesizingMethodParameter ( java.lang.reflect.Method , NUMBER ) ; this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new SynthesizingMethodParameter ( java.lang.reflect.Method , NUMBER ) ; this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new SynthesizingMethodParameter ( java.lang.reflect.Method , NUMBER ) ; this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new SynthesizingMethodParameter ( java.lang.reflect.Method , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertFalse ( org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver . supportsParameter ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) ) ; assertTrue ( org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver . supportsParameter ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) ) ; assertTrue ( org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver . supportsParameter ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) ) ; assertTrue ( org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver . supportsParameter ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) ) ; assertFalse ( org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver . supportsParameter ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> = org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> ( STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> . add ( STRING , STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> . add ( STRING , STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> . add ( STRING , STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> . add ( STRING , STRING ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ) this . org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver . resolveArgument ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , this . org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , null ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; @ java.lang.SuppressWarnings ( STRING ) MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> = ( MultiValueMap < java.lang.String , java.lang.String > ) this . org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver . resolveArgument ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , this . org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , null ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING ) , org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> = org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> ( STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> . add ( STRING , STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> . add ( STRING , STRING ) ; MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> = org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> ( STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> . add ( STRING , STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> . add ( STRING , STRING ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ) this . org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver . resolveArgument ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , this . org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , null ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ) this . org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver . resolveArgument ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , this . org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , null ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ) this . org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver . resolveArgument ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , this . org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , null ) ; assertEquals ( java.util.Collections . java.util.Map<java.lang.Object,java.lang.Object> ( ) , java.util.Map<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> = org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> ( STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> . add ( STRING , STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> . add ( STRING , STRING ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ) this . org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver . resolveArgument ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , this . org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , null ) ; assertEquals ( java.util.Collections . java.util.Map<java.lang.Object,java.lang.Object> ( ) , java.util.Map<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> ( java.lang.String java.lang.String ) { java.util.Map<java.lang.String,org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String>> < java.lang.String , MultiValueMap < java.lang.String , java.lang.String > > java.util.Map<java.lang.String,org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String>> = ( java.util.Map<java.lang.String,org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String>> < java.lang.String , MultiValueMap < java.lang.String , java.lang.String > > ) this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . getAttribute ( HandlerMapping . MATRIX_VARIABLES_ATTRIBUTE ) ; MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> = new LinkedMultiValueMap <> ( ) ; java.util.Map<java.lang.String,org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String>> . put ( java.lang.String , org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> ) ; return org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , @ MatrixVariable java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> , @ MatrixVariable MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> , @ MatrixVariable ( pathVar = STRING ) MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.servlet.mvc.method.annotation.MultiValueMap<java.lang.String,java.lang.String> , @ MatrixVariable ( STRING ) java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) {	}  <METHOD_END>
