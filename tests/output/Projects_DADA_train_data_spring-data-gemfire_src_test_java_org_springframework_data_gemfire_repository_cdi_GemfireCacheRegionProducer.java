<METHOD_START> @ Produces @ ApplicationScoped public org.springframework.data.gemfire.repository.cdi.Region<java.lang.Long,org.springframework.data.gemfire.repository.cdi.Person> < java.lang.Long , Person > org.springframework.data.gemfire.repository.cdi.Region<java.lang.Long,org.springframework.data.gemfire.repository.cdi.Person> ( ) { Cache org.springframework.data.gemfire.repository.cdi.Cache = new CacheFactory ( ) . set ( STRING , STRING ) . set ( STRING , STRING ) . set ( STRING , STRING ) . create ( ) ; RegionFactory < java.lang.Long , Person > org.springframework.data.gemfire.repository.cdi.RegionFactory<java.lang.Long,org.springframework.data.gemfire.repository.cdi.Person> = org.springframework.data.gemfire.repository.cdi.Cache . createRegionFactory ( RegionShortcut . REPLICATE ) ; org.springframework.data.gemfire.repository.cdi.RegionFactory<java.lang.Long,org.springframework.data.gemfire.repository.cdi.Person> . setKeyConstraint ( java.lang.Long .class ) ; org.springframework.data.gemfire.repository.cdi.RegionFactory<java.lang.Long,org.springframework.data.gemfire.repository.cdi.Person> . setValueConstraint ( Person .class ) ; Region < java.lang.Long , Person > org.springframework.data.gemfire.repository.cdi.Region<java.lang.Long,org.springframework.data.gemfire.repository.cdi.Person> = org.springframework.data.gemfire.repository.cdi.RegionFactory<java.lang.Long,org.springframework.data.gemfire.repository.cdi.Person> . create ( STRING ) ; Assert . notNull ( org.springframework.data.gemfire.repository.cdi.Region<java.lang.Long,org.springframework.data.gemfire.repository.cdi.Person> ) ; return org.springframework.data.gemfire.repository.cdi.Region<java.lang.Long,org.springframework.data.gemfire.repository.cdi.Person> ; }  <METHOD_END>
