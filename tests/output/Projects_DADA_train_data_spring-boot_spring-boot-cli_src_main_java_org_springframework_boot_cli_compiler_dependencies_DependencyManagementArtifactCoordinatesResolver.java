<METHOD_START> public void ( ) { this( new SpringBootDependenciesDependencyManagement ( ) ); }  <METHOD_END>
<METHOD_START> public void ( DependencyManagement org.springframework.boot.cli.compiler.dependencies.DependencyManagement ) { this . org.springframework.boot.cli.compiler.dependencies.DependencyManagement = org.springframework.boot.cli.compiler.dependencies.DependencyManagement ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { Dependency org.springframework.boot.cli.compiler.dependencies.Dependency = org.springframework.boot.cli.compiler.dependencies.Dependency ( java.lang.String ) ; return ( org.springframework.boot.cli.compiler.dependencies.Dependency == null ? null : org.springframework.boot.cli.compiler.dependencies.Dependency . getGroupId ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { Dependency org.springframework.boot.cli.compiler.dependencies.Dependency = org.springframework.boot.cli.compiler.dependencies.Dependency ( java.lang.String ) ; return org.springframework.boot.cli.compiler.dependencies.Dependency == null ? null : org.springframework.boot.cli.compiler.dependencies.Dependency . getArtifactId ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.compiler.dependencies.Dependency org.springframework.boot.cli.compiler.dependencies.Dependency ( java.lang.String java.lang.String ) { if ( StringUtils . countOccurrencesOf ( java.lang.String , STRING ) == NUMBER ) { java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; return new Dependency ( java.lang.String[] [ NUMBER ] , java.lang.String[] [ NUMBER ] , java.lang.String[] [ NUMBER ] ) ; } if ( java.lang.String != null ) { if ( java.lang.String . boolean ( STRING ) ) { return new Dependency ( STRING , java.lang.String , this . org.springframework.boot.cli.compiler.dependencies.DependencyManagement . getSpringBootVersion ( ) ) ; } return this . org.springframework.boot.cli.compiler.dependencies.DependencyManagement . find ( java.lang.String ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { Dependency org.springframework.boot.cli.compiler.dependencies.Dependency = org.springframework.boot.cli.compiler.dependencies.Dependency ( java.lang.String ) ; return org.springframework.boot.cli.compiler.dependencies.Dependency == null ? null : org.springframework.boot.cli.compiler.dependencies.Dependency . getVersion ( ) ; }  <METHOD_END>
