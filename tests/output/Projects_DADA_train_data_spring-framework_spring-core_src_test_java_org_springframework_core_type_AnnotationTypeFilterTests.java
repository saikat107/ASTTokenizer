<METHOD_START> @ Test public void void ( ) java.lang.Exception { MetadataReaderFactory org.springframework.core.type.MetadataReaderFactory = new SimpleMetadataReaderFactory ( ) ; java.lang.String java.lang.String = STRING ; MetadataReader org.springframework.core.type.MetadataReader = org.springframework.core.type.MetadataReaderFactory . getMetadataReader ( java.lang.String ) ; AnnotationTypeFilter org.springframework.core.type.AnnotationTypeFilter = new AnnotationTypeFilter ( org.springframework.core.type.AnnotationTypeFilterTests.InheritedAnnotation .class ) ; assertTrue ( org.springframework.core.type.AnnotationTypeFilter . match ( org.springframework.core.type.MetadataReader , org.springframework.core.type.MetadataReaderFactory ) ) ; ClassloadingAssertions . assertClassNotLoaded ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MetadataReaderFactory org.springframework.core.type.MetadataReaderFactory = new SimpleMetadataReaderFactory ( ) ; java.lang.String java.lang.String = STRING ; MetadataReader org.springframework.core.type.MetadataReader = org.springframework.core.type.MetadataReaderFactory . getMetadataReader ( java.lang.String ) ; AnnotationTypeFilter org.springframework.core.type.AnnotationTypeFilter = new AnnotationTypeFilter ( org.springframework.core.type.AnnotationTypeFilterTests.InheritedAnnotation .class ) ; assertFalse ( org.springframework.core.type.AnnotationTypeFilter . match ( org.springframework.core.type.MetadataReader , org.springframework.core.type.MetadataReaderFactory ) ) ; ClassloadingAssertions . assertClassNotLoaded ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MetadataReaderFactory org.springframework.core.type.MetadataReaderFactory = new SimpleMetadataReaderFactory ( ) ; java.lang.String java.lang.String = STRING ; MetadataReader org.springframework.core.type.MetadataReader = org.springframework.core.type.MetadataReaderFactory . getMetadataReader ( java.lang.String ) ; AnnotationTypeFilter org.springframework.core.type.AnnotationTypeFilter = new AnnotationTypeFilter ( org.springframework.core.type.AnnotationTypeFilterTests.InheritedAnnotation .class ) ; assertTrue ( org.springframework.core.type.AnnotationTypeFilter . match ( org.springframework.core.type.MetadataReader , org.springframework.core.type.MetadataReaderFactory ) ) ; ClassloadingAssertions . assertClassNotLoaded ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MetadataReaderFactory org.springframework.core.type.MetadataReaderFactory = new SimpleMetadataReaderFactory ( ) ; java.lang.String java.lang.String = STRING ; MetadataReader org.springframework.core.type.MetadataReader = org.springframework.core.type.MetadataReaderFactory . getMetadataReader ( java.lang.String ) ; AnnotationTypeFilter org.springframework.core.type.AnnotationTypeFilter = new AnnotationTypeFilter ( org.springframework.core.type.AnnotationTypeFilterTests.NonInheritedAnnotation .class ) ; assertFalse ( org.springframework.core.type.AnnotationTypeFilter . match ( org.springframework.core.type.MetadataReader , org.springframework.core.type.MetadataReaderFactory ) ) ; ClassloadingAssertions . assertClassNotLoaded ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MetadataReaderFactory org.springframework.core.type.MetadataReaderFactory = new SimpleMetadataReaderFactory ( ) ; java.lang.String java.lang.String = STRING ; MetadataReader org.springframework.core.type.MetadataReader = org.springframework.core.type.MetadataReaderFactory . getMetadataReader ( java.lang.String ) ; AnnotationTypeFilter org.springframework.core.type.AnnotationTypeFilter = new AnnotationTypeFilter ( Component .class ) ; assertFalse ( org.springframework.core.type.AnnotationTypeFilter . match ( org.springframework.core.type.MetadataReader , org.springframework.core.type.MetadataReaderFactory ) ) ; ClassloadingAssertions . assertClassNotLoaded ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MetadataReaderFactory org.springframework.core.type.MetadataReaderFactory = new SimpleMetadataReaderFactory ( ) ; java.lang.String java.lang.String = STRING ; MetadataReader org.springframework.core.type.MetadataReader = org.springframework.core.type.MetadataReaderFactory . getMetadataReader ( java.lang.String ) ; AnnotationTypeFilter org.springframework.core.type.AnnotationTypeFilter = new AnnotationTypeFilter ( org.springframework.core.type.AnnotationTypeFilterTests.InheritedAnnotation .class , false , true ) ; assertTrue ( org.springframework.core.type.AnnotationTypeFilter . match ( org.springframework.core.type.MetadataReader , org.springframework.core.type.MetadataReaderFactory ) ) ; ClassloadingAssertions . assertClassNotLoaded ( java.lang.String ) ; }  <METHOD_END>
