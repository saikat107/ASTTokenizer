<METHOD_START> @ Test @ Ignore public void void ( ) java.lang.Throwable { MessageBuilder < java.lang.String > org.springframework.integration.twitter.ignored.MessageBuilder<java.lang.String> = MessageBuilder . withPayload ( STRING + new java.util.Date ( java.lang.System . long ( ) ) ) ; Message < java.lang.String > org.springframework.integration.twitter.ignored.Message<java.lang.String> = org.springframework.integration.twitter.ignored.MessageBuilder<java.lang.String> . build ( ) ; this . org.springframework.integration.twitter.ignored.MessagingTemplate . send ( this . org.springframework.integration.twitter.ignored.MessageChannel , org.springframework.integration.twitter.ignored.Message<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Test @ Ignore public void void ( ) java.lang.Throwable { Message < java.lang.String > org.springframework.integration.twitter.ignored.Message<java.lang.String> = MessageBuilder . withPayload ( STRING + new java.util.Date ( java.lang.System . long ( ) ) ) . build ( ) ; this . org.springframework.integration.twitter.ignored.MessageChannel . send ( org.springframework.integration.twitter.ignored.Message<java.lang.String> ) ; }  <METHOD_END>
