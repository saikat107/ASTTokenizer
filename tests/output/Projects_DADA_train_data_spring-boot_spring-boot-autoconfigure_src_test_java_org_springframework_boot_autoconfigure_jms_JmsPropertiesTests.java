<METHOD_START> @ Test public void void ( ) { JmsProperties org.springframework.boot.autoconfigure.jms.JmsProperties = new JmsProperties ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsProperties . getListener ( ) . formatConcurrency ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { JmsProperties org.springframework.boot.autoconfigure.jms.JmsProperties = new JmsProperties ( ) ; org.springframework.boot.autoconfigure.jms.JmsProperties . getListener ( ) . setConcurrency ( NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsProperties . getListener ( ) . formatConcurrency ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { JmsProperties org.springframework.boot.autoconfigure.jms.JmsProperties = new JmsProperties ( ) ; org.springframework.boot.autoconfigure.jms.JmsProperties . getListener ( ) . setMaxConcurrency ( NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsProperties . getListener ( ) . formatConcurrency ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { JmsProperties org.springframework.boot.autoconfigure.jms.JmsProperties = new JmsProperties ( ) ; org.springframework.boot.autoconfigure.jms.JmsProperties . getListener ( ) . setConcurrency ( NUMBER ) ; org.springframework.boot.autoconfigure.jms.JmsProperties . getListener ( ) . setMaxConcurrency ( NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsProperties . getListener ( ) . formatConcurrency ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { JmsProperties org.springframework.boot.autoconfigure.jms.JmsProperties = new JmsProperties ( ) ; org.springframework.boot.autoconfigure.jms.JmsProperties . getTemplate ( ) . setDeliveryMode ( JmsProperties . DeliveryMode . PERSISTENT ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsProperties . getTemplate ( ) . determineQosEnabled ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { JmsProperties org.springframework.boot.autoconfigure.jms.JmsProperties = new JmsProperties ( ) ; org.springframework.boot.autoconfigure.jms.JmsProperties . getTemplate ( ) . setPriority ( NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsProperties . getTemplate ( ) . determineQosEnabled ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { JmsProperties org.springframework.boot.autoconfigure.jms.JmsProperties = new JmsProperties ( ) ; org.springframework.boot.autoconfigure.jms.JmsProperties . getTemplate ( ) . setTimeToLive ( NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsProperties . getTemplate ( ) . determineQosEnabled ( ) ) . isTrue ( ) ; }  <METHOD_END>
