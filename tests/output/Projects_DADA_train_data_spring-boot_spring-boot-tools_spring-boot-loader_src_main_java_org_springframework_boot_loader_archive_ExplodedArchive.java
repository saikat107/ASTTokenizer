<METHOD_START> public void ( java.io.File java.io.File ) { this( java.io.File , true ); }  <METHOD_END>
<METHOD_START> public void ( java.io.File java.io.File , boolean boolean ) { if ( ! java.io.File . boolean ( ) || ! java.io.File . boolean ( ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.io.File ) ; } this . java.io.File = java.io.File ; this . boolean = boolean ; this . java.io.File = java.io.File ( java.io.File ) ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( java.io.File java.io.File ) { java.io.File java.io.File = new java.io.File ( java.io.File , STRING ) ; return new java.io.File ( java.io.File , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URL java.net.URL ( ) java.net.MalformedURLException { return this . java.io.File . java.net.URI ( ) . java.net.URL ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.jar.Manifest java.util.jar.Manifest ( ) java.io.IOException { if ( this . java.util.jar.Manifest == null && this . java.io.File . boolean ( ) ) { java.io.FileInputStream java.io.FileInputStream = new java.io.FileInputStream ( this . java.io.File ) ; try { this . java.util.jar.Manifest = new java.util.jar.Manifest ( java.io.FileInputStream ) ; } finally { java.io.FileInputStream . void ( ) ; } } return this . java.util.jar.Manifest ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.boot.loader.archive.Archive> < Archive > java.util.List<org.springframework.boot.loader.archive.Archive> ( EntryFilter org.springframework.boot.loader.archive.EntryFilter ) throws java.io.IOException { java.util.List<org.springframework.boot.loader.archive.Archive> < Archive > java.util.List<org.springframework.boot.loader.archive.Archive> = new java.util.ArrayList<org.springframework.boot.loader.archive.Archive> <> ( ) ; for ( Entry org.springframework.boot.loader.archive.Entry : this ) { if ( org.springframework.boot.loader.archive.EntryFilter . matches ( org.springframework.boot.loader.archive.Entry ) ) { java.util.List<org.springframework.boot.loader.archive.Archive> . add ( org.springframework.boot.loader.archive.Archive ( org.springframework.boot.loader.archive.Entry ) ) ; } } return java.util.Collections . java.util.List<org.springframework.boot.loader.archive.Archive> ( java.util.List<org.springframework.boot.loader.archive.Archive> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.boot.loader.archive.Entry> < Entry > java.util.Iterator<org.springframework.boot.loader.archive.Entry> ( ) { return new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator ( this . java.io.File , this . boolean ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.boot.loader.archive.Archive org.springframework.boot.loader.archive.Archive ( Entry org.springframework.boot.loader.archive.Entry ) throws java.io.IOException { java.io.File java.io.File = ( ( org.springframework.boot.loader.archive.ExplodedArchive.FileEntry ) org.springframework.boot.loader.archive.Entry ) . java.io.File ( ) ; return ( java.io.File . boolean ( ) ? new org.springframework.boot.loader.archive.ExplodedArchive ( java.io.File ) : new JarFileArchive ( java.io.File ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { try { return java.net.URL ( ) . java.lang.String ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { return STRING ; } }  <METHOD_END>
<METHOD_START> void ( java.io.File java.io.File , boolean boolean ) { this . java.io.File = java.io.File ; this . boolean = boolean ; this . java.util.Deque<java.util.Iterator<java.io.File>> . boolean ( java.util.Iterator<java.io.File> ( java.io.File ) ) ; this . java.io.File = java.io.File ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . java.io.File != null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.loader.archive.Entry org.springframework.boot.loader.archive.Entry ( ) { if ( this . java.io.File == null ) { throw new java.util.NoSuchElementException ( ) ; } java.io.File java.io.File = this . java.io.File ; if ( java.io.File . boolean ( ) && ( this . boolean || java.io.File . java.io.File ( ) . boolean ( this . java.io.File ) ) ) { this . java.util.Deque<java.util.Iterator<java.io.File>> . void ( java.util.Iterator<java.io.File> ( java.io.File ) ) ; } this . java.io.File = java.io.File ( ) ; java.lang.String java.lang.String = java.io.File . java.net.URI ( ) . java.lang.String ( ) . java.lang.String ( this . java.io.File . java.net.URI ( ) . java.lang.String ( ) . int ( ) ) ; return new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry ( java.lang.String , java.io.File ) ; }  <METHOD_END>
<METHOD_START> private java.util.Iterator<java.io.File> < java.io.File > java.util.Iterator<java.io.File> ( java.io.File java.io.File ) { java.io.File [] java.io.File[] = java.io.File . java.io.File[] ( ) ; if ( java.io.File[] == null ) { return java.util.Collections .< java.io.File > java.util.List<java.io.File> ( ) . java.util.Iterator<java.io.File> ( ) ; } java.util.Arrays . void ( java.io.File[] , this . java.util.Comparator<java.io.File> ) ; return java.util.Arrays . java.util.List<java.io.File> ( java.io.File[] ) . java.util.Iterator<java.io.File> ( ) ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( ) { while ( ! this . java.util.Deque<java.util.Iterator<java.io.File>> . boolean ( ) ) { while ( this . java.util.Deque<java.util.Iterator<java.io.File>> . java.util.Iterator<java.io.File> ( ) . boolean ( ) ) { java.io.File java.io.File = this . java.util.Deque<java.util.Iterator<java.io.File>> . java.util.Iterator<java.io.File> ( ) . java.io.File ( ) ; if ( ! java.util.Set<java.lang.String> . boolean ( java.io.File . java.lang.String ( ) ) ) { return java.io.File ; } } this . java.util.Deque<java.util.Iterator<java.io.File>> . java.util.Iterator<java.io.File> ( ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.io.File java.io.File , java.io.File java.io.File ) { return java.io.File . java.lang.String ( ) . int ( java.io.File . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , java.io.File java.io.File ) { this . java.lang.String = java.lang.String ; this . java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> public java.io.File java.io.File ( ) { return this . java.io.File ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . java.io.File . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
