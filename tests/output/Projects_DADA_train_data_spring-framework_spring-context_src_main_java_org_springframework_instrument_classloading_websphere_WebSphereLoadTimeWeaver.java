<METHOD_START> public void ( ) { this( ClassUtils . getDefaultClassLoader ( ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { Assert . notNull ( java.lang.ClassLoader , STRING ) ; this . org.springframework.instrument.classloading.websphere.WebSphereClassLoaderAdapter = new WebSphereClassLoaderAdapter ( java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.instrument.ClassFileTransformer java.lang.instrument.ClassFileTransformer ) { this . org.springframework.instrument.classloading.websphere.WebSphereClassLoaderAdapter . addTransformer ( java.lang.instrument.ClassFileTransformer ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.ClassLoader java.lang.ClassLoader ( ) { return this . org.springframework.instrument.classloading.websphere.WebSphereClassLoaderAdapter . getClassLoader ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.ClassLoader java.lang.ClassLoader ( ) { return new OverridingClassLoader ( this . org.springframework.instrument.classloading.websphere.WebSphereClassLoaderAdapter . getClassLoader ( ) , this . org.springframework.instrument.classloading.websphere.WebSphereClassLoaderAdapter . getThrowawayClassLoader ( ) ) ; }  <METHOD_END>
