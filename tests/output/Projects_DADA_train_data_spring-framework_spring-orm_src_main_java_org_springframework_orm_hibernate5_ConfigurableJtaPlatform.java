<METHOD_START> public void ( TransactionManager org.springframework.orm.hibernate5.TransactionManager , UserTransaction org.springframework.orm.hibernate5.UserTransaction , TransactionSynchronizationRegistry org.springframework.orm.hibernate5.TransactionSynchronizationRegistry ) { Assert . notNull ( org.springframework.orm.hibernate5.TransactionManager , STRING ) ; this . org.springframework.orm.hibernate5.TransactionManager = org.springframework.orm.hibernate5.TransactionManager ; this . org.springframework.orm.hibernate5.UserTransaction = ( org.springframework.orm.hibernate5.UserTransaction != null ? org.springframework.orm.hibernate5.UserTransaction : new UserTransactionAdapter ( org.springframework.orm.hibernate5.TransactionManager ) ) ; this . org.springframework.orm.hibernate5.TransactionSynchronizationRegistry = org.springframework.orm.hibernate5.TransactionSynchronizationRegistry ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.orm.hibernate5.TransactionManager org.springframework.orm.hibernate5.TransactionManager ( ) { return this . org.springframework.orm.hibernate5.TransactionManager ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.orm.hibernate5.UserTransaction org.springframework.orm.hibernate5.UserTransaction ( ) { return this . org.springframework.orm.hibernate5.UserTransaction ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Transaction org.springframework.orm.hibernate5.Transaction ) { return org.springframework.orm.hibernate5.Transaction ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { try { return ( this . org.springframework.orm.hibernate5.TransactionManager . getStatus ( ) == Status . STATUS_ACTIVE ) ; } catch ( SystemException org.springframework.orm.hibernate5.SystemException ) { throw new TransactionException ( STRING , org.springframework.orm.hibernate5.SystemException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Synchronization org.springframework.orm.hibernate5.Synchronization ) { if ( this . org.springframework.orm.hibernate5.TransactionSynchronizationRegistry != null ) { this . org.springframework.orm.hibernate5.TransactionSynchronizationRegistry . registerInterposedSynchronization ( org.springframework.orm.hibernate5.Synchronization ) ; } else { try { this . org.springframework.orm.hibernate5.TransactionManager . getTransaction ( ) . registerSynchronization ( org.springframework.orm.hibernate5.Synchronization ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new TransactionException ( STRING , java.lang.Exception ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) org.springframework.orm.hibernate5.SystemException { return this . org.springframework.orm.hibernate5.TransactionManager . getStatus ( ) ; }  <METHOD_END>
