<METHOD_START> public void ( RedisConnectionFactory org.springframework.integration.redis.inbound.RedisConnectionFactory ) { Assert . notNull ( org.springframework.integration.redis.inbound.RedisConnectionFactory , STRING ) ; this . org.springframework.integration.redis.inbound.RedisMessageListenerContainer . setConnectionFactory ( org.springframework.integration.redis.inbound.RedisConnectionFactory ) ; }  <METHOD_END>
<METHOD_START> public void void ( RedisSerializer < ? > org.springframework.integration.redis.inbound.RedisSerializer<?> ) { this . org.springframework.integration.redis.inbound.RedisSerializer<?> = org.springframework.integration.redis.inbound.RedisSerializer<> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void void ( MessageConverter org.springframework.integration.redis.inbound.MessageConverter ) { Assert . notNull ( org.springframework.integration.redis.inbound.MessageConverter , STRING ) ; this . org.springframework.integration.redis.inbound.MessageConverter = org.springframework.integration.redis.inbound.MessageConverter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onInit ( ) ; boolean boolean = false ; if ( this . java.lang.String[] != null ) { Assert . noNullElements ( this . java.lang.String[] , STRING ) ; boolean = true ; } boolean boolean = false ; if ( this . java.lang.String[] != null ) { Assert . noNullElements ( this . java.lang.String[] , STRING ) ; boolean = true ; } Assert . state ( boolean || boolean , STRING ) ; if ( this . org.springframework.integration.redis.inbound.MessageConverter instanceof BeanFactoryAware ) { ( ( BeanFactoryAware ) this . org.springframework.integration.redis.inbound.MessageConverter ) . setBeanFactory ( this . getBeanFactory ( ) ) ; } org.springframework.integration.redis.inbound.RedisInboundChannelAdapter.MessageListenerDelegate org.springframework.integration.redis.inbound.RedisInboundChannelAdapter.MessageListenerDelegate = new org.springframework.integration.redis.inbound.RedisInboundChannelAdapter.MessageListenerDelegate ( ) ; MessageListenerAdapter org.springframework.integration.redis.inbound.MessageListenerAdapter = new MessageListenerAdapter ( org.springframework.integration.redis.inbound.RedisInboundChannelAdapter.MessageListenerDelegate ) ; org.springframework.integration.redis.inbound.MessageListenerAdapter . setSerializer ( this . org.springframework.integration.redis.inbound.RedisSerializer<> ) ; java.util.List<org.springframework.integration.redis.inbound.Topic> < Topic > java.util.List<org.springframework.integration.redis.inbound.Topic> = new java.util.ArrayList<org.springframework.integration.redis.inbound.Topic> < Topic > ( ) ; if ( boolean ) { for ( java.lang.String java.lang.String : this . java.lang.String[] ) { java.util.List<org.springframework.integration.redis.inbound.Topic> . add ( new ChannelTopic ( java.lang.String ) ) ; } } if ( boolean ) { for ( java.lang.String java.lang.String : this . java.lang.String[] ) { java.util.List<org.springframework.integration.redis.inbound.Topic> . add ( new PatternTopic ( java.lang.String ) ) ; } } org.springframework.integration.redis.inbound.MessageListenerAdapter . afterPropertiesSet ( ) ; this . org.springframework.integration.redis.inbound.RedisMessageListenerContainer . addMessageListener ( org.springframework.integration.redis.inbound.MessageListenerAdapter , java.util.List<org.springframework.integration.redis.inbound.Topic> ) ; this . org.springframework.integration.redis.inbound.RedisMessageListenerContainer . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. doStart ( ) ; this . org.springframework.integration.redis.inbound.RedisMessageListenerContainer . start ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. doStop ( ) ; this . org.springframework.integration.redis.inbound.RedisMessageListenerContainer . stop ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.redis.inbound.Message<?> < ? > org.springframework.integration.redis.inbound.Message<?> ( java.lang.Object java.lang.Object ) { return this . org.springframework.integration.redis.inbound.MessageConverter . toMessage ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( java.lang.Object java.lang.Object ) { sendMessage ( org.springframework.integration.redis.inbound.Message<?> ( java.lang.Object ) ) ; }  <METHOD_END>
