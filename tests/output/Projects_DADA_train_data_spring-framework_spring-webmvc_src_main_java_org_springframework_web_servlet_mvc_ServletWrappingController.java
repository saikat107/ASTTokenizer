<METHOD_START> public void ( ) { super( false ); }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<? extends org.springframework.web.servlet.mvc.Servlet> < ? extends Servlet > java.lang.Class<? extends org.springframework.web.servlet.mvc.Servlet> ) { this . java.lang.Class<? extends org.springframework.web.servlet.mvc.Servlet> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Properties java.util.Properties ) { this . java.util.Properties = java.util.Properties ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( this . java.lang.Class<> == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( this . java.lang.String == null ) { this . java.lang.String = this . java.lang.String ; } this . org.springframework.web.servlet.mvc.Servlet = ReflectionUtils . accessibleConstructor ( this . java.lang.Class<> ) . newInstance ( ) ; this . org.springframework.web.servlet.mvc.Servlet . init ( new org.springframework.web.servlet.mvc.ServletWrappingController.DelegatingServletConfig ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.mvc.ModelAndView org.springframework.web.servlet.mvc.ModelAndView ( HttpServletRequest org.springframework.web.servlet.mvc.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.mvc.HttpServletResponse )			throws java.lang.Exception { this . org.springframework.web.servlet.mvc.Servlet . service ( org.springframework.web.servlet.mvc.HttpServletRequest , org.springframework.web.servlet.mvc.HttpServletResponse ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.web.servlet.mvc.Servlet . destroy ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.ServletContext org.springframework.web.servlet.mvc.ServletContext ( ) { return org.springframework.web.servlet.mvc.ServletWrappingController .this . getServletContext ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.util.Properties . java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.Enumeration<java.lang.String> < java.lang.String > java.util.Enumeration<java.lang.String> ( ) { return ( java.util.Enumeration ) java.util.Properties . java.util.Enumeration<java.lang.Object> ( ) ; }  <METHOD_END>
