<METHOD_START> @ Test public void void ( ) { assertNull ( this . org.springframework.web.cors.UrlBasedCorsConfigurationSource . getCorsConfiguration ( new MockHttpServletRequest ( HttpMethod . GET . name ( ) , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; this . org.springframework.web.cors.UrlBasedCorsConfigurationSource . registerCorsConfiguration ( STRING , org.springframework.web.cors.CorsConfiguration ) ; assertNull ( this . org.springframework.web.cors.UrlBasedCorsConfigurationSource . getCorsConfiguration ( new MockHttpServletRequest ( HttpMethod . GET . name ( ) , STRING ) ) ) ; assertEquals ( org.springframework.web.cors.CorsConfiguration , this . org.springframework.web.cors.UrlBasedCorsConfigurationSource . getCorsConfiguration ( new MockHttpServletRequest ( HttpMethod . GET . name ( ) , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.UnsupportedOperationException .class ) public void void ( ) { this . org.springframework.web.cors.UrlBasedCorsConfigurationSource . getCorsConfigurations ( ) . put ( STRING , new CorsConfiguration ( ) ) ; }  <METHOD_END>
