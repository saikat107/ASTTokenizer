<METHOD_START> @ Test public void void ( ) { assertTrue ( new ExpirationAttributesFactoryBean ( ) . isSingleton ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ExpirationAttributesFactoryBean org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean = new ExpirationAttributesFactoryBean ( ) ; assertEquals ( ExpirationAttributesFactoryBean . DEFAULT_EXPIRATION_ACTION , org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . getAction ( ) ) ; org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . setAction ( ExpirationAction . LOCAL_DESTROY ) ; assertEquals ( ExpirationAction . LOCAL_DESTROY , org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . getAction ( ) ) ; org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . setAction ( null ) ; assertEquals ( ExpirationAttributesFactoryBean . DEFAULT_EXPIRATION_ACTION , org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . getAction ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ExpirationAttributesFactoryBean org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean = new ExpirationAttributesFactoryBean ( ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . getTimeout ( ) ) ; org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . setTimeout ( NUMBER ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . getTimeout ( ) ) ; org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . setTimeout ( null ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . getTimeout ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ExpirationAttributesFactoryBean org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean = new ExpirationAttributesFactoryBean ( ) ; assertNull ( org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . getObject ( ) ) ; assertEquals ( ExpirationAttributes .class , org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . getObjectType ( ) ) ; org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . setAction ( ExpirationAction . DESTROY ) ; org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . setTimeout ( NUMBER ) ; org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . afterPropertiesSet ( ) ; ExpirationAttributes org.springframework.data.gemfire.expiration.ExpirationAttributes = org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . getObject ( ) ; assertNotNull ( org.springframework.data.gemfire.expiration.ExpirationAttributes ) ; assertEquals ( ExpirationAction . DESTROY , org.springframework.data.gemfire.expiration.ExpirationAttributes . getAction ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.expiration.ExpirationAttributes . getTimeout ( ) ) ; assertEquals ( org.springframework.data.gemfire.expiration.ExpirationAttributes . getClass ( ) , org.springframework.data.gemfire.expiration.ExpirationAttributesFactoryBean . getObjectType ( ) ) ; }  <METHOD_END>
