<METHOD_START> public static java.lang.ClassLoader java.lang.ClassLoader ( ) { java.lang.ClassLoader java.lang.ClassLoader = java.lang.ClassLoader . java.lang.ClassLoader ( ) ; return new java.net.URLClassLoader ( new java.net.URL [] { java.net.URL ( ) } , java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> public static java.net.URL java.net.URL ( ) { java.lang.String java.lang.String = java.lang.String ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { try { java.net.URL java.net.URL = new java.net.URL ( java.lang.String + STRING + java.lang.String ) ; if ( new java.io.File ( java.net.URL . java.net.URI ( ) ) . boolean ( ) ) { return java.net.URL ; } } catch ( java.lang.Exception java.lang.Exception ) { } } throw new java.lang.IllegalStateException ( STRING ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( ) { try { return new java.io.File ( java.lang.System . java.lang.String ( STRING ) ) . java.net.URI ( ) . java.net.URL ( ) . java.lang.String ( ) ; } catch ( java.net.MalformedURLException java.net.MalformedURLException ) { throw new java.lang.IllegalStateException ( STRING , java.net.MalformedURLException ) ; } }  <METHOD_END>
