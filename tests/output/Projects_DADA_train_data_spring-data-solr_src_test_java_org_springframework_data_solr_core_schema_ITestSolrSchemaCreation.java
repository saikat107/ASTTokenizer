<METHOD_START> @ Before public void void ( ) { this . org.springframework.data.solr.core.schema.SolrTemplate = new SolrTemplate ( org.springframework.data.solr.core.schema.EmbeddedSolrServer ) ; org.springframework.data.solr.core.schema.SolrTemplate . setSchemaCreationFeatures ( java.util.Collections . java.util.List ( Feature . CREATE_MISSING_FIELDS ) ) ; org.springframework.data.solr.core.schema.SolrTemplate . afterPropertiesSet ( ) ; org.springframework.data.solr.core.schema.SolrTemplate . delete ( new SimpleQuery ( STRING ) ) ; org.springframework.data.solr.core.schema.SolrTemplate . commit ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.data.solr.core.schema.SolrServerException , java.io.IOException { org.springframework.data.solr.core.schema.ITestSolrSchemaCreation.Foo org.springframework.data.solr.core.schema.ITestSolrSchemaCreation.Foo = new org.springframework.data.solr.core.schema.ITestSolrSchemaCreation.Foo ( ) ; org.springframework.data.solr.core.schema.ITestSolrSchemaCreation.Foo . java.lang.String = STRING ; org.springframework.data.solr.core.schema.SolrTemplate . saveBean ( org.springframework.data.solr.core.schema.ITestSolrSchemaCreation.Foo ) ; java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> < java.lang.String , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> = java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> ( ) ; assertThat ( ( java.lang.String ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( equalTo ( STRING ) ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.String ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( equalTo ( STRING ) ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.String ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( equalTo ( STRING ) ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.String ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( equalTo ( STRING ) ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.String ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( equalTo ( STRING ) ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; assertThat ( java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ( ) , hasItem ( java.util.Map<java.lang.String,java.lang.Object> ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.data.solr.core.schema.SolrServerException , java.io.IOException , java.lang.InterruptedException { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , true ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , false ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , true ) ; new AddField ( java.util.Map<java.lang.String,java.lang.Object> ) . process ( org.springframework.data.solr.core.schema.EmbeddedSolrServer . getSolrClient ( java.lang.String ) , java.lang.String ) ; org.springframework.data.solr.core.schema.ITestSolrSchemaCreation.Foo org.springframework.data.solr.core.schema.ITestSolrSchemaCreation.Foo = new org.springframework.data.solr.core.schema.ITestSolrSchemaCreation.Foo ( ) ; org.springframework.data.solr.core.schema.ITestSolrSchemaCreation.Foo . java.lang.String = STRING ; org.springframework.data.solr.core.schema.SolrTemplate . saveBean ( org.springframework.data.solr.core.schema.ITestSolrSchemaCreation.Foo ) ; java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> < java.lang.String , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> = java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> ( ) ; assertThat ( ( java.lang.String ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( equalTo ( STRING ) ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( nullValue ( ) ) ) ; assertThat ( ( java.lang.String ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( equalTo ( STRING ) ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.String ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( equalTo ( STRING ) ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.String ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( equalTo ( STRING ) ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( true ) ) ; assertThat ( ( java.lang.Boolean ) java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( STRING ) . java.lang.Object ( STRING ) , is ( false ) ) ; }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> < java.lang.String , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> ( ) org.springframework.data.solr.core.schema.SolrServerException , java.io.IOException { SchemaRepresentation org.springframework.data.solr.core.schema.SchemaRepresentation = new SchemaRequest ( ) . process ( org.springframework.data.solr.core.schema.EmbeddedSolrServer . getSolrClient ( java.lang.String ) , java.lang.String ) . getSchemaRepresentation ( ) ; java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> < java.lang.String , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> = new java.util.LinkedHashMap<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> <> ( ) ; for ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> : org.springframework.data.solr.core.schema.SchemaRepresentation . getFields ( ) ) { java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) . java.lang.String ( ) , java.util.Map<java.lang.String,java.lang.Object> ) ; } return java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>> ; }  <METHOD_END>
<METHOD_START> private java.util.List<java.util.Map<java.lang.String,java.lang.Object>> < java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ( ) org.springframework.data.solr.core.schema.SolrServerException , java.io.IOException { SchemaRepresentation org.springframework.data.solr.core.schema.SchemaRepresentation = new SchemaRequest ( ) . process ( org.springframework.data.solr.core.schema.EmbeddedSolrServer . getSolrClient ( java.lang.String ) , java.lang.String ) . getSchemaRepresentation ( ) ; return org.springframework.data.solr.core.schema.SchemaRepresentation . getCopyFields ( ) ; }  <METHOD_END>
