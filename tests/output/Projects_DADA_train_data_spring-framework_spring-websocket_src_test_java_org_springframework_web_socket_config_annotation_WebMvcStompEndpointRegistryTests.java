<METHOD_START> @ Before public void void ( ) { SubscribableChannel org.springframework.web.socket.config.annotation.SubscribableChannel = mock ( SubscribableChannel .class ) ; SubscribableChannel org.springframework.web.socket.config.annotation.SubscribableChannel = mock ( SubscribableChannel .class ) ; this . org.springframework.web.socket.config.annotation.SubProtocolWebSocketHandler = new SubProtocolWebSocketHandler ( org.springframework.web.socket.config.annotation.SubscribableChannel , org.springframework.web.socket.config.annotation.SubscribableChannel ) ; WebSocketTransportRegistration org.springframework.web.socket.config.annotation.WebSocketTransportRegistration = new WebSocketTransportRegistration ( ) ; TaskScheduler org.springframework.web.socket.config.annotation.TaskScheduler = mock ( TaskScheduler .class ) ; this . org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry = new WebMvcStompEndpointRegistry ( this . org.springframework.web.socket.config.annotation.SubProtocolWebSocketHandler , org.springframework.web.socket.config.annotation.WebSocketTransportRegistration , org.springframework.web.socket.config.annotation.TaskScheduler ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry . addEndpoint ( STRING ) ; java.util.Map<java.lang.String,org.springframework.web.socket.config.annotation.SubProtocolHandler> < java.lang.String , SubProtocolHandler > java.util.Map<java.lang.String,org.springframework.web.socket.config.annotation.SubProtocolHandler> = org.springframework.web.socket.config.annotation.SubProtocolWebSocketHandler . getProtocolHandlerMap ( ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,org.springframework.web.socket.config.annotation.SubProtocolHandler> . size ( ) ) ; assertNotNull ( java.util.Map<java.lang.String,org.springframework.web.socket.config.annotation.SubProtocolHandler> . get ( STRING ) ) ; assertNotNull ( java.util.Map<java.lang.String,org.springframework.web.socket.config.annotation.SubProtocolHandler> . get ( STRING ) ) ; assertNotNull ( java.util.Map<java.lang.String,org.springframework.web.socket.config.annotation.SubProtocolHandler> . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SimpleUrlHandlerMapping org.springframework.web.socket.config.annotation.SimpleUrlHandlerMapping = ( SimpleUrlHandlerMapping ) this . org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry . getHandlerMapping ( ) ; assertEquals ( NUMBER , org.springframework.web.socket.config.annotation.SimpleUrlHandlerMapping . getUrlMap ( ) . size ( ) ) ; UrlPathHelper org.springframework.web.socket.config.annotation.UrlPathHelper = new UrlPathHelper ( ) ; this . org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry . setUrlPathHelper ( org.springframework.web.socket.config.annotation.UrlPathHelper ) ; this . org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry . addEndpoint ( STRING ) ; this . org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry . addEndpoint ( STRING ) . withSockJS ( ) ; assertEquals ( NUMBER , this . org.springframework.web.socket.config.annotation.SubProtocolWebSocketHandler . getProtocolHandlers ( ) . size ( ) ) ; org.springframework.web.socket.config.annotation.SimpleUrlHandlerMapping = ( SimpleUrlHandlerMapping ) this . org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry . getHandlerMapping ( ) ; assertEquals ( NUMBER , org.springframework.web.socket.config.annotation.SimpleUrlHandlerMapping . getUrlMap ( ) . size ( ) ) ; assertNotNull ( org.springframework.web.socket.config.annotation.SimpleUrlHandlerMapping . getUrlMap ( ) . get ( STRING ) ) ; assertNotNull ( org.springframework.web.socket.config.annotation.SimpleUrlHandlerMapping . getUrlMap ( ) . get ( STRING ) ) ; assertSame ( org.springframework.web.socket.config.annotation.UrlPathHelper , org.springframework.web.socket.config.annotation.SimpleUrlHandlerMapping . getUrlPathHelper ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { StompSubProtocolErrorHandler org.springframework.web.socket.config.annotation.StompSubProtocolErrorHandler = mock ( StompSubProtocolErrorHandler .class ) ; this . org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry . setErrorHandler ( org.springframework.web.socket.config.annotation.StompSubProtocolErrorHandler ) ; this . org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry . addEndpoint ( STRING ) ; java.util.Map<java.lang.String,org.springframework.web.socket.config.annotation.SubProtocolHandler> < java.lang.String , SubProtocolHandler > java.util.Map<java.lang.String,org.springframework.web.socket.config.annotation.SubProtocolHandler> = this . org.springframework.web.socket.config.annotation.SubProtocolWebSocketHandler . getProtocolHandlerMap ( ) ; StompSubProtocolHandler org.springframework.web.socket.config.annotation.StompSubProtocolHandler = ( StompSubProtocolHandler ) java.util.Map<java.lang.String,org.springframework.web.socket.config.annotation.SubProtocolHandler> . get ( STRING ) ; assertSame ( org.springframework.web.socket.config.annotation.StompSubProtocolErrorHandler , org.springframework.web.socket.config.annotation.StompSubProtocolHandler . getErrorHandler ( ) ) ; }  <METHOD_END>
