<METHOD_START> public void ( java.lang.Class<T> < T > java.lang.Class<T> ) { Assert . notNull ( java.lang.Class<T> , STRING ) ; this . java.lang.Class<T> = java.lang.Class<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<T> < T > java.lang.Class<T> ( ) { return java.lang.Class<T> ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { Entity org.springframework.data.jpa.repository.query.Entity = AnnotatedElementUtils . findMergedAnnotation ( java.lang.Class<T> , Entity .class ) ; boolean boolean = null != org.springframework.data.jpa.repository.query.Entity && StringUtils . hasText ( org.springframework.data.jpa.repository.query.Entity . name ( ) ) ; return boolean ? org.springframework.data.jpa.repository.query.Entity . name ( ) : java.lang.Class<T> . java.lang.String ( ) ; }  <METHOD_END>
