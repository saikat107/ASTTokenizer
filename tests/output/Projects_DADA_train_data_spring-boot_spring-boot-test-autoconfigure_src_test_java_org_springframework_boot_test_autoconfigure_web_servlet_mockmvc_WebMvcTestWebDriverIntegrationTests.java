<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebDriver . get ( STRING ) ; WebElement org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebElement = this . org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebDriver . findElement ( By . tagName ( STRING ) ) ; assertThat ( org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebElement . getText ( ) ) . isEqualTo ( STRING ) ; org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestWebDriverIntegrationTests . org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebDriver = this . org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebDriver ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebDriver . get ( STRING ) ; WebElement org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebElement = this . org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebDriver . findElement ( By . tagName ( STRING ) ) ; assertThat ( org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebElement . getText ( ) ) . isEqualTo ( STRING ) ; try { ReflectionTestUtils . invokeMethod ( org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebDriver , STRING ) ; fail ( STRING ) ; } catch ( NoSuchWindowException org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.NoSuchWindowException ) { } assertThat ( org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebDriver ) . isNotNull ( ) . isNotSameAs ( this . org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebDriver ) ; }  <METHOD_END>
