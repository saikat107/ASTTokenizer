<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) { OrderedAwareCopyOnWriteArraySet org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet = new OrderedAwareCopyOnWriteArraySet ( ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( STRING ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( STRING ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( STRING ) ; assertEquals ( NUMBER , org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . size ( ) ) ; java.lang.Object [] java.lang.Object[] = org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . toArray ( ) ; assertEquals ( STRING , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( STRING , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( STRING , java.lang.Object[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) { OrderedAwareCopyOnWriteArraySet org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet = new OrderedAwareCopyOnWriteArraySet ( ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . LOWEST_PRECEDENCE ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . LOWEST_PRECEDENCE ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . HIGHEST_PRECEDENCE ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . HIGHEST_PRECEDENCE ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; assertEquals ( NUMBER , org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . size ( ) ) ; java.lang.Object [] java.lang.Object[] = org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . toArray ( ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) { java.util.List java.util.List = new java.util.ArrayList ( ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = STRING ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . LOWEST_PRECEDENCE ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . LOWEST_PRECEDENCE ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . HIGHEST_PRECEDENCE ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . HIGHEST_PRECEDENCE ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = STRING ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; assertEquals ( NUMBER , java.util.List . int ( ) ) ; OrderedAwareCopyOnWriteArraySet org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet = new OrderedAwareCopyOnWriteArraySet ( ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . addAll ( java.util.List ) ; java.lang.Object [] java.lang.Object[] = org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . toArray ( ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( java.lang.Object , java.lang.Object[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { for ( int int = NUMBER ; int < NUMBER ; int ++ ) { this . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private void void ( ) { final OrderedAwareCopyOnWriteArraySet org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet = new OrderedAwareCopyOnWriteArraySet ( ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . LOWEST_PRECEDENCE ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . LOWEST_PRECEDENCE ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . HIGHEST_PRECEDENCE ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . HIGHEST_PRECEDENCE ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Thread java.lang.Thread = new java.lang.Thread ( ( ) { org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; } ) ; java.lang.Thread java.lang.Thread = new java.lang.Thread ( ( ) { org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( java.lang.Object ) ; } ) ; java.lang.Thread java.lang.Thread = new java.lang.Thread ( ( ) { org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( NUMBER ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( NUMBER ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( NUMBER ) ; } ) ; java.lang.Thread . void ( ) ; java.lang.Thread . void ( ) ; java.lang.Thread . void ( ) ; try { java.lang.Thread . void ( ) ; java.lang.Thread . void ( ) ; java.lang.Thread . void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; throw new java.lang.RuntimeException ( java.lang.Exception ) ; } assertEquals ( NUMBER , org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { for ( int int = NUMBER ; int < NUMBER ; int ++ ) { this . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { final java.util.List java.util.List = new java.util.ArrayList ( ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = STRING ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . LOWEST_PRECEDENCE ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . LOWEST_PRECEDENCE ) ; final java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . HIGHEST_PRECEDENCE ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( Ordered . HIGHEST_PRECEDENCE ) ; java.lang.Object java.lang.Object = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.lang.Object java.lang.Object = STRING ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; java.util.List . boolean ( java.lang.Object ) ; final OrderedAwareCopyOnWriteArraySet org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet = new OrderedAwareCopyOnWriteArraySet ( ) ; java.lang.Thread java.lang.Thread = new java.lang.Thread ( ( ) { org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . addAll ( java.util.List ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . remove ( java.lang.Object ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . remove ( java.lang.Object ) ; } ) ; final java.util.List java.util.List = new java.util.ArrayList ( ) ; final org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo = new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ; java.util.List . boolean ( org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ) ; java.util.List . boolean ( org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ) ; java.util.List . boolean ( new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ) ; java.util.List . boolean ( new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ) ; java.util.List . boolean ( NUMBER ) ; java.util.List . boolean ( new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ) ; java.util.List . boolean ( NUMBER ) ; java.util.List . boolean ( NUMBER ) ; java.util.List . boolean ( new org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ( NUMBER ) ) ; java.lang.Thread java.lang.Thread = new java.lang.Thread ( ( ) { org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . addAll ( java.util.List ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . remove ( org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySetTests.Foo ) ; } ) ; java.lang.Thread java.lang.Thread = new java.lang.Thread ( ( ) { org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( STRING ) ; org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . add ( STRING ) ; } ) ; java.lang.Thread . void ( ) ; java.lang.Thread . void ( ) ; java.lang.Thread . void ( ) ; try { java.lang.Thread . void ( ) ; java.lang.Thread . void ( ) ; java.lang.Thread . void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; throw new java.lang.RuntimeException ( java.lang.Exception ) ; } java.lang.Object [] java.lang.Object[] = org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet . toArray ( ) ; assertEquals ( NUMBER , java.lang.Object[] . int ) ; }  <METHOD_END>
<METHOD_START> void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + int ; }  <METHOD_END>
