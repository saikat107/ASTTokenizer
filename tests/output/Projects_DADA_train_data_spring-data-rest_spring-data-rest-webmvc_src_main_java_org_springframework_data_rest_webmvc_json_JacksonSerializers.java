<METHOD_START> public void ( EnumTranslator org.springframework.data.rest.webmvc.json.EnumTranslator ) { Assert . notNull ( org.springframework.data.rest.webmvc.json.EnumTranslator , STRING ) ; SimpleSerializers org.springframework.data.rest.webmvc.json.SimpleSerializers = new SimpleSerializers ( ) ; org.springframework.data.rest.webmvc.json.SimpleSerializers . addSerializer ( java.lang.Enum .class , new org.springframework.data.rest.webmvc.json.JacksonSerializers.EnumTranslatingSerializer ( org.springframework.data.rest.webmvc.json.EnumTranslator ) ) ; setSerializers ( org.springframework.data.rest.webmvc.json.SimpleSerializers ) ; SimpleDeserializers org.springframework.data.rest.webmvc.json.SimpleDeserializers = new SimpleDeserializers ( ) ; org.springframework.data.rest.webmvc.json.SimpleDeserializers . addDeserializer ( java.lang.Enum .class , new org.springframework.data.rest.webmvc.json.JacksonSerializers.EnumTranslatingDeserializer ( org.springframework.data.rest.webmvc.json.EnumTranslator ) ) ; setDeserializers ( org.springframework.data.rest.webmvc.json.SimpleDeserializers ) ; }  <METHOD_END>
<METHOD_START> public void ( EnumTranslator org.springframework.data.rest.webmvc.json.EnumTranslator ) { super( java.lang.Enum .class ); Assert . notNull ( org.springframework.data.rest.webmvc.json.EnumTranslator , STRING ) ; this . org.springframework.data.rest.webmvc.json.EnumTranslator = org.springframework.data.rest.webmvc.json.EnumTranslator ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Enum java.lang.Enum , JsonGenerator org.springframework.data.rest.webmvc.json.JsonGenerator , SerializerProvider org.springframework.data.rest.webmvc.json.SerializerProvider ) throws java.io.IOException { org.springframework.data.rest.webmvc.json.JsonGenerator . writeString ( org.springframework.data.rest.webmvc.json.EnumTranslator . asText ( java.lang.Enum ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.webmvc.json.JsonSchemaProperty org.springframework.data.rest.webmvc.json.JsonSchemaProperty ( JsonSchemaProperty org.springframework.data.rest.webmvc.json.JsonSchemaProperty , TypeInformation < ? > org.springframework.data.rest.webmvc.json.TypeInformation<?> ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; for ( java.lang.Object java.lang.Object : org.springframework.data.rest.webmvc.json.TypeInformation<> . getType ( ) . getEnumConstants ( ) ) { java.util.List<java.lang.String> . boolean ( org.springframework.data.rest.webmvc.json.EnumTranslator . asText ( ( java.lang.Enum<?> < ? > ) java.lang.Object ) ) ; } return ( ( EnumProperty ) org.springframework.data.rest.webmvc.json.JsonSchemaProperty ) . withValues ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public void ( EnumTranslator org.springframework.data.rest.webmvc.json.EnumTranslator ) { this( org.springframework.data.rest.webmvc.json.EnumTranslator , null ); }  <METHOD_END>
<METHOD_START> public void ( EnumTranslator org.springframework.data.rest.webmvc.json.EnumTranslator , BeanProperty org.springframework.data.rest.webmvc.json.BeanProperty ) { super( java.lang.Enum .class ); Assert . notNull ( org.springframework.data.rest.webmvc.json.EnumTranslator , STRING ) ; this . org.springframework.data.rest.webmvc.json.EnumTranslator = org.springframework.data.rest.webmvc.json.EnumTranslator ; this . org.springframework.data.rest.webmvc.json.BeanProperty = org.springframework.data.rest.webmvc.json.BeanProperty ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.webmvc.json.JsonDeserializer<?> < ? > org.springframework.data.rest.webmvc.json.JsonDeserializer<?> ( DeserializationContext org.springframework.data.rest.webmvc.json.DeserializationContext , BeanProperty org.springframework.data.rest.webmvc.json.BeanProperty )				throws org.springframework.data.rest.webmvc.json.JsonMappingException { return new org.springframework.data.rest.webmvc.json.JacksonSerializers.EnumTranslatingDeserializer ( org.springframework.data.rest.webmvc.json.EnumTranslator , org.springframework.data.rest.webmvc.json.BeanProperty ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.lang.Enum java.lang.Enum ( JsonParser org.springframework.data.rest.webmvc.json.JsonParser , DeserializationContext org.springframework.data.rest.webmvc.json.DeserializationContext ) throws java.io.IOException , org.springframework.data.rest.webmvc.json.JsonProcessingException { if ( org.springframework.data.rest.webmvc.json.BeanProperty == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } return org.springframework.data.rest.webmvc.json.EnumTranslator . fromText ( ( java.lang.Class<? extends java.lang.Enum<?>> < ? extends java.lang.Enum<?> < ? > > ) org.springframework.data.rest.webmvc.json.JavaType ( org.springframework.data.rest.webmvc.json.BeanProperty . getType ( ) ) . getRawClass ( ) , org.springframework.data.rest.webmvc.json.JsonParser . getText ( ) ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.data.rest.webmvc.json.JavaType org.springframework.data.rest.webmvc.json.JavaType ( JavaType org.springframework.data.rest.webmvc.json.JavaType ) { return org.springframework.data.rest.webmvc.json.JavaType . isContainerType ( ) ? org.springframework.data.rest.webmvc.json.JavaType . getContentType ( ) : org.springframework.data.rest.webmvc.json.JavaType ; }  <METHOD_END>
