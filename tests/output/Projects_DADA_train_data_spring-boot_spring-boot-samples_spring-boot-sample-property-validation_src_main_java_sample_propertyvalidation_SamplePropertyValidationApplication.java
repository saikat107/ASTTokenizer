<METHOD_START> public void ( SampleProperties sample.propertyvalidation.SampleProperties ) { this . sample.propertyvalidation.SampleProperties = sample.propertyvalidation.SampleProperties ; }  <METHOD_END>
<METHOD_START> @ Bean public static sample.propertyvalidation.Validator sample.propertyvalidation.Validator ( ) { return new SamplePropertiesValidator ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String ... java.lang.String[] ) { java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.System . java.io.PrintStream . void ( STRING + this . sample.propertyvalidation.SampleProperties . getHost ( ) ) ; java.lang.System . java.io.PrintStream . void ( STRING + this . sample.propertyvalidation.SampleProperties . getPort ( ) ) ; java.lang.System . java.io.PrintStream . void ( STRING ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String [] java.lang.String[] ) throws java.lang.Exception { new SpringApplicationBuilder ( sample.propertyvalidation.SamplePropertyValidationApplication .class ) . run ( java.lang.String[] ) ; }  <METHOD_END>
