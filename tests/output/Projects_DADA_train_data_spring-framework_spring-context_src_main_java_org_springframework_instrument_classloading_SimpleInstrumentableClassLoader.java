<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { super( java.lang.ClassLoader ); this . org.springframework.instrument.classloading.WeavingTransformer = new WeavingTransformer ( java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.instrument.ClassFileTransformer java.lang.instrument.ClassFileTransformer ) { this . org.springframework.instrument.classloading.WeavingTransformer . addTransformer ( java.lang.instrument.ClassFileTransformer ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected byte [] byte[] ( java.lang.String java.lang.String , byte [] byte[] ) { return this . org.springframework.instrument.classloading.WeavingTransformer . transformIfNecessary ( java.lang.String , byte[] ) ; }  <METHOD_END>
