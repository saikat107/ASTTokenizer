<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<javax.management.ObjectName> < javax.management.ObjectName > java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; javax.management.ObjectName javax.management.ObjectName = java.util.Set<javax.management.ObjectName> . java.util.Iterator<javax.management.ObjectName> ( ) . javax.management.ObjectName ( ) ; assertEquals ( STRING , javax.management.ObjectName . java.lang.String ( ) ) ; javax.management.MBeanInfo javax.management.MBeanInfo = javax.management.MBeanServer . javax.management.MBeanInfo ( javax.management.ObjectName ) ; assertEquals ( STRING , javax.management.MBeanInfo . java.lang.String ( ) ) ; java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; javax.management.ObjectName = java.util.Set<javax.management.ObjectName> . java.util.Iterator<javax.management.ObjectName> ( ) . javax.management.ObjectName ( ) ; assertEquals ( STRING , javax.management.ObjectName . java.lang.String ( ) ) ; javax.management.MBeanInfo = javax.management.MBeanServer . javax.management.MBeanInfo ( javax.management.ObjectName ) ; assertEquals ( STRING , javax.management.MBeanInfo . java.lang.String ( ) ) ; javax.management.Descriptor javax.management.Descriptor = javax.management.MBeanInfo . javax.management.Descriptor ( ) ; assertEquals ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; javax.management.ObjectName = java.util.Set<javax.management.ObjectName> . java.util.Iterator<javax.management.ObjectName> ( ) . javax.management.ObjectName ( ) ; assertEquals ( STRING , javax.management.ObjectName . java.lang.String ( ) ) ; java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; javax.management.ObjectName = java.util.Set<javax.management.ObjectName> . java.util.Iterator<javax.management.ObjectName> ( ) . javax.management.ObjectName ( ) ; assertEquals ( STRING , javax.management.ObjectName . java.lang.String ( ) ) ; java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; java.util.Iterator<javax.management.ObjectName> < javax.management.ObjectName > java.util.Iterator<javax.management.ObjectName> = java.util.Set<javax.management.ObjectName> . java.util.Iterator<javax.management.ObjectName> ( ) ; javax.management.ObjectName = java.util.Iterator<javax.management.ObjectName> . javax.management.ObjectName ( ) ; assertEquals ( STRING , javax.management.ObjectName . java.lang.String ( ) ) ; javax.management.ObjectName = java.util.Iterator<javax.management.ObjectName> . javax.management.ObjectName ( ) ; assertEquals ( STRING , javax.management.ObjectName . java.lang.String ( ) ) ; assertTrue ( AopUtils . isJdkDynamicProxy ( this . org.springframework.integration.jmx.config.MessageHandler ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( Message < ? > org.springframework.integration.jmx.config.Message<?> , long long ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message < ? > org.springframework.integration.jmx.config.Message<?> ) throws java.lang.Exception {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( Message < ? > org.springframework.integration.jmx.config.Message<?> ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Message < ? > org.springframework.integration.jmx.config.Message<?> ) throws java.lang.Exception {		}  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.integration.jmx.config.PlatformTransactionManager org.springframework.integration.jmx.config.PlatformTransactionManager ( ) { return mock ( PlatformTransactionManager .class ) ; }  <METHOD_END>
