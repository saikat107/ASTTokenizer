<METHOD_START> void ( Environment org.springframework.boot.logging.logback.Environment ) { this . org.springframework.boot.logging.logback.Environment = org.springframework.boot.logging.logback.Environment ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( InterpretationContext org.springframework.boot.logging.logback.InterpretationContext , java.lang.String java.lang.String , org.xml.sax.Attributes org.xml.sax.Attributes )			throws org.springframework.boot.logging.logback.ActionException { java.lang.String java.lang.String = org.xml.sax.Attributes . java.lang.String ( NAME_ATTRIBUTE ) ; java.lang.String java.lang.String = org.xml.sax.Attributes . java.lang.String ( java.lang.String ) ; Scope org.springframework.boot.logging.logback.Scope = ActionUtil . stringToScope ( org.xml.sax.Attributes . java.lang.String ( SCOPE_ATTRIBUTE ) ) ; java.lang.String java.lang.String = org.xml.sax.Attributes . java.lang.String ( java.lang.String ) ; if ( OptionHelper . isEmpty ( java.lang.String ) || OptionHelper . isEmpty ( java.lang.String ) ) { addError ( STRING ) ; } ActionUtil . setProperty ( org.springframework.boot.logging.logback.InterpretationContext , java.lang.String , java.lang.String ( java.lang.String , java.lang.String ) , org.springframework.boot.logging.logback.Scope ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { if ( this . org.springframework.boot.logging.logback.Environment == null ) { addWarn ( STRING + java.lang.String ) ; return java.lang.String ; } java.lang.String java.lang.String = this . org.springframework.boot.logging.logback.Environment . getProperty ( java.lang.String ) ; if ( java.lang.String != null ) { return java.lang.String ; } int int = java.lang.String . int ( STRING ) ; if ( int > NUMBER ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( NUMBER , int + NUMBER ) ; RelaxedPropertyResolver org.springframework.boot.logging.logback.RelaxedPropertyResolver = new RelaxedPropertyResolver ( this . org.springframework.boot.logging.logback.Environment , java.lang.String ) ; return org.springframework.boot.logging.logback.RelaxedPropertyResolver . getProperty ( java.lang.String . java.lang.String ( int + NUMBER ) , java.lang.String ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( InterpretationContext org.springframework.boot.logging.logback.InterpretationContext , java.lang.String java.lang.String ) throws org.springframework.boot.logging.logback.ActionException {	}  <METHOD_END>
