<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { this( new AuditEvent ( java.lang.String , java.lang.String , java.util.Map<java.lang.String,java.lang.Object> ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String ... java.lang.String[] ) { this( new AuditEvent ( java.lang.String , java.lang.String , java.lang.String[] ) ); }  <METHOD_END>
<METHOD_START> public void ( java.util.Date java.util.Date , java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { this( new AuditEvent ( java.util.Date , java.lang.String , java.lang.String , java.util.Map<java.lang.String,java.lang.Object> ) ); }  <METHOD_END>
<METHOD_START> public void ( AuditEvent org.springframework.boot.actuate.audit.listener.AuditEvent ) { super( org.springframework.boot.actuate.audit.listener.AuditEvent ); Assert . notNull ( org.springframework.boot.actuate.audit.listener.AuditEvent , STRING ) ; this . org.springframework.boot.actuate.audit.listener.AuditEvent = org.springframework.boot.actuate.audit.listener.AuditEvent ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.audit.listener.AuditEvent org.springframework.boot.actuate.audit.listener.AuditEvent ( ) { return this . org.springframework.boot.actuate.audit.listener.AuditEvent ; }  <METHOD_END>
