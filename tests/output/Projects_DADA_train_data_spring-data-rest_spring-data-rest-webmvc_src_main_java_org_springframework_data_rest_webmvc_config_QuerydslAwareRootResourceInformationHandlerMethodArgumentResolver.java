<METHOD_START> public void ( Repositories org.springframework.data.rest.webmvc.config.Repositories , RepositoryInvokerFactory org.springframework.data.rest.webmvc.config.RepositoryInvokerFactory , ResourceMetadataHandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.ResourceMetadataHandlerMethodArgumentResolver , QuerydslPredicateBuilder org.springframework.data.rest.webmvc.config.QuerydslPredicateBuilder , QuerydslBindingsFactory org.springframework.data.rest.webmvc.config.QuerydslBindingsFactory ) { super( org.springframework.data.rest.webmvc.config.Repositories , org.springframework.data.rest.webmvc.config.RepositoryInvokerFactory , org.springframework.data.rest.webmvc.config.ResourceMetadataHandlerMethodArgumentResolver ); this . org.springframework.data.rest.webmvc.config.Repositories = org.springframework.data.rest.webmvc.config.Repositories ; this . org.springframework.data.rest.webmvc.config.QuerydslPredicateBuilder = org.springframework.data.rest.webmvc.config.QuerydslPredicateBuilder ; this . org.springframework.data.rest.webmvc.config.QuerydslBindingsFactory = org.springframework.data.rest.webmvc.config.QuerydslBindingsFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING } ) protected org.springframework.data.rest.webmvc.config.RepositoryInvoker org.springframework.data.rest.webmvc.config.RepositoryInvoker ( MethodParameter org.springframework.data.rest.webmvc.config.MethodParameter , RepositoryInvoker org.springframework.data.rest.webmvc.config.RepositoryInvoker , java.lang.Class<?> < ? > java.lang.Class<?> , java.util.Map<java.lang.String,java.lang.String[]> < java.lang.String , java.lang.String [] > java.util.Map<java.lang.String,java.lang.String[]> ) { if ( ! org.springframework.data.rest.webmvc.config.MethodParameter . hasParameterAnnotation ( QuerydslPredicate .class ) ) { return org.springframework.data.rest.webmvc.config.RepositoryInvoker ; } return org.springframework.data.rest.webmvc.config.Repositories . getRepositoryFor ( java.lang.Class<> ) . filter ( it -> QuerydslPredicateExecutor .class . isInstance ( it ) ) . map ( it -> { ClassTypeInformation < ? > type = ClassTypeInformation . from ( domainType ) ; QuerydslBindings bindings = factory . createBindingsFor ( type ) ; Predicate predicate = predicateBuilder . getPredicate ( type , toMultiValueMap ( parameters ) , bindings ) ; return ( RepositoryInvoker ) new QuerydslRepositoryInvokerAdapter ( invoker , ( QuerydslPredicateExecutor < Object > ) it , predicate ) ; } ) . orElse ( org.springframework.data.rest.webmvc.config.RepositoryInvoker ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.data.rest.webmvc.config.MultiValueMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.data.rest.webmvc.config.MultiValueMap<java.lang.String,java.lang.String> ( java.util.Map<java.lang.String,java.lang.String[]> < java.lang.String , java.lang.String [] > java.util.Map<java.lang.String,java.lang.String[]> ) { MultiValueMap < java.lang.String , java.lang.String > org.springframework.data.rest.webmvc.config.MultiValueMap<java.lang.String,java.lang.String> = new LinkedMultiValueMap < java.lang.String , java.lang.String > ( ) ; for ( java.util.Map.Entry<java.lang.String,java.lang.String[]> < java.lang.String , java.lang.String [] > java.util.Map.Entry<java.lang.String,java.lang.String[]> : java.util.Map<java.lang.String,java.lang.String[]> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String[]>> ( ) ) { org.springframework.data.rest.webmvc.config.MultiValueMap<java.lang.String,java.lang.String> . put ( java.util.Map.Entry<java.lang.String,java.lang.String[]> . java.lang.String ( ) , java.util.Arrays . java.util.List<java.lang.String> ( java.util.Map.Entry<java.lang.String,java.lang.String[]> . java.lang.String[] ( ) ) ) ; } return org.springframework.data.rest.webmvc.config.MultiValueMap<java.lang.String,java.lang.String> ; }  <METHOD_END>
