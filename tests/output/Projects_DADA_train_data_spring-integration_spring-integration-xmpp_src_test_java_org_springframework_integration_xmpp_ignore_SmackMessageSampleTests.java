<METHOD_START> @ Test @ Ignore public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.xmpp.ignore.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.xmpp.ignore.SmackMessageSampleTests> ( ) ) ; MessageChannel org.springframework.integration.xmpp.ignore.MessageChannel = org.springframework.integration.xmpp.ignore.ClassPathXmlApplicationContext . getBean ( STRING , MessageChannel .class ) ; org . org.jivesoftware . org.jivesoftware . org.jivesoftware . org.jivesoftware org.jivesoftware.smack.packet.Message = new org . org.jivesoftware . org.jivesoftware . org.jivesoftware . org.jivesoftware ( STRING ) ; org.jivesoftware.smack.packet.Message . setBody ( STRING ) ; Message < org . org.jivesoftware . org.jivesoftware . org.jivesoftware . org.jivesoftware > org.springframework.integration.xmpp.ignore.Message<org.jivesoftware.smack.packet.Message> = new GenericMessage < org . org.jivesoftware . org.jivesoftware . org.jivesoftware . org.jivesoftware > ( org.jivesoftware.smack.packet.Message ) ; org.springframework.integration.xmpp.ignore.MessageChannel . send ( org.springframework.integration.xmpp.ignore.Message<org.jivesoftware.smack.packet.Message> ) ; org.springframework.integration.xmpp.ignore.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
