<METHOD_START> protected java.lang.Class<?> < ? > java.lang.Class<?> ( final FactoryBean < ? > org.springframework.beans.factory.support.FactoryBean<?> ) { try { if ( java.lang.System . java.lang.SecurityManager ( ) != null ) { return java.security.AccessController . java.lang.Class<?> ( new java.security.PrivilegedAction<java.lang.Class<?>> < java.lang.Class<?> < ? > > ( ) { @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.beans.factory.support.FactoryBean<> . getObjectType ( ) ; } } , java.security.AccessControlContext ( ) ) ; } else { return org.springframework.beans.factory.support.FactoryBean<> . getObjectType ( ) ; } } catch ( java.lang.Throwable java.lang.Throwable ) { logger . warn ( STRING + STRING , java.lang.Throwable ) ; return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.beans.factory.support.FactoryBean<> . getObjectType ( ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { java.lang.Object java.lang.Object = this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; return ( java.lang.Object != NULL_OBJECT ? java.lang.Object : null ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( FactoryBean < ? > org.springframework.beans.factory.support.FactoryBean<?> , java.lang.String java.lang.String , boolean boolean ) { if ( org.springframework.beans.factory.support.FactoryBean<> . isSingleton ( ) && containsSingleton ( java.lang.String ) ) { synchronized ( getSingletonMutex ( ) ) { java.lang.Object java.lang.Object = this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; if ( java.lang.Object == null ) { java.lang.Object = java.lang.Object ( org.springframework.beans.factory.support.FactoryBean<> , java.lang.String ) ; java.lang.Object java.lang.Object = this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; if ( java.lang.Object != null ) { java.lang.Object = java.lang.Object ; } else { if ( java.lang.Object != null && boolean ) { try { java.lang.Object = java.lang.Object ( java.lang.Object , java.lang.String ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { throw new BeanCreationException ( java.lang.String , STRING , java.lang.Throwable ) ; } } this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , ( java.lang.Object != null ? java.lang.Object : NULL_OBJECT ) ) ; } } return ( java.lang.Object != NULL_OBJECT ? java.lang.Object : null ) ; } } else { java.lang.Object java.lang.Object = java.lang.Object ( org.springframework.beans.factory.support.FactoryBean<> , java.lang.String ) ; if ( java.lang.Object != null && boolean ) { try { java.lang.Object = java.lang.Object ( java.lang.Object , java.lang.String ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { throw new BeanCreationException ( java.lang.String , STRING , java.lang.Throwable ) ; } } return java.lang.Object ; } }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( final FactoryBean < ? > org.springframework.beans.factory.support.FactoryBean<?> , final java.lang.String java.lang.String )			throws org.springframework.beans.factory.support.BeanCreationException { java.lang.Object java.lang.Object ; try { if ( java.lang.System . java.lang.SecurityManager ( ) != null ) { java.security.AccessControlContext java.security.AccessControlContext = java.security.AccessControlContext ( ) ; try { java.lang.Object = java.security.AccessController . java.lang.Object ( new java.security.PrivilegedExceptionAction<java.lang.Object> < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( ) java.lang.Exception { return org.springframework.beans.factory.support.FactoryBean<> . getObject ( ) ; } } , java.security.AccessControlContext ) ; } catch ( java.security.PrivilegedActionException java.security.PrivilegedActionException ) { throw java.security.PrivilegedActionException . java.lang.Exception ( ) ; } } else { java.lang.Object = org.springframework.beans.factory.support.FactoryBean<> . getObject ( ) ; } } catch ( FactoryBeanNotInitializedException org.springframework.beans.factory.support.FactoryBeanNotInitializedException ) { throw new BeanCurrentlyInCreationException ( java.lang.String , org.springframework.beans.factory.support.FactoryBeanNotInitializedException . toString ( ) ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { throw new BeanCreationException ( java.lang.String , STRING , java.lang.Throwable ) ; } if ( java.lang.Object == null && isSingletonCurrentlyInCreation ( java.lang.String ) ) { throw new BeanCurrentlyInCreationException ( java.lang.String , STRING ) ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) java.lang.Exception { return org.springframework.beans.factory.support.FactoryBean<> . getObject ( ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.beans.factory.support.BeansException { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> protected org.springframework.beans.factory.support.FactoryBean<?> < ? > org.springframework.beans.factory.support.FactoryBean<?> ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) throws org.springframework.beans.factory.support.BeansException { if ( ! ( java.lang.Object instanceof FactoryBean ) ) { throw new BeanCreationException ( java.lang.String , STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) + STRING ) ; } return ( FactoryBean < ? > ) java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String ) { super. removeSingleton ( java.lang.String ) ; this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected java.security.AccessControlContext java.security.AccessControlContext ( ) { return java.security.AccessController . java.security.AccessControlContext ( ) ; }  <METHOD_END>
