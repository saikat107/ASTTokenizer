<METHOD_START> public void ( MessageGroupProcessor org.springframework.integration.aggregator.MessageGroupProcessor , MessageGroupStore org.springframework.integration.aggregator.MessageGroupStore , CorrelationStrategy org.springframework.integration.aggregator.CorrelationStrategy , ReleaseStrategy org.springframework.integration.aggregator.ReleaseStrategy ) { super( org.springframework.integration.aggregator.MessageGroupProcessor , org.springframework.integration.aggregator.MessageGroupStore , org.springframework.integration.aggregator.CorrelationStrategy , org.springframework.integration.aggregator.ReleaseStrategy ); }  <METHOD_END>
<METHOD_START> public void ( MessageGroupProcessor org.springframework.integration.aggregator.MessageGroupProcessor , MessageGroupStore org.springframework.integration.aggregator.MessageGroupStore ) { super( org.springframework.integration.aggregator.MessageGroupProcessor , org.springframework.integration.aggregator.MessageGroupStore ); }  <METHOD_END>
<METHOD_START> public void ( MessageGroupProcessor org.springframework.integration.aggregator.MessageGroupProcessor ) { super( org.springframework.integration.aggregator.MessageGroupProcessor ); }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( MessageGroup org.springframework.integration.aggregator.MessageGroup , java.util.Collection<org.springframework.integration.aggregator.Message<?>> < Message < ? > > java.util.Collection<org.springframework.integration.aggregator.Message<?>> ) { java.lang.Object java.lang.Object = org.springframework.integration.aggregator.MessageGroup . getGroupId ( ) ; MessageGroupStore org.springframework.integration.aggregator.MessageGroupStore = getMessageStore ( ) ; org.springframework.integration.aggregator.MessageGroupStore . completeGroup ( java.lang.Object ) ; if ( this . boolean ) { remove ( org.springframework.integration.aggregator.MessageGroup ) ; } else { if ( org.springframework.integration.aggregator.MessageGroupStore instanceof SimpleMessageStore ) { ( ( SimpleMessageStore ) org.springframework.integration.aggregator.MessageGroupStore ) . clearMessageGroup ( java.lang.Object ) ; } else { org.springframework.integration.aggregator.MessageGroupStore . removeMessagesFromGroup ( java.lang.Object , org.springframework.integration.aggregator.MessageGroup . getMessages ( ) ) ; } } }  <METHOD_END>
