<METHOD_START> public void ( ObjectProvider < ReservoirFactory > org.springframework.boot.actuate.autoconfigure.ObjectProvider<org.springframework.boot.actuate.autoconfigure.ReservoirFactory> ) { this . org.springframework.boot.actuate.autoconfigure.ReservoirFactory = org.springframework.boot.actuate.autoconfigure.ObjectProvider<org.springframework.boot.actuate.autoconfigure.ReservoirFactory> . getIfAvailable ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public org.springframework.boot.actuate.autoconfigure.MetricRegistry org.springframework.boot.actuate.autoconfigure.MetricRegistry ( ) { return new MetricRegistry ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( { DropwizardMetricServices .class , CounterService .class , GaugeService .class } ) public org.springframework.boot.actuate.autoconfigure.DropwizardMetricServices org.springframework.boot.actuate.autoconfigure.DropwizardMetricServices ( MetricRegistry org.springframework.boot.actuate.autoconfigure.MetricRegistry ) { if ( this . org.springframework.boot.actuate.autoconfigure.ReservoirFactory == null ) { return new DropwizardMetricServices ( org.springframework.boot.actuate.autoconfigure.MetricRegistry ) ; } else { return new DropwizardMetricServices ( org.springframework.boot.actuate.autoconfigure.MetricRegistry , this . org.springframework.boot.actuate.autoconfigure.ReservoirFactory ) ; } }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.MetricReaderPublicMetrics org.springframework.boot.actuate.autoconfigure.MetricReaderPublicMetrics ( MetricRegistry org.springframework.boot.actuate.autoconfigure.MetricRegistry ) { MetricRegistryMetricReader org.springframework.boot.actuate.autoconfigure.MetricRegistryMetricReader = new MetricRegistryMetricReader ( org.springframework.boot.actuate.autoconfigure.MetricRegistry ) ; return new MetricReaderPublicMetrics ( org.springframework.boot.actuate.autoconfigure.MetricRegistryMetricReader ) ; }  <METHOD_END>
