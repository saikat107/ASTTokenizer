<METHOD_START> private javax.management.remote.JMXServiceURL javax.management.remote.JMXServiceURL ( ) java.net.MalformedURLException { return new javax.management.remote.JMXServiceURL ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private javax.management.remote.JMXConnectorServer javax.management.remote.JMXConnectorServer ( ) java.lang.Exception { return javax.management.remote.JMXConnectorServerFactory . javax.management.remote.JMXConnectorServer ( javax.management.remote.JMXServiceURL ( ) , null , getServer ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Assume . group ( TestGroup . JMXMP ) ; javax.management.remote.JMXConnectorServer javax.management.remote.JMXConnectorServer = javax.management.remote.JMXConnectorServer ( ) ; javax.management.remote.JMXConnectorServer . void ( ) ; try { MBeanServerConnectionFactoryBean org.springframework.jmx.support.MBeanServerConnectionFactoryBean = new MBeanServerConnectionFactoryBean ( ) ; org.springframework.jmx.support.MBeanServerConnectionFactoryBean . setServiceUrl ( java.lang.String ) ; org.springframework.jmx.support.MBeanServerConnectionFactoryBean . afterPropertiesSet ( ) ; try { javax.management.MBeanServerConnection javax.management.MBeanServerConnection = org.springframework.jmx.support.MBeanServerConnectionFactoryBean . getObject ( ) ; assertNotNull ( STRING , javax.management.MBeanServerConnection ) ; assertEquals ( STRING , getServer ( ) . getMBeanCount ( ) , javax.management.MBeanServerConnection . java.lang.Integer ( ) ) ; } finally { org.springframework.jmx.support.MBeanServerConnectionFactoryBean . destroy ( ) ; } } finally { javax.management.remote.JMXConnectorServer . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { MBeanServerConnectionFactoryBean org.springframework.jmx.support.MBeanServerConnectionFactoryBean = new MBeanServerConnectionFactoryBean ( ) ; org.springframework.jmx.support.MBeanServerConnectionFactoryBean . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Assume . group ( TestGroup . JMXMP ) ; MBeanServerConnectionFactoryBean org.springframework.jmx.support.MBeanServerConnectionFactoryBean = new MBeanServerConnectionFactoryBean ( ) ; org.springframework.jmx.support.MBeanServerConnectionFactoryBean . setServiceUrl ( java.lang.String ) ; org.springframework.jmx.support.MBeanServerConnectionFactoryBean . setConnectOnStartup ( false ) ; org.springframework.jmx.support.MBeanServerConnectionFactoryBean . afterPropertiesSet ( ) ; javax.management.MBeanServerConnection javax.management.MBeanServerConnection = org.springframework.jmx.support.MBeanServerConnectionFactoryBean . getObject ( ) ; assertTrue ( AopUtils . isAopProxy ( javax.management.MBeanServerConnection ) ) ; javax.management.remote.JMXConnectorServer javax.management.remote.JMXConnectorServer = null ; try { javax.management.remote.JMXConnectorServer = javax.management.remote.JMXConnectorServer ( ) ; javax.management.remote.JMXConnectorServer . void ( ) ; assertEquals ( STRING , getServer ( ) . getMBeanCount ( ) , javax.management.MBeanServerConnection . java.lang.Integer ( ) ) ; } finally { org.springframework.jmx.support.MBeanServerConnectionFactoryBean . destroy ( ) ; if ( javax.management.remote.JMXConnectorServer != null ) { javax.management.remote.JMXConnectorServer . void ( ) ; } } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MBeanServerConnectionFactoryBean org.springframework.jmx.support.MBeanServerConnectionFactoryBean = new MBeanServerConnectionFactoryBean ( ) ; org.springframework.jmx.support.MBeanServerConnectionFactoryBean . setServiceUrl ( java.lang.String ) ; org.springframework.jmx.support.MBeanServerConnectionFactoryBean . setConnectOnStartup ( false ) ; org.springframework.jmx.support.MBeanServerConnectionFactoryBean . afterPropertiesSet ( ) ; javax.management.MBeanServerConnection javax.management.MBeanServerConnection = org.springframework.jmx.support.MBeanServerConnectionFactoryBean . getObject ( ) ; assertTrue ( AopUtils . isAopProxy ( javax.management.MBeanServerConnection ) ) ; org.springframework.jmx.support.MBeanServerConnectionFactoryBean . destroy ( ) ; }  <METHOD_END>
