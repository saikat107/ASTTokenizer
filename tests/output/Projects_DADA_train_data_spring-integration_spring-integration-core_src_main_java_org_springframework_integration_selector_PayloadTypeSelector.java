<METHOD_START> public void ( java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) { Assert . notEmpty ( java.lang.Class<?>[] , STRING ) ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<?>[] ) { this . java.util.List<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Message < ? > org.springframework.integration.selector.Message<?> ) { Assert . notNull ( org.springframework.integration.selector.Message<> , STRING ) ; java.lang.Object java.lang.Object = org.springframework.integration.selector.Message<> . getPayload ( ) ; Assert . notNull ( java.lang.Object , STRING ) ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : this . java.util.List<java.lang.Class<?>> ) { if ( java.lang.Class<> . boolean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { return true ; } } return false ; }  <METHOD_END>
