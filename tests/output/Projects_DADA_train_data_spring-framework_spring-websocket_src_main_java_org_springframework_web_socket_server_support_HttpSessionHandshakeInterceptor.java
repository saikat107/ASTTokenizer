<METHOD_START> public void ( ) { this . java.util.Collection<java.lang.String> = java.util.Collections . java.util.List<java.lang.String> ( ) ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> public void ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { this . java.util.Collection<java.lang.String> = java.util.Collections . java.util.Collection<java.lang.String> ( java.util.Collection<java.lang.String> ) ; this . boolean = false ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( ) { return this . java.util.Collection<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ServerHttpRequest org.springframework.web.socket.server.support.ServerHttpRequest , ServerHttpResponse org.springframework.web.socket.server.support.ServerHttpResponse , WebSocketHandler org.springframework.web.socket.server.support.WebSocketHandler , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) throws java.lang.Exception { HttpSession org.springframework.web.socket.server.support.HttpSession = org.springframework.web.socket.server.support.HttpSession ( org.springframework.web.socket.server.support.ServerHttpRequest ) ; if ( org.springframework.web.socket.server.support.HttpSession != null ) { if ( boolean ( ) ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , org.springframework.web.socket.server.support.HttpSession . getId ( ) ) ; } java.util.Enumeration<java.lang.String> < java.lang.String > java.util.Enumeration<java.lang.String> = org.springframework.web.socket.server.support.HttpSession . getAttributeNames ( ) ; while ( java.util.Enumeration<java.lang.String> . boolean ( ) ) { java.lang.String java.lang.String = java.util.Enumeration<java.lang.String> . java.lang.String ( ) ; if ( boolean ( ) || java.util.Collection<java.lang.String> ( ) . boolean ( java.lang.String ) ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , org.springframework.web.socket.server.support.HttpSession . getAttribute ( java.lang.String ) ) ; } } } return true ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.socket.server.support.HttpSession org.springframework.web.socket.server.support.HttpSession ( ServerHttpRequest org.springframework.web.socket.server.support.ServerHttpRequest ) { if ( org.springframework.web.socket.server.support.ServerHttpRequest instanceof ServletServerHttpRequest ) { ServletServerHttpRequest org.springframework.web.socket.server.support.ServletServerHttpRequest = ( ServletServerHttpRequest ) org.springframework.web.socket.server.support.ServerHttpRequest ; return org.springframework.web.socket.server.support.ServletServerHttpRequest . getServletRequest ( ) . getSession ( boolean ( ) ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServerHttpRequest org.springframework.web.socket.server.support.ServerHttpRequest , ServerHttpResponse org.springframework.web.socket.server.support.ServerHttpResponse , WebSocketHandler org.springframework.web.socket.server.support.WebSocketHandler , java.lang.Exception java.lang.Exception ) {	}  <METHOD_END>
