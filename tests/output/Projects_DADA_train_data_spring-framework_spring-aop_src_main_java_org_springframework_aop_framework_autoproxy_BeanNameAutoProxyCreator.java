<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; this . java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( java.lang.String[] . int ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { this . java.util.List<java.lang.String> . boolean ( StringUtils . trimWhitespace ( java.lang.String ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object [] java.lang.Object[] ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String , TargetSource org.springframework.aop.framework.autoproxy.TargetSource ) { if ( this . java.util.List<java.lang.String> != null ) { for ( java.lang.String java.lang.String : this . java.util.List<java.lang.String> ) { if ( FactoryBean .class . boolean ( java.lang.Class<> ) ) { if ( ! java.lang.String . boolean ( BeanFactory . FACTORY_BEAN_PREFIX ) ) { continue; } java.lang.String = java.lang.String . java.lang.String ( BeanFactory . FACTORY_BEAN_PREFIX . length ( ) ) ; } if ( boolean ( java.lang.String , java.lang.String ) ) { return PROXY_WITHOUT_ADDITIONAL_INTERCEPTORS ; } BeanFactory org.springframework.aop.framework.autoproxy.BeanFactory = getBeanFactory ( ) ; if ( org.springframework.aop.framework.autoproxy.BeanFactory != null ) { java.lang.String [] java.lang.String[] = org.springframework.aop.framework.autoproxy.BeanFactory . getAliases ( java.lang.String ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( boolean ( java.lang.String , java.lang.String ) ) { return PROXY_WITHOUT_ADDITIONAL_INTERCEPTORS ; } } } } } return DO_NOT_PROXY ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return PatternMatchUtils . simpleMatch ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
