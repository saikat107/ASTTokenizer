<METHOD_START> @ Test public void void ( ) { java.sql.SQLException java.sql.SQLException = SQLExceptionSubclassFactory . newSQLDataException ( STRING , STRING , NUMBER ) ; DataAccessException org.springframework.jdbc.support.DataAccessException = org.springframework.jdbc.support.SQLExceptionTranslator . translate ( STRING , STRING , java.sql.SQLException ) ; assertEquals ( java.sql.SQLException , org.springframework.jdbc.support.DataAccessException . getCause ( ) ) ; assertThat ( org.springframework.jdbc.support.DataAccessException , instanceOf ( BadSqlGrammarException .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.sql.SQLException java.sql.SQLException = SQLExceptionSubclassFactory . newSQLDataException ( STRING , STRING , NUMBER ) ; DataAccessException org.springframework.jdbc.support.DataAccessException = org.springframework.jdbc.support.SQLExceptionTranslator . translate ( STRING , STRING , java.sql.SQLException ) ; assertEquals ( java.sql.SQLException , org.springframework.jdbc.support.DataAccessException . getCause ( ) ) ; assertThat ( org.springframework.jdbc.support.DataAccessException , instanceOf ( TransientDataAccessResourceException .class ) ) ; }  <METHOD_END>
