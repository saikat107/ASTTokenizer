<METHOD_START> public void ( MetricExportProperties org.springframework.boot.actuate.autoconfigure.MetricExportProperties , ObjectProvider < MetricsEndpointMetricReader > org.springframework.boot.actuate.autoconfigure.ObjectProvider<org.springframework.boot.actuate.autoconfigure.MetricsEndpointMetricReader> , @ ExportMetricReader ObjectProvider < java.util.List<org.springframework.boot.actuate.autoconfigure.MetricReader> < MetricReader > > org.springframework.boot.actuate.autoconfigure.ObjectProvider<java.util.List<org.springframework.boot.actuate.autoconfigure.MetricReader>> , @ ExportMetricWriter ObjectProvider < java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> < java.lang.String , GaugeWriter > > org.springframework.boot.actuate.autoconfigure.ObjectProvider<java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter>> , ObjectProvider < java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.Exporter> < java.lang.String , Exporter > > org.springframework.boot.actuate.autoconfigure.ObjectProvider<java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.Exporter>> ) { this . org.springframework.boot.actuate.autoconfigure.MetricsEndpointMetricReader = org.springframework.boot.actuate.autoconfigure.ObjectProvider<org.springframework.boot.actuate.autoconfigure.MetricsEndpointMetricReader> . getIfAvailable ( ) ; this . java.util.List<org.springframework.boot.actuate.autoconfigure.MetricReader> = org.springframework.boot.actuate.autoconfigure.ObjectProvider<java.util.List<org.springframework.boot.actuate.autoconfigure.MetricReader>> . getIfAvailable ( ) ; this . java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> = org.springframework.boot.actuate.autoconfigure.ObjectProvider<java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter>> . getIfAvailable ( ) ; this . java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.Exporter> = org.springframework.boot.actuate.autoconfigure.ObjectProvider<java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.Exporter>> . getIfAvailable ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( name = STRING ) public org.springframework.boot.actuate.autoconfigure.SchedulingConfigurer org.springframework.boot.actuate.autoconfigure.SchedulingConfigurer ( MetricExportProperties org.springframework.boot.actuate.autoconfigure.MetricExportProperties ) { java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> < java.lang.String , GaugeWriter > java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> = new java.util.HashMap<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> <> ( ) ; MetricReader org.springframework.boot.actuate.autoconfigure.MetricReader = this . org.springframework.boot.actuate.autoconfigure.MetricsEndpointMetricReader ; if ( org.springframework.boot.actuate.autoconfigure.MetricReader == null && ! CollectionUtils . isEmpty ( this . java.util.List<org.springframework.boot.actuate.autoconfigure.MetricReader> ) ) { org.springframework.boot.actuate.autoconfigure.MetricReader = new CompositeMetricReader ( this . java.util.List<org.springframework.boot.actuate.autoconfigure.MetricReader> . toArray ( new MetricReader [ this . java.util.List<org.springframework.boot.actuate.autoconfigure.MetricReader> . size ( ) ] ) ) ; } if ( org.springframework.boot.actuate.autoconfigure.MetricReader == null && CollectionUtils . isEmpty ( this . java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.Exporter> ) ) { return new org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfiguration.NoOpSchedulingConfigurer ( ) ; } MetricExporters org.springframework.boot.actuate.autoconfigure.MetricExporters = new MetricExporters ( org.springframework.boot.actuate.autoconfigure.MetricExportProperties ) ; if ( org.springframework.boot.actuate.autoconfigure.MetricReader != null ) { if ( ! CollectionUtils . isEmpty ( this . java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> ) ) { java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> . putAll ( this . java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> ) ; } org.springframework.boot.actuate.autoconfigure.MetricExporters . setReader ( org.springframework.boot.actuate.autoconfigure.MetricReader ) ; org.springframework.boot.actuate.autoconfigure.MetricExporters . setWriters ( java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> ) ; } org.springframework.boot.actuate.autoconfigure.MetricExporters . setExporters ( this . java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.Exporter> == null ? java.util.Collections .< java.lang.String , Exporter > java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.Exporter> ( ) : this . java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.Exporter> ) ; return org.springframework.boot.actuate.autoconfigure.MetricExporters ; }  <METHOD_END>
<METHOD_START> @ Bean @ ExportMetricWriter @ ConditionalOnMissingBean @ ConditionalOnProperty ( prefix = STRING , name = STRING ) public org.springframework.boot.actuate.autoconfigure.StatsdMetricWriter org.springframework.boot.actuate.autoconfigure.StatsdMetricWriter ( MetricExportProperties org.springframework.boot.actuate.autoconfigure.MetricExportProperties ) { MetricExportProperties . MetricExportProperties MetricExportProperties.Statsd = org.springframework.boot.actuate.autoconfigure.MetricExportProperties . getStatsd ( ) ; return new StatsdMetricWriter ( MetricExportProperties.Statsd . getPrefix ( ) , MetricExportProperties.Statsd . getHost ( ) , MetricExportProperties.Statsd . getPort ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) @ ConditionalOnMissingBean public org.springframework.boot.actuate.autoconfigure.MetricExportProperties org.springframework.boot.actuate.autoconfigure.MetricExportProperties ( ) { MetricExportProperties org.springframework.boot.actuate.autoconfigure.MetricExportProperties = new MetricExportProperties ( ) ; org.springframework.boot.actuate.autoconfigure.MetricExportProperties . getRedis ( ) . setPrefix ( STRING + ( this . java.lang.String . int ( ) > NUMBER ? STRING : STRING ) + this . java.lang.String ) ; org.springframework.boot.actuate.autoconfigure.MetricExportProperties . getAggregate ( ) . setPrefix ( this . java.lang.String ) ; org.springframework.boot.actuate.autoconfigure.MetricExportProperties . getAggregate ( ) . setKeyPattern ( this . java.lang.String ) ; return org.springframework.boot.actuate.autoconfigure.MetricExportProperties ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ScheduledTaskRegistrar org.springframework.boot.actuate.autoconfigure.ScheduledTaskRegistrar ) {		}  <METHOD_END>
