<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . org.springframework.integration.channel.AbstractMessageChannelMetrics = new DefaultMessageChannelMetrics ( java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return StringUtils . hasText ( this . java.lang.String ) ? this . java.lang.String : STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AbstractMessageChannelMetrics org.springframework.integration.channel.AbstractMessageChannelMetrics ) { Assert . notNull ( org.springframework.integration.channel.AbstractMessageChannelMetrics , STRING ) ; this . org.springframework.integration.channel.AbstractMessageChannelMetrics = org.springframework.integration.channel.AbstractMessageChannelMetrics ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.integration.channel.AbstractMessageChannelMetrics . reset ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { this . boolean = boolean ; if ( ! boolean ) { this . boolean = false ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { if ( boolean ) { this . boolean = true ; } this . boolean = boolean ; this . org.springframework.integration.channel.AbstractMessageChannelMetrics . setFullStatsEnabled ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getSendCount ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getSendCountLong ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getSendErrorCount ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getSendErrorCountLong ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getTimeSinceLastSend ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getMeanSendRate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getMeanErrorRate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getMeanErrorRatio ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getMeanSendDuration ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getMinSendDuration ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getMaxSendDuration ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getStandardDeviationSendDuration ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.channel.Statistics org.springframework.integration.channel.Statistics ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getSendDuration ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.channel.Statistics org.springframework.integration.channel.Statistics ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getSendRate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.channel.Statistics org.springframework.integration.channel.Statistics ( ) { return this . org.springframework.integration.channel.AbstractMessageChannelMetrics . getErrorRate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Message < ? > org.springframework.integration.channel.Message<?> ) { if ( this . boolean && this . org.springframework.integration.channel.Log . isDebugEnabled ( ) ) { this . org.springframework.integration.channel.Log . debug ( STRING + org.springframework.integration.channel.Message<> ) ; } if ( this . boolean ) { this . org.springframework.integration.channel.AbstractMessageChannelMetrics . afterSend ( this . org.springframework.integration.channel.AbstractMessageChannelMetrics . beforeSend ( ) , true ) ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Message < ? > org.springframework.integration.channel.Message<?> , long long ) { return this . boolean ( org.springframework.integration.channel.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.channel.Message<?> < ? > org.springframework.integration.channel.Message<?> ( ) { if ( this . boolean && this . org.springframework.integration.channel.Log . isDebugEnabled ( ) ) { this . org.springframework.integration.channel.Log . debug ( STRING ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.channel.Message<?> < ? > org.springframework.integration.channel.Message<?> ( long long ) { return this . org.springframework.integration.channel.Message<?> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( this . java.lang.String != null ) ? this . java.lang.String : super. java.lang.String ( ) ; }  <METHOD_END>
