<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( java.lang.String java.lang.String ) { return org.springframework.integration.dsl.IntegrationFlowBuilder ( new MessageChannelReference ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( java.lang.String java.lang.String , boolean boolean ) { return boolean ? org.springframework.integration.dsl.IntegrationFlowBuilder ( new FixedSubscriberChannelPrototype ( java.lang.String ) ) : org.springframework.integration.dsl.IntegrationFlowBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessageChannelSpec < ? , ? > org.springframework.integration.dsl.MessageChannelSpec<?,?> ) { Assert . notNull ( org.springframework.integration.dsl.MessageChannelSpec<,> , STRING ) ; return org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessageChannelSpec<,> . get ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessageChannel org.springframework.integration.dsl.MessageChannel ) { return new IntegrationFlowBuilder ( ) . channel ( org.springframework.integration.dsl.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessageSourceSpec < ? , ? extends MessageSource < ? > > org.springframework.integration.dsl.MessageSourceSpec<?,? extends org.springframework.integration.dsl.MessageSource<?>> ) { return org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessageSourceSpec<,> , ( java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> < SourcePollingChannelAdapterSpec > ) null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessageSourceSpec < ? , ? extends MessageSource < ? > > org.springframework.integration.dsl.MessageSourceSpec<?,? extends org.springframework.integration.dsl.MessageSource<?>> , java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> < SourcePollingChannelAdapterSpec > java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> ) { Assert . notNull ( org.springframework.integration.dsl.MessageSourceSpec<,> , STRING ) ; return org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessageSourceSpec<,> . get ( ) , java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> , org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessageSourceSpec<,> ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return org.springframework.integration.dsl.IntegrationFlowBuilder ( java.lang.Object , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( java.lang.Object java.lang.Object , java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> < SourcePollingChannelAdapterSpec > java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> ) { Assert . notNull ( java.lang.Object , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; MethodInvokingMessageSource org.springframework.integration.dsl.MethodInvokingMessageSource = new MethodInvokingMessageSource ( ) ; org.springframework.integration.dsl.MethodInvokingMessageSource . setObject ( java.lang.Object ) ; org.springframework.integration.dsl.MethodInvokingMessageSource . setMethodName ( java.lang.String ) ; return org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MethodInvokingMessageSource , java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessageSource < ? > org.springframework.integration.dsl.MessageSource<?> ) { return org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessageSource<> , ( java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> < SourcePollingChannelAdapterSpec > ) null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessageSource < ? > org.springframework.integration.dsl.MessageSource<?> , java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> < SourcePollingChannelAdapterSpec > java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> ) { return org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessageSource<> , java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> , null ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessageSource < ? > org.springframework.integration.dsl.MessageSource<?> , java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> < SourcePollingChannelAdapterSpec > java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> , IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ) { SourcePollingChannelAdapterSpec org.springframework.integration.dsl.SourcePollingChannelAdapterSpec = new SourcePollingChannelAdapterSpec ( org.springframework.integration.dsl.MessageSource<> ) ; if ( java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> != null ) { java.util.function.Consumer<org.springframework.integration.dsl.SourcePollingChannelAdapterSpec> . accept ( org.springframework.integration.dsl.SourcePollingChannelAdapterSpec ) ; } if ( org.springframework.integration.dsl.IntegrationFlowBuilder == null ) { org.springframework.integration.dsl.IntegrationFlowBuilder = new IntegrationFlowBuilder ( ) ; } return org.springframework.integration.dsl.IntegrationFlowBuilder . addComponent ( org.springframework.integration.dsl.SourcePollingChannelAdapterSpec ) . currentComponent ( org.springframework.integration.dsl.SourcePollingChannelAdapterSpec ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessageProducerSpec < ? , ? > org.springframework.integration.dsl.MessageProducerSpec<?,?> ) { return org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessageProducerSpec<,> . get ( ) , org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessageProducerSpec<,> ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessageProducerSupport org.springframework.integration.dsl.MessageProducerSupport ) { return org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessageProducerSupport , ( IntegrationFlowBuilder ) null ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessageProducerSupport org.springframework.integration.dsl.MessageProducerSupport , IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ) { MessageChannel org.springframework.integration.dsl.MessageChannel = org.springframework.integration.dsl.MessageProducerSupport . getOutputChannel ( ) ; if ( org.springframework.integration.dsl.MessageChannel == null ) { org.springframework.integration.dsl.MessageChannel = new DirectChannel ( ) ; org.springframework.integration.dsl.MessageProducerSupport . setOutputChannel ( org.springframework.integration.dsl.MessageChannel ) ; } if ( org.springframework.integration.dsl.IntegrationFlowBuilder == null ) { org.springframework.integration.dsl.IntegrationFlowBuilder = org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessageChannel ) ; } else { org.springframework.integration.dsl.IntegrationFlowBuilder . channel ( org.springframework.integration.dsl.MessageChannel ) ; } return org.springframework.integration.dsl.IntegrationFlowBuilder . addComponent ( org.springframework.integration.dsl.MessageProducerSupport ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessagingGatewaySpec < ? , ? > org.springframework.integration.dsl.MessagingGatewaySpec<?,?> ) { return org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessagingGatewaySpec<,> . get ( ) , org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessagingGatewaySpec<,> ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessagingGatewaySupport org.springframework.integration.dsl.MessagingGatewaySupport ) { return org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessagingGatewaySupport , ( IntegrationFlowBuilder ) null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( java.lang.Class<?> < ? > java.lang.Class<?> ) { final DirectChannel org.springframework.integration.dsl.DirectChannel = new DirectChannel ( ) ; GatewayProxyFactoryBean org.springframework.integration.dsl.GatewayProxyFactoryBean = new AnnotationGatewayProxyFactoryBean ( java.lang.Class<> ) { @ java.lang.Override protected void void ( ) { super. onInit ( ) ; getGateways ( ) . values ( ) . forEach ( gateway -> gateway . setRequestChannel ( gatewayRequestChannel ) ) ; } } ; return org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.DirectChannel ) . addComponent ( org.springframework.integration.dsl.GatewayProxyFactoryBean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onInit ( ) ; getGateways ( ) . values ( ) . forEach ( gateway -> gateway . setRequestChannel ( gatewayRequestChannel ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( Publisher < Message < ? > > org.springframework.integration.dsl.Publisher<org.springframework.integration.dsl.Message<?>> ) { ReactiveChannel org.springframework.integration.dsl.ReactiveChannel = new ReactiveChannel ( ) ; org.springframework.integration.dsl.ReactiveChannel . subscribeTo ( org.springframework.integration.dsl.Publisher<org.springframework.integration.dsl.Message<?>> ) ; return org.springframework.integration.dsl.IntegrationFlowBuilder ( ( MessageChannel ) org.springframework.integration.dsl.ReactiveChannel ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( MessagingGatewaySupport org.springframework.integration.dsl.MessagingGatewaySupport , IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ) { MessageChannel org.springframework.integration.dsl.MessageChannel = org.springframework.integration.dsl.MessagingGatewaySupport . getRequestChannel ( ) ; if ( org.springframework.integration.dsl.MessageChannel == null ) { org.springframework.integration.dsl.MessageChannel = new DirectChannel ( ) ; org.springframework.integration.dsl.MessagingGatewaySupport . setRequestChannel ( org.springframework.integration.dsl.MessageChannel ) ; } if ( org.springframework.integration.dsl.IntegrationFlowBuilder == null ) { org.springframework.integration.dsl.IntegrationFlowBuilder = org.springframework.integration.dsl.IntegrationFlowBuilder ( org.springframework.integration.dsl.MessageChannel ) ; } else { org.springframework.integration.dsl.IntegrationFlowBuilder . channel ( org.springframework.integration.dsl.MessageChannel ) ; } return org.springframework.integration.dsl.IntegrationFlowBuilder . addComponent ( org.springframework.integration.dsl.MessagingGatewaySupport ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.integration.dsl.IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof ComponentsRegistration ) { return new IntegrationFlowBuilder ( ) . addComponents ( ( ( ComponentsRegistration ) java.lang.Object ) . getComponentsToRegister ( ) ) ; } return null ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
