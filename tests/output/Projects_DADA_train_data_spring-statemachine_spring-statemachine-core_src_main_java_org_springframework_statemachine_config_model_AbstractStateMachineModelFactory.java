<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( ResourceLoader org.springframework.statemachine.config.model.ResourceLoader , StateMachineComponentResolver < S , E > org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> ) { this . org.springframework.statemachine.config.model.ResourceLoader = org.springframework.statemachine.config.model.ResourceLoader ; this . org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> = org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.statemachine.config.model.BeanFactory ) throws org.springframework.statemachine.config.model.BeansException { this . org.springframework.statemachine.config.model.BeanFactory = org.springframework.statemachine.config.model.BeanFactory ; org.springframework.statemachine.config.model.DefaultStateMachineComponentResolver<S,E> . setBeanFactory ( org.springframework.statemachine.config.model.BeanFactory ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ResourceLoader org.springframework.statemachine.config.model.ResourceLoader ) { Assert . notNull ( org.springframework.statemachine.config.model.ResourceLoader , STRING ) ; this . org.springframework.statemachine.config.model.ResourceLoader = org.springframework.statemachine.config.model.ResourceLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.model.StateMachineModel<S,E> < S , E > org.springframework.statemachine.config.model.StateMachineModel<S,E> ( java.lang.String java.lang.String ) { return org.springframework.statemachine.config.model.StateMachineModel<S,E> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public abstract org.springframework.statemachine.config.model.StateMachineModel<S,E> < S , E > org.springframework.statemachine.config.model.StateMachineModel<S,E> ( )  <METHOD_END>
<METHOD_START> public void void ( StateMachineComponentResolver < S , E > org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> ) { this . org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> = org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , Action < S , E > org.springframework.statemachine.config.model.Action<S,E> ) { org.springframework.statemachine.config.model.DefaultStateMachineComponentResolver<S,E> . registerAction ( java.lang.String , org.springframework.statemachine.config.model.Action<S,E> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , Guard < S , E > org.springframework.statemachine.config.model.Guard<S,E> ) { org.springframework.statemachine.config.model.DefaultStateMachineComponentResolver<S,E> . registerGuard ( java.lang.String , org.springframework.statemachine.config.model.Guard<S,E> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> < S , E > org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> ( ) { return org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> ; }  <METHOD_END>
<METHOD_START> public org.springframework.statemachine.config.model.Action<S,E> < S , E > org.springframework.statemachine.config.model.Action<S,E> ( java.lang.String java.lang.String ) { Action < S , E > org.springframework.statemachine.config.model.Action<S,E> = org.springframework.statemachine.config.model.DefaultStateMachineComponentResolver<S,E> . resolveAction ( java.lang.String ) ; if ( org.springframework.statemachine.config.model.Action<S,E> == null && org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> != null ) { org.springframework.statemachine.config.model.Action<S,E> = org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> . resolveAction ( java.lang.String ) ; } if ( org.springframework.statemachine.config.model.Action<S,E> == null ) { throw new java.lang.RuntimeException ( STRING + java.lang.String + STRING ) ; } return org.springframework.statemachine.config.model.Action<S,E> ; }  <METHOD_END>
<METHOD_START> public org.springframework.statemachine.config.model.Guard<S,E> < S , E > org.springframework.statemachine.config.model.Guard<S,E> ( java.lang.String java.lang.String ) { Guard < S , E > org.springframework.statemachine.config.model.Guard<S,E> = org.springframework.statemachine.config.model.DefaultStateMachineComponentResolver<S,E> . resolveGuard ( java.lang.String ) ; if ( org.springframework.statemachine.config.model.Guard<S,E> == null && org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> != null ) { org.springframework.statemachine.config.model.Guard<S,E> = org.springframework.statemachine.config.model.StateMachineComponentResolver<S,E> . resolveGuard ( java.lang.String ) ; } if ( org.springframework.statemachine.config.model.Guard<S,E> == null ) { throw new java.lang.RuntimeException ( STRING + java.lang.String + STRING ) ; } return org.springframework.statemachine.config.model.Guard<S,E> ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.statemachine.config.model.BeanFactory org.springframework.statemachine.config.model.BeanFactory ( ) { return org.springframework.statemachine.config.model.BeanFactory ; }  <METHOD_END>
<METHOD_START> protected org.springframework.statemachine.config.model.ResourceLoader org.springframework.statemachine.config.model.ResourceLoader ( ) { return org.springframework.statemachine.config.model.ResourceLoader ; }  <METHOD_END>
