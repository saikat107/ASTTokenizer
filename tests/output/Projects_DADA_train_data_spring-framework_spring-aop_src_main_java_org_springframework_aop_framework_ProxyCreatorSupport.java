<METHOD_START> public void ( ) { this . org.springframework.aop.framework.AopProxyFactory = new DefaultAopProxyFactory ( ) ; }  <METHOD_END>
<METHOD_START> public void ( AopProxyFactory org.springframework.aop.framework.AopProxyFactory ) { Assert . notNull ( org.springframework.aop.framework.AopProxyFactory , STRING ) ; this . org.springframework.aop.framework.AopProxyFactory = org.springframework.aop.framework.AopProxyFactory ; }  <METHOD_END>
<METHOD_START> public void void ( AopProxyFactory org.springframework.aop.framework.AopProxyFactory ) { Assert . notNull ( org.springframework.aop.framework.AopProxyFactory , STRING ) ; this . org.springframework.aop.framework.AopProxyFactory = org.springframework.aop.framework.AopProxyFactory ; }  <METHOD_END>
<METHOD_START> public org.springframework.aop.framework.AopProxyFactory org.springframework.aop.framework.AopProxyFactory ( ) { return this . org.springframework.aop.framework.AopProxyFactory ; }  <METHOD_END>
<METHOD_START> public void void ( AdvisedSupportListener org.springframework.aop.framework.AdvisedSupportListener ) { Assert . notNull ( org.springframework.aop.framework.AdvisedSupportListener , STRING ) ; this . java.util.List<org.springframework.aop.framework.AdvisedSupportListener> . add ( org.springframework.aop.framework.AdvisedSupportListener ) ; }  <METHOD_END>
<METHOD_START> public void void ( AdvisedSupportListener org.springframework.aop.framework.AdvisedSupportListener ) { Assert . notNull ( org.springframework.aop.framework.AdvisedSupportListener , STRING ) ; this . java.util.List<org.springframework.aop.framework.AdvisedSupportListener> . remove ( org.springframework.aop.framework.AdvisedSupportListener ) ; }  <METHOD_END>
<METHOD_START> protected final synchronized org.springframework.aop.framework.AopProxy org.springframework.aop.framework.AopProxy ( ) { if ( ! this . boolean ) { void ( ) ; } return org.springframework.aop.framework.AopProxyFactory ( ) . createAopProxy ( this ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { this . boolean = true ; for ( AdvisedSupportListener org.springframework.aop.framework.AdvisedSupportListener : this . java.util.List<org.springframework.aop.framework.AdvisedSupportListener> ) { org.springframework.aop.framework.AdvisedSupportListener . activated ( this ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. adviceChanged ( ) ; synchronized ( this ) { if ( this . boolean ) { for ( AdvisedSupportListener org.springframework.aop.framework.AdvisedSupportListener : this . java.util.List<org.springframework.aop.framework.AdvisedSupportListener> ) { org.springframework.aop.framework.AdvisedSupportListener . adviceChanged ( this ) ; } } } }  <METHOD_END>
<METHOD_START> protected final synchronized boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
