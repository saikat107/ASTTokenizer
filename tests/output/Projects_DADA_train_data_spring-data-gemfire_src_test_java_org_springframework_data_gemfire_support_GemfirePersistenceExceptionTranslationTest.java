<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,org.springframework.data.gemfire.support.BeanPostProcessor> < java.lang.String , BeanPostProcessor > java.util.Map<java.lang.String,org.springframework.data.gemfire.support.BeanPostProcessor> = org.springframework.data.gemfire.support.ApplicationContext . getBeansOfType ( BeanPostProcessor .class ) ; java.lang.System . java.io.PrintStream . void ( java.util.Map<java.lang.String,org.springframework.data.gemfire.support.BeanPostProcessor> . size ( ) ) ; for ( BeanPostProcessor org.springframework.data.gemfire.support.BeanPostProcessor : java.util.Map<java.lang.String,org.springframework.data.gemfire.support.BeanPostProcessor> . values ( ) ) { java.lang.System . java.io.PrintStream . void ( org.springframework.data.gemfire.support.BeanPostProcessor . getClass ( ) . getSimpleName ( ) ) ; } try { org.springframework.data.gemfire.support.GemfirePersistenceExceptionTranslationTest.GemFireRepo1 . void ( new QueryException ( ) ) ; fail ( STRING ) ; } catch ( GemfireQueryException org.springframework.data.gemfire.support.GemfireQueryException ) {		} try { org.springframework.data.gemfire.support.GemfirePersistenceExceptionTranslationTest.GemFireRepo1 . void ( new FunctionDomainException ( STRING ) ) ; fail ( STRING ) ; } catch ( GemfireQueryException org.springframework.data.gemfire.support.GemfireQueryException ) {		} try { org.springframework.data.gemfire.support.GemfirePersistenceExceptionTranslationTest.GemFireRepo1 . void ( new QueryInvocationTargetException ( STRING ) ) ; fail ( STRING ) ; } catch ( GemfireQueryException org.springframework.data.gemfire.support.GemfireQueryException ) {		} }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Exception java.lang.Exception ) { throw new java.lang.RuntimeException ( java.lang.Exception ) ; }  <METHOD_END>
