<METHOD_START> public void void ( PathMatcher org.springframework.web.cors.reactive.PathMatcher ) { Assert . notNull ( org.springframework.web.cors.reactive.PathMatcher , STRING ) ; this . org.springframework.web.cors.reactive.PathMatcher = org.springframework.web.cors.reactive.PathMatcher ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.web.cors.reactive.HttpRequestPathHelper . setUrlDecode ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( HttpRequestPathHelper org.springframework.web.cors.reactive.HttpRequestPathHelper ) { Assert . notNull ( org.springframework.web.cors.reactive.HttpRequestPathHelper , STRING ) ; this . org.springframework.web.cors.reactive.HttpRequestPathHelper = org.springframework.web.cors.reactive.HttpRequestPathHelper ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> < java.lang.String , CorsConfiguration > java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> ) { this . java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> . clear ( ) ; if ( java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> != null ) { this . java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> . putAll ( java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> ) ; } }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> < java.lang.String , CorsConfiguration > java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> ( ) { return java.util.Collections . java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> ( this . java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , CorsConfiguration org.springframework.web.cors.reactive.CorsConfiguration ) { this . java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> . put ( java.lang.String , org.springframework.web.cors.reactive.CorsConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.cors.reactive.CorsConfiguration org.springframework.web.cors.reactive.CorsConfiguration ( ServerWebExchange org.springframework.web.cors.reactive.ServerWebExchange ) { java.lang.String java.lang.String = this . org.springframework.web.cors.reactive.HttpRequestPathHelper . getLookupPathForRequest ( org.springframework.web.cors.reactive.ServerWebExchange ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> < java.lang.String , CorsConfiguration > java.util.Map.Entry<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> : this . java.util.Map<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> . entrySet ( ) ) { if ( this . org.springframework.web.cors.reactive.PathMatcher . match ( java.util.Map.Entry<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> . getKey ( ) , java.lang.String ) ) { return java.util.Map.Entry<java.lang.String,org.springframework.web.cors.reactive.CorsConfiguration> . getValue ( ) ; } } return null ; }  <METHOD_END>
