<METHOD_START> @ Test public void void ( ) { assertTrue ( new SubscriptionAttributesFactoryBean ( ) . isSingleton ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SubscriptionAttributesFactoryBean org.springframework.data.gemfire.SubscriptionAttributesFactoryBean = new SubscriptionAttributesFactoryBean ( ) ; assertEquals ( InterestPolicy . DEFAULT , org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getInterestPolicy ( ) ) ; org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . setInterestPolicy ( InterestPolicy . CACHE_CONTENT ) ; assertEquals ( InterestPolicy . CACHE_CONTENT , org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getInterestPolicy ( ) ) ; org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . setInterestPolicy ( null ) ; assertEquals ( InterestPolicy . DEFAULT , org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getInterestPolicy ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SubscriptionAttributesFactoryBean org.springframework.data.gemfire.SubscriptionAttributesFactoryBean = new SubscriptionAttributesFactoryBean ( ) ; org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . setInterestPolicy ( InterestPolicy . ALL ) ; org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . afterPropertiesSet ( ) ; assertEquals ( InterestPolicy . ALL , org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getInterestPolicy ( ) ) ; SubscriptionAttributes org.springframework.data.gemfire.SubscriptionAttributes = org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getObject ( ) ; assertNotNull ( org.springframework.data.gemfire.SubscriptionAttributes ) ; assertEquals ( InterestPolicy . ALL , org.springframework.data.gemfire.SubscriptionAttributes . getInterestPolicy ( ) ) ; assertTrue ( SubscriptionAttributes .class . boolean ( org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getObjectType ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SubscriptionAttributesFactoryBean org.springframework.data.gemfire.SubscriptionAttributesFactoryBean = new SubscriptionAttributesFactoryBean ( ) ; org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . setInterestPolicy ( InterestPolicy . CACHE_CONTENT ) ; org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . afterPropertiesSet ( ) ; assertEquals ( InterestPolicy . CACHE_CONTENT , org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getInterestPolicy ( ) ) ; SubscriptionAttributes org.springframework.data.gemfire.SubscriptionAttributes = org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getObject ( ) ; assertNotNull ( org.springframework.data.gemfire.SubscriptionAttributes ) ; assertEquals ( InterestPolicy . CACHE_CONTENT , org.springframework.data.gemfire.SubscriptionAttributes . getInterestPolicy ( ) ) ; assertTrue ( SubscriptionAttributes .class . boolean ( org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getObjectType ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SubscriptionAttributesFactoryBean org.springframework.data.gemfire.SubscriptionAttributesFactoryBean = new SubscriptionAttributesFactoryBean ( ) ; org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . afterPropertiesSet ( ) ; assertEquals ( InterestPolicy . DEFAULT , org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getInterestPolicy ( ) ) ; SubscriptionAttributes org.springframework.data.gemfire.SubscriptionAttributes = org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getObject ( ) ; assertNotNull ( org.springframework.data.gemfire.SubscriptionAttributes ) ; assertEquals ( InterestPolicy . DEFAULT , org.springframework.data.gemfire.SubscriptionAttributes . getInterestPolicy ( ) ) ; assertTrue ( SubscriptionAttributes .class . boolean ( org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getObjectType ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SubscriptionAttributesFactoryBean org.springframework.data.gemfire.SubscriptionAttributesFactoryBean = new SubscriptionAttributesFactoryBean ( ) ; org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . setInterestPolicy ( null ) ; org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . afterPropertiesSet ( ) ; assertEquals ( InterestPolicy . DEFAULT , org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getInterestPolicy ( ) ) ; SubscriptionAttributes org.springframework.data.gemfire.SubscriptionAttributes = org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getObject ( ) ; assertNotNull ( org.springframework.data.gemfire.SubscriptionAttributes ) ; assertEquals ( InterestPolicy . DEFAULT , org.springframework.data.gemfire.SubscriptionAttributes . getInterestPolicy ( ) ) ; assertTrue ( SubscriptionAttributes .class . boolean ( org.springframework.data.gemfire.SubscriptionAttributesFactoryBean . getObjectType ( ) ) ) ; }  <METHOD_END>
