<METHOD_START> @ Before public void void ( ) { this . org.springframework.cache.jcache.CacheManager = org.springframework.cache.jcache.CachingProvider ( ) . getCacheManager ( ) ; this . org.springframework.cache.jcache.CacheManager . createCache ( CACHE_NAME , new MutableConfiguration <> ( ) ) ; this . org.springframework.cache.jcache.CacheManager . createCache ( CACHE_NAME_NO_NULL , new MutableConfiguration <> ( ) ) ; this . org.springframework.cache.jcache.Cache<java.lang.Object,java.lang.Object> = this . org.springframework.cache.jcache.CacheManager . getCache ( CACHE_NAME ) ; this . org.springframework.cache.jcache.JCacheCache = new JCacheCache ( this . org.springframework.cache.jcache.Cache<java.lang.Object,java.lang.Object> ) ; Cache < java.lang.Object , java.lang.Object > org.springframework.cache.jcache.Cache<java.lang.Object,java.lang.Object> = this . org.springframework.cache.jcache.CacheManager . getCache ( CACHE_NAME_NO_NULL ) ; this . org.springframework.cache.jcache.JCacheCache = new JCacheCache ( org.springframework.cache.jcache.Cache<java.lang.Object,java.lang.Object> , false ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cache.jcache.CachingProvider org.springframework.cache.jcache.CachingProvider ( ) { return Caching . getCachingProvider ( ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.cache.jcache.CacheManager != null ) { this . org.springframework.cache.jcache.CacheManager . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.cache.jcache.JCacheCache org.springframework.cache.jcache.JCacheCache ( ) { return org.springframework.cache.jcache.JCacheCache ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.cache.jcache.JCacheCache org.springframework.cache.jcache.JCacheCache ( boolean boolean ) { return boolean ? this . org.springframework.cache.jcache.JCacheCache : this . org.springframework.cache.jcache.JCacheCache ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( ) { return this . org.springframework.cache.jcache.Cache<java.lang.Object,java.lang.Object> ; }  <METHOD_END>
