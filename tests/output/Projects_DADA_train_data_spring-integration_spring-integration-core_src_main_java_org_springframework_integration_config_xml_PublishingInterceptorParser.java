<METHOD_START> @ java.lang.Override protected org.springframework.integration.config.xml.AbstractBeanDefinition org.springframework.integration.config.xml.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( MessagePublishingInterceptor .class ) ; BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( MethodNameMappingPublisherMetadataSource .class ) ; java.util.Map<java.lang.String,java.util.Map<?,?>> < java.lang.String , java.util.Map<?,?> < ? , ? > > java.util.Map<java.lang.String,java.util.Map<?,?>> = this . java.util.Map<java.lang.String,java.util.Map<?,?>> ( org.w3c.dom.Element , org.w3c.dom.Element . java.lang.String ( STRING ) , org.springframework.integration.config.xml.ParserContext ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.util.Map<java.lang.String,java.util.Map<?,?>> . java.util.Map<?,?> ( STRING ) ) ; if ( java.util.Map<java.lang.String,java.util.Map<?,?>> . java.util.Map<?,?> ( STRING ) != null ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.Map<java.lang.String,java.util.Map<?,?>> . java.util.Map<?,?> ( STRING ) ) ; } BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( BeanFactoryChannelResolver .class ) ; if ( java.util.Map<java.lang.String,java.util.Map<?,?>> . java.util.Map<?,?> ( STRING ) != null ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.Map<java.lang.String,java.util.Map<?,?>> . java.util.Map<?,?> ( STRING ) ) ; } java.lang.String java.lang.String = BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) , org.springframework.integration.config.xml.ParserContext . getRegistry ( ) ) ; java.lang.String java.lang.String = StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ? org.w3c.dom.Element . java.lang.String ( STRING ) : IntegrationContextUtils . NULL_CHANNEL_BEAN_NAME ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; return org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,java.util.Map<?,?>> < java.lang.String , java.util.Map<?,?> < ? , ? > > java.util.Map<java.lang.String,java.util.Map<?,?>> ( org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String , ParserContext org.springframework.integration.config.xml.ParserContext ) { java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING ) ; java.util.Map<java.lang.String,java.util.Map<?,?>> < java.lang.String , java.util.Map<?,?> < ? , ? > > java.util.Map<java.lang.String,java.util.Map<?,?>> = new java.util.HashMap<java.lang.String,java.util.Map<?,?>> < java.lang.String , java.util.Map<?,?> < ? , ? > > ( ) ; java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) ; java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> < java.lang.String , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > > java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> = new java.util.HashMap<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> < java.lang.String , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > > ( ) ; java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) ; ManagedMap < java.lang.String , java.lang.Object > org.springframework.integration.config.xml.ManagedMap<java.lang.String,java.lang.Object> = new ManagedMap < java.lang.String , java.lang.Object > ( ) ; if ( java.util.List<org.w3c.dom.Element> != null && java.util.List<org.w3c.dom.Element> . int ( ) > NUMBER ) { for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ? org.w3c.dom.Element . java.lang.String ( STRING ) : STRING ; java.lang.String java.lang.String = StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ? org.w3c.dom.Element . java.lang.String ( STRING ) : STRING ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING ) ; java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.springframework.integration.config.xml.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; continue; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; if ( boolean == boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.springframework.integration.config.xml.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; continue; } if ( boolean ) { java.lang.String = STRING + java.lang.String + STRING ; } java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; } if ( java.util.Map<java.lang.String,java.lang.String> . int ( ) > NUMBER ) { java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> . java.util.Map<java.lang.String,java.lang.String> ( java.lang.String , java.util.Map<java.lang.String,java.lang.String> ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = StringUtils . hasText ( java.lang.String ) ? java.lang.String : java.lang.String ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; org.springframework.integration.config.xml.ManagedMap<java.lang.String,java.lang.Object> . put ( java.lang.String , new RuntimeBeanReference ( java.lang.String ) ) ; } } if ( java.util.Map<java.lang.String,java.lang.String> . int ( ) == NUMBER ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; } java.util.Map<java.lang.String,java.util.Map<?,?>> . java.util.Map<?,?> ( STRING , java.util.Map<java.lang.String,java.lang.String> ) ; if ( java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> . int ( ) > NUMBER ) { java.util.Map<java.lang.String,java.util.Map<?,?>> . java.util.Map<?,?> ( STRING , java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> ) ; } if ( java.util.Map<java.lang.String,java.lang.String> . int ( ) > NUMBER ) { java.util.Map<java.lang.String,java.util.Map<?,?>> . java.util.Map<?,?> ( STRING , java.util.Map<java.lang.String,java.lang.String> ) ; java.util.Map<java.lang.String,java.util.Map<?,?>> . java.util.Map<?,?> ( STRING , org.springframework.integration.config.xml.ManagedMap<java.lang.String,java.lang.Object> ) ; } return java.util.Map<java.lang.String,java.util.Map<?,?>> ; }  <METHOD_END>
