<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.context.annotation.ConfigurationClassSpr8954Tests.FooConfig .class ) ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . getBeanFactory ( ) . addBeanPostProcessor ( new org.springframework.context.annotation.ConfigurationClassSpr8954Tests.PredictingBPP ( ) ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; assertThat ( org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( STRING ) , instanceOf ( org.springframework.context.annotation.ConfigurationClassSpr8954Tests.Foo .class ) ) ; assertThat ( org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( STRING ) , instanceOf ( org.springframework.context.annotation.ConfigurationClassSpr8954Tests.FooFactoryBean .class ) ) ; assertThat ( org.springframework.context.annotation.AnnotationConfigApplicationContext . isTypeMatch ( STRING , FactoryBean .class ) , is ( true ) ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,org.springframework.context.annotation.FactoryBean> < java.lang.String , FactoryBean > java.util.Map<java.lang.String,org.springframework.context.annotation.FactoryBean> = org.springframework.context.annotation.AnnotationConfigApplicationContext . getBeansOfType ( FactoryBean .class ) ; assertThat ( NUMBER , equalTo ( java.util.Map<java.lang.String,org.springframework.context.annotation.FactoryBean> . size ( ) ) ) ; assertThat ( STRING , equalTo ( java.util.Map<java.lang.String,org.springframework.context.annotation.FactoryBean> . keySet ( ) . iterator ( ) . next ( ) ) ) ; java.util.Map<java.lang.String,org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface> < java.lang.String , org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface > java.util.Map<java.lang.String,org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface> = org.springframework.context.annotation.AnnotationConfigApplicationContext . getBeansOfType ( org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface .class ) ; assertThat ( NUMBER , equalTo ( java.util.Map<java.lang.String,org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface> . int ( ) ) ) ; assertThat ( STRING , equalTo ( java.util.Map<java.lang.String,org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface> . java.util.Set<java.lang.String> ( ) . java.util.Iterator<java.lang.String> ( ) . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.context.annotation.ConfigurationClassSpr8954Tests.FooConfig .class ) ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . getBeanFactory ( ) . addBeanPostProcessor ( new org.springframework.context.annotation.ConfigurationClassSpr8954Tests.PredictingBPP ( ) ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; assertThat ( org.springframework.context.annotation.AnnotationConfigApplicationContext . isTypeMatch ( STRING , FactoryBean .class ) , is ( true ) ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,org.springframework.context.annotation.FactoryBean> < java.lang.String , FactoryBean > java.util.Map<java.lang.String,org.springframework.context.annotation.FactoryBean> = org.springframework.context.annotation.AnnotationConfigApplicationContext . getBeansOfType ( FactoryBean .class ) ; assertThat ( NUMBER , equalTo ( java.util.Map<java.lang.String,org.springframework.context.annotation.FactoryBean> . size ( ) ) ) ; assertThat ( STRING , equalTo ( java.util.Map<java.lang.String,org.springframework.context.annotation.FactoryBean> . keySet ( ) . iterator ( ) . next ( ) ) ) ; java.util.Map<java.lang.String,org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface> < java.lang.String , org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface > java.util.Map<java.lang.String,org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface> = org.springframework.context.annotation.AnnotationConfigApplicationContext . getBeansOfType ( org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface .class ) ; assertThat ( NUMBER , equalTo ( java.util.Map<java.lang.String,org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface> . int ( ) ) ) ; assertThat ( STRING , equalTo ( java.util.Map<java.lang.String,org.springframework.context.annotation.ConfigurationClassSpr8954Tests.AnInterface> . java.util.Set<java.lang.String> ( ) . java.util.Iterator<java.lang.String> ( ) . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.context.annotation.ConfigurationClassSpr8954Tests.FooFactoryBean org.springframework.context.annotation.ConfigurationClassSpr8954Tests.FooFactoryBean ( ) { return new org.springframework.context.annotation.ConfigurationClassSpr8954Tests.FooFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.annotation.ConfigurationClassSpr8954Tests.Foo org.springframework.context.annotation.ConfigurationClassSpr8954Tests.Foo ( ) java.lang.Exception { return new org.springframework.context.annotation.ConfigurationClassSpr8954Tests.Foo ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.context.annotation.ConfigurationClassSpr8954Tests.Foo .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { return FactoryBean .class . boolean ( java.lang.Class<> ) ? org.springframework.context.annotation.ConfigurationClassSpr8954Tests.PredictedType .class : null ; }  <METHOD_END>
