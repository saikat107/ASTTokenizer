<METHOD_START> @ Before public void void ( ) { this . org.springframework.integration.http.inbound.MockHttpServletRequest = new MockHttpServletRequest ( ) ; this . org.springframework.integration.http.inbound.MockHttpServletRequest . setMethod ( STRING ) ; this . org.springframework.integration.http.inbound.MockHttpServletRequest . addHeader ( HttpHeaders . ORIGIN , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockHttpServletRequest org.springframework.integration.http.inbound.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; HandlerExecutionChain org.springframework.integration.http.inbound.HandlerExecutionChain = this . org.springframework.integration.http.inbound.IntegrationRequestMappingHandlerMapping . getHandler ( org.springframework.integration.http.inbound.MockHttpServletRequest ) ; CorsConfiguration org.springframework.integration.http.inbound.CorsConfiguration = org.springframework.integration.http.inbound.CorsConfiguration ( org.springframework.integration.http.inbound.HandlerExecutionChain , false ) ; assertNull ( org.springframework.integration.http.inbound.CorsConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.integration.http.inbound.MockHttpServletRequest . setRequestURI ( STRING ) ; HandlerExecutionChain org.springframework.integration.http.inbound.HandlerExecutionChain = this . org.springframework.integration.http.inbound.IntegrationRequestMappingHandlerMapping . getHandler ( org.springframework.integration.http.inbound.MockHttpServletRequest ) ; CorsConfiguration org.springframework.integration.http.inbound.CorsConfiguration = org.springframework.integration.http.inbound.CorsConfiguration ( org.springframework.integration.http.inbound.HandlerExecutionChain , false ) ; assertNull ( org.springframework.integration.http.inbound.CorsConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.integration.http.inbound.MockHttpServletRequest . setMethod ( STRING ) ; this . org.springframework.integration.http.inbound.MockHttpServletRequest . setRequestURI ( STRING ) ; HandlerExecutionChain org.springframework.integration.http.inbound.HandlerExecutionChain = this . org.springframework.integration.http.inbound.IntegrationRequestMappingHandlerMapping . getHandler ( this . org.springframework.integration.http.inbound.MockHttpServletRequest ) ; CorsConfiguration org.springframework.integration.http.inbound.CorsConfiguration = org.springframework.integration.http.inbound.CorsConfiguration ( org.springframework.integration.http.inbound.HandlerExecutionChain , false ) ; assertNull ( org.springframework.integration.http.inbound.CorsConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.integration.http.inbound.MockHttpServletRequest . setRequestURI ( STRING ) ; HandlerExecutionChain org.springframework.integration.http.inbound.HandlerExecutionChain = this . org.springframework.integration.http.inbound.IntegrationRequestMappingHandlerMapping . getHandler ( this . org.springframework.integration.http.inbound.MockHttpServletRequest ) ; CorsConfiguration org.springframework.integration.http.inbound.CorsConfiguration = org.springframework.integration.http.inbound.CorsConfiguration ( org.springframework.integration.http.inbound.HandlerExecutionChain , false ) ; assertNotNull ( org.springframework.integration.http.inbound.CorsConfiguration ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedMethods ( ) . toArray ( ) ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedOrigins ( ) . toArray ( ) ) ; assertTrue ( org.springframework.integration.http.inbound.CorsConfiguration . getAllowCredentials ( ) ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedHeaders ( ) . toArray ( ) ) ; assertNull ( org.springframework.integration.http.inbound.CorsConfiguration . getExposedHeaders ( ) ) ; assertEquals ( new java.lang.Long ( NUMBER ) , org.springframework.integration.http.inbound.CorsConfiguration . getMaxAge ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.integration.http.inbound.MockHttpServletRequest . setRequestURI ( STRING ) ; HandlerExecutionChain org.springframework.integration.http.inbound.HandlerExecutionChain = this . org.springframework.integration.http.inbound.IntegrationRequestMappingHandlerMapping . getHandler ( this . org.springframework.integration.http.inbound.MockHttpServletRequest ) ; CorsConfiguration org.springframework.integration.http.inbound.CorsConfiguration = org.springframework.integration.http.inbound.CorsConfiguration ( org.springframework.integration.http.inbound.HandlerExecutionChain , false ) ; assertNotNull ( org.springframework.integration.http.inbound.CorsConfiguration ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedMethods ( ) . toArray ( ) ) ; assertArrayEquals ( new java.lang.String [] { STRING , STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedOrigins ( ) . toArray ( ) ) ; assertArrayEquals ( new java.lang.String [] { STRING , STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedHeaders ( ) . toArray ( ) ) ; assertArrayEquals ( new java.lang.String [] { STRING , STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getExposedHeaders ( ) . toArray ( ) ) ; assertEquals ( new java.lang.Long ( NUMBER ) , org.springframework.integration.http.inbound.CorsConfiguration . getMaxAge ( ) ) ; assertEquals ( false , org.springframework.integration.http.inbound.CorsConfiguration . getAllowCredentials ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.integration.http.inbound.MockHttpServletRequest . setMethod ( STRING ) ; this . org.springframework.integration.http.inbound.MockHttpServletRequest . addHeader ( HttpHeaders . ACCESS_CONTROL_REQUEST_METHOD , STRING ) ; this . org.springframework.integration.http.inbound.MockHttpServletRequest . setRequestURI ( STRING ) ; HandlerExecutionChain org.springframework.integration.http.inbound.HandlerExecutionChain = this . org.springframework.integration.http.inbound.IntegrationRequestMappingHandlerMapping . getHandler ( this . org.springframework.integration.http.inbound.MockHttpServletRequest ) ; CorsConfiguration org.springframework.integration.http.inbound.CorsConfiguration = org.springframework.integration.http.inbound.CorsConfiguration ( org.springframework.integration.http.inbound.HandlerExecutionChain , true ) ; assertNotNull ( org.springframework.integration.http.inbound.CorsConfiguration ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedMethods ( ) . toArray ( ) ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedOrigins ( ) . toArray ( ) ) ; assertTrue ( org.springframework.integration.http.inbound.CorsConfiguration . getAllowCredentials ( ) ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedHeaders ( ) . toArray ( ) ) ; assertNull ( org.springframework.integration.http.inbound.CorsConfiguration . getExposedHeaders ( ) ) ; assertEquals ( new java.lang.Long ( NUMBER ) , org.springframework.integration.http.inbound.CorsConfiguration . getMaxAge ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.integration.http.inbound.MockHttpServletRequest . setMethod ( STRING ) ; this . org.springframework.integration.http.inbound.MockHttpServletRequest . addHeader ( HttpHeaders . ACCESS_CONTROL_REQUEST_METHOD , STRING ) ; this . org.springframework.integration.http.inbound.MockHttpServletRequest . addHeader ( HttpHeaders . ACCESS_CONTROL_REQUEST_HEADERS , STRING ) ; this . org.springframework.integration.http.inbound.MockHttpServletRequest . setRequestURI ( STRING ) ; HandlerExecutionChain org.springframework.integration.http.inbound.HandlerExecutionChain = this . org.springframework.integration.http.inbound.IntegrationRequestMappingHandlerMapping . getHandler ( this . org.springframework.integration.http.inbound.MockHttpServletRequest ) ; CorsConfiguration org.springframework.integration.http.inbound.CorsConfiguration = org.springframework.integration.http.inbound.CorsConfiguration ( org.springframework.integration.http.inbound.HandlerExecutionChain , true ) ; assertNotNull ( org.springframework.integration.http.inbound.CorsConfiguration ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedMethods ( ) . toArray ( ) ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedOrigins ( ) . toArray ( ) ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedHeaders ( ) . toArray ( ) ) ; assertTrue ( org.springframework.integration.http.inbound.CorsConfiguration . getAllowCredentials ( ) ) ; assertNull ( org.springframework.integration.http.inbound.CorsConfiguration . getExposedHeaders ( ) ) ; assertNull ( org.springframework.integration.http.inbound.CorsConfiguration . getMaxAge ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.integration.http.inbound.MockHttpServletRequest . setMethod ( STRING ) ; this . org.springframework.integration.http.inbound.MockHttpServletRequest . addHeader ( HttpHeaders . ACCESS_CONTROL_REQUEST_METHOD , STRING ) ; this . org.springframework.integration.http.inbound.MockHttpServletRequest . setRequestURI ( STRING ) ; HandlerExecutionChain org.springframework.integration.http.inbound.HandlerExecutionChain = this . org.springframework.integration.http.inbound.IntegrationRequestMappingHandlerMapping . getHandler ( this . org.springframework.integration.http.inbound.MockHttpServletRequest ) ; CorsConfiguration org.springframework.integration.http.inbound.CorsConfiguration = org.springframework.integration.http.inbound.CorsConfiguration ( org.springframework.integration.http.inbound.HandlerExecutionChain , true ) ; assertNotNull ( org.springframework.integration.http.inbound.CorsConfiguration ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedMethods ( ) . toArray ( ) ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedOrigins ( ) . toArray ( ) ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.integration.http.inbound.CorsConfiguration . getAllowedHeaders ( ) . toArray ( ) ) ; assertTrue ( org.springframework.integration.http.inbound.CorsConfiguration . getAllowCredentials ( ) ) ; assertNull ( org.springframework.integration.http.inbound.CorsConfiguration . getExposedHeaders ( ) ) ; assertNull ( org.springframework.integration.http.inbound.CorsConfiguration . getMaxAge ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockHttpServletRequest org.springframework.integration.http.inbound.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.integration.http.inbound.MockHttpServletRequest . addHeader ( HttpHeaders . ORIGIN , STRING ) ; HandlerExecutionChain org.springframework.integration.http.inbound.HandlerExecutionChain = this . org.springframework.integration.http.inbound.IntegrationRequestMappingHandlerMapping . getHandler ( org.springframework.integration.http.inbound.MockHttpServletRequest ) ; assertNotNull ( org.springframework.integration.http.inbound.HandlerExecutionChain ) ; java.lang.Object java.lang.Object = org.springframework.integration.http.inbound.HandlerExecutionChain . getHandler ( ) ; assertNotNull ( java.lang.Object ) ; assertThat ( java.lang.Object , instanceOf ( HandlerMethod .class ) ) ; assertThat ( ( ( HandlerMethod ) java.lang.Object ) . getBeanType ( ) . getName ( ) , containsString ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.http.inbound.CorsConfiguration org.springframework.integration.http.inbound.CorsConfiguration ( HandlerExecutionChain org.springframework.integration.http.inbound.HandlerExecutionChain , boolean boolean ) { if ( boolean ) { java.lang.Object java.lang.Object = org.springframework.integration.http.inbound.HandlerExecutionChain . getHandler ( ) ; assertTrue ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) . boolean ( STRING ) ) ; return TestUtils . getPropertyValue ( java.lang.Object , STRING , CorsConfiguration .class ) ; } else { HandlerInterceptor [] org.springframework.integration.http.inbound.HandlerInterceptor[] = org.springframework.integration.http.inbound.HandlerExecutionChain . getInterceptors ( ) ; if ( org.springframework.integration.http.inbound.HandlerInterceptor[] != null ) { for ( HandlerInterceptor org.springframework.integration.http.inbound.HandlerInterceptor : org.springframework.integration.http.inbound.HandlerInterceptor[] ) { if ( org.springframework.integration.http.inbound.HandlerInterceptor . getClass ( ) . getSimpleName ( ) . equals ( STRING ) ) { return TestUtils . getPropertyValue ( org.springframework.integration.http.inbound.HandlerInterceptor , STRING , CorsConfiguration .class ) ; } } } } return null ; }  <METHOD_END>
