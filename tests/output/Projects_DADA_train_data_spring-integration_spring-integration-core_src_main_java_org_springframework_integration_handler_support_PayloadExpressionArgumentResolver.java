<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.integration.handler.support.MethodParameter ) { Payload org.springframework.integration.handler.support.Payload = org.springframework.integration.handler.support.MethodParameter . getParameterAnnotation ( Payload .class ) ; return org.springframework.integration.handler.support.Payload != null && StringUtils . hasText ( org.springframework.integration.handler.support.Payload . expression ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( MethodParameter org.springframework.integration.handler.support.MethodParameter , Message < ? > org.springframework.integration.handler.support.Message<?> ) throws java.lang.Exception { Expression org.springframework.integration.handler.support.Expression = this . java.util.Map<org.springframework.integration.handler.support.MethodParameter,org.springframework.integration.handler.support.Expression> . get ( org.springframework.integration.handler.support.MethodParameter ) ; if ( org.springframework.integration.handler.support.Expression == null ) { Payload org.springframework.integration.handler.support.Payload = org.springframework.integration.handler.support.MethodParameter . getParameterAnnotation ( Payload .class ) ; org.springframework.integration.handler.support.Expression = EXPRESSION_PARSER . parseExpression ( org.springframework.integration.handler.support.Payload . expression ( ) ) ; this . java.util.Map<org.springframework.integration.handler.support.MethodParameter,org.springframework.integration.handler.support.Expression> . put ( org.springframework.integration.handler.support.MethodParameter , org.springframework.integration.handler.support.Expression ) ; } return evaluateExpression ( org.springframework.integration.handler.support.Expression , org.springframework.integration.handler.support.Message<> . getPayload ( ) , org.springframework.integration.handler.support.MethodParameter . getParameterType ( ) ) ; }  <METHOD_END>
