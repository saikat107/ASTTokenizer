<METHOD_START> public void ( Model org.springframework.boot.cli.compiler.dependencies.Model ) { this . java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> = java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> ( org.springframework.boot.cli.compiler.dependencies.Model ) ; for ( Dependency org.springframework.boot.cli.compiler.dependencies.Dependency : this . java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> ) { this . java.util.Map<java.lang.String,org.springframework.boot.cli.compiler.dependencies.Dependency> . put ( org.springframework.boot.cli.compiler.dependencies.Dependency . getArtifactId ( ) , org.springframework.boot.cli.compiler.dependencies.Dependency ) ; } }  <METHOD_END>
<METHOD_START> private static java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> < Dependency > java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> ( Model org.springframework.boot.cli.compiler.dependencies.Model ) { java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> < Dependency > java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> = new java.util.ArrayList<org.springframework.boot.cli.compiler.dependencies.Dependency> <> ( ) ; for ( org . org.apache . org.apache . org.apache . org.apache org.apache.maven.model.Dependency : org.springframework.boot.cli.compiler.dependencies.Model . getDependencyManagement ( ) . getDependencies ( ) ) { java.util.List<org.springframework.boot.cli.compiler.dependencies.Exclusion> < Exclusion > java.util.List<org.springframework.boot.cli.compiler.dependencies.Exclusion> = new java.util.ArrayList<org.springframework.boot.cli.compiler.dependencies.Exclusion> <> ( ) ; for ( org . org.apache . org.apache . org.apache . org.apache org.apache.maven.model.Exclusion : org.apache.maven.model.Dependency . getExclusions ( ) ) { java.util.List<org.springframework.boot.cli.compiler.dependencies.Exclusion> . add ( new Exclusion ( org.apache.maven.model.Exclusion . getGroupId ( ) , org.apache.maven.model.Exclusion . getArtifactId ( ) ) ) ; } Dependency org.springframework.boot.cli.compiler.dependencies.Dependency = new Dependency ( org.apache.maven.model.Dependency . getGroupId ( ) , org.apache.maven.model.Dependency . getArtifactId ( ) , org.apache.maven.model.Dependency . getVersion ( ) , java.util.List<org.springframework.boot.cli.compiler.dependencies.Exclusion> ) ; java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> . add ( org.springframework.boot.cli.compiler.dependencies.Dependency ) ; } return java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> < Dependency > java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> ( ) { return this . java.util.List<org.springframework.boot.cli.compiler.dependencies.Dependency> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.boot.cli.compiler.dependencies.Dependency ( STRING ) . getVersion ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.cli.compiler.dependencies.Dependency org.springframework.boot.cli.compiler.dependencies.Dependency ( java.lang.String java.lang.String ) { return this . java.util.Map<java.lang.String,org.springframework.boot.cli.compiler.dependencies.Dependency> . get ( java.lang.String ) ; }  <METHOD_END>
