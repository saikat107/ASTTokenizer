<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.gemfire.Cache = org.springframework.data.gemfire.ApplicationContext . getBean ( STRING , Cache .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.gemfire.Cache = org.springframework.data.gemfire.ApplicationContext . getBean ( STRING , Cache .class ) ; assertEquals ( STRING , org.springframework.data.gemfire.Cache . getDistributedSystem ( ) . getName ( ) ) ; assertEquals ( STRING , org.springframework.data.gemfire.Cache . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.gemfire.Cache = org.springframework.data.gemfire.ApplicationContext . getBean ( STRING , Cache .class ) ; assertEquals ( STRING , org.springframework.data.gemfire.Cache . getDistributedSystem ( ) . getName ( ) ) ; assertEquals ( STRING , org.springframework.data.gemfire.Cache . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.gemfire.ApplicationContext . getBean ( STRING , Cache .class ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { if ( org.springframework.data.gemfire.Cache != null ) org.springframework.data.gemfire.Cache . close ( ) ; }  <METHOD_END>
