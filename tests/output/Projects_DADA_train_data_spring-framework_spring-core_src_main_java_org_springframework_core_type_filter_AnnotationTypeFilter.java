<METHOD_START> public void ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ) { this( java.lang.Class<> , true , false ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , boolean boolean ) { this( java.lang.Class<> , boolean , false ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , boolean boolean , boolean boolean ) { super( java.lang.Class<> . boolean ( java.lang.annotation.Inherited .class ) , boolean ); this . java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.Class<> ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public final java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ( ) { return this . java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( MetadataReader org.springframework.core.type.filter.MetadataReader ) { AnnotationMetadata org.springframework.core.type.filter.AnnotationMetadata = org.springframework.core.type.filter.MetadataReader . getAnnotationMetadata ( ) ; return org.springframework.core.type.filter.AnnotationMetadata . hasAnnotation ( this . java.lang.Class<> . java.lang.String ( ) ) || ( this . boolean && org.springframework.core.type.filter.AnnotationMetadata . hasMetaAnnotation ( this . java.lang.Class<> . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Boolean java.lang.Boolean ( java.lang.String java.lang.String ) { return java.lang.Boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Boolean java.lang.Boolean ( java.lang.String java.lang.String ) { return java.lang.Boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Boolean java.lang.Boolean ( java.lang.String java.lang.String ) { if ( java.lang.Object .class . java.lang.String ( ) . boolean ( java.lang.String ) ) { return false ; } else if ( java.lang.String . boolean ( STRING ) ) { try { java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . forName ( java.lang.String , java.lang.Class<? extends org.springframework.core.type.filter.AnnotationTypeFilter> ( ) . java.lang.ClassLoader ( ) ) ; return ( ( this . boolean ? AnnotationUtils . getAnnotation ( java.lang.Class<> , this . java.lang.Class<> ) : java.lang.Class<> . getAnnotation ( this . java.lang.Class<> ) ) != null ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { } } return null ; }  <METHOD_END>
