<METHOD_START> public void ( CacheManager org.springframework.web.servlet.resource.CacheManager , java.lang.String java.lang.String ) { this( org.springframework.web.servlet.resource.CacheManager . getCache ( java.lang.String ) ); }  <METHOD_END>
<METHOD_START> public void ( Cache org.springframework.web.servlet.resource.Cache ) { Assert . notNull ( org.springframework.web.servlet.resource.Cache , STRING ) ; this . org.springframework.web.servlet.resource.Cache = org.springframework.web.servlet.resource.Cache ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.resource.Cache org.springframework.web.servlet.resource.Cache ( ) { return this . org.springframework.web.servlet.resource.Cache ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.resource.Resource org.springframework.web.servlet.resource.Resource ( HttpServletRequest org.springframework.web.servlet.resource.HttpServletRequest , Resource org.springframework.web.servlet.resource.Resource , ResourceTransformerChain org.springframework.web.servlet.resource.ResourceTransformerChain )			throws java.io.IOException { Resource org.springframework.web.servlet.resource.Resource = this . org.springframework.web.servlet.resource.Cache . get ( org.springframework.web.servlet.resource.Resource , Resource .class ) ; if ( org.springframework.web.servlet.resource.Resource != null ) { if ( org.springframework.web.servlet.resource.Log . isTraceEnabled ( ) ) { org.springframework.web.servlet.resource.Log . trace ( STRING + org.springframework.web.servlet.resource.Resource ) ; } return org.springframework.web.servlet.resource.Resource ; } org.springframework.web.servlet.resource.Resource = org.springframework.web.servlet.resource.ResourceTransformerChain . transform ( org.springframework.web.servlet.resource.HttpServletRequest , org.springframework.web.servlet.resource.Resource ) ; if ( org.springframework.web.servlet.resource.Log . isTraceEnabled ( ) ) { org.springframework.web.servlet.resource.Log . trace ( STRING + org.springframework.web.servlet.resource.Resource ) ; } this . org.springframework.web.servlet.resource.Cache . put ( org.springframework.web.servlet.resource.Resource , org.springframework.web.servlet.resource.Resource ) ; return org.springframework.web.servlet.resource.Resource ; }  <METHOD_END>
