<METHOD_START> public static int [] int[] ( java.lang.String java.lang.String , final java.util.List<java.lang.Object[]> < java.lang.Object [] > java.util.List<java.lang.Object[]> , final int [] int[] , JdbcOperations org.springframework.jdbc.core.JdbcOperations ) { return org.springframework.jdbc.core.JdbcOperations . batchUpdate ( java.lang.String , new BatchPreparedStatementSetter ( ) { @ java.lang.Override public void void ( java.sql.PreparedStatement java.sql.PreparedStatement , int int ) throws java.sql.SQLException { java.lang.Object [] java.lang.Object[] = java.util.List<java.lang.Object[]> . java.lang.Object[] ( int ) ; void ( java.lang.Object[] , java.sql.PreparedStatement , int[] ) ; } @ java.lang.Override public int int ( ) { return java.util.List<java.lang.Object[]> . int ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.sql.PreparedStatement java.sql.PreparedStatement , int int ) throws java.sql.SQLException { java.lang.Object [] java.lang.Object[] = java.util.List<java.lang.Object[]> . java.lang.Object[] ( int ) ; void ( java.lang.Object[] , java.sql.PreparedStatement , int[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.util.List<java.lang.Object[]> . int ( ) ; }  <METHOD_END>
<METHOD_START> protected static void void ( java.lang.Object [] java.lang.Object[] , java.sql.PreparedStatement java.sql.PreparedStatement , int [] int[] ) throws java.sql.SQLException { int int = NUMBER ; for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { int ++ ; if ( java.lang.Object instanceof SqlParameterValue ) { SqlParameterValue org.springframework.jdbc.core.SqlParameterValue = ( SqlParameterValue ) java.lang.Object ; StatementCreatorUtils . setParameterValue ( java.sql.PreparedStatement , int , org.springframework.jdbc.core.SqlParameterValue , org.springframework.jdbc.core.SqlParameterValue . getValue ( ) ) ; } else { int int ; if ( int[] == null || int[] . int < int ) { int = SqlTypeValue . TYPE_UNKNOWN ; } else { int = int[] [ int - NUMBER ] ; } StatementCreatorUtils . setParameterValue ( java.sql.PreparedStatement , int , int , java.lang.Object ) ; } } }  <METHOD_END>
