<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < ? extends HttpMessageConverter < ? > > java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> ) { return super. supports ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter , java.lang.Class<> ) && org.springframework.web.servlet.mvc.method.annotation.MethodParameter . hasMethodAnnotation ( JsonView .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( MappingJacksonValue org.springframework.web.servlet.mvc.method.annotation.MappingJacksonValue , MediaType org.springframework.web.servlet.mvc.method.annotation.MediaType , MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , ServerHttpRequest org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest , ServerHttpResponse org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse ) { JsonView org.springframework.web.servlet.mvc.method.annotation.JsonView = org.springframework.web.servlet.mvc.method.annotation.MethodParameter . getMethodAnnotation ( JsonView .class ) ; java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.web.servlet.mvc.method.annotation.JsonView . value ( ) ; if ( java.lang.Class<?>[] . int != NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) ; } org.springframework.web.servlet.mvc.method.annotation.MappingJacksonValue . setSerializationView ( java.lang.Class<?>[] [ NUMBER ] ) ; }  <METHOD_END>
