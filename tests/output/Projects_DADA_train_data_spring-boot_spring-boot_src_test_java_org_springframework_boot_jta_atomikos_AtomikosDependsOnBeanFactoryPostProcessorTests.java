<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.jta.atomikos.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.jta.atomikos.AtomikosDependsOnBeanFactoryPostProcessorTests.Config .class ) ; void ( STRING ) ; void ( STRING ) ; void ( STRING , STRING , STRING ) ; void ( STRING , STRING ) ; this . org.springframework.boot.jta.atomikos.AnnotationConfigApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.lang.String ... java.lang.String[] ) { BeanDefinition org.springframework.boot.jta.atomikos.BeanDefinition = this . org.springframework.boot.jta.atomikos.AnnotationConfigApplicationContext . getBeanDefinition ( java.lang.String ) ; if ( org.springframework.boot.jta.atomikos.BeanDefinition . getDependsOn ( ) == null ) { assertThat ( java.lang.String[] ) . as ( STRING + java.lang.String ) . isEmpty ( ) ; return; } java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> = new java.util.HashSet <> ( java.util.Arrays . java.util.List ( org.springframework.boot.jta.atomikos.BeanDefinition . getDependsOn ( ) ) ) ; assertThat ( java.util.HashSet<java.lang.String> ) . isEqualTo ( new java.util.HashSet <> ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public javax.sql.DataSource javax.sql.DataSource ( ) { return mock ( javax.sql.DataSource .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.jta.atomikos.ConnectionFactory org.springframework.boot.jta.atomikos.ConnectionFactory ( ) { return mock ( ConnectionFactory .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.jta.atomikos.UserTransactionManager org.springframework.boot.jta.atomikos.UserTransactionManager ( ) { return mock ( UserTransactionManager .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.jta.atomikos.MessageDrivenContainer org.springframework.boot.jta.atomikos.MessageDrivenContainer ( ) { return mock ( MessageDrivenContainer .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public static org.springframework.boot.jta.atomikos.AtomikosDependsOnBeanFactoryPostProcessor org.springframework.boot.jta.atomikos.AtomikosDependsOnBeanFactoryPostProcessor ( ) { return new AtomikosDependsOnBeanFactoryPostProcessor ( ) ; }  <METHOD_END>
