<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; if ( boolean ) { void ( true ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> protected org.w3c.dom.Document org.w3c.dom.Document ( ) { try { javax.xml.parsers.DocumentBuilder javax.xml.parsers.DocumentBuilder ; synchronized ( this . java.lang.Object ) { if ( this . javax.xml.parsers.DocumentBuilderFactory == null ) { this . javax.xml.parsers.DocumentBuilderFactory = javax.xml.parsers.DocumentBuilderFactory ( ) ; } javax.xml.parsers.DocumentBuilder = javax.xml.parsers.DocumentBuilder ( this . javax.xml.parsers.DocumentBuilderFactory ) ; } return javax.xml.parsers.DocumentBuilder . org.w3c.dom.Document ( ) ; } catch ( javax.xml.parsers.ParserConfigurationException javax.xml.parsers.ParserConfigurationException ) { throw new UnmarshallingFailureException ( STRING + javax.xml.parsers.ParserConfigurationException . java.lang.String ( ) , javax.xml.parsers.ParserConfigurationException ) ; } }  <METHOD_END>
<METHOD_START> protected javax.xml.parsers.DocumentBuilderFactory javax.xml.parsers.DocumentBuilderFactory ( ) javax.xml.parsers.ParserConfigurationException { javax.xml.parsers.DocumentBuilderFactory javax.xml.parsers.DocumentBuilderFactory = javax.xml.parsers.DocumentBuilderFactory . javax.xml.parsers.DocumentBuilderFactory ( ) ; javax.xml.parsers.DocumentBuilderFactory . void ( false ) ; javax.xml.parsers.DocumentBuilderFactory . void ( true ) ; javax.xml.parsers.DocumentBuilderFactory . void ( STRING , ! boolean ( ) ) ; javax.xml.parsers.DocumentBuilderFactory . void ( STRING , boolean ( ) ) ; return javax.xml.parsers.DocumentBuilderFactory ; }  <METHOD_END>
<METHOD_START> protected javax.xml.parsers.DocumentBuilder javax.xml.parsers.DocumentBuilder ( javax.xml.parsers.DocumentBuilderFactory javax.xml.parsers.DocumentBuilderFactory )			throws javax.xml.parsers.ParserConfigurationException { javax.xml.parsers.DocumentBuilder javax.xml.parsers.DocumentBuilder = javax.xml.parsers.DocumentBuilderFactory . javax.xml.parsers.DocumentBuilder ( ) ; if ( ! boolean ( ) ) { javax.xml.parsers.DocumentBuilder . void ( org.xml.sax.EntityResolver ) ; } return javax.xml.parsers.DocumentBuilder ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected org.xml.sax.XMLReader org.xml.sax.XMLReader ( ) org.xml.sax.SAXException { org.xml.sax.XMLReader org.xml.sax.XMLReader = org . xml . sax . helpers . org.xml.sax.helpers.XMLReaderFactory . org.xml.sax.XMLReader ( ) ; org.xml.sax.XMLReader . void ( STRING , ! boolean ( ) ) ; org.xml.sax.XMLReader . void ( STRING , boolean ( ) ) ; if ( ! boolean ( ) ) { org.xml.sax.XMLReader . void ( org.xml.sax.EntityResolver ) ; } return org.xml.sax.XMLReader ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( java.lang.Object java.lang.Object , javax.xml.transform.Result javax.xml.transform.Result ) throws java.io.IOException , org.springframework.oxm.support.XmlMappingException { if ( javax.xml.transform.Result instanceof javax.xml.transform.dom.DOMResult ) { void ( java.lang.Object , ( javax.xml.transform.dom.DOMResult ) javax.xml.transform.Result ) ; } else if ( StaxUtils . isStaxResult ( javax.xml.transform.Result ) ) { void ( java.lang.Object , javax.xml.transform.Result ) ; } else if ( javax.xml.transform.Result instanceof javax.xml.transform.sax.SAXResult ) { void ( java.lang.Object , ( javax.xml.transform.sax.SAXResult ) javax.xml.transform.Result ) ; } else if ( javax.xml.transform.Result instanceof javax.xml.transform.stream.StreamResult ) { void ( java.lang.Object , ( javax.xml.transform.stream.StreamResult ) javax.xml.transform.Result ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + javax.xml.transform.Result . java.lang.Class<? extends javax.xml.transform.Result> ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.Object java.lang.Object , javax.xml.transform.dom.DOMResult javax.xml.transform.dom.DOMResult ) throws org.springframework.oxm.support.XmlMappingException { if ( javax.xml.transform.dom.DOMResult . org.w3c.dom.Node ( ) == null ) { javax.xml.transform.dom.DOMResult . void ( org.w3c.dom.Document ( ) ) ; } void ( java.lang.Object , javax.xml.transform.dom.DOMResult . org.w3c.dom.Node ( ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.Object java.lang.Object , javax.xml.transform.Result javax.xml.transform.Result ) throws org.springframework.oxm.support.XmlMappingException { javax.xml.stream.XMLStreamWriter javax.xml.stream.XMLStreamWriter = StaxUtils . getXMLStreamWriter ( javax.xml.transform.Result ) ; if ( javax.xml.stream.XMLStreamWriter != null ) { void ( java.lang.Object , javax.xml.stream.XMLStreamWriter ) ; } else { javax.xml.stream.XMLEventWriter javax.xml.stream.XMLEventWriter = StaxUtils . getXMLEventWriter ( javax.xml.transform.Result ) ; if ( javax.xml.stream.XMLEventWriter != null ) { void ( java.lang.Object , javax.xml.stream.XMLEventWriter ) ; } else { throw new java.lang.IllegalArgumentException ( STRING ) ; } } }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.Object java.lang.Object , javax.xml.transform.sax.SAXResult javax.xml.transform.sax.SAXResult ) throws org.springframework.oxm.support.XmlMappingException { org.xml.sax.ContentHandler org.xml.sax.ContentHandler = javax.xml.transform.sax.SAXResult . org.xml.sax.ContentHandler ( ) ; Assert . notNull ( org.xml.sax.ContentHandler , STRING ) ; org.xml.sax.ext.LexicalHandler org.xml.sax.ext.LexicalHandler = javax.xml.transform.sax.SAXResult . org.xml.sax.ext.LexicalHandler ( ) ; void ( java.lang.Object , org.xml.sax.ContentHandler , org.xml.sax.ext.LexicalHandler ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.Object java.lang.Object , javax.xml.transform.stream.StreamResult javax.xml.transform.stream.StreamResult )			throws org.springframework.oxm.support.XmlMappingException , java.io.IOException { if ( javax.xml.transform.stream.StreamResult . java.io.OutputStream ( ) != null ) { void ( java.lang.Object , javax.xml.transform.stream.StreamResult . java.io.OutputStream ( ) ) ; } else if ( javax.xml.transform.stream.StreamResult . java.io.Writer ( ) != null ) { void ( java.lang.Object , javax.xml.transform.stream.StreamResult . java.io.Writer ( ) ) ; } else { throw new java.lang.IllegalArgumentException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final java.lang.Object java.lang.Object ( javax.xml.transform.Source javax.xml.transform.Source ) throws java.io.IOException , org.springframework.oxm.support.XmlMappingException { if ( javax.xml.transform.Source instanceof javax.xml.transform.dom.DOMSource ) { return java.lang.Object ( ( javax.xml.transform.dom.DOMSource ) javax.xml.transform.Source ) ; } else if ( StaxUtils . isStaxSource ( javax.xml.transform.Source ) ) { return java.lang.Object ( javax.xml.transform.Source ) ; } else if ( javax.xml.transform.Source instanceof javax.xml.transform.sax.SAXSource ) { return java.lang.Object ( ( javax.xml.transform.sax.SAXSource ) javax.xml.transform.Source ) ; } else if ( javax.xml.transform.Source instanceof javax.xml.transform.stream.StreamSource ) { return java.lang.Object ( ( javax.xml.transform.stream.StreamSource ) javax.xml.transform.Source ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + javax.xml.transform.Source . java.lang.Class<? extends javax.xml.transform.Source> ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( javax.xml.transform.dom.DOMSource javax.xml.transform.dom.DOMSource ) throws org.springframework.oxm.support.XmlMappingException { if ( javax.xml.transform.dom.DOMSource . org.w3c.dom.Node ( ) == null ) { javax.xml.transform.dom.DOMSource . void ( org.w3c.dom.Document ( ) ) ; } try { return java.lang.Object ( javax.xml.transform.dom.DOMSource . org.w3c.dom.Node ( ) ) ; } catch ( java.lang.NullPointerException java.lang.NullPointerException ) { if ( ! boolean ( ) ) { throw new UnmarshallingFailureException ( STRING + STRING + STRING , java.lang.NullPointerException ) ; } throw java.lang.NullPointerException ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( javax.xml.transform.Source javax.xml.transform.Source ) throws org.springframework.oxm.support.XmlMappingException { javax.xml.stream.XMLStreamReader javax.xml.stream.XMLStreamReader = StaxUtils . getXMLStreamReader ( javax.xml.transform.Source ) ; if ( javax.xml.stream.XMLStreamReader != null ) { return java.lang.Object ( javax.xml.stream.XMLStreamReader ) ; } else { javax.xml.stream.XMLEventReader javax.xml.stream.XMLEventReader = StaxUtils . getXMLEventReader ( javax.xml.transform.Source ) ; if ( javax.xml.stream.XMLEventReader != null ) { return java.lang.Object ( javax.xml.stream.XMLEventReader ) ; } else { throw new java.lang.IllegalArgumentException ( STRING ) ; } } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( javax.xml.transform.sax.SAXSource javax.xml.transform.sax.SAXSource ) throws org.springframework.oxm.support.XmlMappingException , java.io.IOException { if ( javax.xml.transform.sax.SAXSource . org.xml.sax.XMLReader ( ) == null ) { try { javax.xml.transform.sax.SAXSource . void ( org.xml.sax.XMLReader ( ) ) ; } catch ( org.xml.sax.SAXException org.xml.sax.SAXException ) { throw new UnmarshallingFailureException ( STRING , org.xml.sax.SAXException ) ; } } if ( javax.xml.transform.sax.SAXSource . org.xml.sax.InputSource ( ) == null ) { javax.xml.transform.sax.SAXSource . void ( new org.xml.sax.InputSource ( ) ) ; } try { return java.lang.Object ( javax.xml.transform.sax.SAXSource . org.xml.sax.XMLReader ( ) , javax.xml.transform.sax.SAXSource . org.xml.sax.InputSource ( ) ) ; } catch ( java.lang.NullPointerException java.lang.NullPointerException ) { if ( ! boolean ( ) ) { throw new UnmarshallingFailureException ( STRING + STRING + STRING ) ; } throw java.lang.NullPointerException ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( javax.xml.transform.stream.StreamSource javax.xml.transform.stream.StreamSource ) throws org.springframework.oxm.support.XmlMappingException , java.io.IOException { if ( javax.xml.transform.stream.StreamSource . java.io.InputStream ( ) != null ) { if ( boolean ( ) && boolean ( ) ) { return java.lang.Object ( javax.xml.transform.stream.StreamSource . java.io.InputStream ( ) ) ; } else { org.xml.sax.InputSource org.xml.sax.InputSource = new org.xml.sax.InputSource ( javax.xml.transform.stream.StreamSource . java.io.InputStream ( ) ) ; org.xml.sax.InputSource . void ( java.lang.String ( ) ) ; return java.lang.Object ( new javax.xml.transform.sax.SAXSource ( org.xml.sax.InputSource ) ) ; } } else if ( javax.xml.transform.stream.StreamSource . java.io.Reader ( ) != null ) { if ( boolean ( ) && boolean ( ) ) { return java.lang.Object ( javax.xml.transform.stream.StreamSource . java.io.Reader ( ) ) ; } else { return java.lang.Object ( new javax.xml.transform.sax.SAXSource ( new org.xml.sax.InputSource ( javax.xml.transform.stream.StreamSource . java.io.Reader ( ) ) ) ) ; } } else { return java.lang.Object ( new javax.xml.transform.sax.SAXSource ( new org.xml.sax.InputSource ( javax.xml.transform.stream.StreamSource . java.lang.String ( ) ) ) ) ; } }  <METHOD_END>
<METHOD_START> protected abstract void void ( java.lang.Object java.lang.Object , org.w3c.dom.Node org.w3c.dom.Node )			throws org.springframework.oxm.support.XmlMappingException ;  <METHOD_END>
<METHOD_START> protected abstract void void ( java.lang.Object java.lang.Object , javax.xml.stream.XMLEventWriter javax.xml.stream.XMLEventWriter )			throws org.springframework.oxm.support.XmlMappingException ;  <METHOD_END>
<METHOD_START> protected abstract void void ( java.lang.Object java.lang.Object , javax.xml.stream.XMLStreamWriter javax.xml.stream.XMLStreamWriter )			throws org.springframework.oxm.support.XmlMappingException ;  <METHOD_END>
<METHOD_START> protected abstract void void ( java.lang.Object java.lang.Object , org.xml.sax.ContentHandler org.xml.sax.ContentHandler , org.xml.sax.ext.LexicalHandler org.xml.sax.ext.LexicalHandler )			throws org.springframework.oxm.support.XmlMappingException ;  <METHOD_END>
<METHOD_START> protected abstract void void ( java.lang.Object java.lang.Object , java.io.OutputStream java.io.OutputStream )			throws org.springframework.oxm.support.XmlMappingException , java.io.IOException ;  <METHOD_END>
<METHOD_START> protected abstract void void ( java.lang.Object java.lang.Object , java.io.Writer java.io.Writer )			throws org.springframework.oxm.support.XmlMappingException , java.io.IOException ;  <METHOD_END>
<METHOD_START> protected abstract java.lang.Object java.lang.Object ( org.w3c.dom.Node org.w3c.dom.Node ) throws org.springframework.oxm.support.XmlMappingException ;  <METHOD_END>
<METHOD_START> protected abstract java.lang.Object java.lang.Object ( javax.xml.stream.XMLEventReader javax.xml.stream.XMLEventReader )			throws org.springframework.oxm.support.XmlMappingException ;  <METHOD_END>
<METHOD_START> protected abstract java.lang.Object java.lang.Object ( javax.xml.stream.XMLStreamReader javax.xml.stream.XMLStreamReader )			throws org.springframework.oxm.support.XmlMappingException ;  <METHOD_END>
<METHOD_START> protected abstract java.lang.Object java.lang.Object ( org.xml.sax.XMLReader org.xml.sax.XMLReader , org.xml.sax.InputSource org.xml.sax.InputSource )			throws org.springframework.oxm.support.XmlMappingException , java.io.IOException ;  <METHOD_END>
<METHOD_START> protected abstract java.lang.Object java.lang.Object ( java.io.InputStream java.io.InputStream )			throws org.springframework.oxm.support.XmlMappingException , java.io.IOException ;  <METHOD_END>
<METHOD_START> protected abstract java.lang.Object java.lang.Object ( java.io.Reader java.io.Reader )			throws org.springframework.oxm.support.XmlMappingException , java.io.IOException ;  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.xml.sax.InputSource org.xml.sax.InputSource ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return new org.xml.sax.InputSource ( new java.io.StringReader ( STRING ) ) ; }  <METHOD_END>
