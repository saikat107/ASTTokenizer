<METHOD_START> void ( javax.xml.stream.XMLStreamReader javax.xml.stream.XMLStreamReader ) { Assert . notNull ( javax.xml.stream.XMLStreamReader , STRING ) ; int int = javax.xml.stream.XMLStreamReader . int ( ) ; if ( ! ( int == javax.xml.stream.XMLStreamConstants . int || int == javax.xml.stream.XMLStreamConstants . int ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } this . javax.xml.stream.XMLStreamReader = javax.xml.stream.XMLStreamReader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) org.xml.sax.SAXException , javax.xml.stream.XMLStreamException { boolean boolean = false ; boolean boolean = false ; int int = NUMBER ; int int = this . javax.xml.stream.XMLStreamReader . int ( ) ; while ( true ) { if ( int != javax.xml.stream.XMLStreamConstants . int && int != javax.xml.stream.XMLStreamConstants . int && ! boolean ) { void ( ) ; boolean = true ; } switch ( int ) { case javax.xml.stream.XMLStreamConstants . int : int ++ ; void ( ) ; break; case javax.xml.stream.XMLStreamConstants . int : int -- ; if ( int >= NUMBER ) { void ( ) ; } break; case javax.xml.stream.XMLStreamConstants . int : void ( ) ; break; case javax.xml.stream.XMLStreamConstants . int : case javax.xml.stream.XMLStreamConstants . int : case javax.xml.stream.XMLStreamConstants . int : void ( ) ; break; case javax.xml.stream.XMLStreamConstants . int : void ( ) ; boolean = true ; break; case javax.xml.stream.XMLStreamConstants . int : void ( ) ; boolean = true ; break; case javax.xml.stream.XMLStreamConstants . int : void ( ) ; break; case javax.xml.stream.XMLStreamConstants . int : void ( ) ; break; case javax.xml.stream.XMLStreamConstants . int : void ( ) ; break; } if ( this . javax.xml.stream.XMLStreamReader . boolean ( ) && int >= NUMBER ) { int = this . javax.xml.stream.XMLStreamReader . int ( ) ; } else { break; } } if ( ! boolean ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) org.xml.sax.SAXException { if ( javax.xml.stream.XMLStreamConstants . int == this . javax.xml.stream.XMLStreamReader . int ( ) ) { java.lang.String java.lang.String = this . javax.xml.stream.XMLStreamReader . java.lang.String ( ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { this . java.lang.String = java.lang.String ; } this . java.lang.String = this . javax.xml.stream.XMLStreamReader . java.lang.String ( ) ; } if ( getContentHandler ( ) != null ) { final javax.xml.stream.Location javax.xml.stream.Location = this . javax.xml.stream.XMLStreamReader . javax.xml.stream.Location ( ) ; getContentHandler ( ) . setDocumentLocator ( new org.xml.sax.ext.Locator2 ( ) { @ java.lang.Override public int int ( ) { return ( javax.xml.stream.Location != null ? javax.xml.stream.Location . int ( ) : - NUMBER ) ; } @ java.lang.Override public int int ( ) { return ( javax.xml.stream.Location != null ? javax.xml.stream.Location . int ( ) : - NUMBER ) ; } @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( javax.xml.stream.Location != null ? javax.xml.stream.Location . java.lang.String ( ) : null ) ; } @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( javax.xml.stream.Location != null ? javax.xml.stream.Location . java.lang.String ( ) : null ) ; } @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; } @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; } } ) ; getContentHandler ( ) . startDocument ( ) ; if ( this . javax.xml.stream.XMLStreamReader . boolean ( ) ) { setStandalone ( this . javax.xml.stream.XMLStreamReader . boolean ( ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ( javax.xml.stream.Location != null ? javax.xml.stream.Location . int ( ) : - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ( javax.xml.stream.Location != null ? javax.xml.stream.Location . int ( ) : - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( javax.xml.stream.Location != null ? javax.xml.stream.Location . java.lang.String ( ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( javax.xml.stream.Location != null ? javax.xml.stream.Location . java.lang.String ( ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> private void void ( ) org.xml.sax.SAXException { if ( getContentHandler ( ) != null ) { javax.xml.namespace.QName javax.xml.namespace.QName = this . javax.xml.stream.XMLStreamReader . javax.xml.namespace.QName ( ) ; if ( hasNamespacesFeature ( ) ) { for ( int int = NUMBER ; int < this . javax.xml.stream.XMLStreamReader . int ( ) ; int ++ ) { startPrefixMapping ( this . javax.xml.stream.XMLStreamReader . java.lang.String ( int ) , this . javax.xml.stream.XMLStreamReader . java.lang.String ( int ) ) ; } for ( int int = NUMBER ; int < this . javax.xml.stream.XMLStreamReader . int ( ) ; int ++ ) { java.lang.String java.lang.String = this . javax.xml.stream.XMLStreamReader . java.lang.String ( int ) ; java.lang.String java.lang.String = this . javax.xml.stream.XMLStreamReader . java.lang.String ( int ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { startPrefixMapping ( java.lang.String , java.lang.String ) ; } } getContentHandler ( ) . startElement ( javax.xml.namespace.QName . java.lang.String ( ) , javax.xml.namespace.QName . java.lang.String ( ) , toQualifiedName ( javax.xml.namespace.QName ) , org.xml.sax.Attributes ( ) ) ; } else { getContentHandler ( ) . startElement ( STRING , STRING , toQualifiedName ( javax.xml.namespace.QName ) , org.xml.sax.Attributes ( ) ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ) org.xml.sax.SAXException { if ( getContentHandler ( ) != null ) { javax.xml.namespace.QName javax.xml.namespace.QName = this . javax.xml.stream.XMLStreamReader . javax.xml.namespace.QName ( ) ; if ( hasNamespacesFeature ( ) ) { getContentHandler ( ) . endElement ( javax.xml.namespace.QName . java.lang.String ( ) , javax.xml.namespace.QName . java.lang.String ( ) , toQualifiedName ( javax.xml.namespace.QName ) ) ; for ( int int = NUMBER ; int < this . javax.xml.stream.XMLStreamReader . int ( ) ; int ++ ) { java.lang.String java.lang.String = this . javax.xml.stream.XMLStreamReader . java.lang.String ( int ) ; if ( java.lang.String == null ) { java.lang.String = STRING ; } endPrefixMapping ( java.lang.String ) ; } } else { getContentHandler ( ) . endElement ( STRING , STRING , toQualifiedName ( javax.xml.namespace.QName ) ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ) org.xml.sax.SAXException { if ( javax.xml.stream.XMLStreamConstants . int == this . javax.xml.stream.XMLStreamReader . int ( ) && getLexicalHandler ( ) != null ) { getLexicalHandler ( ) . startCDATA ( ) ; } if ( getContentHandler ( ) != null ) { getContentHandler ( ) . characters ( this . javax.xml.stream.XMLStreamReader . char[] ( ) , this . javax.xml.stream.XMLStreamReader . int ( ) , this . javax.xml.stream.XMLStreamReader . int ( ) ) ; } if ( javax.xml.stream.XMLStreamConstants . int == this . javax.xml.stream.XMLStreamReader . int ( ) && getLexicalHandler ( ) != null ) { getLexicalHandler ( ) . endCDATA ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) org.xml.sax.SAXException { if ( getLexicalHandler ( ) != null ) { getLexicalHandler ( ) . comment ( this . javax.xml.stream.XMLStreamReader . char[] ( ) , this . javax.xml.stream.XMLStreamReader . int ( ) , this . javax.xml.stream.XMLStreamReader . int ( ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) org.xml.sax.SAXException { if ( getLexicalHandler ( ) != null ) { javax . xml . stream . javax.xml.stream.Location javax.xml.stream.Location = this . javax.xml.stream.XMLStreamReader . javax.xml.stream.Location ( ) ; getLexicalHandler ( ) . startDTD ( null , javax.xml.stream.Location . java.lang.String ( ) , javax.xml.stream.Location . java.lang.String ( ) ) ; } if ( getLexicalHandler ( ) != null ) { getLexicalHandler ( ) . endDTD ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) org.xml.sax.SAXException { if ( getLexicalHandler ( ) != null ) { getLexicalHandler ( ) . startEntity ( this . javax.xml.stream.XMLStreamReader . java.lang.String ( ) ) ; } if ( getLexicalHandler ( ) != null ) { getLexicalHandler ( ) . endEntity ( this . javax.xml.stream.XMLStreamReader . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) org.xml.sax.SAXException { if ( getContentHandler ( ) != null ) { getContentHandler ( ) . endDocument ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) org.xml.sax.SAXException { if ( getContentHandler ( ) != null ) { getContentHandler ( ) . processingInstruction ( this . javax.xml.stream.XMLStreamReader . java.lang.String ( ) , this . javax.xml.stream.XMLStreamReader . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> private org.xml.sax.Attributes org.xml.sax.Attributes ( ) { org.xml.sax.helpers.AttributesImpl org.xml.sax.helpers.AttributesImpl = new org.xml.sax.helpers.AttributesImpl ( ) ; for ( int int = NUMBER ; int < this . javax.xml.stream.XMLStreamReader . int ( ) ; int ++ ) { java.lang.String java.lang.String = this . javax.xml.stream.XMLStreamReader . java.lang.String ( int ) ; if ( java.lang.String == null || ! hasNamespacesFeature ( ) ) { java.lang.String = STRING ; } java.lang.String java.lang.String = this . javax.xml.stream.XMLStreamReader . java.lang.String ( int ) ; if ( java.lang.String == null ) { java.lang.String = STRING ; } org.xml.sax.helpers.AttributesImpl . void ( java.lang.String , this . javax.xml.stream.XMLStreamReader . java.lang.String ( int ) , toQualifiedName ( this . javax.xml.stream.XMLStreamReader . javax.xml.namespace.QName ( int ) ) , java.lang.String , this . javax.xml.stream.XMLStreamReader . java.lang.String ( int ) ) ; } if ( hasNamespacePrefixesFeature ( ) ) { for ( int int = NUMBER ; int < this . javax.xml.stream.XMLStreamReader . int ( ) ; int ++ ) { java.lang.String java.lang.String = this . javax.xml.stream.XMLStreamReader . java.lang.String ( int ) ; java.lang.String java.lang.String = this . javax.xml.stream.XMLStreamReader . java.lang.String ( int ) ; java.lang.String java.lang.String ; if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.String = STRING + java.lang.String ; } else { java.lang.String = STRING ; } org.xml.sax.helpers.AttributesImpl . void ( STRING , STRING , java.lang.String , STRING , java.lang.String ) ; } } return org.xml.sax.helpers.AttributesImpl ; }  <METHOD_END>
