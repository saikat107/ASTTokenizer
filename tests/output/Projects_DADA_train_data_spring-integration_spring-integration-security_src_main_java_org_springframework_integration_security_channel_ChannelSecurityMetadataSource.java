<METHOD_START> public void ( ) { this( null ); }  <METHOD_END>
<METHOD_START> public void ( java.util.Map<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> < java.util.regex.Pattern , ChannelAccessPolicy > java.util.Map<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> ) { this . java.util.Map<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> = ( java.util.Map<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> != null ) ? java.util.Map<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> : new java.util.LinkedHashMap<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> < java.util.regex.Pattern , ChannelAccessPolicy > ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.regex.Pattern java.util.regex.Pattern , ChannelAccessPolicy org.springframework.integration.security.channel.ChannelAccessPolicy ) { this . java.util.Map<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> . put ( java.util.regex.Pattern , org.springframework.integration.security.channel.ChannelAccessPolicy ) ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.util.regex.Pattern> < java.util.regex.Pattern > java.util.Set<java.util.regex.Pattern> ( ) { return this . java.util.Map<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> . keySet ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> ( java.lang.Object java.lang.Object ) throws java.lang.IllegalArgumentException { Assert . isAssignable ( ChannelInvocation .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; ChannelInvocation org.springframework.integration.security.channel.ChannelInvocation = ( ChannelInvocation ) java.lang.Object ; MessageChannel org.springframework.integration.security.channel.MessageChannel = org.springframework.integration.security.channel.ChannelInvocation . getChannel ( ) ; Assert . isAssignable ( NamedComponent .class , org.springframework.integration.security.channel.MessageChannel . getClass ( ) ) ; java.lang.String java.lang.String = ( ( NamedComponent ) org.springframework.integration.security.channel.MessageChannel ) . getComponentName ( ) ; java.util.List<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > java.util.List<org.springframework.integration.security.channel.ConfigAttribute> = new java.util.ArrayList<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > ( ) ; for ( java.util.Map . java.util.Map.Entry<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> < java.util.regex.Pattern , ChannelAccessPolicy > java.util.Map.Entry<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> : this . java.util.Map<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> . entrySet ( ) ) { java.util.regex.Pattern java.util.regex.Pattern = java.util.Map.Entry<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> . getKey ( ) ; ChannelAccessPolicy org.springframework.integration.security.channel.ChannelAccessPolicy = java.util.Map.Entry<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> . getValue ( ) ; if ( java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) . boolean ( ) ) { if ( org.springframework.integration.security.channel.ChannelInvocation . isSend ( ) ) { java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = org.springframework.integration.security.channel.ChannelAccessPolicy . getConfigAttributesForSend ( ) ; if ( java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> != null ) { java.util.List<org.springframework.integration.security.channel.ConfigAttribute> . addAll ( java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> ) ; } } else if ( org.springframework.integration.security.channel.ChannelInvocation . isReceive ( ) ) { java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = org.springframework.integration.security.channel.ChannelAccessPolicy . getConfigAttributesForReceive ( ) ; if ( java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> != null ) { java.util.List<org.springframework.integration.security.channel.ConfigAttribute> . addAll ( java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> ) ; } } } } return java.util.List<org.springframework.integration.security.channel.ConfigAttribute> ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> ( ) { java.util.Set<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > java.util.Set<org.springframework.integration.security.channel.ConfigAttribute> = new java.util.HashSet<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > ( ) ; for ( ChannelAccessPolicy org.springframework.integration.security.channel.ChannelAccessPolicy : this . java.util.Map<java.util.regex.Pattern,org.springframework.integration.security.channel.ChannelAccessPolicy> . values ( ) ) { java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = org.springframework.integration.security.channel.ChannelAccessPolicy . getConfigAttributesForReceive ( ) ; java.util.Set<org.springframework.integration.security.channel.ConfigAttribute> . addAll ( java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> ) ; java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = org.springframework.integration.security.channel.ChannelAccessPolicy . getConfigAttributesForSend ( ) ; java.util.Set<org.springframework.integration.security.channel.ConfigAttribute> . addAll ( java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> ) ; } return java.util.Set<org.springframework.integration.security.channel.ConfigAttribute> ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return ChannelInvocation .class . boolean ( java.lang.Class<> ) ; }  <METHOD_END>
