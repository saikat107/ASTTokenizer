<METHOD_START> @ Before public void void ( ) java.lang.Exception { RepositoryFactorySupport org.springframework.data.couchbase.repository.RepositoryFactorySupport = new CouchbaseRepositoryFactory ( org.springframework.data.couchbase.repository.RepositoryOperationsMapping , org.springframework.data.couchbase.repository.IndexManager ) ; org.springframework.data.couchbase.repository.UserRepository = org.springframework.data.couchbase.repository.RepositoryFactorySupport . getRepository ( UserRepository .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Page < User > org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> = org.springframework.data.couchbase.repository.UserRepository . findByAgeGreaterThan ( NUMBER , new PageRequest ( NUMBER , NUMBER ) ) ; Page < User > org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> = org.springframework.data.couchbase.repository.UserRepository . findByAgeGreaterThan ( NUMBER , org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . nextPageable ( ) ) ; Page < User > org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> = org.springframework.data.couchbase.repository.UserRepository . findByAgeGreaterThan ( NUMBER , org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . nextPageable ( ) ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . getTotalElements ( ) ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . getTotalPages ( ) ) ; assertTrue ( org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . hasContent ( ) ) ; assertTrue ( org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . hasNext ( ) ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . getNumberOfElements ( ) ) ; assertTrue ( org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . hasContent ( ) ) ; assertTrue ( org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . hasNext ( ) ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . getNumberOfElements ( ) ) ; assertTrue ( org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . hasContent ( ) ) ; assertFalse ( org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . hasNext ( ) ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.repository.Page<org.springframework.data.couchbase.repository.User> . getNumberOfElements ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.UnsupportedOperationException .class ) public void void ( ) { org.springframework.data.couchbase.repository.UserRepository . findByAgeGreaterThan ( NUMBER , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { int int = NUMBER ; java.util.List<org.springframework.data.couchbase.repository.User> < User > java.util.List<org.springframework.data.couchbase.repository.User> = new java.util.ArrayList<org.springframework.data.couchbase.repository.User> < User > ( NUMBER ) ; Slice < User > org.springframework.data.couchbase.repository.Slice<org.springframework.data.couchbase.repository.User> = org.springframework.data.couchbase.repository.UserRepository . findByAgeLessThan ( NUMBER , new PageRequest ( NUMBER , NUMBER ) ) ; java.util.List<org.springframework.data.couchbase.repository.User> . addAll ( org.springframework.data.couchbase.repository.Slice<org.springframework.data.couchbase.repository.User> . getContent ( ) ) ; while( org.springframework.data.couchbase.repository.Slice<org.springframework.data.couchbase.repository.User> . hasNext ( ) ) { org.springframework.data.couchbase.repository.Slice<org.springframework.data.couchbase.repository.User> = org.springframework.data.couchbase.repository.UserRepository . findByAgeLessThan ( NUMBER , org.springframework.data.couchbase.repository.Slice<org.springframework.data.couchbase.repository.User> . nextPageable ( ) ) ; java.util.List<org.springframework.data.couchbase.repository.User> . addAll ( org.springframework.data.couchbase.repository.Slice<org.springframework.data.couchbase.repository.User> . getContent ( ) ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.repository.Slice<org.springframework.data.couchbase.repository.User> . getContent ( ) . size ( ) ) ; } assertEquals ( NUMBER , java.util.List<org.springframework.data.couchbase.repository.User> . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.UnsupportedOperationException .class ) public void void ( ) { org.springframework.data.couchbase.repository.UserRepository . findByAgeLessThan ( NUMBER , null ) ; }  <METHOD_END>
