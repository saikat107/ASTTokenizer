<METHOD_START> public void ( CityRepository sample.data.jpa.service.CityRepository , HotelRepository sample.data.jpa.service.HotelRepository ) { this . sample.data.jpa.service.CityRepository = sample.data.jpa.service.CityRepository ; this . sample.data.jpa.service.HotelRepository = sample.data.jpa.service.HotelRepository ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public sample.data.jpa.service.Page<sample.data.jpa.service.City> < City > sample.data.jpa.service.Page<sample.data.jpa.service.City> ( CitySearchCriteria sample.data.jpa.service.CitySearchCriteria , Pageable sample.data.jpa.service.Pageable ) { Assert . notNull ( sample.data.jpa.service.CitySearchCriteria , STRING ) ; java.lang.String java.lang.String = sample.data.jpa.service.CitySearchCriteria . getName ( ) ; if ( ! StringUtils . hasLength ( java.lang.String ) ) { return this . sample.data.jpa.service.CityRepository . findAll ( null ) ; } java.lang.String java.lang.String = STRING ; int int = java.lang.String . int ( STRING ) ; if ( int >= NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( int + NUMBER ) ; java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) ; } return this . sample.data.jpa.service.CityRepository . findByNameContainingAndCountryContainingAllIgnoringCase ( java.lang.String . java.lang.String ( ) , java.lang.String . java.lang.String ( ) , sample.data.jpa.service.Pageable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public sample.data.jpa.service.City sample.data.jpa.service.City ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; return this . sample.data.jpa.service.CityRepository . findByNameAndCountryAllIgnoringCase ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public sample.data.jpa.service.Page<sample.data.jpa.service.HotelSummary> < HotelSummary > sample.data.jpa.service.Page<sample.data.jpa.service.HotelSummary> ( City sample.data.jpa.service.City , Pageable sample.data.jpa.service.Pageable ) { Assert . notNull ( sample.data.jpa.service.City , STRING ) ; return this . sample.data.jpa.service.HotelRepository . findByCity ( sample.data.jpa.service.City , sample.data.jpa.service.Pageable ) ; }  <METHOD_END>
