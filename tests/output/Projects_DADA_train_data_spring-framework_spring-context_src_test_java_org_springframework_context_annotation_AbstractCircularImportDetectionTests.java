<METHOD_START> protected abstract org.springframework.context.annotation.ConfigurationClassParser org.springframework.context.annotation.ConfigurationClassParser ( )  <METHOD_END>
<METHOD_START> protected abstract java.lang.String java.lang.String ( java.lang.Class<?> < ? > java.lang.Class<?> ) throws java.lang.Exception ;  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { boolean boolean = false ; try { org.springframework.context.annotation.ConfigurationClassParser ( ) . parse ( java.lang.String ( org.springframework.context.annotation.AbstractCircularImportDetectionTests.A .class ) , STRING ) ; } catch ( BeanDefinitionParsingException org.springframework.context.annotation.BeanDefinitionParsingException ) { assertTrue ( STRING + org.springframework.context.annotation.BeanDefinitionParsingException . getMessage ( ) , org.springframework.context.annotation.BeanDefinitionParsingException . getMessage ( ) . contains ( STRING + STRING ) ) ; boolean = true ; } assertTrue ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { boolean boolean = false ; try { org.springframework.context.annotation.ConfigurationClassParser ( ) . parse ( java.lang.String ( org.springframework.context.annotation.AbstractCircularImportDetectionTests.X .class ) , STRING ) ; } catch ( BeanDefinitionParsingException org.springframework.context.annotation.BeanDefinitionParsingException ) { assertTrue ( STRING + org.springframework.context.annotation.BeanDefinitionParsingException . getMessage ( ) , org.springframework.context.annotation.BeanDefinitionParsingException . getMessage ( ) . contains ( STRING + STRING ) ) ; boolean = true ; } assertTrue ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.context.annotation.TestBean org.springframework.context.annotation.TestBean ( ) { return new TestBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.context.annotation.TestBean org.springframework.context.annotation.TestBean ( ) { return new TestBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.context.annotation.TestBean org.springframework.context.annotation.TestBean ( ) { return new TestBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.context.annotation.TestBean org.springframework.context.annotation.TestBean ( ) { return new TestBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.context.annotation.TestBean org.springframework.context.annotation.TestBean ( ) { return new TestBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.context.annotation.TestBean org.springframework.context.annotation.TestBean ( ) { return new TestBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.context.annotation.TestBean org.springframework.context.annotation.TestBean ( ) { return new TestBean ( ) ; }  <METHOD_END>
