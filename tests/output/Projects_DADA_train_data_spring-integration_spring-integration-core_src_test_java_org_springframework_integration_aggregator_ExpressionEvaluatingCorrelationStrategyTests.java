<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { org.springframework.integration.aggregator.ExpressionEvaluatingCorrelationStrategy = new ExpressionEvaluatingCorrelationStrategy ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { Expression org.springframework.integration.aggregator.Expression = null ; org.springframework.integration.aggregator.ExpressionEvaluatingCorrelationStrategy = new ExpressionEvaluatingCorrelationStrategy ( org.springframework.integration.aggregator.Expression ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ExpressionParser org.springframework.integration.aggregator.ExpressionParser = new SpelExpressionParser ( new SpelParserConfiguration ( true , true ) ) ; Expression org.springframework.integration.aggregator.Expression = org.springframework.integration.aggregator.ExpressionParser . parseExpression ( STRING ) ; org.springframework.integration.aggregator.ExpressionEvaluatingCorrelationStrategy = new ExpressionEvaluatingCorrelationStrategy ( org.springframework.integration.aggregator.Expression ) ; org.springframework.integration.aggregator.ExpressionEvaluatingCorrelationStrategy . setBeanFactory ( mock ( BeanFactory .class ) ) ; java.lang.Object java.lang.Object = org.springframework.integration.aggregator.ExpressionEvaluatingCorrelationStrategy . getCorrelationKey ( new GenericMessage < java.lang.String > ( STRING ) ) ; assertThat ( java.lang.Object , is ( instanceOf ( java.lang.String .class ) ) ) ; assertThat ( ( java.lang.String ) java.lang.Object , is ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathXmlApplicationContext org.springframework.integration.aggregator.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.aggregator.ExpressionEvaluatingCorrelationStrategyTests> ( ) ) ; MessageChannel org.springframework.integration.aggregator.MessageChannel = org.springframework.integration.aggregator.ClassPathXmlApplicationContext . getBean ( STRING , MessageChannel .class ) ; QueueChannel org.springframework.integration.aggregator.QueueChannel = org.springframework.integration.aggregator.ClassPathXmlApplicationContext . getBean ( STRING , QueueChannel .class ) ; Message < ? > org.springframework.integration.aggregator.Message<?> = MessageBuilder . withPayload ( STRING ) . setSequenceNumber ( NUMBER ) . setSequenceSize ( NUMBER ) . build ( ) ; org.springframework.integration.aggregator.MessageChannel . send ( org.springframework.integration.aggregator.Message<> ) ; Message < ? > org.springframework.integration.aggregator.Message<?> = org.springframework.integration.aggregator.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.aggregator.Message<> ) ; org.springframework.integration.aggregator.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { return java.lang.Object ; }  <METHOD_END>
