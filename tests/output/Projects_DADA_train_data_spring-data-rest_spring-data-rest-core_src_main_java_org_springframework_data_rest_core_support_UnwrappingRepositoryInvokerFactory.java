<METHOD_START> public void ( RepositoryInvokerFactory org.springframework.data.rest.core.support.RepositoryInvokerFactory , java.util.List<? extends org.springframework.data.rest.core.support.EntityLookup<?>> < ? extends EntityLookup < ? > > java.util.List<? extends org.springframework.data.rest.core.support.EntityLookup<?>> ) { Assert . notNull ( org.springframework.data.rest.core.support.RepositoryInvokerFactory , STRING ) ; Assert . notNull ( java.util.List<> , STRING ) ; this . org.springframework.data.rest.core.support.RepositoryInvokerFactory = org.springframework.data.rest.core.support.RepositoryInvokerFactory ; this . org.springframework.data.rest.core.support.Java8PluginRegistry<org.springframework.data.rest.core.support.EntityLookup<?>,java.lang.Class<?>> = Java8PluginRegistry . of ( java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.support.RepositoryInvoker org.springframework.data.rest.core.support.RepositoryInvoker ( java.lang.Class<?> < ? > java.lang.Class<?> ) { java.util.Optional<org.springframework.data.rest.core.support.EntityLookup<?>> < EntityLookup < ? > > java.util.Optional<org.springframework.data.rest.core.support.EntityLookup<?>> = org.springframework.data.rest.core.support.Java8PluginRegistry<org.springframework.data.rest.core.support.EntityLookup<?>,java.lang.Class<?>> . getPluginFor ( java.lang.Class<> ) ; return new org.springframework.data.rest.core.support.UnwrappingRepositoryInvokerFactory.UnwrappingRepositoryInvoker ( org.springframework.data.rest.core.support.RepositoryInvokerFactory . getInvokerFor ( java.lang.Class<> ) , java.util.Optional<org.springframework.data.rest.core.support.EntityLookup<?>> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public < T > java.util.Optional<T> < T > java.util.Optional<T> ( java.io.Serializable java.io.Serializable ) { return ( java.util.Optional<T> < T > ) java.util.Optional<org.springframework.data.rest.core.support.EntityLookup<?>> . map ( it -> it . lookupEntity ( id ) . orElse ( Optional . empty ( ) ) ) . orElseGet ( ( ) delegate . invokeFindOne ( id ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> ( java.lang.reflect.Method java.lang.reflect.Method , MultiValueMap < java.lang.String , ? extends java.lang.Object > org.springframework.data.rest.core.support.MultiValueMap<java.lang.String,? extends java.lang.Object> , Pageable org.springframework.data.rest.core.support.Pageable , Sort org.springframework.data.rest.core.support.Sort ) { return org.springframework.data.rest.core.support.RepositoryInvoker . invokeQueryMethod ( java.lang.reflect.Method , org.springframework.data.rest.core.support.MultiValueMap<java.lang.String,> , org.springframework.data.rest.core.support.Pageable , org.springframework.data.rest.core.support.Sort ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.rest.core.support.RepositoryInvoker . hasDeleteMethod ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.rest.core.support.RepositoryInvoker . hasFindAllMethod ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.rest.core.support.RepositoryInvoker . hasFindOneMethod ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.rest.core.support.RepositoryInvoker . hasSaveMethod ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.io.Serializable java.io.Serializable ) { org.springframework.data.rest.core.support.RepositoryInvoker . invokeDelete ( java.io.Serializable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Iterable<java.lang.Object> < java.lang.Object > java.lang.Iterable<java.lang.Object> ( Pageable org.springframework.data.rest.core.support.Pageable ) { return org.springframework.data.rest.core.support.RepositoryInvoker . invokeFindAll ( org.springframework.data.rest.core.support.Pageable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Iterable<java.lang.Object> < java.lang.Object > java.lang.Iterable<java.lang.Object> ( Sort org.springframework.data.rest.core.support.Sort ) { return org.springframework.data.rest.core.support.RepositoryInvoker . invokeFindAll ( org.springframework.data.rest.core.support.Sort ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( T T ) { return org.springframework.data.rest.core.support.RepositoryInvoker . invokeSave ( T ) ; }  <METHOD_END>
