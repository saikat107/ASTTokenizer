<METHOD_START> public void ( ) { this( false ); }  <METHOD_END>
<METHOD_START> public void ( boolean boolean ) { if ( boolean ) { this . org.springframework.integration.transaction.TransactionInterceptor = new TransactionHandleMessageAdvice ( ) ; } else { this . org.springframework.integration.transaction.TransactionInterceptor = new TransactionInterceptor ( ) ; } org.springframework.integration.transaction.TransactionInterceptorBuilder ( this . org.springframework.integration.transaction.DefaultTransactionAttribute ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.transaction.TransactionInterceptorBuilder org.springframework.integration.transaction.TransactionInterceptorBuilder ( Propagation org.springframework.integration.transaction.Propagation ) { Assert . notNull ( org.springframework.integration.transaction.Propagation , STRING ) ; this . org.springframework.integration.transaction.DefaultTransactionAttribute . setPropagationBehavior ( org.springframework.integration.transaction.Propagation . value ( ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.transaction.TransactionInterceptorBuilder org.springframework.integration.transaction.TransactionInterceptorBuilder ( Isolation org.springframework.integration.transaction.Isolation ) { Assert . notNull ( org.springframework.integration.transaction.Isolation , STRING ) ; this . org.springframework.integration.transaction.DefaultTransactionAttribute . setIsolationLevel ( org.springframework.integration.transaction.Isolation . value ( ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.transaction.TransactionInterceptorBuilder org.springframework.integration.transaction.TransactionInterceptorBuilder ( int int ) { this . org.springframework.integration.transaction.DefaultTransactionAttribute . setTimeout ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.transaction.TransactionInterceptorBuilder org.springframework.integration.transaction.TransactionInterceptorBuilder ( boolean boolean ) { this . org.springframework.integration.transaction.DefaultTransactionAttribute . setReadOnly ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public final org.springframework.integration.transaction.TransactionInterceptorBuilder org.springframework.integration.transaction.TransactionInterceptorBuilder ( TransactionAttribute org.springframework.integration.transaction.TransactionAttribute ) { MatchAlwaysTransactionAttributeSource org.springframework.integration.transaction.MatchAlwaysTransactionAttributeSource = new MatchAlwaysTransactionAttributeSource ( ) ; org.springframework.integration.transaction.MatchAlwaysTransactionAttributeSource . setTransactionAttribute ( org.springframework.integration.transaction.TransactionAttribute ) ; this . org.springframework.integration.transaction.TransactionInterceptor . setTransactionAttributeSource ( org.springframework.integration.transaction.MatchAlwaysTransactionAttributeSource ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.transaction.TransactionInterceptorBuilder org.springframework.integration.transaction.TransactionInterceptorBuilder ( PlatformTransactionManager org.springframework.integration.transaction.PlatformTransactionManager ) { this . org.springframework.integration.transaction.TransactionInterceptor . setTransactionManager ( org.springframework.integration.transaction.PlatformTransactionManager ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.transaction.TransactionInterceptor org.springframework.integration.transaction.TransactionInterceptor ( ) { return this . org.springframework.integration.transaction.TransactionInterceptor ; }  <METHOD_END>
