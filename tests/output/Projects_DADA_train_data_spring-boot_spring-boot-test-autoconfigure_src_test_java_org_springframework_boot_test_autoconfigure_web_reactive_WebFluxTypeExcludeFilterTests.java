<METHOD_START> @ Test public void void ( ) java.lang.Exception { WebFluxTypeExcludeFilter org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter = new WebFluxTypeExcludeFilter ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.WithNoControllers .class ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.Controller1 .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.Controller2 .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleControllerAdvice .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleWeb .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleService .class ) ) . isTrue ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleRepository .class ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { WebFluxTypeExcludeFilter org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter = new WebFluxTypeExcludeFilter ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.WithController .class ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.Controller1 .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.Controller2 .class ) ) . isTrue ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleControllerAdvice .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleWeb .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleService .class ) ) . isTrue ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleRepository .class ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { WebFluxTypeExcludeFilter org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter = new WebFluxTypeExcludeFilter ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.NotUsingDefaultFilters .class ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.Controller1 .class ) ) . isTrue ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.Controller2 .class ) ) . isTrue ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleControllerAdvice .class ) ) . isTrue ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleWeb .class ) ) . isTrue ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleService .class ) ) . isTrue ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleRepository .class ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { WebFluxTypeExcludeFilter org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter = new WebFluxTypeExcludeFilter ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.WithIncludeFilter .class ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.Controller1 .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.Controller2 .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleControllerAdvice .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleWeb .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleService .class ) ) . isTrue ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleRepository .class ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { WebFluxTypeExcludeFilter org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter = new WebFluxTypeExcludeFilter ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.WithExcludeFilter .class ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.Controller1 .class ) ) . isTrue ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.Controller2 .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleControllerAdvice .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleWeb .class ) ) . isFalse ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleService .class ) ) . isTrue ( ) ; assertThat ( boolean ( org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilterTests.ExampleRepository .class ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( WebFluxTypeExcludeFilter org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter , java.lang.Class<?> < ? > java.lang.Class<?> )			throws java.io.IOException { MetadataReader org.springframework.boot.test.autoconfigure.web.reactive.MetadataReader = this . org.springframework.boot.test.autoconfigure.web.reactive.MetadataReaderFactory . getMetadataReader ( java.lang.Class<> . java.lang.String ( ) ) ; return org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTypeExcludeFilter . match ( org.springframework.boot.test.autoconfigure.web.reactive.MetadataReader , this . org.springframework.boot.test.autoconfigure.web.reactive.MetadataReaderFactory ) ; }  <METHOD_END>
