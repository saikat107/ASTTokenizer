<METHOD_START> protected void ( MimeType org.springframework.messaging.converter.MimeType ) { Assert . notNull ( org.springframework.messaging.converter.MimeType , STRING ) ; this . java.util.List<org.springframework.messaging.converter.MimeType> = java.util.Collections .< MimeType > java.util.List<org.springframework.messaging.converter.MimeType> ( org.springframework.messaging.converter.MimeType ) ; }  <METHOD_END>
<METHOD_START> protected void ( java.util.Collection<org.springframework.messaging.converter.MimeType> < MimeType > java.util.Collection<org.springframework.messaging.converter.MimeType> ) { Assert . notNull ( java.util.Collection<org.springframework.messaging.converter.MimeType> , STRING ) ; this . java.util.List<org.springframework.messaging.converter.MimeType> = new java.util.ArrayList <> ( java.util.Collection<org.springframework.messaging.converter.MimeType> ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.messaging.converter.MimeType> < MimeType > java.util.List<org.springframework.messaging.converter.MimeType> ( ) { return java.util.Collections . java.util.List<org.springframework.messaging.converter.MimeType> ( this . java.util.List<org.springframework.messaging.converter.MimeType> ) ; }  <METHOD_END>
<METHOD_START> public void void ( ContentTypeResolver org.springframework.messaging.converter.ContentTypeResolver ) { this . org.springframework.messaging.converter.ContentTypeResolver = org.springframework.messaging.converter.ContentTypeResolver ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.converter.ContentTypeResolver org.springframework.messaging.converter.ContentTypeResolver ( ) { return this . org.springframework.messaging.converter.ContentTypeResolver ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { if ( boolean ) { Assert . notEmpty ( java.util.List<org.springframework.messaging.converter.MimeType> ( ) , STRING ) ; Assert . notNull ( org.springframework.messaging.converter.ContentTypeResolver ( ) , STRING ) ; } this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . isTrue ( byte [] .class == java.lang.Class<> || java.lang.String .class == java.lang.Class<> , STRING + java.lang.Class<> ) ; this . java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return this . java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.converter.MimeType org.springframework.messaging.converter.MimeType ( java.lang.Object java.lang.Object ) { java.util.List<org.springframework.messaging.converter.MimeType> < MimeType > java.util.List<org.springframework.messaging.converter.MimeType> = java.util.List<org.springframework.messaging.converter.MimeType> ( ) ; return ( ! java.util.List<org.springframework.messaging.converter.MimeType> . isEmpty ( ) ? java.util.List<org.springframework.messaging.converter.MimeType> . get ( NUMBER ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final java.lang.Object java.lang.Object ( Message < ? > org.springframework.messaging.converter.Message<?> , java.lang.Class<?> < ? > java.lang.Class<?> ) { return java.lang.Object ( org.springframework.messaging.converter.Message<> , java.lang.Class<> , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final java.lang.Object java.lang.Object ( Message < ? > org.springframework.messaging.converter.Message<?> , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Object java.lang.Object ) { if ( ! boolean ( org.springframework.messaging.converter.Message<> , java.lang.Class<> ) ) { return null ; } return java.lang.Object ( org.springframework.messaging.converter.Message<> , java.lang.Class<> , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( Message < ? > org.springframework.messaging.converter.Message<?> , java.lang.Class<?> < ? > java.lang.Class<?> ) { return ( boolean ( java.lang.Class<> ) && boolean ( org.springframework.messaging.converter.Message<> . getHeaders ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final org.springframework.messaging.converter.Message<?> < ? > org.springframework.messaging.converter.Message<?> ( java.lang.Object java.lang.Object , MessageHeaders org.springframework.messaging.converter.MessageHeaders ) { return org.springframework.messaging.converter.Message<?> ( java.lang.Object , org.springframework.messaging.converter.MessageHeaders , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final org.springframework.messaging.converter.Message<?> < ? > org.springframework.messaging.converter.Message<?> ( java.lang.Object java.lang.Object , MessageHeaders org.springframework.messaging.converter.MessageHeaders , java.lang.Object java.lang.Object ) { if ( ! boolean ( java.lang.Object , org.springframework.messaging.converter.MessageHeaders ) ) { return null ; } java.lang.Object = java.lang.Object ( java.lang.Object , org.springframework.messaging.converter.MessageHeaders , java.lang.Object ) ; if ( java.lang.Object == null ) { return null ; } MimeType org.springframework.messaging.converter.MimeType = org.springframework.messaging.converter.MimeType ( java.lang.Object ) ; if ( org.springframework.messaging.converter.MessageHeaders != null ) { MessageHeaderAccessor org.springframework.messaging.converter.MessageHeaderAccessor = MessageHeaderAccessor . getAccessor ( org.springframework.messaging.converter.MessageHeaders , MessageHeaderAccessor .class ) ; if ( org.springframework.messaging.converter.MessageHeaderAccessor != null && org.springframework.messaging.converter.MessageHeaderAccessor . isMutable ( ) ) { org.springframework.messaging.converter.MessageHeaderAccessor . setHeaderIfAbsent ( MessageHeaders . CONTENT_TYPE , org.springframework.messaging.converter.MimeType ) ; return MessageBuilder . createMessage ( java.lang.Object , org.springframework.messaging.converter.MessageHeaderAccessor . getMessageHeaders ( ) ) ; } } MessageBuilder < ? > org.springframework.messaging.converter.MessageBuilder<?> = MessageBuilder . withPayload ( java.lang.Object ) ; if ( org.springframework.messaging.converter.MessageHeaders != null ) { org.springframework.messaging.converter.MessageBuilder<> . copyHeaders ( org.springframework.messaging.converter.MessageHeaders ) ; } org.springframework.messaging.converter.MessageBuilder<> . setHeaderIfAbsent ( MessageHeaders . CONTENT_TYPE , org.springframework.messaging.converter.MimeType ) ; return org.springframework.messaging.converter.MessageBuilder<> . build ( ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.Object java.lang.Object , MessageHeaders org.springframework.messaging.converter.MessageHeaders ) { java.lang.Class<?> < ? > java.lang.Class<?> = ( java.lang.Object != null ? java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) : null ) ; return ( boolean ( java.lang.Class<> ) && boolean ( org.springframework.messaging.converter.MessageHeaders ) ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( MessageHeaders org.springframework.messaging.converter.MessageHeaders ) { if ( java.util.List<org.springframework.messaging.converter.MimeType> ( ) . isEmpty ( ) ) { return true ; } MimeType org.springframework.messaging.converter.MimeType = org.springframework.messaging.converter.MimeType ( org.springframework.messaging.converter.MessageHeaders ) ; if ( org.springframework.messaging.converter.MimeType == null ) { return ! boolean ( ) ; } for ( MimeType org.springframework.messaging.converter.MimeType : java.util.List<org.springframework.messaging.converter.MimeType> ( ) ) { if ( org.springframework.messaging.converter.MimeType . getType ( ) . equals ( org.springframework.messaging.converter.MimeType . getType ( ) ) && org.springframework.messaging.converter.MimeType . getSubtype ( ) . equals ( org.springframework.messaging.converter.MimeType . getSubtype ( ) ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.converter.MimeType org.springframework.messaging.converter.MimeType ( MessageHeaders org.springframework.messaging.converter.MessageHeaders ) { return ( this . org.springframework.messaging.converter.ContentTypeResolver != null ? this . org.springframework.messaging.converter.ContentTypeResolver . resolve ( org.springframework.messaging.converter.MessageHeaders ) : null ) ; }  <METHOD_END>
<METHOD_START> protected abstract boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> );  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( Message < ? > org.springframework.messaging.converter.Message<?> , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Object java.lang.Object ) { return null ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , MessageHeaders org.springframework.messaging.converter.MessageHeaders , java.lang.Object java.lang.Object ) { return null ; }  <METHOD_END>
