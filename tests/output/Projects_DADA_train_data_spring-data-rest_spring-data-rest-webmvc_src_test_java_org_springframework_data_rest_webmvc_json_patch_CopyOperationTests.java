<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> = new java.util.ArrayList<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > ( ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , true ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; CopyOperation org.springframework.data.rest.webmvc.json.patch.CopyOperation = new CopyOperation ( STRING , STRING ) ; org.springframework.data.rest.webmvc.json.patch.CopyOperation . perform ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> , Todo .class ) ; assertTrue ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . isComplete ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> = new java.util.ArrayList<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > ( ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , true ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; CopyOperation org.springframework.data.rest.webmvc.json.patch.CopyOperation = new CopyOperation ( STRING , STRING ) ; org.springframework.data.rest.webmvc.json.patch.CopyOperation . perform ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> , Todo .class ) ; assertEquals ( STRING , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . getDescription ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> = new java.util.ArrayList<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > ( ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , true ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; CopyOperation org.springframework.data.rest.webmvc.json.patch.CopyOperation = new CopyOperation ( STRING , STRING ) ; org.springframework.data.rest.webmvc.json.patch.CopyOperation . perform ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> , Todo .class ) ; assertEquals ( STRING , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . getDescription ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> = new java.util.ArrayList<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > ( ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , true ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; CopyOperation org.springframework.data.rest.webmvc.json.patch.CopyOperation = new CopyOperation ( STRING , STRING ) ; org.springframework.data.rest.webmvc.json.patch.CopyOperation . perform ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> , Todo .class ) ; assertEquals ( NUMBER , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . size ( ) ) ; assertEquals ( NUMBER , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . getId ( ) . longValue ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . getDescription ( ) ) ; assertTrue ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . isComplete ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> = new java.util.ArrayList<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > ( ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , true ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; CopyOperation org.springframework.data.rest.webmvc.json.patch.CopyOperation = new CopyOperation ( STRING , STRING ) ; org.springframework.data.rest.webmvc.json.patch.CopyOperation . perform ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> , Todo .class ) ; assertEquals ( NUMBER , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . size ( ) ) ; assertEquals ( NUMBER , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . getId ( ) . longValue ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . getDescription ( ) ) ; assertTrue ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . isComplete ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> = new java.util.ArrayList<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > ( ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , true ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; CopyOperation org.springframework.data.rest.webmvc.json.patch.CopyOperation = new CopyOperation ( STRING , STRING ) ; org.springframework.data.rest.webmvc.json.patch.CopyOperation . perform ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> , Todo .class ) ; assertEquals ( NUMBER , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . size ( ) ) ; assertEquals ( NUMBER , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . getId ( ) . longValue ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . getDescription ( ) ) ; assertTrue ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . isComplete ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> = new java.util.ArrayList<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > ( ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , true ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; CopyOperation org.springframework.data.rest.webmvc.json.patch.CopyOperation = new CopyOperation ( STRING , STRING ) ; org.springframework.data.rest.webmvc.json.patch.CopyOperation . perform ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> , Todo .class ) ; assertEquals ( NUMBER , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . size ( ) ) ; assertEquals ( new Todo ( NUMBER , STRING , true ) , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> = new java.util.ArrayList<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > ( ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , true ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; CopyOperation org.springframework.data.rest.webmvc.json.patch.CopyOperation = new CopyOperation ( STRING , STRING ) ; org.springframework.data.rest.webmvc.json.patch.CopyOperation . perform ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> , Todo .class ) ; assertEquals ( NUMBER , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . size ( ) ) ; assertEquals ( new Todo ( NUMBER , STRING , false ) , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) ) ; }  <METHOD_END>
