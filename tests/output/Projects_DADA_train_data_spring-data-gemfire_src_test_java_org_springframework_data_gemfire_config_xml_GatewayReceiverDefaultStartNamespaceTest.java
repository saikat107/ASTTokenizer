<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertNotNull ( STRING , org.springframework.data.gemfire.config.xml.GatewayReceiverFactoryBean ) ; GatewayReceiver org.springframework.data.gemfire.config.xml.GatewayReceiver = org.springframework.data.gemfire.config.xml.GatewayReceiverFactoryBean . getObject ( ) ; try { assertNotNull ( org.springframework.data.gemfire.config.xml.GatewayReceiver ) ; assertTrue ( StringUtils . isEmpty ( org.springframework.data.gemfire.config.xml.GatewayReceiver . getBindAddress ( ) ) ) ; assertEquals ( STRING , org.springframework.data.gemfire.config.xml.GatewayReceiver . getHost ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.config.xml.GatewayReceiver . getStartPort ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.config.xml.GatewayReceiver . getEndPort ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.config.xml.GatewayReceiver . getMaximumTimeBetweenPings ( ) ) ; assertTrue ( org.springframework.data.gemfire.config.xml.GatewayReceiver . isRunning ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.config.xml.GatewayReceiver . getSocketBufferSize ( ) ) ; } finally { org.springframework.data.gemfire.config.xml.GatewayReceiver . stop ( ) ; } }  <METHOD_END>
