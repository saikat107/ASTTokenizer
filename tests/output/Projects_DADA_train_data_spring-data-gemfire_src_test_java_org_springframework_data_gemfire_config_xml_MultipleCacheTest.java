<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; ConfigurableApplicationContext org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( java.lang.String ) ; ConfigurableApplicationContext org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( java.lang.String ) ; Cache org.springframework.data.gemfire.config.xml.Cache = org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext . getBean ( Cache .class ) ; Cache org.springframework.data.gemfire.config.xml.Cache = org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext . getBean ( Cache .class ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Cache ) ; assertSame ( org.springframework.data.gemfire.config.xml.Cache , org.springframework.data.gemfire.config.xml.Cache ) ; Region org.springframework.data.gemfire.config.xml.Region = org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext . getBean ( Region .class ) ; Region org.springframework.data.gemfire.config.xml.Region = org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext . getBean ( Region .class ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Region ) ; assertSame ( org.springframework.data.gemfire.config.xml.Region , org.springframework.data.gemfire.config.xml.Region ) ; assertFalse ( org.springframework.data.gemfire.config.xml.Cache . isClosed ( ) ) ; assertFalse ( org.springframework.data.gemfire.config.xml.Region . isDestroyed ( ) ) ; org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext . close ( ) ; assertFalse ( org.springframework.data.gemfire.config.xml.Cache . isClosed ( ) ) ; assertFalse ( STRING , org.springframework.data.gemfire.config.xml.Region . isDestroyed ( ) ) ; }  <METHOD_END>
