<METHOD_START> @ Before public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.mvc.method.annotation.UriComponentsBuilderMethodArgumentResolver = new UriComponentsBuilderMethodArgumentResolver ( ) ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest = new MockHttpServletRequest ( ) ; this . org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest = new ServletWebRequest ( this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest ) ; java.lang.reflect.Method java.lang.reflect.Method = this . java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.UriComponentsBuilderMethodArgumentResolverTests> ( ) . java.lang.reflect.Method ( STRING , UriComponentsBuilder .class , ServletUriComponentsBuilder .class , int .class ) ; this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new MethodParameter ( java.lang.reflect.Method , NUMBER ) ; this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new MethodParameter ( java.lang.reflect.Method , NUMBER ) ; this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new MethodParameter ( java.lang.reflect.Method , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertTrue ( this . org.springframework.web.servlet.mvc.method.annotation.UriComponentsBuilderMethodArgumentResolver . supportsParameter ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) ) ; assertTrue ( this . org.springframework.web.servlet.mvc.method.annotation.UriComponentsBuilderMethodArgumentResolver . supportsParameter ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) ) ; assertFalse ( this . org.springframework.web.servlet.mvc.method.annotation.UriComponentsBuilderMethodArgumentResolver . supportsParameter ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setContextPath ( STRING ) ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setServletPath ( STRING ) ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setPathInfo ( STRING ) ; java.lang.Object java.lang.Object = this . org.springframework.web.servlet.mvc.method.annotation.UriComponentsBuilderMethodArgumentResolver . resolveArgument ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , new ModelAndViewContainer ( ) , this . org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , null ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( ServletUriComponentsBuilder .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; assertEquals ( STRING , ( ( ServletUriComponentsBuilder ) java.lang.Object ) . build ( ) . toUriString ( ) ) ; }  <METHOD_END>
<METHOD_START> void void ( UriComponentsBuilder org.springframework.web.servlet.mvc.method.annotation.UriComponentsBuilder , ServletUriComponentsBuilder org.springframework.web.servlet.mvc.method.annotation.ServletUriComponentsBuilder , int int ) {	}  <METHOD_END>
