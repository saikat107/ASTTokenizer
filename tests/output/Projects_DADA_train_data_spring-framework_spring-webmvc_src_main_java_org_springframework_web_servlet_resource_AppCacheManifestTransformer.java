<METHOD_START> public void ( ) { this( STRING ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.resource.Resource org.springframework.web.servlet.resource.Resource ( HttpServletRequest org.springframework.web.servlet.resource.HttpServletRequest , Resource org.springframework.web.servlet.resource.Resource , ResourceTransformerChain org.springframework.web.servlet.resource.ResourceTransformerChain ) throws java.io.IOException { org.springframework.web.servlet.resource.Resource = org.springframework.web.servlet.resource.ResourceTransformerChain . transform ( org.springframework.web.servlet.resource.HttpServletRequest , org.springframework.web.servlet.resource.Resource ) ; if ( ! this . java.lang.String . boolean ( StringUtils . getFilenameExtension ( org.springframework.web.servlet.resource.Resource . getFilename ( ) ) ) ) { return org.springframework.web.servlet.resource.Resource ; } byte [] byte[] = FileCopyUtils . copyToByteArray ( org.springframework.web.servlet.resource.Resource . getInputStream ( ) ) ; java.lang.String java.lang.String = new java.lang.String ( byte[] , java.nio.charset.Charset ) ; if ( ! java.lang.String . boolean ( java.lang.String ) ) { if ( org.springframework.web.servlet.resource.Log . isTraceEnabled ( ) ) { org.springframework.web.servlet.resource.Log . trace ( STRING + org.springframework.web.servlet.resource.Resource ) ; } return org.springframework.web.servlet.resource.Resource ; } if ( org.springframework.web.servlet.resource.Log . isTraceEnabled ( ) ) { org.springframework.web.servlet.resource.Log . trace ( STRING + org.springframework.web.servlet.resource.Resource ) ; } java.util.Scanner java.util.Scanner = new java.util.Scanner ( java.lang.String ) ; org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo = null ; org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineAggregator org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineAggregator = new org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineAggregator ( org.springframework.web.servlet.resource.Resource , java.lang.String ) ; while ( java.util.Scanner . boolean ( ) ) { java.lang.String java.lang.String = java.util.Scanner . java.lang.String ( ) ; org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo = new org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo ( java.lang.String , org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo ) ; org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput = org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput ( org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo , org.springframework.web.servlet.resource.HttpServletRequest , org.springframework.web.servlet.resource.Resource , org.springframework.web.servlet.resource.ResourceTransformerChain ) ; org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineAggregator . void ( org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput ) ; org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo = org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo ; } return org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineAggregator . org.springframework.web.servlet.resource.TransformedResource ( ) ; }  <METHOD_END>
<METHOD_START> private static byte [] byte[] ( Resource org.springframework.web.servlet.resource.Resource ) throws java.io.IOException { return FileCopyUtils . copyToByteArray ( org.springframework.web.servlet.resource.Resource . getInputStream ( ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput ( org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo , HttpServletRequest org.springframework.web.servlet.resource.HttpServletRequest , Resource org.springframework.web.servlet.resource.Resource , ResourceTransformerChain org.springframework.web.servlet.resource.ResourceTransformerChain ) { if ( ! org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo . boolean ( ) ) { return new org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput ( org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo . java.lang.String ( ) , null ) ; } Resource org.springframework.web.servlet.resource.Resource = org.springframework.web.servlet.resource.ResourceTransformerChain . getResolverChain ( ) . resolveResource ( null , org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo . java.lang.String ( ) , java.util.Collections . java.util.List ( org.springframework.web.servlet.resource.Resource ) ) ; java.lang.String java.lang.String = resolveUrlPath ( toAbsolutePath ( org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo . java.lang.String ( ) , org.springframework.web.servlet.resource.HttpServletRequest ) , org.springframework.web.servlet.resource.HttpServletRequest , org.springframework.web.servlet.resource.Resource , org.springframework.web.servlet.resource.ResourceTransformerChain ) ; if ( org.springframework.web.servlet.resource.Log . isTraceEnabled ( ) ) { org.springframework.web.servlet.resource.Log . trace ( STRING + java.lang.String + STRING + org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo . java.lang.String ( ) + STRING ) ; } return new org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput ( java.lang.String , org.springframework.web.servlet.resource.Resource ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo ) { this . java.lang.String = java.lang.String ; this . boolean = boolean ( java.lang.String , org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo ) ; this . boolean = boolean ( java.lang.String , this . boolean ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.String java.lang.String , org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo ) { if ( java.util.Collection<java.lang.String> . boolean ( java.lang.String . java.lang.String ( ) ) ) { return java.lang.String . java.lang.String ( ) . boolean ( java.lang.String ) ; } else if ( org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo != null ) { return org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineInfo . boolean ( ) ; } throw new java.lang.IllegalStateException ( STRING + java.lang.String + STRING + java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.String java.lang.String , boolean boolean ) { return ( boolean && StringUtils . hasText ( java.lang.String ) && ! java.lang.String . boolean ( STRING ) && ! java.lang.String . boolean ( STRING ) && ! boolean ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.String java.lang.String ) { int int = java.lang.String . int ( STRING ) ; return ( java.lang.String . boolean ( STRING ) || ( int > NUMBER && ! java.lang.String . java.lang.String ( NUMBER , int ) . boolean ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , Resource org.springframework.web.servlet.resource.Resource ) { this . java.lang.String = java.lang.String ; this . org.springframework.web.servlet.resource.Resource = org.springframework.web.servlet.resource.Resource ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.resource.Resource org.springframework.web.servlet.resource.Resource ( ) { return this . org.springframework.web.servlet.resource.Resource ; }  <METHOD_END>
<METHOD_START> public void ( Resource org.springframework.web.servlet.resource.Resource , java.lang.String java.lang.String ) { this . org.springframework.web.servlet.resource.Resource = org.springframework.web.servlet.resource.Resource ; this . java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( java.lang.String . int ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput ) throws java.io.IOException { this . java.io.StringWriter . void ( org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput . java.lang.String ( ) + STRING ) ; byte [] byte[] = ( org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput . org.springframework.web.servlet.resource.Resource ( ) != null ? DigestUtils . md5Digest ( byte[] ( org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput . org.springframework.web.servlet.resource.Resource ( ) ) ) : org.springframework.web.servlet.resource.AppCacheManifestTransformer.LineOutput . java.lang.String ( ) . byte[] ( java.nio.charset.Charset ) ) ; this . java.io.ByteArrayOutputStream . void ( byte[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.resource.TransformedResource org.springframework.web.servlet.resource.TransformedResource ( ) { java.lang.String java.lang.String = DigestUtils . md5DigestAsHex ( this . java.io.ByteArrayOutputStream . byte[] ( ) ) ; this . java.io.StringWriter . void ( STRING + STRING + java.lang.String ) ; if ( org.springframework.web.servlet.resource.Log . isTraceEnabled ( ) ) { org.springframework.web.servlet.resource.Log . trace ( STRING + org.springframework.web.servlet.resource.Resource . getFilename ( ) + STRING + java.lang.String + STRING ) ; } byte [] byte[] = this . java.io.StringWriter . java.lang.String ( ) . byte[] ( java.nio.charset.Charset ) ; return new TransformedResource ( this . org.springframework.web.servlet.resource.Resource , byte[] ) ; }  <METHOD_END>
