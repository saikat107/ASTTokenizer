<METHOD_START> public static org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { return new org.springframework.data.mongodb.core.query.Update ( ) . org.springframework.data.mongodb.core.query.Update ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( Document org.springframework.data.mongodb.core.query.Document , java.lang.String ... java.lang.String[] ) { org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update = new org.springframework.data.mongodb.core.query.Update ( ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ; for ( java.lang.String java.lang.String : org.springframework.data.mongodb.core.query.Document . keySet ( ) ) { if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { continue; } java.lang.Object java.lang.Object = org.springframework.data.mongodb.core.query.Document . get ( java.lang.String ) ; org.springframework.data.mongodb.core.query.Update . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; if ( boolean ( java.lang.String ) && java.lang.Object instanceof Document ) { org.springframework.data.mongodb.core.query.Update . java.util.Set<java.lang.String> . boolean ( ( ( Document ) java.lang.Object ) . keySet ( ) ) ; } else { org.springframework.data.mongodb.core.query.Update . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; } } return org.springframework.data.mongodb.core.query.Update ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { void ( STRING , java.lang.String , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { void ( STRING , java.lang.String , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String ) { void ( STRING , java.lang.String , NUMBER ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Number java.lang.Number ) { void ( STRING , java.lang.String , java.lang.Number ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { void ( STRING , java.lang.String , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder ( java.lang.String java.lang.String ) { if ( ! java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder> . boolean ( java.lang.String ) ) { java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder> . org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder ( java.lang.String , new org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder ( java.lang.String ) ) ; } return java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder> . org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] ) { void ( STRING , java.lang.String , java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update.AddToSetBuilder org.springframework.data.mongodb.core.query.Update.AddToSetBuilder ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.query.Update.AddToSetBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { void ( STRING , java.lang.String , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , org.springframework.data.mongodb.core.query.Update.Position org.springframework.data.mongodb.core.query.Update.Position ) { void ( STRING , java.lang.String , org.springframework.data.mongodb.core.query.Update.Position == org.springframework.data.mongodb.core.query.Update.Position . org.springframework.data.mongodb.core.query.Update.Position ? - NUMBER : NUMBER ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { void ( STRING , java.lang.String , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] ) { void ( STRING , java.lang.String , java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { void ( STRING , java.lang.String , java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String ) { void ( STRING , java.lang.String , true ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String ) { void ( STRING , java.lang.String , new Document ( STRING , STRING ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; void ( STRING , java.lang.String , java.lang.Number . double ( ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; void ( STRING , java.lang.String , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; void ( STRING , java.lang.String , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder ( this , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( ) { boolean = true ; return this ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Document org.springframework.data.mongodb.core.query.Document ( ) { return new Document ( java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated protected void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Assert . hasText ( java.lang.String , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , new Document ( java.lang.String , java.lang.Object ) ) ; this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Assert . hasText ( java.lang.String , STRING ) ; java.lang.Object java.lang.Object = this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; Document org.springframework.data.mongodb.core.query.Document ; if ( java.lang.Object == null ) { org.springframework.data.mongodb.core.query.Document = new Document ( ) ; this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , org.springframework.data.mongodb.core.query.Document ) ; } else { if ( java.lang.Object instanceof Document ) { org.springframework.data.mongodb.core.query.Document = ( Document ) java.lang.Object ; } else { throw new InvalidDataAccessApiUsageException ( STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; } } org.springframework.data.mongodb.core.query.Document . put ( java.lang.String , java.lang.Object ) ; this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.String java.lang.String ) { return this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.String java.lang.String ) { return StringUtils . startsWithIgnoreCase ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.mongodb.core.query.Document ( ) . hashCode ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null || java.lang.Class<? extends org.springframework.data.mongodb.core.query.Update> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) { return false ; } org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update = ( org.springframework.data.mongodb.core.query.Update ) java.lang.Object ; return this . org.springframework.data.mongodb.core.query.Document ( ) . equals ( org.springframework.data.mongodb.core.query.Update . org.springframework.data.mongodb.core.query.Document ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return SerializationUtils . serializeToJsonSafely ( org.springframework.data.mongodb.core.query.Document ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this . java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.Update.Modifier> = new java.util.LinkedHashMap<java.lang.String,org.springframework.data.mongodb.core.query.Update.Modifier> < java.lang.String , org.springframework.data.mongodb.core.query.Update.Modifier > ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<org.springframework.data.mongodb.core.query.Update.Modifier> < org.springframework.data.mongodb.core.query.Update.Modifier > java.util.Collection<org.springframework.data.mongodb.core.query.Update.Modifier> ( ) { return java.util.Collections . java.util.Collection<org.springframework.data.mongodb.core.query.Update.Modifier> ( this . java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.Update.Modifier> . java.util.Collection<org.springframework.data.mongodb.core.query.Update.Modifier> ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.data.mongodb.core.query.Update.Modifier org.springframework.data.mongodb.core.query.Update.Modifier ) { this . java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.Update.Modifier> . org.springframework.data.mongodb.core.query.Update.Modifier ( org.springframework.data.mongodb.core.query.Update.Modifier . java.lang.String ( ) , org.springframework.data.mongodb.core.query.Update.Modifier ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return nullSafeHashCode ( java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.Update.Modifier> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null || java.lang.Class<? extends org.springframework.data.mongodb.core.query.Update.Modifiers> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) { return false ; } org.springframework.data.mongodb.core.query.Update.Modifiers org.springframework.data.mongodb.core.query.Update.Modifiers = ( org.springframework.data.mongodb.core.query.Update.Modifiers ) java.lang.Object ; return this . java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.Update.Modifier> . boolean ( org.springframework.data.mongodb.core.query.Update.Modifiers . java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.Update.Modifier> ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> java.lang.Object java.lang.Object ( )  <METHOD_END>
<METHOD_START> public void ( java.lang.Object ... java.lang.Object[] ) { this . java.lang.Object[] = java.lang.Object[] ( java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object [] java.lang.Object[] ( java.lang.Object [] java.lang.Object[] ) { if ( java.lang.Object[] == null || java.lang.Object[] . int == NUMBER ) { return java.lang.Object[] ; } if ( java.lang.Object[] . int == NUMBER && java.lang.Object[] [ NUMBER ] instanceof java.util.Collection ) { return ( ( java.util.Collection<?> < ? > ) java.lang.Object[] [ NUMBER ] ) . java.lang.Object[] ( ) ; } return java.util.Arrays . java.lang.Object[] ( java.lang.Object[] , java.lang.Object[] . int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) { return this . java.lang.Object[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return nullSafeHashCode ( java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null || java.lang.Class<? extends org.springframework.data.mongodb.core.query.Update.Each> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) { return false ; } return nullSafeEquals ( java.lang.Object[] , ( ( org.springframework.data.mongodb.core.query.Update.Each ) java.lang.Object ) . java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void ( Direction org.springframework.data.mongodb.core.query.Direction ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Direction , STRING ) ; this . java.lang.Object = org.springframework.data.mongodb.core.query.Direction . isAscending ( ) ? NUMBER : - NUMBER ; }  <METHOD_END>
<METHOD_START> public void ( Sort org.springframework.data.mongodb.core.query.Sort ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Sort , STRING ) ; for ( Order org.springframework.data.mongodb.core.query.Order : org.springframework.data.mongodb.core.query.Sort ) { if ( org.springframework.data.mongodb.core.query.Order . isIgnoreCase ( ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING + STRING , org.springframework.data.mongodb.core.query.Order . getProperty ( ) ) ) ; } } this . java.lang.Object = org.springframework.data.mongodb.core.query.Sort ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) { return this . java.lang.Object ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.query.Update.Modifiers = new org.springframework.data.mongodb.core.query.Update.Modifiers ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.Object ... java.lang.Object[] ) { this . org.springframework.data.mongodb.core.query.Update.Modifiers . void ( new org.springframework.data.mongodb.core.query.Update.Each ( java.lang.Object[] ) ) ; return org.springframework.data.mongodb.core.query.Update .this . org.springframework.data.mongodb.core.query.Update ( java.lang.String , this . org.springframework.data.mongodb.core.query.Update.Modifiers ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder ( int int ) { this . org.springframework.data.mongodb.core.query.Update.Modifiers . void ( new org.springframework.data.mongodb.core.query.Update.Slice ( int ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder ( Direction org.springframework.data.mongodb.core.query.Direction ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Direction , STRING ) ; this . org.springframework.data.mongodb.core.query.Update.Modifiers . void ( new org.springframework.data.mongodb.core.query.Update.SortModifier ( org.springframework.data.mongodb.core.query.Direction ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder ( Sort org.springframework.data.mongodb.core.query.Sort ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Sort , STRING ) ; this . org.springframework.data.mongodb.core.query.Update.Modifiers . void ( new org.springframework.data.mongodb.core.query.Update.SortModifier ( org.springframework.data.mongodb.core.query.Sort ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder ( int int ) { if ( int < NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . org.springframework.data.mongodb.core.query.Update.Modifiers . void ( new org.springframework.data.mongodb.core.query.Update.PositionModifier ( int ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder ( org.springframework.data.mongodb.core.query.Update.Position org.springframework.data.mongodb.core.query.Update.Position ) { if ( org.springframework.data.mongodb.core.query.Update.Position == null || org.springframework.data.mongodb.core.query.Update.Position . org.springframework.data.mongodb.core.query.Update.Position . boolean ( org.springframework.data.mongodb.core.query.Update.Position ) ) { return this ; } this . org.springframework.data.mongodb.core.query.Update.Modifiers . void ( new org.springframework.data.mongodb.core.query.Update.PositionModifier ( NUMBER ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.query.Update .this . org.springframework.data.mongodb.core.query.Update ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ; int += NUMBER * int + org.springframework.data.mongodb.core.query.Update ( ) . int ( ) ; int += NUMBER * int + nullSafeHashCode ( java.lang.String ) ; int += NUMBER * int + nullSafeHashCode ( org.springframework.data.mongodb.core.query.Update.Modifiers ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null || java.lang.Class<? extends org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) { return false ; } org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder = ( org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder ) java.lang.Object ; if ( ! org.springframework.data.mongodb.core.query.Update ( ) . boolean ( org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder . org.springframework.data.mongodb.core.query.Update ( ) ) ) { return false ; } return nullSafeEquals ( this . java.lang.String , org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder . java.lang.String ) && nullSafeEquals ( this . org.springframework.data.mongodb.core.query.Update.Modifiers , org.springframework.data.mongodb.core.query.Update.PushOperatorBuilder . org.springframework.data.mongodb.core.query.Update.Modifiers ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( ) { return org.springframework.data.mongodb.core.query.Update .this ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.Object ... java.lang.Object[] ) { return org.springframework.data.mongodb.core.query.Update .this . org.springframework.data.mongodb.core.query.Update ( this . java.lang.String , new org.springframework.data.mongodb.core.query.Update.Each ( java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.query.Update .this . org.springframework.data.mongodb.core.query.Update ( this . java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return super. java.lang.String ( ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> protected void ( org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Update , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; this . org.springframework.data.mongodb.core.query.Update = org.springframework.data.mongodb.core.query.Update ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( long long ) { void ( org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder.BitwiseOperator . org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder.BitwiseOperator , long ) ; return org.springframework.data.mongodb.core.query.Update ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( long long ) { void ( org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder.BitwiseOperator . org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder.BitwiseOperator , long ) ; return org.springframework.data.mongodb.core.query.Update ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Update org.springframework.data.mongodb.core.query.Update ( long long ) { void ( org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder.BitwiseOperator . org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder.BitwiseOperator , long ) ; return org.springframework.data.mongodb.core.query.Update ; }  <METHOD_END>
<METHOD_START> private void void ( org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder.BitwiseOperator org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder.BitwiseOperator , java.lang.Number java.lang.Number ) { org.springframework.data.mongodb.core.query.Update . void ( java.lang.String , java.lang.String , new Document ( org.springframework.data.mongodb.core.query.Update.BitwiseOperatorBuilder.BitwiseOperator . java.lang.String ( ) , java.lang.Number ) ) ; }  <METHOD_END>
