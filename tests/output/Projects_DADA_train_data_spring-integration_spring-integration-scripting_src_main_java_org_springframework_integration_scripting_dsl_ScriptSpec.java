<METHOD_START> void ( Resource org.springframework.integration.scripting.dsl.Resource ) { Assert . notNull ( org.springframework.integration.scripting.dsl.Resource , STRING ) ; this . org.springframework.integration.scripting.dsl.DslScriptExecutingMessageProcessor = new DslScriptExecutingMessageProcessor ( org.springframework.integration.scripting.dsl.Resource ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . org.springframework.integration.scripting.dsl.DslScriptExecutingMessageProcessor = new DslScriptExecutingMessageProcessor ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.scripting.dsl.ScriptSpec org.springframework.integration.scripting.dsl.ScriptSpec ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . org.springframework.integration.scripting.dsl.DslScriptExecutingMessageProcessor . setLang ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.scripting.dsl.ScriptSpec org.springframework.integration.scripting.dsl.ScriptSpec ( long long ) { this . org.springframework.integration.scripting.dsl.DslScriptExecutingMessageProcessor . setRefreshCheckDelay ( long ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.scripting.dsl.ScriptSpec org.springframework.integration.scripting.dsl.ScriptSpec ( ScriptVariableGenerator org.springframework.integration.scripting.dsl.ScriptVariableGenerator ) { Assert . notNull ( org.springframework.integration.scripting.dsl.ScriptVariableGenerator , STRING ) ; Assert . state ( this . java.util.Map<java.lang.String,java.lang.Object> . boolean ( ) , STRING ) ; this . org.springframework.integration.scripting.dsl.ScriptVariableGenerator = org.springframework.integration.scripting.dsl.ScriptVariableGenerator ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.scripting.dsl.ScriptSpec org.springframework.integration.scripting.dsl.ScriptSpec ( MapBuilder < ? , java.lang.String , java.lang.Object > org.springframework.integration.scripting.dsl.MapBuilder<?,java.lang.String,java.lang.Object> ) { return org.springframework.integration.scripting.dsl.ScriptSpec ( org.springframework.integration.scripting.dsl.MapBuilder<,java.lang.String,java.lang.Object> . get ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.scripting.dsl.ScriptSpec org.springframework.integration.scripting.dsl.ScriptSpec ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { Assert . notEmpty ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) ; Assert . state ( this . org.springframework.integration.scripting.dsl.ScriptVariableGenerator == null , STRING ) ; this . java.util.Map<java.lang.String,java.lang.Object> . void ( java.util.Map<java.lang.String,java.lang.Object> ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.scripting.dsl.ScriptSpec org.springframework.integration.scripting.dsl.ScriptSpec ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . state ( this . org.springframework.integration.scripting.dsl.ScriptVariableGenerator == null , STRING ) ; this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.scripting.dsl.MessageProcessor<?> < ? > org.springframework.integration.scripting.dsl.MessageProcessor<?> ( ) { if ( this . org.springframework.integration.scripting.dsl.ScriptVariableGenerator == null ) { this . org.springframework.integration.scripting.dsl.ScriptVariableGenerator = new DefaultScriptVariableGenerator ( this . java.util.Map<java.lang.String,java.lang.Object> ) ; } this . org.springframework.integration.scripting.dsl.DslScriptExecutingMessageProcessor . setVariableGenerator ( this . org.springframework.integration.scripting.dsl.ScriptVariableGenerator ) ; return this . org.springframework.integration.scripting.dsl.DslScriptExecutingMessageProcessor ; }  <METHOD_END>
