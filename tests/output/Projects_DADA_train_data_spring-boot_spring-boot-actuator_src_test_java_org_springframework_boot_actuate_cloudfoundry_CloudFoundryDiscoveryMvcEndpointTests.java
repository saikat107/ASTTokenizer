<METHOD_START> @ Before public void void ( ) { NamedMvcEndpoint org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint = new org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpointTests.TestMvcEndpoint ( new org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpointTests.TestEndpoint ( STRING ) ) ; this . java.util.Set<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> = new java.util.LinkedHashSet <> ( ) ; this . java.util.Set<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> . add ( org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint ) ; this . org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpoint = new CloudFoundryDiscoveryMvcEndpoint ( this . java.util.Set<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( this . org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpoint . getPath ( ) ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockHttpServletRequest org.springframework.boot.actuate.cloudfoundry.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; AccessLevel . FULL . put ( org.springframework.boot.actuate.cloudfoundry.MockHttpServletRequest ) ; java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> < java.lang.String , CloudFoundryDiscoveryMvcEndpoint . CloudFoundryDiscoveryMvcEndpoint > java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> = this . org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpoint . links ( org.springframework.boot.actuate.cloudfoundry.MockHttpServletRequest ) . get ( STRING ) ; assertThat ( java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> . get ( STRING ) . getHref ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> . get ( STRING ) . getHref ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockHttpServletRequest org.springframework.boot.actuate.cloudfoundry.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; AccessLevel . FULL . put ( org.springframework.boot.actuate.cloudfoundry.MockHttpServletRequest ) ; java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> < java.lang.String , CloudFoundryDiscoveryMvcEndpoint . CloudFoundryDiscoveryMvcEndpoint > java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> = this . org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpoint . links ( org.springframework.boot.actuate.cloudfoundry.MockHttpServletRequest ) . get ( STRING ) ; assertThat ( java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> . get ( STRING ) . getHref ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> . get ( STRING ) . getHref ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { NamedMvcEndpoint org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint = new org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpointTests.TestMvcEndpoint ( new org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpointTests.TestEndpoint ( STRING ) ) ; this . java.util.Set<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> . add ( org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint ) ; MockHttpServletRequest org.springframework.boot.actuate.cloudfoundry.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; AccessLevel . RESTRICTED . put ( org.springframework.boot.actuate.cloudfoundry.MockHttpServletRequest ) ; java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> < java.lang.String , CloudFoundryDiscoveryMvcEndpoint . CloudFoundryDiscoveryMvcEndpoint > java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> = this . org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpoint . links ( org.springframework.boot.actuate.cloudfoundry.MockHttpServletRequest ) . get ( STRING ) ; assertThat ( java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> . get ( STRING ) . getHref ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> . get ( STRING ) . getHref ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.util.Map<java.lang.String,CloudFoundryDiscoveryMvcEndpoint.Link> . get ( STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> void ( org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpointTests.TestEndpoint org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpointTests.TestEndpoint ) { super( org.springframework.boot.actuate.cloudfoundry.CloudFoundryDiscoveryMvcEndpointTests.TestEndpoint ); }  <METHOD_END>
