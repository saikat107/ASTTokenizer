<METHOD_START> private void ( ) { super(); }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String [] java.lang.String[] ) throws java.lang.Exception { java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING + new java.util.Date ( ) ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; org.springframework.integration.gemfire.fork.Log . info ( STRING ) ; Cache org.springframework.integration.gemfire.fork.Cache = new CacheFactory ( java.util.Properties ) . create ( ) ; Region < ? , ? > org.springframework.integration.gemfire.fork.Region<?,?> = org.springframework.integration.gemfire.fork.Cache . createRegionFactory ( RegionShortcut . REPLICATE ) . setScope ( Scope . DISTRIBUTED_ACK ) . create ( STRING ) ; org.springframework.integration.gemfire.fork.Log . info ( STRING + org.springframework.integration.gemfire.fork.Region<,> . getFullPath ( ) + STRING ) ; CacheServer org.springframework.integration.gemfire.fork.CacheServer = org.springframework.integration.gemfire.fork.Cache . addCacheServer ( ) ; org.springframework.integration.gemfire.fork.CacheServer . setPort ( NUMBER ) ; org.springframework.integration.gemfire.fork.Log . info ( STRING ) ; org.springframework.integration.gemfire.fork.CacheServer . start ( ) ; ForkUtil . createControlFile ( org.springframework.integration.gemfire.fork.CacheServerProcess .class . java.lang.String ( ) ) ; org.springframework.integration.gemfire.fork.Log . info ( STRING ) ; java.io.BufferedReader java.io.BufferedReader = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System . java.io.InputStream ) ) ; java.io.BufferedReader . java.lang.String ( ) ; }  <METHOD_END>
