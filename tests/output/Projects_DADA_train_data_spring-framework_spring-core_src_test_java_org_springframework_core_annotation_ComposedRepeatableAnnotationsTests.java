<METHOD_START> @ Test public void void ( ) { void ( ) ; getMergedRepeatableAnnotations ( java.lang.Class<? extends org.springframework.core.annotation.ComposedRepeatableAnnotationsTests> ( ) , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.NonRepeatable .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; getMergedRepeatableAnnotations ( java.lang.Class<? extends org.springframework.core.annotation.ComposedRepeatableAnnotationsTests> ( ) , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.InvalidRepeatable .class , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ContainerMissingValueAttribute .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; getMergedRepeatableAnnotations ( java.lang.Class<? extends org.springframework.core.annotation.ComposedRepeatableAnnotationsTests> ( ) , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.InvalidRepeatable .class , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ContainerWithNonArrayValueAttribute .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; getMergedRepeatableAnnotations ( java.lang.Class<? extends org.springframework.core.annotation.ComposedRepeatableAnnotationsTests> ( ) , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.InvalidRepeatable .class , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ContainerWithArrayValueAttributeButWrongComponentType .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.RepeatableClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.SubRepeatableClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ComposedRepeatableClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ComposedRepeatableMixedWithContainerClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ComposedContainerClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.NoninheritedRepeatableClass .class ; java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> < org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited > java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> = getMergedRepeatableAnnotations ( java.lang.Class<> , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited .class ) ; void ( java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.SubNoninheritedRepeatableClass .class ; java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> < org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited > java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> = getMergedRepeatableAnnotations ( java.lang.Class<> , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited .class ) ; assertNotNull ( java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; findMergedRepeatableAnnotations ( java.lang.Class<? extends org.springframework.core.annotation.ComposedRepeatableAnnotationsTests> ( ) , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.NonRepeatable .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; findMergedRepeatableAnnotations ( java.lang.Class<? extends org.springframework.core.annotation.ComposedRepeatableAnnotationsTests> ( ) , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.InvalidRepeatable .class , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ContainerMissingValueAttribute .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; findMergedRepeatableAnnotations ( java.lang.Class<? extends org.springframework.core.annotation.ComposedRepeatableAnnotationsTests> ( ) , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.InvalidRepeatable .class , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ContainerWithNonArrayValueAttribute .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; findMergedRepeatableAnnotations ( java.lang.Class<? extends org.springframework.core.annotation.ComposedRepeatableAnnotationsTests> ( ) , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.InvalidRepeatable .class , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ContainerWithArrayValueAttributeButWrongComponentType .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.RepeatableClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.SubRepeatableClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ComposedRepeatableClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ComposedRepeatableMixedWithContainerClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.NoninheritedRepeatableClass .class ; java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> < org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited > java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> = findMergedRepeatableAnnotations ( java.lang.Class<> , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited .class ) ; void ( java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.SubNoninheritedRepeatableClass .class ; java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> < org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited > java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> = findMergedRepeatableAnnotations ( java.lang.Class<> , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited .class ) ; void ( java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ComposedContainerClass .class ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { org.springframework.core.annotation.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( startsWith ( STRING ) ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( containsString ( STRING ) ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( containsString ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.NonRepeatable .class . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { org.springframework.core.annotation.ExpectedException . expect ( AnnotationConfigurationException .class ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( startsWith ( STRING ) ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( containsString ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ContainerMissingValueAttribute .class . java.lang.String ( ) ) ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( containsString ( STRING ) ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( containsString ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.InvalidRepeatable .class . java.lang.String ( ) ) ) ; org.springframework.core.annotation.ExpectedException . expectCause ( isA ( java.lang.NoSuchMethodException .class ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { org.springframework.core.annotation.ExpectedException . expect ( AnnotationConfigurationException .class ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( startsWith ( STRING ) ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( containsString ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ContainerWithNonArrayValueAttribute .class . java.lang.String ( ) ) ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( containsString ( STRING ) ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( containsString ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.InvalidRepeatable .class . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { org.springframework.core.annotation.ExpectedException . expect ( AnnotationConfigurationException .class ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( startsWith ( STRING ) ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( containsString ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.ContainerWithArrayValueAttributeButWrongComponentType .class . java.lang.String ( ) ) ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( containsString ( STRING ) ) ; org.springframework.core.annotation.ExpectedException . expectMessage ( containsString ( org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.InvalidRepeatable .class . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ) { assertNotNull ( java.lang.reflect.AnnotatedElement ) ; java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> < org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat > java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> = getMergedRepeatableAnnotations ( java.lang.reflect.AnnotatedElement , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat .class ) ; assertNotNull ( java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> . int ( ) ) ; java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> < org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat > java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> = java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> . java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> ( ) ; assertEquals ( STRING , java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> . org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat ( ) . java.lang.String ( ) ) ; assertEquals ( STRING , java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> . org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat ( ) . java.lang.String ( ) ) ; assertEquals ( STRING , java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> . org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ) { assertNotNull ( java.lang.reflect.AnnotatedElement ) ; java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> < org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat > java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> = findMergedRepeatableAnnotations ( java.lang.reflect.AnnotatedElement , org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat .class ) ; assertNotNull ( java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> . int ( ) ) ; java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> < org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat > java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> = java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> . java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> ( ) ; assertEquals ( STRING , java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> . org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat ( ) . java.lang.String ( ) ) ; assertEquals ( STRING , java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> . org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat ( ) . java.lang.String ( ) ) ; assertEquals ( STRING , java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat> . org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.PeteRepeat ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> < org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited > java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> ) { assertNotNull ( java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> . int ( ) ) ; java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> < org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited > java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> = java.util.Set<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> . java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> ( ) ; assertEquals ( STRING , java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> . org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited ( ) . java.lang.String ( ) ) ; assertEquals ( STRING , java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> . org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited ( ) . java.lang.String ( ) ) ; assertEquals ( STRING , java.util.Iterator<org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited> . org.springframework.core.annotation.ComposedRepeatableAnnotationsTests.Noninherited ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
