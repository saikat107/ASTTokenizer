<METHOD_START> @ BeforeClass @ AfterClass public static void void ( ) { ReflectionTestUtils . setField ( TomcatURLStreamHandlerFactory .class , STRING , null ) ; ReflectionTestUtils . setField ( java.net.URL .class , STRING , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletWebServerApplicationContext org.springframework.boot.context.embedded.ServletWebServerApplicationContext = ( ServletWebServerApplicationContext ) new SpringApplication ( org.springframework.boot.context.embedded.TomcatLegacyCookieProcessorExampleTests.TestConfiguration .class , LegacyCookieProcessorConfiguration .class ) . run ( ) ; Context org.springframework.boot.context.embedded.Context = ( Context ) ( ( TomcatWebServer ) org.springframework.boot.context.embedded.ServletWebServerApplicationContext . getWebServer ( ) ) . getTomcat ( ) . getHost ( ) . findChildren ( ) [ NUMBER ] ; assertThat ( org.springframework.boot.context.embedded.Context . getCookieProcessor ( ) ) . isInstanceOf ( LegacyCookieProcessor .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.context.embedded.TomcatServletWebServerFactory org.springframework.boot.context.embedded.TomcatServletWebServerFactory ( ) { return new TomcatServletWebServerFactory ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.context.embedded.WebServerFactoryCustomizerBeanPostProcessor org.springframework.boot.context.embedded.WebServerFactoryCustomizerBeanPostProcessor ( ) { return new WebServerFactoryCustomizerBeanPostProcessor ( ) ; }  <METHOD_END>
