<METHOD_START> @ Test public void void ( ) { org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean = false ; ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.AutoProxyLazyInitTests.ConfigWithStatic .class ) ; org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean = org.springframework.context.annotation.ApplicationContext . getBean ( STRING , org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean .class ) ; assertFalse ( org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean ) ; org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean . java.lang.String ( ) ; assertTrue ( org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean = false ; ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.AutoProxyLazyInitTests.ConfigWithStaticAndInterface .class ) ; org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean = org.springframework.context.annotation.ApplicationContext . getBean ( STRING , org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean .class ) ; assertFalse ( org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean ) ; org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean . java.lang.String ( ) ; assertTrue ( org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean = false ; ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.AutoProxyLazyInitTests.ConfigWithNonStatic .class ) ; org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean = org.springframework.context.annotation.ApplicationContext . getBean ( STRING , org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean .class ) ; assertFalse ( org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean ) ; org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean . java.lang.String ( ) ; assertTrue ( org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean = false ; ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.AutoProxyLazyInitTests.ConfigWithNonStaticAndInterface .class ) ; org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean = org.springframework.context.annotation.ApplicationContext . getBean ( STRING , org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean .class ) ; assertFalse ( org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean ) ; org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean . java.lang.String ( ) ; assertTrue ( org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl . boolean ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public void ( ) { boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ javax.annotation.PreDestroy public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.BeanNameAutoProxyCreator org.springframework.context.annotation.BeanNameAutoProxyCreator ( ) { BeanNameAutoProxyCreator org.springframework.context.annotation.BeanNameAutoProxyCreator = new BeanNameAutoProxyCreator ( ) ; org.springframework.context.annotation.BeanNameAutoProxyCreator . setCustomTargetSourceCreators ( org.springframework.context.annotation.LazyInitTargetSourceCreator ( ) ) ; return org.springframework.context.annotation.BeanNameAutoProxyCreator ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.LazyInitTargetSourceCreator org.springframework.context.annotation.LazyInitTargetSourceCreator ( ) { return new org.springframework.context.annotation.AutoProxyLazyInitTests.StrictLazyInitTargetSourceCreator ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Lazy public static org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean ( ) { return new org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.BeanNameAutoProxyCreator org.springframework.context.annotation.BeanNameAutoProxyCreator ( ) { BeanNameAutoProxyCreator org.springframework.context.annotation.BeanNameAutoProxyCreator = new BeanNameAutoProxyCreator ( ) ; org.springframework.context.annotation.BeanNameAutoProxyCreator . setCustomTargetSourceCreators ( org.springframework.context.annotation.LazyInitTargetSourceCreator ( ) ) ; return org.springframework.context.annotation.BeanNameAutoProxyCreator ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.LazyInitTargetSourceCreator org.springframework.context.annotation.LazyInitTargetSourceCreator ( ) { return new org.springframework.context.annotation.AutoProxyLazyInitTests.StrictLazyInitTargetSourceCreator ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Lazy public static org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean ( ) { return new org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContextEvent org.springframework.context.annotation.ApplicationContextEvent ) {		}  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.BeanNameAutoProxyCreator org.springframework.context.annotation.BeanNameAutoProxyCreator ( ) { BeanNameAutoProxyCreator org.springframework.context.annotation.BeanNameAutoProxyCreator = new BeanNameAutoProxyCreator ( ) ; org.springframework.context.annotation.BeanNameAutoProxyCreator . setCustomTargetSourceCreators ( org.springframework.context.annotation.LazyInitTargetSourceCreator ( ) ) ; return org.springframework.context.annotation.BeanNameAutoProxyCreator ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.LazyInitTargetSourceCreator org.springframework.context.annotation.LazyInitTargetSourceCreator ( ) { return new org.springframework.context.annotation.AutoProxyLazyInitTests.StrictLazyInitTargetSourceCreator ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Lazy public org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean ( ) { return new org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.BeanNameAutoProxyCreator org.springframework.context.annotation.BeanNameAutoProxyCreator ( ) { BeanNameAutoProxyCreator org.springframework.context.annotation.BeanNameAutoProxyCreator = new BeanNameAutoProxyCreator ( ) ; org.springframework.context.annotation.BeanNameAutoProxyCreator . setCustomTargetSourceCreators ( org.springframework.context.annotation.LazyInitTargetSourceCreator ( ) ) ; return org.springframework.context.annotation.BeanNameAutoProxyCreator ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.LazyInitTargetSourceCreator org.springframework.context.annotation.LazyInitTargetSourceCreator ( ) { return new org.springframework.context.annotation.AutoProxyLazyInitTests.StrictLazyInitTargetSourceCreator ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Lazy public org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean ( ) { return new org.springframework.context.annotation.AutoProxyLazyInitTests.MyBeanImpl ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContextEvent org.springframework.context.annotation.ApplicationContextEvent ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.context.annotation.AbstractBeanFactoryBasedTargetSource org.springframework.context.annotation.AbstractBeanFactoryBasedTargetSource ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { if ( STRING . boolean ( java.lang.String ) ) { assertEquals ( org.springframework.context.annotation.AutoProxyLazyInitTests.MyBean .class , java.lang.Class<> ) ; } return super. createBeanFactoryBasedTargetSource ( java.lang.Class<> , java.lang.String ) ; }  <METHOD_END>
