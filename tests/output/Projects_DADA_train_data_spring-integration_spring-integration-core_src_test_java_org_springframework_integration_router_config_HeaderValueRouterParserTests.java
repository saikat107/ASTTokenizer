<METHOD_START> @ Test public void void ( ) { org.springframework.integration.router.config.ConfigurableApplicationContext . start ( ) ; MessageBuilder < ? > org.springframework.integration.router.config.MessageBuilder<?> = MessageBuilder . withPayload ( STRING ) ; org.springframework.integration.router.config.MessageBuilder<> . setHeader ( STRING , STRING ) ; Message < ? > org.springframework.integration.router.config.Message<?> = org.springframework.integration.router.config.MessageBuilder<> . build ( ) ; MessageBuilder < ? > org.springframework.integration.router.config.MessageBuilder<?> = MessageBuilder . withPayload ( STRING ) ; org.springframework.integration.router.config.MessageBuilder<> . setHeader ( STRING , STRING ) ; Message < ? > org.springframework.integration.router.config.Message<?> = org.springframework.integration.router.config.MessageBuilder<> . build ( ) ; org.springframework.integration.router.config.HeaderValueRouterParserTests.TestServiceA . void ( org.springframework.integration.router.config.Message<> ) ; org.springframework.integration.router.config.HeaderValueRouterParserTests.TestServiceA . void ( org.springframework.integration.router.config.Message<> ) ; PollableChannel org.springframework.integration.router.config.PollableChannel = ( PollableChannel ) org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; PollableChannel org.springframework.integration.router.config.PollableChannel = ( PollableChannel ) org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; org.springframework.integration.router.config.Message<?> = org.springframework.integration.router.config.PollableChannel . receive ( ) ; assertTrue ( org.springframework.integration.router.config.Message<> . getHeaders ( ) . get ( STRING ) . equals ( STRING ) ) ; org.springframework.integration.router.config.Message<?> = org.springframework.integration.router.config.PollableChannel . receive ( ) ; assertTrue ( org.springframework.integration.router.config.Message<> . getHeaders ( ) . get ( STRING ) . equals ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.integration.router.config.ConfigurableApplicationContext . start ( ) ; MessageBuilder < ? > org.springframework.integration.router.config.MessageBuilder<?> = MessageBuilder . withPayload ( STRING ) ; org.springframework.integration.router.config.MessageBuilder<> . setHeader ( STRING , STRING ) ; Message < ? > org.springframework.integration.router.config.Message<?> = org.springframework.integration.router.config.MessageBuilder<> . build ( ) ; MessageBuilder < ? > org.springframework.integration.router.config.MessageBuilder<?> = MessageBuilder . withPayload ( STRING ) ; org.springframework.integration.router.config.MessageBuilder<> . setHeader ( STRING , STRING ) ; Message < ? > org.springframework.integration.router.config.Message<?> = org.springframework.integration.router.config.MessageBuilder<> . build ( ) ; org.springframework.integration.router.config.HeaderValueRouterParserTests.TestServiceB . void ( org.springframework.integration.router.config.Message<> ) ; org.springframework.integration.router.config.HeaderValueRouterParserTests.TestServiceB . void ( org.springframework.integration.router.config.Message<> ) ; PollableChannel org.springframework.integration.router.config.PollableChannel = ( PollableChannel ) org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; PollableChannel org.springframework.integration.router.config.PollableChannel = ( PollableChannel ) org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; org.springframework.integration.router.config.Message<?> = org.springframework.integration.router.config.PollableChannel . receive ( ) ; assertTrue ( org.springframework.integration.router.config.Message<> . getHeaders ( ) . get ( STRING ) . equals ( STRING ) ) ; org.springframework.integration.router.config.Message<?> = org.springframework.integration.router.config.PollableChannel . receive ( ) ; assertTrue ( org.springframework.integration.router.config.Message<> . getHeaders ( ) . get ( STRING ) . equals ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> void void ( Message < ? > org.springframework.integration.router.config.Message<?> );  <METHOD_END>
<METHOD_START> void void ( Message < ? > org.springframework.integration.router.config.Message<?> );  <METHOD_END>
