<METHOD_START> @ java.lang.Override protected org.springframework.integration.redis.config.AbstractBeanDefinition org.springframework.integration.redis.config.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.redis.config.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.redis.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( RedisQueueOutboundChannelAdapter .class ) ; BeanDefinition org.springframework.integration.redis.config.BeanDefinition = IntegrationNamespaceUtils . createExpressionDefinitionFromValueOrExpression ( STRING , STRING , org.springframework.integration.redis.config.ParserContext , org.w3c.dom.Element , true ) ; org.springframework.integration.redis.config.BeanDefinitionBuilder . addConstructorArgValue ( org.springframework.integration.redis.config.BeanDefinition ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { java.lang.String = STRING ; } org.springframework.integration.redis.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.redis.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.redis.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.redis.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; return org.springframework.integration.redis.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
