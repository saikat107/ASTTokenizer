<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , ObjectFactory < ? > org.springframework.messaging.simp.ObjectFactory<?> ) { SimpAttributes org.springframework.messaging.simp.SimpAttributes = SimpAttributesContextHolder . currentAttributes ( ) ; java.lang.Object java.lang.Object = org.springframework.messaging.simp.SimpAttributes . getAttribute ( java.lang.String ) ; if ( java.lang.Object != null ) { return java.lang.Object ; } synchronized ( org.springframework.messaging.simp.SimpAttributes . getSessionMutex ( ) ) { java.lang.Object = org.springframework.messaging.simp.SimpAttributes . getAttribute ( java.lang.String ) ; if ( java.lang.Object == null ) { java.lang.Object = org.springframework.messaging.simp.ObjectFactory<> . getObject ( ) ; org.springframework.messaging.simp.SimpAttributes . setAttribute ( java.lang.String , java.lang.Object ) ; } return java.lang.Object ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { SimpAttributes org.springframework.messaging.simp.SimpAttributes = SimpAttributesContextHolder . currentAttributes ( ) ; synchronized ( org.springframework.messaging.simp.SimpAttributes . getSessionMutex ( ) ) { java.lang.Object java.lang.Object = org.springframework.messaging.simp.SimpAttributes . getAttribute ( java.lang.String ) ; if ( java.lang.Object != null ) { org.springframework.messaging.simp.SimpAttributes . removeAttribute ( java.lang.String ) ; return java.lang.Object ; } else { return null ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Runnable java.lang.Runnable ) { SimpAttributesContextHolder . currentAttributes ( ) . registerDestructionCallback ( java.lang.String , java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return SimpAttributesContextHolder . currentAttributes ( ) . getSessionId ( ) ; }  <METHOD_END>
