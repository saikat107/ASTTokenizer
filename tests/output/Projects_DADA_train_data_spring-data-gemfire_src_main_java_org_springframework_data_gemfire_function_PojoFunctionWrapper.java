<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.String java.lang.String ) { this . org.springframework.data.gemfire.function.FunctionArgumentResolver = new FunctionContextInjectingArgumentResolver ( java.lang.reflect.Method ) ; this . java.lang.Object = java.lang.Object ; this . java.lang.reflect.Method = java.lang.reflect.Method ; this . java.lang.String = ( StringUtils . hasText ( java.lang.String ) ? java.lang.String : java.lang.reflect.Method . java.lang.String ( ) ) ; this . boolean = false ; this . boolean = ! ( java.lang.reflect.Method . java.lang.Class<?> ( ) . boolean ( void .class ) ) ; this . boolean = false ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final FunctionContext org.springframework.data.gemfire.function.FunctionContext ) { java.lang.Object [] java.lang.Object[] = this . org.springframework.data.gemfire.function.FunctionArgumentResolver . resolveFunctionArguments ( org.springframework.data.gemfire.function.FunctionContext ) ; java.lang.Object java.lang.Object = java.lang.Object ( java.lang.Object[] ) ; if ( boolean ( ) ) { void ( org.springframework.data.gemfire.function.FunctionContext . getResultSender ( ) , java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> protected final java.lang.Object java.lang.Object ( java.lang.Object [] java.lang.Object[] ) { if ( org.springframework.data.gemfire.function.Log . isDebugEnabled ( ) ) { org.springframework.data.gemfire.function.Log . debug ( java.lang.String . java.lang.String ( STRING , java.lang.reflect.Method . java.lang.String ( ) , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) , this . java.lang.String ) ) ; for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { org.springframework.data.gemfire.function.Log . debug ( STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) + STRING + java.lang.Object . java.lang.String ( ) ) ; } } return ReflectionUtils . invokeMethod ( java.lang.reflect.Method , java.lang.Object , ( java.lang.Object [] ) java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> private void void ( ResultSender < java.lang.Object > org.springframework.data.gemfire.function.ResultSender<java.lang.Object> , java.lang.Object java.lang.Object ) { if ( java.lang.Object == null ) { org.springframework.data.gemfire.function.ResultSender<java.lang.Object> . lastResult ( null ) ; } else { if ( ObjectUtils . isArray ( java.lang.Object ) ) { new BatchingResultSender ( int , org.springframework.data.gemfire.function.ResultSender<java.lang.Object> ) . sendArrayResults ( java.lang.Object ) ; } else if ( java.lang.Iterable .class . boolean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { new BatchingResultSender ( int , org.springframework.data.gemfire.function.ResultSender<java.lang.Object> ) . sendResults ( ( java.lang.Iterable<?> < ? > ) java.lang.Object ) ; } else { org.springframework.data.gemfire.function.ResultSender<java.lang.Object> . lastResult ( java.lang.Object ) ; } } }  <METHOD_END>
