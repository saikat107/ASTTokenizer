<METHOD_START> protected abstract T T ( java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> protected abstract java.lang.Class<?> < ? > java.lang.Class<?> ( )  <METHOD_END>
<METHOD_START> protected T T ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected T T ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( ResultSet org.springframework.cassandra.core.converter.ResultSet ) { if ( org.springframework.cassandra.core.converter.ResultSet == null ) { return T ( ) ; } if ( org.springframework.cassandra.core.converter.ResultSet . isExhausted ( ) ) { return T ( ) ; } java.util.List<java.util.Map<java.lang.String,java.lang.Object>> < java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.List<java.util.Map<java.lang.String,java.lang.Object>> = org.springframework.cassandra.core.converter.ResultSetToListConverter . convert ( org.springframework.cassandra.core.converter.ResultSet ) ; if ( java.util.List<java.util.Map<java.lang.String,java.lang.Object>> . int ( ) == NUMBER ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = java.util.List<java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( NUMBER ) ; return java.util.Map<java.lang.String,java.lang.Object> . int ( ) == NUMBER ? T ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.lang.String> ( ) . java.util.Iterator<java.lang.String> ( ) . java.lang.String ( ) ) ) : T ( java.util.Map<java.lang.String,java.lang.Object> ) ; } return T ( java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ) ; }  <METHOD_END>
<METHOD_START> protected T T ( java.util.List<java.util.Map<java.lang.String,java.lang.Object>> < java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ) { void ( STRING ) ; return null ; }  <METHOD_END>
<METHOD_START> protected T T ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { void ( STRING ) ; return null ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , java.lang.String , java.lang.Class<?> ( ) . java.lang.String ( ) ) ) ; }  <METHOD_END>
