<METHOD_START> void ( SimpleMessageListenerContainer org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer ) { super( new AmqpInboundChannelAdapter ( org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer ) ); this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer = org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( AcknowledgeMode org.springframework.integration.amqp.dsl.AcknowledgeMode ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setAcknowledgeMode ( org.springframework.integration.amqp.dsl.AcknowledgeMode ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( java.lang.String ... java.lang.String[] ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . addQueueNames ( java.lang.String[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( Queue ... org.springframework.integration.amqp.dsl.Queue[] ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . addQueues ( org.springframework.integration.amqp.dsl.Queue[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( ErrorHandler org.springframework.integration.amqp.dsl.ErrorHandler ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setErrorHandler ( org.springframework.integration.amqp.dsl.ErrorHandler ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( boolean boolean ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setChannelTransacted ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( Advice ... org.springframework.integration.amqp.dsl.Advice[] ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setAdviceChain ( org.springframework.integration.amqp.dsl.Advice[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( long long ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setRecoveryInterval ( long ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( int int ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setConcurrentConsumers ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( int int ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setMaxConcurrentConsumers ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( boolean boolean ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setExclusive ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( long long ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setStartConsumerMinInterval ( long ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( long long ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setStopConsumerMinInterval ( long ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( int int ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setConsecutiveActiveTrigger ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( int int ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setConsecutiveIdleTrigger ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( long long ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setReceiveTimeout ( long ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( long long ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setShutdownTimeout ( long ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( java.util.concurrent.Executor java.util.concurrent.Executor ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setTaskExecutor ( java.util.concurrent.Executor ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( int int ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setPrefetchCount ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( int int ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setTxSize ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( PlatformTransactionManager org.springframework.integration.amqp.dsl.PlatformTransactionManager ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setTransactionManager ( org.springframework.integration.amqp.dsl.PlatformTransactionManager ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec org.springframework.integration.amqp.dsl.AmqpInboundChannelAdapterSpec ( boolean boolean ) { this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer . setDefaultRequeueRejected ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { return java.util.Collections .< java.lang.Object > java.util.Set<java.lang.Object> ( this . org.springframework.integration.amqp.dsl.SimpleMessageListenerContainer ) ; }  <METHOD_END>
