<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; org.springframework.web.multipart.support.ByteArrayMultipartFileEditor . setValue ( java.lang.String . byte[] ( ) ) ; assertEquals ( java.lang.String , org.springframework.web.multipart.support.ByteArrayMultipartFileEditor . getAsText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; org.springframework.web.multipart.support.ByteArrayMultipartFileEditor . setValue ( java.lang.String ) ; assertEquals ( java.lang.String , org.springframework.web.multipart.support.ByteArrayMultipartFileEditor . getAsText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; java.lang.Object java.lang.Object = new java.lang.Object ( ) { @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; } } ; org.springframework.web.multipart.support.ByteArrayMultipartFileEditor . setValue ( java.lang.Object ) ; assertEquals ( java.lang.String , org.springframework.web.multipart.support.ByteArrayMultipartFileEditor . getAsText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.web.multipart.support.ByteArrayMultipartFileEditor . setValue ( null ) ; assertEquals ( STRING , org.springframework.web.multipart.support.ByteArrayMultipartFileEditor . getAsText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; MultipartFile org.springframework.web.multipart.support.MultipartFile = mock ( MultipartFile .class ) ; given ( org.springframework.web.multipart.support.MultipartFile . getBytes ( ) ) . willReturn ( java.lang.String . byte[] ( ) ) ; org.springframework.web.multipart.support.ByteArrayMultipartFileEditor . setValue ( org.springframework.web.multipart.support.MultipartFile ) ; assertEquals ( java.lang.String , org.springframework.web.multipart.support.ByteArrayMultipartFileEditor . getAsText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { MultipartFile org.springframework.web.multipart.support.MultipartFile = mock ( MultipartFile .class ) ; given ( org.springframework.web.multipart.support.MultipartFile . getBytes ( ) ) . willThrow ( new java.io.IOException ( ) ) ; org.springframework.web.multipart.support.ByteArrayMultipartFileEditor . setValue ( org.springframework.web.multipart.support.MultipartFile ) ; }  <METHOD_END>
