<METHOD_START> @ java.lang.Override public final void void ( ServletRequest org.springframework.web.filter.ServletRequest , ServletResponse org.springframework.web.filter.ServletResponse , FilterChain org.springframework.web.filter.FilterChain )			throws org.springframework.web.filter.ServletException , java.io.IOException { if ( ! ( org.springframework.web.filter.ServletRequest instanceof HttpServletRequest ) || ! ( org.springframework.web.filter.ServletResponse instanceof HttpServletResponse ) ) { throw new ServletException ( STRING ) ; } HttpServletRequest org.springframework.web.filter.HttpServletRequest = ( HttpServletRequest ) org.springframework.web.filter.ServletRequest ; HttpServletResponse org.springframework.web.filter.HttpServletResponse = ( HttpServletResponse ) org.springframework.web.filter.ServletResponse ; java.lang.String java.lang.String = java.lang.String ( ) ; boolean boolean = org.springframework.web.filter.ServletRequest . getAttribute ( java.lang.String ) != null ; if ( boolean || boolean ( org.springframework.web.filter.HttpServletRequest ) || boolean ( org.springframework.web.filter.HttpServletRequest ) ) { org.springframework.web.filter.FilterChain . doFilter ( org.springframework.web.filter.ServletRequest , org.springframework.web.filter.ServletResponse ) ; } else { org.springframework.web.filter.ServletRequest . setAttribute ( java.lang.String , java.lang.Boolean . java.lang.Boolean ) ; try { void ( org.springframework.web.filter.HttpServletRequest , org.springframework.web.filter.HttpServletResponse , org.springframework.web.filter.FilterChain ) ; } finally { org.springframework.web.filter.ServletRequest . removeAttribute ( java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> private boolean boolean ( HttpServletRequest org.springframework.web.filter.HttpServletRequest ) { if ( boolean ( org.springframework.web.filter.HttpServletRequest ) && boolean ( ) ) { return true ; } if ( org.springframework.web.filter.HttpServletRequest . getAttribute ( WebUtils . ERROR_REQUEST_URI_ATTRIBUTE ) != null && boolean ( ) ) { return true ; } return false ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( HttpServletRequest org.springframework.web.filter.HttpServletRequest ) { return WebAsyncUtils . getAsyncManager ( org.springframework.web.filter.HttpServletRequest ) . hasConcurrentResult ( ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( HttpServletRequest org.springframework.web.filter.HttpServletRequest ) { return WebAsyncUtils . getAsyncManager ( org.springframework.web.filter.HttpServletRequest ) . isConcurrentHandlingStarted ( ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = getFilterName ( ) ; if ( java.lang.String == null ) { java.lang.String = java.lang.Class<? extends org.springframework.web.filter.OncePerRequestFilter> ( ) . java.lang.String ( ) ; } return java.lang.String + java.lang.String ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( HttpServletRequest org.springframework.web.filter.HttpServletRequest ) throws org.springframework.web.filter.ServletException { return false ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( HttpServletRequest org.springframework.web.filter.HttpServletRequest , HttpServletResponse org.springframework.web.filter.HttpServletResponse , FilterChain org.springframework.web.filter.FilterChain )			throws org.springframework.web.filter.ServletException , java.io.IOException ;  <METHOD_END>
