<METHOD_START> @ Test public void void ( ) java.lang.Exception { ResponseEntity < java.lang.String > sample.web.ui.ResponseEntity<java.lang.String> = this . sample.web.ui.TestRestTemplate . getForEntity ( STRING , java.lang.String .class ) ; assertThat ( sample.web.ui.ResponseEntity<java.lang.String> . getStatusCode ( ) ) . isEqualTo ( HttpStatus . OK ) ; assertThat ( sample.web.ui.ResponseEntity<java.lang.String> . getBody ( ) ) . contains ( STRING ) ; assertThat ( sample.web.ui.ResponseEntity<java.lang.String> . getBody ( ) ) . doesNotContain ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MultiValueMap < java.lang.String , java.lang.String > sample.web.ui.MultiValueMap<java.lang.String,java.lang.String> = new LinkedMultiValueMap <> ( ) ; sample.web.ui.MultiValueMap<java.lang.String,java.lang.String> . set ( STRING , STRING ) ; sample.web.ui.MultiValueMap<java.lang.String,java.lang.String> . set ( STRING , STRING ) ; java.net.URI java.net.URI = this . sample.web.ui.TestRestTemplate . postForLocation ( STRING , sample.web.ui.MultiValueMap<java.lang.String,java.lang.String> ) ; assertThat ( java.net.URI . java.lang.String ( ) ) . contains ( STRING + this . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ResponseEntity < java.lang.String > sample.web.ui.ResponseEntity<java.lang.String> = this . sample.web.ui.TestRestTemplate . getForEntity ( STRING + this . int + STRING , java.lang.String .class ) ; assertThat ( sample.web.ui.ResponseEntity<java.lang.String> . getStatusCode ( ) ) . isEqualTo ( HttpStatus . OK ) ; assertThat ( sample.web.ui.ResponseEntity<java.lang.String> . getBody ( ) ) . contains ( STRING ) ; }  <METHOD_END>
