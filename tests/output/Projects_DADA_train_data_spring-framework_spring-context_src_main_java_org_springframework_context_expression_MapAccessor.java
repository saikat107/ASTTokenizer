<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( ) { return new java.lang.Class<?> < ? > [] { java.util.Map .class } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( EvaluationContext org.springframework.context.expression.EvaluationContext , java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.context.expression.AccessException { java.util.Map<?,?> < ? , ? > java.util.Map<?,?> = ( java.util.Map<?,?> < ? , ? > ) java.lang.Object ; return java.util.Map<,> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.expression.TypedValue org.springframework.context.expression.TypedValue ( EvaluationContext org.springframework.context.expression.EvaluationContext , java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.context.expression.AccessException { java.util.Map<?,?> < ? , ? > java.util.Map<?,?> = ( java.util.Map<?,?> < ? , ? > ) java.lang.Object ; java.lang.Object java.lang.Object = java.util.Map<,> . get ( java.lang.String ) ; if ( java.lang.Object == null && ! java.util.Map<,> . boolean ( java.lang.String ) ) { throw new org.springframework.context.expression.MapAccessor.MapAccessException ( java.lang.String ) ; } return new TypedValue ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( EvaluationContext org.springframework.context.expression.EvaluationContext , java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.context.expression.AccessException { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public void void ( EvaluationContext org.springframework.context.expression.EvaluationContext , java.lang.Object java.lang.Object , java.lang.String java.lang.String , java.lang.Object java.lang.Object ) throws org.springframework.context.expression.AccessException { java.util.Map<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > java.util.Map<java.lang.Object,java.lang.Object> = ( java.util.Map<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > ) java.lang.Object ; java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( null ); this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String + STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return java.lang.Object .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , MethodVisitor org.springframework.context.expression.MethodVisitor , CodeFlow org.springframework.context.expression.CodeFlow ) { java.lang.String java.lang.String = org.springframework.context.expression.CodeFlow . lastDescriptor ( ) ; if ( java.lang.String == null || ! java.lang.String . boolean ( STRING ) ) { if ( java.lang.String == null ) { org.springframework.context.expression.CodeFlow . loadTarget ( org.springframework.context.expression.MethodVisitor ) ; } CodeFlow . insertCheckCast ( org.springframework.context.expression.MethodVisitor , STRING ) ; } org.springframework.context.expression.MethodVisitor . visitLdcInsn ( java.lang.String ) ; org.springframework.context.expression.MethodVisitor . visitMethodInsn ( INVOKEINTERFACE , STRING , STRING , STRING , true ) ; }  <METHOD_END>
