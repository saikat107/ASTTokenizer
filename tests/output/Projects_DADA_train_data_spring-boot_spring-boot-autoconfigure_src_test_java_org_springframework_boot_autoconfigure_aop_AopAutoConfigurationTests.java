<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestConfiguration .class , STRING ) ; org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect = this . org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext . getBean ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect .class ) ; assertThat ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect . boolean ( ) ) . isFalse ( ) ; org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestBean org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestBean = this . org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext . getBean ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestBean .class ) ; org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestBean . void ( ) ; assertThat ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect . boolean ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestConfiguration .class ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestConfiguration .class , STRING ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestConfiguration .class , STRING ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.CustomTestConfiguration .class ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect = this . org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext . getBean ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect .class ) ; assertThat ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect . boolean ( ) ) . isFalse ( ) ; org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestBean org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestBean = this . org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext . getBean ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestBean .class ) ; org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestBean . void ( ) ; assertThat ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect . boolean ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect = this . org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext . getBean ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect .class ) ; assertThat ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect . boolean ( ) ) . isFalse ( ) ; org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestInterface org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestInterface = this . org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext . getBean ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestInterface .class ) ; org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestInterface . void ( ) ; assertThat ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect . boolean ( ) ) . isTrue ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext . getBeansOfType ( org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestBean .class ) ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String ... java.lang.String[] ) { AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext . register ( java.lang.Class<> ) ; EnvironmentTestUtils . addEnvironment ( org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext , java.lang.String[] ) ; org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext . register ( AopAutoConfiguration .class ) ; org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext . refresh ( ) ; this . org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.aop.AnnotationConfigApplicationContext ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect ( ) { return new org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestAspect ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestInterface org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestInterface ( ) { return new org.springframework.boot.autoconfigure.aop.AopAutoConfigurationTests.TestBean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ Before ( STRING ) public void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
