<METHOD_START> @ Before public void void ( ) java.lang.Exception { final MongoDbFactory org.springframework.integration.mongodb.metadata.MongoDbFactory = this . prepareMongoFactory ( java.lang.String ) ; this . org.springframework.integration.mongodb.metadata.MongoDbMetadataStore = new MongoDbMetadataStore ( org.springframework.integration.mongodb.metadata.MongoDbFactory ) ; }  <METHOD_END>
<METHOD_START> @ MongoDbAvailable @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; final MongoDbFactory org.springframework.integration.mongodb.metadata.MongoDbFactory = this . prepareMongoFactory ( java.lang.String ) ; final MongoTemplate org.springframework.integration.mongodb.metadata.MongoTemplate = new MongoTemplate ( org.springframework.integration.mongodb.metadata.MongoDbFactory ) ; org.springframework.integration.mongodb.metadata.MongoDbMetadataStore = new MongoDbMetadataStore ( org.springframework.integration.mongodb.metadata.MongoTemplate , java.lang.String ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ MongoDbAvailable @ Test public void void ( ) java.lang.Exception { final MongoDbFactory org.springframework.integration.mongodb.metadata.MongoDbFactory = this . prepareMongoFactory ( java.lang.String ) ; org.springframework.integration.mongodb.metadata.MongoDbMetadataStore = new MongoDbMetadataStore ( org.springframework.integration.mongodb.metadata.MongoDbFactory ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ MongoDbAvailable @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; final MongoDbFactory org.springframework.integration.mongodb.metadata.MongoDbFactory = this . prepareMongoFactory ( java.lang.String ) ; org.springframework.integration.mongodb.metadata.MongoDbMetadataStore = new MongoDbMetadataStore ( org.springframework.integration.mongodb.metadata.MongoDbFactory , java.lang.String ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { java.lang.String java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . get ( java.lang.String ) ; assertNull ( java.lang.String ) ; org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . put ( java.lang.String , java.lang.String ) ; java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . get ( java.lang.String ) ; assertNotNull ( java.lang.String ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test @ MongoDbAvailable public void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> @ Test @ MongoDbAvailable public void void ( ) java.lang.Exception { java.lang.String java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . get ( java.lang.String ) ; assertNull ( STRING , java.lang.String ) ; java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . putIfAbsent ( java.lang.String , java.lang.String ) ; assertNull ( STRING , java.lang.String ) ; java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . putIfAbsent ( java.lang.String , STRING ) ; assertNotNull ( STRING , java.lang.String ) ; assertEquals ( STRING , java.lang.String , java.lang.String ) ; assertEquals ( STRING , java.lang.String , org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . get ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ MongoDbAvailable public void void ( ) java.lang.Exception { java.lang.String java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . remove ( java.lang.String ) ; assertNull ( java.lang.String ) ; java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . putIfAbsent ( java.lang.String , java.lang.String ) ; assertNull ( java.lang.String ) ; java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . remove ( java.lang.String ) ; assertNotNull ( java.lang.String ) ; assertEquals ( java.lang.String , java.lang.String ) ; java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . get ( java.lang.String ) ; assertNull ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test @ MongoDbAvailable public void void ( ) java.lang.Exception { boolean boolean = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . replace ( java.lang.String , java.lang.String , STRING ) ; assertFalse ( boolean ) ; java.lang.String java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . get ( java.lang.String ) ; assertNull ( java.lang.String ) ; java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . putIfAbsent ( java.lang.String , java.lang.String ) ; assertNull ( java.lang.String ) ; boolean = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . replace ( java.lang.String , java.lang.String , STRING ) ; assertTrue ( boolean ) ; java.lang.String = org.springframework.integration.mongodb.metadata.MongoDbMetadataStore . get ( java.lang.String ) ; assertNotNull ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
