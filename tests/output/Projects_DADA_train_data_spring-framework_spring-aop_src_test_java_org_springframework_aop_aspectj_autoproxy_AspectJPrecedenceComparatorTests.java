<METHOD_START> @ Before public void void ( ) java.lang.Exception { this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator = new AspectJPrecedenceComparator ( ) ; this . java.lang.reflect.Method = java.lang.Class<? extends org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparatorTests> ( ) . java.lang.reflect.Method[] ( ) [ NUMBER ] ; this . org.springframework.aop.aspectj.autoproxy.AspectJExpressionPointcut = new AspectJExpressionPointcut ( ) ; this . org.springframework.aop.aspectj.autoproxy.AspectJExpressionPointcut . setExpression ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , - NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , - NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int ) ; Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , - NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , - NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , - NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , - NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; Advisor org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int ) ; org.springframework.aop.aspectj.autoproxy.Advisor = org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , STRING ) ; assertEquals ( STRING , NUMBER , this . org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator . compare ( org.springframework.aop.aspectj.autoproxy.Advisor , org.springframework.aop.aspectj.autoproxy.Advisor ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.aop.aspectj.autoproxy.Advisor org.springframework.aop.aspectj.autoproxy.Advisor ( int int , int int , java.lang.String java.lang.String ) { AspectJMethodBeforeAdvice org.springframework.aop.aspectj.autoproxy.AspectJMethodBeforeAdvice = new AspectJMethodBeforeAdvice ( this . java.lang.reflect.Method , this . org.springframework.aop.aspectj.autoproxy.AspectJExpressionPointcut , null ) ; return org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , java.lang.String , org.springframework.aop.aspectj.autoproxy.AspectJMethodBeforeAdvice ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.aop.aspectj.autoproxy.Advisor org.springframework.aop.aspectj.autoproxy.Advisor ( int int , int int , java.lang.String java.lang.String ) { AspectJAroundAdvice org.springframework.aop.aspectj.autoproxy.AspectJAroundAdvice = new AspectJAroundAdvice ( this . java.lang.reflect.Method , this . org.springframework.aop.aspectj.autoproxy.AspectJExpressionPointcut , null ) ; return org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , java.lang.String , org.springframework.aop.aspectj.autoproxy.AspectJAroundAdvice ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.aop.aspectj.autoproxy.Advisor org.springframework.aop.aspectj.autoproxy.Advisor ( int int , int int , java.lang.String java.lang.String ) { AspectJAfterAdvice org.springframework.aop.aspectj.autoproxy.AspectJAfterAdvice = new AspectJAfterAdvice ( this . java.lang.reflect.Method , this . org.springframework.aop.aspectj.autoproxy.AspectJExpressionPointcut , null ) ; return org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , java.lang.String , org.springframework.aop.aspectj.autoproxy.AspectJAfterAdvice ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.aop.aspectj.autoproxy.Advisor org.springframework.aop.aspectj.autoproxy.Advisor ( int int , int int , java.lang.String java.lang.String ) { AspectJAfterReturningAdvice org.springframework.aop.aspectj.autoproxy.AspectJAfterReturningAdvice = new AspectJAfterReturningAdvice ( this . java.lang.reflect.Method , this . org.springframework.aop.aspectj.autoproxy.AspectJExpressionPointcut , null ) ; return org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , java.lang.String , org.springframework.aop.aspectj.autoproxy.AspectJAfterReturningAdvice ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.aop.aspectj.autoproxy.Advisor org.springframework.aop.aspectj.autoproxy.Advisor ( int int , int int , java.lang.String java.lang.String ) { AspectJAfterThrowingAdvice org.springframework.aop.aspectj.autoproxy.AspectJAfterThrowingAdvice = new AspectJAfterThrowingAdvice ( this . java.lang.reflect.Method , this . org.springframework.aop.aspectj.autoproxy.AspectJExpressionPointcut , null ) ; return org.springframework.aop.aspectj.autoproxy.Advisor ( int , int , java.lang.String , org.springframework.aop.aspectj.autoproxy.AspectJAfterThrowingAdvice ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.aop.aspectj.autoproxy.Advisor org.springframework.aop.aspectj.autoproxy.Advisor ( int int , int int , java.lang.String java.lang.String , AbstractAspectJAdvice org.springframework.aop.aspectj.autoproxy.AbstractAspectJAdvice ) { org.springframework.aop.aspectj.autoproxy.AbstractAspectJAdvice . setDeclarationOrder ( int ) ; org.springframework.aop.aspectj.autoproxy.AbstractAspectJAdvice . setAspectName ( java.lang.String ) ; AspectJPointcutAdvisor org.springframework.aop.aspectj.autoproxy.AspectJPointcutAdvisor = new AspectJPointcutAdvisor ( org.springframework.aop.aspectj.autoproxy.AbstractAspectJAdvice ) ; org.springframework.aop.aspectj.autoproxy.AspectJPointcutAdvisor . setOrder ( int ) ; return org.springframework.aop.aspectj.autoproxy.AspectJPointcutAdvisor ; }  <METHOD_END>
<METHOD_START> private org.springframework.aop.aspectj.autoproxy.Advisor org.springframework.aop.aspectj.autoproxy.Advisor ( int int ) { AfterReturningAdvice org.springframework.aop.aspectj.autoproxy.AfterReturningAdvice = new AfterReturningAdvice ( ) { @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] , java.lang.Object java.lang.Object ) throws java.lang.Throwable {			} } ; DefaultPointcutAdvisor org.springframework.aop.aspectj.autoproxy.DefaultPointcutAdvisor = new DefaultPointcutAdvisor ( this . org.springframework.aop.aspectj.autoproxy.AspectJExpressionPointcut , org.springframework.aop.aspectj.autoproxy.AfterReturningAdvice ) ; org.springframework.aop.aspectj.autoproxy.DefaultPointcutAdvisor . setOrder ( int ) ; return org.springframework.aop.aspectj.autoproxy.DefaultPointcutAdvisor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] , java.lang.Object java.lang.Object ) throws java.lang.Throwable {			}  <METHOD_END>
<METHOD_START> private org.springframework.aop.aspectj.autoproxy.Advisor org.springframework.aop.aspectj.autoproxy.Advisor ( int int ) { BeforeAdvice org.springframework.aop.aspectj.autoproxy.BeforeAdvice = new BeforeAdvice ( ) {		} ; DefaultPointcutAdvisor org.springframework.aop.aspectj.autoproxy.DefaultPointcutAdvisor = new DefaultPointcutAdvisor ( this . org.springframework.aop.aspectj.autoproxy.AspectJExpressionPointcut , org.springframework.aop.aspectj.autoproxy.BeforeAdvice ) ; org.springframework.aop.aspectj.autoproxy.DefaultPointcutAdvisor . setOrder ( int ) ; return org.springframework.aop.aspectj.autoproxy.DefaultPointcutAdvisor ; }  <METHOD_END>
