<METHOD_START> public void ( FacetAndHighlightQuery org.springframework.data.solr.core.query.FacetAndHighlightQuery ) { super( org.springframework.data.solr.core.query.FacetAndHighlightQuery ); this . org.springframework.data.solr.core.query.FacetAndHighlightQuery = org.springframework.data.solr.core.query.FacetAndHighlightQuery ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.SolrDataQuery > T T ( HighlightOptions org.springframework.data.solr.core.query.HighlightOptions ) { return org.springframework.data.solr.core.query.FacetAndHighlightQuery . setHighlightOptions ( org.springframework.data.solr.core.query.HighlightOptions ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.HighlightOptions org.springframework.data.solr.core.query.HighlightOptions ( ) { return org.springframework.data.solr.core.query.FacetAndHighlightQuery . getHighlightOptions ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.solr.core.query.FacetAndHighlightQuery . hasHighlightOptions ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.SolrDataQuery > T T ( FacetOptions org.springframework.data.solr.core.query.FacetOptions ) { return org.springframework.data.solr.core.query.FacetAndHighlightQuery . setFacetOptions ( org.springframework.data.solr.core.query.FacetOptions ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.FacetOptions org.springframework.data.solr.core.query.FacetOptions ( ) { return org.springframework.data.solr.core.query.FacetAndHighlightQuery . getFacetOptions ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.solr.core.query.FacetAndHighlightQuery . hasFacetOptions ( ) ; }  <METHOD_END>
