<METHOD_START> @ java.lang.Override @ Before public void void ( ) java.lang.Exception { super. setup ( ) ; this . org.springframework.web.reactive.result.method.annotation.WebClient = WebClient . create ( STRING + this . port ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.reactive.result.method.annotation.HttpHandler org.springframework.web.reactive.result.method.annotation.HttpHandler ( ) { this . org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext . register ( org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.TestConfiguration .class ) ; this . org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext . refresh ( ) ; return WebHttpHandlerBuilder . webHandler ( new DispatcherHandler ( this . org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Flux < org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person > org.springframework.web.reactive.result.method.annotation.Flux<org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person> = this . org.springframework.web.reactive.result.method.annotation.WebClient . get ( ) . uri ( STRING ) . accept ( APPLICATION_STREAM_JSON ) . exchange ( ) . flatMap ( response -> response . bodyToFlux ( Person .class ) ) ; StepVerifier . create ( org.springframework.web.reactive.result.method.annotation.Flux<org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person> ) . expectNext ( new org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person ( STRING ) ) . expectNext ( new org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person ( STRING ) ) . thenCancel ( ) . verify ( ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( value = STRING , produces = APPLICATION_STREAM_JSON_VALUE ) org.springframework.web.reactive.result.method.annotation.Flux<org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person> < org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person > org.springframework.web.reactive.result.method.annotation.Flux<org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person> ( ) { return Flux . interval ( java.time.Duration . java.time.Duration ( NUMBER ) ) . map ( l -> new Person ( STRING + l ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.JsonStreamingController org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.JsonStreamingController ( ) { return new org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.JsonStreamingController ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null || java.lang.Class<? extends org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) { return false ; } org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person = ( org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person ) java.lang.Object ; return ! ( this . java.lang.String != null ? ! this . java.lang.String . boolean ( org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person . java.lang.String ) : org.springframework.web.reactive.result.method.annotation.JsonStreamingIntegrationTests.Person . java.lang.String != null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.lang.String != null ? this . java.lang.String . int ( ) : NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + java.lang.String + '\'' + '}' ; }  <METHOD_END>
