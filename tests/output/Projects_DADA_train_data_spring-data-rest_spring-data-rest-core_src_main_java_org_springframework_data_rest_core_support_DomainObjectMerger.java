<METHOD_START> @ Autowired public void ( Repositories org.springframework.data.rest.core.support.Repositories , ConversionService org.springframework.data.rest.core.support.ConversionService ) { Assert . notNull ( org.springframework.data.rest.core.support.Repositories , STRING ) ; Assert . notNull ( org.springframework.data.rest.core.support.ConversionService , STRING ) ; this . org.springframework.data.rest.core.support.Repositories = org.springframework.data.rest.core.support.Repositories ; this . org.springframework.data.rest.core.support.ConversionService = org.springframework.data.rest.core.support.ConversionService ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object , final org.springframework.data.rest.core.support.DomainObjectMerger.NullHandlingPolicy org.springframework.data.rest.core.support.DomainObjectMerger.NullHandlingPolicy ) { if ( java.lang.Object == null || java.lang.Object == null ) { return; } final PersistentEntity < ? , ? > org.springframework.data.rest.core.support.PersistentEntity<?,?> = org.springframework.data.rest.core.support.Repositories . getPersistentEntity ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; final PersistentPropertyAccessor org.springframework.data.rest.core.support.PersistentPropertyAccessor = new ConvertingPropertyAccessor ( org.springframework.data.rest.core.support.PersistentEntity<,> . getPropertyAccessor ( java.lang.Object ) , org.springframework.data.rest.core.support.ConversionService ) ; final PersistentEntity < ? , ? > org.springframework.data.rest.core.support.PersistentEntity<?,?> = org.springframework.data.rest.core.support.Repositories . getPersistentEntity ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; final PersistentPropertyAccessor org.springframework.data.rest.core.support.PersistentPropertyAccessor = new ConvertingPropertyAccessor ( org.springframework.data.rest.core.support.PersistentEntity<,> . getPropertyAccessor ( java.lang.Object ) , org.springframework.data.rest.core.support.ConversionService ) ; org.springframework.data.rest.core.support.PersistentEntity<,> . doWithProperties ( new SimplePropertyHandler ( ) { @ java.lang.Override public void void ( PersistentProperty < ? > org.springframework.data.rest.core.support.PersistentProperty<?> ) { java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> = org.springframework.data.rest.core.support.PersistentPropertyAccessor . getProperty ( org.springframework.data.rest.core.support.PersistentProperty<> ) ; java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> = org.springframework.data.rest.core.support.PersistentPropertyAccessor . getProperty ( org.springframework.data.rest.core.support.PersistentProperty<> ) ; if ( org.springframework.data.rest.core.support.PersistentEntity<,> . isIdProperty ( org.springframework.data.rest.core.support.PersistentProperty<> ) ) { return; } if ( java.util.Optional<java.lang.Object> . boolean ( java.util.Optional<java.lang.Object> ) ) { return; } if ( org.springframework.data.rest.core.support.DomainObjectMerger.NullHandlingPolicy == org.springframework.data.rest.core.support.DomainObjectMerger.NullHandlingPolicy || java.util.Optional<java.lang.Object> . boolean ( ) ) { org.springframework.data.rest.core.support.PersistentPropertyAccessor . setProperty ( org.springframework.data.rest.core.support.PersistentProperty<> , java.util.Optional<java.lang.Object> ) ; } } } ) ; org.springframework.data.rest.core.support.PersistentEntity<,> . doWithAssociations ( new SimpleAssociationHandler ( ) { @ java.lang.Override public void void ( Association < ? extends PersistentProperty < ? > > org.springframework.data.rest.core.support.Association<? extends org.springframework.data.rest.core.support.PersistentProperty<?>> ) { PersistentProperty < ? > org.springframework.data.rest.core.support.PersistentProperty<?> = org.springframework.data.rest.core.support.Association<> . getInverse ( ) ; java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> = org.springframework.data.rest.core.support.PersistentPropertyAccessor . getProperty ( org.springframework.data.rest.core.support.PersistentProperty<> ) ; if ( ! boolean ( java.util.Optional<java.lang.Object> ) && ! java.util.Optional<java.lang.Object> . boolean ( org.springframework.data.rest.core.support.PersistentPropertyAccessor . getProperty ( org.springframework.data.rest.core.support.PersistentProperty<> ) ) ) { org.springframework.data.rest.core.support.PersistentPropertyAccessor . setProperty ( org.springframework.data.rest.core.support.PersistentProperty<> , java.util.Optional<java.lang.Object> ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( PersistentProperty < ? > org.springframework.data.rest.core.support.PersistentProperty<?> ) { java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> = org.springframework.data.rest.core.support.PersistentPropertyAccessor . getProperty ( org.springframework.data.rest.core.support.PersistentProperty<> ) ; java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> = org.springframework.data.rest.core.support.PersistentPropertyAccessor . getProperty ( org.springframework.data.rest.core.support.PersistentProperty<> ) ; if ( org.springframework.data.rest.core.support.PersistentEntity<,> . isIdProperty ( org.springframework.data.rest.core.support.PersistentProperty<> ) ) { return; } if ( java.util.Optional<java.lang.Object> . boolean ( java.util.Optional<java.lang.Object> ) ) { return; } if ( org.springframework.data.rest.core.support.DomainObjectMerger.NullHandlingPolicy == org.springframework.data.rest.core.support.DomainObjectMerger.NullHandlingPolicy || java.util.Optional<java.lang.Object> . boolean ( ) ) { org.springframework.data.rest.core.support.PersistentPropertyAccessor . setProperty ( org.springframework.data.rest.core.support.PersistentProperty<> , java.util.Optional<java.lang.Object> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Association < ? extends PersistentProperty < ? > > org.springframework.data.rest.core.support.Association<? extends org.springframework.data.rest.core.support.PersistentProperty<?>> ) { PersistentProperty < ? > org.springframework.data.rest.core.support.PersistentProperty<?> = org.springframework.data.rest.core.support.Association<> . getInverse ( ) ; java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> = org.springframework.data.rest.core.support.PersistentPropertyAccessor . getProperty ( org.springframework.data.rest.core.support.PersistentProperty<> ) ; if ( ! boolean ( java.util.Optional<java.lang.Object> ) && ! java.util.Optional<java.lang.Object> . boolean ( org.springframework.data.rest.core.support.PersistentPropertyAccessor . getProperty ( org.springframework.data.rest.core.support.PersistentProperty<> ) ) ) { org.springframework.data.rest.core.support.PersistentPropertyAccessor . setProperty ( org.springframework.data.rest.core.support.PersistentProperty<> , java.util.Optional<java.lang.Object> ) ; } }  <METHOD_END>
<METHOD_START> static boolean boolean ( java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> ) { return java.util.Optional<java.lang.Object> . java.util.Optional<java.lang.Object> ( java.lang.Object -> { if ( java.lang.Object instanceof java.lang.Iterable ) { return ! ( ( java.lang.Iterable<?> < ? > ) java.lang.Object ) . java.util.Iterator<> ( ) . boolean ( ) ; } if ( ObjectUtils . isArray ( java.lang.Object ) ) { return ObjectUtils . isEmpty ( ( java.lang.Object [] ) java.lang.Object ) ; } return false ; } ) . orElse ( true ) ; }  <METHOD_END>
