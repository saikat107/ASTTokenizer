<METHOD_START> @ java.lang.Override public org.springframework.boot.test.autoconfigure.filter.ContextCustomizer org.springframework.boot.test.autoconfigure.filter.ContextCustomizer ( java.lang.Class<?> < ? > java.lang.Class<?> , java.util.List<org.springframework.boot.test.autoconfigure.filter.ContextConfigurationAttributes> < ContextConfigurationAttributes > java.util.List<org.springframework.boot.test.autoconfigure.filter.ContextConfigurationAttributes> ) { TypeExcludeFilters org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters = AnnotatedElementUtils . findMergedAnnotation ( java.lang.Class<> , TypeExcludeFilters .class ) ; if ( org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters != null ) { java.util.Set<java.lang.Class<? extends org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilter>> < java.lang.Class<? extends org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilter> < ? extends TypeExcludeFilter > > java.util.Set<java.lang.Class<? extends org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilter>> = new java.util.LinkedHashSet <> ( java.util.Arrays . java.util.List ( org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters . value ( ) ) ) ; return new TypeExcludeFiltersContextCustomizer ( java.lang.Class<> , java.util.Set<java.lang.Class<? extends org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilter>> ) ; } return null ; }  <METHOD_END>
