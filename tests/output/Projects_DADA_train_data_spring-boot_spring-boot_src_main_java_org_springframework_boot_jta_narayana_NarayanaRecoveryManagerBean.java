<METHOD_START> public void ( RecoveryManagerService org.springframework.boot.jta.narayana.RecoveryManagerService ) { Assert . notNull ( org.springframework.boot.jta.narayana.RecoveryManagerService , STRING ) ; this . org.springframework.boot.jta.narayana.RecoveryManagerService = org.springframework.boot.jta.narayana.RecoveryManagerService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { this . org.springframework.boot.jta.narayana.RecoveryManagerService . create ( ) ; this . org.springframework.boot.jta.narayana.RecoveryManagerService . start ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { this . org.springframework.boot.jta.narayana.RecoveryManagerService . stop ( ) ; this . org.springframework.boot.jta.narayana.RecoveryManagerService . destroy ( ) ; }  <METHOD_END>
<METHOD_START> void void ( XAResourceRecoveryHelper org.springframework.boot.jta.narayana.XAResourceRecoveryHelper ) { org.springframework.boot.jta.narayana.XARecoveryModule ( RecoveryManager . manager ( ) ) . addXAResourceRecoveryHelper ( org.springframework.boot.jta.narayana.XAResourceRecoveryHelper ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.jta.narayana.XARecoveryModule org.springframework.boot.jta.narayana.XARecoveryModule ( RecoveryManager org.springframework.boot.jta.narayana.RecoveryManager ) { for ( RecoveryModule org.springframework.boot.jta.narayana.RecoveryModule : org.springframework.boot.jta.narayana.RecoveryManager . getModules ( ) ) { if ( org.springframework.boot.jta.narayana.RecoveryModule instanceof XARecoveryModule ) { return ( XARecoveryModule ) org.springframework.boot.jta.narayana.RecoveryModule ; } } throw new java.lang.IllegalStateException ( STRING ) ; }  <METHOD_END>
