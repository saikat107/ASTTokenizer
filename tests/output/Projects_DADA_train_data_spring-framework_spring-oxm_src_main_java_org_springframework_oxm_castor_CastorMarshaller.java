<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( Resource org.springframework.oxm.castor.Resource ) { this . org.springframework.oxm.castor.Resource[] = new Resource [] { org.springframework.oxm.castor.Resource } ; }  <METHOD_END>
<METHOD_START> public void void ( Resource ... org.springframework.oxm.castor.Resource[] ) { this . org.springframework.oxm.castor.Resource[] = org.springframework.oxm.castor.Resource[] ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . java.lang.Class<?>[] = new java.lang.Class<?> < ? > [] { java.lang.Class<> } ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) { this . java.lang.Class<?>[] = java.lang.Class<?>[] ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String[] = new java.lang.String [] { java.lang.String } ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { this . java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { this . java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { this . java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { this . java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { this . java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( org.xml.sax.EntityResolver org.xml.sax.EntityResolver ) { this . org.xml.sax.EntityResolver = org.xml.sax.EntityResolver ; }  <METHOD_END>
<METHOD_START> public void void ( XMLClassDescriptorResolver org.springframework.oxm.castor.XMLClassDescriptorResolver ) { this . org.springframework.oxm.castor.XMLClassDescriptorResolver = org.springframework.oxm.castor.XMLClassDescriptorResolver ; }  <METHOD_END>
<METHOD_START> public void void ( IDResolver org.springframework.oxm.castor.IDResolver ) { this . org.springframework.oxm.castor.IDResolver = org.springframework.oxm.castor.IDResolver ; }  <METHOD_END>
<METHOD_START> public void void ( ObjectFactory org.springframework.oxm.castor.ObjectFactory ) { this . org.springframework.oxm.castor.ObjectFactory = org.springframework.oxm.castor.ObjectFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.oxm.castor.CastorMappingException , java.io.IOException { try { this . org.springframework.oxm.castor.XMLContext = org.springframework.oxm.castor.XMLContext ( this . org.springframework.oxm.castor.Resource[] , this . java.lang.Class<?>[] , this . java.lang.String[] ) ; } catch ( MappingException org.springframework.oxm.castor.MappingException ) { throw new CastorMappingException ( STRING , org.springframework.oxm.castor.MappingException ) ; } catch ( ResolverException org.springframework.oxm.castor.ResolverException ) { throw new CastorMappingException ( STRING , org.springframework.oxm.castor.ResolverException ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.oxm.castor.XMLContext org.springframework.oxm.castor.XMLContext ( Resource [] org.springframework.oxm.castor.Resource[] , java.lang.Class<?> < ? > [] java.lang.Class<?>[] , java.lang.String [] java.lang.String[] ) throws org.springframework.oxm.castor.MappingException , org.springframework.oxm.castor.ResolverException , java.io.IOException { XMLContext org.springframework.oxm.castor.XMLContext = new XMLContext ( ) ; if ( ! ObjectUtils . isEmpty ( org.springframework.oxm.castor.Resource[] ) ) { Mapping org.springframework.oxm.castor.Mapping = new Mapping ( ) ; for ( Resource org.springframework.oxm.castor.Resource : org.springframework.oxm.castor.Resource[] ) { org.springframework.oxm.castor.Mapping . loadMapping ( SaxResourceUtils . createInputSource ( org.springframework.oxm.castor.Resource ) ) ; } org.springframework.oxm.castor.XMLContext . addMapping ( org.springframework.oxm.castor.Mapping ) ; } if ( ! ObjectUtils . isEmpty ( java.lang.Class<?>[] ) ) { org.springframework.oxm.castor.XMLContext . addClasses ( java.lang.Class<?>[] ) ; } if ( ! ObjectUtils . isEmpty ( java.lang.String[] ) ) { org.springframework.oxm.castor.XMLContext . addPackages ( java.lang.String[] ) ; } if ( this . java.util.Map<java.lang.String,java.lang.String> != null ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : this . java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { org.springframework.oxm.castor.XMLContext . setProperty ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } } return org.springframework.oxm.castor.XMLContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object , org.w3c.dom.Node org.w3c.dom.Node ) throws org.springframework.oxm.castor.XmlMappingException { void ( java.lang.Object , DomUtils . createContentHandler ( org.w3c.dom.Node ) , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object , javax.xml.stream.XMLEventWriter javax.xml.stream.XMLEventWriter ) throws org.springframework.oxm.castor.XmlMappingException { org.xml.sax.ContentHandler org.xml.sax.ContentHandler = StaxUtils . createContentHandler ( javax.xml.stream.XMLEventWriter ) ; org.xml.sax.ext.LexicalHandler org.xml.sax.ext.LexicalHandler = null ; if ( org.xml.sax.ContentHandler instanceof org.xml.sax.ext.LexicalHandler ) { org.xml.sax.ext.LexicalHandler = ( org.xml.sax.ext.LexicalHandler ) org.xml.sax.ContentHandler ; } void ( java.lang.Object , org.xml.sax.ContentHandler , org.xml.sax.ext.LexicalHandler ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object , javax.xml.stream.XMLStreamWriter javax.xml.stream.XMLStreamWriter ) throws org.springframework.oxm.castor.XmlMappingException { org.xml.sax.ContentHandler org.xml.sax.ContentHandler = StaxUtils . createContentHandler ( javax.xml.stream.XMLStreamWriter ) ; org.xml.sax.ext.LexicalHandler org.xml.sax.ext.LexicalHandler = null ; if ( org.xml.sax.ContentHandler instanceof org.xml.sax.ext.LexicalHandler ) { org.xml.sax.ext.LexicalHandler = ( org.xml.sax.ext.LexicalHandler ) org.xml.sax.ContentHandler ; } void ( java.lang.Object , StaxUtils . createContentHandler ( javax.xml.stream.XMLStreamWriter ) , org.xml.sax.ext.LexicalHandler ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object , org.xml.sax.ContentHandler org.xml.sax.ContentHandler , org.xml.sax.ext.LexicalHandler org.xml.sax.ext.LexicalHandler )			throws org.springframework.oxm.castor.XmlMappingException { Marshaller org.springframework.oxm.castor.Marshaller = org.springframework.oxm.castor.XMLContext . createMarshaller ( ) ; org.springframework.oxm.castor.Marshaller . setContentHandler ( org.xml.sax.ContentHandler ) ; void ( java.lang.Object , org.springframework.oxm.castor.Marshaller ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object , java.io.OutputStream java.io.OutputStream ) throws org.springframework.oxm.castor.XmlMappingException , java.io.IOException { void ( java.lang.Object , new java.io.OutputStreamWriter ( java.io.OutputStream , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object , java.io.Writer java.io.Writer ) throws org.springframework.oxm.castor.XmlMappingException , java.io.IOException { Marshaller org.springframework.oxm.castor.Marshaller = org.springframework.oxm.castor.XMLContext . createMarshaller ( ) ; org.springframework.oxm.castor.Marshaller . setWriter ( java.io.Writer ) ; void ( java.lang.Object , org.springframework.oxm.castor.Marshaller ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Object java.lang.Object , Marshaller org.springframework.oxm.castor.Marshaller ) { try { void ( org.springframework.oxm.castor.Marshaller ) ; org.springframework.oxm.castor.Marshaller . marshal ( java.lang.Object ) ; } catch ( XMLException org.springframework.oxm.castor.XMLException ) { throw org.springframework.oxm.castor.XmlMappingException ( org.springframework.oxm.castor.XMLException , true ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( Marshaller org.springframework.oxm.castor.Marshaller ) { org.springframework.oxm.castor.Marshaller . setValidation ( this . boolean ) ; org.springframework.oxm.castor.Marshaller . setSuppressNamespaces ( this . boolean ) ; org.springframework.oxm.castor.Marshaller . setSuppressXSIType ( this . boolean ) ; org.springframework.oxm.castor.Marshaller . setMarshalAsDocument ( this . boolean ) ; org.springframework.oxm.castor.Marshaller . setMarshalExtendedType ( this . boolean ) ; org.springframework.oxm.castor.Marshaller . setRootElement ( this . java.lang.String ) ; org.springframework.oxm.castor.Marshaller . setNoNamespaceSchemaLocation ( this . java.lang.String ) ; org.springframework.oxm.castor.Marshaller . setSchemaLocation ( this . java.lang.String ) ; org.springframework.oxm.castor.Marshaller . setUseXSITypeAtRoot ( this . boolean ) ; if ( this . java.util.Map<java.lang.String,java.lang.String> != null ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : this . java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { org.springframework.oxm.castor.Marshaller . setDoctype ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } } if ( this . java.util.Map<java.lang.String,java.lang.String> != null ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : this . java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { org.springframework.oxm.castor.Marshaller . addProcessingInstruction ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } } if ( this . java.util.Map<java.lang.String,java.lang.String> != null ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : this . java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { org.springframework.oxm.castor.Marshaller . setNamespaceMapping ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( org.w3c.dom.Node org.w3c.dom.Node ) throws org.springframework.oxm.castor.XmlMappingException { try { return org.springframework.oxm.castor.Unmarshaller ( ) . unmarshal ( org.w3c.dom.Node ) ; } catch ( XMLException org.springframework.oxm.castor.XMLException ) { throw org.springframework.oxm.castor.XmlMappingException ( org.springframework.oxm.castor.XMLException , false ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( javax.xml.stream.XMLEventReader javax.xml.stream.XMLEventReader ) { try { return org.springframework.oxm.castor.Unmarshaller ( ) . unmarshal ( javax.xml.stream.XMLEventReader ) ; } catch ( XMLException org.springframework.oxm.castor.XMLException ) { throw org.springframework.oxm.castor.XmlMappingException ( org.springframework.oxm.castor.XMLException , false ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( javax.xml.stream.XMLStreamReader javax.xml.stream.XMLStreamReader ) { try { return org.springframework.oxm.castor.Unmarshaller ( ) . unmarshal ( javax.xml.stream.XMLStreamReader ) ; } catch ( XMLException org.springframework.oxm.castor.XMLException ) { throw org.springframework.oxm.castor.XmlMappingException ( org.springframework.oxm.castor.XMLException , false ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( org.xml.sax.XMLReader org.xml.sax.XMLReader , org.xml.sax.InputSource org.xml.sax.InputSource )			throws org.springframework.oxm.castor.XmlMappingException , java.io.IOException { UnmarshalHandler org.springframework.oxm.castor.UnmarshalHandler = org.springframework.oxm.castor.Unmarshaller ( ) . createHandler ( ) ; try { org.xml.sax.ContentHandler org.xml.sax.ContentHandler = Unmarshaller . getContentHandler ( org.springframework.oxm.castor.UnmarshalHandler ) ; org.xml.sax.XMLReader . void ( org.xml.sax.ContentHandler ) ; org.xml.sax.XMLReader . void ( org.xml.sax.InputSource ) ; return org.springframework.oxm.castor.UnmarshalHandler . getObject ( ) ; } catch ( org.xml.sax.SAXException org.xml.sax.SAXException ) { throw new UnmarshallingFailureException ( STRING , org.xml.sax.SAXException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.io.InputStream java.io.InputStream ) throws org.springframework.oxm.castor.XmlMappingException , java.io.IOException { try { return org.springframework.oxm.castor.Unmarshaller ( ) . unmarshal ( new org.xml.sax.InputSource ( java.io.InputStream ) ) ; } catch ( XMLException org.springframework.oxm.castor.XMLException ) { throw org.springframework.oxm.castor.XmlMappingException ( org.springframework.oxm.castor.XMLException , false ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.io.Reader java.io.Reader ) throws org.springframework.oxm.castor.XmlMappingException , java.io.IOException { try { return org.springframework.oxm.castor.Unmarshaller ( ) . unmarshal ( new org.xml.sax.InputSource ( java.io.Reader ) ) ; } catch ( XMLException org.springframework.oxm.castor.XMLException ) { throw org.springframework.oxm.castor.XmlMappingException ( org.springframework.oxm.castor.XMLException , false ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.oxm.castor.Unmarshaller org.springframework.oxm.castor.Unmarshaller ( ) { Unmarshaller org.springframework.oxm.castor.Unmarshaller = this . org.springframework.oxm.castor.XMLContext . createUnmarshaller ( ) ; void ( org.springframework.oxm.castor.Unmarshaller ) ; return org.springframework.oxm.castor.Unmarshaller ; }  <METHOD_END>
<METHOD_START> protected void void ( Unmarshaller org.springframework.oxm.castor.Unmarshaller ) { org.springframework.oxm.castor.Unmarshaller . setValidation ( this . boolean ) ; org.springframework.oxm.castor.Unmarshaller . setWhitespacePreserve ( this . boolean ) ; org.springframework.oxm.castor.Unmarshaller . setIgnoreExtraAttributes ( this . boolean ) ; org.springframework.oxm.castor.Unmarshaller . setIgnoreExtraElements ( this . boolean ) ; org.springframework.oxm.castor.Unmarshaller . setObject ( this . java.lang.Object ) ; org.springframework.oxm.castor.Unmarshaller . setReuseObjects ( this . boolean ) ; org.springframework.oxm.castor.Unmarshaller . setClearCollections ( this . boolean ) ; if ( this . java.util.Map<java.lang.String,java.lang.String> != null ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : this . java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { org.springframework.oxm.castor.Unmarshaller . addNamespaceToPackageMapping ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } } if ( this . org.xml.sax.EntityResolver != null ) { org.springframework.oxm.castor.Unmarshaller . setEntityResolver ( this . org.xml.sax.EntityResolver ) ; } if ( this . org.springframework.oxm.castor.XMLClassDescriptorResolver != null ) { org.springframework.oxm.castor.Unmarshaller . setResolver ( this . org.springframework.oxm.castor.XMLClassDescriptorResolver ) ; } if ( this . org.springframework.oxm.castor.IDResolver != null ) { org.springframework.oxm.castor.Unmarshaller . setIDResolver ( this . org.springframework.oxm.castor.IDResolver ) ; } if ( this . org.springframework.oxm.castor.ObjectFactory != null ) { org.springframework.oxm.castor.Unmarshaller . setObjectFactory ( this . org.springframework.oxm.castor.ObjectFactory ) ; } if ( this . java.lang.ClassLoader != null ) { org.springframework.oxm.castor.Unmarshaller . setClassLoader ( this . java.lang.ClassLoader ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.oxm.castor.XmlMappingException org.springframework.oxm.castor.XmlMappingException ( XMLException org.springframework.oxm.castor.XMLException , boolean boolean ) { if ( org.springframework.oxm.castor.XMLException instanceof ValidationException ) { return new ValidationFailureException ( STRING , org.springframework.oxm.castor.XMLException ) ; } else if ( org.springframework.oxm.castor.XMLException instanceof MarshalException ) { if ( boolean ) { return new MarshallingFailureException ( STRING , org.springframework.oxm.castor.XMLException ) ; } else { return new UnmarshallingFailureException ( STRING , org.springframework.oxm.castor.XMLException ) ; } } else { return new UncategorizedMappingException ( STRING , org.springframework.oxm.castor.XMLException ) ; } }  <METHOD_END>
