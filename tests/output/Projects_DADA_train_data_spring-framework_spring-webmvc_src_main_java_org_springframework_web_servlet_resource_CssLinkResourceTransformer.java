<METHOD_START> public void ( ) { this . java.util.List<org.springframework.web.servlet.resource.CssLinkResourceTransformer.LinkParser> . boolean ( new org.springframework.web.servlet.resource.CssLinkResourceTransformer.ImportStatementLinkParser ( ) ) ; this . java.util.List<org.springframework.web.servlet.resource.CssLinkResourceTransformer.LinkParser> . boolean ( new org.springframework.web.servlet.resource.CssLinkResourceTransformer.UrlFunctionLinkParser ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.resource.Resource org.springframework.web.servlet.resource.Resource ( HttpServletRequest org.springframework.web.servlet.resource.HttpServletRequest , Resource org.springframework.web.servlet.resource.Resource , ResourceTransformerChain org.springframework.web.servlet.resource.ResourceTransformerChain )			throws java.io.IOException { org.springframework.web.servlet.resource.Resource = org.springframework.web.servlet.resource.ResourceTransformerChain . transform ( org.springframework.web.servlet.resource.HttpServletRequest , org.springframework.web.servlet.resource.Resource ) ; java.lang.String java.lang.String = org.springframework.web.servlet.resource.Resource . getFilename ( ) ; if ( ! STRING . boolean ( StringUtils . getFilenameExtension ( java.lang.String ) ) || org.springframework.web.servlet.resource.Resource instanceof GzipResourceResolver . GzipResourceResolver ) { return org.springframework.web.servlet.resource.Resource ; } if ( org.springframework.web.servlet.resource.Log . isTraceEnabled ( ) ) { org.springframework.web.servlet.resource.Log . trace ( STRING + org.springframework.web.servlet.resource.Resource ) ; } byte [] byte[] = FileCopyUtils . copyToByteArray ( org.springframework.web.servlet.resource.Resource . getInputStream ( ) ) ; java.lang.String java.lang.String = new java.lang.String ( byte[] , java.nio.charset.Charset ) ; java.util.List<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> < org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment > java.util.List<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> = new java.util.ArrayList<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> <> ( NUMBER ) ; for ( org.springframework.web.servlet.resource.CssLinkResourceTransformer.LinkParser org.springframework.web.servlet.resource.CssLinkResourceTransformer.LinkParser : this . java.util.List<org.springframework.web.servlet.resource.CssLinkResourceTransformer.LinkParser> ) { java.util.List<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> . boolean ( org.springframework.web.servlet.resource.CssLinkResourceTransformer.LinkParser . java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ( java.lang.String ) ) ; } if ( java.util.List<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> . boolean ( ) ) { if ( org.springframework.web.servlet.resource.Log . isTraceEnabled ( ) ) { org.springframework.web.servlet.resource.Log . trace ( STRING ) ; } return org.springframework.web.servlet.resource.Resource ; } java.util.Collections . void ( java.util.List<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ) ; int int = NUMBER ; java.io.StringWriter java.io.StringWriter = new java.io.StringWriter ( ) ; for ( org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment : java.util.List<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ) { java.io.StringWriter . void ( java.lang.String . java.lang.String ( int , org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment . int ( ) ) ) ; java.lang.String java.lang.String = java.lang.String . java.lang.String ( org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment . int ( ) , org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment . int ( ) ) ; java.lang.String java.lang.String = null ; if ( ! boolean ( java.lang.String ) ) { java.lang.String = resolveUrlPath ( toAbsolutePath ( java.lang.String , org.springframework.web.servlet.resource.HttpServletRequest ) , org.springframework.web.servlet.resource.HttpServletRequest , org.springframework.web.servlet.resource.Resource , org.springframework.web.servlet.resource.ResourceTransformerChain ) ; } if ( org.springframework.web.servlet.resource.Log . isTraceEnabled ( ) ) { if ( java.lang.String != null && ! java.lang.String . boolean ( java.lang.String ) ) { org.springframework.web.servlet.resource.Log . trace ( STRING + java.lang.String + STRING + java.lang.String + STRING ) ; } else { org.springframework.web.servlet.resource.Log . trace ( STRING + java.lang.String ) ; } } java.io.StringWriter . void ( java.lang.String != null ? java.lang.String : java.lang.String ) ; int = org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment . int ( ) ; } java.io.StringWriter . void ( java.lang.String . java.lang.String ( int ) ) ; return new TransformedResource ( org.springframework.web.servlet.resource.Resource , java.io.StringWriter . java.lang.String ( ) . byte[] ( java.nio.charset.Charset ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.String java.lang.String ) { int int = java.lang.String . int ( STRING ) ; return ( int > NUMBER && ! java.lang.String . java.lang.String ( NUMBER , int ) . boolean ( STRING ) ) || java.lang.String . int ( STRING ) == NUMBER ; }  <METHOD_END>
<METHOD_START> java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> < org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment > java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> protected abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> < org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment > java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ( java.lang.String java.lang.String ) { java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> < org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment > java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> = new java.util.HashSet<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> <> ( NUMBER ) ; int int = NUMBER ; do { int = java.lang.String . int ( java.lang.String ( ) , int ) ; if ( int == - NUMBER ) { break; } int = int ( java.lang.String , int + java.lang.String ( ) . int ( ) ) ; if ( java.lang.String . char ( int ) == '\'' ) { int = int ( int , STRING , java.lang.String , java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ) ; } else if ( java.lang.String . char ( int ) == '"' ) { int = int ( int , STRING , java.lang.String , java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ) ; } else { int = int ( int , java.lang.String , java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ) ; } } while ( true ); return java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ; }  <METHOD_END>
<METHOD_START> private int int ( java.lang.String java.lang.String , int int ) { while ( true ) { if ( java.lang.Character . boolean ( java.lang.String . char ( int ) ) ) { int ++ ; continue; } return int ; } }  <METHOD_END>
<METHOD_START> protected int int ( int int , java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> < org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment > java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ) { int int = int + NUMBER ; int int = java.lang.String . int ( java.lang.String , int ) ; java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> . boolean ( new org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment ( int , int ) ) ; return int + java.lang.String . int ( ) ; }  <METHOD_END>
<METHOD_START> protected abstract int int ( int int , java.lang.String java.lang.String , java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> < org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment > java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> );  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( int int , java.lang.String java.lang.String , java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> < org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment > java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ) { if ( java.lang.String . java.lang.String ( int , int + NUMBER ) . boolean ( STRING ) ) { } else if ( org.springframework.web.servlet.resource.Log . isErrorEnabled ( ) ) { org.springframework.web.servlet.resource.Log . error ( STRING + int ) ; } return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( int int , java.lang.String java.lang.String , java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> < org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment > java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ) { return int ( int - NUMBER , STRING , java.lang.String , java.util.Set<org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment> ) ; }  <METHOD_END>
<METHOD_START> public void ( int int , int int ) { this . int = int ; this . int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment ) { return ( this . int < org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment . int ? - NUMBER : ( this . int == org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment . int ? NUMBER : NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object != null && java.lang.Object instanceof org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment ) { org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment = ( org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment ) java.lang.Object ; return ( this . int == org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment . int && this . int == org.springframework.web.servlet.resource.CssLinkResourceTransformer.Segment . int ) ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int * NUMBER + this . int ; }  <METHOD_END>
