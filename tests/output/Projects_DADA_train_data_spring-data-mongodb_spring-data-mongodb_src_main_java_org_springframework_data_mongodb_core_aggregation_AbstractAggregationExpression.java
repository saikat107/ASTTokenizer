<METHOD_START> protected void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return org.springframework.data.mongodb.core.aggregation.Document ( this . java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( java.lang.Object java.lang.Object , AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { java.lang.Object java.lang.Object ; if ( java.lang.Object instanceof java.util.List ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = ( java.util.List<java.lang.Object> < java.lang.Object > ) java.lang.Object ; java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.util.List<java.lang.Object> . int ( ) ) ; for ( java.lang.Object java.lang.Object : java.util.List<java.lang.Object> ) { java.util.List<java.lang.Object> . boolean ( java.lang.Object ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } java.lang.Object = java.util.List<java.lang.Object> ; } else if ( java.lang.Object instanceof java . util . java.util.Map ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; for ( java . util . java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : ( ( java . util . java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.lang.Object ) . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { org.springframework.data.mongodb.core.aggregation.Document . put ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) , java.lang.Object ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } java.lang.Object = org.springframework.data.mongodb.core.aggregation.Document ; } else { java.lang.Object = java.lang.Object ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; } return new Document ( java.lang.String ( ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> protected static java.util.List<org.springframework.data.mongodb.core.aggregation.Field> < Field > java.util.List<org.springframework.data.mongodb.core.aggregation.Field> ( java.lang.String ... java.lang.String[] ) { if ( ObjectUtils . isEmpty ( java.lang.String[] ) ) { return java.util.Collections . java.util.List<org.springframework.data.mongodb.core.aggregation.Field> ( ) ; } return Fields . fields ( java.lang.String[] ) . asList ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { if ( java.lang.Object instanceof AggregationExpression ) { return ( ( AggregationExpression ) java.lang.Object ) . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; } if ( java.lang.Object instanceof Field ) { return org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( ( Field ) java.lang.Object ) . toString ( ) ; } if ( java.lang.Object instanceof java.util.List ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = ( java.util.List<java.lang.Object> < java.lang.Object > ) java.lang.Object ; java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.util.List<java.lang.Object> . int ( ) ) ; for ( java.lang.Object java.lang.Object : java.util.List<java.lang.Object> ) { java.util.List<java.lang.Object> . boolean ( java.lang.Object ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } return java.util.List<java.lang.Object> ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> protected java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( java.lang.Object java.lang.Object ) { if ( this . java.lang.Object instanceof java.util.List ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( ( java.util.List ) this . java.lang.Object ) ; if ( java.lang.Object instanceof java.util.List ) { for ( java.lang.Object java.lang.Object : ( java.util.List ) java.lang.Object ) { java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; } } else { java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; } return java.util.List<java.lang.Object> ; } return java.util.Arrays . java.util.List<java.lang.Object> ( this . java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected java . util . java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { if ( ! ( this . java.lang.Object instanceof java . util . java.util.Map ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } java . util . java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ( java . util . java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) this . java.lang.Object ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> protected java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( ) { if ( java.lang.Object instanceof java.util.List ) { return new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( ( java.util.List ) java.lang.Object ) ; } if ( java.lang.Object instanceof java . util . java.util.Map ) { return new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( ( ( java . util . java.util.Map ) java.lang.Object ) . java.util.Collection ( ) ) ; } return new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.util.Collections . java.util.List<java.lang.Object> ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.String java.lang.String ( )  <METHOD_END>
