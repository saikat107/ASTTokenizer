<METHOD_START> public void ( MessageRepository sample.groovytemplates.mvc.MessageRepository ) { this . sample.groovytemplates.mvc.MessageRepository = sample.groovytemplates.mvc.MessageRepository ; }  <METHOD_END>
<METHOD_START> @ GetMapping public sample.groovytemplates.mvc.ModelAndView sample.groovytemplates.mvc.ModelAndView ( ) { java.lang.Iterable<sample.groovytemplates.mvc.Message> < Message > java.lang.Iterable<sample.groovytemplates.mvc.Message> = this . sample.groovytemplates.mvc.MessageRepository . findAll ( ) ; return new ModelAndView ( STRING , STRING , java.lang.Iterable<sample.groovytemplates.mvc.Message> ) ; }  <METHOD_END>
<METHOD_START> @ GetMapping ( STRING ) public sample.groovytemplates.mvc.ModelAndView sample.groovytemplates.mvc.ModelAndView ( @ PathVariable ( STRING ) Message sample.groovytemplates.mvc.Message ) { return new ModelAndView ( STRING , STRING , sample.groovytemplates.mvc.Message ) ; }  <METHOD_END>
<METHOD_START> @ GetMapping ( params = STRING ) public java.lang.String java.lang.String ( @ ModelAttribute Message sample.groovytemplates.mvc.Message ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ PostMapping public sample.groovytemplates.mvc.ModelAndView sample.groovytemplates.mvc.ModelAndView ( @ Valid Message sample.groovytemplates.mvc.Message , BindingResult sample.groovytemplates.mvc.BindingResult , RedirectAttributes sample.groovytemplates.mvc.RedirectAttributes ) { if ( sample.groovytemplates.mvc.BindingResult . hasErrors ( ) ) { ModelAndView sample.groovytemplates.mvc.ModelAndView = new ModelAndView ( STRING ) ; sample.groovytemplates.mvc.ModelAndView . addObject ( STRING , sample.groovytemplates.mvc.BindingResult . getAllErrors ( ) ) ; sample.groovytemplates.mvc.ModelAndView . addObject ( STRING , java.util.Map<java.lang.String,sample.groovytemplates.mvc.ObjectError> ( sample.groovytemplates.mvc.BindingResult ) ) ; return sample.groovytemplates.mvc.ModelAndView ; } sample.groovytemplates.mvc.Message = this . sample.groovytemplates.mvc.MessageRepository . save ( sample.groovytemplates.mvc.Message ) ; sample.groovytemplates.mvc.RedirectAttributes . addFlashAttribute ( STRING , STRING ) ; return new ModelAndView ( STRING , STRING , sample.groovytemplates.mvc.Message . getId ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,sample.groovytemplates.mvc.ObjectError> < java.lang.String , ObjectError > java.util.Map<java.lang.String,sample.groovytemplates.mvc.ObjectError> ( BindingResult sample.groovytemplates.mvc.BindingResult ) { java.util.Map<java.lang.String,sample.groovytemplates.mvc.ObjectError> < java.lang.String , ObjectError > java.util.Map<java.lang.String,sample.groovytemplates.mvc.ObjectError> = new java.util.HashMap<java.lang.String,sample.groovytemplates.mvc.ObjectError> <> ( ) ; for ( FieldError sample.groovytemplates.mvc.FieldError : sample.groovytemplates.mvc.BindingResult . getFieldErrors ( ) ) { java.util.Map<java.lang.String,sample.groovytemplates.mvc.ObjectError> . put ( sample.groovytemplates.mvc.FieldError . getField ( ) , sample.groovytemplates.mvc.FieldError ) ; } return java.util.Map<java.lang.String,sample.groovytemplates.mvc.ObjectError> ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( STRING ) public java.lang.String java.lang.String ( ) { throw new java.lang.RuntimeException ( STRING ) ; }  <METHOD_END>
