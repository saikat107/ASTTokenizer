<METHOD_START> @ java.lang.Override protected org.springframework.http.client.ClientHttpRequestFactory org.springframework.http.client.ClientHttpRequestFactory ( ) { return new SimpleClientHttpRequestFactory ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Test public void void ( ) java.lang.Exception { try { assertHttpMethod ( STRING , HttpMethod . PATCH ) ; } catch ( java.net.ProtocolException java.net.ProtocolException ) { } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.net.URL java.net.URL = new java.net.URL ( STRING ) ; void ( java.net.URL , STRING , false ) ; void ( java.net.URL , STRING , false ) ; void ( java.net.URL , STRING , false ) ; void ( java.net.URL , STRING , false ) ; void ( java.net.URL , STRING , true ) ; void ( java.net.URL , STRING , true ) ; void ( java.net.URL , STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.net.HttpURLConnection java.net.HttpURLConnection = new org.springframework.http.client.BufferedSimpleHttpRequestFactoryTests.TestHttpURLConnection ( new java.net.URL ( STRING ) ) ; ( ( SimpleClientHttpRequestFactory ) this . factory ) . prepareConnection ( java.net.HttpURLConnection , STRING ) ; SimpleBufferingClientHttpRequest org.springframework.http.client.SimpleBufferingClientHttpRequest = new SimpleBufferingClientHttpRequest ( java.net.HttpURLConnection , false ) ; org.springframework.http.client.SimpleBufferingClientHttpRequest . execute ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.net.URL java.net.URL , java.lang.String java.lang.String , boolean boolean ) throws java.io.IOException { java.net.HttpURLConnection java.net.HttpURLConnection = new org.springframework.http.client.BufferedSimpleHttpRequestFactoryTests.TestHttpURLConnection ( java.net.URL ) ; ( ( SimpleClientHttpRequestFactory ) this . factory ) . prepareConnection ( java.net.HttpURLConnection , java.lang.String ) ; assertEquals ( boolean , java.net.HttpURLConnection . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.net.URL java.net.URL ) { super( java.net.URL ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.io.IOException {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.InputStream java.io.InputStream ( ) java.io.IOException { return new java.io.ByteArrayInputStream ( new byte [ NUMBER ] ) ; }  <METHOD_END>
