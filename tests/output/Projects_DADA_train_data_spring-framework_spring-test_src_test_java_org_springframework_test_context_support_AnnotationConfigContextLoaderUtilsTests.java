<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { detectDefaultConfigurationClasses ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = detectDefaultConfigurationClasses ( org.springframework.test.context.support.AnnotationConfigContextLoaderUtilsTests.NoConfigTestCase .class ) ; assertNotNull ( java.lang.Class<?>[] ) ; assertEquals ( NUMBER , java.lang.Class<?>[] . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = detectDefaultConfigurationClasses ( org.springframework.test.context.support.AnnotationConfigContextLoaderUtilsTests.ExplicitConfigTestCase .class ) ; assertNotNull ( java.lang.Class<?>[] ) ; assertArrayEquals ( new java.lang.Class<?> < ? > [] { org.springframework.test.context.support.AnnotationConfigContextLoaderUtilsTests.ExplicitConfigTestCase . org.springframework.test.context.support.AnnotationConfigContextLoaderUtilsTests.ExplicitConfigTestCase.Config .class } , java.lang.Class<?>[] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = detectDefaultConfigurationClasses ( org.springframework.test.context.support.AnnotationConfigContextLoaderUtilsTests.MetaAnnotatedConfigTestCase .class ) ; assertNotNull ( java.lang.Class<?>[] ) ; assertArrayEquals ( new java.lang.Class<?> < ? > [] { org.springframework.test.context.support.AnnotationConfigContextLoaderUtilsTests.MetaAnnotatedConfigTestCase . org.springframework.test.context.support.AnnotationConfigContextLoaderUtilsTests.MetaAnnotatedConfigTestCase.Config .class } , java.lang.Class<?>[] ) ; }  <METHOD_END>
