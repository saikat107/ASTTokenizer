<METHOD_START> @ java.lang.Override protected org.springframework.cache.aspectj.ConfigurableApplicationContext org.springframework.cache.aspectj.ConfigurableApplicationContext ( ) { return new GenericXmlApplicationContext ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { AnnotationCacheAspect org.springframework.cache.aspectj.AnnotationCacheAspect = ctx . getBean ( STRING , AnnotationCacheAspect .class ) ; Assert . assertSame ( ctx . getBean ( STRING ) , org.springframework.cache.aspectj.AnnotationCacheAspect . getKeyGenerator ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( CacheableService < ? > org.springframework.cache.aspectj.CacheableService<?> ) { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.aspectj.CacheableService<> . multiCache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.aspectj.CacheableService<> . multiCache ( java.lang.Object ) ; Cache org.springframework.cache.aspectj.Cache = cm . getCache ( STRING ) ; Cache org.springframework.cache.aspectj.Cache = cm . getCache ( STRING ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.aspectj.Cache . get ( java.lang.Object ) . get ( ) ) ; assertSame ( java.lang.Object , org.springframework.cache.aspectj.Cache . get ( java.lang.Object ) . get ( ) ) ; org.springframework.cache.aspectj.CacheableService<> . multiEvict ( java.lang.Object ) ; assertNull ( org.springframework.cache.aspectj.Cache . get ( java.lang.Object ) ) ; assertNull ( org.springframework.cache.aspectj.Cache . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.aspectj.CacheableService<> . multiCache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.aspectj.CacheableService<> . multiCache ( java.lang.Object ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.aspectj.Cache . get ( java.lang.Object ) . get ( ) ) ; assertSame ( java.lang.Object , org.springframework.cache.aspectj.Cache . get ( java.lang.Object ) . get ( ) ) ; }  <METHOD_END>
