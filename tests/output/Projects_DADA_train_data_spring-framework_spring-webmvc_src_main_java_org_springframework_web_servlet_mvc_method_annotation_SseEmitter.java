<METHOD_START> public void ( ) { super(); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Long java.lang.Long ) { super( java.lang.Long ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ServerHttpResponse org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse ) { super. extendResponse ( org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse ) ; HttpHeaders org.springframework.web.servlet.mvc.method.annotation.HttpHeaders = org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse . getHeaders ( ) ; if ( org.springframework.web.servlet.mvc.method.annotation.HttpHeaders . getContentType ( ) == null ) { org.springframework.web.servlet.mvc.method.annotation.HttpHeaders . setContentType ( org.springframework.web.servlet.mvc.method.annotation.MediaType ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) throws java.io.IOException { void ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , MediaType org.springframework.web.servlet.mvc.method.annotation.MediaType ) throws java.io.IOException { if ( java.lang.Object != null ) { void ( org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( ) . org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.Object , org.springframework.web.servlet.mvc.method.annotation.MediaType ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ) throws java.io.IOException { java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> < DataWithMediaType > java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> = org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder . java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> ( ) ; synchronized ( this ) { for ( DataWithMediaType org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType : java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> ) { super. send ( org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType . getData ( ) , org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType . getMediaType ( ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + ObjectUtils . getIdentityHexString ( this ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( ) { return new org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( ) ; }  <METHOD_END>
<METHOD_START> org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( long long );  <METHOD_END>
<METHOD_START> org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.Object java.lang.Object , MediaType org.springframework.web.servlet.mvc.method.annotation.MediaType );  <METHOD_END>
<METHOD_START> java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> < DataWithMediaType > java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.String java.lang.String ) { org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( STRING ) . org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( java.lang.String != null ? java.lang.String : STRING ) . org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.String java.lang.String ) { org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( STRING ) . org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( java.lang.String != null ? java.lang.String : STRING ) . org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.String java.lang.String ) { org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( STRING ) . org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( java.lang.String != null ? java.lang.String : STRING ) . org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( long long ) { org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( STRING ) . org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( java.lang.String . java.lang.String ( long ) ) . org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.Object java.lang.Object ) { return org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder ( java.lang.Object java.lang.Object , MediaType org.springframework.web.servlet.mvc.method.annotation.MediaType ) { org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( STRING ) ; void ( ) ; this . java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> . add ( new DataWithMediaType ( java.lang.Object , org.springframework.web.servlet.mvc.method.annotation.MediaType ) ) ; org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( java.lang.String java.lang.String ) { if ( this . java.lang.StringBuilder == null ) { this . java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; } this . java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> < DataWithMediaType > java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> ( ) { if ( ! StringUtils . hasLength ( this . java.lang.StringBuilder ) && this . java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> . isEmpty ( ) ) { return java.util.Collections . java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> ( ) ; } org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilderImpl ( STRING ) ; void ( ) ; return this . java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( this . java.lang.StringBuilder != null ) { this . java.util.Set<org.springframework.web.servlet.mvc.method.annotation.DataWithMediaType> . add ( new DataWithMediaType ( this . java.lang.StringBuilder . java.lang.String ( ) , org.springframework.web.servlet.mvc.method.annotation.MediaType ) ) ; this . java.lang.StringBuilder = null ; } }  <METHOD_END>
