<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.xml.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , org.springframework.integration.config.xml.PollerParserTests .class ) ; java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ClassPathXmlApplicationContext . getBean ( STRING ) ; assertNotNull ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ClassPathXmlApplicationContext . getBean ( PollerMetadata . DEFAULT_POLLER_METADATA_BEAN_NAME ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( java.lang.Object , org.springframework.integration.config.xml.ClassPathXmlApplicationContext . getBean ( STRING ) ) ; org.springframework.integration.config.xml.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.xml.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , org.springframework.integration.config.xml.PollerParserTests .class ) ; java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ClassPathXmlApplicationContext . getBean ( PollerMetadata . DEFAULT_POLLER_METADATA_BEAN_NAME ) ; assertNotNull ( java.lang.Object ) ; org.springframework.integration.config.xml.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionParsingException .class ) public void void ( ) { new ClassPathXmlApplicationContext ( STRING , org.springframework.integration.config.xml.PollerParserTests .class ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionParsingException .class ) public void void ( ) { new ClassPathXmlApplicationContext ( STRING , org.springframework.integration.config.xml.PollerParserTests .class ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.xml.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , org.springframework.integration.config.xml.PollerParserTests .class ) ; java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ClassPathXmlApplicationContext . getBean ( STRING ) ; assertNotNull ( java.lang.Object ) ; PollerMetadata org.springframework.integration.config.xml.PollerMetadata = ( PollerMetadata ) java.lang.Object ; assertNotNull ( org.springframework.integration.config.xml.PollerMetadata . getAdviceChain ( ) ) ; assertEquals ( NUMBER , org.springframework.integration.config.xml.PollerMetadata . getAdviceChain ( ) . size ( ) ) ; assertSame ( org.springframework.integration.config.xml.ClassPathXmlApplicationContext . getBean ( STRING ) , org.springframework.integration.config.xml.PollerMetadata . getAdviceChain ( ) . get ( NUMBER ) ) ; assertEquals ( TestAdviceBean .class , org.springframework.integration.config.xml.PollerMetadata . getAdviceChain ( ) . get ( NUMBER ) . getClass ( ) ) ; assertEquals ( NUMBER , ( ( TestAdviceBean ) org.springframework.integration.config.xml.PollerMetadata . getAdviceChain ( ) . get ( NUMBER ) ) . getId ( ) ) ; assertSame ( org.springframework.integration.config.xml.ClassPathXmlApplicationContext . getBean ( STRING ) , org.springframework.integration.config.xml.PollerMetadata . getAdviceChain ( ) . get ( NUMBER ) ) ; Advice org.springframework.integration.config.xml.Advice = org.springframework.integration.config.xml.PollerMetadata . getAdviceChain ( ) . get ( NUMBER ) ; assertEquals ( TransactionInterceptor .class , org.springframework.integration.config.xml.Advice . getClass ( ) ) ; TransactionAttributeSource org.springframework.integration.config.xml.TransactionAttributeSource = ( ( TransactionInterceptor ) org.springframework.integration.config.xml.Advice ) . getTransactionAttributeSource ( ) ; assertEquals ( NameMatchTransactionAttributeSource .class , org.springframework.integration.config.xml.TransactionAttributeSource . getClass ( ) ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.HashMap java.util.HashMap = TestUtils . getPropertyValue ( org.springframework.integration.config.xml.TransactionAttributeSource , STRING , java.util.HashMap .class ) ; assertEquals ( NUMBER , java.util.HashMap . int ( ) ) ; assertEquals ( STRING , java.util.HashMap . java.lang.String ( ) ) ; org.springframework.integration.config.xml.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.xml.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , org.springframework.integration.config.xml.PollerParserTests .class ) ; java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ClassPathXmlApplicationContext . getBean ( STRING ) ; assertNotNull ( java.lang.Object ) ; PollerMetadata org.springframework.integration.config.xml.PollerMetadata = ( PollerMetadata ) java.lang.Object ; assertEquals ( NUMBER , org.springframework.integration.config.xml.PollerMetadata . getReceiveTimeout ( ) ) ; PeriodicTrigger org.springframework.integration.config.xml.PeriodicTrigger = ( PeriodicTrigger ) org.springframework.integration.config.xml.PollerMetadata . getTrigger ( ) ; assertEquals ( java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . java.lang.String ( ) , TestUtils . getPropertyValue ( org.springframework.integration.config.xml.PeriodicTrigger , STRING ) . toString ( ) ) ; org.springframework.integration.config.xml.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.xml.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , org.springframework.integration.config.xml.PollerParserTests .class ) ; java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ClassPathXmlApplicationContext . getBean ( STRING ) ; assertNotNull ( java.lang.Object ) ; PollerMetadata org.springframework.integration.config.xml.PollerMetadata = ( PollerMetadata ) java.lang.Object ; assertTrue ( org.springframework.integration.config.xml.PollerMetadata . getTrigger ( ) instanceof TestTrigger ) ; org.springframework.integration.config.xml.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionParsingException .class ) public void void ( ) { new ClassPathXmlApplicationContext ( STRING , org.springframework.integration.config.xml.PollerParserTests .class ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionParsingException .class ) public void void ( ) { new ClassPathXmlApplicationContext ( STRING , org.springframework.integration.config.xml.PollerParserTests .class ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionParsingException .class ) public void void ( ) { new ClassPathXmlApplicationContext ( STRING , org.springframework.integration.config.xml.PollerParserTests .class ) . close ( ) ; }  <METHOD_END>
