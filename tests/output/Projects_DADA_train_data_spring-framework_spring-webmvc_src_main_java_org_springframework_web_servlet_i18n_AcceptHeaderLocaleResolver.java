<METHOD_START> public void void ( java.util.List<java.util.Locale> < java.util.Locale > java.util.List<java.util.Locale> ) { this . java.util.List<java.util.Locale> . void ( ) ; if ( java.util.List<java.util.Locale> != null ) { this . java.util.List<java.util.Locale> . boolean ( java.util.List<java.util.Locale> ) ; } }  <METHOD_END>
<METHOD_START> public java.util.List<java.util.Locale> < java.util.Locale > java.util.List<java.util.Locale> ( ) { return this . java.util.List<java.util.Locale> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Locale java.util.Locale ) { this . java.util.Locale = java.util.Locale ; }  <METHOD_END>
<METHOD_START> public java.util.Locale java.util.Locale ( ) { return this . java.util.Locale ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Locale java.util.Locale ( HttpServletRequest org.springframework.web.servlet.i18n.HttpServletRequest ) { java.util.Locale java.util.Locale = java.util.Locale ( ) ; if ( java.util.Locale != null && org.springframework.web.servlet.i18n.HttpServletRequest . getHeader ( STRING ) == null ) { return java.util.Locale ; } java.util.Locale java.util.Locale = org.springframework.web.servlet.i18n.HttpServletRequest . getLocale ( ) ; if ( boolean ( java.util.Locale ) ) { return java.util.Locale ; } java.util.Locale java.util.Locale = java.util.Locale ( org.springframework.web.servlet.i18n.HttpServletRequest ) ; if ( java.util.Locale != null ) { return java.util.Locale ; } return ( java.util.Locale != null ? java.util.Locale : java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.util.Locale java.util.Locale ) { java.util.List<java.util.Locale> < java.util.Locale > java.util.List<java.util.Locale> = java.util.List<java.util.Locale> ( ) ; return ( java.util.List<java.util.Locale> . boolean ( ) || java.util.List<java.util.Locale> . boolean ( java.util.Locale ) ) ; }  <METHOD_END>
<METHOD_START> private java.util.Locale java.util.Locale ( HttpServletRequest org.springframework.web.servlet.i18n.HttpServletRequest ) { java.util.Enumeration<java.util.Locale> < java.util.Locale > java.util.Enumeration<java.util.Locale> = org.springframework.web.servlet.i18n.HttpServletRequest . getLocales ( ) ; while ( java.util.Enumeration<java.util.Locale> . boolean ( ) ) { java.util.Locale java.util.Locale = java.util.Enumeration<java.util.Locale> . java.util.Locale ( ) ; if ( java.util.List<java.util.Locale> ( ) . boolean ( java.util.Locale ) ) { return java.util.Locale ; } } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( HttpServletRequest org.springframework.web.servlet.i18n.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.i18n.HttpServletResponse , java.util.Locale java.util.Locale ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
