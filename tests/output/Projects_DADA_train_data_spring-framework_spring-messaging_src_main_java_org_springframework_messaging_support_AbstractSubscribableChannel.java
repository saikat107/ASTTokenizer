<METHOD_START> public java.util.Set<org.springframework.messaging.support.MessageHandler> < MessageHandler > java.util.Set<org.springframework.messaging.support.MessageHandler> ( ) { return java.util.Collections .< MessageHandler > java.util.Set<org.springframework.messaging.support.MessageHandler> ( this . java.util.Set<org.springframework.messaging.support.MessageHandler> ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( MessageHandler org.springframework.messaging.support.MessageHandler ) { return this . java.util.Set<org.springframework.messaging.support.MessageHandler> . contains ( org.springframework.messaging.support.MessageHandler ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MessageHandler org.springframework.messaging.support.MessageHandler ) { boolean boolean = this . java.util.Set<org.springframework.messaging.support.MessageHandler> . add ( org.springframework.messaging.support.MessageHandler ) ; if ( boolean ) { if ( logger . isDebugEnabled ( ) ) { logger . debug ( getBeanName ( ) + STRING + org.springframework.messaging.support.MessageHandler ) ; } } return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MessageHandler org.springframework.messaging.support.MessageHandler ) { boolean boolean = this . java.util.Set<org.springframework.messaging.support.MessageHandler> . remove ( org.springframework.messaging.support.MessageHandler ) ; if ( boolean ) { if ( logger . isDebugEnabled ( ) ) { logger . debug ( getBeanName ( ) + STRING + org.springframework.messaging.support.MessageHandler ) ; } } return boolean ; }  <METHOD_END>
