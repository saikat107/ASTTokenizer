<METHOD_START> public void ( METHOD org.springframework.data.solr.core.schema.METHOD , java.lang.String java.lang.String ) { super( org.springframework.data.solr.core.schema.METHOD , java.lang.String ); setResponseParser ( new MappingJacksonResponseParser ( ) ) ; void ( new MappingJacksonRequestContentParser ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ContentParser org.springframework.data.solr.core.schema.ContentParser ) { this . org.springframework.data.solr.core.schema.ContentParser = org.springframework.data.solr.core.schema.ContentParser != null ? org.springframework.data.solr.core.schema.ContentParser : new MappingJacksonRequestContentParser ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.schema.ContentParser org.springframework.data.solr.core.schema.ContentParser ( ) { return this . org.springframework.data.solr.core.schema.ContentParser ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.schema.SolrParams org.springframework.data.solr.core.schema.SolrParams ( ) { return this . org.springframework.data.solr.core.schema.ModifiableSolrParams ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<org.springframework.data.solr.core.schema.ContentStream> < ContentStream > java.util.Collection<org.springframework.data.solr.core.schema.ContentStream> ( ) java.io.IOException { return java.util.List<org.springframework.data.solr.core.schema.ContentStream> != null ? java.util.Collections .< ContentStream > java.util.Collection<org.springframework.data.solr.core.schema.ContentStream> ( java.util.List<org.springframework.data.solr.core.schema.ContentStream> ) : null ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { if ( java.util.List<org.springframework.data.solr.core.schema.ContentStream> == null ) { this . java.util.List<org.springframework.data.solr.core.schema.ContentStream> = new java.util.ArrayList <> ( ) ; } java.util.List<org.springframework.data.solr.core.schema.ContentStream> . add ( org.springframework.data.solr.core.schema.ContentParser ( ) . parse ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return getMethod ( ) . toString ( ) + STRING + getPath ( ) + STRING + java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; if ( java.util.List<org.springframework.data.solr.core.schema.ContentStream> != null ) { for ( ContentStream org.springframework.data.solr.core.schema.ContentStream : this . java.util.List<org.springframework.data.solr.core.schema.ContentStream> ) { java.io.InputStream java.io.InputStream = null ; try { java.io.InputStream = org.springframework.data.solr.core.schema.ContentStream . getStream ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( StreamUtils . copyToString ( java.io.InputStream , java.nio.charset.Charset . java.nio.charset.Charset ( STRING ) ) ) ; } catch ( java.io.IOException java.io.IOException ) {} finally { if ( java.io.InputStream != null ) { try { java.io.InputStream . void ( ) ; } catch ( java.io.IOException java.io.IOException ) {} } } } } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.solr.core.schema.SolrJsonResponse org.springframework.data.solr.core.schema.SolrJsonResponse ( SolrClient org.springframework.data.solr.core.schema.SolrClient ) { return new SolrJsonResponse ( ) ; }  <METHOD_END>
