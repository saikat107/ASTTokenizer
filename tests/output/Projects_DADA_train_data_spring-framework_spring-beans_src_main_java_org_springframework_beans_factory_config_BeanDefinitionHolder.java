<METHOD_START> public void ( BeanDefinition org.springframework.beans.factory.config.BeanDefinition , java.lang.String java.lang.String ) { this( org.springframework.beans.factory.config.BeanDefinition , java.lang.String , null ); }  <METHOD_END>
<METHOD_START> public void ( BeanDefinition org.springframework.beans.factory.config.BeanDefinition , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { Assert . notNull ( org.springframework.beans.factory.config.BeanDefinition , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; this . org.springframework.beans.factory.config.BeanDefinition = org.springframework.beans.factory.config.BeanDefinition ; this . java.lang.String = java.lang.String ; this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void ( org.springframework.beans.factory.config.BeanDefinitionHolder org.springframework.beans.factory.config.BeanDefinitionHolder ) { Assert . notNull ( org.springframework.beans.factory.config.BeanDefinitionHolder , STRING ) ; this . org.springframework.beans.factory.config.BeanDefinition = org.springframework.beans.factory.config.BeanDefinitionHolder . org.springframework.beans.factory.config.BeanDefinition ( ) ; this . java.lang.String = org.springframework.beans.factory.config.BeanDefinitionHolder . java.lang.String ( ) ; this . java.lang.String[] = org.springframework.beans.factory.config.BeanDefinitionHolder . java.lang.String[] ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.config.BeanDefinition org.springframework.beans.factory.config.BeanDefinition ( ) { return this . org.springframework.beans.factory.config.BeanDefinition ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) { return this . org.springframework.beans.factory.config.BeanDefinition . getSource ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.String java.lang.String ) { return ( java.lang.String != null && ( java.lang.String . boolean ( this . java.lang.String ) || java.lang.String . boolean ( BeanFactoryUtils . transformedBeanName ( this . java.lang.String ) ) || ObjectUtils . containsElement ( this . java.lang.String[] , java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) . java.lang.StringBuilder ( STRING ) ; if ( this . java.lang.String[] != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( StringUtils . arrayToCommaDelimitedString ( this . java.lang.String[] ) ) . append ( STRING ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( java.lang.String ( ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . org.springframework.beans.factory.config.BeanDefinition ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.beans.factory.config.BeanDefinitionHolder ) ) { return false ; } org.springframework.beans.factory.config.BeanDefinitionHolder org.springframework.beans.factory.config.BeanDefinitionHolder = ( org.springframework.beans.factory.config.BeanDefinitionHolder ) java.lang.Object ; return this . org.springframework.beans.factory.config.BeanDefinition . equals ( org.springframework.beans.factory.config.BeanDefinitionHolder . org.springframework.beans.factory.config.BeanDefinition ) && this . java.lang.String . boolean ( org.springframework.beans.factory.config.BeanDefinitionHolder . java.lang.String ) && ObjectUtils . nullSafeEquals ( this . java.lang.String[] , org.springframework.beans.factory.config.BeanDefinitionHolder . java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = this . org.springframework.beans.factory.config.BeanDefinition . hashCode ( ) ; int = NUMBER * int + this . java.lang.String . int ( ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( this . java.lang.String[] ) ; return int ; }  <METHOD_END>
