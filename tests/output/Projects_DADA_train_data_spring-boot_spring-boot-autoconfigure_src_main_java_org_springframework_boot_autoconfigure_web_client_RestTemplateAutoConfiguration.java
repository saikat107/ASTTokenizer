<METHOD_START> public void ( ObjectProvider < HttpMessageConverters > org.springframework.boot.autoconfigure.web.client.ObjectProvider<org.springframework.boot.autoconfigure.web.client.HttpMessageConverters> , ObjectProvider < java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer> < RestTemplateCustomizer > > org.springframework.boot.autoconfigure.web.client.ObjectProvider<java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer>> ) { this . org.springframework.boot.autoconfigure.web.client.ObjectProvider<org.springframework.boot.autoconfigure.web.client.HttpMessageConverters> = org.springframework.boot.autoconfigure.web.client.ObjectProvider<org.springframework.boot.autoconfigure.web.client.HttpMessageConverters> ; this . org.springframework.boot.autoconfigure.web.client.ObjectProvider<java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer>> = org.springframework.boot.autoconfigure.web.client.ObjectProvider<java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer>> ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public org.springframework.boot.autoconfigure.web.client.RestTemplateBuilder org.springframework.boot.autoconfigure.web.client.RestTemplateBuilder ( ) { RestTemplateBuilder org.springframework.boot.autoconfigure.web.client.RestTemplateBuilder = new RestTemplateBuilder ( ) ; HttpMessageConverters org.springframework.boot.autoconfigure.web.client.HttpMessageConverters = this . org.springframework.boot.autoconfigure.web.client.ObjectProvider<org.springframework.boot.autoconfigure.web.client.HttpMessageConverters> . getIfUnique ( ) ; if ( org.springframework.boot.autoconfigure.web.client.HttpMessageConverters != null ) { org.springframework.boot.autoconfigure.web.client.RestTemplateBuilder = org.springframework.boot.autoconfigure.web.client.RestTemplateBuilder . messageConverters ( org.springframework.boot.autoconfigure.web.client.HttpMessageConverters . getConverters ( ) ) ; } java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer> < RestTemplateCustomizer > java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer> = this . org.springframework.boot.autoconfigure.web.client.ObjectProvider<java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer>> . getIfAvailable ( ) ; if ( ! CollectionUtils . isEmpty ( java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer> ) ) { java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer> = new java.util.ArrayList <> ( java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer> ) ; AnnotationAwareOrderComparator . sort ( java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer> ) ; org.springframework.boot.autoconfigure.web.client.RestTemplateBuilder = org.springframework.boot.autoconfigure.web.client.RestTemplateBuilder . customizers ( java.util.List<org.springframework.boot.autoconfigure.web.client.RestTemplateCustomizer> ) ; } return org.springframework.boot.autoconfigure.web.client.RestTemplateBuilder ; }  <METHOD_END>
