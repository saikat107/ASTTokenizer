<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockServletContext org.springframework.web.servlet.handler.MockServletContext = new MockServletContext ( STRING ) ; org.springframework.web.servlet.handler.ConfigurableWebApplicationContext = new XmlWebApplicationContext ( ) ; org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . setServletContext ( org.springframework.web.servlet.handler.MockServletContext ) ; org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . setConfigLocations ( new java.lang.String [] { java.lang.String } ) ; org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . refresh ( ) ; org.springframework.web.servlet.handler.HandlerMapping = ( HandlerMapping ) org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; MockHttpServletRequest org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; HandlerExecutionChain org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; MockHttpServletRequest org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; HandlerExecutionChain org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; assertEquals ( STRING , org.springframework.web.servlet.handler.MockHttpServletRequest . getAttribute ( HandlerMapping . PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE ) ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; assertEquals ( STRING , org.springframework.web.servlet.handler.MockHttpServletRequest . getAttribute ( HandlerMapping . PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE ) ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; assertEquals ( STRING , org.springframework.web.servlet.handler.MockHttpServletRequest . getAttribute ( HandlerMapping . PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE ) ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; assertEquals ( STRING , org.springframework.web.servlet.handler.MockHttpServletRequest . getAttribute ( HandlerMapping . PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE ) ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; MockHttpServletRequest org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; HandlerExecutionChain org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; MockHttpServletRequest org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; HandlerExecutionChain org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerExecutionChain ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; assertEquals ( STRING , STRING , org.springframework.web.servlet.handler.MockHttpServletRequest . getAttribute ( HandlerMapping . PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.servlet.handler.HandlerExecutionChain org.springframework.web.servlet.handler.HandlerExecutionChain ( MockHttpServletRequest org.springframework.web.servlet.handler.MockHttpServletRequest ) throws java.lang.Exception { HandlerExecutionChain org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; HandlerInterceptor [] org.springframework.web.servlet.handler.HandlerInterceptor[] = org.springframework.web.servlet.handler.HandlerExecutionChain . getInterceptors ( ) ; if ( org.springframework.web.servlet.handler.HandlerInterceptor[] != null ) { for ( HandlerInterceptor org.springframework.web.servlet.handler.HandlerInterceptor : org.springframework.web.servlet.handler.HandlerInterceptor[] ) { org.springframework.web.servlet.handler.HandlerInterceptor . preHandle ( org.springframework.web.servlet.handler.MockHttpServletRequest , null , org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) ) ; } } return org.springframework.web.servlet.handler.HandlerExecutionChain ; }  <METHOD_END>
