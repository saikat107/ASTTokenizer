<METHOD_START> @ Before public void void ( ) { org.springframework.beans.BeanWrapperImpl . setAutoGrowNestedPaths ( true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.beans.BeanWrapperImpl . setPropertyValue ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = NullValueInNestedPathException .class ) public void void ( ) { org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ( ) . int ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ( ) [ NUMBER ] , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.beans.BeanWrapperImpl . setPropertyValue ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ( ) [ NUMBER ] . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ( ) . int ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ( ) [ NUMBER ] , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ( ) [ NUMBER ] , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ( ) [ NUMBER ] , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ( ) [ NUMBER ] , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ( ) [ NUMBER ] , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[][] ( ) [ NUMBER ] . int ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[][] ( ) [ NUMBER ] [ NUMBER ] , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) . int ( ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( NUMBER ) , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.beans.BeanWrapperImpl . setPropertyValue ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( NUMBER ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) . int ( ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( NUMBER ) , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( NUMBER ) , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( NUMBER ) , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( NUMBER ) , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( NUMBER ) , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.beans.BeanWrapperImpl . setAutoGrowCollectionLimit ( NUMBER ) ; try { assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; fail ( STRING ) ; } catch ( InvalidPropertyException org.springframework.beans.InvalidPropertyException ) { assertTrue ( org.springframework.beans.InvalidPropertyException . getRootCause ( ) instanceof java.lang.IndexOutOfBoundsException ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNotNull ( org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.List<java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean>> ( ) . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( NUMBER ) . int ( ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.List<java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean>> ( ) . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( NUMBER ) . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( NUMBER ) , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = InvalidPropertyException .class ) public void void ( ) { org.springframework.beans.BeanWrapperImpl . getPropertyValue ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.beans.BeanWrapperImpl . setPropertyValue ( STRING , new org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.Map<java.lang.String,org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( STRING ) , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.beans.BeanWrapperImpl . setPropertyValue ( STRING , new org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( ) ) ; assertThat ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean . java.util.Map<java.lang.String,org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( STRING ) . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( ) , instanceOf ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean .class ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.BeanWrapperAutoGrowingTests.Bean org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ( ) { return org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ) { this . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean = org.springframework.beans.BeanWrapperAutoGrowingTests.Bean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.BeanWrapperAutoGrowingTests.Bean [] org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ( ) { return org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean [] org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ) { this . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] = org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[] ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.BeanWrapperAutoGrowingTests.Bean [] [] org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[][] ( ) { return org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[][] ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.beans.BeanWrapperAutoGrowingTests.Bean [] [] org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[][] ) { this . org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[][] = org.springframework.beans.BeanWrapperAutoGrowingTests.Bean[][] ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> < org.springframework.beans.BeanWrapperAutoGrowingTests.Bean > java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) { return java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> < org.springframework.beans.BeanWrapperAutoGrowingTests.Bean > java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ) { this . java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> = java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean>> < java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> < org.springframework.beans.BeanWrapperAutoGrowingTests.Bean > > java.util.List<java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean>> ( ) { return java.util.List<java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean>> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean>> < java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> < org.springframework.beans.BeanWrapperAutoGrowingTests.Bean > > java.util.List<java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean>> ) { this . java.util.List<java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean>> = java.util.List<java.util.List<org.springframework.beans.BeanWrapperAutoGrowingTests.Bean>> ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.BeanWrapperAutoGrowingTests.NestedNoDefaultConstructor org.springframework.beans.BeanWrapperAutoGrowingTests.NestedNoDefaultConstructor ( ) { return org.springframework.beans.BeanWrapperAutoGrowingTests.NestedNoDefaultConstructor ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.beans.BeanWrapperAutoGrowingTests.NestedNoDefaultConstructor org.springframework.beans.BeanWrapperAutoGrowingTests.NestedNoDefaultConstructor ) { this . org.springframework.beans.BeanWrapperAutoGrowingTests.NestedNoDefaultConstructor = org.springframework.beans.BeanWrapperAutoGrowingTests.NestedNoDefaultConstructor ; }  <METHOD_END>
<METHOD_START> public java.util.List java.util.List ( ) { return java.util.List ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List java.util.List ) { this . java.util.List = java.util.List ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> < java.lang.String , org.springframework.beans.BeanWrapperAutoGrowingTests.Bean > java.util.Map<java.lang.String,org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ( ) { return java.util.Map<java.lang.String,org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> < java.lang.String , org.springframework.beans.BeanWrapperAutoGrowingTests.Bean > java.util.Map<java.lang.String,org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ) { this . java.util.Map<java.lang.String,org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> = java.util.Map<java.lang.String,org.springframework.beans.BeanWrapperAutoGrowingTests.Bean> ; }  <METHOD_END>
<METHOD_START> private void ( ) {		}  <METHOD_END>
