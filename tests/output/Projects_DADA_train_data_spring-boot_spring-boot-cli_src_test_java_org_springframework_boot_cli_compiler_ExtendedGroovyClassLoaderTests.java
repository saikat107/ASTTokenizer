<METHOD_START> @ Before public void void ( ) { this . java.lang.ClassLoader = java.lang.Thread . java.lang.Thread ( ) . java.lang.ClassLoader ( ) ; this . org.springframework.boot.cli.compiler.ExtendedGroovyClassLoader = new ExtendedGroovyClassLoader ( GroovyCompilerScope . DEFAULT ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<?> < ? > java.lang.Class<?> = this . java.lang.ClassLoader . java.lang.Class<?> ( STRING ) ; java.lang.Class<?> < ? > java.lang.Class<?> = this . org.springframework.boot.cli.compiler.ExtendedGroovyClassLoader . loadClass ( STRING ) ; assertThat ( java.lang.Class<> . java.lang.ClassLoader ( ) ) . isSameAs ( java.lang.Class<> . java.lang.ClassLoader ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . java.lang.ClassLoader . java.lang.Class<?> ( STRING ) ; this . org.springframework.boot.cli.compiler.ExpectedException . expect ( java.lang.ClassNotFoundException .class ) ; this . org.springframework.boot.cli.compiler.ExtendedGroovyClassLoader . loadClass ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.cli.compiler.ExtendedGroovyClassLoader . loadClass ( STRING ) ; }  <METHOD_END>
