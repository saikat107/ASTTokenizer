<METHOD_START> public < T extends org.springframework.boot.loader.jar.CentralDirectoryVisitor > T T ( T T ) { this . java.util.List<org.springframework.boot.loader.jar.CentralDirectoryVisitor> . add ( T ) ; return T ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.loader.jar.RandomAccessData org.springframework.boot.loader.jar.RandomAccessData ( RandomAccessData org.springframework.boot.loader.jar.RandomAccessData , boolean boolean )			throws java.io.IOException { CentralDirectoryEndRecord org.springframework.boot.loader.jar.CentralDirectoryEndRecord = new CentralDirectoryEndRecord ( org.springframework.boot.loader.jar.RandomAccessData ) ; if ( boolean ) { org.springframework.boot.loader.jar.RandomAccessData = org.springframework.boot.loader.jar.RandomAccessData ( org.springframework.boot.loader.jar.CentralDirectoryEndRecord , org.springframework.boot.loader.jar.RandomAccessData ) ; } RandomAccessData org.springframework.boot.loader.jar.RandomAccessData = org.springframework.boot.loader.jar.CentralDirectoryEndRecord . getCentralDirectory ( org.springframework.boot.loader.jar.RandomAccessData ) ; void ( org.springframework.boot.loader.jar.CentralDirectoryEndRecord , org.springframework.boot.loader.jar.RandomAccessData ) ; void ( org.springframework.boot.loader.jar.CentralDirectoryEndRecord , org.springframework.boot.loader.jar.RandomAccessData ) ; void ( ) ; return org.springframework.boot.loader.jar.RandomAccessData ; }  <METHOD_END>
<METHOD_START> private void void ( CentralDirectoryEndRecord org.springframework.boot.loader.jar.CentralDirectoryEndRecord , RandomAccessData org.springframework.boot.loader.jar.RandomAccessData ) throws java.io.IOException { byte [] byte[] = Bytes . get ( org.springframework.boot.loader.jar.RandomAccessData ) ; CentralDirectoryFileHeader org.springframework.boot.loader.jar.CentralDirectoryFileHeader = new CentralDirectoryFileHeader ( ) ; int int = NUMBER ; for ( int int = NUMBER ; int < org.springframework.boot.loader.jar.CentralDirectoryEndRecord . getNumberOfRecords ( ) ; int ++ ) { org.springframework.boot.loader.jar.CentralDirectoryFileHeader . load ( byte[] , int , null , NUMBER , null ) ; void ( int , org.springframework.boot.loader.jar.CentralDirectoryFileHeader ) ; int += this . int + org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getName ( ) . length ( ) + org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getComment ( ) . length ( ) + org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getExtra ( ) . length ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.loader.jar.RandomAccessData org.springframework.boot.loader.jar.RandomAccessData ( CentralDirectoryEndRecord org.springframework.boot.loader.jar.CentralDirectoryEndRecord , RandomAccessData org.springframework.boot.loader.jar.RandomAccessData ) { long long = org.springframework.boot.loader.jar.CentralDirectoryEndRecord . getStartOfArchive ( org.springframework.boot.loader.jar.RandomAccessData ) ; if ( long == NUMBER ) { return org.springframework.boot.loader.jar.RandomAccessData ; } return org.springframework.boot.loader.jar.RandomAccessData . getSubsection ( long , org.springframework.boot.loader.jar.RandomAccessData . getSize ( ) - long ) ; }  <METHOD_END>
<METHOD_START> private void void ( CentralDirectoryEndRecord org.springframework.boot.loader.jar.CentralDirectoryEndRecord , RandomAccessData org.springframework.boot.loader.jar.RandomAccessData ) { for ( CentralDirectoryVisitor org.springframework.boot.loader.jar.CentralDirectoryVisitor : this . java.util.List<org.springframework.boot.loader.jar.CentralDirectoryVisitor> ) { org.springframework.boot.loader.jar.CentralDirectoryVisitor . visitStart ( org.springframework.boot.loader.jar.CentralDirectoryEndRecord , org.springframework.boot.loader.jar.RandomAccessData ) ; } }  <METHOD_END>
<METHOD_START> private void void ( int int , CentralDirectoryFileHeader org.springframework.boot.loader.jar.CentralDirectoryFileHeader ) { for ( CentralDirectoryVisitor org.springframework.boot.loader.jar.CentralDirectoryVisitor : this . java.util.List<org.springframework.boot.loader.jar.CentralDirectoryVisitor> ) { org.springframework.boot.loader.jar.CentralDirectoryVisitor . visitFileHeader ( org.springframework.boot.loader.jar.CentralDirectoryFileHeader , int ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { for ( CentralDirectoryVisitor org.springframework.boot.loader.jar.CentralDirectoryVisitor : this . java.util.List<org.springframework.boot.loader.jar.CentralDirectoryVisitor> ) { org.springframework.boot.loader.jar.CentralDirectoryVisitor . visitEnd ( ) ; } }  <METHOD_END>
