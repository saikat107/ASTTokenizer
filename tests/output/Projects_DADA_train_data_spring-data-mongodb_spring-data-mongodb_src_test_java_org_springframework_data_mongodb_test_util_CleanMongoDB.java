<METHOD_START> public void ( ) { this( null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int ) throws java.net.UnknownHostException { this( new MongoClient ( java.lang.String , int ) ); }  <METHOD_END>
<METHOD_START> public void ( MongoClient org.springframework.data.mongodb.test.util.MongoClient ) { this . org.springframework.data.mongodb.test.util.MongoClient = org.springframework.data.mongodb.test.util.MongoClient ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( ) { org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB = new org.springframework.data.mongodb.test.util.CleanMongoDB ( ) ; org.springframework.data.mongodb.test.util.CleanMongoDB . org.springframework.data.mongodb.test.util.CleanMongoDB ( org.springframework.data.mongodb.test.util.CleanMongoDB.Struct . org.springframework.data.mongodb.test.util.CleanMongoDB.Struct ) ; return org.springframework.data.mongodb.test.util.CleanMongoDB ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( java.lang.String ... java.lang.String[] ) { org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB = new org.springframework.data.mongodb.test.util.CleanMongoDB ( ) ; org.springframework.data.mongodb.test.util.CleanMongoDB . org.springframework.data.mongodb.test.util.CleanMongoDB ( org.springframework.data.mongodb.test.util.CleanMongoDB.Struct . org.springframework.data.mongodb.test.util.CleanMongoDB.Struct ) ; org.springframework.data.mongodb.test.util.CleanMongoDB . org.springframework.data.mongodb.test.util.CleanMongoDB ( java.lang.String[] ) ; return org.springframework.data.mongodb.test.util.CleanMongoDB ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( java.lang.String ... java.lang.String[] ) { return org.springframework.data.mongodb.test.util.CleanMongoDB ( STRING , java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( java.lang.String java.lang.String , java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB = new org.springframework.data.mongodb.test.util.CleanMongoDB ( ) ; org.springframework.data.mongodb.test.util.CleanMongoDB . org.springframework.data.mongodb.test.util.CleanMongoDB ( org.springframework.data.mongodb.test.util.CleanMongoDB.Struct . org.springframework.data.mongodb.test.util.CleanMongoDB.Struct ) ; org.springframework.data.mongodb.test.util.CleanMongoDB . org.springframework.data.mongodb.test.util.CleanMongoDB ( java.lang.String , java.util.Collection<java.lang.String> ) ; return org.springframework.data.mongodb.test.util.CleanMongoDB ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( ) { return org.springframework.data.mongodb.test.util.CleanMongoDB ( java.util.Collections .< java.lang.String > java.util.Set<java.lang.String> ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB = new org.springframework.data.mongodb.test.util.CleanMongoDB ( ) ; org.springframework.data.mongodb.test.util.CleanMongoDB . org.springframework.data.mongodb.test.util.CleanMongoDB ( org.springframework.data.mongodb.test.util.CleanMongoDB.Struct . org.springframework.data.mongodb.test.util.CleanMongoDB.Struct ) ; org.springframework.data.mongodb.test.util.CleanMongoDB . org.springframework.data.mongodb.test.util.CleanMongoDB ( java.util.Collection<java.lang.String> ) ; return org.springframework.data.mongodb.test.util.CleanMongoDB ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( org.springframework.data.mongodb.test.util.CleanMongoDB.Struct ... org.springframework.data.mongodb.test.util.CleanMongoDB.Struct[] ) { this . java.util.Set<org.springframework.data.mongodb.test.util.CleanMongoDB.Struct> . boolean ( java.util.Arrays . java.util.List<org.springframework.data.mongodb.test.util.CleanMongoDB.Struct> ( org.springframework.data.mongodb.test.util.CleanMongoDB.Struct[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( java.lang.String ... java.lang.String[] ) { this . java.util.Set<java.lang.String> . boolean ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( java.lang.String ... java.lang.String[] ) { this . java.util.Set<java.lang.String> . boolean ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( java.lang.String ... java.lang.String[] ) { return org.springframework.data.mongodb.test.util.CleanMongoDB ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { return org.springframework.data.mongodb.test.util.CleanMongoDB ( STRING , java.util.Collection<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.test.util.CleanMongoDB org.springframework.data.mongodb.test.util.CleanMongoDB ( java.lang.String java.lang.String , java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { if ( StringUtils . hasText ( java.lang.String ) ) { this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; } if ( ! CollectionUtils . isEmpty ( java.util.Collection<java.lang.String> ) ) { this . java.util.Set<java.lang.String> . boolean ( java.util.Collection<java.lang.String> ) ; } return this ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.test.util.Statement org.springframework.data.mongodb.test.util.Statement ( ) { return org.springframework.data.mongodb.test.util.Statement ( null , null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.test.util.Statement org.springframework.data.mongodb.test.util.Statement ( Statement org.springframework.data.mongodb.test.util.Statement , Description org.springframework.data.mongodb.test.util.Description ) { return new org.springframework.data.mongodb.test.util.CleanMongoDB.MongoCleanStatement ( org.springframework.data.mongodb.test.util.Statement ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = java.util.Collection<java.lang.String> ( ) ; for ( java.lang.String java.lang.String : java.util.Collection<java.lang.String> ) { if ( boolean ( java.lang.String ) || boolean ( java.lang.String ) ) { continue; } DB org.springframework.data.mongodb.test.util.DB = org.springframework.data.mongodb.test.util.MongoClient . getDB ( java.lang.String ) ; void ( org.springframework.data.mongodb.test.util.DB , java.util.Collection<java.lang.String> ( org.springframework.data.mongodb.test.util.DB ) ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.String java.lang.String ) { if ( ! java.util.Set<org.springframework.data.mongodb.test.util.CleanMongoDB.Struct> . boolean ( org.springframework.data.mongodb.test.util.CleanMongoDB.Struct . org.springframework.data.mongodb.test.util.CleanMongoDB.Struct ) ) { return false ; } org.springframework.data.mongodb.test.util.MongoClient . dropDatabase ( java.lang.String ) ; org.springframework.data.mongodb.test.util.Logger . debug ( STRING , java.lang.String ) ; return true ; }  <METHOD_END>
<METHOD_START> private void void ( DB org.springframework.data.mongodb.test.util.DB , java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { for ( java.lang.String java.lang.String : java.util.Collection<java.lang.String> ) { if ( org.springframework.data.mongodb.test.util.DB . collectionExists ( java.lang.String ) ) { DBCollection org.springframework.data.mongodb.test.util.DBCollection = org.springframework.data.mongodb.test.util.DB . getCollectionFromString ( java.lang.String ) ; if ( org.springframework.data.mongodb.test.util.DBCollection != null ) { if ( java.util.Set<org.springframework.data.mongodb.test.util.CleanMongoDB.Struct> . boolean ( org.springframework.data.mongodb.test.util.CleanMongoDB.Struct . org.springframework.data.mongodb.test.util.CleanMongoDB.Struct ) ) { org.springframework.data.mongodb.test.util.DBCollection . drop ( ) ; org.springframework.data.mongodb.test.util.Logger . debug ( STRING , java.lang.String , org.springframework.data.mongodb.test.util.DB . getName ( ) ) ; } else if ( java.util.Set<org.springframework.data.mongodb.test.util.CleanMongoDB.Struct> . boolean ( org.springframework.data.mongodb.test.util.CleanMongoDB.Struct . org.springframework.data.mongodb.test.util.CleanMongoDB.Struct ) ) { org.springframework.data.mongodb.test.util.DBCollection . dropIndexes ( ) ; org.springframework.data.mongodb.test.util.Logger . debug ( STRING , java.lang.String , org.springframework.data.mongodb.test.util.DB . getName ( ) ) ; } } } } }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.String java.lang.String ) { return java.util.Set<java.lang.String> . boolean ( java.lang.String . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( ) { java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = java.util.Set<java.lang.String> ; if ( java.util.Collection<java.lang.String> . boolean ( ) ) { java.util.Collection<java.lang.String> = org.springframework.data.mongodb.test.util.MongoClient . getDatabaseNames ( ) ; } return java.util.Collection<java.lang.String> ; }  <METHOD_END>
<METHOD_START> private java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( DB org.springframework.data.mongodb.test.util.DB ) { java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = java.util.Set<java.lang.String> ; if ( CollectionUtils . isEmpty ( java.util.Collection<java.lang.String> ) ) { java.util.Collection<java.lang.String> = org.springframework.data.mongodb.test.util.DB . getCollectionNames ( ) ; } return java.util.Collection<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void ( Statement org.springframework.data.mongodb.test.util.Statement ) { this . org.springframework.data.mongodb.test.util.Statement = org.springframework.data.mongodb.test.util.Statement ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Throwable { if ( org.springframework.data.mongodb.test.util.Statement != null ) { org.springframework.data.mongodb.test.util.Statement . evaluate ( ) ; } boolean boolean = false ; if ( org.springframework.data.mongodb.test.util.MongoClient == null ) { org.springframework.data.mongodb.test.util.MongoClient = new MongoClient ( ) ; boolean = true ; } void ( ) ; if ( boolean ) { org.springframework.data.mongodb.test.util.MongoClient . close ( ) ; org.springframework.data.mongodb.test.util.MongoClient = null ; } }  <METHOD_END>
