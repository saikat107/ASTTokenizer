<METHOD_START> void ( ActiveMQProperties org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties ) { Assert . notNull ( org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties , STRING ) ; this . org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties = org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties ; }  <METHOD_END>
<METHOD_START> public < T extends org.springframework.boot.autoconfigure.jms.activemq.ActiveMQConnectionFactory > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) { try { return T ( java.lang.Class<T> ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.IllegalStateException ( STRING + STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private < T extends org.springframework.boot.autoconfigure.jms.activemq.ActiveMQConnectionFactory > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) throws java.lang.Exception { T T = T ( java.lang.Class<T> ) ; Packages org.springframework.boot.autoconfigure.jms.activemq.Packages = this . org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties . getPackages ( ) ; if ( org.springframework.boot.autoconfigure.jms.activemq.Packages . getTrustAll ( ) != null ) { T . setTrustAllPackages ( org.springframework.boot.autoconfigure.jms.activemq.Packages . getTrustAll ( ) ) ; } if ( ! org.springframework.boot.autoconfigure.jms.activemq.Packages . getTrusted ( ) . isEmpty ( ) ) { T . setTrustedPackages ( org.springframework.boot.autoconfigure.jms.activemq.Packages . getTrusted ( ) ) ; } return T ; }  <METHOD_END>
<METHOD_START> private < T extends org.springframework.boot.autoconfigure.jms.activemq.ActiveMQConnectionFactory > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) throws java.lang.InstantiationException , java.lang.IllegalAccessException , java.lang.reflect.InvocationTargetException , java.lang.NoSuchMethodException { java.lang.String java.lang.String = java.lang.String ( ) ; java.lang.String java.lang.String = this . org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties . getUser ( ) ; java.lang.String java.lang.String = this . org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties . getPassword ( ) ; if ( StringUtils . hasLength ( java.lang.String ) && StringUtils . hasLength ( java.lang.String ) ) { return java.lang.Class<T> . java.lang.reflect.Constructor<T> ( java.lang.String .class , java.lang.String .class , java.lang.String .class ) . T ( java.lang.String , java.lang.String , java.lang.String ) ; } return java.lang.Class<T> . java.lang.reflect.Constructor<T> ( java.lang.String .class ) . T ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { if ( this . org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties . getBrokerUrl ( ) != null ) { return this . org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties . getBrokerUrl ( ) ; } if ( this . org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties . isInMemory ( ) ) { return java.lang.String ; } return java.lang.String ; }  <METHOD_END>
