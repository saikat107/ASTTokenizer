<METHOD_START> @ java.lang.Override protected org.springframework.integration.mail.config.AbstractBeanDefinition org.springframework.integration.mail.config.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.mail.config.ParserContext , java.lang.String java.lang.String ) { BeanDefinitionBuilder org.springframework.integration.mail.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ImapIdleChannelAdapter .class ) ; org.springframework.integration.mail.config.BeanDefinitionBuilder . addConstructorArgValue ( this . org.springframework.integration.mail.config.BeanDefinition ( org.w3c.dom.Element , org.springframework.integration.mail.config.ParserContext ) ) ; org.springframework.integration.mail.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; if ( org.w3c.dom.Element != null ) { IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; } IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; AbstractBeanDefinition org.springframework.integration.mail.config.AbstractBeanDefinition = org.springframework.integration.mail.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; IntegrationNamespaceUtils . configureAndSetAdviceChainIfPresent ( null , DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) , org.springframework.integration.mail.config.AbstractBeanDefinition , org.springframework.integration.mail.config.ParserContext ) ; return org.springframework.integration.mail.config.AbstractBeanDefinition ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.mail.config.BeanDefinition org.springframework.integration.mail.config.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.mail.config.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.mail.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ImapMailReceiver .class ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; java.lang.Object java.lang.Object = org.springframework.integration.mail.config.ParserContext . extractSource ( org.w3c.dom.Element ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.mail.config.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( org.w3c.dom.Element . boolean ( STRING ) || org.w3c.dom.Element . boolean ( STRING ) ) { org.springframework.integration.mail.config.ParserContext . getReaderContext ( ) . error ( STRING + STRING , java.lang.Object ) ; } org.springframework.integration.mail.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } else { IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; } IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; org.springframework.integration.mail.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.w3c.dom.Element . java.lang.String ( STRING ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.mail.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; RootBeanDefinition org.springframework.integration.mail.config.RootBeanDefinition = null ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.mail.config.RootBeanDefinition = new RootBeanDefinition ( STRING ) ; org.springframework.integration.mail.config.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( java.lang.String ) ; org.springframework.integration.mail.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.mail.config.RootBeanDefinition ) ; } IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; return org.springframework.integration.mail.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
