<METHOD_START> void ( SpringIntegrationTest org.springframework.integration.test.context.SpringIntegrationTest ) { this . org.springframework.integration.test.context.SpringIntegrationTest = org.springframework.integration.test.context.SpringIntegrationTest ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableApplicationContext org.springframework.integration.test.context.ConfigurableApplicationContext , MergedContextConfiguration org.springframework.integration.test.context.MergedContextConfiguration ) { ConfigurableListableBeanFactory org.springframework.integration.test.context.ConfigurableListableBeanFactory = org.springframework.integration.test.context.ConfigurableApplicationContext . getBeanFactory ( ) ; Assert . isInstanceOf ( BeanDefinitionRegistry .class , org.springframework.integration.test.context.ConfigurableListableBeanFactory ) ; BeanDefinitionRegistry org.springframework.integration.test.context.BeanDefinitionRegistry = ( BeanDefinitionRegistry ) org.springframework.integration.test.context.ConfigurableListableBeanFactory ; org.springframework.integration.test.context.BeanDefinitionRegistry . registerBeanDefinition ( MockIntegrationContext . MOCK_INTEGRATION_CONTEXT_BEAN_NAME , new RootBeanDefinition ( MockIntegrationContext .class ) ) ; java.lang.String java.lang.String = java.beans.Introspector . java.lang.String ( IntegrationEndpointsInitializer .class . java.lang.String ( ) ) ; org.springframework.integration.test.context.BeanDefinitionRegistry . registerBeanDefinition ( java.lang.String , BeanDefinitionBuilder . genericBeanDefinition ( IntegrationEndpointsInitializer .class ) . addConstructorArgValue ( this . org.springframework.integration.test.context.SpringIntegrationTest ) . getBeanDefinition ( ) ) ; }  <METHOD_END>
