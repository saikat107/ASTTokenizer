<METHOD_START> public static org.springframework.data.cassandra.Row org.springframework.data.cassandra.Row ( final org.springframework.data.cassandra.RowMockUtil.Column ... org.springframework.data.cassandra.RowMockUtil.Column[] ) { Assert . notNull ( org.springframework.data.cassandra.RowMockUtil.Column[] , STRING ) ; Row org.springframework.data.cassandra.Row = mock ( Row .class ) ; ColumnDefinitions org.springframework.data.cassandra.ColumnDefinitions = mock ( ColumnDefinitions .class ) ; when ( org.springframework.data.cassandra.Row . getColumnDefinitions ( ) ) . thenReturn ( org.springframework.data.cassandra.ColumnDefinitions ) ; when ( org.springframework.data.cassandra.ColumnDefinitions . contains ( anyString ( ) ) ) . thenAnswer ( invocation -> Arrays . stream ( columns ) . anyMatch ( column -> column . name . equalsIgnoreCase ( ( String ) invocation . getArguments ( ) [ NUMBER ] ) ) ) ; when ( org.springframework.data.cassandra.ColumnDefinitions . getIndexOf ( anyString ( ) ) ) . thenAnswer ( invocation -> { int counter = NUMBER ; for ( Column column : columns ) { if ( column . name . equalsIgnoreCase ( ( String ) invocation . getArguments ( ) [ NUMBER ] ) ) { return counter ; } counter ++ ; } return - NUMBER ; } ) ; when ( org.springframework.data.cassandra.ColumnDefinitions . getType ( anyInt ( ) ) ) . thenAnswer ( invocation -> columns [ ( Integer ) invocation . getArguments ( ) [ NUMBER ] ] . type ) ; when ( org.springframework.data.cassandra.Row . getObject ( anyInt ( ) ) ) . thenAnswer ( invocation -> columns [ ( Integer ) invocation . getArguments ( ) [ NUMBER ] ] . value ) ; return org.springframework.data.cassandra.Row ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.cassandra.RowMockUtil.Column org.springframework.data.cassandra.RowMockUtil.Column ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , DataType org.springframework.data.cassandra.DataType ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.data.cassandra.DataType , STRING ) ; return new org.springframework.data.cassandra.RowMockUtil.Column ( java.lang.String , java.lang.Object , org.springframework.data.cassandra.DataType ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , DataType org.springframework.data.cassandra.DataType ) { this . java.lang.String = java.lang.String ; this . java.lang.Object = java.lang.Object ; this . org.springframework.data.cassandra.DataType = org.springframework.data.cassandra.DataType ; }  <METHOD_END>
