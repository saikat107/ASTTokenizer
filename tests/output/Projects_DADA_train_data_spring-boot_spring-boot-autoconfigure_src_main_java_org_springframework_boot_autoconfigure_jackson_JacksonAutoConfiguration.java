<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jackson.JsonComponentModule org.springframework.boot.autoconfigure.jackson.JsonComponentModule ( ) { return new JsonComponentModule ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Primary @ ConditionalOnMissingBean ( ObjectMapper .class ) public org.springframework.boot.autoconfigure.jackson.ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) { return org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . createXmlMapper ( false ) . build ( ) ; }  <METHOD_END>
<METHOD_START> void ( JacksonProperties org.springframework.boot.autoconfigure.jackson.JacksonProperties ) { this . org.springframework.boot.autoconfigure.jackson.JacksonProperties = org.springframework.boot.autoconfigure.jackson.JacksonProperties ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jackson.SimpleModule org.springframework.boot.autoconfigure.jackson.SimpleModule ( ) { SimpleModule org.springframework.boot.autoconfigure.jackson.SimpleModule = new SimpleModule ( ) ; JacksonJodaDateFormat org.springframework.boot.autoconfigure.jackson.JacksonJodaDateFormat = org.springframework.boot.autoconfigure.jackson.JacksonJodaDateFormat ( ) ; if ( org.springframework.boot.autoconfigure.jackson.JacksonJodaDateFormat != null ) { org.springframework.boot.autoconfigure.jackson.SimpleModule . addSerializer ( DateTime .class , new DateTimeSerializer ( org.springframework.boot.autoconfigure.jackson.JacksonJodaDateFormat ) ) ; } return org.springframework.boot.autoconfigure.jackson.SimpleModule ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.jackson.JacksonJodaDateFormat org.springframework.boot.autoconfigure.jackson.JacksonJodaDateFormat ( ) { if ( this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getJodaDateTimeFormat ( ) != null ) { return new JacksonJodaDateFormat ( DateTimeFormat . forPattern ( this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getJodaDateTimeFormat ( ) ) . withZoneUTC ( ) ) ; } if ( this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getDateFormat ( ) != null ) { try { return new JacksonJodaDateFormat ( DateTimeFormat . forPattern ( this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getDateFormat ( ) ) . withZoneUTC ( ) ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { if ( org.springframework.boot.autoconfigure.jackson.Log . isWarnEnabled ( ) ) { org.springframework.boot.autoconfigure.jackson.Log . warn ( STRING + STRING + STRING + STRING ) ; } } } return null ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( ParameterNamesModule .class ) public org.springframework.boot.autoconfigure.jackson.ParameterNamesModule org.springframework.boot.autoconfigure.jackson.ParameterNamesModule ( ) { return new ParameterNamesModule ( JsonCreator . Mode . DEFAULT ) ; }  <METHOD_END>
<METHOD_START> void ( ApplicationContext org.springframework.boot.autoconfigure.jackson.ApplicationContext , JacksonProperties org.springframework.boot.autoconfigure.jackson.JacksonProperties , java.util.List<org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer> < Jackson2ObjectMapperBuilderCustomizer > java.util.List<org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer> ) { this . org.springframework.boot.autoconfigure.jackson.ApplicationContext = org.springframework.boot.autoconfigure.jackson.ApplicationContext ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( Jackson2ObjectMapperBuilder .class ) public org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ( java.util.List<org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer> < Jackson2ObjectMapperBuilderCustomizer > java.util.List<org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer> ) { Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder = new Jackson2ObjectMapperBuilder ( ) ; org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . applicationContext ( this . org.springframework.boot.autoconfigure.jackson.ApplicationContext ) ; void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , java.util.List<org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer> ) ; return org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ; }  <METHOD_END>
<METHOD_START> private void void ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , java.util.List<org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer> < Jackson2ObjectMapperBuilderCustomizer > java.util.List<org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer> ) { for ( Jackson2ObjectMapperBuilderCustomizer org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer : java.util.List<org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer> ) { org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer . customize ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) ; } }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration.StandardJackson2ObjectMapperBuilderCustomizer org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration.StandardJackson2ObjectMapperBuilderCustomizer ( ApplicationContext org.springframework.boot.autoconfigure.jackson.ApplicationContext , JacksonProperties org.springframework.boot.autoconfigure.jackson.JacksonProperties ) { return new org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration.StandardJackson2ObjectMapperBuilderCustomizer ( org.springframework.boot.autoconfigure.jackson.ApplicationContext , org.springframework.boot.autoconfigure.jackson.JacksonProperties ) ; }  <METHOD_END>
<METHOD_START> void ( ApplicationContext org.springframework.boot.autoconfigure.jackson.ApplicationContext , JacksonProperties org.springframework.boot.autoconfigure.jackson.JacksonProperties ) { this . org.springframework.boot.autoconfigure.jackson.ApplicationContext = org.springframework.boot.autoconfigure.jackson.ApplicationContext ; this . org.springframework.boot.autoconfigure.jackson.JacksonProperties = org.springframework.boot.autoconfigure.jackson.JacksonProperties ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) { if ( this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getDefaultPropertyInclusion ( ) != null ) { org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . serializationInclusion ( this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getDefaultPropertyInclusion ( ) ) ; } if ( this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getTimeZone ( ) != null ) { org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . timeZone ( this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getTimeZone ( ) ) ; } void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getDeserialization ( ) ) ; void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getSerialization ( ) ) ; void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getMapper ( ) ) ; void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getParser ( ) ) ; void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getGenerator ( ) ) ; void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) ; void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) ; void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) ; void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) ; }  <METHOD_END>
<METHOD_START> private void void ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , java.util.Map<?,java.lang.Boolean> < ? , java.lang.Boolean > java.util.Map<?,java.lang.Boolean> ) { for ( java.util.Map.Entry<?,java.lang.Boolean> < ? , java.lang.Boolean > java.util.Map.Entry<?,java.lang.Boolean> : java.util.Map<,java.lang.Boolean> . java.util.Set<java.util.Map.Entry<,java.lang.Boolean>> ( ) ) { if ( java.util.Map.Entry<,java.lang.Boolean> . java.lang.Boolean ( ) != null && java.util.Map.Entry<,java.lang.Boolean> . java.lang.Boolean ( ) ) { org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . featuresToEnable ( java.util.Map.Entry<,java.lang.Boolean> . getKey ( ) ) ; } else { org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . featuresToDisable ( java.util.Map.Entry<,java.lang.Boolean> . getKey ( ) ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) { java.lang.String java.lang.String = this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getDateFormat ( ) ; if ( java.lang.String != null ) { try { java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . forName ( java.lang.String , null ) ; org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . dateFormat ( ( java.text.DateFormat ) BeanUtils . instantiateClass ( java.lang.Class<> ) ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { java.text.SimpleDateFormat java.text.SimpleDateFormat = new java.text.SimpleDateFormat ( java.lang.String ) ; java.util.TimeZone java.util.TimeZone = this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getTimeZone ( ) ; if ( java.util.TimeZone == null ) { java.util.TimeZone = new ObjectMapper ( ) . getSerializationConfig ( ) . getTimeZone ( ) ; } java.text.SimpleDateFormat . void ( java.util.TimeZone ) ; org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . dateFormat ( java.text.SimpleDateFormat ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) { java.lang.String java.lang.String = this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getPropertyNamingStrategy ( ) ; if ( java.lang.String != null ) { try { void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , ClassUtils . forName ( java.lang.String , null ) ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { void ( org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , java.lang.Class<?> < ? > java.lang.Class<?> ) { org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . propertyNamingStrategy ( ( PropertyNamingStrategy ) BeanUtils . instantiateClass ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder , java.lang.String java.lang.String ) { java.lang.reflect.Field java.lang.reflect.Field = ReflectionUtils . findField ( PropertyNamingStrategy .class , java.lang.String , PropertyNamingStrategy .class ) ; Assert . notNull ( java.lang.reflect.Field , STRING + java.lang.String + STRING + PropertyNamingStrategy .class . java.lang.String ( ) ) ; try { org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . propertyNamingStrategy ( ( PropertyNamingStrategy ) java.lang.reflect.Field . java.lang.Object ( null ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.IllegalStateException ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private void void ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) { java.util.Collection<org.springframework.boot.autoconfigure.jackson.Module> < Module > java.util.Collection<org.springframework.boot.autoconfigure.jackson.Module> = java.util.Collection ( this . org.springframework.boot.autoconfigure.jackson.ApplicationContext , Module .class ) ; org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . modulesToInstall ( java.util.Collection<org.springframework.boot.autoconfigure.jackson.Module> . toArray ( new Module [ java.util.Collection<org.springframework.boot.autoconfigure.jackson.Module> . size ( ) ] ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) { java.util.Locale java.util.Locale = this . org.springframework.boot.autoconfigure.jackson.JacksonProperties . getLocale ( ) ; if ( java.util.Locale != null ) { org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . locale ( java.util.Locale ) ; } }  <METHOD_END>
<METHOD_START> private static < T > java.util.Collection<T> < T > java.util.Collection<T> ( ListableBeanFactory org.springframework.boot.autoconfigure.jackson.ListableBeanFactory , java.lang.Class<T> < T > java.lang.Class<T> ) { return BeanFactoryUtils . beansOfTypeIncludingAncestors ( org.springframework.boot.autoconfigure.jackson.ListableBeanFactory , java.lang.Class<T> ) . values ( ) ; }  <METHOD_END>
