<METHOD_START> public void ( RowMapper < T > org.springframework.cassandra.core.RowMapper<T> ) { this( org.springframework.cassandra.core.RowMapper<T> , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( RowMapper < T > org.springframework.cassandra.core.RowMapper<T> , int int ) { Assert . notNull ( org.springframework.cassandra.core.RowMapper<T> , STRING ) ; this . org.springframework.cassandra.core.RowMapper<T> = org.springframework.cassandra.core.RowMapper<T> ; this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<T> < T > java.util.List<T> ( ResultSet org.springframework.cassandra.core.ResultSet ) throws org.springframework.cassandra.core.DriverException , org.springframework.cassandra.core.DataAccessException { java.util.List<T> < T > java.util.List<T> = ( this . int > NUMBER ? new java.util.ArrayList<T> <> ( this . int ) : new java.util.ArrayList<T> <> ( ) ) ; int int = NUMBER ; for ( Row org.springframework.cassandra.core.Row : org.springframework.cassandra.core.ResultSet ) { java.util.List<T> . boolean ( this . org.springframework.cassandra.core.RowMapper<T> . mapRow ( org.springframework.cassandra.core.Row , int ++ ) ) ; } return java.util.List<T> ; }  <METHOD_END>
