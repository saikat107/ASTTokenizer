<METHOD_START> public void ( org.springframework.data.jpa.domain.Attribute<?,?> < ? , ? > ... org.springframework.data.jpa.domain.Attribute<?,?>[] ) { this( DEFAULT_DIRECTION , org.springframework.data.jpa.domain.Attribute<?,?>[] ); }  <METHOD_END>
<METHOD_START> public void ( org.springframework.data.jpa.domain.JpaSort . org.springframework.data.jpa.domain.JpaSort.Path<?,?> < ? , ? > ... org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] ) { this( DEFAULT_DIRECTION , org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] ); }  <METHOD_END>
<METHOD_START> public void ( Direction org.springframework.data.jpa.domain.Direction , org.springframework.data.jpa.domain.Attribute<?,?> < ? , ? > ... org.springframework.data.jpa.domain.Attribute<?,?>[] ) { this( org.springframework.data.jpa.domain.Direction , org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] ( org.springframework.data.jpa.domain.Attribute<?,?>[] ) ); }  <METHOD_END>
<METHOD_START> public void ( Direction org.springframework.data.jpa.domain.Direction , org.springframework.data.jpa.domain.JpaSort.Path<?,?> < ? , ? > ... org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] ) { this( org.springframework.data.jpa.domain.Direction , java.util.Arrays . java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> ( org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] ) ); }  <METHOD_END>
<METHOD_START> private void ( Direction org.springframework.data.jpa.domain.Direction , java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> < org.springframework.data.jpa.domain.JpaSort.Path<?,?> < ? , ? > > java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> ) { this( java.util.Collections .< Order > java.util.List<org.springframework.data.jpa.domain.Order> ( ) , org.springframework.data.jpa.domain.Direction , java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> ); }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private void ( java.util.List<org.springframework.data.jpa.domain.Order> < Order > java.util.List<org.springframework.data.jpa.domain.Order> , Direction org.springframework.data.jpa.domain.Direction , java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> < org.springframework.data.jpa.domain.JpaSort.Path<?,?> < ? , ? > > java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> ) { super( java.util.List<org.springframework.data.jpa.domain.Order> ( java.util.List<org.springframework.data.jpa.domain.Order> , org.springframework.data.jpa.domain.Direction , java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> ) ); }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private void ( java.util.List<org.springframework.data.jpa.domain.Order> < Order > java.util.List<org.springframework.data.jpa.domain.Order> ) { super( java.util.List<org.springframework.data.jpa.domain.Order> ); }  <METHOD_END>
<METHOD_START> public org.springframework.data.jpa.domain.JpaSort org.springframework.data.jpa.domain.JpaSort ( Direction org.springframework.data.jpa.domain.Direction , org.springframework.data.jpa.domain.Attribute<?,?> < ? , ? > ... org.springframework.data.jpa.domain.Attribute<?,?>[] ) { Assert . notNull ( org.springframework.data.jpa.domain.Attribute<?,?>[] , STRING ) ; return org.springframework.data.jpa.domain.JpaSort ( org.springframework.data.jpa.domain.Direction , org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] ( org.springframework.data.jpa.domain.Attribute<?,?>[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.jpa.domain.JpaSort org.springframework.data.jpa.domain.JpaSort ( Direction org.springframework.data.jpa.domain.Direction , org.springframework.data.jpa.domain.JpaSort.Path<?,?> < ? , ? > ... org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] ) { Assert . notNull ( org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] , STRING ) ; java.util.List<org.springframework.data.jpa.domain.Order> < Order > java.util.List<org.springframework.data.jpa.domain.Order> = new java.util.ArrayList<org.springframework.data.jpa.domain.Order> < Order > ( ) ; for ( Order org.springframework.data.jpa.domain.Order : this ) { java.util.List<org.springframework.data.jpa.domain.Order> . add ( org.springframework.data.jpa.domain.Order ) ; } return new org.springframework.data.jpa.domain.JpaSort ( java.util.List<org.springframework.data.jpa.domain.Order> , org.springframework.data.jpa.domain.Direction , java.util.Arrays . java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> ( org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.jpa.domain.JpaSort org.springframework.data.jpa.domain.JpaSort ( Direction org.springframework.data.jpa.domain.Direction , java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; java.util.List<org.springframework.data.jpa.domain.Order> < Order > java.util.List<org.springframework.data.jpa.domain.Order> = new java.util.ArrayList<org.springframework.data.jpa.domain.Order> < Order > ( ) ; for ( Order org.springframework.data.jpa.domain.Order : this ) { java.util.List<org.springframework.data.jpa.domain.Order> . add ( org.springframework.data.jpa.domain.Order ) ; } for ( java.lang.String java.lang.String : java.lang.String[] ) { java.util.List<org.springframework.data.jpa.domain.Order> . add ( new org.springframework.data.jpa.domain.JpaSort.JpaOrder ( org.springframework.data.jpa.domain.Direction , java.lang.String ) ) ; } return new org.springframework.data.jpa.domain.JpaSort ( java.util.List<org.springframework.data.jpa.domain.Order> , org.springframework.data.jpa.domain.Direction , java.util.Collections .< org.springframework.data.jpa.domain.JpaSort.Path<?,?> < ? , ? > > java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> ( ) ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.data.jpa.domain.JpaSort.Path<?,?> < ? , ? > [] org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] ( org.springframework.data.jpa.domain.Attribute<?,?> < ? , ? > [] org.springframework.data.jpa.domain.Attribute<?,?>[] ) { Assert . notNull ( org.springframework.data.jpa.domain.Attribute<?,?>[] , STRING ) ; Assert . isTrue ( attributes . length > NUMBER , STRING ) ; org.springframework.data.jpa.domain.JpaSort.Path<?,?> < ? , ? > [] org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] = new org.springframework.data.jpa.domain.JpaSort.Path [ attributes . length ] ; for ( int int = NUMBER ; int < attributes . length ; int ++ ) { org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] [ int ] = org.springframework.data.jpa.domain.JpaSort.Path ( org.springframework.data.jpa.domain.Attribute<?,?>[] [ int ] ) ; } return org.springframework.data.jpa.domain.JpaSort.Path<?,?>[] ; }  <METHOD_END>
<METHOD_START> private static java.util.List<org.springframework.data.jpa.domain.Order> < Order > java.util.List<org.springframework.data.jpa.domain.Order> ( java.util.List<org.springframework.data.jpa.domain.Order> < Order > java.util.List<org.springframework.data.jpa.domain.Order> , Direction org.springframework.data.jpa.domain.Direction , java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> < org.springframework.data.jpa.domain.JpaSort.Path<?,?> < ? , ? > > java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> ) { java.util.List<org.springframework.data.jpa.domain.Order> < Order > java.util.List<org.springframework.data.jpa.domain.Order> = new java.util.ArrayList<Sort.Order> < Sort . Sort > ( java.util.List<org.springframework.data.jpa.domain.Order> ) ; for ( org.springframework.data.jpa.domain.JpaSort.Path<?,?> < ? , ? > org.springframework.data.jpa.domain.JpaSort.Path<?,?> : java.util.List<org.springframework.data.jpa.domain.JpaSort.Path<?,?>> ) { java.util.List<org.springframework.data.jpa.domain.Order> . add ( new Order ( org.springframework.data.jpa.domain.Direction , org.springframework.data.jpa.domain.JpaSort.Path<,> . java.lang.String ( ) ) ) ; } return java.util.List<org.springframework.data.jpa.domain.Order> ; }  <METHOD_END>
<METHOD_START> public static < A extends org.springframework.data.jpa.domain.Attribute<T,S> < T , S > , T , S > org.springframework.data.jpa.domain.JpaSort.Path<T,S> < T , S > org.springframework.data.jpa.domain.JpaSort.Path<T,S> ( A A ) { Assert . notNull ( A , STRING ) ; return new org.springframework.data.jpa.domain.JpaSort.Path<T,S> < T , S > ( java.util.Arrays . java.util.List<A> ( A ) ) ; }  <METHOD_END>
<METHOD_START> public static < P extends org.springframework.data.jpa.domain.PluralAttribute<T,?,S> < T , ? , S > , T , S > org.springframework.data.jpa.domain.JpaSort.Path<T,S> < T , S > org.springframework.data.jpa.domain.JpaSort.Path<T,S> ( P P ) { Assert . notNull ( P , STRING ) ; return new org.springframework.data.jpa.domain.JpaSort.Path<T,S> < T , S > ( java.util.Arrays . java.util.List<P> ( P ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.jpa.domain.JpaSort org.springframework.data.jpa.domain.JpaSort ( java.lang.String ... java.lang.String[] ) { return org.springframework.data.jpa.domain.JpaSort ( Sort . DEFAULT_DIRECTION , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.jpa.domain.JpaSort org.springframework.data.jpa.domain.JpaSort ( Direction org.springframework.data.jpa.domain.Direction , java.lang.String ... java.lang.String[] ) { Assert . notNull ( org.springframework.data.jpa.domain.Direction , STRING ) ; Assert . notEmpty ( java.lang.String[] , STRING ) ; Assert . noNullElements ( java.lang.String[] , STRING ) ; return org.springframework.data.jpa.domain.JpaSort ( org.springframework.data.jpa.domain.Direction , java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.jpa.domain.JpaSort org.springframework.data.jpa.domain.JpaSort ( Direction org.springframework.data.jpa.domain.Direction , java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { Assert . notEmpty ( java.util.List<java.lang.String> , STRING ) ; java.util.List<org.springframework.data.jpa.domain.Order> < Order > java.util.List<org.springframework.data.jpa.domain.Order> = new java.util.ArrayList<org.springframework.data.jpa.domain.Order> < Order > ( ) ; for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { java.util.List<org.springframework.data.jpa.domain.Order> . add ( new org.springframework.data.jpa.domain.JpaSort.JpaOrder ( org.springframework.data.jpa.domain.Direction , java.lang.String ) ) ; } return new org.springframework.data.jpa.domain.JpaSort ( java.util.List<org.springframework.data.jpa.domain.Order> ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<? extends org.springframework.data.jpa.domain.Attribute<?,?>> < ? extends Attribute < ? , ? > > java.util.List<? extends org.springframework.data.jpa.domain.Attribute<?,?>> ) { this . java.util.Collection<org.springframework.data.jpa.domain.Attribute<?,?>> = java.util.Collections . java.util.List<> ( java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> public < A extends org.springframework.data.jpa.domain.Attribute<S,U> < S , U > , U > org.springframework.data.jpa.domain.JpaSort.Path<S,U> < S , U > org.springframework.data.jpa.domain.JpaSort.Path<S,U> ( A A ) { return new org.springframework.data.jpa.domain.JpaSort.Path<S,U> < S , U > ( java.util.List<org.springframework.data.jpa.domain.Attribute<?,?>> ( A ) ) ; }  <METHOD_END>
<METHOD_START> public < P extends org.springframework.data.jpa.domain.PluralAttribute<S,?,U> < S , ? , U > , U > org.springframework.data.jpa.domain.JpaSort.Path<S,U> < S , U > org.springframework.data.jpa.domain.JpaSort.Path<S,U> ( P P ) { return new org.springframework.data.jpa.domain.JpaSort.Path<S,U> < S , U > ( java.util.List<org.springframework.data.jpa.domain.Attribute<?,?>> ( P ) ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.data.jpa.domain.Attribute<?,?>> < Attribute < ? , ? > > java.util.List<org.springframework.data.jpa.domain.Attribute<?,?>> ( Attribute < ? , ? > org.springframework.data.jpa.domain.Attribute<?,?> ) { Assert . notNull ( org.springframework.data.jpa.domain.Attribute<,> , STRING ) ; java.util.List<org.springframework.data.jpa.domain.Attribute<?,?>> < Attribute < ? , ? > > java.util.List<org.springframework.data.jpa.domain.Attribute<?,?>> = new java.util.ArrayList<org.springframework.data.jpa.domain.Attribute<?,?>> < Attribute < ? , ? > > ( java.util.Collection<org.springframework.data.jpa.domain.Attribute<?,?>> . size ( ) + NUMBER ) ; java.util.List<org.springframework.data.jpa.domain.Attribute<?,?>> . addAll ( java.util.Collection<org.springframework.data.jpa.domain.Attribute<?,?>> ) ; java.util.List<org.springframework.data.jpa.domain.Attribute<?,?>> . add ( org.springframework.data.jpa.domain.Attribute<,> ) ; return java.util.List<org.springframework.data.jpa.domain.Attribute<?,?>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( Attribute < ? , ? > org.springframework.data.jpa.domain.Attribute<?,?> : java.util.Collection<org.springframework.data.jpa.domain.Attribute<?,?>> ) { java.lang.StringBuilder . java.lang.StringBuilder ( org.springframework.data.jpa.domain.Attribute<,> . getName ( ) ) . append ( STRING ) ; } return java.lang.StringBuilder . int ( ) == NUMBER ? STRING : java.lang.StringBuilder . java.lang.String ( NUMBER , java.lang.StringBuilder . int ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private void ( Direction org.springframework.data.jpa.domain.Direction , java.lang.String java.lang.String ) { this( org.springframework.data.jpa.domain.Direction , java.lang.String , NullHandling . NATIVE ); }  <METHOD_END>
<METHOD_START> private void ( Direction org.springframework.data.jpa.domain.Direction , java.lang.String java.lang.String , NullHandling org.springframework.data.jpa.domain.NullHandling ) { this( org.springframework.data.jpa.domain.Direction , java.lang.String , org.springframework.data.jpa.domain.NullHandling , false , true ); }  <METHOD_END>
<METHOD_START> private void ( Direction org.springframework.data.jpa.domain.Direction , java.lang.String java.lang.String , NullHandling org.springframework.data.jpa.domain.NullHandling , boolean boolean , boolean boolean ) { super( org.springframework.data.jpa.domain.Direction , java.lang.String , org.springframework.data.jpa.domain.NullHandling ); this . boolean = boolean ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.jpa.domain.JpaSort.JpaOrder org.springframework.data.jpa.domain.JpaSort.JpaOrder ( Direction org.springframework.data.jpa.domain.Direction ) { return new org.springframework.data.jpa.domain.JpaSort.JpaOrder ( org.springframework.data.jpa.domain.Direction , getProperty ( ) , getNullHandling ( ) , boolean ( ) , this . boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.jpa.domain.JpaSort.JpaOrder org.springframework.data.jpa.domain.JpaSort.JpaOrder ( NullHandling org.springframework.data.jpa.domain.NullHandling ) { return new org.springframework.data.jpa.domain.JpaSort.JpaOrder ( getDirection ( ) , getProperty ( ) , org.springframework.data.jpa.domain.NullHandling , boolean ( ) , this . boolean ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.jpa.domain.Sort org.springframework.data.jpa.domain.Sort ( java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; Assert . noNullElements ( java.lang.String[] , STRING ) ; java.util.List<org.springframework.data.jpa.domain.Order> < Order > java.util.List<org.springframework.data.jpa.domain.Order> = new java.util.ArrayList<org.springframework.data.jpa.domain.Order> < Order > ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { java.util.List<org.springframework.data.jpa.domain.Order> . add ( new org.springframework.data.jpa.domain.JpaSort.JpaOrder ( getDirection ( ) , java.lang.String , getNullHandling ( ) , boolean ( ) , this . boolean ) ) ; } return Sort . by ( java.util.List<org.springframework.data.jpa.domain.Order> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.jpa.domain.JpaSort.JpaOrder org.springframework.data.jpa.domain.JpaSort.JpaOrder ( ) { return new org.springframework.data.jpa.domain.JpaSort.JpaOrder ( getDirection ( ) , getProperty ( ) , getNullHandling ( ) , true , this . boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return super. isIgnoreCase ( ) || boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
