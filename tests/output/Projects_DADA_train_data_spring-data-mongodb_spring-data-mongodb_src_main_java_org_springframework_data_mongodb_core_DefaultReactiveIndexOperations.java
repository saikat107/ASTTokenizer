<METHOD_START> public void ( ReactiveMongoOperations org.springframework.data.mongodb.core.ReactiveMongoOperations , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.data.mongodb.core.ReactiveMongoOperations , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; this . org.springframework.data.mongodb.core.ReactiveMongoOperations = org.springframework.data.mongodb.core.ReactiveMongoOperations ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.Mono<java.lang.String> < java.lang.String > org.springframework.data.mongodb.core.Mono<java.lang.String> ( final IndexDefinition org.springframework.data.mongodb.core.IndexDefinition ) { return org.springframework.data.mongodb.core.ReactiveMongoOperations . execute ( java.lang.String , ( ReactiveCollectionCallback < java.lang.String > ) collection -> { Document indexOptions = indexDefinition . getIndexOptions ( ) ; if ( indexOptions != null ) { return collection . createIndex ( indexDefinition . getIndexKeys ( ) , IndexConverters . indexDefinitionToIndexOptionsConverter ( ) . convert ( indexDefinition ) ) ; } return collection . createIndex ( indexDefinition . getIndexKeys ( ) ) ; } ) . next ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.Mono<java.lang.Void> < java.lang.Void > org.springframework.data.mongodb.core.Mono<java.lang.Void> ( final java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.ReactiveMongoOperations . execute ( java.lang.String , collection -> { return Mono . from ( collection . dropIndex ( name ) ) ; } ) . flatMap ( success -> Mono .< Void > empty ( ) ) . next ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.Mono<java.lang.Void> < java.lang.Void > org.springframework.data.mongodb.core.Mono<java.lang.Void> ( ) { return org.springframework.data.mongodb.core.Mono<java.lang.Void> ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.Flux<org.springframework.data.mongodb.core.IndexInfo> < IndexInfo > org.springframework.data.mongodb.core.Flux<org.springframework.data.mongodb.core.IndexInfo> ( ) { return org.springframework.data.mongodb.core.ReactiveMongoOperations . execute ( java.lang.String , collection -> { ListIndexesPublisher < Document > indexesPublisher = collection . listIndexes ( Document .class ) ; return Flux . from ( indexesPublisher ) . map ( IndexConverters . documentToIndexInfoConverter ( ) :: convert ) ; } ) ; }  <METHOD_END>
