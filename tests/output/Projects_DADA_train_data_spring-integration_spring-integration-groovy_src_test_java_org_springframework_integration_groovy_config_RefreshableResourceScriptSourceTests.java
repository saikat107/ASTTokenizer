<METHOD_START> @ Test public void void ( ) java.lang.Exception { RefreshableResourceScriptSource org.springframework.integration.groovy.config.RefreshableResourceScriptSource = new RefreshableResourceScriptSource ( new ByteArrayResource ( STRING . byte[] ( ) ) , NUMBER ) ; assertEquals ( STRING , org.springframework.integration.groovy.config.RefreshableResourceScriptSource . getScriptAsString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RefreshableResourceScriptSource org.springframework.integration.groovy.config.RefreshableResourceScriptSource = new RefreshableResourceScriptSource ( new ByteArrayResource ( STRING . byte[] ( ) ) , NUMBER ) ; assertEquals ( false , org.springframework.integration.groovy.config.RefreshableResourceScriptSource . isModified ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RefreshableResourceScriptSource org.springframework.integration.groovy.config.RefreshableResourceScriptSource = new RefreshableResourceScriptSource ( new ByteArrayResource ( STRING . byte[] ( ) ) { @ java.lang.Override public long long ( ) java.io.IOException { return java.lang.System . long ( ) ; } } , NUMBER ) ; java.lang.Thread . void ( NUMBER ) ; assertEquals ( true , org.springframework.integration.groovy.config.RefreshableResourceScriptSource . isModified ( ) ) ; assertEquals ( STRING , org.springframework.integration.groovy.config.RefreshableResourceScriptSource . getScriptAsString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) java.io.IOException { return java.lang.System . long ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RefreshableResourceScriptSource org.springframework.integration.groovy.config.RefreshableResourceScriptSource = new RefreshableResourceScriptSource ( new ByteArrayResource ( STRING . byte[] ( ) ) { @ java.lang.Override public long long ( ) java.io.IOException { return java.lang.System . long ( ) ; } } , - NUMBER ) ; assertEquals ( false , org.springframework.integration.groovy.config.RefreshableResourceScriptSource . isModified ( ) ) ; assertEquals ( STRING , org.springframework.integration.groovy.config.RefreshableResourceScriptSource . getScriptAsString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) java.io.IOException { return java.lang.System . long ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RefreshableResourceScriptSource org.springframework.integration.groovy.config.RefreshableResourceScriptSource = new RefreshableResourceScriptSource ( new ByteArrayResource ( STRING . byte[] ( ) ) { @ java.lang.Override public java.lang.String java.lang.String ( ) java.lang.IllegalStateException { return STRING ; } } , NUMBER ) ; assertEquals ( STRING , org.springframework.integration.groovy.config.RefreshableResourceScriptSource . suggestedClassName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) java.lang.IllegalStateException { return STRING ; }  <METHOD_END>
