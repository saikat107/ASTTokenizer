<METHOD_START> public void ( CassandraQueryMethod org.springframework.data.cassandra.repository.query.CassandraQueryMethod , java.lang.Object ... java.lang.Object[] ) { super( org.springframework.data.cassandra.repository.query.CassandraQueryMethod . getParameters ( ) , java.lang.Object[] ); this . java.util.List<java.lang.Object> = java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.cassandra.repository.query.CassandraType org.springframework.data.cassandra.repository.query.CassandraType ( int int ) { return org.springframework.data.cassandra.repository.query.CassandraParameters ( ) . getParameter ( int ) . getCassandraType ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.cassandra.repository.query.DataType org.springframework.data.cassandra.repository.query.DataType ( int int ) { CassandraType org.springframework.data.cassandra.repository.query.CassandraType = org.springframework.data.cassandra.repository.query.CassandraType ( int ) ; return ( org.springframework.data.cassandra.repository.query.CassandraType != null ? CassandraSimpleTypeHolder . getDataTypeFor ( org.springframework.data.cassandra.repository.query.CassandraType . type ( ) ) : CassandraSimpleTypeHolder . getDataTypeFor ( java.lang.Class<?> ( int ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.cassandra.repository.query.CassandraParameters org.springframework.data.cassandra.repository.query.CassandraParameters ( ) { return ( CassandraParameters ) super. getParameters ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( int int ) { return org.springframework.data.cassandra.repository.query.CassandraParameters ( ) . getParameter ( int ) . getType ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object [] java.lang.Object[] ( ) { return java.util.List<java.lang.Object> . java.lang.Object[] ( ) ; }  <METHOD_END>
