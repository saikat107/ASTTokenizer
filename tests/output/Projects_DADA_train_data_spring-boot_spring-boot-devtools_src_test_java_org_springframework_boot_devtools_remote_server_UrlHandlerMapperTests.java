<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.devtools.remote.server.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.devtools.remote.server.ExpectedException . expectMessage ( STRING ) ; new UrlHandlerMapper ( null , this . org.springframework.boot.devtools.remote.server.Handler ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.devtools.remote.server.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.devtools.remote.server.ExpectedException . expectMessage ( STRING ) ; new UrlHandlerMapper ( STRING , this . org.springframework.boot.devtools.remote.server.Handler ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.devtools.remote.server.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.devtools.remote.server.ExpectedException . expectMessage ( STRING ) ; new UrlHandlerMapper ( STRING , this . org.springframework.boot.devtools.remote.server.Handler ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { UrlHandlerMapper org.springframework.boot.devtools.remote.server.UrlHandlerMapper = new UrlHandlerMapper ( STRING , this . org.springframework.boot.devtools.remote.server.Handler ) ; HttpServletRequest org.springframework.boot.devtools.remote.server.HttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; ServerHttpRequest org.springframework.boot.devtools.remote.server.ServerHttpRequest = new ServletServerHttpRequest ( org.springframework.boot.devtools.remote.server.HttpServletRequest ) ; assertThat ( org.springframework.boot.devtools.remote.server.UrlHandlerMapper . getHandler ( org.springframework.boot.devtools.remote.server.ServerHttpRequest ) ) . isEqualTo ( this . org.springframework.boot.devtools.remote.server.Handler ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { UrlHandlerMapper org.springframework.boot.devtools.remote.server.UrlHandlerMapper = new UrlHandlerMapper ( STRING , this . org.springframework.boot.devtools.remote.server.Handler ) ; HttpServletRequest org.springframework.boot.devtools.remote.server.HttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; ServerHttpRequest org.springframework.boot.devtools.remote.server.ServerHttpRequest = new ServletServerHttpRequest ( org.springframework.boot.devtools.remote.server.HttpServletRequest ) ; assertThat ( org.springframework.boot.devtools.remote.server.UrlHandlerMapper . getHandler ( org.springframework.boot.devtools.remote.server.ServerHttpRequest ) ) . isNull ( ) ; }  <METHOD_END>
