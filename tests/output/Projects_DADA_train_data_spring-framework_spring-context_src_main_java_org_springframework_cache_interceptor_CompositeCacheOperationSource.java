<METHOD_START> public void ( CacheOperationSource ... org.springframework.cache.interceptor.CacheOperationSource[] ) { Assert . notEmpty ( org.springframework.cache.interceptor.CacheOperationSource[] , STRING ) ; this . org.springframework.cache.interceptor.CacheOperationSource[] = org.springframework.cache.interceptor.CacheOperationSource[] ; }  <METHOD_END>
<METHOD_START> public final org.springframework.cache.interceptor.CacheOperationSource [] org.springframework.cache.interceptor.CacheOperationSource[] ( ) { return this . org.springframework.cache.interceptor.CacheOperationSource[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<org.springframework.cache.interceptor.CacheOperation> < CacheOperation > java.util.Collection<org.springframework.cache.interceptor.CacheOperation> ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> ) { java.util.Collection<org.springframework.cache.interceptor.CacheOperation> < CacheOperation > java.util.Collection<org.springframework.cache.interceptor.CacheOperation> = null ; for ( CacheOperationSource org.springframework.cache.interceptor.CacheOperationSource : this . org.springframework.cache.interceptor.CacheOperationSource[] ) { java.util.Collection<org.springframework.cache.interceptor.CacheOperation> < CacheOperation > java.util.Collection<org.springframework.cache.interceptor.CacheOperation> = org.springframework.cache.interceptor.CacheOperationSource . getCacheOperations ( java.lang.reflect.Method , java.lang.Class<> ) ; if ( java.util.Collection<org.springframework.cache.interceptor.CacheOperation> != null ) { if ( java.util.Collection<org.springframework.cache.interceptor.CacheOperation> == null ) { java.util.Collection<org.springframework.cache.interceptor.CacheOperation> = new java.util.ArrayList <> ( ) ; } java.util.Collection<org.springframework.cache.interceptor.CacheOperation> . addAll ( java.util.Collection<org.springframework.cache.interceptor.CacheOperation> ) ; } } return java.util.Collection<org.springframework.cache.interceptor.CacheOperation> ; }  <METHOD_END>
