<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; RecordFactory org.springframework.jca.cci.RecordFactory = mock ( RecordFactory .class ) ; IndexedRecord org.springframework.jca.cci.IndexedRecord = mock ( IndexedRecord .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willReturn ( org.springframework.jca.cci.RecordFactory ) ; given ( org.springframework.jca.cci.RecordFactory . createIndexedRecord ( STRING ) ) . willReturn ( org.springframework.jca.cci.IndexedRecord ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . createIndexedRecord ( STRING ) ; verify ( org.springframework.jca.cci.RecordFactory ) . createIndexedRecord ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; RecordFactory org.springframework.jca.cci.RecordFactory = mock ( RecordFactory .class ) ; MappedRecord org.springframework.jca.cci.MappedRecord = mock ( MappedRecord .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willReturn ( org.springframework.jca.cci.RecordFactory ) ; given ( org.springframework.jca.cci.RecordFactory . createMappedRecord ( STRING ) ) . willReturn ( org.springframework.jca.cci.MappedRecord ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . createMappedRecord ( STRING ) ; verify ( org.springframework.jca.cci.RecordFactory ) . createMappedRecord ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ) . willReturn ( true ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; final Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willThrow ( new NotSupportedException ( STRING ) ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ) . willReturn ( true ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . setOutputRecordCreator ( new RecordCreator ( ) { @ java.lang.Override public org.springframework.jca.cci.Record org.springframework.jca.cci.Record ( RecordFactory org.springframework.jca.cci.RecordFactory ) { assertTrue ( org.springframework.jca.cci.RecordFactory instanceof NotSupportedRecordFactory ) ; return org.springframework.jca.cci.Record ; } } ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jca.cci.Record org.springframework.jca.cci.Record ( RecordFactory org.springframework.jca.cci.RecordFactory ) { assertTrue ( org.springframework.jca.cci.RecordFactory instanceof NotSupportedRecordFactory ) ; return org.springframework.jca.cci.Record ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; RecordFactory org.springframework.jca.cci.RecordFactory = mock ( RecordFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; RecordCreator org.springframework.jca.cci.RecordCreator = mock ( RecordCreator .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; final Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willReturn ( org.springframework.jca.cci.RecordFactory ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.RecordCreator . createRecord ( org.springframework.jca.cci.RecordFactory ) ) . willReturn ( org.springframework.jca.cci.Record ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ) . willReturn ( true ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . setOutputRecordCreator ( org.springframework.jca.cci.RecordCreator ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ) . willReturn ( org.springframework.jca.cci.Record ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) org.springframework.jca.cci.ResourceException , java.sql.SQLException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; RecordFactory org.springframework.jca.cci.RecordFactory = mock ( RecordFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; RecordExtractor < java.lang.Object > org.springframework.jca.cci.RecordExtractor<java.lang.Object> = mock ( RecordExtractor .class ) ; RecordCreator org.springframework.jca.cci.RecordCreator = mock ( RecordCreator .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willReturn ( org.springframework.jca.cci.RecordFactory ) ; given ( org.springframework.jca.cci.RecordCreator . createRecord ( org.springframework.jca.cci.RecordFactory ) ) . willReturn ( org.springframework.jca.cci.Record ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ) . willReturn ( true ) ; given ( org.springframework.jca.cci.RecordExtractor<java.lang.Object> . extractData ( org.springframework.jca.cci.Record ) ) . willReturn ( new java.lang.Object ( ) ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . setOutputRecordCreator ( org.springframework.jca.cci.RecordCreator ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.RecordExtractor<java.lang.Object> ) ; verify ( org.springframework.jca.cci.RecordExtractor<java.lang.Object> ) . extractData ( org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) org.springframework.jca.cci.ResourceException , java.sql.SQLException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; RecordExtractor < java.lang.Object > org.springframework.jca.cci.RecordExtractor<java.lang.Object> = mock ( RecordExtractor .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ) . willReturn ( org.springframework.jca.cci.Record ) ; given ( org.springframework.jca.cci.RecordExtractor<java.lang.Object> . extractData ( org.springframework.jca.cci.Record ) ) . willReturn ( new java.lang.Object ( ) ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.RecordExtractor<java.lang.Object> ) ; verify ( org.springframework.jca.cci.RecordExtractor<java.lang.Object> ) . extractData ( org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; RecordFactory org.springframework.jca.cci.RecordFactory = mock ( RecordFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; RecordCreator org.springframework.jca.cci.RecordCreator = mock ( RecordCreator .class ) ; RecordCreator org.springframework.jca.cci.RecordCreator = mock ( RecordCreator .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willReturn ( org.springframework.jca.cci.RecordFactory ) ; given ( org.springframework.jca.cci.RecordCreator . createRecord ( org.springframework.jca.cci.RecordFactory ) ) . willReturn ( org.springframework.jca.cci.Record ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.RecordCreator . createRecord ( org.springframework.jca.cci.RecordFactory ) ) . willReturn ( org.springframework.jca.cci.Record ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willReturn ( org.springframework.jca.cci.RecordFactory ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ) . willReturn ( true ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . setOutputRecordCreator ( org.springframework.jca.cci.RecordCreator ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.RecordCreator ) ; verify ( org.springframework.jca.cci.Interaction ) . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; RecordFactory org.springframework.jca.cci.RecordFactory = mock ( RecordFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; RecordCreator org.springframework.jca.cci.RecordCreator = mock ( RecordCreator .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willReturn ( org.springframework.jca.cci.RecordFactory ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.RecordCreator . createRecord ( org.springframework.jca.cci.RecordFactory ) ) . willReturn ( org.springframework.jca.cci.Record ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ) . willReturn ( org.springframework.jca.cci.Record ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.RecordCreator ) ; verify ( org.springframework.jca.cci.Interaction ) . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) org.springframework.jca.cci.ResourceException , java.sql.SQLException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; RecordFactory org.springframework.jca.cci.RecordFactory = mock ( RecordFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; RecordCreator org.springframework.jca.cci.RecordCreator = mock ( RecordCreator .class ) ; RecordExtractor < java.lang.Object > org.springframework.jca.cci.RecordExtractor<java.lang.Object> = mock ( RecordExtractor .class ) ; RecordCreator org.springframework.jca.cci.RecordCreator = mock ( RecordCreator .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; java.lang.Object java.lang.Object = new java.lang.Object ( ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willReturn ( org.springframework.jca.cci.RecordFactory ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.RecordCreator . createRecord ( org.springframework.jca.cci.RecordFactory ) ) . willReturn ( org.springframework.jca.cci.Record ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willReturn ( org.springframework.jca.cci.RecordFactory ) ; given ( org.springframework.jca.cci.RecordCreator . createRecord ( org.springframework.jca.cci.RecordFactory ) ) . willReturn ( org.springframework.jca.cci.Record ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ) . willReturn ( true ) ; given ( org.springframework.jca.cci.RecordExtractor<java.lang.Object> . extractData ( org.springframework.jca.cci.Record ) ) . willReturn ( java.lang.Object ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . setOutputRecordCreator ( org.springframework.jca.cci.RecordCreator ) ; assertEquals ( java.lang.Object , org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.RecordCreator , org.springframework.jca.cci.RecordExtractor<java.lang.Object> ) ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) org.springframework.jca.cci.ResourceException , java.sql.SQLException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; RecordFactory org.springframework.jca.cci.RecordFactory = mock ( RecordFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; RecordCreator org.springframework.jca.cci.RecordCreator = mock ( RecordCreator .class ) ; RecordExtractor < java.lang.Object > org.springframework.jca.cci.RecordExtractor<java.lang.Object> = mock ( RecordExtractor .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willReturn ( org.springframework.jca.cci.RecordFactory ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.RecordCreator . createRecord ( org.springframework.jca.cci.RecordFactory ) ) . willReturn ( org.springframework.jca.cci.Record ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ) . willReturn ( org.springframework.jca.cci.Record ) ; given ( org.springframework.jca.cci.RecordExtractor<java.lang.Object> . extractData ( org.springframework.jca.cci.Record ) ) . willReturn ( new java.lang.Object ( ) ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.RecordCreator , org.springframework.jca.cci.RecordExtractor<java.lang.Object> ) ; verify ( org.springframework.jca.cci.RecordExtractor<java.lang.Object> ) . extractData ( org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; ConnectionSpec org.springframework.jca.cci.ConnectionSpec = mock ( ConnectionSpec .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( org.springframework.jca.cci.ConnectionSpec ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ) . willReturn ( true ) ; ConnectionSpecConnectionFactoryAdapter org.springframework.jca.cci.ConnectionSpecConnectionFactoryAdapter = new ConnectionSpecConnectionFactoryAdapter ( ) ; org.springframework.jca.cci.ConnectionSpecConnectionFactoryAdapter . setTargetConnectionFactory ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.ConnectionSpecConnectionFactoryAdapter . setConnectionSpec ( org.springframework.jca.cci.ConnectionSpec ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionSpecConnectionFactoryAdapter ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) org.springframework.jca.cci.ResourceException , java.sql.SQLException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; RecordFactory org.springframework.jca.cci.RecordFactory = mock ( RecordFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; ResultSet org.springframework.jca.cci.ResultSet = mock ( ResultSet .class ) ; RecordCreator org.springframework.jca.cci.RecordCreator = mock ( RecordCreator .class ) ; RecordExtractor < java.lang.Object > org.springframework.jca.cci.RecordExtractor<java.lang.Object> = mock ( RecordExtractor .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getRecordFactory ( ) ) . willReturn ( org.springframework.jca.cci.RecordFactory ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.RecordCreator . createRecord ( org.springframework.jca.cci.RecordFactory ) ) . willReturn ( org.springframework.jca.cci.Record ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ) . willReturn ( org.springframework.jca.cci.ResultSet ) ; given ( org.springframework.jca.cci.RecordExtractor<java.lang.Object> . extractData ( org.springframework.jca.cci.ResultSet ) ) . willReturn ( new java.lang.Object ( ) ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.RecordCreator , org.springframework.jca.cci.RecordExtractor<java.lang.Object> ) ; verify ( org.springframework.jca.cci.RecordExtractor<java.lang.Object> ) . extractData ( org.springframework.jca.cci.ResultSet ) ; verify ( org.springframework.jca.cci.ResultSet ) . close ( ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) org.springframework.jca.cci.ResourceException , java.sql.SQLException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; ConnectionCallback < java.lang.Object > org.springframework.jca.cci.ConnectionCallback<java.lang.Object> = mock ( ConnectionCallback .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.ConnectionCallback<java.lang.Object> . doInConnection ( org.springframework.jca.cci.Connection , org.springframework.jca.cci.ConnectionFactory ) ) . willReturn ( new java.lang.Object ( ) ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.ConnectionCallback<java.lang.Object> ) ; verify ( org.springframework.jca.cci.ConnectionCallback<java.lang.Object> ) . doInConnection ( org.springframework.jca.cci.Connection , org.springframework.jca.cci.ConnectionFactory ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) org.springframework.jca.cci.ResourceException , java.sql.SQLException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; InteractionCallback < java.lang.Object > org.springframework.jca.cci.InteractionCallback<java.lang.Object> = mock ( InteractionCallback .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.InteractionCallback<java.lang.Object> . doInInteraction ( org.springframework.jca.cci.Interaction , org.springframework.jca.cci.ConnectionFactory ) ) . willReturn ( new java.lang.Object ( ) ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionCallback<java.lang.Object> ) ; verify ( org.springframework.jca.cci.InteractionCallback<java.lang.Object> ) . doInInteraction ( org.springframework.jca.cci.Interaction , org.springframework.jca.cci.ConnectionFactory ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; RecordCreator org.springframework.jca.cci.RecordCreator = mock ( RecordCreator .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ) . willReturn ( true ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . setOutputRecordCreator ( org.springframework.jca.cci.RecordCreator ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ) . willReturn ( true ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.jca.cci.ResourceException { ConnectionFactory org.springframework.jca.cci.ConnectionFactory = mock ( ConnectionFactory .class ) ; Connection org.springframework.jca.cci.Connection = mock ( Connection .class ) ; Interaction org.springframework.jca.cci.Interaction = mock ( Interaction .class ) ; Record org.springframework.jca.cci.Record = mock ( Record .class ) ; InteractionSpec org.springframework.jca.cci.InteractionSpec = mock ( InteractionSpec .class ) ; given ( org.springframework.jca.cci.ConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.jca.cci.Connection ) ; given ( org.springframework.jca.cci.Connection . createInteraction ( ) ) . willReturn ( org.springframework.jca.cci.Interaction ) ; given ( org.springframework.jca.cci.Interaction . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ) . willReturn ( null ) ; CciTemplate org.springframework.jca.cci.CciTemplate = new CciTemplate ( org.springframework.jca.cci.ConnectionFactory ) ; Record org.springframework.jca.cci.Record = org.springframework.jca.cci.CciTemplate . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ; assertNull ( org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . execute ( org.springframework.jca.cci.InteractionSpec , org.springframework.jca.cci.Record ) ; verify ( org.springframework.jca.cci.Interaction ) . close ( ) ; verify ( org.springframework.jca.cci.Connection ) . close ( ) ; }  <METHOD_END>
