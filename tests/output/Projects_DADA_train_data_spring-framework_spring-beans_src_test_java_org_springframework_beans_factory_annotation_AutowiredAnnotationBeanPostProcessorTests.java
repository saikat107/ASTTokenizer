<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new GenericBeanDefinition ( ) ) ; try { org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; fail ( STRING ) ; } catch ( BeanCreationException org.springframework.beans.factory.annotation.BeanCreationException ) { assertTrue ( org.springframework.beans.factory.annotation.BeanCreationException . getRootCause ( ) instanceof java.lang.IllegalStateException ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ResourceInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerResolvableDependency ( BeanFactory .class , org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.BeanFactory ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.BeanFactory ( ) ) ; java.lang.String [] java.lang.String[] = org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getDependenciesForBean ( STRING ) ; assertEquals ( NUMBER , java.lang.String[] . int ) ; assertEquals ( STRING , java.lang.String[] [ NUMBER ] ) ; assertEquals ( STRING , java.lang.String[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerResolvableDependency ( BeanFactory .class , org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean .class ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.BeanFactory ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerResolvableDependency ( BeanFactory .class , org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OverriddenExtendedResourceInjectionBean .class ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OverriddenExtendedResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OverriddenExtendedResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OverriddenExtendedResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OverriddenExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OverriddenExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OverriddenExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OverriddenExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OverriddenExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OverriddenExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.BeanFactory ( ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.NonPublicResourceInjectionBean<org.springframework.beans.factory.annotation.NestedTestBean> . boolean ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OverriddenExtendedResourceInjectionBean . boolean ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerResolvableDependency ( BeanFactory .class , org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.DefaultMethodResourceInjectionBean .class ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.DefaultMethodResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.DefaultMethodResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.DefaultMethodResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.DefaultMethodResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.DefaultMethodResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.DefaultMethodResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.DefaultMethodResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.DefaultMethodResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.DefaultMethodResourceInjectionBean . org.springframework.beans.factory.annotation.BeanFactory ( ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.NonPublicResourceInjectionBean<org.springframework.beans.factory.annotation.NestedTestBean> . boolean ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.DefaultMethodResourceInjectionBean . boolean ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerResolvableDependency ( BeanFactory .class , org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( new RequiredAnnotationBeanPostProcessor ( ) ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.TypedExtendedResourceInjectionBean . org.springframework.beans.factory.annotation.BeanFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; IndexedTestBean org.springframework.beans.factory.annotation.IndexedTestBean = new IndexedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.IndexedTestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.IndexedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.IndexedTestBean ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) . length ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) [ NUMBER ] ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] . length ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] [ NUMBER ] ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; IndexedTestBean org.springframework.beans.factory.annotation.IndexedTestBean = new IndexedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.IndexedTestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.IndexedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.IndexedTestBean ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . get ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . get ( NUMBER ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; IndexedTestBean org.springframework.beans.factory.annotation.IndexedTestBean = new IndexedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.IndexedTestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.IndexedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.IndexedTestBean ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . get ( NUMBER ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setDependencyComparator ( AnnotationAwareOrderComparator . INSTANCE ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; IndexedTestBean org.springframework.beans.factory.annotation.IndexedTestBean = new IndexedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.IndexedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean . void ( NUMBER ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean . void ( NUMBER ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.IndexedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.IndexedTestBean ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) . length ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) [ NUMBER ] ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] . length ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] [ NUMBER ] ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setDependencyComparator ( AnnotationAwareOrderComparator . INSTANCE ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; IndexedTestBean org.springframework.beans.factory.annotation.IndexedTestBean = new IndexedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.IndexedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.IndexedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.IndexedTestBean ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) . length ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) [ NUMBER ] ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] . length ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] [ NUMBER ] ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setDependencyComparator ( AnnotationAwareOrderComparator . INSTANCE ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; IndexedTestBean org.springframework.beans.factory.annotation.IndexedTestBean = new IndexedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.IndexedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean . void ( NUMBER ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean . void ( NUMBER ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.IndexedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.IndexedTestBean ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . get ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . get ( NUMBER ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OrderedNestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setDependencyComparator ( AnnotationAwareOrderComparator . INSTANCE ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; IndexedTestBean org.springframework.beans.factory.annotation.IndexedTestBean = new IndexedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.IndexedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.IndexedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.IndexedTestBean ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . get ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . get ( NUMBER ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.OptionalCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> . get ( NUMBER ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerResolvableDependency ( BeanFactory .class , org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ConfigurableListableBeanFactory ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ConfigurableListableBeanFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerResolvableDependency ( BeanFactory .class , org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.NullNestedTestBeanFactoryBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , new NestedTestBean ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ConfigurableListableBeanFactory ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorResourceInjectionBean . org.springframework.beans.factory.annotation.ConfigurableListableBeanFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) . length ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) [ NUMBER ] ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorWithoutFallbackBean .class ) ) ; try { org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; fail ( STRING ) ; } catch ( UnsatisfiedDependencyException org.springframework.beans.factory.annotation.UnsatisfiedDependencyException ) { assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorWithoutFallbackBean .class , org.springframework.beans.factory.annotation.UnsatisfiedDependencyException . getInjectionPoint ( ) . getMethodParameter ( ) . getDeclaringClass ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean = new NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . get ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . get ( NUMBER ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setDependencyComparator ( AnnotationAwareOrderComparator . INSTANCE ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) . length ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.NestedTestBean[] ( ) [ NUMBER ] ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setDependencyComparator ( AnnotationAwareOrderComparator . INSTANCE ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . size ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder1NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . get ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FixedOrder2NestedTestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsCollectionResourceInjectionBean . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) . get ( NUMBER ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ConstructorsResourceInjectionBean . org.springframework.beans.factory.annotation.ITestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( STRING ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( STRING ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . size ( ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . values ( ) . contains ( org.springframework.beans.factory.annotation.TestBean ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . values ( ) . contains ( org.springframework.beans.factory.annotation.TestBean ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . size ( ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . values ( ) . contains ( org.springframework.beans.factory.annotation.TestBean ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . values ( ) . contains ( org.springframework.beans.factory.annotation.TestBean ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( STRING ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( STRING ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . size ( ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . values ( ) . contains ( org.springframework.beans.factory.annotation.TestBean ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . values ( ) . contains ( org.springframework.beans.factory.annotation.TestBean ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . size ( ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . values ( ) . contains ( org.springframework.beans.factory.annotation.TestBean ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . values ( ) . contains ( org.springframework.beans.factory.annotation.TestBean ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . size ( ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . values ( ) . contains ( org.springframework.beans.factory.annotation.TestBean ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . size ( ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . values ( ) . contains ( org.springframework.beans.factory.annotation.TestBean ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; try { org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; fail ( STRING ) ; } catch ( UnsatisfiedDependencyException org.springframework.beans.factory.annotation.UnsatisfiedDependencyException ) { assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean .class , org.springframework.beans.factory.annotation.UnsatisfiedDependencyException . getInjectionPoint ( ) . getMethodParameter ( ) . getDeclaringClass ( ) ) ; } org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( TestBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setAutowireCandidate ( false ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; TestBean org.springframework.beans.factory.annotation.TestBean = ( TestBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . size ( ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) . values ( ) . contains ( org.springframework.beans.factory.annotation.TestBean ) ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapMethodInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanMap org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanMap = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanMap ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanMap . org.springframework.beans.factory.annotation.TestBean ( STRING , new TestBean ( STRING ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanMap . org.springframework.beans.factory.annotation.TestBean ( STRING , new TestBean ( STRING ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanMap ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , new java.util.Properties ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanMap , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanMap , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CollectionFactoryMethods .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setUniqueFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , new java.util.HashMap <> ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MapConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMapConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomCollectionFactoryMethods .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setUniqueFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , new TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , new TestBean ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMapConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMapConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMapConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMapConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMapConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMapConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMapConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanSet org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanSet = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanSet ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanSet . boolean ( new TestBean ( STRING ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanSet . boolean ( new TestBean ( STRING ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanSet ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , new java.util.HashSet <> ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanSet , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean . java.util.Set<org.springframework.beans.factory.annotation.TestBean> ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyTestBeanSet , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean . java.util.Set<org.springframework.beans.factory.annotation.TestBean> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CollectionFactoryMethods .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setUniqueFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , new java.util.HashSet <> ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean . java.util.Set<org.springframework.beans.factory.annotation.TestBean> ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SetConstructorInjectionBean . java.util.Set<org.springframework.beans.factory.annotation.TestBean> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSetConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomCollectionFactoryMethods .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setUniqueFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSetConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSetConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSetConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSetConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSetConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSetConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSetConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean ) ; assertEquals ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionBean ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectionCollectionBean ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryConstructorInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryConstructorInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( BeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertNotSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryQualifierInjectionBean .class ) ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( TestBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . addQualifier ( new AutowireCandidateQualifier ( Qualifier .class , STRING ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryQualifierInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryQualifierInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryQualifierInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryQualifierInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryQualifierInjectionBean .class ) ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( TestBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setQualifiedElement ( ReflectionUtils . findMethod ( java.lang.Class<? extends org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests> ( ) , STRING ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryQualifierInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryQualifierInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryQualifierInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryQualifierInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Qualifier ( STRING ) private void void ( ) {}  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setSerializationId ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean ) SerializationTestUtils . serializeAndDeserialize ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ObjectFactoryFieldInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean .class ) ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( TestBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertEquals ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertEquals ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING , STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( STRING ) ) ; assertEquals ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertEquals ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertEquals ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertEquals ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; try { org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ; fail ( STRING ) ; } catch ( NoSuchBeanDefinitionException org.springframework.beans.factory.annotation.NoSuchBeanDefinitionException ) { } assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertEquals ( new TestBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertEquals ( new TestBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( TestBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; try { org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ; fail ( STRING ) ; } catch ( NoUniqueBeanDefinitionException org.springframework.beans.factory.annotation.NoUniqueBeanDefinitionException ) { } try { org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ; fail ( STRING ) ; } catch ( NoUniqueBeanDefinitionException org.springframework.beans.factory.annotation.NoUniqueBeanDefinitionException ) { } assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean .class ) ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( TestBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setPrimary ( true ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( TestBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setLazyInit ( true ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SmartObjectFactoryInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertFalse ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . containsSingleton ( STRING ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredFieldResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredFieldResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredFieldResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredFieldResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredFieldResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredFieldResourceInjectionBean .class ) ) ; try { org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; fail ( STRING ) ; } catch ( UnsatisfiedDependencyException org.springframework.beans.factory.annotation.UnsatisfiedDependencyException ) { assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredFieldResourceInjectionBean .class , org.springframework.beans.factory.annotation.UnsatisfiedDependencyException . getInjectionPoint ( ) . getField ( ) . getDeclaringClass ( ) ) ; } org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredFieldResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; try { org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; fail ( STRING ) ; } catch ( UnsatisfiedDependencyException org.springframework.beans.factory.annotation.UnsatisfiedDependencyException ) { assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredFieldResourceInjectionBean .class , org.springframework.beans.factory.annotation.UnsatisfiedDependencyException . getInjectionPoint ( ) . getField ( ) . getDeclaringClass ( ) ) ; } org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredMethodResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredMethodResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredMethodResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredMethodResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredMethodResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredMethodResourceInjectionBean .class ) ) ; try { org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; fail ( STRING ) ; } catch ( UnsatisfiedDependencyException org.springframework.beans.factory.annotation.UnsatisfiedDependencyException ) { assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredMethodResourceInjectionBean .class , org.springframework.beans.factory.annotation.UnsatisfiedDependencyException . getInjectionPoint ( ) . getMethodParameter ( ) . getDeclaringClass ( ) ) ; } org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredMethodResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; try { org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; fail ( STRING ) ; } catch ( UnsatisfiedDependencyException org.springframework.beans.factory.annotation.UnsatisfiedDependencyException ) { assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationRequiredMethodResourceInjectionBean .class , org.springframework.beans.factory.annotation.UnsatisfiedDependencyException . getInjectionPoint ( ) . getMethodParameter ( ) . getDeclaringClass ( ) ) ; } org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; try { org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; fail ( STRING ) ; } catch ( UnsatisfiedDependencyException org.springframework.beans.factory.annotation.UnsatisfiedDependencyException ) { assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalFieldResourceInjectionBean .class , org.springframework.beans.factory.annotation.UnsatisfiedDependencyException . getInjectionPoint ( ) . getField ( ) . getDeclaringClass ( ) ) ; } org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.TestBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; assertNull ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean . org.springframework.beans.factory.annotation.TestBean ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setAutowiredAnnotationType ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterName ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setRequiredParameterValue ( false ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean .class ) ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; TestBean org.springframework.beans.factory.annotation.TestBean = new TestBean ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.TestBean ) ; try { org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; fail ( STRING ) ; } catch ( UnsatisfiedDependencyException org.springframework.beans.factory.annotation.UnsatisfiedDependencyException ) { assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomAnnotationOptionalMethodResourceInjectionBean .class , org.springframework.beans.factory.annotation.UnsatisfiedDependencyException . getInjectionPoint ( ) . getMethodParameter ( ) . getDeclaringClass ( ) ) ; } org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FactoryBeanDependentBean .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringFactoryBean ( ) ) ; final org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringFactoryBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringFactoryBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringFactoryBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; final org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FactoryBeanDependentBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FactoryBeanDependentBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FactoryBeanDependentBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertNotNull ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringFactoryBean ) ; assertNotNull ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FactoryBeanDependentBean ) ; assertEquals ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringFactoryBean , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FactoryBeanDependentBean . org.springframework.beans.factory.annotation.FactoryBean<?> ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . destroySingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; java.lang.String java.lang.String = STRING ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , java.lang.String ) ; java.lang.Integer java.lang.Integer = NUMBER ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , java.lang.Integer ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.lang.String ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.lang.Integer ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.lang.String[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.lang.Integer[] . int ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.lang.String[] [ NUMBER ] ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.lang.Integer[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.List<java.lang.String> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.List<java.lang.Integer> . int ( ) ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.List<java.lang.Integer> . java.lang.Integer ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.Map<java.lang.String,java.lang.String> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.Map<java.lang.String,java.lang.Integer> . int ( ) ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSubstitutedVariables .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; java.lang.String java.lang.String = STRING ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , java.lang.String ) ; java.lang.Integer java.lang.Integer = NUMBER ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , java.lang.Integer ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSubstitutedVariables org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSubstitutedVariables = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSubstitutedVariables ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.String ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.Integer ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.String[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.Integer[] . int ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.String[] [ NUMBER ] ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.Integer[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<java.lang.String> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<java.lang.Integer> . int ( ) ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<java.lang.Integer> . java.lang.Integer ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,java.lang.String> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,java.lang.Integer> . int ( ) ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MocksControl .class ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryBeanName ( STRING ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository .class ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryBeanName ( STRING ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setQualifiedElement ( ReflectionUtils . findField ( java.lang.Class<? extends org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests> ( ) , STRING ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> < ? > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> = org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository .class ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> < ? > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> = org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository .class ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithQualifiers . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> < ? > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> = org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository .class ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBeanNamesForType ( ResolvableType . forClassWithGenerics ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository .class , java.lang.String .class ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBeanInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBeanInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBeanInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBeanInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean<?> < ? > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean<?> = org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean .class ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBeanInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBeanInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean <> ( ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBeanInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBeanInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBeanInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean<?> < ? > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean<?> = org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean .class ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBeanInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFactoryBean<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MocksControl .class ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryBeanName ( STRING ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository .class ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> < ? > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> = org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository .class ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setBeanClassName ( Mockito .class . java.lang.String ( ) ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( new TypedStringValue ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository .class . java.lang.String ( ) ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> < ? > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> = org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository .class ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<?> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryFieldInjectionBeanWithSimpleMatch . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; java.lang.String java.lang.String = STRING ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , java.lang.String ) ; java.lang.Integer java.lang.Integer = NUMBER ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , java.lang.Integer ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.lang.String ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.lang.Integer ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.lang.String[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.lang.Integer[] . int ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.lang.String[] [ NUMBER ] ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.lang.Integer[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.List<java.lang.String> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.List<java.lang.Integer> . int ( ) ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.List<java.lang.Integer> . java.lang.Integer ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.Map<java.lang.String,java.lang.String> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.Map<java.lang.String,java.lang.Integer> . int ( ) ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithSubstitutedVariables .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; java.lang.String java.lang.String = STRING ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , java.lang.String ) ; java.lang.Integer java.lang.Integer = NUMBER ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , java.lang.Integer ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithSubstitutedVariables org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithSubstitutedVariables = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithSubstitutedVariables ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.String ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.Integer ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.String[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.Integer[] . int ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.String[] [ NUMBER ] ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.lang.Integer[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<java.lang.String> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<java.lang.Integer> . int ( ) ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<java.lang.Integer> . java.lang.Integer ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,java.lang.String> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,java.lang.Integer> . int ( ) ) ; assertSame ( java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertSame ( java.lang.Integer , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryMethodInjectionBeanWithVariables<java.lang.String,java.lang.Integer> . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.IntegerRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepositorySubclass ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setScope ( RootBeanDefinition . SCOPE_PROTOTYPE ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepositorySubclass ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerSingleton ( STRING , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] . int ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] . int ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] [ NUMBER ] ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] [ NUMBER ] ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( NUMBER ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( NUMBER ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . int ( ) ) ; assertSame ( NUMBER , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . int ( ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ( STRING ) ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SimpleRepository , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.RepositoryConstructorInjectionBean . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2 ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2 ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ReallyGenericInterface2Impl .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.PlainGenericInterface2Impl .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2 ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBeanNamesForType ( ResolvableType . forClassWithGenerics ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1 .class , java.lang.String .class ) ) ) ; assertArrayEquals ( new java.lang.String [] { STRING } , org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBeanNamesForType ( ResolvableType . forClassWithGenerics ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2 .class , java.lang.String .class ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ Ignore @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ReallyGenericInterface2Impl .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.PlainGenericInterface2Impl .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl = ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl ) org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ; assertSame ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Impl , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2 ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Bean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setTargetType ( ResolvableType . forClassWithGenerics ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Bean .class , java.lang.String .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Bean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setTargetType ( ResolvableType . forClassWithGenerics ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2Bean .class , java.lang.Integer .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MultiGenericFieldInjection .class ) ) ; assertEquals ( STRING , org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . setAutowireCandidateResolver ( new QualifierAnnotationAutowireCandidateResolver ( ) ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StockServiceImpl .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StockMovementDaoImpl .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StockMovementImpl .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StockMovementInstructionImpl .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StockServiceImpl org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StockServiceImpl = org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StockServiceImpl .class ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StockMovementDaoImpl .class ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StockServiceImpl . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StockMovementDao<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StockMovement> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyCallable .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SecondCallable .class ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FooBar .class ) ) ; assertNotNull ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.FooBar .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ProvidedArgumentBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( java.util.Collections . java.util.List<java.lang.String> ( STRING ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; assertNotNull ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.ProvidedArgumentBean .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( new AutowiredAnnotationBeanPostProcessor ( ) ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.AnnotatedDefaultConstructorBean .class ) ) ; assertNotNull ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean .class ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean = org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean .class ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean . org.springframework.beans.factory.annotation.TestBean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; AutowiredAnnotationBeanPostProcessor org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new AutowiredAnnotationBeanPostProcessor ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor . setBeanFactory ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . addBeanPostProcessor ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor ) ; RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition = new RootBeanDefinition ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean .class ) ; org.springframework.beans.factory.annotation.RootBeanDefinition . setFactoryMethodName ( STRING ) ; org.springframework.beans.factory.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.beans.factory.annotation.RootBeanDefinition ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean = org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean .class ) ; assertSame ( org.springframework.beans.factory.annotation.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean . org.springframework.beans.factory.annotation.TestBean ) ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( TestBean org.springframework.beans.factory.annotation.TestBean ) { if ( this . org.springframework.beans.factory.annotation.TestBean != null ) { throw new java.lang.IllegalStateException ( STRING ) ; } this . org.springframework.beans.factory.annotation.TestBean = org.springframework.beans.factory.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Autowired @ Required public void void ( TestBean org.springframework.beans.factory.annotation.TestBean ) { super. void ( org.springframework.beans.factory.annotation.TestBean ) ; }  <METHOD_END>
<METHOD_START> @ Autowired private void void ( ITestBean org.springframework.beans.factory.annotation.ITestBean , T T ) { this . org.springframework.beans.factory.annotation.ITestBean = org.springframework.beans.factory.annotation.ITestBean ; this . T = T ; }  <METHOD_END>
<METHOD_START> @ Autowired private void void ( ITestBean org.springframework.beans.factory.annotation.ITestBean ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ Autowired protected void void ( BeanFactory org.springframework.beans.factory.annotation.BeanFactory ) { this . org.springframework.beans.factory.annotation.BeanFactory = org.springframework.beans.factory.annotation.BeanFactory ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public T T ( ) { return this . T ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.BeanFactory org.springframework.beans.factory.annotation.BeanFactory ( ) { return this . org.springframework.beans.factory.annotation.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TestBean org.springframework.beans.factory.annotation.TestBean ) { super. void ( org.springframework.beans.factory.annotation.TestBean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( BeanFactory org.springframework.beans.factory.annotation.BeanFactory ) { this . org.springframework.beans.factory.annotation.BeanFactory = org.springframework.beans.factory.annotation.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ Autowired private void void ( ITestBean org.springframework.beans.factory.annotation.ITestBean ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ Autowired void void ( TestBean org.springframework.beans.factory.annotation.TestBean );  <METHOD_END>
<METHOD_START> @ Autowired default void void ( ITestBean org.springframework.beans.factory.annotation.ITestBean ) { void ( ) ; }  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TestBean org.springframework.beans.factory.annotation.TestBean ) { super. void ( org.springframework.beans.factory.annotation.TestBean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( BeanFactory org.springframework.beans.factory.annotation.BeanFactory ) { this . org.springframework.beans.factory.annotation.BeanFactory = org.springframework.beans.factory.annotation.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Autowired ( required = false ) public void void ( TestBean org.springframework.beans.factory.annotation.TestBean ) { super. void ( org.springframework.beans.factory.annotation.TestBean ) ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) private void void ( ITestBean org.springframework.beans.factory.annotation.ITestBean , NestedTestBean [] org.springframework.beans.factory.annotation.NestedTestBean[] , IndexedTestBean org.springframework.beans.factory.annotation.IndexedTestBean ) { this . org.springframework.beans.factory.annotation.ITestBean = org.springframework.beans.factory.annotation.ITestBean ; this . org.springframework.beans.factory.annotation.IndexedTestBean = org.springframework.beans.factory.annotation.IndexedTestBean ; this . org.springframework.beans.factory.annotation.NestedTestBean[] = org.springframework.beans.factory.annotation.NestedTestBean[] ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.IndexedTestBean org.springframework.beans.factory.annotation.IndexedTestBean ( ) { return this . org.springframework.beans.factory.annotation.IndexedTestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.NestedTestBean [] org.springframework.beans.factory.annotation.NestedTestBean[] ( ) { return this . org.springframework.beans.factory.annotation.NestedTestBean[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Autowired ( required = false ) public void void ( TestBean org.springframework.beans.factory.annotation.TestBean ) { super. void ( org.springframework.beans.factory.annotation.TestBean ) ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) private void void ( ITestBean org.springframework.beans.factory.annotation.ITestBean , java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> < NestedTestBean > java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> , IndexedTestBean org.springframework.beans.factory.annotation.IndexedTestBean ) { this . org.springframework.beans.factory.annotation.ITestBean = org.springframework.beans.factory.annotation.ITestBean ; this . org.springframework.beans.factory.annotation.IndexedTestBean = org.springframework.beans.factory.annotation.IndexedTestBean ; this . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> = java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void void ( java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> < NestedTestBean > java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ) { this . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> = java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.IndexedTestBean org.springframework.beans.factory.annotation.IndexedTestBean ( ) { return this . org.springframework.beans.factory.annotation.IndexedTestBean ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> < NestedTestBean > java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) { return this . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ; }  <METHOD_END>
<METHOD_START> public void ( ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ITestBean org.springframework.beans.factory.annotation.ITestBean ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ Autowired public void ( ITestBean org.springframework.beans.factory.annotation.ITestBean , NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean , ConfigurableListableBeanFactory org.springframework.beans.factory.annotation.ConfigurableListableBeanFactory ) { this . org.springframework.beans.factory.annotation.ITestBean = org.springframework.beans.factory.annotation.ITestBean ; this . org.springframework.beans.factory.annotation.NestedTestBean = org.springframework.beans.factory.annotation.NestedTestBean ; this . org.springframework.beans.factory.annotation.ConfigurableListableBeanFactory = org.springframework.beans.factory.annotation.ConfigurableListableBeanFactory ; }  <METHOD_END>
<METHOD_START> public void ( NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ITestBean org.springframework.beans.factory.annotation.ITestBean , ITestBean org.springframework.beans.factory.annotation.ITestBean , NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Autowired public void void ( TestBean org.springframework.beans.factory.annotation.TestBean ) { super. void ( org.springframework.beans.factory.annotation.TestBean ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean ( ) { return this . org.springframework.beans.factory.annotation.NestedTestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ConfigurableListableBeanFactory org.springframework.beans.factory.annotation.ConfigurableListableBeanFactory ( ) { return this . org.springframework.beans.factory.annotation.ConfigurableListableBeanFactory ; }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void ( ITestBean org.springframework.beans.factory.annotation.ITestBean ) { this . org.springframework.beans.factory.annotation.ITestBean = org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void ( ITestBean org.springframework.beans.factory.annotation.ITestBean , NestedTestBean [] org.springframework.beans.factory.annotation.NestedTestBean[] ) { this . org.springframework.beans.factory.annotation.ITestBean = org.springframework.beans.factory.annotation.ITestBean ; this . org.springframework.beans.factory.annotation.NestedTestBean[] = org.springframework.beans.factory.annotation.NestedTestBean[] ; }  <METHOD_END>
<METHOD_START> public void ( NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ITestBean org.springframework.beans.factory.annotation.ITestBean , ITestBean org.springframework.beans.factory.annotation.ITestBean , NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.NestedTestBean [] org.springframework.beans.factory.annotation.NestedTestBean[] ( ) { return this . org.springframework.beans.factory.annotation.NestedTestBean[] ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void ( ITestBean org.springframework.beans.factory.annotation.ITestBean ) { this . org.springframework.beans.factory.annotation.ITestBean = org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void ( ITestBean org.springframework.beans.factory.annotation.ITestBean ) { this . org.springframework.beans.factory.annotation.ITestBean = org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void ( ITestBean org.springframework.beans.factory.annotation.ITestBean , java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> < NestedTestBean > java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ) { this . org.springframework.beans.factory.annotation.ITestBean = org.springframework.beans.factory.annotation.ITestBean ; this . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> = java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ; }  <METHOD_END>
<METHOD_START> public void ( NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ITestBean org.springframework.beans.factory.annotation.ITestBean , ITestBean org.springframework.beans.factory.annotation.ITestBean , NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.ITestBean org.springframework.beans.factory.annotation.ITestBean ( ) { return this . org.springframework.beans.factory.annotation.ITestBean ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> < NestedTestBean > java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ( ) { return this . java.util.List<org.springframework.beans.factory.annotation.NestedTestBean> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void ( java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> < java.lang.String , TestBean > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ) { this . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> = java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> < java.lang.String , TestBean > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) { return this . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void ( java.util.Set<org.springframework.beans.factory.annotation.TestBean> < TestBean > java.util.Set<org.springframework.beans.factory.annotation.TestBean> ) { this . java.util.Set<org.springframework.beans.factory.annotation.TestBean> = java.util.Set<org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> public java.util.Set<org.springframework.beans.factory.annotation.TestBean> < TestBean > java.util.Set<org.springframework.beans.factory.annotation.TestBean> ( ) { return this . java.util.Set<org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> < java.lang.String , TestBean > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) { return this . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void void ( TestBean org.springframework.beans.factory.annotation.TestBean , java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> < java.lang.String , TestBean > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ) { this . org.springframework.beans.factory.annotation.TestBean = org.springframework.beans.factory.annotation.TestBean ; this . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> = java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> < java.lang.String , TestBean > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) { return this . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.ObjectFactory<org.springframework.beans.factory.annotation.TestBean> . getObject ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ObjectFactory < TestBean > org.springframework.beans.factory.annotation.ObjectFactory<org.springframework.beans.factory.annotation.TestBean> ) { this . org.springframework.beans.factory.annotation.ObjectFactory<org.springframework.beans.factory.annotation.TestBean> = org.springframework.beans.factory.annotation.ObjectFactory<org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.ObjectFactory<org.springframework.beans.factory.annotation.TestBean> . getObject ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return ( TestBean ) this . org.springframework.beans.factory.annotation.ObjectFactory<> . getObject ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.ObjectProvider<org.springframework.beans.factory.annotation.TestBean> . getObject ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( java.lang.String java.lang.String ) { return this . org.springframework.beans.factory.annotation.ObjectProvider<org.springframework.beans.factory.annotation.TestBean> . getObject ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.ObjectProvider<org.springframework.beans.factory.annotation.TestBean> . getIfAvailable ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.ObjectProvider<org.springframework.beans.factory.annotation.TestBean> . getIfAvailable ( ( ) new TestBean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.ObjectProvider<org.springframework.beans.factory.annotation.TestBean> . getIfUnique ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.ObjectProvider<org.springframework.beans.factory.annotation.TestBean> . getIfUnique ( ( ) new TestBean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> @ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired ( boolean = false ) public void void ( TestBean org.springframework.beans.factory.annotation.TestBean ) { this . org.springframework.beans.factory.annotation.TestBean = org.springframework.beans.factory.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> @ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyAutowired ( boolean = true ) protected void void ( TestBean org.springframework.beans.factory.annotation.TestBean ) { this . org.springframework.beans.factory.annotation.TestBean = org.springframework.beans.factory.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return this . org.springframework.beans.factory.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> public final org.springframework.beans.factory.annotation.FactoryBean<?> < ? > org.springframework.beans.factory.annotation.FactoryBean<?> ( ) { return this . org.springframework.beans.factory.annotation.FactoryBean<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) java.lang.Exception { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<java.lang.String> < java.lang.String > java.lang.Class<java.lang.String> ( ) { return java.lang.String .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( ) { throw new java.lang.IllegalStateException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return java.lang.Object .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.lang.String [] java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.lang.Integer [] java.lang.Integer[] ) { this . java.lang.Integer[] = java.lang.Integer[] ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ) { this . java.util.List<java.lang.Integer> = java.util.List<java.lang.Integer> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { this . java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.Map<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > java.util.Map<java.lang.String,java.lang.Integer> ) { this . java.util.Map<java.lang.String,java.lang.Integer> = java.util.Map<java.lang.String,java.lang.Integer> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> < java.lang.String > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ) { this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> < java.lang.Integer > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ) { this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> < java.lang.String > [] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] ) { this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> < java.lang.Integer > [] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] ) { this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> < org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> < java.lang.String > > java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> ) { this . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> = java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> < org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> < java.lang.Integer > > java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> ) { this . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> = java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> < java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> ) { this . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> = java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> < java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> < java.lang.Integer > > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> ) { this . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> = java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( S S ) { this . S = S ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( I I ) { this . I = I ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( S [] S[] ) { this . S[] = S[] ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( I [] I[] ) { this . I[] = I[] ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.List<S> < S > java.util.List<S> ) { this . java.util.List<S> = java.util.List<S> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.List<I> < I > java.util.List<I> ) { this . java.util.List<I> = java.util.List<I> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.Map<java.lang.String,S> < java.lang.String , S > java.util.Map<java.lang.String,S> ) { this . java.util.Map<java.lang.String,S> = java.util.Map<java.lang.String,S> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.Map<java.lang.String,I> < java.lang.String , I > java.util.Map<java.lang.String,I> ) { this . java.util.Map<java.lang.String,I> = java.util.Map<java.lang.String,I> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S> < S > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S> ) { this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S> = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I> < I > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I> ) { this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I> = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S> < S > [] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S>[] ) { this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S>[] = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S>[] ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I> < I > [] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I>[] ) { this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I>[] = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I>[] ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S>> < org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S> < S > > java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S>> ) { this . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S>> = java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S>> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I>> < org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I> < I > > java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I>> ) { this . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I>> = java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I>> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S>> < java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S> < S > > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S>> ) { this . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S>> = java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<S>> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I>> < java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I> < I > > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I>> ) { this . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I>> = java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<I>> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> < java.lang.String > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> < java.lang.Integer > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> < java.lang.String > [] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> < java.lang.Integer > [] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] , java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> < org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> < java.lang.String > > java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> , java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> < org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> < java.lang.Integer > > java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> , java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> < java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> , java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> < java.lang.String , org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> < java.lang.Integer > > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> ) { this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String> ; this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer> ; this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>[] ; this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>[] ; this . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> = java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> ; this . java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> = java.util.List<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> ; this . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> = java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.String>> ; this . java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> = java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.Repository<java.lang.Integer>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) { return ( T ) java.lang.reflect.Proxy . java.lang.Object ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests .class . java.lang.ClassLoader ( ) , new java.lang.Class<?> < ? > [] { java.lang.Class<T> } , new java.lang.reflect.InvocationHandler ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] ) throws java.lang.Throwable { throw new java.lang.UnsupportedOperationException ( STRING ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] ) throws java.lang.Throwable { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( T T );  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( T T ) { return org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2<T> . java.lang.String ( T ) + STRING + T ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1<java.lang.String> < java.lang.String > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1<java.lang.String> ( ) { return new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.StringGenericInterface1Impl ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1<java.lang.String> < java.lang.String > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1<java.lang.String> ( ) { return new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl<java.lang.String> <> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public static org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1 org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1 ( ) { return new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface1Impl ( ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( K K );  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return STRING + java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.Object java.lang.Object ) { return STRING + java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( K K ) { return this . java.lang.String + STRING + K ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2<java.lang.String> . java.lang.String ( STRING ) + STRING + this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.GenericInterface2<java.lang.Integer> . java.lang.String ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.Object java.lang.Object ) { return STRING + java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Thread java.lang.Thread ( ) java.lang.Exception { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Thread java.lang.Thread ( ) java.lang.Exception { return null ; }  <METHOD_END>
<METHOD_START> protected void void ( RT RT ) { if ( this . RT != null ) { throw new java.lang.IllegalStateException ( STRING ) ; } this . RT = RT ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Autowired public void void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyCallable org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyCallable ) { super. void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.MyCallable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.beans.factory.annotation.NestedTestBean org.springframework.beans.factory.annotation.NestedTestBean ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return NestedTestBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String [] java.lang.String[] ) {		}  <METHOD_END>
<METHOD_START> public static java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> < java.lang.String , TestBean > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) { java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> < java.lang.String , TestBean > java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> = new java.util.LinkedHashMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> <> ( ) ; java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> . put ( STRING , new TestBean ( STRING ) ) ; java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> . put ( STRING , new TestBean ( STRING ) ) ; return java.util.Map<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> public static java.util.Set<org.springframework.beans.factory.annotation.TestBean> < TestBean > java.util.Set<org.springframework.beans.factory.annotation.TestBean> ( ) { java.util.Set<org.springframework.beans.factory.annotation.TestBean> < TestBean > java.util.Set<org.springframework.beans.factory.annotation.TestBean> = new java.util.LinkedHashSet<org.springframework.beans.factory.annotation.TestBean> <> ( ) ; java.util.Set<org.springframework.beans.factory.annotation.TestBean> . add ( new TestBean ( STRING ) ) ; java.util.Set<org.springframework.beans.factory.annotation.TestBean> . add ( new TestBean ( STRING ) ) ; return java.util.Set<org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> < java.lang.String , TestBean > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) { org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> < java.lang.String , TestBean > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomHashMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> <> ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> . put ( STRING , new TestBean ( STRING ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> . put ( STRING , new TestBean ( STRING ) ) ; return org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> < TestBean > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> ( ) { org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> < TestBean > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> = new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomHashSet<org.springframework.beans.factory.annotation.TestBean> <> ( ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> . add ( new TestBean ( STRING ) ) ; org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> . add ( new TestBean ( STRING ) ) ; return org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> < java.lang.String , TestBean > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ) { this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> < java.lang.String , TestBean > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ( ) { return this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomMap<java.lang.String,org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void ( org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> < TestBean > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> ) { this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> = org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> < TestBean > org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> ( ) { return this . org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.CustomSet<org.springframework.beans.factory.annotation.TestBean> ; }  <METHOD_END>
<METHOD_START> @ Autowired public void ( ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.beans.factory.annotation.TestBean org.springframework.beans.factory.annotation.TestBean ( ) { return org.springframework.beans.factory.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return TestBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean ( ) { return new org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessorTests.SelfInjectingFactoryBean ( ) ; }  <METHOD_END>
