<METHOD_START> public void ( SubscribableChannel org.springframework.messaging.simp.config.SubscribableChannel , MessageChannel org.springframework.messaging.simp.config.MessageChannel , java.lang.String [] java.lang.String[] ) { super( org.springframework.messaging.simp.config.SubscribableChannel , org.springframework.messaging.simp.config.MessageChannel , java.lang.String[] ); }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( long long ) { this . java.lang.Long = long ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( long long ) { this . java.lang.Long = long ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler ( SubscribableChannel org.springframework.messaging.simp.config.SubscribableChannel ) { StompBrokerRelayMessageHandler org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler = new StompBrokerRelayMessageHandler ( getClientInboundChannel ( ) , getClientOutboundChannel ( ) , org.springframework.messaging.simp.config.SubscribableChannel , getDestinationPrefixes ( ) ) ; org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler . setRelayHost ( this . java.lang.String ) ; org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler . setRelayPort ( this . int ) ; org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler . setClientLogin ( this . java.lang.String ) ; org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler . setClientPasscode ( this . java.lang.String ) ; org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler . setSystemLogin ( this . java.lang.String ) ; org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler . setSystemPasscode ( this . java.lang.String ) ; if ( this . java.lang.Long != null ) { org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler . setSystemHeartbeatSendInterval ( this . java.lang.Long ) ; } if ( this . java.lang.Long != null ) { org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler . setSystemHeartbeatReceiveInterval ( this . java.lang.Long ) ; } if ( this . java.lang.String != null ) { org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler . setVirtualHost ( this . java.lang.String ) ; } org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler . setAutoStartup ( this . boolean ) ; return org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler ; }  <METHOD_END>
