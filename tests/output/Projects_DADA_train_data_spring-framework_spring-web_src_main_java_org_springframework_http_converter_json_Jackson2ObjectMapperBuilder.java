<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( JsonFactory org.springframework.http.converter.json.JsonFactory ) { this . org.springframework.http.converter.json.JsonFactory = org.springframework.http.converter.json.JsonFactory ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.text.DateFormat java.text.DateFormat ) { this . java.text.DateFormat = java.text.DateFormat ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.lang.String java.lang.String ) { this . java.text.DateFormat = new java.text.SimpleDateFormat ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.util.Locale java.util.Locale ) { this . java.util.Locale = java.util.Locale ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.lang.String java.lang.String ) { this . java.util.Locale = StringUtils . parseLocaleString ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.util.TimeZone java.util.TimeZone ) { this . java.util.TimeZone = java.util.TimeZone ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.lang.String java.lang.String ) { this . java.util.TimeZone = StringUtils . parseTimeZoneString ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( AnnotationIntrospector org.springframework.http.converter.json.AnnotationIntrospector ) { this . org.springframework.http.converter.json.AnnotationIntrospector = org.springframework.http.converter.json.AnnotationIntrospector ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( PropertyNamingStrategy org.springframework.http.converter.json.PropertyNamingStrategy ) { this . org.springframework.http.converter.json.PropertyNamingStrategy = org.springframework.http.converter.json.PropertyNamingStrategy ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( TypeResolverBuilder < ? > org.springframework.http.converter.json.TypeResolverBuilder<?> ) { this . org.springframework.http.converter.json.TypeResolverBuilder<?> = org.springframework.http.converter.json.TypeResolverBuilder<> ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( JsonInclude . JsonInclude JsonInclude.Include ) { this . JsonInclude.Include = JsonInclude.Include ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( FilterProvider org.springframework.http.converter.json.FilterProvider ) { this . org.springframework.http.converter.json.FilterProvider = org.springframework.http.converter.json.FilterProvider ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Class<?> < ? > java.lang.Class<?> ) { if ( java.lang.Class<> != null ) { this . java.util.Map<java.lang.Class<?>,java.lang.Class<?>> . java.lang.Class<?> ( java.lang.Class<> , java.lang.Class<> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.util.Map<java.lang.Class<?>,java.lang.Class<?>> < java.lang.Class<?> < ? > , java.lang.Class<?> < ? > > java.util.Map<java.lang.Class<?>,java.lang.Class<?>> ) { if ( java.util.Map<java.lang.Class<?>,java.lang.Class<?>> != null ) { this . java.util.Map<java.lang.Class<?>,java.lang.Class<?>> . void ( java.util.Map<java.lang.Class<?>,java.lang.Class<?>> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( org.springframework.http.converter.json.JsonSerializer<?> < ? > ... org.springframework.http.converter.json.JsonSerializer<?>[] ) { if ( org.springframework.http.converter.json.JsonSerializer<?>[] != null ) { for ( JsonSerializer < ? > org.springframework.http.converter.json.JsonSerializer<?> : org.springframework.http.converter.json.JsonSerializer<?>[] ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.http.converter.json.JsonSerializer<> . handledType ( ) ; if ( java.lang.Class<> == null || java.lang.Class<> == java.lang.Object .class ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.http.converter.json.JsonSerializer<> . getClass ( ) . getName ( ) ) ; } this . java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> . put ( org.springframework.http.converter.json.JsonSerializer<> . handledType ( ) , org.springframework.http.converter.json.JsonSerializer<> ) ; } } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.lang.Class<?> < ? > java.lang.Class<?> , JsonSerializer < ? > org.springframework.http.converter.json.JsonSerializer<?> ) { if ( org.springframework.http.converter.json.JsonSerializer<> != null ) { this . java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> . put ( java.lang.Class<> , org.springframework.http.converter.json.JsonSerializer<> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> < java.lang.Class<?> < ? > , JsonSerializer < ? > > java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> ) { if ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> != null ) { this . java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> . putAll ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( org.springframework.http.converter.json.JsonDeserializer<?> < ? > ... org.springframework.http.converter.json.JsonDeserializer<?>[] ) { if ( org.springframework.http.converter.json.JsonDeserializer<?>[] != null ) { for ( JsonDeserializer < ? > org.springframework.http.converter.json.JsonDeserializer<?> : org.springframework.http.converter.json.JsonDeserializer<?>[] ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.http.converter.json.JsonDeserializer<> . handledType ( ) ; if ( java.lang.Class<> == null || java.lang.Class<> == java.lang.Object .class ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.http.converter.json.JsonDeserializer<> . getClass ( ) . getName ( ) ) ; } this . java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> . put ( org.springframework.http.converter.json.JsonDeserializer<> . handledType ( ) , org.springframework.http.converter.json.JsonDeserializer<> ) ; } } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.lang.Class<?> < ? > java.lang.Class<?> , JsonDeserializer < ? > org.springframework.http.converter.json.JsonDeserializer<?> ) { if ( org.springframework.http.converter.json.JsonDeserializer<> != null ) { this . java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> . put ( java.lang.Class<> , org.springframework.http.converter.json.JsonDeserializer<> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> < java.lang.Class<?> < ? > , JsonDeserializer < ? > > java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> ) { if ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> != null ) { this . java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> . putAll ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( boolean boolean ) { this . java.util.Map<java.lang.Object,java.lang.Boolean> . java.lang.Boolean ( MapperFeature . AUTO_DETECT_FIELDS , boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( boolean boolean ) { this . java.util.Map<java.lang.Object,java.lang.Boolean> . java.lang.Boolean ( MapperFeature . AUTO_DETECT_GETTERS , boolean ) ; this . java.util.Map<java.lang.Object,java.lang.Boolean> . java.lang.Boolean ( MapperFeature . AUTO_DETECT_SETTERS , boolean ) ; this . java.util.Map<java.lang.Object,java.lang.Boolean> . java.lang.Boolean ( MapperFeature . AUTO_DETECT_IS_GETTERS , boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( boolean boolean ) { this . java.util.Map<java.lang.Object,java.lang.Boolean> . java.lang.Boolean ( MapperFeature . DEFAULT_VIEW_INCLUSION , boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( boolean boolean ) { this . java.util.Map<java.lang.Object,java.lang.Boolean> . java.lang.Boolean ( DeserializationFeature . FAIL_ON_UNKNOWN_PROPERTIES , boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( boolean boolean ) { this . java.util.Map<java.lang.Object,java.lang.Boolean> . java.lang.Boolean ( SerializationFeature . FAIL_ON_EMPTY_BEANS , boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( boolean boolean ) { this . java.util.Map<java.lang.Object,java.lang.Boolean> . java.lang.Boolean ( SerializationFeature . INDENT_OUTPUT , boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( boolean boolean ) { this . java.lang.Boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.lang.Object ... java.lang.Object[] ) { if ( java.lang.Object[] != null ) { for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { this . java.util.Map<java.lang.Object,java.lang.Boolean> . java.lang.Boolean ( java.lang.Object , java.lang.Boolean . java.lang.Boolean ) ; } } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.lang.Object ... java.lang.Object[] ) { if ( java.lang.Object[] != null ) { for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { this . java.util.Map<java.lang.Object,java.lang.Boolean> . java.lang.Boolean ( java.lang.Object , java.lang.Boolean . java.lang.Boolean ) ; } } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( Module ... org.springframework.http.converter.json.Module[] ) { return org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.util.Arrays . java.util.List ( org.springframework.http.converter.json.Module[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.util.List<org.springframework.http.converter.json.Module> < Module > java.util.List<org.springframework.http.converter.json.Module> ) { this . java.util.List<org.springframework.http.converter.json.Module> = new java.util.LinkedList <> ( java.util.List<org.springframework.http.converter.json.Module> ) ; this . boolean = false ; this . boolean = false ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( Module ... org.springframework.http.converter.json.Module[] ) { this . java.util.List<org.springframework.http.converter.json.Module> = java.util.Arrays . java.util.List ( org.springframework.http.converter.json.Module[] ) ; this . boolean = true ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > ... java.lang.Class<? extends org.springframework.http.converter.json.Module>[] ) { this . java.lang.Class<? extends org.springframework.http.converter.json.Module>[] = modules ; this . findWellKnownModules = true ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( HandlerInstantiator org.springframework.http.converter.json.HandlerInstantiator ) { this . org.springframework.http.converter.json.HandlerInstantiator = org.springframework.http.converter.json.HandlerInstantiator ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( ApplicationContext org.springframework.http.converter.json.ApplicationContext ) { this . org.springframework.http.converter.json.ApplicationContext = org.springframework.http.converter.json.ApplicationContext ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public < T extends org.springframework.http.converter.json.ObjectMapper > T T ( ) { ObjectMapper org.springframework.http.converter.json.ObjectMapper ; if ( this . boolean ) { org.springframework.http.converter.json.ObjectMapper = ( this . java.lang.Boolean != null ? new org.springframework.http.converter.json.Jackson2ObjectMapperBuilder.XmlObjectMapperInitializer ( ) . org.springframework.http.converter.json.ObjectMapper ( this . java.lang.Boolean ) : new org.springframework.http.converter.json.Jackson2ObjectMapperBuilder.XmlObjectMapperInitializer ( ) . org.springframework.http.converter.json.ObjectMapper ( ) ) ; } else { org.springframework.http.converter.json.ObjectMapper = ( this . org.springframework.http.converter.json.JsonFactory != null ? new ObjectMapper ( this . org.springframework.http.converter.json.JsonFactory ) : new ObjectMapper ( ) ) ; } void ( org.springframework.http.converter.json.ObjectMapper ) ; return ( T ) org.springframework.http.converter.json.ObjectMapper ; }  <METHOD_END>
<METHOD_START> public void void ( ObjectMapper org.springframework.http.converter.json.ObjectMapper ) { Assert . notNull ( org.springframework.http.converter.json.ObjectMapper , STRING ) ; if ( this . boolean ) { org.springframework.http.converter.json.ObjectMapper . registerModules ( ObjectMapper . findModules ( this . java.lang.ClassLoader ) ) ; } else if ( this . boolean ) { void ( org.springframework.http.converter.json.ObjectMapper ) ; } if ( this . java.util.List<org.springframework.http.converter.json.Module> != null ) { for ( Module org.springframework.http.converter.json.Module : this . java.util.List<org.springframework.http.converter.json.Module> ) { org.springframework.http.converter.json.ObjectMapper . registerModule ( org.springframework.http.converter.json.Module ) ; } } if ( this . java.lang.Class<? extends org.springframework.http.converter.json.Module>[] != null ) { for ( Class < ? extends Module > module : this . moduleClasses ) { objectMapper . registerModule ( BeanUtils . instantiateClass ( module ) ) ; } } if ( this . dateFormat != null ) { objectMapper . setDateFormat ( this . dateFormat ) ; } if ( this . locale != null ) { objectMapper . setLocale ( this . locale ) ; } if ( this . timeZone != null ) { objectMapper . setTimeZone ( this . timeZone ) ; } if ( this . annotationIntrospector != null ) { objectMapper . setAnnotationIntrospector ( this . annotationIntrospector ) ; } if ( this . propertyNamingStrategy != null ) { objectMapper . setPropertyNamingStrategy ( this . propertyNamingStrategy ) ; } if ( this . defaultTyping != null ) { objectMapper . setDefaultTyping ( this . defaultTyping ) ; } if ( this . serializationInclusion != null ) { objectMapper . setSerializationInclusion ( this . serializationInclusion ) ; } if ( this . filters != null ) { objectMapper . setFilterProvider ( this . filters ) ; } for ( Class < ? > target : this . mixIns . keySet ( ) ) { objectMapper . addMixIn ( target , this . mixIns . get ( target ) ) ; } if ( ! this . serializers . isEmpty ( ) || ! this . deserializers . isEmpty ( ) ) { SimpleModule module = new SimpleModule ( ) ; addSerializers ( module ) ; addDeserializers ( module ) ; objectMapper . registerModule ( module ) ; } customizeDefaultFeatures ( objectMapper ) ; for ( Object feature : this . features . keySet ( ) ) { configureFeature ( objectMapper , feature , this . features . get ( feature ) ) ; } if ( this . handlerInstantiator != null ) { objectMapper . setHandlerInstantiator ( this . handlerInstantiator ) ; } else if ( this . applicationContext != null ) { objectMapper . setHandlerInstantiator ( new SpringHandlerInstantiator ( this . applicationContext . getAutowireCapableBeanFactory ( ) ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ObjectMapper org.springframework.http.converter.json.ObjectMapper ) { if ( ! this . java.util.Map<java.lang.Object,java.lang.Boolean> . boolean ( MapperFeature . DEFAULT_VIEW_INCLUSION ) ) { void ( org.springframework.http.converter.json.ObjectMapper , MapperFeature . DEFAULT_VIEW_INCLUSION , false ) ; } if ( ! this . java.util.Map<java.lang.Object,java.lang.Boolean> . boolean ( DeserializationFeature . FAIL_ON_UNKNOWN_PROPERTIES ) ) { void ( org.springframework.http.converter.json.ObjectMapper , DeserializationFeature . FAIL_ON_UNKNOWN_PROPERTIES , false ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private < T > void void ( SimpleModule org.springframework.http.converter.json.SimpleModule ) { for ( java.lang.Class<?> < ? > java.lang.Class<?> : this . java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> . keySet ( ) ) { org.springframework.http.converter.json.SimpleModule . addSerializer ( ( java.lang.Class<? extends T> < ? extends T > ) java.lang.Class<> , ( JsonSerializer < T > ) this . java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> . get ( java.lang.Class<> ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private < T > void void ( SimpleModule org.springframework.http.converter.json.SimpleModule ) { for ( java.lang.Class<?> < ? > java.lang.Class<?> : this . java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> . keySet ( ) ) { org.springframework.http.converter.json.SimpleModule . addDeserializer ( ( java.lang.Class<T> < T > ) java.lang.Class<> , ( JsonDeserializer < ? extends T > ) this . java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> . get ( java.lang.Class<> ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ObjectMapper org.springframework.http.converter.json.ObjectMapper , java.lang.Object java.lang.Object , boolean boolean ) { if ( java.lang.Object instanceof JsonParser . JsonParser ) { org.springframework.http.converter.json.ObjectMapper . configure ( ( JsonParser . JsonParser ) java.lang.Object , boolean ) ; } else if ( java.lang.Object instanceof JsonGenerator . JsonGenerator ) { org.springframework.http.converter.json.ObjectMapper . configure ( ( JsonGenerator . JsonGenerator ) java.lang.Object , boolean ) ; } else if ( java.lang.Object instanceof SerializationFeature ) { org.springframework.http.converter.json.ObjectMapper . configure ( ( SerializationFeature ) java.lang.Object , boolean ) ; } else if ( java.lang.Object instanceof DeserializationFeature ) { org.springframework.http.converter.json.ObjectMapper . configure ( ( DeserializationFeature ) java.lang.Object , boolean ) ; } else if ( java.lang.Object instanceof MapperFeature ) { org.springframework.http.converter.json.ObjectMapper . configure ( ( MapperFeature ) java.lang.Object , boolean ) ; } else { throw new FatalBeanException ( STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private void void ( ObjectMapper org.springframework.http.converter.json.ObjectMapper ) { try { java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > java.lang.Class<? extends org.springframework.http.converter.json.Module> = ( java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > ) ClassUtils . forName ( STRING , this . java.lang.ClassLoader ) ; org.springframework.http.converter.json.ObjectMapper . registerModule ( BeanUtils . instantiateClass ( java.lang.Class<> ) ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { } try { java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > java.lang.Class<? extends org.springframework.http.converter.json.Module> = ( java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > ) ClassUtils . forName ( STRING , this . java.lang.ClassLoader ) ; org.springframework.http.converter.json.ObjectMapper . registerModule ( BeanUtils . instantiateClass ( java.lang.Class<> ) ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { } try { java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > java.lang.Class<? extends org.springframework.http.converter.json.Module> = ( java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > ) ClassUtils . forName ( STRING , this . java.lang.ClassLoader ) ; org.springframework.http.converter.json.ObjectMapper . registerModule ( BeanUtils . instantiateClass ( java.lang.Class<> ) ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { } if ( ClassUtils . isPresent ( STRING , this . java.lang.ClassLoader ) ) { try { java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > java.lang.Class<? extends org.springframework.http.converter.json.Module> = ( java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > ) ClassUtils . forName ( STRING , this . java.lang.ClassLoader ) ; org.springframework.http.converter.json.ObjectMapper . registerModule ( BeanUtils . instantiateClass ( java.lang.Class<> ) ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { } } if ( ClassUtils . isPresent ( STRING , this . java.lang.ClassLoader ) ) { try { java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > java.lang.Class<? extends org.springframework.http.converter.json.Module> = ( java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > ) ClassUtils . forName ( STRING , this . java.lang.ClassLoader ) ; org.springframework.http.converter.json.ObjectMapper . registerModule ( BeanUtils . instantiateClass ( java.lang.Class<> ) ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { } } }  <METHOD_END>
<METHOD_START> public static org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( ) { return new org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( ) { return new org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( ) . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( true ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( ) { return new org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( ) . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( new org.springframework.http.converter.json.Jackson2ObjectMapperBuilder.SmileFactoryInitializer ( ) . org.springframework.http.converter.json.JsonFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.converter.json.Jackson2ObjectMapperBuilder org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( ) { return new org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( ) . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ( new org.springframework.http.converter.json.Jackson2ObjectMapperBuilder.CborFactoryInitializer ( ) . org.springframework.http.converter.json.JsonFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.ObjectMapper org.springframework.http.converter.json.ObjectMapper ( ) { return new XmlMapper ( javax.xml.stream.XMLInputFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.ObjectMapper org.springframework.http.converter.json.ObjectMapper ( boolean boolean ) { JacksonXmlModule org.springframework.http.converter.json.JacksonXmlModule = new JacksonXmlModule ( ) ; org.springframework.http.converter.json.JacksonXmlModule . setDefaultUseWrapper ( boolean ) ; return new XmlMapper ( new XmlFactory ( javax.xml.stream.XMLInputFactory ( ) ) , org.springframework.http.converter.json.JacksonXmlModule ) ; }  <METHOD_END>
<METHOD_START> private static javax.xml.stream.XMLInputFactory javax.xml.stream.XMLInputFactory ( ) { javax.xml.stream.XMLInputFactory javax.xml.stream.XMLInputFactory = javax.xml.stream.XMLInputFactory . javax.xml.stream.XMLInputFactory ( ) ; javax.xml.stream.XMLInputFactory . void ( javax.xml.stream.XMLInputFactory . java.lang.String , false ) ; javax.xml.stream.XMLInputFactory . void ( javax.xml.stream.XMLInputFactory . java.lang.String , false ) ; javax.xml.stream.XMLInputFactory . void ( javax.xml.stream.XMLResolver ) ; return javax.xml.stream.XMLInputFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { return StreamUtils . emptyInput ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.JsonFactory org.springframework.http.converter.json.JsonFactory ( ) { return new SmileFactory ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.converter.json.JsonFactory org.springframework.http.converter.json.JsonFactory ( ) { return new CBORFactory ( ) ; }  <METHOD_END>
