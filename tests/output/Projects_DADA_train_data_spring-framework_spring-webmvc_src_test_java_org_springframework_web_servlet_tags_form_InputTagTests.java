<METHOD_START> @ java.lang.Override protected void void ( ) { this . org.springframework.web.servlet.tags.form.InputTag = org.springframework.web.servlet.tags.form.InputTag ( getWriter ( ) ) ; this . org.springframework.web.servlet.tags.form.InputTag . setParent ( getFormTag ( ) ) ; this . org.springframework.web.servlet.tags.form.InputTag . setPageContext ( getPageContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TestBean org.springframework.web.servlet.tags.form.TestBean ( ) { this . org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; this . org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; this . org.springframework.web.servlet.tags.form.TestBean . setMyFloat ( new java.lang.Float ( NUMBER ) ) ; TestBean org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; this . org.springframework.web.servlet.tags.form.TestBean . setSpouse ( org.springframework.web.servlet.tags.form.TestBean ) ; return this . org.springframework.web.servlet.tags.form.TestBean ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.web.servlet.tags.form.InputTag org.springframework.web.servlet.tags.form.InputTag ( ) { return this . org.springframework.web.servlet.tags.form.InputTag ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.InputTag . setPath ( STRING ) ; assertEquals ( Tag . SKIP_BODY , this . org.springframework.web.servlet.tags.form.InputTag . doStartTag ( ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ( ) ) ; void ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BindTag org.springframework.web.servlet.tags.form.BindTag = new BindTag ( ) ; org.springframework.web.servlet.tags.form.BindTag . setPath ( STRING ) ; org.springframework.web.servlet.tags.form.BindTag . setPageContext ( getPageContext ( ) ) ; org.springframework.web.servlet.tags.form.BindTag . doStartTag ( ) ; BindStatus org.springframework.web.servlet.tags.form.BindStatus = ( BindStatus ) getPageContext ( ) . findAttribute ( BindTag . STATUS_VARIABLE_NAME ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.BindStatus . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.InputTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.TestBean . setName ( java.lang.String ) ; assertEquals ( Tag . SKIP_BODY , this . org.springframework.web.servlet.tags.form.InputTag . doStartTag ( ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ( ) ) ; void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.InputTag . setPath ( STRING ) ; assertEquals ( Tag . SKIP_BODY , this . org.springframework.web.servlet.tags.form.InputTag . doStartTag ( ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ( ) ) ; void ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; boolean boolean = true ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; boolean boolean = true ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.InputTag . setId ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.InputTag . setSize ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setCssClass ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setCssStyle ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setTitle ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setLang ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setDir ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setTabindex ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setDisabled ( boolean ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnclick ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOndblclick ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnkeydown ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnkeypress ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnkeyup ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnmousedown ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnmousemove ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnmouseout ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnmouseover ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnmouseup ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnfocus ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnblur ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnchange ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setAccesskey ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setMaxlength ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setAlt ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setOnselect ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setReadonly ( boolean ) ; this . org.springframework.web.servlet.tags.form.InputTag . setAutocomplete ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; this . org.springframework.web.servlet.tags.form.InputTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; assertEquals ( Tag . SKIP_BODY , this . org.springframework.web.servlet.tags.form.InputTag . doStartTag ( ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ( ) ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; void ( java.lang.String , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , java.lang.String , java.lang.String ) ; assertContainsAttribute ( java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { NestedPathTag org.springframework.web.servlet.tags.form.NestedPathTag = new NestedPathTag ( ) ; org.springframework.web.servlet.tags.form.NestedPathTag . setPath ( STRING ) ; org.springframework.web.servlet.tags.form.NestedPathTag . setPageContext ( getPageContext ( ) ) ; org.springframework.web.servlet.tags.form.NestedPathTag . doStartTag ( ) ; this . org.springframework.web.servlet.tags.form.InputTag . setPath ( STRING ) ; assertEquals ( Tag . SKIP_BODY , this . org.springframework.web.servlet.tags.form.InputTag . doStartTag ( ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ( ) ) ; void ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { NestedPathTag org.springframework.web.servlet.tags.form.NestedPathTag = new NestedPathTag ( ) ; org.springframework.web.servlet.tags.form.NestedPathTag . setPath ( STRING ) ; org.springframework.web.servlet.tags.form.NestedPathTag . setPageContext ( getPageContext ( ) ) ; org.springframework.web.servlet.tags.form.NestedPathTag . doStartTag ( ) ; BindTag org.springframework.web.servlet.tags.form.BindTag = new BindTag ( ) ; org.springframework.web.servlet.tags.form.BindTag . setPath ( STRING ) ; org.springframework.web.servlet.tags.form.BindTag . setPageContext ( getPageContext ( ) ) ; org.springframework.web.servlet.tags.form.BindTag . doStartTag ( ) ; BindStatus org.springframework.web.servlet.tags.form.BindStatus = ( BindStatus ) getPageContext ( ) . findAttribute ( BindTag . STATUS_VARIABLE_NAME ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.BindStatus . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.InputTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.InputTag . setCssClass ( STRING ) ; this . org.springframework.web.servlet.tags.form.InputTag . setCssErrorClass ( STRING ) ; BeanPropertyBindingResult org.springframework.web.servlet.tags.form.BeanPropertyBindingResult = new BeanPropertyBindingResult ( this . org.springframework.web.servlet.tags.form.TestBean , COMMAND_NAME ) ; org.springframework.web.servlet.tags.form.BeanPropertyBindingResult . rejectValue ( STRING , STRING , STRING ) ; org.springframework.web.servlet.tags.form.BeanPropertyBindingResult . rejectValue ( STRING , STRING , STRING ) ; exposeBindingResult ( org.springframework.web.servlet.tags.form.BeanPropertyBindingResult ) ; assertEquals ( Tag . SKIP_BODY , this . org.springframework.web.servlet.tags.form.InputTag . doStartTag ( ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ( ) ) ; void ( java.lang.String , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.InputTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.InputTag . setDisabled ( false ) ; this . org.springframework.web.servlet.tags.form.InputTag . doStartTag ( ) ; java.lang.String java.lang.String = getOutput ( ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.InputTag . setPath ( STRING ) ; BeanPropertyBindingResult org.springframework.web.servlet.tags.form.BeanPropertyBindingResult = new BeanPropertyBindingResult ( this . org.springframework.web.servlet.tags.form.TestBean , COMMAND_NAME ) ; org.springframework.web.servlet.tags.form.BeanPropertyBindingResult . getPropertyAccessor ( ) . registerCustomEditor ( java.lang.Float .class , new SimpleFloatEditor ( ) ) ; exposeBindingResult ( org.springframework.web.servlet.tags.form.BeanPropertyBindingResult ) ; assertEquals ( Tag . SKIP_BODY , this . org.springframework.web.servlet.tags.form.InputTag . doStartTag ( ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ( ) ) ; void ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.InputTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.InputTag . setReadonly ( true ) ; assertEquals ( Tag . SKIP_BODY , this . org.springframework.web.servlet.tags.form.InputTag . doStartTag ( ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ( ) ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; void ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.form.JspException { this . org.springframework.web.servlet.tags.form.InputTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.InputTag . setDynamicAttribute ( null , STRING , STRING ) ; assertEquals ( Tag . SKIP_BODY , this . org.springframework.web.servlet.tags.form.InputTag . doStartTag ( ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; void ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.form.JspException { try { this . org.springframework.web.servlet.tags.form.InputTag . setDynamicAttribute ( null , STRING , STRING ) ; fail ( STRING ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { assertEquals ( STRING , java.lang.IllegalArgumentException . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.form.JspException { try { this . org.springframework.web.servlet.tags.form.InputTag . setDynamicAttribute ( null , STRING , STRING ) ; fail ( STRING ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { assertEquals ( STRING , java.lang.IllegalArgumentException . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected final void void ( java.lang.String java.lang.String ) { assertTrue ( STRING , java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> protected final void void ( java.lang.String java.lang.String ) { assertTrue ( STRING , java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected org.springframework.web.servlet.tags.form.InputTag org.springframework.web.servlet.tags.form.InputTag ( final java.io.Writer java.io.Writer ) { return new InputTag ( ) { @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( java.io.Writer ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( java.io.Writer ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
