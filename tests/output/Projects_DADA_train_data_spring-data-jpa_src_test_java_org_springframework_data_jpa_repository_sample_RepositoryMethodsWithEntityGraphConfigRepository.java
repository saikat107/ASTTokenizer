<METHOD_START> @ EntityGraph ( type = EntityGraphType . LOAD , value = STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> @ EntityGraph ( type = EntityGraphType . FETCH , value = STRING ) java.util.Optional<org.springframework.data.jpa.repository.sample.User> < User > java.util.Optional<org.springframework.data.jpa.repository.sample.User> ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> @ EntityGraph org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> @ EntityGraph ( attributePaths = { STRING , STRING } ) org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> @ EntityGraph ( STRING ) org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> ( Predicate org.springframework.data.jpa.repository.sample.Predicate , Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> @ EntityGraph ( type = EntityGraphType . FETCH , value = STRING ) org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> @ EntityGraph ( attributePaths = { STRING , STRING , STRING } ) org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( java.lang.Integer java.lang.Integer );  <METHOD_END>
