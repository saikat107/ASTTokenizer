<METHOD_START> @ java.lang.Override public void void ( StateMachineConfigurationBuilder < S , E > org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> ) throws java.lang.Exception { if ( boolean ) { org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> . setSecurityEnabled ( true ) ; org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> . setTransitionSecurityAccessDecisionManager ( org.springframework.statemachine.config.configurers.AccessDecisionManager ) ; org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> . setEventSecurityAccessDecisionManager ( org.springframework.statemachine.config.configurers.AccessDecisionManager ) ; org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> . setEventSecurityRule ( org.springframework.statemachine.config.configurers.SecurityRule ) ; org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> . setTransitionSecurityRule ( org.springframework.statemachine.config.configurers.SecurityRule ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> ( AccessDecisionManager org.springframework.statemachine.config.configurers.AccessDecisionManager ) { this . org.springframework.statemachine.config.configurers.AccessDecisionManager = org.springframework.statemachine.config.configurers.AccessDecisionManager ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> ( AccessDecisionManager org.springframework.statemachine.config.configurers.AccessDecisionManager ) { this . org.springframework.statemachine.config.configurers.AccessDecisionManager = org.springframework.statemachine.config.configurers.AccessDecisionManager ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> ( java.lang.String java.lang.String , ComparisonType org.springframework.statemachine.config.configurers.ComparisonType ) { if ( org.springframework.statemachine.config.configurers.SecurityRule == null ) { org.springframework.statemachine.config.configurers.SecurityRule = new SecurityRule ( ) ; } org.springframework.statemachine.config.configurers.SecurityRule . setAttributes ( SecurityRule . commaDelimitedListToSecurityAttributes ( java.lang.String ) ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> ( java.lang.String java.lang.String ) { if ( org.springframework.statemachine.config.configurers.SecurityRule == null ) { org.springframework.statemachine.config.configurers.SecurityRule = new SecurityRule ( ) ; } org.springframework.statemachine.config.configurers.SecurityRule . setExpression ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> ( java.lang.String java.lang.String , ComparisonType org.springframework.statemachine.config.configurers.ComparisonType ) { if ( org.springframework.statemachine.config.configurers.SecurityRule == null ) { org.springframework.statemachine.config.configurers.SecurityRule = new SecurityRule ( ) ; } org.springframework.statemachine.config.configurers.SecurityRule . setAttributes ( SecurityRule . commaDelimitedListToSecurityAttributes ( java.lang.String ) ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.SecurityConfigurer<S,E> ( java.lang.String java.lang.String ) { if ( org.springframework.statemachine.config.configurers.SecurityRule == null ) { org.springframework.statemachine.config.configurers.SecurityRule = new SecurityRule ( ) ; } org.springframework.statemachine.config.configurers.SecurityRule . setExpression ( java.lang.String ) ; return this ; }  <METHOD_END>
