<METHOD_START> public void ( ) { this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> = new java.util.LinkedList<java.util.Map<java.lang.String,java.lang.Object>> <> ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.util.List<java.util.Map<java.lang.String,java.lang.Object>> < java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ) { this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> = java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Number java.lang.Number ( ) org.springframework.jdbc.support.InvalidDataAccessApiUsageException , org.springframework.jdbc.support.DataRetrievalFailureException { if ( this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> . int ( ) == NUMBER ) { return null ; } if ( this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> . int ( ) > NUMBER || this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( NUMBER ) . int ( ) > NUMBER ) { throw new InvalidDataAccessApiUsageException ( STRING + STRING + this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ) ; } java.util.Iterator<java.lang.Object> < java.lang.Object > java.util.Iterator<java.lang.Object> = this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( NUMBER ) . java.util.Collection<java.lang.Object> ( ) . java.util.Iterator<java.lang.Object> ( ) ; if ( java.util.Iterator<java.lang.Object> . boolean ( ) ) { java.lang.Object java.lang.Object = java.util.Iterator<java.lang.Object> . java.lang.Object ( ) ; if ( ! ( java.lang.Object instanceof java.lang.Number ) ) { throw new DataRetrievalFailureException ( STRING + STRING + ( java.lang.Object != null ? java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) : null ) + STRING + java.lang.Number .class . java.lang.String ( ) + STRING ) ; } return ( java.lang.Number ) java.lang.Object ; } else { throw new DataRetrievalFailureException ( STRING + STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) org.springframework.jdbc.support.InvalidDataAccessApiUsageException { if ( this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> . int ( ) == NUMBER ) { return null ; } if ( this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> . int ( ) > NUMBER ) throw new InvalidDataAccessApiUsageException ( STRING + STRING + this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ) ; return this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> . java.util.Map<java.lang.String,java.lang.Object> ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.util.Map<java.lang.String,java.lang.Object>> < java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ( ) { return this . java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ; }  <METHOD_END>
