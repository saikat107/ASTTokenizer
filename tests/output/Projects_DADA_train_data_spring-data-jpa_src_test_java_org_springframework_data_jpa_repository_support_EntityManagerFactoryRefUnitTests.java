<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.data.jpa.repository.support.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; XmlBeanDefinitionReader org.springframework.data.jpa.repository.support.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.data.jpa.repository.support.DefaultListableBeanFactory ) ; org.springframework.data.jpa.repository.support.XmlBeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( STRING ) ) ; BeanDefinition org.springframework.data.jpa.repository.support.BeanDefinition = org.springframework.data.jpa.repository.support.DefaultListableBeanFactory . getBeanDefinition ( STRING ) ; java.lang.Object java.lang.Object = java.lang.Object ( org.springframework.data.jpa.repository.support.BeanDefinition , STRING ) ; assertTrue ( java.lang.Object instanceof BeanDefinition ) ; BeanDefinition org.springframework.data.jpa.repository.support.BeanDefinition = ( BeanDefinition ) java.lang.Object ; BeanReference org.springframework.data.jpa.repository.support.BeanReference = org.springframework.data.jpa.repository.support.BeanReference ( org.springframework.data.jpa.repository.support.BeanDefinition , NUMBER ) ; assertThat ( org.springframework.data.jpa.repository.support.BeanReference . getBeanName ( ) , is ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( BeanDefinition org.springframework.data.jpa.repository.support.BeanDefinition , java.lang.String java.lang.String ) { return org.springframework.data.jpa.repository.support.BeanDefinition . getPropertyValues ( ) . getPropertyValue ( java.lang.String ) . getValue ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.jpa.repository.support.BeanReference org.springframework.data.jpa.repository.support.BeanReference ( BeanDefinition org.springframework.data.jpa.repository.support.BeanDefinition , int int ) { java.lang.Object java.lang.Object = org.springframework.data.jpa.repository.support.BeanDefinition . getConstructorArgumentValues ( ) . getIndexedArgumentValues ( ) . get ( int ) . getValue ( ) ; assertTrue ( java.lang.Object instanceof BeanReference ) ; return ( BeanReference ) java.lang.Object ; }  <METHOD_END>
