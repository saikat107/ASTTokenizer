<METHOD_START> void ( MessageFilter org.springframework.integration.dsl.MessageFilter ) { super( org.springframework.integration.dsl.MessageFilter ); }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.FilterEndpointSpec org.springframework.integration.dsl.FilterEndpointSpec ( boolean boolean ) { this . handler . setThrowExceptionOnRejection ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.FilterEndpointSpec org.springframework.integration.dsl.FilterEndpointSpec ( MessageChannel org.springframework.integration.dsl.MessageChannel ) { this . handler . setDiscardChannel ( org.springframework.integration.dsl.MessageChannel ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.FilterEndpointSpec org.springframework.integration.dsl.FilterEndpointSpec ( java.lang.String java.lang.String ) { this . handler . setDiscardChannelName ( java.lang.String ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.FilterEndpointSpec org.springframework.integration.dsl.FilterEndpointSpec ( IntegrationFlow org.springframework.integration.dsl.IntegrationFlow ) { Assert . notNull ( org.springframework.integration.dsl.IntegrationFlow , STRING ) ; DirectChannel org.springframework.integration.dsl.DirectChannel = new DirectChannel ( ) ; IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder = IntegrationFlows . from ( org.springframework.integration.dsl.DirectChannel ) ; org.springframework.integration.dsl.IntegrationFlow . configure ( org.springframework.integration.dsl.IntegrationFlowBuilder ) ; this . componentsToRegister . add ( org.springframework.integration.dsl.IntegrationFlowBuilder . get ( ) ) ; return org.springframework.integration.dsl.FilterEndpointSpec ( org.springframework.integration.dsl.DirectChannel ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.FilterEndpointSpec org.springframework.integration.dsl.FilterEndpointSpec ( boolean boolean ) { this . handler . setDiscardWithinAdvice ( boolean ) ; return _this ( ) ; }  <METHOD_END>
