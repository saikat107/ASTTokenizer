<METHOD_START> @ Before public void void ( ) { this . org.springframework.data.rest.webmvc.json.ObjectMapper = new ObjectMapper ( ) ; this . org.springframework.data.rest.webmvc.json.ObjectMapper . registerModule ( new Jackson2HalModule ( ) ) ; this . org.springframework.data.rest.webmvc.json.ObjectMapper . setHandlerInstantiator ( new HalHandlerInstantiator ( new EvoInflectorRelProvider ( ) , null , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer = new org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer ( ) ; org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer . java.lang.String = STRING ; org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer . java.lang.String = STRING ; org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer . org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Address = new org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Address ( ) ; org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection = org.springframework.data.rest.webmvc.json.ProjectionFactory . createProjection ( org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection .class , org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer ) ; java.lang.String java.lang.String = org.springframework.data.rest.webmvc.json.ObjectMapper . writeValueAsString ( org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection ) ; assertThat ( JsonPath .< java.lang.String > read ( java.lang.String , STRING ) ) . isEqualTo ( ( java.lang.Object ) STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ObjectMapper org.springframework.data.rest.webmvc.json.ObjectMapper = new ObjectMapper ( ) ; org.springframework.data.rest.webmvc.json.ObjectMapper . registerModule ( new Jackson2HalModule ( ) ) ; org.springframework.data.rest.webmvc.json.ObjectMapper . setHandlerInstantiator ( new Jackson2HalModule . Jackson2HalModule ( new EvoInflectorRelProvider ( ) , null , null ) ) ; org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer = new org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer ( ) ; org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer . java.lang.String = STRING ; org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer . java.lang.String = STRING ; org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer . org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Address = new org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Address ( ) ; org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection = org.springframework.data.rest.webmvc.json.ProjectionFactory . createProjection ( org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection .class , org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.Customer ) ; Resources < org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection > org.springframework.data.rest.webmvc.json.Resources<org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection> = new Resources < org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection > ( java.util.Arrays . java.util.List<org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection> ( org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection ) ) ; java.lang.String java.lang.String = org.springframework.data.rest.webmvc.json.ObjectMapper . writeValueAsString ( org.springframework.data.rest.webmvc.json.Resources<org.springframework.data.rest.webmvc.json.ProjectionJacksonIntegrationTests.CustomerProjection> ) ; assertThat ( JsonPath .< java.lang.String > read ( java.lang.String , STRING ) ) . isEqualTo ( ( java.lang.Object ) STRING ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ JsonIgnore java.lang.String java.lang.String ( )  <METHOD_END>
