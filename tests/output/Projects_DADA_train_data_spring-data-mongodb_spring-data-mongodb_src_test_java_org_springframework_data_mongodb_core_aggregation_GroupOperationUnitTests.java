<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new GroupOperation ( ( Fields ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = new GroupOperation ( Fields . from ( ) ) ; ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields = org.springframework.data.mongodb.core.aggregation.GroupOperation . getFields ( ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.ExposedFields . exposesSingleFieldOnly ( ) , is ( true ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.ExposedFields . exposesNoFields ( ) , is ( false ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document . get ( UNDERSCORE_ID ) , is ( nullValue ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = new GroupOperation ( Fields . from ( ) ) . count ( ) . as ( STRING ) . last ( STRING ) . as ( STRING ) ; ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields = org.springframework.data.mongodb.core.aggregation.GroupOperation . getFields ( ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.ExposedFields . exposesSingleFieldOnly ( ) , is ( false ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.ExposedFields . exposesNoFields ( ) , is ( false ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document . get ( UNDERSCORE_ID ) , is ( nullValue ( ) ) ) ; assertThat ( ( Document ) org.springframework.data.mongodb.core.aggregation.Document . get ( STRING ) , is ( new Document ( STRING , NUMBER ) ) ) ; assertThat ( ( Document ) org.springframework.data.mongodb.core.aggregation.Document . get ( STRING ) , is ( new Document ( STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = new GroupOperation ( fields ( STRING ) ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document . get ( UNDERSCORE_ID ) , is ( ( java.lang.Object ) STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = new GroupOperation ( fields ( STRING ) . and ( STRING , STRING ) ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , UNDERSCORE_ID ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document . get ( STRING ) , is ( ( java.lang.Object ) STRING ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document . get ( STRING ) , is ( ( java.lang.Object ) STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = Aggregation . group ( fields ( STRING , STRING ) . and ( STRING ) ) . sum ( STRING ) . as ( STRING ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( ( Document ) new Document ( STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = Aggregation . group ( fields ( STRING , STRING ) . and ( STRING ) ) . sum ( STRING ) . as ( STRING ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( ( Document ) new Document ( STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = Aggregation . group ( fields ( STRING , STRING ) . and ( STRING ) ) . count ( ) . as ( STRING ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( ( Document ) new Document ( STRING , NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = Aggregation . group ( fields ( STRING , STRING ) . and ( STRING ) ) . sum ( STRING ) . as ( STRING ) . min ( STRING ) . as ( STRING ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( ( Document ) new Document ( STRING , STRING ) ) ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( ( Document ) new Document ( STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = Aggregation . group ( STRING , STRING ) . push ( NUMBER ) . as ( STRING ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( ( Document ) new Document ( STRING , NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = Aggregation . group ( STRING , STRING ) . push ( STRING ) . as ( STRING ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( ( Document ) new Document ( STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = Aggregation . group ( STRING , STRING ) . addToSet ( STRING ) . as ( STRING ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( ( Document ) new Document ( STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = Aggregation . group ( STRING , STRING ) . addToSet ( NUMBER ) . as ( STRING ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( ( Document ) new Document ( STRING , NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = Aggregation . group ( STRING ) . first ( SIZE . of ( field ( STRING ) ) ) . as ( STRING ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document . get ( STRING ) , is ( ( java.lang.Object ) new Document ( STRING , java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = Aggregation . group ( STRING , STRING ) . stdDevSamp ( STRING ) . as ( STRING ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( new Document ( STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation = Aggregation . group ( STRING , STRING ) . stdDevPop ( STRING ) . as ( STRING ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.GroupOperation ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( new Document ( STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( GroupOperation org.springframework.data.mongodb.core.aggregation.GroupOperation ) { Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.GroupOperation . toDocument ( Aggregation . DEFAULT_CONTEXT ) ; Document org.springframework.data.mongodb.core.aggregation.Document = DocumentTestUtils . getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; return org.springframework.data.mongodb.core.aggregation.Document ; }  <METHOD_END>
