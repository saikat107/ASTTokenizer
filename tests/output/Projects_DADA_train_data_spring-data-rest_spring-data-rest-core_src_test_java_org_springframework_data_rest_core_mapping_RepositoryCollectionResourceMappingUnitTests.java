<METHOD_START> @ Test public void void ( ) { CollectionResourceMapping org.springframework.data.rest.core.mapping.CollectionResourceMapping = org.springframework.data.rest.core.mapping.CollectionResourceMapping ( org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMappingUnitTests.PersonRepository .class ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . getPath ( ) ) . isEqualTo ( new Path ( STRING ) ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . getRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . getItemResourceRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . isExported ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CollectionResourceMapping org.springframework.data.rest.core.mapping.CollectionResourceMapping = org.springframework.data.rest.core.mapping.CollectionResourceMapping ( org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMappingUnitTests.AnnotatedPersonRepository .class ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . getPath ( ) ) . isEqualTo ( new Path ( STRING ) ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . getRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . getItemResourceRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . isExported ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CollectionResourceMapping org.springframework.data.rest.core.mapping.CollectionResourceMapping = org.springframework.data.rest.core.mapping.CollectionResourceMapping ( org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMappingUnitTests.AnnotatedAnnotatedPersonRepository .class ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . getPath ( ) ) . isEqualTo ( new Path ( STRING ) ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . getRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . getItemResourceRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . isExported ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping = org.springframework.data.rest.core.mapping.CollectionResourceMapping ( org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMappingUnitTests.PackageProtectedRepository .class ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . isExported ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping ( org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMappingUnitTests.PersonRepository .class ) . isPagingResource ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CollectionResourceMapping org.springframework.data.rest.core.mapping.CollectionResourceMapping = org.springframework.data.rest.core.mapping.CollectionResourceMapping ( org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMappingUnitTests.RepositoryAnnotatedRepository .class ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . getRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.CollectionResourceMapping . getItemResourceRel ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryMetadata org.springframework.data.rest.core.mapping.RepositoryMetadata = new DefaultRepositoryMetadata ( org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMappingUnitTests.PersonRepository .class ) { @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return java.lang.Object .class ; } } ; RepositoryCollectionResourceMapping org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMapping = new RepositoryCollectionResourceMapping ( org.springframework.data.rest.core.mapping.RepositoryMetadata , RepositoryDetectionStrategies . DEFAULT ) ; assertThat ( org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMapping . getPath ( ) ) . isEqualTo ( new Path ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return java.lang.Object .class ; }  <METHOD_END>
<METHOD_START> private static org.springframework.data.rest.core.mapping.CollectionResourceMapping org.springframework.data.rest.core.mapping.CollectionResourceMapping ( java.lang.Class<?> < ? > java.lang.Class<?> ) { RepositoryMetadata org.springframework.data.rest.core.mapping.RepositoryMetadata = new DefaultRepositoryMetadata ( java.lang.Class<> ) ; return new RepositoryCollectionResourceMapping ( org.springframework.data.rest.core.mapping.RepositoryMetadata , RepositoryDetectionStrategies . DEFAULT ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.rest.core.mapping.Page<org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMappingUnitTests.Person> < org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMappingUnitTests.Person > org.springframework.data.rest.core.mapping.Page<org.springframework.data.rest.core.mapping.RepositoryCollectionResourceMappingUnitTests.Person> ( Pageable org.springframework.data.rest.core.mapping.Pageable );  <METHOD_END>
