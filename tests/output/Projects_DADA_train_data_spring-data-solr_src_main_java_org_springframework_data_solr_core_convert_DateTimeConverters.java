<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ReadableInstant org.springframework.data.solr.core.convert.ReadableInstant ) { if ( org.springframework.data.solr.core.convert.ReadableInstant == null ) { return null ; } return ( ClientUtils . escapeQueryChars ( org.springframework.data.solr.core.convert.DateTimeFormatter . print ( org.springframework.data.solr.core.convert.ReadableInstant . getMillis ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.convert.DateTime org.springframework.data.solr.core.convert.DateTime ( java.lang.String java.lang.String ) { if ( java.lang.String == null ) { return null ; } return DateTime . parse ( java.lang.String , org.springframework.data.solr.core.convert.DateTimeFormatter ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.convert.DateTime org.springframework.data.solr.core.convert.DateTime ( java.util.Date java.util.Date ) { if ( java.util.Date == null ) { return null ; } return new DateTime ( java.util.Date . long ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Date java.util.Date ( DateTime org.springframework.data.solr.core.convert.DateTime ) { if ( org.springframework.data.solr.core.convert.DateTime == null ) { return null ; } return org.springframework.data.solr.core.convert.DateTime . toDate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( LocalDateTime org.springframework.data.solr.core.convert.LocalDateTime ) { if ( org.springframework.data.solr.core.convert.LocalDateTime == null ) { return null ; } return ClientUtils . escapeQueryChars ( org.springframework.data.solr.core.convert.DateTimeFormatter . print ( org.springframework.data.solr.core.convert.LocalDateTime . toDateTime ( DateTimeZone . UTC ) . getMillis ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Date java.util.Date ( LocalDateTime org.springframework.data.solr.core.convert.LocalDateTime ) { if ( org.springframework.data.solr.core.convert.LocalDateTime == null ) { return null ; } return org.springframework.data.solr.core.convert.LocalDateTime . toDate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.convert.LocalDateTime org.springframework.data.solr.core.convert.LocalDateTime ( java.util.Date java.util.Date ) { if ( java.util.Date == null ) { return null ; } return new LocalDateTime ( java.util.Date . long ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.util.Date java.util.Date ) { if ( java.util.Date == null ) { return null ; } return ClientUtils . escapeQueryChars ( org.springframework.data.solr.core.convert.DateTimeFormatter . print ( java.util.Date . long ( ) ) ) ; }  <METHOD_END>
