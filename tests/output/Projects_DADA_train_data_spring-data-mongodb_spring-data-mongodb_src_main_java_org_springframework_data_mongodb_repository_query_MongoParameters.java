<METHOD_START> public void ( java.lang.reflect.Method java.lang.reflect.Method , boolean boolean ) { super( java.lang.reflect.Method ); java.util.List<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.List<java.lang.Class<?>> = java.util.Arrays . java.util.List<java.lang.Class<?>> ( java.lang.reflect.Method . java.lang.Class<?>[] ( ) ) ; this . java.lang.Integer = java.util.List<java.lang.Class<?>> . int ( TextCriteria .class ) ; ClassTypeInformation < ? > org.springframework.data.mongodb.repository.query.ClassTypeInformation<?> = ClassTypeInformation . from ( java.lang.reflect.Method . java.lang.Class<?> ( ) ) ; java.util.List<org.springframework.data.mongodb.repository.query.TypeInformation<?>> < TypeInformation < ? > > java.util.List<org.springframework.data.mongodb.repository.query.TypeInformation<?>> = org.springframework.data.mongodb.repository.query.ClassTypeInformation<> . getParameterTypes ( java.lang.reflect.Method ) ; this . int = int ( java.util.List<org.springframework.data.mongodb.repository.query.TypeInformation<?>> , Range .class , Distance .class ) ; this . int = this . int == - NUMBER ? int ( java.util.List<org.springframework.data.mongodb.repository.query.TypeInformation<?>> , Distance .class , null ) : - NUMBER ; if ( this . java.lang.Integer == null && boolean ) { this . java.lang.Integer = int ( java.util.List<java.lang.Class<?>> ) ; } else if ( this . java.lang.Integer == null ) { this . java.lang.Integer = - NUMBER ; } }  <METHOD_END>
<METHOD_START> private void ( java.util.List<org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter> < org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter > java.util.List<org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter> , int int , java.lang.Integer java.lang.Integer , java.lang.Integer java.lang.Integer , int int ) { super( java.util.List<org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter> ); this . java.lang.Integer = java.lang.Integer ; this . java.lang.Integer = java.lang.Integer ; this . int = int ; this . int = int ; }  <METHOD_END>
<METHOD_START> private final int int ( java.util.List<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.List<java.lang.Class<?>> ) { for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.util.Arrays . java.util.List<java.lang.Class<? extends java.lang.Object>> ( Point .class , double [] .class ) ) { int int = java.util.List<java.lang.Class<?>> . int ( java.lang.Class<> ) ; if ( int == - NUMBER ) { continue; } if ( int == java.util.List<java.lang.Class<?>> . int ( java.lang.Class<> ) ) { return int ; } else { throw new java.lang.IllegalStateException ( STRING ) ; } } return - NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter ( MethodParameter org.springframework.data.mongodb.repository.query.MethodParameter ) { org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter = new org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter ( org.springframework.data.mongodb.repository.query.MethodParameter ) ; if ( this . java.lang.Integer == null && org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter . boolean ( ) ) { this . java.lang.Integer = org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter . getIndex ( ) ; } else if ( org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter . boolean ( ) ) { throw new java.lang.IllegalStateException ( java.lang.String . java.lang.String ( STRING , org.springframework.data.mongodb.repository.query.MethodParameter . getMethod ( ) . toString ( ) ) ) ; } return org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return - NUMBER ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return java.lang.Integer != null ? java.lang.Integer . int ( ) : - NUMBER ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.lang.Integer != null && this . java.lang.Integer . int ( ) >= NUMBER ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.mongodb.repository.query.MongoParameters org.springframework.data.mongodb.repository.query.MongoParameters ( java.util.List<org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter> < org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter > java.util.List<org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter> ) { return new org.springframework.data.mongodb.repository.query.MongoParameters ( java.util.List<org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter> , this . int , this . java.lang.Integer , this . java.lang.Integer , this . int ) ; }  <METHOD_END>
<METHOD_START> private int int ( java.util.List<org.springframework.data.mongodb.repository.query.TypeInformation<?>> < TypeInformation < ? > > java.util.List<org.springframework.data.mongodb.repository.query.TypeInformation<?>> , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Class<?> < ? > java.lang.Class<?> ) { for ( int int = NUMBER ; int < java.util.List<org.springframework.data.mongodb.repository.query.TypeInformation<?>> . size ( ) ; int ++ ) { TypeInformation < ? > org.springframework.data.mongodb.repository.query.TypeInformation<?> = java.util.List<org.springframework.data.mongodb.repository.query.TypeInformation<?>> . get ( int ) ; if ( org.springframework.data.mongodb.repository.query.TypeInformation<> . getType ( ) . equals ( java.lang.Class<> ) ) { if ( java.lang.Class<> == null ) { return int ; } else if ( java.lang.Class<> . boolean ( org.springframework.data.mongodb.repository.query.TypeInformation<> . getComponentType ( ) . get ( ) . getType ( ) ) ) { return int ; } } } return - NUMBER ; }  <METHOD_END>
<METHOD_START> void ( MethodParameter org.springframework.data.mongodb.repository.query.MethodParameter ) { super( org.springframework.data.mongodb.repository.query.MethodParameter ); this . org.springframework.data.mongodb.repository.query.MethodParameter = org.springframework.data.mongodb.repository.query.MethodParameter ; if ( ! boolean ( ) && boolean ( ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return super. isSpecialParameter ( ) || Distance .class . boolean ( getType ( ) ) || boolean ( ) || TextCriteria .class . boolean ( getType ( ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { java.lang.Integer java.lang.Integer = org.springframework.data.mongodb.repository.query.MongoParameters .this . java.lang.Integer ; return java.lang.Integer != null && java.lang.Integer . boolean ( getIndex ( ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return boolean ( ) && boolean ( ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return Point .class . boolean ( getType ( ) ) || getType ( ) . equals ( double [] .class ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return org.springframework.data.mongodb.repository.query.MethodParameter . getParameterAnnotation ( Near .class ) != null ; }  <METHOD_END>
