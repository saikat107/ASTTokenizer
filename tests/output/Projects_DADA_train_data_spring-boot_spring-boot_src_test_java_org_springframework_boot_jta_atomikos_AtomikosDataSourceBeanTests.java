<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.boot.jta.atomikos.AtomikosDataSourceBeanTests.MockAtomikosDataSourceBean org.springframework.boot.jta.atomikos.AtomikosDataSourceBeanTests.MockAtomikosDataSourceBean = spy ( new org.springframework.boot.jta.atomikos.AtomikosDataSourceBeanTests.MockAtomikosDataSourceBean ( ) ) ; org.springframework.boot.jta.atomikos.AtomikosDataSourceBeanTests.MockAtomikosDataSourceBean . setBeanName ( STRING ) ; org.springframework.boot.jta.atomikos.AtomikosDataSourceBeanTests.MockAtomikosDataSourceBean . afterPropertiesSet ( ) ; assertThat ( org.springframework.boot.jta.atomikos.AtomikosDataSourceBeanTests.MockAtomikosDataSourceBean . getUniqueResourceName ( ) ) . isEqualTo ( STRING ) ; verify ( org.springframework.boot.jta.atomikos.AtomikosDataSourceBeanTests.MockAtomikosDataSourceBean ) . init ( ) ; verify ( org.springframework.boot.jta.atomikos.AtomikosDataSourceBeanTests.MockAtomikosDataSourceBean , never ( ) ) . close ( ) ; org.springframework.boot.jta.atomikos.AtomikosDataSourceBeanTests.MockAtomikosDataSourceBean . destroy ( ) ; verify ( org.springframework.boot.jta.atomikos.AtomikosDataSourceBeanTests.MockAtomikosDataSourceBean ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public synchronized void void ( ) org.springframework.boot.jta.atomikos.AtomikosSQLException {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
