<METHOD_START> public void ( RedisConnectionFactory org.springframework.integration.redis.store.RedisConnectionFactory ) { this . org.springframework.integration.redis.store.RedisTemplate<java.lang.Object,java.lang.Object> = new RedisTemplate < java.lang.Object , java.lang.Object > ( ) ; this . org.springframework.integration.redis.store.RedisTemplate<java.lang.Object,java.lang.Object> . setConnectionFactory ( org.springframework.integration.redis.store.RedisConnectionFactory ) ; this . org.springframework.integration.redis.store.RedisTemplate<java.lang.Object,java.lang.Object> . setKeySerializer ( new StringRedisSerializer ( ) ) ; this . org.springframework.integration.redis.store.RedisTemplate<java.lang.Object,java.lang.Object> . setValueSerializer ( new JdkSerializationRedisSerializer ( ) ) ; this . org.springframework.integration.redis.store.RedisTemplate<java.lang.Object,java.lang.Object> . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( RedisSerializer < ? > org.springframework.integration.redis.store.RedisSerializer<?> ) { Assert . notNull ( org.springframework.integration.redis.store.RedisSerializer<> , STRING ) ; this . org.springframework.integration.redis.store.RedisTemplate<java.lang.Object,java.lang.Object> . setValueSerializer ( org.springframework.integration.redis.store.RedisSerializer<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; BoundValueOperations < java.lang.Object , java.lang.Object > org.springframework.integration.redis.store.BoundValueOperations<java.lang.Object,java.lang.Object> = this . org.springframework.integration.redis.store.RedisTemplate<java.lang.Object,java.lang.Object> . boundValueOps ( java.lang.Object ) ; return org.springframework.integration.redis.store.BoundValueOperations<java.lang.Object,java.lang.Object> . get ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; BoundValueOperations < java.lang.Object , java.lang.Object > org.springframework.integration.redis.store.BoundValueOperations<java.lang.Object,java.lang.Object> = this . org.springframework.integration.redis.store.RedisTemplate<java.lang.Object,java.lang.Object> . boundValueOps ( java.lang.Object ) ; try { org.springframework.integration.redis.store.BoundValueOperations<java.lang.Object,java.lang.Object> . set ( java.lang.Object ) ; } catch ( SerializationException org.springframework.integration.redis.store.SerializationException ) { void ( org.springframework.integration.redis.store.SerializationException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; BoundValueOperations < java.lang.Object , java.lang.Object > org.springframework.integration.redis.store.BoundValueOperations<java.lang.Object,java.lang.Object> = this . org.springframework.integration.redis.store.RedisTemplate<java.lang.Object,java.lang.Object> . boundValueOps ( java.lang.Object ) ; try { java.lang.Boolean java.lang.Boolean = org.springframework.integration.redis.store.BoundValueOperations<java.lang.Object,java.lang.Object> . setIfAbsent ( java.lang.Object ) ; if ( java.lang.Boolean != null && logger . isDebugEnabled ( ) ) { logger . debug ( STRING + java.lang.Boolean + STRING + STRING + java.lang.Object + STRING ) ; } } catch ( SerializationException org.springframework.integration.redis.store.SerializationException ) { void ( org.springframework.integration.redis.store.SerializationException ) ; } }  <METHOD_END>
<METHOD_START> private void void ( SerializationException org.springframework.integration.redis.store.SerializationException ) { throw new java.lang.IllegalArgumentException ( STRING + STRING + STRING + STRING , org.springframework.integration.redis.store.SerializationException ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; java.lang.Object java.lang.Object = this . java.lang.Object ( java.lang.Object ) ; if ( java.lang.Object != null ) { this . org.springframework.integration.redis.store.RedisTemplate<java.lang.Object,java.lang.Object> . delete ( java.lang.Object ) ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Collection<?> < ? > java.util.Collection<?> ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return this . org.springframework.integration.redis.store.RedisTemplate<java.lang.Object,java.lang.Object> . keys ( java.lang.String ) ; }  <METHOD_END>
