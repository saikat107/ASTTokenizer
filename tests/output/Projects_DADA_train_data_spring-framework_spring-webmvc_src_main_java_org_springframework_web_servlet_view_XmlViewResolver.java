<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( Resource org.springframework.web.servlet.view.Resource ) { this . org.springframework.web.servlet.view.Resource = org.springframework.web.servlet.view.Resource ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.web.servlet.view.BeansException { if ( isCache ( ) ) { org.springframework.web.servlet.view.BeanFactory ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.util.Locale java.util.Locale ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.view.View org.springframework.web.servlet.view.View ( java.lang.String java.lang.String , java.util.Locale java.util.Locale ) throws org.springframework.web.servlet.view.BeansException { BeanFactory org.springframework.web.servlet.view.BeanFactory = org.springframework.web.servlet.view.BeanFactory ( ) ; try { return org.springframework.web.servlet.view.BeanFactory . getBean ( java.lang.String , View .class ) ; } catch ( NoSuchBeanDefinitionException org.springframework.web.servlet.view.NoSuchBeanDefinitionException ) { return null ; } }  <METHOD_END>
<METHOD_START> protected synchronized org.springframework.web.servlet.view.BeanFactory org.springframework.web.servlet.view.BeanFactory ( ) org.springframework.web.servlet.view.BeansException { if ( this . org.springframework.web.servlet.view.ConfigurableApplicationContext != null ) { return this . org.springframework.web.servlet.view.ConfigurableApplicationContext ; } Resource org.springframework.web.servlet.view.Resource = this . org.springframework.web.servlet.view.Resource ; if ( org.springframework.web.servlet.view.Resource == null ) { org.springframework.web.servlet.view.Resource = getApplicationContext ( ) . getResource ( java.lang.String ) ; } GenericWebApplicationContext org.springframework.web.servlet.view.GenericWebApplicationContext = new GenericWebApplicationContext ( ) ; org.springframework.web.servlet.view.GenericWebApplicationContext . setParent ( getApplicationContext ( ) ) ; org.springframework.web.servlet.view.GenericWebApplicationContext . setServletContext ( getServletContext ( ) ) ; XmlBeanDefinitionReader org.springframework.web.servlet.view.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.web.servlet.view.GenericWebApplicationContext ) ; org.springframework.web.servlet.view.XmlBeanDefinitionReader . setEnvironment ( getApplicationContext ( ) . getEnvironment ( ) ) ; org.springframework.web.servlet.view.XmlBeanDefinitionReader . setEntityResolver ( new ResourceEntityResolver ( getApplicationContext ( ) ) ) ; org.springframework.web.servlet.view.XmlBeanDefinitionReader . loadBeanDefinitions ( org.springframework.web.servlet.view.Resource ) ; org.springframework.web.servlet.view.GenericWebApplicationContext . refresh ( ) ; if ( isCache ( ) ) { this . org.springframework.web.servlet.view.ConfigurableApplicationContext = org.springframework.web.servlet.view.GenericWebApplicationContext ; } return org.springframework.web.servlet.view.GenericWebApplicationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.web.servlet.view.BeansException { if ( this . org.springframework.web.servlet.view.ConfigurableApplicationContext != null ) { this . org.springframework.web.servlet.view.ConfigurableApplicationContext . close ( ) ; } }  <METHOD_END>
