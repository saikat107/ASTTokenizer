<METHOD_START> public org.springframework.data.solr.core.schema.SchemaDefinition org.springframework.data.solr.core.schema.SchemaDefinition ( SolrPersistentEntity < ? > org.springframework.data.solr.core.schema.SolrPersistentEntity<?> ) { Assert . notNull ( org.springframework.data.solr.core.schema.SolrPersistentEntity<> , STRING ) ; final SchemaDefinition org.springframework.data.solr.core.schema.SchemaDefinition = new SchemaDefinition ( org.springframework.data.solr.core.schema.SolrPersistentEntity<> . getSolrCoreName ( ) ) ; org.springframework.data.solr.core.schema.SolrPersistentEntity<> . doWithProperties ( ( PropertyHandler < SolrPersistentProperty > ) persistentProperty -> { FieldDefinition fieldDefinition = createFieldDefinitionForProperty ( persistentProperty ) ; if ( fieldDefinition != null ) { schemaDefinition . addFieldDefinition ( fieldDefinition ) ; } } ) ; return org.springframework.data.solr.core.schema.SchemaDefinition ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.solr.core.schema.FieldDefinition org.springframework.data.solr.core.schema.FieldDefinition ( SolrPersistentProperty org.springframework.data.solr.core.schema.SolrPersistentProperty ) { if ( org.springframework.data.solr.core.schema.SolrPersistentProperty == null || org.springframework.data.solr.core.schema.SolrPersistentProperty . isReadonly ( ) || org.springframework.data.solr.core.schema.SolrPersistentProperty . isTransient ( ) ) { return null ; } FieldDefinition org.springframework.data.solr.core.schema.FieldDefinition = new FieldDefinition ( org.springframework.data.solr.core.schema.SolrPersistentProperty . getFieldName ( ) ) ; org.springframework.data.solr.core.schema.FieldDefinition . setMultiValued ( org.springframework.data.solr.core.schema.SolrPersistentProperty . isMultiValued ( ) ) ; org.springframework.data.solr.core.schema.FieldDefinition . setIndexed ( org.springframework.data.solr.core.schema.SolrPersistentProperty . isSearchable ( ) ) ; org.springframework.data.solr.core.schema.FieldDefinition . setStored ( org.springframework.data.solr.core.schema.SolrPersistentProperty . isStored ( ) ) ; org.springframework.data.solr.core.schema.FieldDefinition . setType ( org.springframework.data.solr.core.schema.SolrPersistentProperty . getSolrTypeName ( ) ) ; org.springframework.data.solr.core.schema.FieldDefinition . setDefaultValue ( org.springframework.data.solr.core.schema.SolrPersistentProperty . getDefaultValue ( ) ) ; org.springframework.data.solr.core.schema.FieldDefinition . setRequired ( org.springframework.data.solr.core.schema.SolrPersistentProperty . isRequired ( ) ) ; java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = org.springframework.data.solr.core.schema.SolrPersistentProperty . getCopyFields ( ) ; if ( ! CollectionUtils . isEmpty ( java.util.Collection<java.lang.String> ) ) { org.springframework.data.solr.core.schema.FieldDefinition . setCopyFields ( java.util.Collection<java.lang.String> ) ; } return org.springframework.data.solr.core.schema.FieldDefinition ; }  <METHOD_END>
