<METHOD_START> @ java.lang.Override protected void void ( HttpServletRequest org.springframework.web.socket.server.standard.HttpServletRequest , HttpServletResponse org.springframework.web.socket.server.standard.HttpServletResponse , UpgradeInfo org.springframework.web.socket.server.standard.UpgradeInfo , TyrusUpgradeResponse org.springframework.web.socket.server.standard.TyrusUpgradeResponse ) throws java.io.IOException , org.springframework.web.socket.server.standard.ServletException { TyrusHttpUpgradeHandler org.springframework.web.socket.server.standard.TyrusHttpUpgradeHandler = org.springframework.web.socket.server.standard.HttpServletRequest . upgrade ( TyrusHttpUpgradeHandler .class ) ; Writer org.springframework.web.socket.server.standard.Writer = org.springframework.web.socket.server.standard.Writer ( org.springframework.web.socket.server.standard.TyrusHttpUpgradeHandler ) ; org.springframework.web.socket.server.standard.TyrusHttpUpgradeHandler . preInit ( org.springframework.web.socket.server.standard.UpgradeInfo , org.springframework.web.socket.server.standard.Writer , org.springframework.web.socket.server.standard.HttpServletRequest . getUserPrincipal ( ) != null ) ; org.springframework.web.socket.server.standard.HttpServletResponse . setStatus ( org.springframework.web.socket.server.standard.TyrusUpgradeResponse . getStatus ( ) ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map.Entry<java.lang.String,java.util.List<java.lang.String>> : org.springframework.web.socket.server.standard.TyrusUpgradeResponse . getHeaders ( ) . entrySet ( ) ) { org.springframework.web.socket.server.standard.HttpServletResponse . addHeader ( java.util.Map.Entry<java.lang.String,java.util.List<java.lang.String>> . java.lang.String ( ) , Utils . getHeaderFromList ( java.util.Map.Entry<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( ) ) ) ; } org.springframework.web.socket.server.standard.HttpServletResponse . flushBuffer ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.socket.server.standard.Writer org.springframework.web.socket.server.standard.Writer ( TyrusHttpUpgradeHandler org.springframework.web.socket.server.standard.TyrusHttpUpgradeHandler ) { try { return ( Writer ) java.lang.reflect.Constructor<> . newInstance ( org.springframework.web.socket.server.standard.TyrusHttpUpgradeHandler ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new HandshakeFailureException ( STRING , java.lang.Exception ) ; } }  <METHOD_END>
