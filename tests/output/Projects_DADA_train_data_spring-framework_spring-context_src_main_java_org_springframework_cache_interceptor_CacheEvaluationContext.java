<METHOD_START> void ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] , ParameterNameDiscoverer org.springframework.cache.interceptor.ParameterNameDiscoverer ) { super( java.lang.Object , java.lang.reflect.Method , java.lang.Object[] , org.springframework.cache.interceptor.ParameterNameDiscoverer ); }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { if ( this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ) { throw new VariableNotAvailableException ( java.lang.String ) ; } return super. lookupVariable ( java.lang.String ) ; }  <METHOD_END>
