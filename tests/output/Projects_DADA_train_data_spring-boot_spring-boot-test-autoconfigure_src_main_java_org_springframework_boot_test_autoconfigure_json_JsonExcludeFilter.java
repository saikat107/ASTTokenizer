<METHOD_START> void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . org.springframework.boot.test.autoconfigure.json.JsonTest = AnnotatedElementUtils . getMergedAnnotation ( java.lang.Class<> , JsonTest .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return this . org.springframework.boot.test.autoconfigure.json.JsonTest != null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.test.autoconfigure.json.Filter [] org.springframework.boot.test.autoconfigure.json.Filter[] ( FilterType org.springframework.boot.test.autoconfigure.json.FilterType ) { switch ( org.springframework.boot.test.autoconfigure.json.FilterType ) { case INCLUDE : return this . org.springframework.boot.test.autoconfigure.json.JsonTest . includeFilters ( ) ; case EXCLUDE : return this . org.springframework.boot.test.autoconfigure.json.JsonTest . excludeFilters ( ) ; } throw new java.lang.IllegalStateException ( STRING + org.springframework.boot.test.autoconfigure.json.FilterType ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return this . org.springframework.boot.test.autoconfigure.json.JsonTest . useDefaultFilters ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( ) { return java.util.Set<java.lang.Class<?>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( ) { return java.util.Collections . java.util.Set<java.lang.Class<?>> ( ) ; }  <METHOD_END>
