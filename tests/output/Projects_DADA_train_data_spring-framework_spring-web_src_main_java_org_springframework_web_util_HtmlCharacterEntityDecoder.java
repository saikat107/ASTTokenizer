<METHOD_START> public void ( HtmlCharacterEntityReferences org.springframework.web.util.HtmlCharacterEntityReferences , java.lang.String java.lang.String ) { this . org.springframework.web.util.HtmlCharacterEntityReferences = org.springframework.web.util.HtmlCharacterEntityReferences ; this . java.lang.String = java.lang.String ; this . java.lang.StringBuilder = new java.lang.StringBuilder ( java.lang.String . int ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { while ( this . int < this . java.lang.String . int ( ) ) { void ( this . int ) ; void ( ) ; void ( ) ; } return this . java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { this . int = java.lang.Math . int ( int , this . int - int ) ; do { this . int = this . java.lang.String . int ( '&' , this . int ) ; if ( this . int != - NUMBER && this . int < this . int ) this . int = this . java.lang.String . int ( ';' , this . int + NUMBER ) ; boolean boolean = ( this . int != - NUMBER && this . int != - NUMBER && this . int - this . int < int ) ; if ( boolean ) { break; } if ( this . int == - NUMBER ) { break; } if ( this . int == - NUMBER ) { this . int = - NUMBER ; break; } this . int = this . int + NUMBER ; } while ( this . int != - NUMBER ); }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( this . int != this . int ) { int int = ( this . int != - NUMBER ? this . int : this . java.lang.String . int ( ) ) ; if ( int - this . int > NUMBER ) { this . java.lang.StringBuilder . java.lang.StringBuilder ( this . java.lang.String . java.lang.String ( this . int , int ) ) ; this . int = int ; } else { while ( this . int < int ) this . java.lang.StringBuilder . java.lang.StringBuilder ( this . java.lang.String . char ( this . int ++ ) ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( this . int != - NUMBER ) { boolean boolean = ( this . java.lang.String . char ( this . int + NUMBER ) == '#' ) ; boolean boolean = boolean ? boolean ( ) : boolean ( ) ; if ( boolean ) { this . int = this . int + NUMBER ; } else { char char = this . java.lang.String . char ( this . int ) ; this . java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; this . int ++ ; } } }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { char char = this . java.lang.String . char ( this . int + NUMBER ) ; boolean boolean = ( char == 'x' || char == 'X' ) ; try { int int = ( ! boolean ? java.lang.Integer . int ( java.lang.String ( NUMBER ) ) : java.lang.Integer . int ( java.lang.String ( NUMBER ) , NUMBER ) ) ; this . java.lang.StringBuilder . java.lang.StringBuilder ( ( char ) int ) ; return true ; } catch ( java.lang.NumberFormatException java.lang.NumberFormatException ) { return false ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { java.lang.String java.lang.String = java.lang.String ( NUMBER ) ; char char = this . org.springframework.web.util.HtmlCharacterEntityReferences . convertToCharacter ( java.lang.String ) ; if ( char != HtmlCharacterEntityReferences . CHAR_NULL ) { this . java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; return true ; } return false ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( int int ) { return this . java.lang.String . java.lang.String ( this . int + int , this . int ) ; }  <METHOD_END>
