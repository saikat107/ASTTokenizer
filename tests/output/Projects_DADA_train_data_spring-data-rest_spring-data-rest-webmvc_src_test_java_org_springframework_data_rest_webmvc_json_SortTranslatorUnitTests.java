<METHOD_START> @ Before public void void ( ) { org.springframework.data.rest.webmvc.json.KeyValueMappingContext<?,?> = new KeyValueMappingContext <> ( ) ; org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.Plain .class ) ; org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.WithJsonProperty .class ) ; org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.UnwrapEmbedded .class ) ; org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.MultiUnwrapped .class ) ; org.springframework.data.rest.webmvc.json.PersistentEntities = new PersistentEntities ( java.util.Collections . java.util.Set ( org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> ) ) ; org.springframework.data.rest.webmvc.json.SortTranslator = new SortTranslator ( org.springframework.data.rest.webmvc.json.PersistentEntities , org.springframework.data.rest.webmvc.json.ObjectMapper , new Associations ( new PersistentEntitiesResourceMappings ( org.springframework.data.rest.webmvc.json.PersistentEntities ) , mock ( RepositoryRestConfiguration .class ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Sort org.springframework.data.rest.webmvc.json.Sort = org.springframework.data.rest.webmvc.json.SortTranslator . translateSort ( Sort . by ( STRING , STRING ) , org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.Plain .class ) ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNull ( ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Sort org.springframework.data.rest.webmvc.json.Sort = org.springframework.data.rest.webmvc.json.SortTranslator . translateSort ( Sort . by ( STRING , STRING ) , org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.Plain .class ) ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort ) . isEqualTo ( Sort . unsorted ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Sort org.springframework.data.rest.webmvc.json.Sort = org.springframework.data.rest.webmvc.json.SortTranslator . translateSort ( Sort . by ( STRING , STRING ) , org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.WithJsonProperty .class ) ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNull ( ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Sort org.springframework.data.rest.webmvc.json.Sort = org.springframework.data.rest.webmvc.json.SortTranslator . translateSort ( Sort . by ( STRING ) , org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.WithJsonProperty .class ) ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort ) . isEqualTo ( Sort . unsorted ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Sort org.springframework.data.rest.webmvc.json.Sort = org.springframework.data.rest.webmvc.json.SortTranslator . translateSort ( Sort . by ( STRING , STRING , STRING ) , org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.Plain .class ) ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNotNull ( ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNotNull ( ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Sort org.springframework.data.rest.webmvc.json.Sort = org.springframework.data.rest.webmvc.json.SortTranslator . translateSort ( Sort . by ( STRING ) , org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.Plain .class ) ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort ) . isEqualTo ( Sort . unsorted ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Sort org.springframework.data.rest.webmvc.json.Sort = org.springframework.data.rest.webmvc.json.SortTranslator . translateSort ( Sort . by ( STRING ) , org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.Plain .class ) ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort ) . isEqualTo ( Sort . unsorted ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Sort org.springframework.data.rest.webmvc.json.Sort = org.springframework.data.rest.webmvc.json.SortTranslator . translateSort ( Sort . by ( STRING ) , org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.Plain .class ) ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Sort org.springframework.data.rest.webmvc.json.Sort = org.springframework.data.rest.webmvc.json.SortTranslator . translateSort ( Sort . by ( STRING ) , org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.WithJsonProperty .class ) ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Sort org.springframework.data.rest.webmvc.json.Sort = org.springframework.data.rest.webmvc.json.SortTranslator . translateSort ( Sort . by ( STRING ) , org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.UnwrapEmbedded .class ) ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Sort org.springframework.data.rest.webmvc.json.Sort = org.springframework.data.rest.webmvc.json.SortTranslator . translateSort ( Sort . by ( STRING , STRING ) , org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.SortTranslatorUnitTests.MultiUnwrapped .class ) ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNotNull ( ) ; assertThat ( org.springframework.data.rest.webmvc.json.Sort . getOrderFor ( STRING ) ) . isNotNull ( ) ; }  <METHOD_END>
