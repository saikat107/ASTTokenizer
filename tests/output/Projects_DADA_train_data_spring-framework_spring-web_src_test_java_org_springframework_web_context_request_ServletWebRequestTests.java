<METHOD_START> @ Before public void void ( ) { org.springframework.web.context.request.MockHttpServletRequest = new MockHttpServletRequest ( ) ; org.springframework.web.context.request.MockHttpServletResponse = new MockHttpServletResponse ( ) ; org.springframework.web.context.request.ServletWebRequest = new ServletWebRequest ( org.springframework.web.context.request.MockHttpServletRequest , org.springframework.web.context.request.MockHttpServletResponse ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.web.context.request.MockHttpServletRequest . addParameter ( STRING , STRING ) ; org.springframework.web.context.request.MockHttpServletRequest . addParameter ( STRING , STRING ) ; org.springframework.web.context.request.MockHttpServletRequest . addParameter ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.web.context.request.ServletWebRequest . getParameter ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.web.context.request.ServletWebRequest . getParameterValues ( STRING ) . length ) ; assertEquals ( STRING , org.springframework.web.context.request.ServletWebRequest . getParameterValues ( STRING ) [ NUMBER ] ) ; assertEquals ( STRING , org.springframework.web.context.request.ServletWebRequest . getParameter ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.web.context.request.ServletWebRequest . getParameterValues ( STRING ) . length ) ; assertEquals ( STRING , org.springframework.web.context.request.ServletWebRequest . getParameterValues ( STRING ) [ NUMBER ] ) ; assertEquals ( STRING , org.springframework.web.context.request.ServletWebRequest . getParameterValues ( STRING ) [ NUMBER ] ) ; java.util.Map<java.lang.String,java.lang.String[]> < java.lang.String , java.lang.String [] > java.util.Map<java.lang.String,java.lang.String[]> = org.springframework.web.context.request.ServletWebRequest . getParameterMap ( ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,java.lang.String[]> . int ( ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,java.lang.String[]> . java.lang.String[] ( STRING ) . int ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String[]> . java.lang.String[] ( STRING ) [ NUMBER ] ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,java.lang.String[]> . java.lang.String[] ( STRING ) . int ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String[]> . java.lang.String[] ( STRING ) [ NUMBER ] ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String[]> . java.lang.String[] ( STRING ) [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.web.context.request.MockHttpServletRequest . addPreferredLocale ( java.util.Locale . java.util.Locale ) ; assertEquals ( java.util.Locale . java.util.Locale , org.springframework.web.context.request.ServletWebRequest . getLocale ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertSame ( org.springframework.web.context.request.MockHttpServletRequest , org.springframework.web.context.request.ServletWebRequest . getNativeRequest ( ) ) ; assertSame ( org.springframework.web.context.request.MockHttpServletRequest , org.springframework.web.context.request.ServletWebRequest . getNativeRequest ( ServletRequest .class ) ) ; assertSame ( org.springframework.web.context.request.MockHttpServletRequest , org.springframework.web.context.request.ServletWebRequest . getNativeRequest ( HttpServletRequest .class ) ) ; assertSame ( org.springframework.web.context.request.MockHttpServletRequest , org.springframework.web.context.request.ServletWebRequest . getNativeRequest ( MockHttpServletRequest .class ) ) ; assertNull ( org.springframework.web.context.request.ServletWebRequest . getNativeRequest ( MultipartRequest .class ) ) ; assertSame ( org.springframework.web.context.request.MockHttpServletResponse , org.springframework.web.context.request.ServletWebRequest . getNativeResponse ( ) ) ; assertSame ( org.springframework.web.context.request.MockHttpServletResponse , org.springframework.web.context.request.ServletWebRequest . getNativeResponse ( ServletResponse .class ) ) ; assertSame ( org.springframework.web.context.request.MockHttpServletResponse , org.springframework.web.context.request.ServletWebRequest . getNativeResponse ( HttpServletResponse .class ) ) ; assertSame ( org.springframework.web.context.request.MockHttpServletResponse , org.springframework.web.context.request.ServletWebRequest . getNativeResponse ( MockHttpServletResponse .class ) ) ; assertNull ( org.springframework.web.context.request.ServletWebRequest . getNativeResponse ( MultipartRequest .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { HttpServletRequest org.springframework.web.context.request.HttpServletRequest = new HttpServletRequestWrapper ( org.springframework.web.context.request.MockHttpServletRequest ) ; HttpServletResponse org.springframework.web.context.request.HttpServletResponse = new HttpServletResponseWrapper ( org.springframework.web.context.request.MockHttpServletResponse ) ; ServletWebRequest org.springframework.web.context.request.ServletWebRequest = new ServletWebRequest ( org.springframework.web.context.request.HttpServletRequest , org.springframework.web.context.request.HttpServletResponse ) ; assertSame ( org.springframework.web.context.request.HttpServletRequest , org.springframework.web.context.request.ServletWebRequest . getNativeRequest ( ) ) ; assertSame ( org.springframework.web.context.request.HttpServletRequest , org.springframework.web.context.request.ServletWebRequest . getNativeRequest ( ServletRequest .class ) ) ; assertSame ( org.springframework.web.context.request.HttpServletRequest , org.springframework.web.context.request.ServletWebRequest . getNativeRequest ( HttpServletRequest .class ) ) ; assertSame ( org.springframework.web.context.request.MockHttpServletRequest , org.springframework.web.context.request.ServletWebRequest . getNativeRequest ( MockHttpServletRequest .class ) ) ; assertNull ( org.springframework.web.context.request.ServletWebRequest . getNativeRequest ( MultipartRequest .class ) ) ; assertSame ( org.springframework.web.context.request.HttpServletResponse , org.springframework.web.context.request.ServletWebRequest . getNativeResponse ( ) ) ; assertSame ( org.springframework.web.context.request.HttpServletResponse , org.springframework.web.context.request.ServletWebRequest . getNativeResponse ( ServletResponse .class ) ) ; assertSame ( org.springframework.web.context.request.HttpServletResponse , org.springframework.web.context.request.ServletWebRequest . getNativeResponse ( HttpServletResponse .class ) ) ; assertSame ( org.springframework.web.context.request.MockHttpServletResponse , org.springframework.web.context.request.ServletWebRequest . getNativeResponse ( MockHttpServletResponse .class ) ) ; assertNull ( org.springframework.web.context.request.ServletWebRequest . getNativeResponse ( MultipartRequest .class ) ) ; }  <METHOD_END>
