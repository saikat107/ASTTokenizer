<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.buffer.CounterBuffers . increment ( STRING , NUMBER ) ; this . org.springframework.boot.actuate.metrics.buffer.CounterBuffers . doWith ( STRING , new java.util.function.Consumer<org.springframework.boot.actuate.metrics.buffer.CounterBuffer> < CounterBuffer > ( ) { @ java.lang.Override public void void ( CounterBuffer org.springframework.boot.actuate.metrics.buffer.CounterBuffer ) { org.springframework.boot.actuate.metrics.buffer.CounterBuffersTests .this . long = org.springframework.boot.actuate.metrics.buffer.CounterBuffer . getValue ( ) ; } } ) ; assertThat ( this . long ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( CounterBuffer org.springframework.boot.actuate.metrics.buffer.CounterBuffer ) { org.springframework.boot.actuate.metrics.buffer.CounterBuffersTests .this . long = org.springframework.boot.actuate.metrics.buffer.CounterBuffer . getValue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.buffer.CounterBuffers . doWith ( STRING , new java.util.function.Consumer<org.springframework.boot.actuate.metrics.buffer.CounterBuffer> < CounterBuffer > ( ) { @ java.lang.Override public void void ( CounterBuffer org.springframework.boot.actuate.metrics.buffer.CounterBuffer ) { org.springframework.boot.actuate.metrics.buffer.CounterBuffersTests .this . long = org.springframework.boot.actuate.metrics.buffer.CounterBuffer . getValue ( ) ; } } ) ; assertThat ( this . long ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( CounterBuffer org.springframework.boot.actuate.metrics.buffer.CounterBuffer ) { org.springframework.boot.actuate.metrics.buffer.CounterBuffersTests .this . long = org.springframework.boot.actuate.metrics.buffer.CounterBuffer . getValue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( this . org.springframework.boot.actuate.metrics.buffer.CounterBuffers . find ( STRING ) ) . isNull ( ) ; }  <METHOD_END>
