<METHOD_START> @ Test public void void ( ) { TestPropertySourceUtils . addInlinedPropertiesToEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext , STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; this . org.springframework.boot.cloud.cloudfoundry.CloudFoundryVcapEnvironmentPostProcessor . postProcessEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext . getEnvironment ( ) , null ) ; assertThat ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext . getEnvironment ( ) . getProperty ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TestPropertySourceUtils . addInlinedPropertiesToEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext , STRING ) ; this . org.springframework.boot.cloud.cloudfoundry.CloudFoundryVcapEnvironmentPostProcessor . postProcessEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext . getEnvironment ( ) , null ) ; assertThat ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext . getEnvironment ( ) . getProperty ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TestPropertySourceUtils . addInlinedPropertiesToEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext , STRING ) ; this . org.springframework.boot.cloud.cloudfoundry.CloudFoundryVcapEnvironmentPostProcessor . postProcessEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext . getEnvironment ( ) , null ) ; assertThat ( java.lang.String ( STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TestPropertySourceUtils . addInlinedPropertiesToEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext , STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; this . org.springframework.boot.cloud.cloudfoundry.CloudFoundryVcapEnvironmentPostProcessor . postProcessEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext . getEnvironment ( ) , null ) ; assertThat ( java.lang.String ( STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TestPropertySourceUtils . addInlinedPropertiesToEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext , STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; this . org.springframework.boot.cloud.cloudfoundry.CloudFoundryVcapEnvironmentPostProcessor . postProcessEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext . getEnvironment ( ) , null ) ; assertThat ( java.lang.String ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TestPropertySourceUtils . addInlinedPropertiesToEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext , STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; this . org.springframework.boot.cloud.cloudfoundry.CloudFoundryVcapEnvironmentPostProcessor . postProcessEnvironment ( this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext . getEnvironment ( ) , null ) ; assertThat ( java.lang.String ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return this . org.springframework.boot.cloud.cloudfoundry.ConfigurableApplicationContext . getEnvironment ( ) . getProperty ( java.lang.String ) ; }  <METHOD_END>
