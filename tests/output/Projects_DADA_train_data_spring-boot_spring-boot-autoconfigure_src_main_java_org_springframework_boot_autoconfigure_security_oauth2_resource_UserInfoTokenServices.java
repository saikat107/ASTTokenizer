<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( OAuth2RestOperations org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2RestOperations ) { this . org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2RestOperations = org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2RestOperations ; }  <METHOD_END>
<METHOD_START> public void void ( AuthoritiesExtractor org.springframework.boot.autoconfigure.security.oauth2.resource.AuthoritiesExtractor ) { Assert . notNull ( org.springframework.boot.autoconfigure.security.oauth2.resource.AuthoritiesExtractor , STRING ) ; this . org.springframework.boot.autoconfigure.security.oauth2.resource.AuthoritiesExtractor = org.springframework.boot.autoconfigure.security.oauth2.resource.AuthoritiesExtractor ; }  <METHOD_END>
<METHOD_START> public void void ( PrincipalExtractor org.springframework.boot.autoconfigure.security.oauth2.resource.PrincipalExtractor ) { Assert . notNull ( org.springframework.boot.autoconfigure.security.oauth2.resource.PrincipalExtractor , STRING ) ; this . org.springframework.boot.autoconfigure.security.oauth2.resource.PrincipalExtractor = org.springframework.boot.autoconfigure.security.oauth2.resource.PrincipalExtractor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2Authentication org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2Authentication ( java.lang.String java.lang.String )			throws org.springframework.boot.autoconfigure.security.oauth2.resource.AuthenticationException , org.springframework.boot.autoconfigure.security.oauth2.resource.InvalidTokenException { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = java.util.Map<java.lang.String,java.lang.Object> ( this . java.lang.String , java.lang.String ) ; if ( java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) { if ( this . org.springframework.boot.autoconfigure.security.oauth2.resource.Log . isDebugEnabled ( ) ) { this . org.springframework.boot.autoconfigure.security.oauth2.resource.Log . debug ( STRING + java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; } throw new InvalidTokenException ( java.lang.String ) ; } return org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2Authentication ( java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2Authentication org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2Authentication ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { java.lang.Object java.lang.Object = java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> ) ; java.util.List<org.springframework.boot.autoconfigure.security.oauth2.resource.GrantedAuthority> < GrantedAuthority > java.util.List<org.springframework.boot.autoconfigure.security.oauth2.resource.GrantedAuthority> = this . org.springframework.boot.autoconfigure.security.oauth2.resource.AuthoritiesExtractor . extractAuthorities ( java.util.Map<java.lang.String,java.lang.Object> ) ; OAuth2Request org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2Request = new OAuth2Request ( null , this . java.lang.String , null , true , null , null , null , null , null ) ; UsernamePasswordAuthenticationToken org.springframework.boot.autoconfigure.security.oauth2.resource.UsernamePasswordAuthenticationToken = new UsernamePasswordAuthenticationToken ( java.lang.Object , STRING , java.util.List<org.springframework.boot.autoconfigure.security.oauth2.resource.GrantedAuthority> ) ; org.springframework.boot.autoconfigure.security.oauth2.resource.UsernamePasswordAuthenticationToken . setDetails ( java.util.Map<java.lang.String,java.lang.Object> ) ; return new OAuth2Authentication ( org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2Request , org.springframework.boot.autoconfigure.security.oauth2.resource.UsernamePasswordAuthenticationToken ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { java.lang.Object java.lang.Object = this . org.springframework.boot.autoconfigure.security.oauth2.resource.PrincipalExtractor . extractPrincipal ( java.util.Map<java.lang.String,java.lang.Object> ) ; return ( java.lang.Object == null ? STRING : java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2AccessToken org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2AccessToken ( java.lang.String java.lang.String ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING } ) private java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { if ( this . org.springframework.boot.autoconfigure.security.oauth2.resource.Log . isDebugEnabled ( ) ) { this . org.springframework.boot.autoconfigure.security.oauth2.resource.Log . debug ( STRING + java.lang.String ) ; } try { OAuth2RestOperations org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2RestOperations = this . org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2RestOperations ; if ( org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2RestOperations == null ) { BaseOAuth2ProtectedResourceDetails org.springframework.boot.autoconfigure.security.oauth2.resource.BaseOAuth2ProtectedResourceDetails = new BaseOAuth2ProtectedResourceDetails ( ) ; org.springframework.boot.autoconfigure.security.oauth2.resource.BaseOAuth2ProtectedResourceDetails . setClientId ( this . java.lang.String ) ; org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2RestOperations = new OAuth2RestTemplate ( org.springframework.boot.autoconfigure.security.oauth2.resource.BaseOAuth2ProtectedResourceDetails ) ; } OAuth2AccessToken org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2AccessToken = org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2RestOperations . getOAuth2ClientContext ( ) . getAccessToken ( ) ; if ( org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2AccessToken == null || ! java.lang.String . boolean ( org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2AccessToken . getValue ( ) ) ) { DefaultOAuth2AccessToken org.springframework.boot.autoconfigure.security.oauth2.resource.DefaultOAuth2AccessToken = new DefaultOAuth2AccessToken ( java.lang.String ) ; org.springframework.boot.autoconfigure.security.oauth2.resource.DefaultOAuth2AccessToken . setTokenType ( this . java.lang.String ) ; org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2RestOperations . getOAuth2ClientContext ( ) . setAccessToken ( org.springframework.boot.autoconfigure.security.oauth2.resource.DefaultOAuth2AccessToken ) ; } return org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2RestOperations . getForEntity ( java.lang.String , java.util.Map .class ) . getBody ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.boot.autoconfigure.security.oauth2.resource.Log . warn ( STRING + java.lang.Exception . java.lang.Class<? extends java.lang.Exception> ( ) + STRING + java.lang.Exception . java.lang.String ( ) ) ; return java.util.Collections .< java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( STRING , STRING ) ; } }  <METHOD_END>
