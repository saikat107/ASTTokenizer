<METHOD_START> @ Test public void void ( ) { LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; assertThat ( this . org.springframework.boot.logging.LoggerConfigurationComparator . compare ( org.springframework.boot.logging.LoggerConfiguration , org.springframework.boot.logging.LoggerConfiguration ) ) . isLessThan ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; assertThat ( this . org.springframework.boot.logging.LoggerConfigurationComparator . compare ( org.springframework.boot.logging.LoggerConfiguration , org.springframework.boot.logging.LoggerConfiguration ) ) . isGreaterThan ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; assertThat ( this . org.springframework.boot.logging.LoggerConfigurationComparator . compare ( org.springframework.boot.logging.LoggerConfiguration , org.springframework.boot.logging.LoggerConfiguration ) ) . isLessThan ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; assertThat ( this . org.springframework.boot.logging.LoggerConfigurationComparator . compare ( org.springframework.boot.logging.LoggerConfiguration , org.springframework.boot.logging.LoggerConfiguration ) ) . isGreaterThan ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; assertThat ( this . org.springframework.boot.logging.LoggerConfigurationComparator . compare ( org.springframework.boot.logging.LoggerConfiguration , org.springframework.boot.logging.LoggerConfiguration ) ) . isLessThan ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; assertThat ( this . org.springframework.boot.logging.LoggerConfigurationComparator . compare ( org.springframework.boot.logging.LoggerConfiguration , org.springframework.boot.logging.LoggerConfiguration ) ) . isGreaterThan ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; LoggerConfiguration org.springframework.boot.logging.LoggerConfiguration = new LoggerConfiguration ( STRING , null , LogLevel . OFF ) ; assertThat ( this . org.springframework.boot.logging.LoggerConfigurationComparator . compare ( org.springframework.boot.logging.LoggerConfiguration , org.springframework.boot.logging.LoggerConfiguration ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
