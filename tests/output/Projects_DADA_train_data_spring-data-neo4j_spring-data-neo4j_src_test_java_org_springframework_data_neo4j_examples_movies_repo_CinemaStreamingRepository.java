<METHOD_START> java.util.Optional<org.springframework.data.neo4j.examples.movies.repo.Cinema> < Cinema > java.util.Optional<org.springframework.data.neo4j.examples.movies.repo.Cinema> ( java.lang.String java.lang.String , @ Depth int int );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING ) java.util.stream.Stream<org.springframework.data.neo4j.examples.movies.repo.Cinema> < Cinema > java.util.stream.Stream<org.springframework.data.neo4j.examples.movies.repo.Cinema> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.stream.Stream<org.springframework.data.neo4j.examples.movies.repo.Cinema> < Cinema > java.util.stream.Stream<org.springframework.data.neo4j.examples.movies.repo.Cinema> ( Sort org.springframework.data.neo4j.examples.movies.repo.Sort );  <METHOD_END>
<METHOD_START> @ Async @ Query ( value = STRING ) java.util.concurrent.CompletableFuture<java.util.List<org.springframework.data.neo4j.examples.movies.repo.Cinema>> < java.util.List<org.springframework.data.neo4j.examples.movies.repo.Cinema> < Cinema > > java.util.concurrent.CompletableFuture<java.util.List<org.springframework.data.neo4j.examples.movies.repo.Cinema>> ( )  <METHOD_END>
