<METHOD_START> public void ( Matcher < U > org.springframework.integration.test.matcher.Matcher<U> ) { this( org.springframework.integration.test.matcher.Matcher<U> , NUMBER , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( Matcher < U > org.springframework.integration.test.matcher.Matcher<U> , int int , int int ) { this . org.springframework.integration.test.matcher.Matcher<U> = org.springframework.integration.test.matcher.Matcher<U> ; this . int = int ; this . int = int ; }  <METHOD_END>
<METHOD_START> public static < U > org.springframework.integration.test.matcher.Matcher<U> < U > org.springframework.integration.test.matcher.Matcher<U> ( int int , int int , Matcher < U > org.springframework.integration.test.matcher.Matcher<U> ) { return new org.springframework.integration.test.matcher.EventuallyMatcher<U> < U > ( org.springframework.integration.test.matcher.Matcher<U> , int , int ) ; }  <METHOD_END>
<METHOD_START> public static < U > org.springframework.integration.test.matcher.Matcher<U> < U > org.springframework.integration.test.matcher.Matcher<U> ( Matcher < U > org.springframework.integration.test.matcher.Matcher<U> ) { return new org.springframework.integration.test.matcher.EventuallyMatcher<U> < U > ( org.springframework.integration.test.matcher.Matcher<U> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Description org.springframework.integration.test.matcher.Description ) { org.springframework.integration.test.matcher.Description . appendDescriptionOf ( org.springframework.integration.test.matcher.Matcher<U> ) . appendText ( java.lang.String . java.lang.String ( STRING , int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( java.lang.Object java.lang.Object , Description org.springframework.integration.test.matcher.Description ) { org.springframework.integration.test.matcher.Description . appendText ( java.lang.String . java.lang.String ( STRING , int , int , int * int ) ) ; for ( int int = NUMBER ; int < int ; int ++ ) { boolean boolean = org.springframework.integration.test.matcher.Matcher<U> . matches ( java.lang.Object ) ; if ( boolean ) { return true ; } org.springframework.integration.test.matcher.Matcher<U> . describeMismatch ( java.lang.Object , org.springframework.integration.test.matcher.Description ) ; org.springframework.integration.test.matcher.Description . appendText ( STRING ) ; try { java.lang.Thread . void ( int ) ; } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { java.lang.Thread . java.lang.Thread ( ) . void ( ) ; break; } } return false ; }  <METHOD_END>
