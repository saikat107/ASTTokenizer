<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return org.springframework.test.context.env.ConfigurableEnvironment . getProperty ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( java.lang.String ( STRING ) , is ( STRING ) ) ; assertThat ( java.lang.String ( STRING ) , is ( STRING ) ) ; assertThat ( java.lang.String ( STRING ) , is ( STRING ) ) ; assertThat ( java.lang.String ( STRING ) , is ( STRING ) ) ; assertThat ( java.lang.String ( STRING ) , is ( STRING ) ) ; assertThat ( java.lang.String ( STRING ) , is ( STRING ) ) ; assertThat ( java.lang.String ( STRING ) , is ( STRING ) ) ; assertThat ( java.lang.String ( STRING ) , is ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { final java.lang.String [] java.lang.String[] = new java.lang.String [] { STRING , STRING , STRING , STRING , STRING , STRING , STRING , STRING } ; EnumerablePropertySource org.springframework.test.context.env.EnumerablePropertySource = ( EnumerablePropertySource ) org.springframework.test.context.env.ConfigurableEnvironment . getPropertySources ( ) . get ( INLINED_PROPERTIES_PROPERTY_SOURCE_NAME ) ; assertArrayEquals ( java.lang.String[] , org.springframework.test.context.env.EnumerablePropertySource . getPropertyNames ( ) ) ; }  <METHOD_END>
