<METHOD_START> @ Before public void void ( ) { this . org.springframework.integration.amqp.support.RabbitTemplate = new RabbitTemplate ( new CachingConnectionFactory ( STRING ) ) ; this . org.springframework.integration.amqp.support.RabbitTemplate . setMessageConverter ( new Jackson2JsonMessageConverter ( ) ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { this . org.springframework.integration.amqp.support.BrokerRunning . removeTestQueues ( ) ; ( ( CachingConnectionFactory ) this . org.springframework.integration.amqp.support.RabbitTemplate . getConnectionFactory ( ) ) . destroy ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { @ java.lang.SuppressWarnings ( STRING ) final Message < java.lang.String > org.springframework.integration.amqp.support.Message<java.lang.String> = ( Message < java.lang.String > ) new ObjectToJsonTransformer ( ) . transform ( new GenericMessage < org.springframework.integration.amqp.support.JsonConverterCompatibilityTests.Foo > ( new org.springframework.integration.amqp.support.JsonConverterCompatibilityTests.Foo ( ) ) ) ; MessageProperties org.springframework.integration.amqp.support.MessageProperties = new MessageProperties ( ) ; DefaultAmqpHeaderMapper . outboundMapper ( ) . fromHeadersToRequest ( org.springframework.integration.amqp.support.Message<java.lang.String> . getHeaders ( ) , org.springframework.integration.amqp.support.MessageProperties ) ; final BasicProperties org.springframework.integration.amqp.support.BasicProperties = new DefaultMessagePropertiesConverter ( ) . fromMessageProperties ( org.springframework.integration.amqp.support.MessageProperties , STRING ) ; this . org.springframework.integration.amqp.support.RabbitTemplate . execute ( channel -> { channel . basicPublish ( STRING , JSON_TESTQ , props , out . getPayload ( ) . getBytes ( ) ) ; return null ; } ) ; java.lang.Object java.lang.Object = this . org.springframework.integration.amqp.support.RabbitTemplate . receiveAndConvert ( java.lang.String ) ; assertThat ( java.lang.Object , instanceOf ( org.springframework.integration.amqp.support.JsonConverterCompatibilityTests.Foo .class ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
