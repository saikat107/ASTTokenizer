<METHOD_START> public void ( CassandraMappingContext org.springframework.data.cassandra.core.CassandraMappingContext , CassandraAdminOperations org.springframework.data.cassandra.core.CassandraAdminOperations ) { Assert . notNull ( org.springframework.data.cassandra.core.CassandraAdminOperations , STRING ) ; Assert . notNull ( org.springframework.data.cassandra.core.CassandraMappingContext , STRING ) ; this . org.springframework.data.cassandra.core.CassandraAdminOperations = org.springframework.data.cassandra.core.CassandraAdminOperations ; this . org.springframework.data.cassandra.core.CassandraMappingContext = org.springframework.data.cassandra.core.CassandraMappingContext ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { org.springframework.data.cassandra.core.CassandraAdminOperations . getKeyspaceMetadata ( ) . getTables ( ) . stream ( ) . filter ( table -> dropUnused || mappingContext . usesTable ( table ) ) . forEach ( table -> cassandraAdminOperations . dropTable ( CqlIdentifier . cqlId ( table . getName ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { java.util.Set<org.springframework.data.cassandra.core.CqlIdentifier> < CqlIdentifier > java.util.Set<org.springframework.data.cassandra.core.CqlIdentifier> = org.springframework.data.cassandra.core.CassandraMappingContext . getUserDefinedTypeEntities ( ) . stream ( ) . map ( CassandraPersistentEntity :: getTableName ) . collect ( java.util.stream.Collectors . java.util.stream.Collector<java.lang.Object,?,java.util.Set<java.lang.Object>> ( ) ) ; org.springframework.data.cassandra.core.CassandraAdminOperations . getKeyspaceMetadata ( ) . getUserTypes ( ) . forEach ( userType -> { CqlIdentifier identifier = CqlIdentifier . cqlId ( userType . getTypeName ( ) ) ; if ( canRecreate . contains ( identifier ) ) { cassandraAdminOperations . dropUserType ( identifier ) ; } else if ( dropUnused && ! mappingContext . usesUserType ( userType ) ) { cassandraAdminOperations . dropUserType ( identifier ) ; } } ) ; }  <METHOD_END>
