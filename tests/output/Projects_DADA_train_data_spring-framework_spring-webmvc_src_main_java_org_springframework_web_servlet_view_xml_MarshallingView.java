<METHOD_START> public void ( ) { setContentType ( java.lang.String ) ; setExposePathVariables ( false ) ; }  <METHOD_END>
<METHOD_START> public void ( Marshaller org.springframework.web.servlet.view.xml.Marshaller ) { this(); Assert . notNull ( org.springframework.web.servlet.view.xml.Marshaller , STRING ) ; this . org.springframework.web.servlet.view.xml.Marshaller = org.springframework.web.servlet.view.xml.Marshaller ; }  <METHOD_END>
<METHOD_START> public void void ( Marshaller org.springframework.web.servlet.view.xml.Marshaller ) { this . org.springframework.web.servlet.view.xml.Marshaller = org.springframework.web.servlet.view.xml.Marshaller ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { Assert . notNull ( this . org.springframework.web.servlet.view.xml.Marshaller , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , HttpServletRequest org.springframework.web.servlet.view.xml.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.view.xml.HttpServletResponse ) throws java.lang.Exception { java.lang.Object java.lang.Object = java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> ) ; if ( java.lang.Object == null ) { throw new java.lang.IllegalStateException ( STRING + java.util.Map<java.lang.String,java.lang.Object> ) ; } java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( NUMBER ) ; this . org.springframework.web.servlet.view.xml.Marshaller . marshal ( java.lang.Object , new javax.xml.transform.stream.StreamResult ( java.io.ByteArrayOutputStream ) ) ; setResponseContentType ( org.springframework.web.servlet.view.xml.HttpServletRequest , org.springframework.web.servlet.view.xml.HttpServletResponse ) ; org.springframework.web.servlet.view.xml.HttpServletResponse . setContentLength ( java.io.ByteArrayOutputStream . int ( ) ) ; java.io.ByteArrayOutputStream . void ( org.springframework.web.servlet.view.xml.HttpServletResponse . getOutputStream ( ) ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) throws java.lang.IllegalStateException { if ( this . java.lang.String != null ) { java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( this . java.lang.String ) ; if ( java.lang.Object == null ) { throw new java.lang.IllegalStateException ( STRING + this . java.lang.String + STRING ) ; } if ( ! boolean ( this . java.lang.String , java.lang.Object ) ) { throw new java.lang.IllegalStateException ( STRING + java.lang.Object + STRING + this . java.lang.String + STRING ) ; } return java.lang.Object ; } for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { java.lang.Object java.lang.Object = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ; if ( java.lang.Object != null && ( java.util.Map<java.lang.String,java.lang.Object> . int ( ) == NUMBER || ! ( java.lang.Object instanceof BindingResult ) ) && boolean ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) , java.lang.Object ) ) { return java.lang.Object ; } } return null ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ; if ( java.lang.Object instanceof javax.xml.bind.JAXBElement ) { java.lang.Class<?> = ( ( javax.xml.bind.JAXBElement ) java.lang.Object ) . java.lang.Class ( ) ; } return this . org.springframework.web.servlet.view.xml.Marshaller . supports ( java.lang.Class<> ) ; }  <METHOD_END>
