<METHOD_START> @ Test public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . contentType ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . contentType ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . encoding ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . encoding ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . string ( new java.lang.String ( java.lang.String . byte[] ( STRING ) ) ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . encoding ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = new java.lang.String ( java.lang.String . byte[] ( STRING ) ) ; new ContentResultMatchers ( ) . string ( Matchers . equalTo ( java.lang.String ) ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . string ( Matchers . equalTo ( STRING ) ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . bytes ( java.lang.String . byte[] ( STRING ) ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . bytes ( STRING . byte[] ( ) ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . json ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; new ContentResultMatchers ( ) . json ( STRING , false ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . json ( STRING , true ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; new ContentResultMatchers ( ) . json ( STRING , true ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . json ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new ContentResultMatchers ( ) . json ( STRING , true ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ( ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.test.web.servlet.result.StubMvcResult org.springframework.test.web.servlet.result.StubMvcResult ( ) java.lang.Exception { MockHttpServletResponse org.springframework.test.web.servlet.result.MockHttpServletResponse = new MockHttpServletResponse ( ) ; org.springframework.test.web.servlet.result.MockHttpServletResponse . addHeader ( STRING , STRING ) ; org.springframework.test.web.servlet.result.MockHttpServletResponse . getWriter ( ) . print ( new java.lang.String ( java.lang.String . byte[] ( STRING ) ) ) ; return new StubMvcResult ( null , null , null , null , null , null , org.springframework.test.web.servlet.result.MockHttpServletResponse ) ; }  <METHOD_END>
