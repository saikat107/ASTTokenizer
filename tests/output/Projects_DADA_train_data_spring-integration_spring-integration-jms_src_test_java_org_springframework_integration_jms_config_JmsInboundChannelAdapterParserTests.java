<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) ; PollableChannel org.springframework.integration.jms.config.PollableChannel = ( PollableChannel ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.jms.config.Message<?> = org.springframework.integration.jms.config.PollableChannel . receive ( long ) ; MessageHistory org.springframework.integration.jms.config.MessageHistory = MessageHistory . read ( org.springframework.integration.jms.config.Message<> ) ; assertNotNull ( org.springframework.integration.jms.config.MessageHistory ) ; java.util.Properties java.util.Properties = TestUtils . locateComponentInHistory ( org.springframework.integration.jms.config.MessageHistory , STRING , NUMBER ) ; assertNotNull ( java.util.Properties ) ; assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; assertNotNull ( STRING , org.springframework.integration.jms.config.Message<> ) ; assertEquals ( STRING , org.springframework.integration.jms.config.Message<> . getPayload ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) ; JmsTemplate org.springframework.integration.jms.config.JmsTemplate = TestUtils . getPropertyValue ( org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) , STRING , JmsTemplate .class ) ; assertTrue ( org.springframework.integration.jms.config.JmsTemplate . isSessionTransacted ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) ; PollableChannel org.springframework.integration.jms.config.PollableChannel = ( PollableChannel ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.jms.config.Message<?> = org.springframework.integration.jms.config.PollableChannel . receive ( long ) ; assertNotNull ( STRING , org.springframework.integration.jms.config.Message<> ) ; assertEquals ( STRING , org.springframework.integration.jms.config.Message<> . getPayload ( ) ) ; assertFalse ( TestUtils . getPropertyValue ( org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) , STRING , JmsTemplate .class ) . isSessionTransacted ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) ; PollableChannel org.springframework.integration.jms.config.PollableChannel = ( PollableChannel ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.jms.config.Message<?> = org.springframework.integration.jms.config.PollableChannel . receive ( long ) ; assertNotNull ( STRING , org.springframework.integration.jms.config.Message<> ) ; assertEquals ( STRING , org.springframework.integration.jms.config.Message<> . getPayload ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionStoreException .class ) public void void ( ) { new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanCreationException .class ) public void void ( ) { try { new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) . close ( ) ; } catch ( BeanCreationException org.springframework.integration.jms.config.BeanCreationException ) { java.lang.Throwable java.lang.Throwable = org.springframework.integration.jms.config.BeanCreationException . getRootCause ( ) ; assertEquals ( NoSuchBeanDefinitionException .class , java.lang.Throwable . java.lang.Class<? extends java.lang.Throwable> ( ) ) ; throw org.springframework.integration.jms.config.BeanCreationException ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) ; PollableChannel org.springframework.integration.jms.config.PollableChannel = ( PollableChannel ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.jms.config.Message<?> = org.springframework.integration.jms.config.PollableChannel . receive ( long ) ; assertNotNull ( STRING , org.springframework.integration.jms.config.Message<> ) ; assertEquals ( STRING , org.springframework.integration.jms.config.Message<> . getPayload ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanCreationException .class ) public void void ( ) { new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) ; PollableChannel org.springframework.integration.jms.config.PollableChannel = ( PollableChannel ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.jms.config.Message<?> = org.springframework.integration.jms.config.PollableChannel . receive ( long ) ; assertNotNull ( STRING , org.springframework.integration.jms.config.Message<> ) ; assertEquals ( STRING , org.springframework.integration.jms.config.Message<> . getPayload ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) ; PollableChannel org.springframework.integration.jms.config.PollableChannel = ( PollableChannel ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.jms.config.Message<?> = org.springframework.integration.jms.config.PollableChannel . receive ( long ) ; assertNotNull ( STRING , org.springframework.integration.jms.config.Message<> ) ; assertEquals ( STRING , org.springframework.integration.jms.config.Message<> . getPayload ( ) ) ; assertEquals ( STRING , org.springframework.integration.jms.config.Message<> . getHeaders ( ) . get ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.integration.jms.config.Message<> . getHeaders ( ) . get ( STRING ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) ; PollableChannel org.springframework.integration.jms.config.PollableChannel = ( PollableChannel ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.jms.config.Message<?> = org.springframework.integration.jms.config.PollableChannel . receive ( long ) ; assertNotNull ( STRING , org.springframework.integration.jms.config.Message<> ) ; assertEquals ( STRING , org.springframework.integration.jms.config.Message<> . getPayload ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) ; JmsTemplate org.springframework.integration.jms.config.JmsTemplate = TestUtils . getPropertyValue ( org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) , STRING , JmsTemplate .class ) ; assertEquals ( NUMBER , org.springframework.integration.jms.config.JmsTemplate . getReceiveTimeout ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) ; PollableChannel org.springframework.integration.jms.config.PollableChannel = ( PollableChannel ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.jms.config.Message<?> = org.springframework.integration.jms.config.PollableChannel . receive ( long ) ; assertNotNull ( STRING , org.springframework.integration.jms.config.Message<> ) ; assertEquals ( STRING , org.springframework.integration.jms.config.Message<> . getPayload ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsInboundChannelAdapterParserTests> ( ) ) ; PollableChannel org.springframework.integration.jms.config.PollableChannel = ( PollableChannel ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.jms.config.Message<?> = org.springframework.integration.jms.config.PollableChannel . receive ( long ) ; assertNotNull ( STRING , org.springframework.integration.jms.config.Message<> ) ; assertEquals ( STRING , org.springframework.integration.jms.config.Message<> . getPayload ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
