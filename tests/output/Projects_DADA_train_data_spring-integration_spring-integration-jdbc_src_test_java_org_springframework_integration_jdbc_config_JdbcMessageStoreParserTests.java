<METHOD_START> @ Test public void void ( ) { void ( STRING , java.lang.Class<? extends org.springframework.integration.jdbc.config.JdbcMessageStoreParserTests> ( ) ) ; MessageStore org.springframework.integration.jdbc.config.MessageStore = org.springframework.integration.jdbc.config.ClassPathXmlApplicationContext . getBean ( STRING , MessageStore .class ) ; assertTrue ( org.springframework.integration.jdbc.config.MessageStore instanceof JdbcMessageStore ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( STRING , java.lang.Class<? extends org.springframework.integration.jdbc.config.JdbcMessageStoreParserTests> ( ) ) ; MessageStore org.springframework.integration.jdbc.config.MessageStore = org.springframework.integration.jdbc.config.ClassPathXmlApplicationContext . getBean ( STRING , MessageStore .class ) ; assertTrue ( org.springframework.integration.jdbc.config.MessageStore instanceof JdbcMessageStore ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( STRING , java.lang.Class<? extends org.springframework.integration.jdbc.config.JdbcMessageStoreParserTests> ( ) ) ; MessageStore org.springframework.integration.jdbc.config.MessageStore = org.springframework.integration.jdbc.config.ClassPathXmlApplicationContext . getBean ( STRING , MessageStore .class ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( org.springframework.integration.jdbc.config.MessageStore , STRING ) ; assertTrue ( java.lang.Object instanceof org.springframework.integration.jdbc.config.JdbcMessageStoreParserTests.EnhancedSerializer ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( org.springframework.integration.jdbc.config.MessageStore , STRING ) ; assertTrue ( java.lang.Object instanceof org.springframework.integration.jdbc.config.JdbcMessageStoreParserTests.EnhancedSerializer ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( STRING , java.lang.Class<? extends org.springframework.integration.jdbc.config.JdbcMessageStoreParserTests> ( ) ) ; MessageStore org.springframework.integration.jdbc.config.MessageStore = org.springframework.integration.jdbc.config.ClassPathXmlApplicationContext . getBean ( STRING , MessageStore .class ) ; assertEquals ( STRING , ReflectionTestUtils . getField ( org.springframework.integration.jdbc.config.MessageStore , STRING ) ) ; assertEquals ( STRING , ReflectionTestUtils . getField ( org.springframework.integration.jdbc.config.MessageStore , STRING ) ) ; assertEquals ( org.springframework.integration.jdbc.config.ClassPathXmlApplicationContext . getBean ( LobHandler .class ) , ReflectionTestUtils . getField ( org.springframework.integration.jdbc.config.MessageStore , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { if ( org.springframework.integration.jdbc.config.ClassPathXmlApplicationContext != null ) { org.springframework.integration.jdbc.config.ClassPathXmlApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { org.springframework.integration.jdbc.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( java.lang.String , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.io.InputStream java.io.InputStream ) throws java.io.IOException { Message < ? > org.springframework.integration.jdbc.config.Message<?> = ( Message < ? > ) org.springframework.integration.jdbc.config.Deserializer<java.lang.Object> . deserialize ( java.io.InputStream ) ; return org.springframework.integration.jdbc.config.Message<> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.io.OutputStream java.io.OutputStream ) throws java.io.IOException { Message < ? > org.springframework.integration.jdbc.config.Message<?> = ( Message < ? > ) java.lang.Object ; org.springframework.integration.jdbc.config.Message<?> = MessageBuilder . fromMessage ( org.springframework.integration.jdbc.config.Message<> ) . setHeader ( STRING , STRING ) . build ( ) ; org.springframework.integration.jdbc.config.Serializer<java.lang.Object> . serialize ( org.springframework.integration.jdbc.config.Message<> , java.io.OutputStream ) ; }  <METHOD_END>
