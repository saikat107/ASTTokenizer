<METHOD_START> @ Test public void void ( ) { DataBuffer org.springframework.core.io.buffer.support.DataBuffer = this . bufferFactory . allocateBuffer ( NUMBER ) ; byte [] byte[] = { 'a' , 'b' , 'c' , 'd' } ; org.springframework.core.io.buffer.support.DataBuffer . write ( byte[] ) ; byte [] byte[] = DataBufferTestUtils . dumpBytes ( org.springframework.core.io.buffer.support.DataBuffer ) ; assertArrayEquals ( byte[] , byte[] ) ; release ( org.springframework.core.io.buffer.support.DataBuffer ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DataBuffer org.springframework.core.io.buffer.support.DataBuffer = this . bufferFactory . allocateBuffer ( NUMBER ) ; java.lang.String java.lang.String = STRING ; org.springframework.core.io.buffer.support.DataBuffer . write ( java.lang.String . byte[] ( java.nio.charset.StandardCharsets . java.nio.charset.Charset ) ) ; java.lang.String java.lang.String = DataBufferTestUtils . dumpString ( org.springframework.core.io.buffer.support.DataBuffer , java.nio.charset.StandardCharsets . java.nio.charset.Charset ) ; assertEquals ( java.lang.String , java.lang.String ) ; release ( org.springframework.core.io.buffer.support.DataBuffer ) ; }  <METHOD_END>
