<METHOD_START> @ Test public void void ( ) java.lang.Exception { ExampleEntity org.springframework.boot.test.autoconfigure.orm.jpa.ExampleEntity = this . org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager . persist ( new ExampleEntity ( STRING , STRING ) ) ; this . org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager . flush ( ) ; java.lang.Object java.lang.Object = this . org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager . getId ( org.springframework.boot.test.autoconfigure.orm.jpa.ExampleEntity ) ; ExampleEntity org.springframework.boot.test.autoconfigure.orm.jpa.ExampleEntity = this . org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager . find ( ExampleEntity .class , java.lang.Object ) ; assertThat ( org.springframework.boot.test.autoconfigure.orm.jpa.ExampleEntity . getName ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Long java.lang.Long = this . org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager . persistAndGetId ( new ExampleEntity ( STRING , STRING ) , java.lang.Long .class ) ; assertThat ( java.lang.Long ) . isNotNull ( ) ; java.lang.String java.lang.String = this . org.springframework.boot.test.autoconfigure.orm.jpa.JdbcTemplate . queryForObject ( STRING , new java.lang.Object [] { java.lang.Long } , java.lang.String .class ) ; assertThat ( java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager . persist ( new ExampleEntity ( STRING , STRING ) ) ; this . org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager . persist ( new ExampleEntity ( STRING , STRING ) ) ; this . org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager . flush ( ) ; ExampleEntity org.springframework.boot.test.autoconfigure.orm.jpa.ExampleEntity = this . org.springframework.boot.test.autoconfigure.orm.jpa.ExampleRepository . findByReference ( STRING ) ; assertThat ( org.springframework.boot.test.autoconfigure.orm.jpa.ExampleEntity . getName ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = this . javax.sql.DataSource . java.sql.Connection ( ) . java.sql.DatabaseMetaData ( ) . java.lang.String ( ) ; assertThat ( java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.test.autoconfigure.orm.jpa.ExpectedException . expect ( NoSuchBeanDefinitionException .class ) ; this . org.springframework.boot.test.autoconfigure.orm.jpa.ApplicationContext . getBean ( ExampleComponent .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( this . org.springframework.boot.test.autoconfigure.orm.jpa.ApplicationContext ) . has ( importedAutoConfiguration ( FlywayAutoConfiguration .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( this . org.springframework.boot.test.autoconfigure.orm.jpa.ApplicationContext ) . has ( importedAutoConfiguration ( LiquibaseAutoConfiguration .class ) ) ; }  <METHOD_END>
