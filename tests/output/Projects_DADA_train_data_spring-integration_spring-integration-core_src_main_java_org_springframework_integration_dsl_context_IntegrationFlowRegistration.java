<METHOD_START> void ( IntegrationFlow org.springframework.integration.dsl.context.IntegrationFlow ) { this . org.springframework.integration.dsl.context.IntegrationFlow = org.springframework.integration.dsl.context.IntegrationFlow ; }  <METHOD_END>
<METHOD_START> void void ( ConfigurableListableBeanFactory org.springframework.integration.dsl.context.ConfigurableListableBeanFactory ) { this . org.springframework.integration.dsl.context.ConfigurableListableBeanFactory = org.springframework.integration.dsl.context.ConfigurableListableBeanFactory ; }  <METHOD_END>
<METHOD_START> void void ( IntegrationFlowContext org.springframework.integration.dsl.context.IntegrationFlowContext ) { this . org.springframework.integration.dsl.context.IntegrationFlowContext = org.springframework.integration.dsl.context.IntegrationFlowContext ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> void void ( IntegrationFlow org.springframework.integration.dsl.context.IntegrationFlow ) { this . org.springframework.integration.dsl.context.IntegrationFlow = org.springframework.integration.dsl.context.IntegrationFlow ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.context.IntegrationFlow org.springframework.integration.dsl.context.IntegrationFlow ( ) { return this . org.springframework.integration.dsl.context.IntegrationFlow ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.context.MessageChannel org.springframework.integration.dsl.context.MessageChannel ( ) { if ( this . org.springframework.integration.dsl.context.MessageChannel == null ) { if ( this . org.springframework.integration.dsl.context.IntegrationFlow instanceof StandardIntegrationFlow ) { StandardIntegrationFlow org.springframework.integration.dsl.context.StandardIntegrationFlow = ( StandardIntegrationFlow ) this . org.springframework.integration.dsl.context.IntegrationFlow ; java.lang.Object java.lang.Object = org.springframework.integration.dsl.context.StandardIntegrationFlow . getIntegrationComponents ( ) . iterator ( ) . next ( ) ; if ( java.lang.Object instanceof MessageChannel ) { this . org.springframework.integration.dsl.context.MessageChannel = ( MessageChannel ) java.lang.Object ; } else { throw new java.lang.IllegalStateException ( STRING + org.springframework.integration.dsl.context.StandardIntegrationFlow + STRING + STRING ) ; } } else { throw new java.lang.IllegalStateException ( STRING + STRING + STRING + STRING + this . org.springframework.integration.dsl.context.IntegrationFlow + STRING + STRING + STRING ) ; } } return this . org.springframework.integration.dsl.context.MessageChannel ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.context.MessagingTemplate org.springframework.integration.dsl.context.MessagingTemplate ( ) { if ( this . org.springframework.integration.dsl.context.MessagingTemplate == null ) { this . org.springframework.integration.dsl.context.MessagingTemplate = new MessagingTemplate ( org.springframework.integration.dsl.context.MessageChannel ( ) ) { @ java.lang.Override public org.springframework.integration.dsl.context.Message<?> < ? > org.springframework.integration.dsl.context.Message<?> ( ) { return org.springframework.integration.dsl.context.Message ( Message .class ) ; } @ java.lang.Override public < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) { throw new java.lang.UnsupportedOperationException ( STRING + STRING ) ; } } ; this . org.springframework.integration.dsl.context.MessagingTemplate . setBeanFactory ( this . org.springframework.integration.dsl.context.ConfigurableListableBeanFactory ) ; } return this . org.springframework.integration.dsl.context.MessagingTemplate ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.dsl.context.Message<?> < ? > org.springframework.integration.dsl.context.Message<?> ( ) { return org.springframework.integration.dsl.context.Message ( Message .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) { throw new java.lang.UnsupportedOperationException ( STRING + STRING ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( this . org.springframework.integration.dsl.context.IntegrationFlow instanceof Lifecycle ) { ( ( Lifecycle ) this . org.springframework.integration.dsl.context.IntegrationFlow ) . start ( ) ; } else { throw new java.lang.IllegalStateException ( STRING + STRING + STRING + this . org.springframework.integration.dsl.context.IntegrationFlow + STRING + STRING ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( this . org.springframework.integration.dsl.context.IntegrationFlow instanceof Lifecycle ) { ( ( Lifecycle ) this . org.springframework.integration.dsl.context.IntegrationFlow ) . stop ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { this . org.springframework.integration.dsl.context.IntegrationFlowContext . remove ( this . java.lang.String ) ; }  <METHOD_END>
