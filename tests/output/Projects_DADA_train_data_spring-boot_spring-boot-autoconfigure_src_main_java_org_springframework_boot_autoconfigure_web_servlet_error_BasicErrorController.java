<METHOD_START> public void ( ErrorAttributes org.springframework.boot.autoconfigure.web.servlet.error.ErrorAttributes , ErrorProperties org.springframework.boot.autoconfigure.web.servlet.error.ErrorProperties ) { this( org.springframework.boot.autoconfigure.web.servlet.error.ErrorAttributes , org.springframework.boot.autoconfigure.web.servlet.error.ErrorProperties , java.util.Collections .< ErrorViewResolver > java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ( ) ); }  <METHOD_END>
<METHOD_START> public void ( ErrorAttributes org.springframework.boot.autoconfigure.web.servlet.error.ErrorAttributes , ErrorProperties org.springframework.boot.autoconfigure.web.servlet.error.ErrorProperties , java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> < ErrorViewResolver > java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ) { super( org.springframework.boot.autoconfigure.web.servlet.error.ErrorAttributes , java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ); Assert . notNull ( org.springframework.boot.autoconfigure.web.servlet.error.ErrorProperties , STRING ) ; this . org.springframework.boot.autoconfigure.web.servlet.error.ErrorProperties = org.springframework.boot.autoconfigure.web.servlet.error.ErrorProperties ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.boot.autoconfigure.web.servlet.error.ErrorProperties . getPath ( ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( produces = STRING ) public org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView ( HttpServletRequest org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , HttpServletResponse org.springframework.boot.autoconfigure.web.servlet.error.HttpServletResponse ) { HttpStatus org.springframework.boot.autoconfigure.web.servlet.error.HttpStatus = getStatus ( org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = java.util.Collections . java.util.Map ( getErrorAttributes ( org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , boolean ( org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , MediaType . TEXT_HTML ) ) ) ; org.springframework.boot.autoconfigure.web.servlet.error.HttpServletResponse . setStatus ( org.springframework.boot.autoconfigure.web.servlet.error.HttpStatus . value ( ) ) ; ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView = resolveErrorView ( org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , org.springframework.boot.autoconfigure.web.servlet.error.HttpServletResponse , org.springframework.boot.autoconfigure.web.servlet.error.HttpStatus , java.util.Map<java.lang.String,java.lang.Object> ) ; return ( org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView == null ? new ModelAndView ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) : org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping @ ResponseBody public org.springframework.boot.autoconfigure.web.servlet.error.ResponseEntity<java.util.Map<java.lang.String,java.lang.Object>> < java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > org.springframework.boot.autoconfigure.web.servlet.error.ResponseEntity<java.util.Map<java.lang.String,java.lang.Object>> ( HttpServletRequest org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = getErrorAttributes ( org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , boolean ( org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , MediaType . ALL ) ) ; HttpStatus org.springframework.boot.autoconfigure.web.servlet.error.HttpStatus = getStatus ( org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest ) ; return new ResponseEntity <> ( java.util.Map<java.lang.String,java.lang.Object> , org.springframework.boot.autoconfigure.web.servlet.error.HttpStatus ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( HttpServletRequest org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , MediaType org.springframework.boot.autoconfigure.web.servlet.error.MediaType ) { IncludeStacktrace org.springframework.boot.autoconfigure.web.servlet.error.IncludeStacktrace = org.springframework.boot.autoconfigure.web.servlet.error.ErrorProperties ( ) . getIncludeStacktrace ( ) ; if ( org.springframework.boot.autoconfigure.web.servlet.error.IncludeStacktrace == IncludeStacktrace . ALWAYS ) { return true ; } if ( org.springframework.boot.autoconfigure.web.servlet.error.IncludeStacktrace == IncludeStacktrace . ON_TRACE_PARAM ) { return getTraceParameter ( org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest ) ; } return false ; }  <METHOD_END>
<METHOD_START> protected org.springframework.boot.autoconfigure.web.servlet.error.ErrorProperties org.springframework.boot.autoconfigure.web.servlet.error.ErrorProperties ( ) { return this . org.springframework.boot.autoconfigure.web.servlet.error.ErrorProperties ; }  <METHOD_END>
