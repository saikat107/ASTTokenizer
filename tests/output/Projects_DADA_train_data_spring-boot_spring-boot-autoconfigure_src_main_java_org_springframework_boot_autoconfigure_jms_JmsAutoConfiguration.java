<METHOD_START> public void ( JmsProperties org.springframework.boot.autoconfigure.jms.JmsProperties , ObjectProvider < DestinationResolver > org.springframework.boot.autoconfigure.jms.ObjectProvider<org.springframework.boot.autoconfigure.jms.DestinationResolver> , ObjectProvider < MessageConverter > org.springframework.boot.autoconfigure.jms.ObjectProvider<org.springframework.boot.autoconfigure.jms.MessageConverter> ) { this . org.springframework.boot.autoconfigure.jms.JmsProperties = org.springframework.boot.autoconfigure.jms.JmsProperties ; this . org.springframework.boot.autoconfigure.jms.ObjectProvider<org.springframework.boot.autoconfigure.jms.DestinationResolver> = org.springframework.boot.autoconfigure.jms.ObjectProvider<org.springframework.boot.autoconfigure.jms.DestinationResolver> ; this . org.springframework.boot.autoconfigure.jms.ObjectProvider<org.springframework.boot.autoconfigure.jms.MessageConverter> = org.springframework.boot.autoconfigure.jms.ObjectProvider<org.springframework.boot.autoconfigure.jms.MessageConverter> ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean @ ConditionalOnSingleCandidate ( ConnectionFactory .class ) public org.springframework.boot.autoconfigure.jms.JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate ( ConnectionFactory org.springframework.boot.autoconfigure.jms.ConnectionFactory ) { JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = new JmsTemplate ( org.springframework.boot.autoconfigure.jms.ConnectionFactory ) ; org.springframework.boot.autoconfigure.jms.JmsTemplate . setPubSubDomain ( this . org.springframework.boot.autoconfigure.jms.JmsProperties . isPubSubDomain ( ) ) ; DestinationResolver org.springframework.boot.autoconfigure.jms.DestinationResolver = this . org.springframework.boot.autoconfigure.jms.ObjectProvider<org.springframework.boot.autoconfigure.jms.DestinationResolver> . getIfUnique ( ) ; if ( org.springframework.boot.autoconfigure.jms.DestinationResolver != null ) { org.springframework.boot.autoconfigure.jms.JmsTemplate . setDestinationResolver ( org.springframework.boot.autoconfigure.jms.DestinationResolver ) ; } MessageConverter org.springframework.boot.autoconfigure.jms.MessageConverter = this . org.springframework.boot.autoconfigure.jms.ObjectProvider<org.springframework.boot.autoconfigure.jms.MessageConverter> . getIfUnique ( ) ; if ( org.springframework.boot.autoconfigure.jms.MessageConverter != null ) { org.springframework.boot.autoconfigure.jms.JmsTemplate . setMessageConverter ( org.springframework.boot.autoconfigure.jms.MessageConverter ) ; } JmsProperties . JmsProperties JmsProperties.Template = this . org.springframework.boot.autoconfigure.jms.JmsProperties . getTemplate ( ) ; if ( JmsProperties.Template . getDefaultDestination ( ) != null ) { org.springframework.boot.autoconfigure.jms.JmsTemplate . setDefaultDestinationName ( JmsProperties.Template . getDefaultDestination ( ) ) ; } if ( JmsProperties.Template . getDeliveryDelay ( ) != null ) { org.springframework.boot.autoconfigure.jms.JmsTemplate . setDeliveryDelay ( JmsProperties.Template . getDeliveryDelay ( ) ) ; } org.springframework.boot.autoconfigure.jms.JmsTemplate . setExplicitQosEnabled ( JmsProperties.Template . determineQosEnabled ( ) ) ; if ( JmsProperties.Template . getDeliveryMode ( ) != null ) { org.springframework.boot.autoconfigure.jms.JmsTemplate . setDeliveryMode ( JmsProperties.Template . getDeliveryMode ( ) . getValue ( ) ) ; } if ( JmsProperties.Template . getPriority ( ) != null ) { org.springframework.boot.autoconfigure.jms.JmsTemplate . setPriority ( JmsProperties.Template . getPriority ( ) ) ; } if ( JmsProperties.Template . getTimeToLive ( ) != null ) { org.springframework.boot.autoconfigure.jms.JmsTemplate . setTimeToLive ( JmsProperties.Template . getTimeToLive ( ) ) ; } if ( JmsProperties.Template . getReceiveTimeout ( ) != null ) { org.springframework.boot.autoconfigure.jms.JmsTemplate . setReceiveTimeout ( JmsProperties.Template . getReceiveTimeout ( ) ) ; } return org.springframework.boot.autoconfigure.jms.JmsTemplate ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean @ ConditionalOnSingleCandidate ( JmsTemplate .class ) public org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate ( JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate ) { return new JmsMessagingTemplate ( org.springframework.boot.autoconfigure.jms.JmsTemplate ) ; }  <METHOD_END>
