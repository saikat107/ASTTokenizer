<METHOD_START> public void ( HateoasPageableHandlerMethodArgumentResolver org.springframework.data.web.HateoasPageableHandlerMethodArgumentResolver , MethodLinkBuilderFactory < ? > org.springframework.data.web.MethodLinkBuilderFactory<?> ) { this . org.springframework.data.web.HateoasPageableHandlerMethodArgumentResolver = org.springframework.data.web.HateoasPageableHandlerMethodArgumentResolver ; this . org.springframework.data.web.MethodLinkBuilderFactory<?> = org.springframework.data.web.MethodLinkBuilderFactory<> == null ? new ControllerLinkBuilderFactory ( ) : org.springframework.data.web.MethodLinkBuilderFactory<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.data.web.MethodParameter ) { return PagedResourcesAssembler .class . boolean ( org.springframework.data.web.MethodParameter . getParameterType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( MethodParameter org.springframework.data.web.MethodParameter , ModelAndViewContainer org.springframework.data.web.ModelAndViewContainer , NativeWebRequest org.springframework.data.web.NativeWebRequest , WebDataBinderFactory org.springframework.data.web.WebDataBinderFactory ) { UriComponents org.springframework.data.web.UriComponents = org.springframework.data.web.UriComponents ( org.springframework.data.web.MethodParameter ) ; MethodParameter org.springframework.data.web.MethodParameter = org.springframework.data.web.MethodParameter ( org.springframework.data.web.MethodParameter ) ; if ( org.springframework.data.web.MethodParameter != null ) { return new MethodParameterAwarePagedResourcesAssembler <> ( org.springframework.data.web.MethodParameter , org.springframework.data.web.HateoasPageableHandlerMethodArgumentResolver , org.springframework.data.web.UriComponents ) ; } else { return new PagedResourcesAssembler <> ( org.springframework.data.web.HateoasPageableHandlerMethodArgumentResolver , org.springframework.data.web.UriComponents ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.data.web.UriComponents org.springframework.data.web.UriComponents ( MethodParameter org.springframework.data.web.MethodParameter ) { try { Link org.springframework.data.web.Link = org.springframework.data.web.MethodLinkBuilderFactory<> . linkTo ( org.springframework.data.web.MethodParameter . getDeclaringClass ( ) , org.springframework.data.web.MethodParameter . getMethod ( ) ) . withSelfRel ( ) ; return UriComponentsBuilder . fromUriString ( org.springframework.data.web.Link . getHref ( ) ) . build ( ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { return null ; } }  <METHOD_END>
<METHOD_START> private static org.springframework.data.web.MethodParameter org.springframework.data.web.MethodParameter ( MethodParameter org.springframework.data.web.MethodParameter ) { MethodParameters org.springframework.data.web.MethodParameters = new MethodParameters ( org.springframework.data.web.MethodParameter . getMethod ( ) ) ; java.util.List<org.springframework.data.web.MethodParameter> < MethodParameter > java.util.List<org.springframework.data.web.MethodParameter> = org.springframework.data.web.MethodParameters . getParametersOfType ( Pageable .class ) ; Qualifier org.springframework.data.web.Qualifier = org.springframework.data.web.MethodParameter . getParameterAnnotation ( Qualifier .class ) ; if ( java.util.List<org.springframework.data.web.MethodParameter> . isEmpty ( ) ) { return null ; } if ( java.util.List<org.springframework.data.web.MethodParameter> . size ( ) == NUMBER ) { MethodParameter org.springframework.data.web.MethodParameter = java.util.List<org.springframework.data.web.MethodParameter> . get ( NUMBER ) ; MethodParameter org.springframework.data.web.MethodParameter = org.springframework.data.web.MethodParameter ( org.springframework.data.web.MethodParameter , org.springframework.data.web.Qualifier ) ; if ( org.springframework.data.web.MethodParameter == null ) { org.springframework.data.web.Logger . info ( java.lang.String , PagedResourcesAssembler .class . java.lang.String ( ) , Pageable .class . java.lang.String ( ) ) ; } return org.springframework.data.web.MethodParameter ; } if ( org.springframework.data.web.Qualifier == null ) { throw new java.lang.IllegalStateException ( java.lang.String ) ; } for ( MethodParameter org.springframework.data.web.MethodParameter : java.util.List<org.springframework.data.web.MethodParameter> ) { MethodParameter org.springframework.data.web.MethodParameter = org.springframework.data.web.MethodParameter ( org.springframework.data.web.MethodParameter , org.springframework.data.web.Qualifier ) ; if ( org.springframework.data.web.MethodParameter != null ) { return org.springframework.data.web.MethodParameter ; } } throw new java.lang.IllegalStateException ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.data.web.MethodParameter org.springframework.data.web.MethodParameter ( MethodParameter org.springframework.data.web.MethodParameter , Qualifier org.springframework.data.web.Qualifier ) { if ( org.springframework.data.web.Qualifier == null ) { return org.springframework.data.web.MethodParameter ; } Qualifier org.springframework.data.web.Qualifier = org.springframework.data.web.MethodParameter . getParameterAnnotation ( Qualifier .class ) ; if ( org.springframework.data.web.Qualifier == null ) { return null ; } return org.springframework.data.web.Qualifier . value ( ) . equals ( org.springframework.data.web.Qualifier . value ( ) ) ? org.springframework.data.web.MethodParameter : null ; }  <METHOD_END>
