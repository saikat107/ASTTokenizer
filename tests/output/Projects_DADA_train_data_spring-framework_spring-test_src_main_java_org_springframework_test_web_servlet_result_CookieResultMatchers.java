<METHOD_START> protected void ( ) {	}  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final Matcher < ? super java.lang.String > org.springframework.test.web.servlet.result.Matcher<? super java.lang.String> ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie != null ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getValue ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie != null ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getValue ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie != null ) ; assertEquals ( STRING , java.lang.String , org.springframework.test.web.servlet.result.Cookie . getValue ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie != null ) ; assertEquals ( STRING , java.lang.String , org.springframework.test.web.servlet.result.Cookie . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie != null ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie != null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie == null ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie == null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final Matcher < ? super java.lang.Integer > org.springframework.test.web.servlet.result.Matcher<? super java.lang.Integer> ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie != null ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getMaxAge ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie != null ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getMaxAge ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final int int ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie != null ) ; assertEquals ( STRING , int , org.springframework.test.web.servlet.result.Cookie . getMaxAge ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertTrue ( STRING + java.lang.String , org.springframework.test.web.servlet.result.Cookie != null ) ; assertEquals ( STRING , int , org.springframework.test.web.servlet.result.Cookie . getMaxAge ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final Matcher < ? super java.lang.String > org.springframework.test.web.servlet.result.Matcher<? super java.lang.String> ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getPath ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getPath ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertEquals ( STRING , java.lang.String , org.springframework.test.web.servlet.result.Cookie . getPath ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertEquals ( STRING , java.lang.String , org.springframework.test.web.servlet.result.Cookie . getPath ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final Matcher < ? super java.lang.String > org.springframework.test.web.servlet.result.Matcher<? super java.lang.String> ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getDomain ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getDomain ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertEquals ( STRING , java.lang.String , org.springframework.test.web.servlet.result.Cookie . getDomain ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertEquals ( STRING , java.lang.String , org.springframework.test.web.servlet.result.Cookie . getDomain ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final Matcher < ? super java.lang.String > org.springframework.test.web.servlet.result.Matcher<? super java.lang.String> ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getComment ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getComment ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertEquals ( STRING , java.lang.String , org.springframework.test.web.servlet.result.Cookie . getComment ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertEquals ( STRING , java.lang.String , org.springframework.test.web.servlet.result.Cookie . getComment ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final Matcher < ? super java.lang.Integer > org.springframework.test.web.servlet.result.Matcher<? super java.lang.Integer> ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getVersion ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.Cookie . getVersion ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final int int ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertEquals ( STRING , int , org.springframework.test.web.servlet.result.Cookie . getVersion ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertEquals ( STRING , int , org.springframework.test.web.servlet.result.Cookie . getVersion ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final boolean boolean ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertEquals ( STRING , boolean , org.springframework.test.web.servlet.result.Cookie . getSecure ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { Cookie org.springframework.test.web.servlet.result.Cookie = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getCookie ( java.lang.String ) ; assertEquals ( STRING , boolean , org.springframework.test.web.servlet.result.Cookie . getSecure ( ) ) ; }  <METHOD_END>
