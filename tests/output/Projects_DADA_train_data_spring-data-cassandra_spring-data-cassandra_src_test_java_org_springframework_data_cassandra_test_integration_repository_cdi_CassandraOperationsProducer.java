<METHOD_START> @ Produces @ Singleton public org.springframework.data.cassandra.test.integration.repository.cdi.Cluster org.springframework.data.cassandra.test.integration.repository.cdi.Cluster ( ) java.lang.Exception { CassandraConnectionProperties org.springframework.data.cassandra.test.integration.repository.cdi.CassandraConnectionProperties = new CassandraConnectionProperties ( ) ; return Cluster . builder ( ) . addContactPoint ( org.springframework.data.cassandra.test.integration.repository.cdi.CassandraConnectionProperties . getCassandraHost ( ) ) . withPort ( org.springframework.data.cassandra.test.integration.repository.cdi.CassandraConnectionProperties . getCassandraPort ( ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Produces @ ApplicationScoped public org.springframework.data.cassandra.test.integration.repository.cdi.CassandraOperations org.springframework.data.cassandra.test.integration.repository.cdi.CassandraOperations ( Cluster org.springframework.data.cassandra.test.integration.repository.cdi.Cluster ) throws java.lang.Exception { BasicCassandraMappingContext org.springframework.data.cassandra.test.integration.repository.cdi.BasicCassandraMappingContext = new BasicCassandraMappingContext ( ) ; org.springframework.data.cassandra.test.integration.repository.cdi.BasicCassandraMappingContext . setUserTypeResolver ( new SimpleUserTypeResolver ( org.springframework.data.cassandra.test.integration.repository.cdi.Cluster , java.lang.String ) ) ; org.springframework.data.cassandra.test.integration.repository.cdi.BasicCassandraMappingContext . setInitialEntitySet ( java.util.Collections . java.util.Set<java.lang.Class<org.springframework.data.cassandra.test.integration.repository.cdi.User>> ( User .class ) ) ; org.springframework.data.cassandra.test.integration.repository.cdi.BasicCassandraMappingContext . afterPropertiesSet ( ) ; MappingCassandraConverter org.springframework.data.cassandra.test.integration.repository.cdi.MappingCassandraConverter = new MappingCassandraConverter ( org.springframework.data.cassandra.test.integration.repository.cdi.BasicCassandraMappingContext ) ; CassandraAdminTemplate org.springframework.data.cassandra.test.integration.repository.cdi.CassandraAdminTemplate = new CassandraAdminTemplate ( org.springframework.data.cassandra.test.integration.repository.cdi.Cluster . connect ( ) , org.springframework.data.cassandra.test.integration.repository.cdi.MappingCassandraConverter ) ; CreateKeyspaceSpecification org.springframework.data.cassandra.test.integration.repository.cdi.CreateKeyspaceSpecification = new CreateKeyspaceSpecification ( java.lang.String ) . ifNotExists ( ) ; org.springframework.data.cassandra.test.integration.repository.cdi.CassandraAdminTemplate . getCqlOperations ( ) . execute ( CreateKeyspaceCqlGenerator . toCql ( org.springframework.data.cassandra.test.integration.repository.cdi.CreateKeyspaceSpecification ) ) ; org.springframework.data.cassandra.test.integration.repository.cdi.CassandraAdminTemplate . getCqlOperations ( ) . execute ( STRING + java.lang.String ) ; CassandraPersistentEntitySchemaDropper org.springframework.data.cassandra.test.integration.repository.cdi.CassandraPersistentEntitySchemaDropper = new CassandraPersistentEntitySchemaDropper ( org.springframework.data.cassandra.test.integration.repository.cdi.BasicCassandraMappingContext , org.springframework.data.cassandra.test.integration.repository.cdi.CassandraAdminTemplate ) ; org.springframework.data.cassandra.test.integration.repository.cdi.CassandraPersistentEntitySchemaDropper . dropTables ( false ) ; org.springframework.data.cassandra.test.integration.repository.cdi.CassandraPersistentEntitySchemaDropper . dropUserTypes ( false ) ; CassandraPersistentEntitySchemaCreator org.springframework.data.cassandra.test.integration.repository.cdi.CassandraPersistentEntitySchemaCreator = new CassandraPersistentEntitySchemaCreator ( org.springframework.data.cassandra.test.integration.repository.cdi.BasicCassandraMappingContext , org.springframework.data.cassandra.test.integration.repository.cdi.CassandraAdminTemplate ) ; org.springframework.data.cassandra.test.integration.repository.cdi.CassandraPersistentEntitySchemaCreator . createUserTypes ( false ) ; org.springframework.data.cassandra.test.integration.repository.cdi.CassandraPersistentEntitySchemaCreator . createTables ( false ) ; for ( CassandraPersistentEntity < ? > org.springframework.data.cassandra.test.integration.repository.cdi.CassandraPersistentEntity<?> : org.springframework.data.cassandra.test.integration.repository.cdi.CassandraAdminTemplate . getConverter ( ) . getMappingContext ( ) . getTableEntities ( ) ) { org.springframework.data.cassandra.test.integration.repository.cdi.CassandraAdminTemplate . truncate ( org.springframework.data.cassandra.test.integration.repository.cdi.CassandraPersistentEntity<> . getType ( ) ) ; } return org.springframework.data.cassandra.test.integration.repository.cdi.CassandraAdminTemplate ; }  <METHOD_END>
<METHOD_START> @ OtherQualifier @ UserDB @ Produces @ ApplicationScoped public org.springframework.data.cassandra.test.integration.repository.cdi.CassandraOperations org.springframework.data.cassandra.test.integration.repository.cdi.CassandraOperations ( CassandraOperations org.springframework.data.cassandra.test.integration.repository.cdi.CassandraOperations ) { return org.springframework.data.cassandra.test.integration.repository.cdi.CassandraOperations ; }  <METHOD_END>
<METHOD_START> public void void ( @ Disposes CassandraOperations org.springframework.data.cassandra.test.integration.repository.cdi.CassandraOperations ) { org.springframework.data.cassandra.test.integration.repository.cdi.CassandraOperations . getCqlOperations ( ) . execute ( DropKeyspaceCqlGenerator . toCql ( DropKeyspaceSpecification . dropKeyspace ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Disposes Cluster org.springframework.data.cassandra.test.integration.repository.cdi.Cluster ) { org.springframework.data.cassandra.test.integration.repository.cdi.Cluster . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Produces public java.util.Set<org.springframework.data.cassandra.test.integration.repository.cdi.Service> < Service > java.util.Set<org.springframework.data.cassandra.test.integration.repository.cdi.Service> ( ) { return Sets . newHashSet ( ) ; }  <METHOD_END>
