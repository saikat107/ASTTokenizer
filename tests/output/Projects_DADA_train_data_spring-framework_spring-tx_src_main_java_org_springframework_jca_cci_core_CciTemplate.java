<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( ConnectionFactory org.springframework.jca.cci.core.ConnectionFactory ) { void ( org.springframework.jca.cci.core.ConnectionFactory ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ConnectionFactory org.springframework.jca.cci.core.ConnectionFactory , ConnectionSpec org.springframework.jca.cci.core.ConnectionSpec ) { void ( org.springframework.jca.cci.core.ConnectionFactory ) ; void ( org.springframework.jca.cci.core.ConnectionSpec ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionFactory org.springframework.jca.cci.core.ConnectionFactory ) { this . org.springframework.jca.cci.core.ConnectionFactory = org.springframework.jca.cci.core.ConnectionFactory ; }  <METHOD_END>
<METHOD_START> public org.springframework.jca.cci.core.ConnectionFactory org.springframework.jca.cci.core.ConnectionFactory ( ) { return this . org.springframework.jca.cci.core.ConnectionFactory ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionSpec org.springframework.jca.cci.core.ConnectionSpec ) { this . org.springframework.jca.cci.core.ConnectionSpec = org.springframework.jca.cci.core.ConnectionSpec ; }  <METHOD_END>
<METHOD_START> public org.springframework.jca.cci.core.ConnectionSpec org.springframework.jca.cci.core.ConnectionSpec ( ) { return this . org.springframework.jca.cci.core.ConnectionSpec ; }  <METHOD_END>
<METHOD_START> public void void ( RecordCreator org.springframework.jca.cci.core.RecordCreator ) { this . org.springframework.jca.cci.core.RecordCreator = org.springframework.jca.cci.core.RecordCreator ; }  <METHOD_END>
<METHOD_START> public org.springframework.jca.cci.core.RecordCreator org.springframework.jca.cci.core.RecordCreator ( ) { return this . org.springframework.jca.cci.core.RecordCreator ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( org.springframework.jca.cci.core.ConnectionFactory ( ) == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.jca.cci.core.CciTemplate org.springframework.jca.cci.core.CciTemplate ( ConnectionSpec org.springframework.jca.cci.core.ConnectionSpec ) { org.springframework.jca.cci.core.CciTemplate org.springframework.jca.cci.core.CciTemplate = new org.springframework.jca.cci.core.CciTemplate ( ) ; org.springframework.jca.cci.core.CciTemplate . void ( org.springframework.jca.cci.core.ConnectionFactory ( ) ) ; org.springframework.jca.cci.core.CciTemplate . void ( org.springframework.jca.cci.core.ConnectionSpec ) ; org.springframework.jca.cci.core.CciTemplate . void ( org.springframework.jca.cci.core.RecordCreator ( ) ) ; return org.springframework.jca.cci.core.CciTemplate ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( ConnectionCallback < T > org.springframework.jca.cci.core.ConnectionCallback<T> ) throws org.springframework.jca.cci.core.DataAccessException { Assert . notNull ( org.springframework.jca.cci.core.ConnectionCallback<T> , STRING ) ; Connection org.springframework.jca.cci.core.Connection = ConnectionFactoryUtils . getConnection ( org.springframework.jca.cci.core.ConnectionFactory ( ) , org.springframework.jca.cci.core.ConnectionSpec ( ) ) ; try { return org.springframework.jca.cci.core.ConnectionCallback<T> . doInConnection ( org.springframework.jca.cci.core.Connection , org.springframework.jca.cci.core.ConnectionFactory ( ) ) ; } catch ( NotSupportedException org.springframework.jca.cci.core.NotSupportedException ) { throw new CciOperationNotSupportedException ( STRING , org.springframework.jca.cci.core.NotSupportedException ) ; } catch ( ResourceException org.springframework.jca.cci.core.ResourceException ) { throw new DataAccessResourceFailureException ( STRING , org.springframework.jca.cci.core.ResourceException ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( STRING , java.sql.SQLException ) ; } finally { ConnectionFactoryUtils . releaseConnection ( org.springframework.jca.cci.core.Connection , org.springframework.jca.cci.core.ConnectionFactory ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( final InteractionCallback < T > org.springframework.jca.cci.core.InteractionCallback<T> ) throws org.springframework.jca.cci.core.DataAccessException { Assert . notNull ( org.springframework.jca.cci.core.InteractionCallback<T> , STRING ) ; return T ( new ConnectionCallback < T > ( ) { @ java.lang.Override public T T ( Connection org.springframework.jca.cci.core.Connection , ConnectionFactory org.springframework.jca.cci.core.ConnectionFactory )					throws org.springframework.jca.cci.core.ResourceException , java.sql.SQLException , org.springframework.jca.cci.core.DataAccessException { Interaction org.springframework.jca.cci.core.Interaction = org.springframework.jca.cci.core.Connection . createInteraction ( ) ; try { return org.springframework.jca.cci.core.InteractionCallback<T> . doInInteraction ( org.springframework.jca.cci.core.Interaction , org.springframework.jca.cci.core.ConnectionFactory ) ; } finally { void ( org.springframework.jca.cci.core.Interaction ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( Connection org.springframework.jca.cci.core.Connection , ConnectionFactory org.springframework.jca.cci.core.ConnectionFactory )					throws org.springframework.jca.cci.core.ResourceException , java.sql.SQLException , org.springframework.jca.cci.core.DataAccessException { Interaction org.springframework.jca.cci.core.Interaction = org.springframework.jca.cci.core.Connection . createInteraction ( ) ; try { return org.springframework.jca.cci.core.InteractionCallback<T> . doInInteraction ( org.springframework.jca.cci.core.Interaction , org.springframework.jca.cci.core.ConnectionFactory ) ; } finally { void ( org.springframework.jca.cci.core.Interaction ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jca.cci.core.Record org.springframework.jca.cci.core.Record ( InteractionSpec org.springframework.jca.cci.core.InteractionSpec , Record org.springframework.jca.cci.core.Record ) throws org.springframework.jca.cci.core.DataAccessException { return java.lang.Object ( org.springframework.jca.cci.core.InteractionSpec , org.springframework.jca.cci.core.Record , null , new org.springframework.jca.cci.core.CciTemplate.SimpleRecordExtractor ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( InteractionSpec org.springframework.jca.cci.core.InteractionSpec , Record org.springframework.jca.cci.core.Record , Record org.springframework.jca.cci.core.Record ) throws org.springframework.jca.cci.core.DataAccessException { java.lang.Object ( org.springframework.jca.cci.core.InteractionSpec , org.springframework.jca.cci.core.Record , org.springframework.jca.cci.core.Record , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jca.cci.core.Record org.springframework.jca.cci.core.Record ( InteractionSpec org.springframework.jca.cci.core.InteractionSpec , RecordCreator org.springframework.jca.cci.core.RecordCreator ) throws org.springframework.jca.cci.core.DataAccessException { return java.lang.Object ( org.springframework.jca.cci.core.InteractionSpec , org.springframework.jca.cci.core.Record ( org.springframework.jca.cci.core.RecordCreator ) , null , new org.springframework.jca.cci.core.CciTemplate.SimpleRecordExtractor ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( InteractionSpec org.springframework.jca.cci.core.InteractionSpec , Record org.springframework.jca.cci.core.Record , RecordExtractor < T > org.springframework.jca.cci.core.RecordExtractor<T> )			throws org.springframework.jca.cci.core.DataAccessException { return java.lang.Object ( org.springframework.jca.cci.core.InteractionSpec , org.springframework.jca.cci.core.Record , null , org.springframework.jca.cci.core.RecordExtractor<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( InteractionSpec org.springframework.jca.cci.core.InteractionSpec , RecordCreator org.springframework.jca.cci.core.RecordCreator , RecordExtractor < T > org.springframework.jca.cci.core.RecordExtractor<T> )			throws org.springframework.jca.cci.core.DataAccessException { return java.lang.Object ( org.springframework.jca.cci.core.InteractionSpec , org.springframework.jca.cci.core.Record ( org.springframework.jca.cci.core.RecordCreator ) , null , org.springframework.jca.cci.core.RecordExtractor<T> ) ; }  <METHOD_END>
<METHOD_START> protected < T > T T ( final InteractionSpec org.springframework.jca.cci.core.InteractionSpec , final Record org.springframework.jca.cci.core.Record , final Record org.springframework.jca.cci.core.Record , final RecordExtractor < T > org.springframework.jca.cci.core.RecordExtractor<T> ) throws org.springframework.jca.cci.core.DataAccessException { return T ( new InteractionCallback < T > ( ) { @ java.lang.Override public T T ( Interaction org.springframework.jca.cci.core.Interaction , ConnectionFactory org.springframework.jca.cci.core.ConnectionFactory )					throws org.springframework.jca.cci.core.ResourceException , java.sql.SQLException , org.springframework.jca.cci.core.DataAccessException { Record org.springframework.jca.cci.core.Record = org.springframework.jca.cci.core.Record ; try { if ( org.springframework.jca.cci.core.Record != null || org.springframework.jca.cci.core.RecordCreator ( ) != null ) { if ( org.springframework.jca.cci.core.Record == null ) { RecordFactory org.springframework.jca.cci.core.RecordFactory = org.springframework.jca.cci.core.RecordFactory ( org.springframework.jca.cci.core.ConnectionFactory ) ; org.springframework.jca.cci.core.Record = org.springframework.jca.cci.core.RecordCreator ( ) . createRecord ( org.springframework.jca.cci.core.RecordFactory ) ; } org.springframework.jca.cci.core.Interaction . execute ( org.springframework.jca.cci.core.InteractionSpec , org.springframework.jca.cci.core.Record , org.springframework.jca.cci.core.Record ) ; } else { org.springframework.jca.cci.core.Record = org.springframework.jca.cci.core.Interaction . execute ( org.springframework.jca.cci.core.InteractionSpec , org.springframework.jca.cci.core.Record ) ; } return ( org.springframework.jca.cci.core.RecordExtractor<T> != null ? org.springframework.jca.cci.core.RecordExtractor<T> . extractData ( org.springframework.jca.cci.core.Record ) : null ) ; } finally { if ( org.springframework.jca.cci.core.Record instanceof ResultSet ) { void ( ( ResultSet ) org.springframework.jca.cci.core.Record ) ; } } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( Interaction org.springframework.jca.cci.core.Interaction , ConnectionFactory org.springframework.jca.cci.core.ConnectionFactory )					throws org.springframework.jca.cci.core.ResourceException , java.sql.SQLException , org.springframework.jca.cci.core.DataAccessException { Record org.springframework.jca.cci.core.Record = org.springframework.jca.cci.core.Record ; try { if ( org.springframework.jca.cci.core.Record != null || org.springframework.jca.cci.core.RecordCreator ( ) != null ) { if ( org.springframework.jca.cci.core.Record == null ) { RecordFactory org.springframework.jca.cci.core.RecordFactory = org.springframework.jca.cci.core.RecordFactory ( org.springframework.jca.cci.core.ConnectionFactory ) ; org.springframework.jca.cci.core.Record = org.springframework.jca.cci.core.RecordCreator ( ) . createRecord ( org.springframework.jca.cci.core.RecordFactory ) ; } org.springframework.jca.cci.core.Interaction . execute ( org.springframework.jca.cci.core.InteractionSpec , org.springframework.jca.cci.core.Record , org.springframework.jca.cci.core.Record ) ; } else { org.springframework.jca.cci.core.Record = org.springframework.jca.cci.core.Interaction . execute ( org.springframework.jca.cci.core.InteractionSpec , org.springframework.jca.cci.core.Record ) ; } return ( org.springframework.jca.cci.core.RecordExtractor<T> != null ? org.springframework.jca.cci.core.RecordExtractor<T> . extractData ( org.springframework.jca.cci.core.Record ) : null ) ; } finally { if ( org.springframework.jca.cci.core.Record instanceof ResultSet ) { void ( ( ResultSet ) org.springframework.jca.cci.core.Record ) ; } } }  <METHOD_END>
<METHOD_START> public org.springframework.jca.cci.core.IndexedRecord org.springframework.jca.cci.core.IndexedRecord ( java.lang.String java.lang.String ) throws org.springframework.jca.cci.core.DataAccessException { try { RecordFactory org.springframework.jca.cci.core.RecordFactory = org.springframework.jca.cci.core.RecordFactory ( org.springframework.jca.cci.core.ConnectionFactory ( ) ) ; return org.springframework.jca.cci.core.RecordFactory . createIndexedRecord ( java.lang.String ) ; } catch ( NotSupportedException org.springframework.jca.cci.core.NotSupportedException ) { throw new RecordTypeNotSupportedException ( STRING , org.springframework.jca.cci.core.NotSupportedException ) ; } catch ( ResourceException org.springframework.jca.cci.core.ResourceException ) { throw new CannotCreateRecordException ( STRING , org.springframework.jca.cci.core.ResourceException ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.jca.cci.core.MappedRecord org.springframework.jca.cci.core.MappedRecord ( java.lang.String java.lang.String ) throws org.springframework.jca.cci.core.DataAccessException { try { RecordFactory org.springframework.jca.cci.core.RecordFactory = org.springframework.jca.cci.core.RecordFactory ( org.springframework.jca.cci.core.ConnectionFactory ( ) ) ; return org.springframework.jca.cci.core.RecordFactory . createMappedRecord ( java.lang.String ) ; } catch ( NotSupportedException org.springframework.jca.cci.core.NotSupportedException ) { throw new RecordTypeNotSupportedException ( STRING , org.springframework.jca.cci.core.NotSupportedException ) ; } catch ( ResourceException org.springframework.jca.cci.core.ResourceException ) { throw new CannotCreateRecordException ( STRING , org.springframework.jca.cci.core.ResourceException ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.jca.cci.core.Record org.springframework.jca.cci.core.Record ( RecordCreator org.springframework.jca.cci.core.RecordCreator ) throws org.springframework.jca.cci.core.DataAccessException { try { RecordFactory org.springframework.jca.cci.core.RecordFactory = org.springframework.jca.cci.core.RecordFactory ( org.springframework.jca.cci.core.ConnectionFactory ( ) ) ; return org.springframework.jca.cci.core.RecordCreator . createRecord ( org.springframework.jca.cci.core.RecordFactory ) ; } catch ( NotSupportedException org.springframework.jca.cci.core.NotSupportedException ) { throw new RecordTypeNotSupportedException ( STRING , org.springframework.jca.cci.core.NotSupportedException ) ; } catch ( ResourceException org.springframework.jca.cci.core.ResourceException ) { throw new CannotCreateRecordException ( STRING , org.springframework.jca.cci.core.ResourceException ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.jca.cci.core.RecordFactory org.springframework.jca.cci.core.RecordFactory ( ConnectionFactory org.springframework.jca.cci.core.ConnectionFactory ) throws org.springframework.jca.cci.core.ResourceException { try { return org.springframework.jca.cci.core.ConnectionFactory . getRecordFactory ( ) ; } catch ( NotSupportedException org.springframework.jca.cci.core.NotSupportedException ) { return new NotSupportedRecordFactory ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( Interaction org.springframework.jca.cci.core.Interaction ) { if ( org.springframework.jca.cci.core.Interaction != null ) { try { org.springframework.jca.cci.core.Interaction . close ( ) ; } catch ( ResourceException org.springframework.jca.cci.core.ResourceException ) { org.springframework.jca.cci.core.Log . trace ( STRING , org.springframework.jca.cci.core.ResourceException ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { org.springframework.jca.cci.core.Log . trace ( STRING , java.lang.Throwable ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ResultSet org.springframework.jca.cci.core.ResultSet ) { if ( org.springframework.jca.cci.core.ResultSet != null ) { try { org.springframework.jca.cci.core.ResultSet . close ( ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { org.springframework.jca.cci.core.Log . trace ( STRING , java.sql.SQLException ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { org.springframework.jca.cci.core.Log . trace ( STRING , java.lang.Throwable ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jca.cci.core.Record org.springframework.jca.cci.core.Record ( Record org.springframework.jca.cci.core.Record ) { return org.springframework.jca.cci.core.Record ; }  <METHOD_END>
