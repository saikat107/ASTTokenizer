<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( org.w3c.dom.Element org.w3c.dom.Element ) { return java.lang.Class<?> ( ) ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.Class<?> < ? > java.lang.Class<?> ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; return ( StringUtils . hasText ( java.lang.String ) ? java.lang.String : super. getParentName ( org.w3c.dom.Element ) ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( ) ; return ( java.lang.String != null && java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . org.w3c.dom.Node ( ) . java.lang.String ( ) ; return ( java.lang.String != null && java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) { super. doParse ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . setAbstract ( boolean ( org.w3c.dom.Element ) ) ; void ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , boolean ( org.w3c.dom.Element ) ) ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , boolean boolean );  <METHOD_END>
<METHOD_START> protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , boolean boolean ) { void ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; java.lang.String java.lang.String = ParsingUtils . resolveCacheReference ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ; if ( ! boolean ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; } ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; if ( StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ) { ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addDependsOn ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ; } ParsingUtils . parseOptionalRegionAttributes ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . parseSubscription ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . parseStatistics ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . parseMembershipAttributes ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . parseExpiration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . parseEviction ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . parseCompressor ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; void ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , AsyncEventQueue .class . java.lang.String ( ) , STRING , STRING ) ; void ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , GatewaySender .class . java.lang.String ( ) , STRING , STRING ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElements ( org.w3c.dom.Element ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { if ( org.w3c.dom.Element . java.lang.String ( ) . boolean ( STRING ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , ParsingUtils . parseRefOrNestedBeanDeclaration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ) ; } else if ( org.w3c.dom.Element . java.lang.String ( ) . boolean ( STRING ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , ParsingUtils . parseRefOrSingleNestedBeanDeclaration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ) ; } else if ( org.w3c.dom.Element . java.lang.String ( ) . boolean ( STRING ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , ParsingUtils . parseRefOrSingleNestedBeanDeclaration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ) ; } } if ( ! boolean ) { void ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) { java.lang.String java.lang.String = java.lang.String ( org.w3c.dom.Element ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( org.springframework.data.gemfire.config.xml.ParserContext . getRegistry ( ) . containsBeanDefinition ( java.lang.String ) ) { BeanDefinition org.springframework.data.gemfire.config.xml.BeanDefinition = org.springframework.data.gemfire.config.xml.ParserContext . getRegistry ( ) . getBeanDefinition ( java.lang.String ) ; BeanDefinition org.springframework.data.gemfire.config.xml.BeanDefinition = org.springframework.data.gemfire.config.xml.BeanDefinition ( org.springframework.data.gemfire.config.xml.BeanDefinition ) ; if ( org.springframework.data.gemfire.config.xml.BeanDefinition != null ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getRawBeanDefinition ( ) . overrideFrom ( org.springframework.data.gemfire.config.xml.BeanDefinition ) ; } } else { org.springframework.data.gemfire.config.xml.ParserContext . getReaderContext ( ) . error ( java.lang.String . java.lang.String ( STRING , java.lang.String , resolveId ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getRawBeanDefinition ( ) , org.springframework.data.gemfire.config.xml.ParserContext ) ) , org.w3c.dom.Element ) ; } } }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.config.xml.BeanDefinition org.springframework.data.gemfire.config.xml.BeanDefinition ( BeanDefinition org.springframework.data.gemfire.config.xml.BeanDefinition ) { Assert . notNull ( org.springframework.data.gemfire.config.xml.BeanDefinition , STRING ) ; java.lang.Object java.lang.Object = null ; if ( org.springframework.data.gemfire.config.xml.BeanDefinition . getPropertyValues ( ) . contains ( STRING ) ) { PropertyValue org.springframework.data.gemfire.config.xml.PropertyValue = org.springframework.data.gemfire.config.xml.BeanDefinition . getPropertyValues ( ) . getPropertyValue ( STRING ) ; java.lang.Object = org.springframework.data.gemfire.config.xml.PropertyValue . getValue ( ) ; } return ( java.lang.Object instanceof BeanDefinition ? ( BeanDefinition ) java.lang.Object : null ) ; }  <METHOD_END>
<METHOD_START> protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String , java.lang.String + STRING ) ; if ( ! CollectionUtils . isEmpty ( java.util.List<org.w3c.dom.Element> ) ) { ManagedArray org.springframework.data.gemfire.config.xml.ManagedArray = new ManagedArray ( java.lang.String , java.util.List<org.w3c.dom.Element> . int ( ) ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { org.springframework.data.gemfire.config.xml.ManagedArray . add ( ParsingUtils . parseRefOrNestedCustomElement ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ) ; } org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( java.lang.String , org.springframework.data.gemfire.config.xml.ManagedArray ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , java.lang.String java.lang.String ) { java.util.Map<java.lang.String,org.w3c.dom.Element> < java.lang.String , org.w3c.dom.Element > java.util.Map<java.lang.String,org.w3c.dom.Element> = new java.util.HashMap<java.lang.String,org.w3c.dom.Element> < java.lang.String , org.w3c.dom.Element > ( ) ; void ( org.w3c.dom.Element , java.lang.String ( org.w3c.dom.Element ) , java.util.Map<java.lang.String,org.w3c.dom.Element> ) ; if ( ! CollectionUtils . isEmpty ( java.util.Map<java.lang.String,org.w3c.dom.Element> ) ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.w3c.dom.Element> < java.lang.String , org.w3c.dom.Element > java.util.Map.Entry<java.lang.String,org.w3c.dom.Element> : java.util.Map<java.lang.String,org.w3c.dom.Element> . java.util.Set<java.util.Map.Entry<java.lang.String,org.w3c.dom.Element>> ( ) ) { org.springframework.data.gemfire.config.xml.BeanDefinition ( java.util.Map.Entry<java.lang.String,org.w3c.dom.Element> . org.w3c.dom.Element ( ) , org.springframework.data.gemfire.config.xml.ParserContext , java.util.Map.Entry<java.lang.String,org.w3c.dom.Element> . java.lang.String ( ) , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String , java.util.Map<java.lang.String,org.w3c.dom.Element> < java.lang.String , org.w3c.dom.Element > java.util.Map<java.lang.String,org.w3c.dom.Element> ) { for ( org.w3c.dom.Element org.w3c.dom.Element : DomUtils . getChildElements ( org.w3c.dom.Element ) ) { if ( org.w3c.dom.Element . java.lang.String ( ) . boolean ( STRING ) ) { java.lang.String java.lang.String = java.lang.String ( org.w3c.dom.Element ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String , java.lang.String ) ; java.util.Map<java.lang.String,org.w3c.dom.Element> . org.w3c.dom.Element ( java.lang.String , org.w3c.dom.Element ) ; void ( org.w3c.dom.Element , java.lang.String , java.util.Map<java.lang.String,org.w3c.dom.Element> ) ; } } }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( NAME_ATTRIBUTE ) ; return ( StringUtils . hasText ( java.lang.String ) ? java.lang.String : org.w3c.dom.Element . java.lang.String ( ID_ATTRIBUTE ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String java.lang.String = StringUtils . arrayToDelimitedString ( new java.lang.String [] { java.lang.String , java.lang.String } , STRING ) ; if ( ! java.lang.String . boolean ( STRING ) ) { java.lang.String = STRING + java.lang.String ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.gemfire.config.xml.BeanDefinition org.springframework.data.gemfire.config.xml.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( org.w3c.dom.Element ) ; org.w3c.dom.Element . void ( STRING , java.lang.String ) ; org.w3c.dom.Element . void ( STRING , java.lang.String ) ; BeanDefinition org.springframework.data.gemfire.config.xml.BeanDefinition = org.springframework.data.gemfire.config.xml.ParserContext . getDelegate ( ) . parseCustomElement ( org.w3c.dom.Element ) ; org.springframework.data.gemfire.config.xml.BeanDefinition . getPropertyValues ( ) . add ( STRING , new RuntimeBeanReference ( java.lang.String ) ) ; org.springframework.data.gemfire.config.xml.BeanDefinition . getPropertyValues ( ) . add ( STRING , new RuntimeBeanReference ( java.lang.String ) ) ; org.springframework.data.gemfire.config.xml.BeanDefinition . getPropertyValues ( ) . add ( STRING , java.lang.String ) ; return org.springframework.data.gemfire.config.xml.BeanDefinition ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { int int = java.lang.String . int ( STRING ) ; java.lang.String java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) ; if ( java.lang.String . int ( STRING ) == NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext ) { if ( org.w3c.dom.Element . boolean ( STRING ) && org.w3c.dom.Element . boolean ( STRING ) ) { org.springframework.data.gemfire.config.xml.ParserContext . getReaderContext ( ) . error ( java.lang.String . java.lang.String ( STRING , org.w3c.dom.Element . java.lang.String ( ) ) , org.w3c.dom.Element ) ; } }  <METHOD_END>
