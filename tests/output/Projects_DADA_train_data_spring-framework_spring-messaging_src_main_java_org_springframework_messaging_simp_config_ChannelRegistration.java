<METHOD_START> public org.springframework.messaging.simp.config.TaskExecutorRegistration org.springframework.messaging.simp.config.TaskExecutorRegistration ( ) { if ( this . org.springframework.messaging.simp.config.TaskExecutorRegistration == null ) { this . org.springframework.messaging.simp.config.TaskExecutorRegistration = new TaskExecutorRegistration ( ) ; } return this . org.springframework.messaging.simp.config.TaskExecutorRegistration ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.TaskExecutorRegistration org.springframework.messaging.simp.config.TaskExecutorRegistration ( ThreadPoolTaskExecutor org.springframework.messaging.simp.config.ThreadPoolTaskExecutor ) { if ( this . org.springframework.messaging.simp.config.TaskExecutorRegistration == null ) { this . org.springframework.messaging.simp.config.TaskExecutorRegistration = new TaskExecutorRegistration ( org.springframework.messaging.simp.config.ThreadPoolTaskExecutor ) ; } return this . org.springframework.messaging.simp.config.TaskExecutorRegistration ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.ChannelRegistration org.springframework.messaging.simp.config.ChannelRegistration ( ChannelInterceptor ... org.springframework.messaging.simp.config.ChannelInterceptor[] ) { if ( org.springframework.messaging.simp.config.ChannelInterceptor[] != null ) { this . java.util.List<org.springframework.messaging.simp.config.ChannelInterceptor> . addAll ( java.util.Arrays . java.util.List ( org.springframework.messaging.simp.config.ChannelInterceptor[] ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return ( this . org.springframework.messaging.simp.config.TaskExecutorRegistration != null ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.simp.config.TaskExecutorRegistration org.springframework.messaging.simp.config.TaskExecutorRegistration ( ) { return this . org.springframework.messaging.simp.config.TaskExecutorRegistration ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.simp.config.TaskExecutorRegistration org.springframework.messaging.simp.config.TaskExecutorRegistration ( ) { return org.springframework.messaging.simp.config.TaskExecutorRegistration ( ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return ! this . java.util.List<org.springframework.messaging.simp.config.ChannelInterceptor> . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.messaging.simp.config.ChannelInterceptor> < ChannelInterceptor > java.util.List<org.springframework.messaging.simp.config.ChannelInterceptor> ( ) { return this . java.util.List<org.springframework.messaging.simp.config.ChannelInterceptor> ; }  <METHOD_END>
