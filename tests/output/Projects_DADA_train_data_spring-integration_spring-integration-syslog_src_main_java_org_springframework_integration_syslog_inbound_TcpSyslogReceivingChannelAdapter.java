<METHOD_START> public void void ( AbstractServerConnectionFactory org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory ) { this . org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory = org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationEventPublisher org.springframework.integration.syslog.inbound.ApplicationEventPublisher ) { this . org.springframework.integration.syslog.inbound.ApplicationEventPublisher = org.springframework.integration.syslog.inbound.ApplicationEventPublisher ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onInit ( ) ; if ( this . org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory == null ) { this . org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory = new TcpNioServerConnectionFactory ( this . getPort ( ) ) ; this . org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory . setDeserializer ( new ByteArrayLfSerializer ( ) ) ; this . org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory . setBeanFactory ( getBeanFactory ( ) ) ; if ( this . org.springframework.integration.syslog.inbound.ApplicationEventPublisher != null ) { this . org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory . setApplicationEventPublisher ( this . org.springframework.integration.syslog.inbound.ApplicationEventPublisher ) ; } this . org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory . afterPropertiesSet ( ) ; } this . org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory . registerListener ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. doStart ( ) ; this . org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory . start ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. doStop ( ) ; this . org.springframework.integration.syslog.inbound.AbstractServerConnectionFactory . stop ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Message < ? > org.springframework.integration.syslog.inbound.Message<?> ) { this . convertAndSend ( org.springframework.integration.syslog.inbound.Message<> ) ; return false ; }  <METHOD_END>
