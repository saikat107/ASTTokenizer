<METHOD_START> @ Test public void void ( ) { PropertySource < ? > org.springframework.core.env.PropertySource<?> = new MapPropertySource ( STRING , java.util.Collections . java.util.Map<java.lang.Object,java.lang.Object> ( ) ) ; PropertySource < ? > org.springframework.core.env.PropertySource<?> = new MapPropertySource ( STRING , java.util.Collections . java.util.Map<java.lang.Object,java.lang.Object> ( ) ) ; PropertySource < ? > org.springframework.core.env.PropertySource<?> = new MapPropertySource ( STRING , java.util.Collections . java.util.Map<java.lang.Object,java.lang.Object> ( ) ) ; CompositePropertySource org.springframework.core.env.CompositePropertySource = new CompositePropertySource ( STRING ) ; org.springframework.core.env.CompositePropertySource . addPropertySource ( org.springframework.core.env.PropertySource<> ) ; org.springframework.core.env.CompositePropertySource . addPropertySource ( org.springframework.core.env.PropertySource<> ) ; org.springframework.core.env.CompositePropertySource . addPropertySource ( org.springframework.core.env.PropertySource<> ) ; org.springframework.core.env.CompositePropertySource . addFirstPropertySource ( org.springframework.core.env.PropertySource<> ) ; java.lang.String java.lang.String = org.springframework.core.env.CompositePropertySource . toString ( ) ; int int = java.lang.String . int ( STRING ) ; int int = java.lang.String . int ( STRING ) ; int int = java.lang.String . int ( STRING ) ; assertTrue ( STRING + java.lang.String , ( ( int < int ) && ( int < int ) ) ) ; }  <METHOD_END>
