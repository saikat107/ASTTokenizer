<METHOD_START> public void ( ) { this( ClassUtils . getDefaultClassLoader ( ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; void ( STRING ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.Collections . java.util.List<java.lang.String> ( this . java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.String java.lang.String ) throws org.springframework.expression.spel.support.EvaluationException { java.lang.String java.lang.String = java.lang.String ; try { return ClassUtils . forName ( java.lang.String , this . java.lang.ClassLoader ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { } for ( java.lang.String java.lang.String : this . java.util.List<java.lang.String> ) { try { java.lang.String = java.lang.String + '.' + java.lang.String ; return ClassUtils . forName ( java.lang.String , this . java.lang.ClassLoader ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { } } throw new SpelEvaluationException ( SpelMessage . TYPE_NOT_FOUND , java.lang.String ) ; }  <METHOD_END>
