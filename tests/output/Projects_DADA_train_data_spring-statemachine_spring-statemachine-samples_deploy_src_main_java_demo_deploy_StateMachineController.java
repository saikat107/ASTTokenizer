<METHOD_START> @ RequestMapping ( STRING ) public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( STRING ) public java.lang.String java.lang.String ( @ RequestParam ( value = STRING , required = false ) java.lang.String java.lang.String , @ RequestParam ( value = STRING , required = false ) java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> , Model demo.deploy.Model ) throws java.lang.Exception { demo.deploy.Model . addAttribute ( STRING , java.lang.String[] ) ; demo.deploy.Model . addAttribute ( STRING , java.lang.String[] ) ; if ( StringUtils . hasText ( java.lang.String ) ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; if ( java.util.Collection<java.lang.String> != null ) { for ( java.lang.String java.lang.String : java.util.Collection<java.lang.String> ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , true ) ; } } demo.deploy.StateMachineLogListener . resetMessages ( ) ; demo.deploy.StateMachine<java.lang.String,java.lang.String> . sendEvent ( MessageBuilder . createMessage ( java.lang.String , new MessageHeaders ( java.util.Map<java.lang.String,java.lang.Object> ) ) ) ; } demo.deploy.Model . addAttribute ( STRING , demo.deploy.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) ) ; demo.deploy.Model . addAttribute ( STRING , demo.deploy.StateMachineLogListener . getMessages ( ) ) ; return STRING ; }  <METHOD_END>
