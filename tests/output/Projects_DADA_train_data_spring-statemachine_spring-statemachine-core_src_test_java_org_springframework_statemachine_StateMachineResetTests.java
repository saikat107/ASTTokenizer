<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.AnnotationConfigApplicationContext org.springframework.statemachine.AnnotationConfigApplicationContext ( ) { return new AnnotationConfigApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { context . register ( org.springframework.statemachine.StateMachineResetTests.Config1 .class ) ; context . refresh ( ) ; @ java.lang.SuppressWarnings ( STRING ) StateMachine < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> = context . getBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE , StateMachine .class ) ; java.util.Map<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > java.util.Map<java.lang.Object,java.lang.Object> = new java.util.HashMap<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > ( ) ; java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; ExtendedState org.springframework.statemachine.ExtendedState = new DefaultExtendedState ( java.util.Map<java.lang.Object,java.lang.Object> ) ; DefaultStateMachineContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> = new DefaultStateMachineContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events , null , org.springframework.statemachine.ExtendedState ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getStateMachineAccessor ( ) . doWithAllRegions ( new StateMachineFunction < StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > > ( ) { @ java.lang.Override public void void ( StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) ; } } ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . start ( ) ; assertThat ( org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getState ( ) . getIds ( ) , containsInAnyOrder ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) ) ; assertThat ( ( java.lang.Integer ) org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . get ( STRING ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { context . register ( org.springframework.statemachine.StateMachineResetTests.Config1 .class ) ; context . refresh ( ) ; @ java.lang.SuppressWarnings ( STRING ) StateMachine < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> = context . getBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE , StateMachine .class ) ; java.util.Map<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > java.util.Map<java.lang.Object,java.lang.Object> = new java.util.HashMap<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > ( ) ; java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; ExtendedState org.springframework.statemachine.ExtendedState = new DefaultExtendedState ( java.util.Map<java.lang.Object,java.lang.Object> ) ; DefaultStateMachineContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> = new DefaultStateMachineContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events , null , org.springframework.statemachine.ExtendedState ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getStateMachineAccessor ( ) . doWithAllRegions ( new StateMachineFunction < StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > > ( ) { @ java.lang.Override public void void ( StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) ; } } ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . start ( ) ; assertThat ( org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getState ( ) . getIds ( ) , containsInAnyOrder ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) ) ; assertThat ( ( java.lang.Integer ) org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . get ( STRING ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { context . register ( org.springframework.statemachine.StateMachineResetTests.Config1 .class ) ; context . refresh ( ) ; @ java.lang.SuppressWarnings ( STRING ) StateMachine < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> = context . getBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE , StateMachine .class ) ; java.util.Map<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > java.util.Map<java.lang.Object,java.lang.Object> = new java.util.HashMap<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > ( ) ; java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; ExtendedState org.springframework.statemachine.ExtendedState = new DefaultExtendedState ( java.util.Map<java.lang.Object,java.lang.Object> ) ; DefaultStateMachineContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> = new DefaultStateMachineContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events , null , org.springframework.statemachine.ExtendedState ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getStateMachineAccessor ( ) . doWithAllRegions ( new StateMachineFunction < StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > > ( ) { @ java.lang.Override public void void ( StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) ; } } ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . start ( ) ; assertThat ( org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getState ( ) . getIds ( ) , containsInAnyOrder ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) ) ; assertThat ( ( java.lang.Integer ) org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . get ( STRING ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.StateMachineResetTests.Config2 .class ) ; context . refresh ( ) ; @ java.lang.SuppressWarnings ( STRING ) StateMachine < TestStates , TestEvents > org.springframework.statemachine.StateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = context . getBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE , StateMachine .class ) ; DefaultStateMachineContext < TestStates , TestEvents > org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultStateMachineContext < TestStates , TestEvents > ( TestStates . S21 , TestEvents . E2 , null , null ) ; DefaultStateMachineContext < TestStates , TestEvents > org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultStateMachineContext < TestStates , TestEvents > ( TestStates . S31 , TestEvents . E3 , null , null ) ; java.util.List<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < StateMachineContext < TestStates , TestEvents > > java.util.List<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < StateMachineContext < TestStates , TestEvents > > ( ) ; java.util.List<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.List<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; DefaultStateMachineContext < TestStates , TestEvents > org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultStateMachineContext < TestStates , TestEvents > ( java.util.List<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , TestStates . S2 , TestEvents . E1 , null , null ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . getStateMachineAccessor ( ) . doWithAllRegions ( new StateMachineFunction < StateMachineAccess < TestStates , TestEvents > > ( ) { @ java.lang.Override public void void ( StateMachineAccess < TestStates , TestEvents > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; } } ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . start ( ) ; assertThat ( org.springframework.statemachine.StateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . getState ( ) . getIds ( ) , containsInAnyOrder ( TestStates . S2 , TestStates . S21 , TestStates . S31 ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineAccess < TestStates , TestEvents > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.StateMachineResetTests.Config2 .class ) ; context . refresh ( ) ; @ java.lang.SuppressWarnings ( STRING ) StateMachine < TestStates , TestEvents > org.springframework.statemachine.StateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = context . getBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE , StateMachine .class ) ; DefaultStateMachineContext < TestStates , TestEvents > org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultStateMachineContext < TestStates , TestEvents > ( TestStates . S21 , null , null , null ) ; DefaultStateMachineContext < TestStates , TestEvents > org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultStateMachineContext < TestStates , TestEvents > ( TestStates . S31 , null , null , null ) ; java.util.List<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < StateMachineContext < TestStates , TestEvents > > java.util.List<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < StateMachineContext < TestStates , TestEvents > > ( ) ; java.util.List<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.List<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; DefaultStateMachineContext < TestStates , TestEvents > org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultStateMachineContext < TestStates , TestEvents > ( java.util.List<org.springframework.statemachine.StateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , TestStates . S2 , null , null , null ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . getStateMachineAccessor ( ) . doWithAllRegions ( new StateMachineFunction < StateMachineAccess < TestStates , TestEvents > > ( ) { @ java.lang.Override public void void ( StateMachineAccess < TestStates , TestEvents > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; } } ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . start ( ) ; assertThat ( org.springframework.statemachine.StateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . getState ( ) . getIds ( ) , containsInAnyOrder ( TestStates . S2 , TestStates . S21 , TestStates . S31 ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineAccess < TestStates , TestEvents > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.StateMachineResetTests.Config3 .class ) ; context . refresh ( ) ; @ java.lang.SuppressWarnings ( STRING ) StateMachine < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> = context . getBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE , StateMachine .class ) ; assertThat ( ( java.lang.Integer ) org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . get ( STRING ) , nullValue ( ) ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . sendEvent ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) ; assertThat ( ( java.lang.Integer ) org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . get ( STRING ) , is ( NUMBER ) ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . stop ( ) ; java.util.Map<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > java.util.Map<java.lang.Object,java.lang.Object> = new java.util.HashMap<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > ( ) ; java.util.Map<java.lang.Object,java.lang.Object> . void ( org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) ) ; ExtendedState org.springframework.statemachine.ExtendedState = new DefaultExtendedState ( java.util.Map<java.lang.Object,java.lang.Object> ) ; DefaultStateMachineContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> = new DefaultStateMachineContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , null , null , org.springframework.statemachine.ExtendedState ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getStateMachineAccessor ( ) . doWithAllRegions ( new StateMachineFunction < StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > > ( ) { @ java.lang.Override public void void ( StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) ; } } ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . start ( ) ; assertThat ( ( java.lang.Integer ) org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . get ( STRING ) , is ( NUMBER ) ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . sendEvent ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) ; assertThat ( ( java.lang.Integer ) org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . get ( STRING ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . resetStateMachine ( org.springframework.statemachine.DefaultStateMachineContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { context . register ( org.springframework.statemachine.StateMachineResetTests.Config1 .class ) ; context . refresh ( ) ; @ java.lang.SuppressWarnings ( STRING ) StateMachine < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> = context . getBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE , StateMachine .class ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . start ( ) ; assertThat ( org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getState ( ) . getIds ( ) , containsInAnyOrder ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) ) ; assertThat ( ( java.lang.Integer ) org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . get ( STRING ) , is ( NUMBER ) ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . sendEvent ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) ; assertThat ( org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getState ( ) . getIds ( ) , containsInAnyOrder ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) ) ; assertThat ( ( java.lang.Integer ) org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . get ( STRING ) , is ( NUMBER ) ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . stop ( ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getStateMachineAccessor ( ) . doWithAllRegions ( new StateMachineFunction < StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > > ( ) { @ java.lang.Override public void void ( StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . resetStateMachine ( null ) ; } } ) ; org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . start ( ) ; assertThat ( org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getState ( ) . getIds ( ) , containsInAnyOrder ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) ) ; assertThat ( org.springframework.statemachine.StateMachine<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . size ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineAccess < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { org.springframework.statemachine.StateMachineAccess<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . resetStateMachine ( null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> )				throws java.lang.Exception { org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . withStates ( ) . initial ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.FooAction ( ) ) . state ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . and ( ) . withStates ( ) . parent ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . initial ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . state ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . and ( ) . withStates ( ) . parent ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . initial ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . state ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . state ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . and ( ) . withStates ( ) . parent ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . state ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . and ( ) . withStates ( ) . parent ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . initial ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . state ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . and ( ) . withStates ( ) . parent ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . initial ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . state ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . state ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineTransitionConfigurer<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> )				throws java.lang.Exception { org.springframework.statemachine.StateMachineTransitionConfigurer<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . guard ( org.springframework.statemachine.StateMachineResetTests.FooGuard ( ) ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withInternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . guard ( org.springframework.statemachine.StateMachineResetTests.FooGuard ( ) ) . action ( org.springframework.statemachine.StateMachineResetTests.FooAction ( ) ) . and ( ) . withInternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . guard ( org.springframework.statemachine.StateMachineResetTests.FooGuard ( ) ) . action ( org.springframework.statemachine.StateMachineResetTests.FooAction ( ) ) . and ( ) . withInternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . target ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.StateMachineResetTests.FooGuard org.springframework.statemachine.StateMachineResetTests.FooGuard ( ) { return new org.springframework.statemachine.StateMachineResetTests.FooGuard ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.StateMachineResetTests.FooGuard org.springframework.statemachine.StateMachineResetTests.FooGuard ( ) { return new org.springframework.statemachine.StateMachineResetTests.FooGuard ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.StateMachineResetTests.FooAction org.springframework.statemachine.StateMachineResetTests.FooAction ( ) { return new org.springframework.statemachine.StateMachineResetTests.FooAction ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineConfigurationConfigurer < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineConfigurationConfigurer<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> )				throws java.lang.Exception { org.springframework.statemachine.StateMachineConfigurationConfigurer<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . withConfiguration ( ) . autoStartup ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> )				throws java.lang.Exception { org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . withStates ( ) . initial ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateMachineTransitionConfigurer<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> )				throws java.lang.Exception { org.springframework.statemachine.StateMachineTransitionConfigurer<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . withInternal ( ) . source ( org.springframework.statemachine.StateMachineResetTests.States . org.springframework.statemachine.StateMachineResetTests.States ) . event ( org.springframework.statemachine.StateMachineResetTests.Events . org.springframework.statemachine.StateMachineResetTests.Events ) . action ( org.springframework.statemachine.Action<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.Action<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.Action<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ( ) { return new Action < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > ( ) { @ java.lang.Override public void void ( StateContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { java.lang.Integer java.lang.Integer = org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . get ( STRING , java.lang.Integer .class ) ; if ( java.lang.Integer == null ) { org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , NUMBER ) ; } else { org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , ( java.lang.Integer + NUMBER ) ) ; } } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { java.lang.Integer java.lang.Integer = org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . get ( STRING , java.lang.Integer .class ) ; if ( java.lang.Integer == null ) { org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , NUMBER ) ; } else { org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , ( java.lang.Integer + NUMBER ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { java.util.Map<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > java.util.Map<java.lang.Object,java.lang.Object> = org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) ; java.lang.Integer java.lang.Integer = org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . get ( STRING , java.lang.Integer .class ) ; if ( java.lang.Integer == null ) { java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; } else if ( java.lang.Integer == NUMBER ) { java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; } else if ( java.lang.Integer == NUMBER ) { java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; } }  <METHOD_END>
<METHOD_START> public void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( StateContext < org.springframework.statemachine.StateMachineResetTests.States , org.springframework.statemachine.StateMachineResetTests.Events > org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> ) { java.lang.Object java.lang.Object = org.springframework.statemachine.StateContext<org.springframework.statemachine.StateMachineResetTests.States,org.springframework.statemachine.StateMachineResetTests.Events> . getExtendedState ( ) . getVariables ( ) . get ( STRING ) ; return ! ( java.lang.Object == null || ! java.lang.Object . boolean ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < TestStates , TestEvents > org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) throws java.lang.Exception { org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . withStates ( ) . initial ( TestStates . SI ) . state ( TestStates . SI ) . state ( TestStates . S2 ) . end ( TestStates . SF ) . and ( ) . withStates ( ) . parent ( TestStates . S2 ) . initial ( TestStates . S20 ) . state ( TestStates . S20 ) . state ( TestStates . S21 ) . and ( ) . withStates ( ) . parent ( TestStates . S2 ) . initial ( TestStates . S30 ) . state ( TestStates . S30 ) . state ( TestStates . S31 ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < TestStates , TestEvents > org.springframework.statemachine.StateMachineTransitionConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) throws java.lang.Exception { org.springframework.statemachine.StateMachineTransitionConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . withExternal ( ) . source ( TestStates . SI ) . target ( TestStates . S2 ) . event ( TestEvents . E1 ) . and ( ) . withExternal ( ) . source ( TestStates . S20 ) . target ( TestStates . S21 ) . event ( TestEvents . E2 ) . and ( ) . withExternal ( ) . source ( TestStates . S30 ) . target ( TestStates . S31 ) . event ( TestEvents . E3 ) ; }  <METHOD_END>
