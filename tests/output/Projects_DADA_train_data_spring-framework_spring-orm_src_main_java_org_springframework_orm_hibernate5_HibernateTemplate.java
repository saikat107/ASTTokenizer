<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( SessionFactory org.springframework.orm.hibernate5.SessionFactory ) { void ( org.springframework.orm.hibernate5.SessionFactory ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( SessionFactory org.springframework.orm.hibernate5.SessionFactory ) { this . org.springframework.orm.hibernate5.SessionFactory = org.springframework.orm.hibernate5.SessionFactory ; }  <METHOD_END>
<METHOD_START> public org.springframework.orm.hibernate5.SessionFactory org.springframework.orm.hibernate5.SessionFactory ( ) { return this . org.springframework.orm.hibernate5.SessionFactory ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( org.springframework.orm.hibernate5.SessionFactory ( ) == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( HibernateCallback < T > org.springframework.orm.hibernate5.HibernateCallback<T> ) throws org.springframework.orm.hibernate5.DataAccessException { return java.lang.Object ( org.springframework.orm.hibernate5.HibernateCallback<T> , false ) ; }  <METHOD_END>
<METHOD_START> public < T > T T ( HibernateCallback < T > org.springframework.orm.hibernate5.HibernateCallback<T> ) { return java.lang.Object ( org.springframework.orm.hibernate5.HibernateCallback<T> , true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected < T > T T ( HibernateCallback < T > org.springframework.orm.hibernate5.HibernateCallback<T> , boolean boolean ) throws org.springframework.orm.hibernate5.DataAccessException { Assert . notNull ( org.springframework.orm.hibernate5.HibernateCallback<T> , STRING ) ; Session org.springframework.orm.hibernate5.Session = null ; boolean boolean = false ; try { org.springframework.orm.hibernate5.Session = org.springframework.orm.hibernate5.SessionFactory ( ) . getCurrentSession ( ) ; } catch ( HibernateException org.springframework.orm.hibernate5.HibernateException ) { org.springframework.orm.hibernate5.Log . debug ( STRING , org.springframework.orm.hibernate5.HibernateException ) ; } if ( org.springframework.orm.hibernate5.Session == null ) { org.springframework.orm.hibernate5.Session = org.springframework.orm.hibernate5.SessionFactory ( ) . openSession ( ) ; org.springframework.orm.hibernate5.Session . setFlushMode ( FlushMode . MANUAL ) ; boolean = true ; } try { void ( org.springframework.orm.hibernate5.Session ) ; Session org.springframework.orm.hibernate5.Session = ( boolean || boolean ( ) ? org.springframework.orm.hibernate5.Session : org.springframework.orm.hibernate5.Session ( org.springframework.orm.hibernate5.Session ) ) ; return org.springframework.orm.hibernate5.HibernateCallback<T> . doInHibernate ( org.springframework.orm.hibernate5.Session ) ; } catch ( HibernateException org.springframework.orm.hibernate5.HibernateException ) { throw SessionFactoryUtils . convertHibernateAccessException ( org.springframework.orm.hibernate5.HibernateException ) ; } catch ( PersistenceException org.springframework.orm.hibernate5.PersistenceException ) { if ( org.springframework.orm.hibernate5.PersistenceException . getCause ( ) instanceof HibernateException ) { throw SessionFactoryUtils . convertHibernateAccessException ( ( HibernateException ) org.springframework.orm.hibernate5.PersistenceException . getCause ( ) ) ; } throw org.springframework.orm.hibernate5.PersistenceException ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { throw java.lang.RuntimeException ; } finally { if ( boolean ) { SessionFactoryUtils . closeSession ( org.springframework.orm.hibernate5.Session ) ; } else { void ( org.springframework.orm.hibernate5.Session ) ; } } }  <METHOD_END>
<METHOD_START> protected org.springframework.orm.hibernate5.Session org.springframework.orm.hibernate5.Session ( Session org.springframework.orm.hibernate5.Session ) { return ( Session ) java.lang.reflect.Proxy . java.lang.Object ( org.springframework.orm.hibernate5.Session . getClass ( ) . getClassLoader ( ) , new java.lang.Class<?> < ? > [] { Session .class } , new org.springframework.orm.hibernate5.HibernateTemplate.CloseSuppressingInvocationHandler ( org.springframework.orm.hibernate5.Session ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( Session org.springframework.orm.hibernate5.Session ) { java.lang.String [] java.lang.String[] = java.lang.String[] ( ) ; if ( java.lang.String[] != null ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { org.springframework.orm.hibernate5.Session . enableFilter ( java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> protected void void ( Session org.springframework.orm.hibernate5.Session ) { java.lang.String [] java.lang.String[] = java.lang.String[] ( ) ; if ( java.lang.String[] != null ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { org.springframework.orm.hibernate5.Session . disableFilter ( java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> , java.io.Serializable java.io.Serializable ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( java.lang.Class<T> , java.io.Serializable , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( final java.lang.Class<T> < T > java.lang.Class<T> , final java.io.Serializable java.io.Serializable , final LockMode org.springframework.orm.hibernate5.LockMode )			throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < T > ( ) { @ java.lang.Override public T T ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { if ( org.springframework.orm.hibernate5.LockMode != null ) { return org.springframework.orm.hibernate5.Session . get ( java.lang.Class<T> , java.io.Serializable , new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) ; } else { return org.springframework.orm.hibernate5.Session . get ( java.lang.Class<T> , java.io.Serializable ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { if ( org.springframework.orm.hibernate5.LockMode != null ) { return org.springframework.orm.hibernate5.Session . get ( java.lang.Class<T> , java.io.Serializable , new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) ; } else { return org.springframework.orm.hibernate5.Session . get ( java.lang.Class<T> , java.io.Serializable ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.io.Serializable java.io.Serializable ) throws org.springframework.orm.hibernate5.DataAccessException { return java.lang.Object ( java.lang.String , java.io.Serializable , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( final java.lang.String java.lang.String , final java.io.Serializable java.io.Serializable , final LockMode org.springframework.orm.hibernate5.LockMode )			throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { if ( org.springframework.orm.hibernate5.LockMode != null ) { return org.springframework.orm.hibernate5.Session . get ( java.lang.String , java.io.Serializable , new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) ; } else { return org.springframework.orm.hibernate5.Session . get ( java.lang.String , java.io.Serializable ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { if ( org.springframework.orm.hibernate5.LockMode != null ) { return org.springframework.orm.hibernate5.Session . get ( java.lang.String , java.io.Serializable , new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) ; } else { return org.springframework.orm.hibernate5.Session . get ( java.lang.String , java.io.Serializable ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> , java.io.Serializable java.io.Serializable ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( java.lang.Class<T> , java.io.Serializable , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( final java.lang.Class<T> < T > java.lang.Class<T> , final java.io.Serializable java.io.Serializable , final LockMode org.springframework.orm.hibernate5.LockMode )			throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < T > ( ) { @ java.lang.Override public T T ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { if ( org.springframework.orm.hibernate5.LockMode != null ) { return org.springframework.orm.hibernate5.Session . load ( java.lang.Class<T> , java.io.Serializable , new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) ; } else { return org.springframework.orm.hibernate5.Session . load ( java.lang.Class<T> , java.io.Serializable ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { if ( org.springframework.orm.hibernate5.LockMode != null ) { return org.springframework.orm.hibernate5.Session . load ( java.lang.Class<T> , java.io.Serializable , new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) ; } else { return org.springframework.orm.hibernate5.Session . load ( java.lang.Class<T> , java.io.Serializable ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.io.Serializable java.io.Serializable ) throws org.springframework.orm.hibernate5.DataAccessException { return java.lang.Object ( java.lang.String , java.io.Serializable , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( final java.lang.String java.lang.String , final java.io.Serializable java.io.Serializable , final LockMode org.springframework.orm.hibernate5.LockMode )			throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { if ( org.springframework.orm.hibernate5.LockMode != null ) { return org.springframework.orm.hibernate5.Session . load ( java.lang.String , java.io.Serializable , new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) ; } else { return org.springframework.orm.hibernate5.Session . load ( java.lang.String , java.io.Serializable ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { if ( org.springframework.orm.hibernate5.LockMode != null ) { return org.springframework.orm.hibernate5.Session . load ( java.lang.String , java.io.Serializable , new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) ; } else { return org.springframework.orm.hibernate5.Session . load ( java.lang.String , java.io.Serializable ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > java.util.List<T> < T > java.util.List<T> ( final java.lang.Class<T> < T > java.lang.Class<T> ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.util.List<T> < T > > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<T> < T > java.util.List<T> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { Criteria org.springframework.orm.hibernate5.Criteria = org.springframework.orm.hibernate5.Session . createCriteria ( java.lang.Class<T> ) ; org.springframework.orm.hibernate5.Criteria . setResultTransformer ( Criteria . DISTINCT_ROOT_ENTITY ) ; void ( org.springframework.orm.hibernate5.Criteria ) ; return org.springframework.orm.hibernate5.Criteria . list ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<T> < T > java.util.List<T> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { Criteria org.springframework.orm.hibernate5.Criteria = org.springframework.orm.hibernate5.Session . createCriteria ( java.lang.Class<T> ) ; org.springframework.orm.hibernate5.Criteria . setResultTransformer ( Criteria . DISTINCT_ROOT_ENTITY ) ; void ( org.springframework.orm.hibernate5.Criteria ) ; return org.springframework.orm.hibernate5.Criteria . list ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Object java.lang.Object , final java.io.Serializable java.io.Serializable ) throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org.springframework.orm.hibernate5.Session . load ( java.lang.Object , java.io.Serializable ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org.springframework.orm.hibernate5.Session . load ( java.lang.Object , java.io.Serializable ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { void ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Object java.lang.Object , final LockMode org.springframework.orm.hibernate5.LockMode ) throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { if ( org.springframework.orm.hibernate5.LockMode != null ) { org.springframework.orm.hibernate5.Session . refresh ( java.lang.Object , new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) ; } else { org.springframework.orm.hibernate5.Session . refresh ( java.lang.Object ) ; } return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { if ( org.springframework.orm.hibernate5.LockMode != null ) { org.springframework.orm.hibernate5.Session . refresh ( java.lang.Object , new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) ; } else { org.springframework.orm.hibernate5.Session . refresh ( java.lang.Object ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.lang.Boolean > ( ) { @ java.lang.Override public java.lang.Boolean java.lang.Boolean ( Session org.springframework.orm.hibernate5.Session ) { return org.springframework.orm.hibernate5.Session . contains ( java.lang.Object ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Boolean java.lang.Boolean ( Session org.springframework.orm.hibernate5.Session ) { return org.springframework.orm.hibernate5.Session . contains ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org.springframework.orm.hibernate5.Session . evict ( java.lang.Object ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org.springframework.orm.hibernate5.Session . evict ( java.lang.Object ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { try { Hibernate . initialize ( java.lang.Object ) ; } catch ( HibernateException org.springframework.orm.hibernate5.HibernateException ) { throw SessionFactoryUtils . convertHibernateAccessException ( org.springframework.orm.hibernate5.HibernateException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.orm.hibernate5.Filter org.springframework.orm.hibernate5.Filter ( java.lang.String java.lang.String ) throws java.lang.IllegalStateException { Session org.springframework.orm.hibernate5.Session = org.springframework.orm.hibernate5.SessionFactory ( ) . getCurrentSession ( ) ; Filter org.springframework.orm.hibernate5.Filter = org.springframework.orm.hibernate5.Session . getEnabledFilter ( java.lang.String ) ; if ( org.springframework.orm.hibernate5.Filter == null ) { org.springframework.orm.hibernate5.Filter = org.springframework.orm.hibernate5.Session . enableFilter ( java.lang.String ) ; } return org.springframework.orm.hibernate5.Filter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Object java.lang.Object , final LockMode org.springframework.orm.hibernate5.LockMode ) throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.Object ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.Object ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.String java.lang.String , final java.lang.Object java.lang.Object , final LockMode org.springframework.orm.hibernate5.LockMode )			throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.String , java.lang.Object ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.String , java.lang.Object ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.Serializable java.io.Serializable ( final java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.io.Serializable > ( ) { @ java.lang.Override public java.io.Serializable java.io.Serializable ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; return org.springframework.orm.hibernate5.Session . save ( java.lang.Object ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.Serializable java.io.Serializable ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; return org.springframework.orm.hibernate5.Session . save ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.Serializable java.io.Serializable ( final java.lang.String java.lang.String , final java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.io.Serializable > ( ) { @ java.lang.Override public java.io.Serializable java.io.Serializable ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; return org.springframework.orm.hibernate5.Session . save ( java.lang.String , java.lang.Object ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.Serializable java.io.Serializable ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; return org.springframework.orm.hibernate5.Session . save ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { void ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Object java.lang.Object , final LockMode org.springframework.orm.hibernate5.LockMode ) throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . update ( java.lang.Object ) ; if ( org.springframework.orm.hibernate5.LockMode != null ) { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.Object ) ; } return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . update ( java.lang.Object ) ; if ( org.springframework.orm.hibernate5.LockMode != null ) { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.Object ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { void ( java.lang.String , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.String java.lang.String , final java.lang.Object java.lang.Object , final LockMode org.springframework.orm.hibernate5.LockMode )			throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . update ( java.lang.String , java.lang.Object ) ; if ( org.springframework.orm.hibernate5.LockMode != null ) { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.String , java.lang.Object ) ; } return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . update ( java.lang.String , java.lang.Object ) ; if ( org.springframework.orm.hibernate5.LockMode != null ) { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.String , java.lang.Object ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . saveOrUpdate ( java.lang.Object ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . saveOrUpdate ( java.lang.Object ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.String java.lang.String , final java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . saveOrUpdate ( java.lang.String , java.lang.Object ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . saveOrUpdate ( java.lang.String , java.lang.Object ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Object java.lang.Object , final ReplicationMode org.springframework.orm.hibernate5.ReplicationMode )			throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . replicate ( java.lang.Object , org.springframework.orm.hibernate5.ReplicationMode ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . replicate ( java.lang.Object , org.springframework.orm.hibernate5.ReplicationMode ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.String java.lang.String , final java.lang.Object java.lang.Object , final ReplicationMode org.springframework.orm.hibernate5.ReplicationMode )			throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . replicate ( java.lang.String , java.lang.Object , org.springframework.orm.hibernate5.ReplicationMode ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . replicate ( java.lang.String , java.lang.Object , org.springframework.orm.hibernate5.ReplicationMode ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . persist ( java.lang.Object ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . persist ( java.lang.Object ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.String java.lang.String , final java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . persist ( java.lang.String , java.lang.Object ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; org.springframework.orm.hibernate5.Session . persist ( java.lang.String , java.lang.Object ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( final T T ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < T > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public T T ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; return ( T ) org.springframework.orm.hibernate5.Session . merge ( T ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public T T ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; return ( T ) org.springframework.orm.hibernate5.Session . merge ( T ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( final java.lang.String java.lang.String , final T T ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < T > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public T T ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; return ( T ) org.springframework.orm.hibernate5.Session . merge ( java.lang.String , T ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public T T ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; return ( T ) org.springframework.orm.hibernate5.Session . merge ( java.lang.String , T ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { void ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Object java.lang.Object , final LockMode org.springframework.orm.hibernate5.LockMode ) throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; if ( org.springframework.orm.hibernate5.LockMode != null ) { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.Object ) ; } org.springframework.orm.hibernate5.Session . delete ( java.lang.Object ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; if ( org.springframework.orm.hibernate5.LockMode != null ) { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.Object ) ; } org.springframework.orm.hibernate5.Session . delete ( java.lang.Object ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) throws org.springframework.orm.hibernate5.DataAccessException { void ( java.lang.String , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.String java.lang.String , final java.lang.Object java.lang.Object , final LockMode org.springframework.orm.hibernate5.LockMode )			throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; if ( org.springframework.orm.hibernate5.LockMode != null ) { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.String , java.lang.Object ) ; } org.springframework.orm.hibernate5.Session . delete ( java.lang.String , java.lang.Object ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; if ( org.springframework.orm.hibernate5.LockMode != null ) { org.springframework.orm.hibernate5.Session . buildLockRequest ( new LockOptions ( org.springframework.orm.hibernate5.LockMode ) ) . lock ( java.lang.String , java.lang.Object ) ; } org.springframework.orm.hibernate5.Session . delete ( java.lang.String , java.lang.Object ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.util.Collection<?> < ? > java.util.Collection<?> ) throws org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; for ( java.lang.Object java.lang.Object : java.util.Collection<> ) { org.springframework.orm.hibernate5.Session . delete ( java.lang.Object ) ; } return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { void ( org.springframework.orm.hibernate5.Session ) ; for ( java.lang.Object java.lang.Object : java.util.Collection<> ) { org.springframework.orm.hibernate5.Session . delete ( java.lang.Object ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org.springframework.orm.hibernate5.Session . flush ( ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org.springframework.orm.hibernate5.Session . flush ( ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.orm.hibernate5.DataAccessException { T ( new HibernateCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) { org.springframework.orm.hibernate5.Session . clear ( ) ; return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Session org.springframework.orm.hibernate5.Session ) { org.springframework.orm.hibernate5.Session . clear ( ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( final java.lang.String java.lang.String , final java.lang.Object ... java.lang.Object[] ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.util.List<?> < ? > > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; if ( java.lang.Object[] != null ) { for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { org.hibernate.Query . setParameter ( int , java.lang.Object[] [ int ] ) ; } } return org.hibernate.Query . list ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; if ( java.lang.Object[] != null ) { for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { org.hibernate.Query . setParameter ( int , java.lang.Object[] [ int ] ) ; } } return org.hibernate.Query . list ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.Object java.lang.Object )			throws org.springframework.orm.hibernate5.DataAccessException { return java.util.List<?> ( java.lang.String , new java.lang.String [] { java.lang.String } , new java.lang.Object [] { java.lang.Object } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( final java.lang.String java.lang.String , final java.lang.String [] java.lang.String[] , final java.lang.Object [] java.lang.Object[] )			throws org.springframework.orm.hibernate5.DataAccessException { if ( java.lang.String[] . int != java.lang.Object[] . int ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } return T ( new HibernateCallback < java.util.List<?> < ? > > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { void ( org.hibernate.Query , java.lang.String[] [ int ] , java.lang.Object[] [ int ] ) ; } return org.hibernate.Query . list ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { void ( org.hibernate.Query , java.lang.String[] [ int ] , java.lang.Object[] [ int ] ) ; } return org.hibernate.Query . list ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( final java.lang.String java.lang.String , final java.lang.Object java.lang.Object )			throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.util.List<?> < ? > > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; org.hibernate.Query . setProperties ( java.lang.Object ) ; return org.hibernate.Query . list ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; org.hibernate.Query . setProperties ( java.lang.Object ) ; return org.hibernate.Query . list ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( final java.lang.String java.lang.String , final java.lang.Object ... java.lang.Object[] ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.util.List<?> < ? > > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; if ( java.lang.Object[] != null ) { for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { org.hibernate.Query . setParameter ( int , java.lang.Object[] [ int ] ) ; } } return org.hibernate.Query . list ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; if ( java.lang.Object[] != null ) { for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { org.hibernate.Query . setParameter ( int , java.lang.Object[] [ int ] ) ; } } return org.hibernate.Query . list ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.Object java.lang.Object )			throws org.springframework.orm.hibernate5.DataAccessException { return java.util.List<?> ( java.lang.String , new java.lang.String [] { java.lang.String } , new java.lang.Object [] { java.lang.Object } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( final java.lang.String java.lang.String , final java.lang.String [] java.lang.String[] , final java.lang.Object [] java.lang.Object[] )			throws org.springframework.orm.hibernate5.DataAccessException { if ( java.lang.Object[] != null && ( java.lang.String[] == null || java.lang.String[] . int != java.lang.Object[] . int ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } return T ( new HibernateCallback < java.util.List<?> < ? > > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; if ( java.lang.Object[] != null ) { for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { void ( org.hibernate.Query , java.lang.String[] [ int ] , java.lang.Object[] [ int ] ) ; } } return org.hibernate.Query . list ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; if ( java.lang.Object[] != null ) { for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { void ( org.hibernate.Query , java.lang.String[] [ int ] , java.lang.Object[] [ int ] ) ; } } return org.hibernate.Query . list ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( final java.lang.String java.lang.String , final java.lang.Object java.lang.Object )			throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.util.List<?> < ? > > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; org.hibernate.Query . setProperties ( java.lang.Object ) ; return org.hibernate.Query . list ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; org.hibernate.Query . setProperties ( java.lang.Object ) ; return org.hibernate.Query . list ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( DetachedCriteria org.springframework.orm.hibernate5.DetachedCriteria ) throws org.springframework.orm.hibernate5.DataAccessException { return java.util.List<?> ( org.springframework.orm.hibernate5.DetachedCriteria , - NUMBER , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( final DetachedCriteria org.springframework.orm.hibernate5.DetachedCriteria , final int int , final int int )			throws org.springframework.orm.hibernate5.DataAccessException { Assert . notNull ( org.springframework.orm.hibernate5.DetachedCriteria , STRING ) ; return T ( new HibernateCallback < java.util.List<?> < ? > > ( ) { @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { Criteria org.springframework.orm.hibernate5.Criteria = org.springframework.orm.hibernate5.DetachedCriteria . getExecutableCriteria ( org.springframework.orm.hibernate5.Session ) ; void ( org.springframework.orm.hibernate5.Criteria ) ; if ( int >= NUMBER ) { org.springframework.orm.hibernate5.Criteria . setFirstResult ( int ) ; } if ( int > NUMBER ) { org.springframework.orm.hibernate5.Criteria . setMaxResults ( int ) ; } return org.springframework.orm.hibernate5.Criteria . list ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<?> < ? > java.util.List<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { Criteria org.springframework.orm.hibernate5.Criteria = org.springframework.orm.hibernate5.DetachedCriteria . getExecutableCriteria ( org.springframework.orm.hibernate5.Session ) ; void ( org.springframework.orm.hibernate5.Criteria ) ; if ( int >= NUMBER ) { org.springframework.orm.hibernate5.Criteria . setFirstResult ( int ) ; } if ( int > NUMBER ) { org.springframework.orm.hibernate5.Criteria . setMaxResults ( int ) ; } return org.springframework.orm.hibernate5.Criteria . list ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > java.util.List<T> < T > java.util.List<T> ( T T ) throws org.springframework.orm.hibernate5.DataAccessException { return java.util.List<T> ( null , T , - NUMBER , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > java.util.List<T> < T > java.util.List<T> ( java.lang.String java.lang.String , T T ) throws org.springframework.orm.hibernate5.DataAccessException { return java.util.List<T> ( java.lang.String , T , - NUMBER , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > java.util.List<T> < T > java.util.List<T> ( T T , int int , int int ) throws org.springframework.orm.hibernate5.DataAccessException { return java.util.List<T> ( null , T , int , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public < T > java.util.List<T> < T > java.util.List<T> ( final java.lang.String java.lang.String , final T T , final int int , final int int )			throws org.springframework.orm.hibernate5.DataAccessException { Assert . notNull ( T , STRING ) ; return T ( new HibernateCallback < java.util.List<T> < T > > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.util.List<T> < T > java.util.List<T> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { Criteria org.springframework.orm.hibernate5.Criteria = ( java.lang.String != null ? org.springframework.orm.hibernate5.Session . createCriteria ( java.lang.String ) : org.springframework.orm.hibernate5.Session . createCriteria ( T . java.lang.Class<? extends java.lang.Object> ( ) ) ) ; org.springframework.orm.hibernate5.Criteria . add ( Example . create ( T ) ) ; void ( org.springframework.orm.hibernate5.Criteria ) ; if ( int >= NUMBER ) { org.springframework.orm.hibernate5.Criteria . setFirstResult ( int ) ; } if ( int > NUMBER ) { org.springframework.orm.hibernate5.Criteria . setMaxResults ( int ) ; } return org.springframework.orm.hibernate5.Criteria . list ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.util.List<T> < T > java.util.List<T> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { Criteria org.springframework.orm.hibernate5.Criteria = ( java.lang.String != null ? org.springframework.orm.hibernate5.Session . createCriteria ( java.lang.String ) : org.springframework.orm.hibernate5.Session . createCriteria ( T . java.lang.Class<? extends java.lang.Object> ( ) ) ) ; org.springframework.orm.hibernate5.Criteria . add ( Example . create ( T ) ) ; void ( org.springframework.orm.hibernate5.Criteria ) ; if ( int >= NUMBER ) { org.springframework.orm.hibernate5.Criteria . setFirstResult ( int ) ; } if ( int > NUMBER ) { org.springframework.orm.hibernate5.Criteria . setMaxResults ( int ) ; } return org.springframework.orm.hibernate5.Criteria . list ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<?> < ? > java.util.Iterator<?> ( final java.lang.String java.lang.String , final java.lang.Object ... java.lang.Object[] ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.util.Iterator<?> < ? > > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.Iterator<?> < ? > java.util.Iterator<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; if ( java.lang.Object[] != null ) { for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { org.hibernate.Query . setParameter ( int , java.lang.Object[] [ int ] ) ; } } return org.hibernate.Query . iterate ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.util.Iterator<?> < ? > java.util.Iterator<?> ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; if ( java.lang.Object[] != null ) { for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { org.hibernate.Query . setParameter ( int , java.lang.Object[] [ int ] ) ; } } return org.hibernate.Query . iterate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Iterator<?> < ? > java.util.Iterator<?> ) throws org.springframework.orm.hibernate5.DataAccessException { try { Hibernate . close ( java.util.Iterator<> ) ; } catch ( HibernateException org.springframework.orm.hibernate5.HibernateException ) { throw SessionFactoryUtils . convertHibernateAccessException ( org.springframework.orm.hibernate5.HibernateException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.Object ... java.lang.Object[] ) throws org.springframework.orm.hibernate5.DataAccessException { return T ( new HibernateCallback < java.lang.Integer > ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.lang.Integer java.lang.Integer ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; if ( java.lang.Object[] != null ) { for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { org.hibernate.Query . setParameter ( int , java.lang.Object[] [ int ] ) ; } } return org.hibernate.Query . executeUpdate ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.lang.Integer java.lang.Integer ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.HibernateException { org . org.hibernate . org.hibernate org.hibernate.Query = ( org . org.hibernate . org.hibernate ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.hibernate5.Session , java.lang.String ) ; void ( org.hibernate.Query ) ; if ( java.lang.Object[] != null ) { for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { org.hibernate.Query . setParameter ( int , java.lang.Object[] [ int ] ) ; } } return org.hibernate.Query . executeUpdate ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( Session org.springframework.orm.hibernate5.Session ) throws org.springframework.orm.hibernate5.InvalidDataAccessApiUsageException { if ( boolean ( ) && SessionFactoryUtils . getFlushMode ( org.springframework.orm.hibernate5.Session ) . lessThan ( FlushMode . COMMIT ) ) { throw new InvalidDataAccessApiUsageException ( STRING + STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) protected void void ( org . org.hibernate . org.hibernate org.hibernate.Query ) { if ( boolean ( ) ) { org.hibernate.Query . setCacheable ( true ) ; if ( java.lang.String ( ) != null ) { org.hibernate.Query . setCacheRegion ( java.lang.String ( ) ) ; } } if ( int ( ) > NUMBER ) { org.hibernate.Query . setFetchSize ( int ( ) ) ; } if ( int ( ) > NUMBER ) { org.hibernate.Query . setMaxResults ( int ( ) ) ; } SessionHolder org.springframework.orm.hibernate5.SessionHolder = ( SessionHolder ) TransactionSynchronizationManager . getResource ( org.springframework.orm.hibernate5.SessionFactory ( ) ) ; if ( org.springframework.orm.hibernate5.SessionHolder != null && org.springframework.orm.hibernate5.SessionHolder . hasTimeout ( ) ) { org.hibernate.Query . setTimeout ( org.springframework.orm.hibernate5.SessionHolder . getTimeToLiveInSeconds ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( Criteria org.springframework.orm.hibernate5.Criteria ) { if ( boolean ( ) ) { org.springframework.orm.hibernate5.Criteria . setCacheable ( true ) ; if ( java.lang.String ( ) != null ) { org.springframework.orm.hibernate5.Criteria . setCacheRegion ( java.lang.String ( ) ) ; } } if ( int ( ) > NUMBER ) { org.springframework.orm.hibernate5.Criteria . setFetchSize ( int ( ) ) ; } if ( int ( ) > NUMBER ) { org.springframework.orm.hibernate5.Criteria . setMaxResults ( int ( ) ) ; } SessionHolder org.springframework.orm.hibernate5.SessionHolder = ( SessionHolder ) TransactionSynchronizationManager . getResource ( org.springframework.orm.hibernate5.SessionFactory ( ) ) ; if ( org.springframework.orm.hibernate5.SessionHolder != null && org.springframework.orm.hibernate5.SessionHolder . hasTimeout ( ) ) { org.springframework.orm.hibernate5.Criteria . setTimeout ( org.springframework.orm.hibernate5.SessionHolder . getTimeToLiveInSeconds ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) protected void void ( org . org.hibernate . org.hibernate org.hibernate.Query , java.lang.String java.lang.String , java.lang.Object java.lang.Object )			throws org.springframework.orm.hibernate5.HibernateException { if ( java.lang.Object instanceof java.util.Collection ) { org.hibernate.Query . setParameterList ( java.lang.String , ( java.util.Collection<?> < ? > ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Object [] ) { org.hibernate.Query . setParameterList ( java.lang.String , ( java.lang.Object [] ) java.lang.Object ) ; } else { org.hibernate.Query . setParameter ( java.lang.String , java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> public void ( Session org.springframework.orm.hibernate5.Session ) { this . org.springframework.orm.hibernate5.Session = org.springframework.orm.hibernate5.Session ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] ) throws java.lang.Throwable { if ( java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) ) { return ( java.lang.Object == java.lang.Object[] [ NUMBER ] ) ; } else if ( java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) ) { return java.lang.System . int ( java.lang.Object ) ; } else if ( java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) ) { return null ; } try { java.lang.Object java.lang.Object = java.lang.reflect.Method . java.lang.Object ( this . org.springframework.orm.hibernate5.Session , java.lang.Object[] ) ; if ( java.lang.Object instanceof org . org.hibernate . org.hibernate ) { void ( ( ( org . org.hibernate . org.hibernate ) java.lang.Object ) ) ; } if ( java.lang.Object instanceof Criteria ) { void ( ( ( Criteria ) java.lang.Object ) ) ; } return java.lang.Object ; } catch ( java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException ) { throw java.lang.reflect.InvocationTargetException . java.lang.Throwable ( ) ; } }  <METHOD_END>
