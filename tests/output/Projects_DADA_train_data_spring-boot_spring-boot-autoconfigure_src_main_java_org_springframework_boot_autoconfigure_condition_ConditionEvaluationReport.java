<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , Condition org.springframework.boot.autoconfigure.condition.Condition , ConditionOutcome org.springframework.boot.autoconfigure.condition.ConditionOutcome ) { Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.boot.autoconfigure.condition.Condition , STRING ) ; Assert . notNull ( org.springframework.boot.autoconfigure.condition.ConditionOutcome , STRING ) ; this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; if ( ! this . java.util.SortedMap<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> . boolean ( java.lang.String ) ) { this . java.util.SortedMap<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> . org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes ( java.lang.String , new org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes ( ) ) ; } this . java.util.SortedMap<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> . org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes ( java.lang.String ) . void ( org.springframework.boot.autoconfigure.condition.Condition , org.springframework.boot.autoconfigure.condition.ConditionOutcome ) ; this . boolean = false ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { Assert . notNull ( java.util.Collection<java.lang.String> , STRING ) ; this . java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( java.util.Collection<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { Assert . notNull ( java.util.List<java.lang.String> , STRING ) ; this . java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> < java.lang.String , org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes > java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> ( ) { if ( ! this . boolean ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> < java.lang.String , org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes > java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> : this . java.util.SortedMap<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> . java.util.Set<java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes>> ( ) ) { if ( ! java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> . org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes ( ) . boolean ( ) ) { void ( java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> . java.lang.String ( ) ) ; } } this . boolean = true ; } return java.util.Collections . java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> ( this . java.util.SortedMap<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { java.lang.String java.lang.String = java.lang.String + STRING ; for ( java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> < java.lang.String , org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes > java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> : this . java.util.SortedMap<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> . java.util.Set<java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes>> ( ) ) { if ( java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> . java.lang.String ( ) . boolean ( java.lang.String ) ) { ConditionOutcome org.springframework.boot.autoconfigure.condition.ConditionOutcome = ConditionOutcome . noMatch ( ConditionMessage . forCondition ( STRING + java.lang.String ) . because ( STRING ) ) ; java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes> . org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcomes ( ) . void ( org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.AncestorsMatchedCondition , org.springframework.boot.autoconfigure.condition.ConditionOutcome ) ; } } }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.Collections . java.util.List<java.lang.String> ( this . java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return java.util.Collections . java.util.Set<java.lang.String> ( this . java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport ( ) { return this . org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport ( ConfigurableListableBeanFactory org.springframework.boot.autoconfigure.condition.ConfigurableListableBeanFactory ) { synchronized ( org.springframework.boot.autoconfigure.condition.ConfigurableListableBeanFactory ) { org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport ; if ( org.springframework.boot.autoconfigure.condition.ConfigurableListableBeanFactory . containsSingleton ( java.lang.String ) ) { org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport = org.springframework.boot.autoconfigure.condition.ConfigurableListableBeanFactory . getBean ( java.lang.String , org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport .class ) ; } else { org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport = new org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport ( ) ; org.springframework.boot.autoconfigure.condition.ConfigurableListableBeanFactory . registerSingleton ( java.lang.String , org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport ) ; } void ( org.springframework.boot.autoconfigure.condition.ConfigurableListableBeanFactory . getParentBeanFactory ( ) , org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport ) ; return org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport ; } }  <METHOD_END>
<METHOD_START> private static void void ( BeanFactory org.springframework.boot.autoconfigure.condition.BeanFactory , org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport ) { if ( org.springframework.boot.autoconfigure.condition.BeanFactory != null && org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport . org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport == null && org.springframework.boot.autoconfigure.condition.BeanFactory . containsBean ( java.lang.String ) ) { org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport . org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport = org.springframework.boot.autoconfigure.condition.BeanFactory . getBean ( java.lang.String , org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport .class ) ; } }  <METHOD_END>
<METHOD_START> public void void ( Condition org.springframework.boot.autoconfigure.condition.Condition , ConditionOutcome org.springframework.boot.autoconfigure.condition.ConditionOutcome ) { this . java.util.Set<org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome> . boolean ( new org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome ( org.springframework.boot.autoconfigure.condition.Condition , org.springframework.boot.autoconfigure.condition.ConditionOutcome ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { for ( org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome : this ) { if ( ! org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome . org.springframework.boot.autoconfigure.condition.ConditionOutcome ( ) . isMatch ( ) ) { return false ; } } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome> < org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome > java.util.Iterator<org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome> ( ) { return java.util.Collections . java.util.Set<org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome> ( this . java.util.Set<org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome> ) . java.util.Iterator<org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome> ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Condition org.springframework.boot.autoconfigure.condition.Condition , ConditionOutcome org.springframework.boot.autoconfigure.condition.ConditionOutcome ) { this . org.springframework.boot.autoconfigure.condition.Condition = org.springframework.boot.autoconfigure.condition.Condition ; this . org.springframework.boot.autoconfigure.condition.ConditionOutcome = org.springframework.boot.autoconfigure.condition.ConditionOutcome ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.Condition org.springframework.boot.autoconfigure.condition.Condition ( ) { return this . org.springframework.boot.autoconfigure.condition.Condition ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionOutcome org.springframework.boot.autoconfigure.condition.ConditionOutcome ( ) { return this . org.springframework.boot.autoconfigure.condition.ConditionOutcome ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null || java.lang.Class<? extends org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) { return false ; } org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome = ( org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome ) java.lang.Object ; return ( ObjectUtils . nullSafeEquals ( this . org.springframework.boot.autoconfigure.condition.Condition . getClass ( ) , org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome . org.springframework.boot.autoconfigure.condition.Condition . getClass ( ) ) && ObjectUtils . nullSafeEquals ( this . org.springframework.boot.autoconfigure.condition.ConditionOutcome , org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport.ConditionAndOutcome . org.springframework.boot.autoconfigure.condition.ConditionOutcome ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.boot.autoconfigure.condition.Condition . getClass ( ) . hashCode ( ) * NUMBER + this . org.springframework.boot.autoconfigure.condition.ConditionOutcome . hashCode ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.boot.autoconfigure.condition.Condition . getClass ( ) + STRING + this . org.springframework.boot.autoconfigure.condition.ConditionOutcome ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ConditionContext org.springframework.boot.autoconfigure.condition.ConditionContext , AnnotatedTypeMetadata org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
