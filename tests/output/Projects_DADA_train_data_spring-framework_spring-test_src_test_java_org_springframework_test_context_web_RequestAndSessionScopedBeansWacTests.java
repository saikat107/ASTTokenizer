<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; assertNull ( org.springframework.test.context.web.MockHttpServletRequest . getAttribute ( java.lang.String ) ) ; org.springframework.test.context.web.MockHttpServletRequest . setContextPath ( java.lang.String ) ; TestBean org.springframework.test.context.web.TestBean = org.springframework.test.context.web.WebApplicationContext . getBean ( java.lang.String , TestBean .class ) ; assertEquals ( java.lang.String , org.springframework.test.context.web.TestBean . getName ( ) ) ; assertSame ( org.springframework.test.context.web.TestBean , org.springframework.test.context.web.MockHttpServletRequest . getAttribute ( java.lang.String ) ) ; assertSame ( org.springframework.test.context.web.TestBean , org.springframework.test.context.web.WebApplicationContext . getBean ( java.lang.String , TestBean .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; assertNull ( org.springframework.test.context.web.MockHttpSession . getAttribute ( java.lang.String ) ) ; TestBean org.springframework.test.context.web.TestBean = org.springframework.test.context.web.WebApplicationContext . getBean ( java.lang.String , TestBean .class ) ; assertSame ( org.springframework.test.context.web.TestBean , org.springframework.test.context.web.MockHttpSession . getAttribute ( java.lang.String ) ) ; assertSame ( org.springframework.test.context.web.TestBean , org.springframework.test.context.web.WebApplicationContext . getBean ( java.lang.String , TestBean .class ) ) ; }  <METHOD_END>
