<METHOD_START> @ Test public void void ( ) { assertEquals ( EvictionAction . LOCAL_DESTROY , EvictionActionType . getEvictionAction ( EvictionActionType . LOCAL_DESTROY ) ) ; assertEquals ( EvictionAction . OVERFLOW_TO_DISK , EvictionActionType . getEvictionAction ( EvictionActionType . OVERFLOW_TO_DISK ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNull ( EvictionActionType . getEvictionAction ( null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertEquals ( EvictionAction . LOCAL_DESTROY , EvictionActionType . LOCAL_DESTROY . getEvictionAction ( ) ) ; assertEquals ( EvictionAction . NONE , EvictionActionType . NONE . getEvictionAction ( ) ) ; assertEquals ( EvictionAction . OVERFLOW_TO_DISK , EvictionActionType . OVERFLOW_TO_DISK . getEvictionAction ( ) ) ; assertEquals ( EvictionAction . DEFAULT_EVICTION_ACTION , EvictionActionType . DEFAULT . getEvictionAction ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertEquals ( EvictionAction . DEFAULT_EVICTION_ACTION , EvictionActionType . DEFAULT . getEvictionAction ( ) ) ; assertSame ( EvictionActionType . LOCAL_DESTROY , EvictionActionType . DEFAULT ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertEquals ( EvictionActionType . LOCAL_DESTROY , EvictionActionType . valueOf ( EvictionAction . LOCAL_DESTROY ) ) ; assertEquals ( EvictionActionType . NONE , EvictionActionType . valueOf ( EvictionAction . NONE ) ) ; assertEquals ( EvictionActionType . OVERFLOW_TO_DISK , EvictionActionType . valueOf ( EvictionAction . OVERFLOW_TO_DISK ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNull ( EvictionActionType . valueOf ( ( EvictionAction ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertEquals ( EvictionActionType . LOCAL_DESTROY , EvictionActionType . valueOfIgnoreCase ( STRING ) ) ; assertEquals ( EvictionActionType . NONE , EvictionActionType . valueOfIgnoreCase ( STRING ) ) ; assertEquals ( EvictionActionType . NONE , EvictionActionType . valueOfIgnoreCase ( STRING ) ) ; assertEquals ( EvictionActionType . OVERFLOW_TO_DISK , EvictionActionType . valueOfIgnoreCase ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNull ( EvictionActionType . valueOfIgnoreCase ( STRING ) ) ; assertNull ( EvictionActionType . valueOfIgnoreCase ( STRING ) ) ; assertNull ( EvictionActionType . valueOfIgnoreCase ( STRING ) ) ; assertNull ( EvictionActionType . valueOfIgnoreCase ( STRING ) ) ; assertNull ( EvictionActionType . valueOfIgnoreCase ( STRING ) ) ; assertNull ( EvictionActionType . valueOfIgnoreCase ( STRING ) ) ; assertNull ( EvictionActionType . valueOfIgnoreCase ( null ) ) ; }  <METHOD_END>
