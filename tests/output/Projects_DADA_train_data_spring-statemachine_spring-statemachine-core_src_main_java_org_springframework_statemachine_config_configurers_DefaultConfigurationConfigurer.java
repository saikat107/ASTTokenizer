<METHOD_START> @ java.lang.Override public void void ( StateMachineConfigurationBuilder < S , E > org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> ) throws java.lang.Exception { org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> . setMachineId ( java.lang.String ) ; org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> . setBeanFactory ( org.springframework.statemachine.config.configurers.BeanFactory ) ; org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> . setTaskExecutor ( org.springframework.statemachine.config.configurers.TaskExecutor ) ; org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> . setTaskScheculer ( org.springframework.statemachine.config.configurers.TaskScheduler ) ; org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> . setAutoStart ( boolean ) ; org.springframework.statemachine.config.configurers.StateMachineConfigurationBuilder<S,E> . setStateMachineListeners ( java.util.List<org.springframework.statemachine.config.configurers.StateMachineListener<S,E>> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> ( BeanFactory org.springframework.statemachine.config.configurers.BeanFactory ) { this . org.springframework.statemachine.config.configurers.BeanFactory = org.springframework.statemachine.config.configurers.BeanFactory ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> ( TaskExecutor org.springframework.statemachine.config.configurers.TaskExecutor ) { this . org.springframework.statemachine.config.configurers.TaskExecutor = org.springframework.statemachine.config.configurers.TaskExecutor ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> ( TaskScheduler org.springframework.statemachine.config.configurers.TaskScheduler ) { this . org.springframework.statemachine.config.configurers.TaskScheduler = org.springframework.statemachine.config.configurers.TaskScheduler ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> < S , E > org.springframework.statemachine.config.configurers.ConfigurationConfigurer<S,E> ( StateMachineListener < S , E > org.springframework.statemachine.config.configurers.StateMachineListener<S,E> ) { this . java.util.List<org.springframework.statemachine.config.configurers.StateMachineListener<S,E>> . add ( org.springframework.statemachine.config.configurers.StateMachineListener<S,E> ) ; return this ; }  <METHOD_END>
