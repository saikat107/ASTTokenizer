<METHOD_START> private void ( ) { this( null ); }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> private void ( org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage , java.lang.String java.lang.String ) { this . java.lang.String = ( org.springframework.boot.autoconfigure.condition.ConditionMessage . boolean ( ) ? java.lang.String : org.springframework.boot.autoconfigure.condition.ConditionMessage + STRING + java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! StringUtils . hasLength ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( this . java.lang.String == null ? STRING : this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ObjectUtils . nullSafeHashCode ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( java.lang.Object == null || ! org.springframework.boot.autoconfigure.condition.ConditionMessage .class . boolean ( java.lang.Object ) ) { return false ; } if ( java.lang.Object == this ) { return true ; } return ObjectUtils . nullSafeEquals ( ( ( org.springframework.boot.autoconfigure.condition.ConditionMessage ) java.lang.Object ) . java.lang.String , this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.String java.lang.String ) { if ( ! StringUtils . hasLength ( java.lang.String ) ) { return this ; } if ( ! StringUtils . hasLength ( this . java.lang.String ) ) { return new org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.String ) ; } return new org.springframework.boot.autoconfigure.condition.ConditionMessage ( this . java.lang.String + STRING + java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , java.lang.Object ... java.lang.Object[] ) { Assert . notNull ( java.lang.Class<> , STRING ) ; return org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder ( STRING + ClassUtils . getShortName ( java.lang.Class<> ) , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { Assert . notNull ( java.lang.String , STRING ) ; java.lang.String java.lang.String = StringUtils . arrayToDelimitedString ( java.lang.Object[] , STRING ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { return new org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder ( java.lang.String + STRING + java.lang.String ) ; } return new org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( ) { return new org.springframework.boot.autoconfigure.condition.ConditionMessage ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { if ( ObjectUtils . isEmpty ( java.lang.Object[] ) ) { return new org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.String ) ; } return new org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.String . java.lang.String ( java.lang.String , java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.util.Collection<? extends org.springframework.boot.autoconfigure.condition.ConditionMessage> < ? extends org.springframework.boot.autoconfigure.condition.ConditionMessage > java.util.Collection<? extends org.springframework.boot.autoconfigure.condition.ConditionMessage> ) { org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage = new org.springframework.boot.autoconfigure.condition.ConditionMessage ( ) ; if ( java.util.Collection<> != null ) { for ( org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage : java.util.Collection<> ) { org.springframework.boot.autoconfigure.condition.ConditionMessage = new org.springframework.boot.autoconfigure.condition.ConditionMessage ( org.springframework.boot.autoconfigure.condition.ConditionMessage , org.springframework.boot.autoconfigure.condition.ConditionMessage . java.lang.String ( ) ) ; } } return org.springframework.boot.autoconfigure.condition.ConditionMessage ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , java.lang.Object ... java.lang.Object[] ) { return new org.springframework.boot.autoconfigure.condition.ConditionMessage ( ) . org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder ( java.lang.Class<> , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new org.springframework.boot.autoconfigure.condition.ConditionMessage ( ) . org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder ( java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.Object java.lang.Object ) { return org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder ( STRING ) . org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder ( java.lang.String java.lang.String ) { return org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return new org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder ( this , STRING , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder ( java.lang.String java.lang.String ) { return org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return new org.springframework.boot.autoconfigure.condition.ConditionMessage.ItemsBuilder ( this , STRING , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.Object java.lang.Object ) { return org.springframework.boot.autoconfigure.condition.ConditionMessage ( STRING + java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.String java.lang.String ) { return org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.String java.lang.String ) { return org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.String java.lang.String ) { if ( StringUtils . isEmpty ( java.lang.String ) ) { return new org.springframework.boot.autoconfigure.condition.ConditionMessage ( org.springframework.boot.autoconfigure.condition.ConditionMessage .this , this . java.lang.String ) ; } return new org.springframework.boot.autoconfigure.condition.ConditionMessage ( org.springframework.boot.autoconfigure.condition.ConditionMessage .this , this . java.lang.String + ( StringUtils . isEmpty ( this . java.lang.String ) ? STRING : STRING ) + java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void ( org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder = org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( ) { return org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.Object ... java.lang.Object[] ) { return org.springframework.boot.autoconfigure.condition.ConditionMessage ( org.springframework.boot.autoconfigure.condition.ConditionMessage.Style . org.springframework.boot.autoconfigure.condition.ConditionMessage.Style , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( org.springframework.boot.autoconfigure.condition.ConditionMessage.Style org.springframework.boot.autoconfigure.condition.ConditionMessage.Style , java.lang.Object ... java.lang.Object[] ) { return org.springframework.boot.autoconfigure.condition.ConditionMessage ( org.springframework.boot.autoconfigure.condition.ConditionMessage.Style , java.lang.Object[] == null ? ( java.util.Collection<?> < ? > ) null : java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.util.Collection<?> < ? > java.util.Collection<?> ) { return org.springframework.boot.autoconfigure.condition.ConditionMessage ( org.springframework.boot.autoconfigure.condition.ConditionMessage.Style . org.springframework.boot.autoconfigure.condition.ConditionMessage.Style , java.util.Collection<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.condition.ConditionMessage org.springframework.boot.autoconfigure.condition.ConditionMessage ( org.springframework.boot.autoconfigure.condition.ConditionMessage.Style org.springframework.boot.autoconfigure.condition.ConditionMessage.Style , java.util.Collection<?> < ? > java.util.Collection<?> ) { Assert . notNull ( org.springframework.boot.autoconfigure.condition.ConditionMessage.Style , STRING ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( this . java.lang.String ) ; java.util.Collection<?> = org.springframework.boot.autoconfigure.condition.ConditionMessage.Style . java.util.Collection<?> ( java.util.Collection<> ) ; if ( ( this . org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder == null || java.util.Collection<> . int ( ) <= NUMBER ) && StringUtils . hasLength ( this . java.lang.String ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING + this . java.lang.String ) ; } else if ( StringUtils . hasLength ( this . java.lang.String ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING + this . java.lang.String ) ; } if ( java.util.Collection<> != null && ! java.util.Collection<> . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING + StringUtils . collectionToDelimitedString ( java.util.Collection<> , STRING ) ) ; } return this . org.springframework.boot.autoconfigure.condition.ConditionMessage.Builder . org.springframework.boot.autoconfigure.condition.ConditionMessage ( java.lang.StringBuilder . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( java.lang.Object java.lang.Object ) { return ( java.lang.Object == null ? null : STRING + java.lang.Object + STRING ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<?> < ? > java.util.Collection<?> ( java.util.Collection<?> < ? > java.util.Collection<?> ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> <> ( ) ; for ( java.lang.Object java.lang.Object : java.util.Collection<> ) { java.util.List<java.lang.Object> . boolean ( java.lang.Object ( java.lang.Object ) ) ; } return java.util.List<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object );  <METHOD_END>
