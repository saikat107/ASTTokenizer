<METHOD_START> @ Bean protected sample.batch.Tasklet sample.batch.Tasklet ( ) { return new Tasklet ( ) { @ java.lang.Override public sample.batch.RepeatStatus sample.batch.RepeatStatus ( StepContribution sample.batch.StepContribution , ChunkContext sample.batch.ChunkContext ) { return RepeatStatus . FINISHED ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public sample.batch.RepeatStatus sample.batch.RepeatStatus ( StepContribution sample.batch.StepContribution , ChunkContext sample.batch.ChunkContext ) { return RepeatStatus . FINISHED ; }  <METHOD_END>
<METHOD_START> @ Bean public sample.batch.Job sample.batch.Job ( ) java.lang.Exception { return this . sample.batch.JobBuilderFactory . get ( STRING ) . start ( sample.batch.Step ( ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean protected sample.batch.Step sample.batch.Step ( ) java.lang.Exception { return this . sample.batch.StepBuilderFactory . get ( STRING ) . tasklet ( sample.batch.Tasklet ( ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String [] java.lang.String[] ) throws java.lang.Exception { java.lang.System . void ( SpringApplication . exit ( SpringApplication . run ( sample.batch.SampleBatchApplication .class , java.lang.String[] ) ) ) ; }  <METHOD_END>
