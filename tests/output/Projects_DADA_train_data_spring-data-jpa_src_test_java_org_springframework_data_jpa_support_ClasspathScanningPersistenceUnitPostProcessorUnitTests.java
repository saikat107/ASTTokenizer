<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new ClasspathScanningPersistenceUnitPostProcessor ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new ClasspathScanningPersistenceUnitPostProcessor ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { ClasspathScanningPersistenceUnitPostProcessor org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor = new ClasspathScanningPersistenceUnitPostProcessor ( java.lang.String ) ; org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor . setMappingFileNamePattern ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { ClasspathScanningPersistenceUnitPostProcessor org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor = new ClasspathScanningPersistenceUnitPostProcessor ( java.lang.String ) ; org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor . setMappingFileNamePattern ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { PersistenceUnitPostProcessor org.springframework.data.jpa.support.PersistenceUnitPostProcessor = new ClasspathScanningPersistenceUnitPostProcessor ( java.lang.String ) ; org.springframework.data.jpa.support.PersistenceUnitPostProcessor . postProcessPersistenceUnitInfo ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) ; verify ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) . addManagedClassName ( org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessorUnitTests.SampleEntity .class . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClasspathScanningPersistenceUnitPostProcessor org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor = new ClasspathScanningPersistenceUnitPostProcessor ( java.lang.String ) ; org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor . setMappingFileNamePattern ( STRING ) ; org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor . setResourceLoader ( new DefaultResourceLoader ( ) ) ; org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor . postProcessPersistenceUnitInfo ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) ; java.lang.String java.lang.String = java.lang.Class<? extends org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessorUnitTests> ( ) . java.lang.Package ( ) . java.lang.String ( ) . java.lang.String ( '.' , '/' ) + STRING ; verify ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) . addManagedClassName ( org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessorUnitTests.SampleEntity .class . java.lang.String ( ) ) ; verify ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) . addMappingFileName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClasspathScanningPersistenceUnitPostProcessor org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor = new ClasspathScanningPersistenceUnitPostProcessor ( java.lang.String ) ; org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor . setResourceLoader ( new DefaultResourceLoader ( ) ) ; org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor . setMappingFileNamePattern ( STRING ) ; org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor . postProcessPersistenceUnitInfo ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) ; verify ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) . addMappingFileName ( STRING ) ; verify ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) . addMappingFileName ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING + java.lang.String ; ResourceLoader org.springframework.data.jpa.support.ResourceLoader = new PathMatchingResourcePatternResolver ( new DefaultResourceLoader ( ) ) { public org.springframework.data.jpa.support.Resource [] org.springframework.data.jpa.support.Resource[] ( java.lang.String java.lang.String ) throws java.io.IOException { Resource [] org.springframework.data.jpa.support.Resource[] = super. getResources ( java.lang.String ) ; org.springframework.data.jpa.support.Resource[] = java.util.Arrays . java.lang.Object[] ( org.springframework.data.jpa.support.Resource[] , resources . length + NUMBER ) ; org.springframework.data.jpa.support.Resource[] [ resources . length - NUMBER ] = new UrlResource ( java.lang.String ) ; return org.springframework.data.jpa.support.Resource[] ; } @ java.lang.Override protected java.util.Set<org.springframework.data.jpa.support.Resource> < Resource > java.util.Set<org.springframework.data.jpa.support.Resource> ( Resource org.springframework.data.jpa.support.Resource , java.net.URL java.net.URL , java.lang.String java.lang.String )					throws java.io.IOException { if ( java.lang.String . boolean ( java.net.URL . java.lang.String ( ) ) ) { return java.util.Collections . java.util.Set ( org.springframework.data.jpa.support.Resource ) ; } return super. doFindPathMatchingJarResources ( org.springframework.data.jpa.support.Resource , java.net.URL , java.lang.String ) ; } } ; ClasspathScanningPersistenceUnitPostProcessor org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor = new ClasspathScanningPersistenceUnitPostProcessor ( java.lang.String ) ; ReflectionTestUtils . setField ( org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor , STRING , org.springframework.data.jpa.support.ResourceLoader ) ; org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor . setMappingFileNamePattern ( STRING ) ; org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor . postProcessPersistenceUnitInfo ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) ; verify ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) . addMappingFileName ( STRING ) ; verify ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) . addMappingFileName ( STRING ) ; verify ( org.springframework.data.jpa.support.MutablePersistenceUnitInfo ) . addMappingFileName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.jpa.support.Resource [] org.springframework.data.jpa.support.Resource[] ( java.lang.String java.lang.String ) throws java.io.IOException { Resource [] org.springframework.data.jpa.support.Resource[] = super. getResources ( java.lang.String ) ; org.springframework.data.jpa.support.Resource[] = java.util.Arrays . java.lang.Object[] ( org.springframework.data.jpa.support.Resource[] , resources . length + NUMBER ) ; org.springframework.data.jpa.support.Resource[] [ resources . length - NUMBER ] = new UrlResource ( java.lang.String ) ; return org.springframework.data.jpa.support.Resource[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Set<org.springframework.data.jpa.support.Resource> < Resource > java.util.Set<org.springframework.data.jpa.support.Resource> ( Resource org.springframework.data.jpa.support.Resource , java.net.URL java.net.URL , java.lang.String java.lang.String )					throws java.io.IOException { if ( java.lang.String . boolean ( java.net.URL . java.lang.String ( ) ) ) { return java.util.Collections . java.util.Set ( org.springframework.data.jpa.support.Resource ) ; } return super. doFindPathMatchingJarResources ( org.springframework.data.jpa.support.Resource , java.net.URL , java.lang.String ) ; }  <METHOD_END>
