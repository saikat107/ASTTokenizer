<METHOD_START> @ java.lang.Override public org.springframework.boot.test.context.ContextCustomizer org.springframework.boot.test.context.ContextCustomizer ( java.lang.Class<?> < ? > java.lang.Class<?> , java.util.List<org.springframework.boot.test.context.ContextConfigurationAttributes> < ContextConfigurationAttributes > java.util.List<org.springframework.boot.test.context.ContextConfigurationAttributes> ) { if ( AnnotatedElementUtils . findMergedAnnotation ( java.lang.Class<> , Import .class ) != null ) { void ( java.lang.Class<> ) ; return new ImportsContextCustomizer ( java.lang.Class<> ) ; } return null ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { ReflectionUtils . doWithMethods ( java.lang.Class<> , new MethodCallback ( ) { @ java.lang.Override public void void ( java.lang.reflect.Method java.lang.reflect.Method ) { Assert . state ( ! AnnotatedElementUtils . isAnnotated ( java.lang.reflect.Method , Bean .class ) , STRING ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.reflect.Method java.lang.reflect.Method ) { Assert . state ( ! AnnotatedElementUtils . isAnnotated ( java.lang.reflect.Method , Bean .class ) , STRING ) ; }  <METHOD_END>
