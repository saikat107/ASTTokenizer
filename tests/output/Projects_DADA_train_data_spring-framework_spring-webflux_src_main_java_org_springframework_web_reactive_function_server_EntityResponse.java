<METHOD_START> T T ( )  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.BodyInserter<T,? super org.springframework.web.reactive.function.server.ServerHttpResponse> < T , ? super ServerHttpResponse > org.springframework.web.reactive.function.server.BodyInserter<T,? super org.springframework.web.reactive.function.server.ServerHttpResponse> ( )  <METHOD_END>
<METHOD_START> static < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( T T ) { return new DefaultEntityResponseBuilder <> ( T , BodyInserters . fromObject ( T ) ) ; }  <METHOD_END>
<METHOD_START> static < T , P extends org.springframework.web.reactive.function.server.Publisher<T> < T > > org.springframework.web.reactive.function.server.EntityResponse.Builder<P> < P > org.springframework.web.reactive.function.server.EntityResponse.Builder<P> ( P P , java.lang.Class<T> < T > java.lang.Class<T> ) { return new DefaultEntityResponseBuilder <> ( P , BodyInserters . fromPublisher ( P , java.lang.Class<T> ) ) ; }  <METHOD_END>
<METHOD_START> static < T , P extends org.springframework.web.reactive.function.server.Publisher<T> < T > > org.springframework.web.reactive.function.server.EntityResponse.Builder<P> < P > org.springframework.web.reactive.function.server.EntityResponse.Builder<P> ( P P , ResolvableType org.springframework.web.reactive.function.server.ResolvableType ) { return new DefaultEntityResponseBuilder <> ( P , BodyInserters . fromPublisher ( P , org.springframework.web.reactive.function.server.ResolvableType ) ) ; }  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( java.lang.String java.lang.String , java.lang.String ... java.lang.String[] );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( HttpHeaders org.springframework.web.reactive.function.server.HttpHeaders );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( HttpStatus org.springframework.web.reactive.function.server.HttpStatus );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( HttpMethod ... org.springframework.web.reactive.function.server.HttpMethod[] );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( java.util.Set<org.springframework.web.reactive.function.server.HttpMethod> < HttpMethod > java.util.Set<org.springframework.web.reactive.function.server.HttpMethod> );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( java.time.ZonedDateTime java.time.ZonedDateTime );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( java.net.URI java.net.URI );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( CacheControl org.springframework.web.reactive.function.server.CacheControl );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( java.lang.String ... java.lang.String[] );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( long long );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( MediaType org.springframework.web.reactive.function.server.MediaType );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.EntityResponse.Builder<T> < T > org.springframework.web.reactive.function.server.EntityResponse.Builder<T> ( java.lang.String java.lang.String , java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> org.springframework.web.reactive.function.server.Mono<org.springframework.web.reactive.function.server.EntityResponse<T>> < org.springframework.web.reactive.function.server.EntityResponse<T> < T > > org.springframework.web.reactive.function.server.Mono<org.springframework.web.reactive.function.server.EntityResponse<T>> ( )  <METHOD_END>
