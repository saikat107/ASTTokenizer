<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( java.sql.ResultSet java.sql.ResultSet , int int ) throws java.sql.SQLException { java.sql.ResultSetMetaData java.sql.ResultSetMetaData = java.sql.ResultSet . java.sql.ResultSetMetaData ( ) ; int int = java.sql.ResultSetMetaData . int ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = java.util.Map<java.lang.String,java.lang.Object> ( int ) ; for ( int int = NUMBER ; int <= int ; int ++ ) { java.lang.String java.lang.String = java.lang.String ( JdbcUtils . lookupColumnName ( java.sql.ResultSetMetaData , int ) ) ; java.lang.Object java.lang.Object = java.lang.Object ( java.sql.ResultSet , int ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; } return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> protected java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( int int ) { return new LinkedCaseInsensitiveMap <> ( int ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.sql.ResultSet java.sql.ResultSet , int int ) throws java.sql.SQLException { return JdbcUtils . getResultSetValue ( java.sql.ResultSet , int ) ; }  <METHOD_END>
