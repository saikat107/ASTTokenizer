<METHOD_START> @ java.lang.Override public java.util.Collection<org.springframework.boot.actuate.endpoint.Metric<?>> < Metric < ? > > java.util.Collection<org.springframework.boot.actuate.endpoint.Metric<?>> ( ) { if ( this . org.springframework.boot.actuate.endpoint.ApplicationContext instanceof ServletWebServerApplicationContext ) { Manager org.springframework.boot.actuate.endpoint.Manager = org.springframework.boot.actuate.endpoint.Manager ( ( ServletWebServerApplicationContext ) this . org.springframework.boot.actuate.endpoint.ApplicationContext ) ; if ( org.springframework.boot.actuate.endpoint.Manager != null ) { return java.util.Collection<org.springframework.boot.actuate.endpoint.Metric<?>> ( org.springframework.boot.actuate.endpoint.Manager ) ; } } return java.util.Collections . java.util.Set<org.springframework.boot.actuate.endpoint.Metric<?>> ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.endpoint.Manager org.springframework.boot.actuate.endpoint.Manager ( ServletWebServerApplicationContext org.springframework.boot.actuate.endpoint.ServletWebServerApplicationContext ) { WebServer org.springframework.boot.actuate.endpoint.WebServer = org.springframework.boot.actuate.endpoint.ServletWebServerApplicationContext . getWebServer ( ) ; if ( org.springframework.boot.actuate.endpoint.WebServer instanceof TomcatWebServer ) { return org.springframework.boot.actuate.endpoint.Manager ( ( TomcatWebServer ) org.springframework.boot.actuate.endpoint.WebServer ) ; } return null ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.endpoint.Manager org.springframework.boot.actuate.endpoint.Manager ( TomcatWebServer org.springframework.boot.actuate.endpoint.TomcatWebServer ) { for ( Container org.springframework.boot.actuate.endpoint.Container : org.springframework.boot.actuate.endpoint.TomcatWebServer . getTomcat ( ) . getHost ( ) . findChildren ( ) ) { if ( org.springframework.boot.actuate.endpoint.Container instanceof Context ) { return ( ( Context ) org.springframework.boot.actuate.endpoint.Container ) . getManager ( ) ; } } return null ; }  <METHOD_END>
<METHOD_START> private java.util.Collection<org.springframework.boot.actuate.endpoint.Metric<?>> < Metric < ? > > java.util.Collection<org.springframework.boot.actuate.endpoint.Metric<?>> ( Manager org.springframework.boot.actuate.endpoint.Manager ) { java.util.List<org.springframework.boot.actuate.endpoint.Metric<?>> < Metric < ? > > java.util.List<org.springframework.boot.actuate.endpoint.Metric<?>> = new java.util.ArrayList<org.springframework.boot.actuate.endpoint.Metric<?>> <> ( NUMBER ) ; if ( org.springframework.boot.actuate.endpoint.Manager instanceof ManagerBase ) { void ( java.util.List<org.springframework.boot.actuate.endpoint.Metric<?>> , STRING , ( ( ManagerBase ) org.springframework.boot.actuate.endpoint.Manager ) . getMaxActiveSessions ( ) ) ; } void ( java.util.List<org.springframework.boot.actuate.endpoint.Metric<?>> , STRING , org.springframework.boot.actuate.endpoint.Manager . getActiveSessions ( ) ) ; return java.util.List<org.springframework.boot.actuate.endpoint.Metric<?>> ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.List<org.springframework.boot.actuate.endpoint.Metric<?>> < Metric < ? > > java.util.List<org.springframework.boot.actuate.endpoint.Metric<?>> , java.lang.String java.lang.String , java.lang.Integer java.lang.Integer ) { java.util.List<org.springframework.boot.actuate.endpoint.Metric<?>> . add ( new Metric <> ( java.lang.String , java.lang.Integer ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.boot.actuate.endpoint.ApplicationContext )			throws org.springframework.boot.actuate.endpoint.BeansException { this . org.springframework.boot.actuate.endpoint.ApplicationContext = org.springframework.boot.actuate.endpoint.ApplicationContext ; }  <METHOD_END>
