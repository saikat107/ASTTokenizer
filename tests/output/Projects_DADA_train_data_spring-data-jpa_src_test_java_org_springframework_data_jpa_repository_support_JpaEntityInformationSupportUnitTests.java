<METHOD_START> @ Test public void void ( ) java.lang.Exception { JpaEntityInformation < org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.User , java.lang.Long > org.springframework.data.jpa.repository.support.JpaEntityInformation<org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.User,java.lang.Long> = new org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.DummyJpaEntityInformation<org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.User,java.lang.Long> < org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.User , java.lang.Long > ( org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.User .class ) ; assertEquals ( STRING , org.springframework.data.jpa.repository.support.JpaEntityInformation<org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.User,java.lang.Long> . getEntityName ( ) ) ; JpaEntityInformation < org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.NamedUser , ? > org.springframework.data.jpa.repository.support.JpaEntityInformation<org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.NamedUser,?> = new org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.DummyJpaEntityInformation<org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.NamedUser,java.io.Serializable> < org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.NamedUser , java.io.Serializable > ( org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.NamedUser .class ) ; assertEquals ( STRING , org.springframework.data.jpa.repository.support.JpaEntityInformation<org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.NamedUser,> . getEntityName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { when ( org.springframework.data.jpa.repository.support.EntityManager . getMetamodel ( ) ) . thenReturn ( org.springframework.data.jpa.repository.support.Metamodel ) ; JpaEntityInformationSupport . getEntityInformation ( org.springframework.data.jpa.repository.support.JpaEntityInformationSupportUnitTests.User .class , org.springframework.data.jpa.repository.support.EntityManager ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<T> < T > java.lang.Class<T> ) { super( java.lang.Class<T> ); }  <METHOD_END>
<METHOD_START> public org.springframework.data.jpa.repository.support.SingularAttribute<? super T,?> < ? super T , ? > org.springframework.data.jpa.repository.support.SingularAttribute<? super T,?> ( ) { return null ; }  <METHOD_END>
<METHOD_START> public java.util.Optional<ID> < ID > java.util.Optional<ID> ( T T ) { return java.util.Optional . java.util.Optional<ID> ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Class<ID> < ID > java.lang.Class<ID> ( ) { return null ; }  <METHOD_END>
<METHOD_START> public java.lang.Iterable<java.lang.String> < java.lang.String > java.lang.Iterable<java.lang.String> ( ) { return java.util.Collections . java.util.Set<java.lang.String> ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.io.Serializable java.io.Serializable , java.lang.String java.lang.String ) { return null ; }  <METHOD_END>
