<METHOD_START> @ java.lang.Override public void void ( ConfigurableListableBeanFactory org.springframework.integration.config.ConfigurableListableBeanFactory ) throws org.springframework.integration.config.BeansException { BeanDefinitionRegistry org.springframework.integration.config.BeanDefinitionRegistry = ( BeanDefinitionRegistry ) org.springframework.integration.config.ConfigurableListableBeanFactory ; for ( java.lang.String java.lang.String : org.springframework.integration.config.BeanDefinitionRegistry . getBeanDefinitionNames ( ) ) { BeanDefinition org.springframework.integration.config.BeanDefinition = org.springframework.integration.config.BeanDefinitionRegistry . getBeanDefinition ( java.lang.String ) ; if ( org.springframework.integration.config.BeanDefinition instanceof AnnotatedBeanDefinition ) { AnnotationMetadata org.springframework.integration.config.AnnotationMetadata = ( ( AnnotatedBeanDefinition ) org.springframework.integration.config.BeanDefinition ) . getMetadata ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.config.AnnotationMetadata . getAnnotationAttributes ( GlobalChannelInterceptor .class . java.lang.String ( ) ) ; if ( CollectionUtils . isEmpty ( java.util.Map<java.lang.String,java.lang.Object> ) && org.springframework.integration.config.BeanDefinition . getSource ( ) instanceof MethodMetadata ) { MethodMetadata org.springframework.integration.config.MethodMetadata = ( MethodMetadata ) org.springframework.integration.config.BeanDefinition . getSource ( ) ; java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.config.MethodMetadata . getAnnotationAttributes ( GlobalChannelInterceptor .class . java.lang.String ( ) ) ; } if ( ! CollectionUtils . isEmpty ( java.util.Map<java.lang.String,java.lang.Object> ) ) { BeanDefinitionBuilder org.springframework.integration.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( GlobalChannelInterceptorWrapper .class ) . addConstructorArgReference ( java.lang.String ) . addPropertyValue ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . addPropertyValue ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.integration.config.BeanDefinitionBuilder . getBeanDefinition ( ) , org.springframework.integration.config.BeanDefinitionRegistry ) ; } } } }  <METHOD_END>
