<METHOD_START> @ Before public final void void ( ) java.lang.Exception { this . javax.management.MBeanServer = javax.management.MBeanServerFactory . javax.management.MBeanServer ( ) ; try { void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { void ( ) ; throw java.lang.Exception ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.jmx.ConfigurableApplicationContext org.springframework.jmx.ConfigurableApplicationContext ( java.lang.String java.lang.String ) { GenericApplicationContext org.springframework.jmx.GenericApplicationContext = new GenericApplicationContext ( ) ; new XmlBeanDefinitionReader ( org.springframework.jmx.GenericApplicationContext ) . loadBeanDefinitions ( java.lang.String ) ; org.springframework.jmx.GenericApplicationContext . getDefaultListableBeanFactory ( ) . registerSingleton ( STRING , this . javax.management.MBeanServer ) ; org.springframework.jmx.GenericApplicationContext . refresh ( ) ; return org.springframework.jmx.GenericApplicationContext ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) java.lang.Exception { void ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) java.lang.Exception { javax.management.MBeanServerFactory . void ( javax.management.MBeanServer ( ) ) ; MBeanTestUtils . resetMBeanServers ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) java.lang.Exception {	}  <METHOD_END>
<METHOD_START> protected void void ( ) java.lang.Exception {	}  <METHOD_END>
<METHOD_START> public javax.management.MBeanServer javax.management.MBeanServer ( ) { return this . javax.management.MBeanServer ; }  <METHOD_END>
<METHOD_START> protected void void ( MBeanExporter org.springframework.jmx.MBeanExporter ) { org.springframework.jmx.MBeanExporter . afterPropertiesSet ( ) ; org.springframework.jmx.MBeanExporter . afterSingletonsInstantiated ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , javax.management.ObjectName javax.management.ObjectName ) { assertTrue ( java.lang.String , javax.management.MBeanServer ( ) . boolean ( javax.management.ObjectName ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , javax.management.ObjectName javax.management.ObjectName ) { assertFalse ( java.lang.String , javax.management.MBeanServer ( ) . boolean ( javax.management.ObjectName ) ) ; }  <METHOD_END>
