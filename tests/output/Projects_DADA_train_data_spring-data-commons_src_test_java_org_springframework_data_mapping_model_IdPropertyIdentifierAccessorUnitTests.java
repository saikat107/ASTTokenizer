<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new IdPropertyIdentifierAccessor ( org.springframework.data.mapping.model.SampleMappingContext . getRequiredPersistentEntity ( org.springframework.data.mapping.model.IdPropertyIdentifierAccessorUnitTests.Sample .class ) , new org.springframework.data.mapping.model.IdPropertyIdentifierAccessorUnitTests.Sample ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new IdPropertyIdentifierAccessor ( org.springframework.data.mapping.model.SampleMappingContext . getRequiredPersistentEntity ( org.springframework.data.mapping.model.IdPropertyIdentifierAccessorUnitTests.SampleWithId .class ) , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mapping.model.IdPropertyIdentifierAccessorUnitTests.SampleWithId org.springframework.data.mapping.model.IdPropertyIdentifierAccessorUnitTests.SampleWithId = new org.springframework.data.mapping.model.IdPropertyIdentifierAccessorUnitTests.SampleWithId ( ) ; org.springframework.data.mapping.model.IdPropertyIdentifierAccessorUnitTests.SampleWithId . java.lang.Long = NUMBER ; IdentifierAccessor org.springframework.data.mapping.model.IdentifierAccessor = new IdPropertyIdentifierAccessor ( org.springframework.data.mapping.model.SampleMappingContext . getRequiredPersistentEntity ( org.springframework.data.mapping.model.IdPropertyIdentifierAccessorUnitTests.SampleWithId .class ) , org.springframework.data.mapping.model.IdPropertyIdentifierAccessorUnitTests.SampleWithId ) ; assertThat ( org.springframework.data.mapping.model.IdentifierAccessor . getIdentifier ( ) ) . hasValue ( org.springframework.data.mapping.model.IdPropertyIdentifierAccessorUnitTests.SampleWithId . java.lang.Long ) ; }  <METHOD_END>
