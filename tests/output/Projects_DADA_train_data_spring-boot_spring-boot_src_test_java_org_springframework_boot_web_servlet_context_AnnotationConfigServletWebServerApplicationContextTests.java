<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext = new AnnotationConfigServletWebServerApplicationContext ( ExampleServletWebServerApplicationConfiguration .class . java.lang.Package ( ) . java.lang.String ( ) ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext = new AnnotationConfigServletWebServerApplicationContext ( ExampleServletWebServerApplicationConfiguration .class , org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContextTests.SessionScopedComponent .class ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext = new AnnotationConfigServletWebServerApplicationContext ( ExampleServletWebServerApplicationConfiguration .class , org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContextTests.ExampleServletWithAutowired .class , org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContextTests.SessionScopedComponent .class ) ; Servlet org.springframework.boot.web.servlet.context.Servlet = this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . getBean ( org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContextTests.ExampleServletWithAutowired .class ) ; assertThat ( org.springframework.boot.web.servlet.context.Servlet ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext = new AnnotationConfigServletWebServerApplicationContext ( ExampleServletWebServerApplicationConfiguration .class ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext = new AnnotationConfigServletWebServerApplicationContext ( ) ; this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . register ( ExampleServletWebServerApplicationConfiguration .class ) ; this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . refresh ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext = new AnnotationConfigServletWebServerApplicationContext ( ) ; this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . scan ( ExampleServletWebServerApplicationConfiguration .class . java.lang.Package ( ) . java.lang.String ( ) ) ; this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . refresh ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext = new AnnotationConfigServletWebServerApplicationContext ( org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContextTests.ServletContextAwareEmbeddedConfiguration .class ) ; void ( ) ; assertThat ( this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . getBean ( org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContextTests.ServletContextAwareEmbeddedConfiguration .class ) . getServletContext ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { AnnotationConfigServletWebServerApplicationContext org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext = new AnnotationConfigServletWebServerApplicationContext ( org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContextTests.WebServerConfiguration .class ) ; this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext = new AnnotationConfigServletWebServerApplicationContext ( ) ; this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . register ( org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContextTests.WebServerConfiguration .class , org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContextTests.ServletContextAwareConfiguration .class ) ; this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . setParent ( org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext ) ; this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . refresh ( ) ; void ( ) ; assertThat ( this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . getBean ( org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContextTests.ServletContextAwareConfiguration .class ) . getServletContext ( ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { MockServletWebServerFactory org.springframework.boot.web.servlet.context.MockServletWebServerFactory = this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . getBean ( MockServletWebServerFactory .class ) ; Servlet org.springframework.boot.web.servlet.context.Servlet = this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext . getBean ( Servlet .class ) ; verify ( org.springframework.boot.web.servlet.context.MockServletWebServerFactory . getServletContext ( ) ) . addServlet ( STRING , org.springframework.boot.web.servlet.context.Servlet ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletRequest org.springframework.boot.web.servlet.context.ServletRequest , ServletResponse org.springframework.boot.web.servlet.context.ServletResponse )				throws org.springframework.boot.web.servlet.context.ServletException , java.io.IOException { assertThat ( this . org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContextTests.SessionScopedComponent ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.web.servlet.context.ServletWebServerFactory org.springframework.boot.web.servlet.context.ServletWebServerFactory ( ) { return new MockServletWebServerFactory ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.web.servlet.context.Servlet org.springframework.boot.web.servlet.context.Servlet ( ) { return new MockServlet ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContext org.springframework.boot.web.servlet.context.ServletContext ) { this . org.springframework.boot.web.servlet.context.ServletContext = org.springframework.boot.web.servlet.context.ServletContext ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.servlet.context.ServletContext org.springframework.boot.web.servlet.context.ServletContext ( ) { return this . org.springframework.boot.web.servlet.context.ServletContext ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.web.servlet.context.ServletWebServerFactory org.springframework.boot.web.servlet.context.ServletWebServerFactory ( ) { return new MockServletWebServerFactory ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.web.servlet.context.Servlet org.springframework.boot.web.servlet.context.Servlet ( ) { return new MockServlet ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContext org.springframework.boot.web.servlet.context.ServletContext ) { this . org.springframework.boot.web.servlet.context.ServletContext = org.springframework.boot.web.servlet.context.ServletContext ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.servlet.context.ServletContext org.springframework.boot.web.servlet.context.ServletContext ( ) { return this . org.springframework.boot.web.servlet.context.ServletContext ; }  <METHOD_END>
