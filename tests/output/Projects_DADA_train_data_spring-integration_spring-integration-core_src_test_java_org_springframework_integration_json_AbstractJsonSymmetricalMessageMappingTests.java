<METHOD_START> @ Factory public static org.springframework.integration.json.Matcher<org.springframework.integration.json.Message<?>> < Message < ? > > org.springframework.integration.json.Matcher<org.springframework.integration.json.Message<?>> ( Message < ? > org.springframework.integration.json.Message<?> ) { return new MessageMatcher ( org.springframework.integration.json.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Message < java.lang.String > org.springframework.integration.json.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . build ( ) ; org.springframework.integration.json.Message<java.lang.String> = MessageHistory . write ( org.springframework.integration.json.Message<java.lang.String> , new org.springframework.integration.json.AbstractJsonSymmetricalMessageMappingTests.TestNamedComponent ( NUMBER ) ) ; org.springframework.integration.json.Message<java.lang.String> = MessageHistory . write ( org.springframework.integration.json.Message<java.lang.String> , new org.springframework.integration.json.AbstractJsonSymmetricalMessageMappingTests.TestNamedComponent ( NUMBER ) ) ; org.springframework.integration.json.Message<java.lang.String> = MessageHistory . write ( org.springframework.integration.json.Message<java.lang.String> , new org.springframework.integration.json.AbstractJsonSymmetricalMessageMappingTests.TestNamedComponent ( NUMBER ) ) ; JsonOutboundMessageMapper org.springframework.integration.json.JsonOutboundMessageMapper = new JsonOutboundMessageMapper ( ) ; java.lang.String java.lang.String = org.springframework.integration.json.JsonOutboundMessageMapper . fromMessage ( org.springframework.integration.json.Message<java.lang.String> ) ; JsonInboundMessageMapper org.springframework.integration.json.JsonInboundMessageMapper = new JsonInboundMessageMapper ( java.lang.String .class , org.springframework.integration.json.JsonMessageParser<?> ( ) ) ; Message < ? > org.springframework.integration.json.Message<?> = org.springframework.integration.json.JsonInboundMessageMapper . toMessage ( java.lang.String ) ; assertThat ( org.springframework.integration.json.Message<> , org.springframework.integration.json.Matcher<org.springframework.integration.json.Message<?>> ( org.springframework.integration.json.Message<java.lang.String> ) ) ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.integration.json.JsonMessageParser<?> < ? > org.springframework.integration.json.JsonMessageParser<?> ( )  <METHOD_END>
<METHOD_START> void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . int ; }  <METHOD_END>
