<METHOD_START> @ java.lang.Override public java.time.Instant java.time.Instant ( java.lang.String java.lang.String , java.util.Locale java.util.Locale ) throws java.text.ParseException { if ( java.lang.String . int ( ) > NUMBER && java.lang.Character . boolean ( java.lang.String . char ( NUMBER ) ) ) { return java.time.Instant . java.time.Instant ( java.lang.String ) ; } else { return java.time.Instant . java.time.Instant ( java.time.format.DateTimeFormatter . java.time.format.DateTimeFormatter . java.time.temporal.TemporalAccessor ( java.lang.String ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.time.Instant java.time.Instant , java.util.Locale java.util.Locale ) { return java.time.Instant . java.lang.String ( ) ; }  <METHOD_END>
