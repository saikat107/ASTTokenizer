<METHOD_START> public void ( ) { this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> = new java.util.ArrayList<org.springframework.data.mongodb.core.query.Criteria> < org.springframework.data.mongodb.core.query.Criteria > ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> = new java.util.ArrayList<org.springframework.data.mongodb.core.query.Criteria> < org.springframework.data.mongodb.core.query.Criteria > ( ) ; this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> . boolean ( this ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected void ( java.util.List<org.springframework.data.mongodb.core.query.Criteria> < org.springframework.data.mongodb.core.query.Criteria > java.util.List<org.springframework.data.mongodb.core.query.Criteria> , java.lang.String java.lang.String ) { this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> = java.util.List<org.springframework.data.mongodb.core.query.Criteria> ; this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> . boolean ( this ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.query.Criteria ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.query.Criteria ( Example . of ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( Example < ? > org.springframework.data.mongodb.core.query.Example<?> ) { return new org.springframework.data.mongodb.core.query.Criteria ( ) . org.springframework.data.mongodb.core.query.Criteria ( org.springframework.data.mongodb.core.query.Example<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.query.Criteria ( this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Object java.lang.Object ) { if ( ! java.lang.Object . boolean ( java.lang.Object ) ) { throw new InvalidMongoDbApiUsageException ( STRING ) ; } if ( boolean ( ) ) { throw new InvalidMongoDbApiUsageException ( STRING ) ; } this . java.lang.Object = java.lang.Object ; return this ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return ! this . java.util.LinkedHashMap<java.lang.String,java.lang.Object> . boolean ( ) && STRING . boolean ( this . java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.util.Set<java.lang.String> ( ) . java.lang.Object[] ( ) [ this . java.util.LinkedHashMap<java.lang.String,java.lang.Object> . int ( ) - NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Object java.lang.Object ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Object java.lang.Object ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Object java.lang.Object ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Object java.lang.Object ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Object java.lang.Object ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Object ... java.lang.Object[] ) { if ( java.lang.Object[] . int > NUMBER && java.lang.Object[] [ NUMBER ] instanceof java.util.Collection ) { throw new InvalidMongoDbApiUsageException ( STRING + java.lang.Object[] [ NUMBER ] . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) ) ; } java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.util.Collection<?> < ? > java.util.Collection<?> ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.util.Collection<> ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Object ... java.lang.Object[] ) { return org.springframework.data.mongodb.core.query.Criteria ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.util.Collection<?> < ? > java.util.Collection<?> ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.util.Collection<> ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Number java.lang.Number , java.lang.Number java.lang.Number ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( ) ; java.util.List<java.lang.Object> . boolean ( java.lang.Number ) ; java.util.List<java.lang.Object> . boolean ( java.lang.Number ) ; java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.util.List<java.lang.Object> ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Object ... java.lang.Object[] ) { return org.springframework.data.mongodb.core.query.Criteria ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.util.Collection<?> < ? > java.util.Collection<?> ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.util.Collection<> ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( int int ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( boolean boolean ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( int int ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( ) { return org.springframework.data.mongodb.core.query.Criteria ( null ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.Object java.lang.Object ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.query.Criteria ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.query.Criteria ( java.util.regex.Pattern ( java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( java.util.regex.Pattern java.util.regex.Pattern ) { Assert . notNull ( java.util.regex.Pattern , STRING ) ; if ( boolean ( ) ) { return org.springframework.data.mongodb.core.query.Criteria ( java.util.regex.Pattern ) ; } this . java.lang.Object = java.util.regex.Pattern ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( BsonRegularExpression org.springframework.data.mongodb.core.query.BsonRegularExpression ) { if ( boolean ( ) ) { return org.springframework.data.mongodb.core.query.Criteria ( org.springframework.data.mongodb.core.query.BsonRegularExpression ) ; } this . java.lang.Object = org.springframework.data.mongodb.core.query.BsonRegularExpression ; return this ; }  <METHOD_END>
<METHOD_START> private java.util.regex.Pattern java.util.regex.Pattern ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return java.util.regex.Pattern . java.util.regex.Pattern ( java.lang.String , java.lang.String == null ? NUMBER : BSON . regexFlags ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( Circle org.springframework.data.mongodb.core.query.Circle ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Circle , STRING ) ; java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , new GeoCommand ( new Sphere ( org.springframework.data.mongodb.core.query.Circle ) ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( Shape org.springframework.data.mongodb.core.query.Shape ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Shape , STRING ) ; java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , new GeoCommand ( org.springframework.data.mongodb.core.query.Shape ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( Point org.springframework.data.mongodb.core.query.Point ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Point , STRING ) ; java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.data.mongodb.core.query.Point ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( Point org.springframework.data.mongodb.core.query.Point ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Point , STRING ) ; java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.data.mongodb.core.query.Point ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( GeoJson org.springframework.data.mongodb.core.query.GeoJson ) { Assert . notNull ( org.springframework.data.mongodb.core.query.GeoJson , STRING ) ; java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.data.mongodb.core.query.GeoJson ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( double double ) { if ( boolean ( STRING , STRING , double ) || boolean ( STRING , STRING , double ) ) { return this ; } java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , double ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( double double ) { if ( boolean ( STRING , STRING , double ) || boolean ( STRING , STRING , double ) ) { return this ; } java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , double ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.data.mongodb.core.query.Criteria . org.springframework.data.mongodb.core.query.Document ( ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( Example < ? > org.springframework.data.mongodb.core.query.Example<?> ) { java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.data.mongodb.core.query.Example<> ) ; this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> . boolean ( this ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( org.springframework.data.mongodb.core.query.Criteria ... org.springframework.data.mongodb.core.query.Criteria[] ) { BasicDBList org.springframework.data.mongodb.core.query.BasicDBList = org.springframework.data.mongodb.core.query.BasicDBList ( org.springframework.data.mongodb.core.query.Criteria[] ) ; return org.springframework.data.mongodb.core.query.Criteria ( new org.springframework.data.mongodb.core.query.Criteria ( STRING ) . org.springframework.data.mongodb.core.query.Criteria ( org.springframework.data.mongodb.core.query.BasicDBList ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( org.springframework.data.mongodb.core.query.Criteria ... org.springframework.data.mongodb.core.query.Criteria[] ) { BasicDBList org.springframework.data.mongodb.core.query.BasicDBList = org.springframework.data.mongodb.core.query.BasicDBList ( org.springframework.data.mongodb.core.query.Criteria[] ) ; return org.springframework.data.mongodb.core.query.Criteria ( new org.springframework.data.mongodb.core.query.Criteria ( STRING ) . org.springframework.data.mongodb.core.query.Criteria ( org.springframework.data.mongodb.core.query.BasicDBList ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( org.springframework.data.mongodb.core.query.Criteria ... org.springframework.data.mongodb.core.query.Criteria[] ) { BasicDBList org.springframework.data.mongodb.core.query.BasicDBList = org.springframework.data.mongodb.core.query.BasicDBList ( org.springframework.data.mongodb.core.query.Criteria[] ) ; return org.springframework.data.mongodb.core.query.Criteria ( new org.springframework.data.mongodb.core.query.Criteria ( STRING ) . org.springframework.data.mongodb.core.query.Criteria ( org.springframework.data.mongodb.core.query.BasicDBList ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ( org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ) { if ( boolean ( ) ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.data.mongodb.core.query.Criteria . org.springframework.data.mongodb.core.query.Document ( ) ) ; } else { java.util.List<org.springframework.data.mongodb.core.query.Criteria> . boolean ( org.springframework.data.mongodb.core.query.Criteria ) ; } return this ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Document org.springframework.data.mongodb.core.query.Document ( ) { if ( this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> . int ( ) == NUMBER ) { return java.util.List<org.springframework.data.mongodb.core.query.Criteria> . org.springframework.data.mongodb.core.query.Criteria ( NUMBER ) . org.springframework.data.mongodb.core.query.Document ( ) ; } else if ( CollectionUtils . isEmpty ( this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> ) && ! CollectionUtils . isEmpty ( this . java.util.LinkedHashMap<java.lang.String,java.lang.Object> ) ) { return org.springframework.data.mongodb.core.query.Document ( ) ; } else { Document org.springframework.data.mongodb.core.query.Document = new Document ( ) ; for ( org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria : this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> ) { Document org.springframework.data.mongodb.core.query.Document = org.springframework.data.mongodb.core.query.Criteria . org.springframework.data.mongodb.core.query.Document ( ) ; for ( java.lang.String java.lang.String : org.springframework.data.mongodb.core.query.Document . keySet ( ) ) { void ( org.springframework.data.mongodb.core.query.Document , java.lang.String , org.springframework.data.mongodb.core.query.Document . get ( java.lang.String ) ) ; } } return org.springframework.data.mongodb.core.query.Document ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.data.mongodb.core.query.Document org.springframework.data.mongodb.core.query.Document ( ) { Document org.springframework.data.mongodb.core.query.Document = new Document ( ) ; boolean boolean = false ; for ( java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) ; java.lang.Object java.lang.Object = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ; if ( boolean ( java.lang.Object ) ) { java.lang.Object = new Document ( STRING , java.lang.Object ) ; } if ( boolean ) { Document org.springframework.data.mongodb.core.query.Document = new Document ( ) ; org.springframework.data.mongodb.core.query.Document . put ( java.lang.String , java.lang.Object ) ; org.springframework.data.mongodb.core.query.Document . put ( STRING , org.springframework.data.mongodb.core.query.Document ) ; boolean = false ; } else { if ( STRING . boolean ( java.lang.String ) && java.lang.Object == null ) { boolean = true ; } else { org.springframework.data.mongodb.core.query.Document . put ( java.lang.String , java.lang.Object ) ; } } } if ( ! StringUtils . hasText ( this . java.lang.String ) ) { if ( boolean ) { return new Document ( STRING , org.springframework.data.mongodb.core.query.Document ) ; } return org.springframework.data.mongodb.core.query.Document ; } Document org.springframework.data.mongodb.core.query.Document = new Document ( ) ; if ( ! java.lang.Object . boolean ( java.lang.Object ) ) { org.springframework.data.mongodb.core.query.Document . put ( this . java.lang.String , this . java.lang.Object ) ; org.springframework.data.mongodb.core.query.Document . putAll ( org.springframework.data.mongodb.core.query.Document ) ; } else { org.springframework.data.mongodb.core.query.Document . put ( this . java.lang.String , org.springframework.data.mongodb.core.query.Document ) ; } return org.springframework.data.mongodb.core.query.Document ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.query.BasicDBList org.springframework.data.mongodb.core.query.BasicDBList ( org.springframework.data.mongodb.core.query.Criteria [] org.springframework.data.mongodb.core.query.Criteria[] ) { BasicDBList org.springframework.data.mongodb.core.query.BasicDBList = new BasicDBList ( ) ; for ( org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria : org.springframework.data.mongodb.core.query.Criteria[] ) { org.springframework.data.mongodb.core.query.BasicDBList . add ( org.springframework.data.mongodb.core.query.Criteria . org.springframework.data.mongodb.core.query.Document ( ) ) ; } return org.springframework.data.mongodb.core.query.BasicDBList ; }  <METHOD_END>
<METHOD_START> private void void ( Document org.springframework.data.mongodb.core.query.Document , java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { java.lang.Object java.lang.Object = org.springframework.data.mongodb.core.query.Document . get ( java.lang.String ) ; if ( java.lang.Object == null ) { org.springframework.data.mongodb.core.query.Document . put ( java.lang.String , java.lang.Object ) ; } else { throw new InvalidMongoDbApiUsageException ( STRING + STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.Object + STRING + STRING + java.lang.String + STRING + java.lang.Object + STRING ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.String java.lang.String , java.lang.String java.lang.String , double double ) { if ( ! java.util.LinkedHashMap<java.lang.String,java.lang.Object> . boolean ( java.lang.String ) ) { return false ; } java.lang.Object java.lang.Object = java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; if ( java.lang.Object instanceof Document ) { ( ( Document ) java.lang.Object ) . put ( java.lang.String , double ) ; return true ; } else if ( java.lang.Object instanceof GeoJson ) { Document org.springframework.data.mongodb.core.query.Document = new Document ( STRING , java.lang.Object ) . append ( java.lang.String , double ) ; java.util.LinkedHashMap<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , org.springframework.data.mongodb.core.query.Document ) ; return true ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null || ! java.lang.Class<? extends org.springframework.data.mongodb.core.query.Criteria> ( ) . boolean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { return false ; } org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria = ( org.springframework.data.mongodb.core.query.Criteria ) java.lang.Object ; if ( this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> . int ( ) != org.springframework.data.mongodb.core.query.Criteria . java.util.List<org.springframework.data.mongodb.core.query.Criteria> . int ( ) ) { return false ; } for ( int int = NUMBER ; int < this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> . int ( ) ; int ++ ) { org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria = this . java.util.List<org.springframework.data.mongodb.core.query.Criteria> . org.springframework.data.mongodb.core.query.Criteria ( int ) ; org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria = org.springframework.data.mongodb.core.query.Criteria . java.util.List<org.springframework.data.mongodb.core.query.Criteria> . org.springframework.data.mongodb.core.query.Criteria ( int ) ; if ( ! boolean ( org.springframework.data.mongodb.core.query.Criteria , org.springframework.data.mongodb.core.query.Criteria ) ) { return false ; } } return true ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria , org.springframework.data.mongodb.core.query.Criteria org.springframework.data.mongodb.core.query.Criteria ) { boolean boolean = org.springframework.data.mongodb.core.query.Criteria . java.lang.String == null ? org.springframework.data.mongodb.core.query.Criteria . java.lang.String == null : org.springframework.data.mongodb.core.query.Criteria . java.lang.String . boolean ( org.springframework.data.mongodb.core.query.Criteria . java.lang.String ) ; boolean boolean = org.springframework.data.mongodb.core.query.Criteria . java.util.LinkedHashMap<java.lang.String,java.lang.Object> . boolean ( org.springframework.data.mongodb.core.query.Criteria . java.util.LinkedHashMap<java.lang.String,java.lang.Object> ) ; boolean boolean = boolean ( org.springframework.data.mongodb.core.query.Criteria . java.lang.Object , org.springframework.data.mongodb.core.query.Criteria . java.lang.Object ) ; return boolean && boolean && boolean ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { if ( java.lang.Object == null ) { return java.lang.Object == null ; } if ( java.lang.Object instanceof java.util.regex.Pattern ) { return java.lang.Object instanceof java.util.regex.Pattern ? ( ( java.util.regex.Pattern ) java.lang.Object ) . java.lang.String ( ) . boolean ( ( ( java.util.regex.Pattern ) java.lang.Object ) . java.lang.String ( ) ) : false ; } return ObjectUtils . nullSafeEquals ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ; int += nullSafeHashCode ( java.lang.String ) ; int += java.util.LinkedHashMap<java.lang.String,java.lang.Object> . int ( ) ; int += nullSafeHashCode ( java.lang.Object ) ; return int ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.Object java.lang.Object ) { return java.lang.Object instanceof GeoJson || ( java.lang.Object instanceof GeoCommand && ( ( GeoCommand ) java.lang.Object ) . getShape ( ) instanceof GeoJson ) ; }  <METHOD_END>
