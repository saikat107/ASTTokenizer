<METHOD_START> void ( CacheProperties org.springframework.boot.autoconfigure.cache.CacheProperties , CacheManagerCustomizers org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers ) { this . org.springframework.boot.autoconfigure.cache.CacheProperties = org.springframework.boot.autoconfigure.cache.CacheProperties ; this . org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers = org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.cache.EhCacheCacheManager org.springframework.boot.autoconfigure.cache.EhCacheCacheManager ( CacheManager org.springframework.boot.autoconfigure.cache.CacheManager ) { return this . org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers . customize ( new EhCacheCacheManager ( org.springframework.boot.autoconfigure.cache.CacheManager ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public org.springframework.boot.autoconfigure.cache.CacheManager org.springframework.boot.autoconfigure.cache.CacheManager ( ) { Resource org.springframework.boot.autoconfigure.cache.Resource = this . org.springframework.boot.autoconfigure.cache.CacheProperties . resolveConfigLocation ( this . org.springframework.boot.autoconfigure.cache.CacheProperties . getEhcache ( ) . getConfig ( ) ) ; if ( org.springframework.boot.autoconfigure.cache.Resource != null ) { return EhCacheManagerUtils . buildCacheManager ( org.springframework.boot.autoconfigure.cache.Resource ) ; } return EhCacheManagerUtils . buildCacheManager ( ) ; }  <METHOD_END>
<METHOD_START> void ( ) { super( STRING , STRING , STRING , STRING ); }  <METHOD_END>
