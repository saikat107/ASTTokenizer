<METHOD_START> protected void ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { this . org.springframework.test.web.servlet.result.JsonPathExpectationsHelper = new JsonPathExpectationsHelper ( java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.JsonPathResultMatchers org.springframework.test.web.servlet.result.JsonPathResultMatchers ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public < T > org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final Matcher < T > org.springframework.test.web.servlet.result.Matcher<T> ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValue ( java.lang.String , org.springframework.test.web.servlet.result.Matcher<T> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValue ( java.lang.String , org.springframework.test.web.servlet.result.Matcher<T> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.Object java.lang.Object ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValue ( java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) , java.lang.Object ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValue ( java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . exists ( java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . exists ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . doesNotExist ( java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . doesNotExist ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsEmpty ( java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsEmpty ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsNotEmpty ( java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsNotEmpty ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsString ( java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsString ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsBoolean ( java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsBoolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsNumber ( java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsNumber ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsArray ( java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsArray ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsMap ( java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { java.lang.String java.lang.String = java.lang.String ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.JsonPathExpectationsHelper . assertValueIsMap ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.io.UnsupportedEncodingException { java.lang.String java.lang.String = org.springframework.test.web.servlet.result.MvcResult . getResponse ( ) . getContentAsString ( ) ; if ( StringUtils . hasLength ( this . java.lang.String ) ) { try { java.lang.String java.lang.String = java.lang.String . java.lang.String ( STRING , this . java.lang.String , StringUtils . quote ( java.lang.String . java.lang.String ( NUMBER , this . java.lang.String . int ( ) ) ) ) ; MatcherAssert . assertThat ( java.lang.String , java.lang.String , StringStartsWith . startsWith ( this . java.lang.String ) ) ; return java.lang.String . java.lang.String ( this . java.lang.String . int ( ) ) ; } catch ( java.lang.StringIndexOutOfBoundsException java.lang.StringIndexOutOfBoundsException ) { throw new java.lang.AssertionError ( STRING + this . java.lang.String + STRING , java.lang.StringIndexOutOfBoundsException ) ; } } else { return java.lang.String ; } }  <METHOD_END>
