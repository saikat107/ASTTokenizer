<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { super( java.lang.Class<> ); Assert . isTrue ( java.lang.Class<> . boolean ( RepositoryDefinition .class ) , java.lang.String ) ; this . java.lang.Class<? extends java.io.Serializable> = java.lang.Class<? extends java.io.Serializable> ( java.lang.Class<> ) ; this . java.lang.Class<?> = java.lang.Class<?> ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<? extends java.io.Serializable> < ? extends java.io.Serializable > java.lang.Class<? extends java.io.Serializable> ( ) { return this . java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return this . java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> private java.lang.Class<? extends java.io.Serializable> < ? extends java.io.Serializable > java.lang.Class<? extends java.io.Serializable> ( java.lang.Class<?> < ? > java.lang.Class<?> ) { RepositoryDefinition org.springframework.data.repository.core.support.RepositoryDefinition = java.lang.Class<> . A ( RepositoryDefinition .class ) ; if ( org.springframework.data.repository.core.support.RepositoryDefinition == null || org.springframework.data.repository.core.support.RepositoryDefinition . idClass ( ) == null ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , java.lang.Class<> ) ) ; } return org.springframework.data.repository.core.support.RepositoryDefinition . idClass ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.Class<?> < ? > java.lang.Class<?> ) { RepositoryDefinition org.springframework.data.repository.core.support.RepositoryDefinition = java.lang.Class<> . A ( RepositoryDefinition .class ) ; if ( org.springframework.data.repository.core.support.RepositoryDefinition == null || org.springframework.data.repository.core.support.RepositoryDefinition . domainClass ( ) == null ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , java.lang.Class<> ) ) ; } return org.springframework.data.repository.core.support.RepositoryDefinition . domainClass ( ) ; }  <METHOD_END>
