<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainCrudRepository> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainCrudRepository > java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainCrudRepository> = org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainCrudRepository .class ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainCrudRepository> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainCrudRepository> . java.lang.reflect.Method ( STRING ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainCrudRepository> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainCrudRepository> . java.lang.reflect.Method ( STRING , java.io.Serializable .class ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainCrudRepository> , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainPagingAndSortingRepository> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainPagingAndSortingRepository > java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainPagingAndSortingRepository> = org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainPagingAndSortingRepository .class ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainPagingAndSortingRepository> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainPagingAndSortingRepository> . java.lang.reflect.Method ( STRING , Pageable .class ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainPagingAndSortingRepository> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainPagingAndSortingRepository> . java.lang.reflect.Method ( STRING , java.io.Serializable .class ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.DomainPagingAndSortingRepository> , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingFindAll> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingFindAll > java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingFindAll> = org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingFindAll .class ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingFindAll> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingFindAll> . java.lang.reflect.Method ( STRING , Sort .class ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingFindAll> , false ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFallbackToSortFindAll> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFallbackToSortFindAll > java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFallbackToSortFindAll> = org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFallbackToSortFindAll .class ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFallbackToSortFindAll> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFallbackToSortFindAll> . java.lang.reflect.Method ( STRING , Sort .class ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFallbackToSortFindAll> , false ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingAndPagingFindAll> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingAndPagingFindAll > java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingAndPagingFindAll> = org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingAndPagingFindAll .class ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingAndPagingFindAll> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSortingAndPagingFindAll> . java.lang.reflect.Method ( STRING , Pageable .class ) ) ; java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithIterableDeleteOnly> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithIterableDeleteOnly > java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithIterableDeleteOnly> = org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithIterableDeleteOnly .class ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithIterableDeleteOnly> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithIterableDeleteOnly> . java.lang.reflect.Method ( STRING , java.lang.Iterable .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFindAll> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFindAll > java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFindAll> = org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFindAll .class ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithInvalidPagingFindAll> , java.util.Optional . java.util.Optional<java.lang.reflect.Method> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded > java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded> = org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded .class ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded> . java.lang.reflect.Method ( STRING , java.lang.Long .class ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded> . java.lang.reflect.Method ( STRING , java.lang.Long .class ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded> . java.lang.reflect.Method ( STRING , org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain .class ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded> , java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded> . java.lang.reflect.Method ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloadedWrong> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloadedWrong > java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloadedWrong> = org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloadedWrong .class ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloadedWrong> , CrudRepository .class . java.lang.reflect.Method ( STRING , java.io.Serializable .class ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloadedWrong> , CrudRepository .class . java.lang.reflect.Method ( STRING , java.io.Serializable .class ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloadedWrong> , CrudRepository .class . java.lang.reflect.Method ( STRING , java.lang.Object .class ) ) ; void ( java.lang.Class<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloadedWrong> , CrudRepository .class . java.lang.reflect.Method ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSave .class , org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithCustomSave .class . java.lang.reflect.Method ( STRING , org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithDeleteMethodForEntityOverloaded .class , org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithDeleteMethodForEntityOverloaded .class . java.lang.reflect.Method ( STRING , org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CrudMethods org.springframework.data.repository.core.support.CrudMethods = org.springframework.data.repository.core.support.CrudMethods ( org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.RepositoryWithAllCrudMethodOverloaded .class ) ; java.util.Arrays . java.util.List ( org.springframework.data.repository.core.support.CrudMethods . getSaveMethod ( ) , org.springframework.data.repository.core.support.CrudMethods . getDeleteMethod ( ) , org.springframework.data.repository.core.support.CrudMethods . getFindAllMethod ( ) , org.springframework.data.repository.core.support.CrudMethods . getFindOneMethod ( ) ) . forEach ( method -> assertThat ( method ) . hasValueSatisfying ( it -> assertThat ( it . isAccessible ( ) ) . isTrue ( ) ) ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.data.repository.core.support.CrudMethods org.springframework.data.repository.core.support.CrudMethods ( java.lang.Class<?> < ? > java.lang.Class<?> ) { RepositoryMetadata org.springframework.data.repository.core.support.RepositoryMetadata = new DefaultRepositoryMetadata ( java.lang.Class<> ) ; RepositoryInformation org.springframework.data.repository.core.support.RepositoryInformation = new DefaultRepositoryInformation ( org.springframework.data.repository.core.support.RepositoryMetadata , PagingAndSortingRepository .class , java.util.Optional . java.util.Optional<java.lang.Object> ( ) ) ; return new DefaultCrudMethods ( org.springframework.data.repository.core.support.RepositoryInformation ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.reflect.Method java.lang.reflect.Method ) { void ( java.lang.Class<> , java.util.Optional . java.util.Optional<java.lang.reflect.Method> ( java.lang.reflect.Method ) ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.util.Optional<java.lang.reflect.Method> < java.lang.reflect.Method > java.util.Optional<java.lang.reflect.Method> ) { CrudMethods org.springframework.data.repository.core.support.CrudMethods = org.springframework.data.repository.core.support.CrudMethods ( java.lang.Class<> ) ; assertThat ( org.springframework.data.repository.core.support.CrudMethods . hasFindAllMethod ( ) ) . isEqualTo ( java.util.Optional<java.lang.reflect.Method> . boolean ( ) ) ; assertThat ( org.springframework.data.repository.core.support.CrudMethods . getFindAllMethod ( ) ) . isEqualTo ( java.util.Optional<java.lang.reflect.Method> ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.reflect.Method java.lang.reflect.Method ) { CrudMethods org.springframework.data.repository.core.support.CrudMethods = org.springframework.data.repository.core.support.CrudMethods ( java.lang.Class<> ) ; assertThat ( org.springframework.data.repository.core.support.CrudMethods . hasFindOneMethod ( ) ) . isEqualTo ( java.lang.reflect.Method != null ) ; assertThat ( org.springframework.data.repository.core.support.CrudMethods . getFindOneMethod ( ) ) . hasValue ( java.lang.reflect.Method ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.reflect.Method java.lang.reflect.Method ) { CrudMethods org.springframework.data.repository.core.support.CrudMethods = org.springframework.data.repository.core.support.CrudMethods ( java.lang.Class<> ) ; assertThat ( org.springframework.data.repository.core.support.CrudMethods . hasDelete ( ) ) . isEqualTo ( java.lang.reflect.Method != null ) ; assertThat ( org.springframework.data.repository.core.support.CrudMethods . getDeleteMethod ( ) ) . hasValue ( java.lang.reflect.Method ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.reflect.Method java.lang.reflect.Method ) { CrudMethods org.springframework.data.repository.core.support.CrudMethods = org.springframework.data.repository.core.support.CrudMethods ( java.lang.Class<> ) ; assertThat ( org.springframework.data.repository.core.support.CrudMethods . hasSaveMethod ( ) ) . isEqualTo ( java.lang.reflect.Method != null ) ; assertThat ( org.springframework.data.repository.core.support.CrudMethods . getSaveMethod ( ) ) . hasValue ( java.lang.reflect.Method ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.Class<?> < ? > java.lang.Class<?> , boolean boolean ) { CrudMethods org.springframework.data.repository.core.support.CrudMethods = org.springframework.data.repository.core.support.CrudMethods ( java.lang.Class<> ) ; assertThat ( org.springframework.data.repository.core.support.CrudMethods . hasSaveMethod ( ) ) . isEqualTo ( boolean ) ; assertThat ( org.springframework.data.repository.core.support.CrudMethods . getSaveMethod ( ) . isPresent ( ) ) . isEqualTo ( boolean ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain ( org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain );  <METHOD_END>
<METHOD_START> java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain > java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> ( Sort org.springframework.data.repository.core.support.Sort );  <METHOD_END>
<METHOD_START> java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain > java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> ( Pageable org.springframework.data.repository.core.support.Pageable );  <METHOD_END>
<METHOD_START> java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain > java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> ( Sort org.springframework.data.repository.core.support.Sort );  <METHOD_END>
<METHOD_START> java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain > java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> ( java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain > java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> ( java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain > java.lang.Iterable<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> ( Sort org.springframework.data.repository.core.support.Sort );  <METHOD_END>
<METHOD_START> void void ( java.lang.Iterable<? extends org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> < ? extends org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain > java.lang.Iterable<? extends org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain > java.util.List<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> ( )  <METHOD_END>
<METHOD_START> < S extends org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain > S S ( S S );  <METHOD_END>
<METHOD_START> void void ( java.lang.Long java.lang.Long );  <METHOD_END>
<METHOD_START> java.util.Optional<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain > java.util.Optional<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> ( java.lang.Long java.lang.Long );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> < org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain > java.util.List<org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain ( java.io.Serializable java.io.Serializable );  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain ( org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain );  <METHOD_END>
<METHOD_START> void void ( org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests.Domain );  <METHOD_END>
