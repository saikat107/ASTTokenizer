<METHOD_START> public void ( java.lang.Class<? extends T> < ? extends T > java.lang.Class<? extends T> ) { super( java.lang.Class<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void void ( ApplicationContext org.springframework.data.gemfire.repository.support.ApplicationContext ) throws org.springframework.data.gemfire.repository.support.BeansException { java.util.Collection<org.springframework.data.gemfire.repository.support.Region> < Region > java.util.Collection<org.springframework.data.gemfire.repository.support.Region> = org.springframework.data.gemfire.repository.support.ApplicationContext . getBeansOfType ( Region .class ) . values ( ) ; this . java.lang.Iterable<org.springframework.data.gemfire.repository.support.Region<?,?>> = ( java.lang.Iterable ) java.util.Collections . java.util.Collection<org.springframework.data.gemfire.repository.support.Region> ( java.util.Collection<org.springframework.data.gemfire.repository.support.Region> ) ; }  <METHOD_END>
<METHOD_START> public void void ( MappingContext < ? extends GemfirePersistentEntity < ? > , GemfirePersistentProperty > org.springframework.data.gemfire.repository.support.MappingContext<? extends org.springframework.data.gemfire.repository.support.GemfirePersistentEntity<?>,org.springframework.data.gemfire.repository.support.GemfirePersistentProperty> ) { setMappingContext ( org.springframework.data.gemfire.repository.support.MappingContext<,org.springframework.data.gemfire.repository.support.GemfirePersistentProperty> ) ; this . org.springframework.data.gemfire.repository.support.MappingContext<? extends org.springframework.data.gemfire.repository.support.GemfirePersistentEntity<?>,org.springframework.data.gemfire.repository.support.GemfirePersistentProperty> = org.springframework.data.gemfire.repository.support.MappingContext<,org.springframework.data.gemfire.repository.support.GemfirePersistentProperty> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.repository.support.MappingContext<? extends org.springframework.data.gemfire.repository.support.GemfirePersistentEntity<?>,org.springframework.data.gemfire.repository.support.GemfirePersistentProperty> < ? extends GemfirePersistentEntity < ? > , GemfirePersistentProperty > org.springframework.data.gemfire.repository.support.MappingContext<? extends org.springframework.data.gemfire.repository.support.GemfirePersistentEntity<?>,org.springframework.data.gemfire.repository.support.GemfirePersistentProperty> ( ) { return this . org.springframework.data.gemfire.repository.support.MappingContext<,org.springframework.data.gemfire.repository.support.GemfirePersistentProperty> ; }  <METHOD_END>
<METHOD_START> protected java.lang.Iterable<org.springframework.data.gemfire.repository.support.Region<?,?>> < Region < ? , ? > > java.lang.Iterable<org.springframework.data.gemfire.repository.support.Region<?,?>> ( ) { return this . java.lang.Iterable<org.springframework.data.gemfire.repository.support.Region<?,?>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.gemfire.repository.support.RepositoryFactorySupport org.springframework.data.gemfire.repository.support.RepositoryFactorySupport ( ) { return new GemfireRepositoryFactory ( java.lang.Iterable<org.springframework.data.gemfire.repository.support.Region<?,?>> ( ) , org.springframework.data.gemfire.repository.support.MappingContext<? extends org.springframework.data.gemfire.repository.support.GemfirePersistentEntity<?>,org.springframework.data.gemfire.repository.support.GemfirePersistentProperty> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Assert . state ( org.springframework.data.gemfire.repository.support.MappingContext<? extends org.springframework.data.gemfire.repository.support.GemfirePersistentEntity<?>,org.springframework.data.gemfire.repository.support.GemfirePersistentProperty> ( ) != null , STRING ) ; super. afterPropertiesSet ( ) ; }  <METHOD_END>
