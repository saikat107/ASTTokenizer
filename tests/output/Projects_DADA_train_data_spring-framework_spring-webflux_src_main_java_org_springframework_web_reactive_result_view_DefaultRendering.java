<METHOD_START> void ( java.lang.Object java.lang.Object , Model org.springframework.web.reactive.result.view.Model , HttpStatus org.springframework.web.reactive.result.view.HttpStatus , HttpHeaders org.springframework.web.reactive.result.view.HttpHeaders ) { this . java.lang.Object = java.lang.Object ; this . java.util.Map<java.lang.String,java.lang.Object> = ( org.springframework.web.reactive.result.view.Model != null ? org.springframework.web.reactive.result.view.Model . asMap ( ) : java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( ) ) ; this . org.springframework.web.reactive.result.view.HttpStatus = org.springframework.web.reactive.result.view.HttpStatus ; this . org.springframework.web.reactive.result.view.HttpHeaders = org.springframework.web.reactive.result.view.HttpHeaders != null ? org.springframework.web.reactive.result.view.HttpHeaders : org.springframework.web.reactive.result.view.HttpHeaders ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> ( ) { return java.util.Optional . java.util.Optional<java.lang.Object> ( this . java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { return this . java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Optional<org.springframework.web.reactive.result.view.HttpStatus> < HttpStatus > java.util.Optional<org.springframework.web.reactive.result.view.HttpStatus> ( ) { return java.util.Optional . java.util.Optional ( this . org.springframework.web.reactive.result.view.HttpStatus ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.reactive.result.view.HttpHeaders org.springframework.web.reactive.result.view.HttpHeaders ( ) { return this . org.springframework.web.reactive.result.view.HttpHeaders ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.Object + STRING + this . java.util.Map<java.lang.String,java.lang.Object> + STRING + this . org.springframework.web.reactive.result.view.HttpStatus + STRING + this . org.springframework.web.reactive.result.view.HttpHeaders + STRING ; }  <METHOD_END>
