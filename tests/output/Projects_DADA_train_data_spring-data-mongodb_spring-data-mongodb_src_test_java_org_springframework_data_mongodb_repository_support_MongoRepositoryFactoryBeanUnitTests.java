<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { MongoRepositoryFactoryBean org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean = new MongoRepositoryFactoryBean ( ContactRepository .class ) ; org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean . setCreateIndexesForQueryMethods ( true ) ; java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = java.util.List<java.lang.Object> ( org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean ) ; assertThat ( java.util.List<java.lang.Object> . boolean ( ) , is ( false ) ) ; assertThat ( java.util.List<java.lang.Object> , hasItem ( instanceOf ( IndexEnsuringQueryCreationListener .class ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = java.util.List<java.lang.Object> ( new MongoRepositoryFactoryBean ( ContactRepository .class ) ) ; assertThat ( java.util.List<java.lang.Object> . int ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) private java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( MongoRepositoryFactoryBean org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean ) { when ( org.springframework.data.mongodb.repository.support.MongoOperations . getConverter ( ) ) . thenReturn ( org.springframework.data.mongodb.repository.support.MongoConverter ) ; when ( org.springframework.data.mongodb.repository.support.MongoConverter . getMappingContext ( ) ) . thenReturn ( org.springframework.data.mongodb.repository.support.MappingContext ) ; org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean . setLazyInit ( true ) ; org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean . setMongoOperations ( org.springframework.data.mongodb.repository.support.MongoOperations ) ; org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean . afterPropertiesSet ( ) ; RepositoryFactorySupport org.springframework.data.mongodb.repository.support.RepositoryFactorySupport = org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean . createRepositoryFactory ( ) ; return ( java.util.List<java.lang.Object> < java.lang.Object > ) ReflectionTestUtils . getField ( org.springframework.data.mongodb.repository.support.RepositoryFactorySupport , STRING ) ; }  <METHOD_END>
