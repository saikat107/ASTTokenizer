<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.aop.target.BeanFactory ) { if ( this . java.lang.String == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } this . org.springframework.aop.target.BeanFactory = org.springframework.aop.target.BeanFactory ; }  <METHOD_END>
<METHOD_START> public org.springframework.aop.target.BeanFactory org.springframework.aop.target.BeanFactory ( ) { return this . org.springframework.aop.target.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public synchronized java.lang.Class<?> < ? > java.lang.Class<?> ( ) { if ( this . java.lang.Class<> == null && this . org.springframework.aop.target.BeanFactory != null ) { this . java.lang.Class<?> = this . org.springframework.aop.target.BeanFactory . getType ( this . java.lang.String ) ; if ( this . java.lang.Class<> == null ) { if ( org.springframework.aop.target.Log . isTraceEnabled ( ) ) { org.springframework.aop.target.Log . trace ( STRING + this . java.lang.String + STRING ) ; } java.lang.Object java.lang.Object = this . org.springframework.aop.target.BeanFactory . getBean ( this . java.lang.String ) ; if ( java.lang.Object != null ) { this . java.lang.Class<?> = java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ; } } } return this . java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) throws java.lang.Exception { }  <METHOD_END>
<METHOD_START> protected void void ( org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource ) { this . java.lang.String = org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource . java.lang.String ; this . java.lang.Class<?> = org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource . java.lang.Class<> ; this . org.springframework.aop.target.BeanFactory = org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource . org.springframework.aop.target.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null || java.lang.Class<? extends org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) { return false ; } org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource = ( org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource ) java.lang.Object ; return ( ObjectUtils . nullSafeEquals ( this . org.springframework.aop.target.BeanFactory , org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource . org.springframework.aop.target.BeanFactory ) && ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource . java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = java.lang.Class<? extends org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource> ( ) . int ( ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( this . org.springframework.aop.target.BeanFactory ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( this . java.lang.String ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( java.lang.Class<? extends org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource> ( ) . java.lang.String ( ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) . java.lang.StringBuilder ( STRING ) ; if ( this . java.lang.Class<> != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.Class<> . java.lang.String ( ) ) . java.lang.StringBuilder ( STRING ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
