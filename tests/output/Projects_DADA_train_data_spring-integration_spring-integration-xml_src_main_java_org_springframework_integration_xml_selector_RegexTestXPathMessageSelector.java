<METHOD_START> public void ( java.lang.String java.lang.String , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> , java.lang.String java.lang.String ) { super( java.lang.String , java.util.Map<java.lang.String,java.lang.String> ); Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( java.lang.String , java.lang.String , java.lang.String ); Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( java.lang.String ); Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( XPathExpression org.springframework.integration.xml.selector.XPathExpression , java.lang.String java.lang.String ) { super( org.springframework.integration.xml.selector.XPathExpression ); Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( Message < ? > org.springframework.integration.xml.selector.Message<?> ) { org.w3c.dom.Node org.w3c.dom.Node = getConverter ( ) . convertToNode ( org.springframework.integration.xml.selector.Message<> . getPayload ( ) ) ; java.lang.String java.lang.String = getXPathExpresion ( ) . evaluateAsString ( org.w3c.dom.Node ) ; return StringUtils . hasText ( java.lang.String ) && java.lang.String . boolean ( this . java.lang.String ) ; }  <METHOD_END>
