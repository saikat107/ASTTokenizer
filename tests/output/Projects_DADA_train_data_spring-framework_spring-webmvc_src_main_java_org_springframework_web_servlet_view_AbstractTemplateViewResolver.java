<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return AbstractTemplateView .class ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.view.AbstractUrlBasedView org.springframework.web.servlet.view.AbstractUrlBasedView ( java.lang.String java.lang.String ) throws java.lang.Exception { AbstractTemplateView org.springframework.web.servlet.view.AbstractTemplateView = ( AbstractTemplateView ) super. buildView ( java.lang.String ) ; org.springframework.web.servlet.view.AbstractTemplateView . setExposeRequestAttributes ( this . boolean ) ; org.springframework.web.servlet.view.AbstractTemplateView . setAllowRequestOverride ( this . boolean ) ; org.springframework.web.servlet.view.AbstractTemplateView . setExposeSessionAttributes ( this . boolean ) ; org.springframework.web.servlet.view.AbstractTemplateView . setAllowSessionOverride ( this . boolean ) ; org.springframework.web.servlet.view.AbstractTemplateView . setExposeSpringMacroHelpers ( this . boolean ) ; return org.springframework.web.servlet.view.AbstractTemplateView ; }  <METHOD_END>
