<METHOD_START> public void ( ) { this . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata>> = new java.util.LinkedHashMap <> ( ) ; this . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemHint>> = new java.util.LinkedHashMap <> ( ) ; }  <METHOD_END>
<METHOD_START> public void ( org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata ) { this . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata>> = new java.util.LinkedHashMap <> ( org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata>> ) ; this . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemHint>> = new java.util.LinkedHashMap <> ( org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemHint>> ) ; }  <METHOD_END>
<METHOD_START> public void void ( ItemMetadata org.springframework.boot.configurationprocessor.metadata.ItemMetadata ) { void ( this . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata>> , org.springframework.boot.configurationprocessor.metadata.ItemMetadata . getName ( ) , org.springframework.boot.configurationprocessor.metadata.ItemMetadata ) ; }  <METHOD_END>
<METHOD_START> public void void ( ItemHint org.springframework.boot.configurationprocessor.metadata.ItemHint ) { void ( this . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemHint>> , org.springframework.boot.configurationprocessor.metadata.ItemHint . getName ( ) , org.springframework.boot.configurationprocessor.metadata.ItemHint ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata ) { for ( ItemMetadata org.springframework.boot.configurationprocessor.metadata.ItemMetadata : org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata . java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> ( ) ) { void ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata ) ; } for ( ItemHint org.springframework.boot.configurationprocessor.metadata.ItemHint : org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata . java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemHint> ( ) ) { void ( org.springframework.boot.configurationprocessor.metadata.ItemHint ) ; } }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> < ItemMetadata > java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> ( ) { return java.util.List ( this . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata>> ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemHint> < ItemHint > java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemHint> ( ) { return java.util.List ( this . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemHint>> ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ItemMetadata org.springframework.boot.configurationprocessor.metadata.ItemMetadata ) { ItemMetadata org.springframework.boot.configurationprocessor.metadata.ItemMetadata = org.springframework.boot.configurationprocessor.metadata.ItemMetadata ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata ) ; if ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata != null ) { if ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata . getDescription ( ) != null ) { org.springframework.boot.configurationprocessor.metadata.ItemMetadata . setDescription ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata . getDescription ( ) ) ; } if ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata . getDefaultValue ( ) != null ) { org.springframework.boot.configurationprocessor.metadata.ItemMetadata . setDefaultValue ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata . getDefaultValue ( ) ) ; } ItemDeprecation org.springframework.boot.configurationprocessor.metadata.ItemDeprecation = org.springframework.boot.configurationprocessor.metadata.ItemMetadata . getDeprecation ( ) ; ItemDeprecation org.springframework.boot.configurationprocessor.metadata.ItemDeprecation = org.springframework.boot.configurationprocessor.metadata.ItemMetadata . getDeprecation ( ) ; if ( org.springframework.boot.configurationprocessor.metadata.ItemDeprecation != null ) { if ( org.springframework.boot.configurationprocessor.metadata.ItemDeprecation == null ) { org.springframework.boot.configurationprocessor.metadata.ItemMetadata . setDeprecation ( org.springframework.boot.configurationprocessor.metadata.ItemDeprecation ) ; } else { if ( org.springframework.boot.configurationprocessor.metadata.ItemDeprecation . getReason ( ) != null ) { org.springframework.boot.configurationprocessor.metadata.ItemDeprecation . setReason ( org.springframework.boot.configurationprocessor.metadata.ItemDeprecation . getReason ( ) ) ; } if ( org.springframework.boot.configurationprocessor.metadata.ItemDeprecation . getReplacement ( ) != null ) { org.springframework.boot.configurationprocessor.metadata.ItemDeprecation . setReplacement ( org.springframework.boot.configurationprocessor.metadata.ItemDeprecation . getReplacement ( ) ) ; } } } } else { void ( this . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata>> , org.springframework.boot.configurationprocessor.metadata.ItemMetadata . getName ( ) , org.springframework.boot.configurationprocessor.metadata.ItemMetadata ) ; } }  <METHOD_END>
<METHOD_START> private < K , V > void void ( java.util.Map<K,java.util.List<V>> < K , java.util.List<V> < V > > java.util.Map<K,java.util.List<V>> , K K , V V ) { java.util.List<V> < V > java.util.List<V> = java.util.Map<K,java.util.List<V>> . java.util.List<V> ( K ) ; if ( java.util.List<V> == null ) { java.util.List<V> = new java.util.ArrayList<V> <> ( ) ; java.util.Map<K,java.util.List<V>> . java.util.List<V> ( K , java.util.List<V> ) ; } java.util.List<V> . boolean ( V ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.configurationprocessor.metadata.ItemMetadata org.springframework.boot.configurationprocessor.metadata.ItemMetadata ( ItemMetadata org.springframework.boot.configurationprocessor.metadata.ItemMetadata ) { java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> < ItemMetadata > java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> = this . java.util.Map<java.lang.String,java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata>> . get ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata . getName ( ) ) ; if ( java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> == null || java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> . isEmpty ( ) ) { return null ; } java.util.ListIterator<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> < ItemMetadata > java.util.ListIterator<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> = java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> . listIterator ( ) ; while ( java.util.ListIterator<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> . hasNext ( ) ) { if ( ! java.util.ListIterator<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> . next ( ) . hasSameType ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata ) ) { java.util.ListIterator<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> . remove ( ) ; } } if ( java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> . size ( ) == NUMBER ) { return java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> . get ( NUMBER ) ; } for ( ItemMetadata org.springframework.boot.configurationprocessor.metadata.ItemMetadata : java.util.List<org.springframework.boot.configurationprocessor.metadata.ItemMetadata> ) { if ( boolean ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata . getSourceType ( ) , org.springframework.boot.configurationprocessor.metadata.ItemMetadata . getSourceType ( ) ) ) { return org.springframework.boot.configurationprocessor.metadata.ItemMetadata ; } } return null ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { if ( java.lang.Object == java.lang.Object ) { return true ; } return java.lang.Object != null && java.lang.Object != null && java.lang.Object . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String java.lang.String = ( java.lang.String == null ? STRING : java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String += ( STRING . boolean ( java.lang.String ) ? java.lang.String : STRING + java.lang.String ) ; return java.lang.String ; }  <METHOD_END>
<METHOD_START> static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.Character java.lang.Character = null ; for ( char char : java.lang.String . char[] ( ) ) { if ( java.util.Set<java.lang.Character> . boolean ( char ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else if ( java.lang.Character . boolean ( char ) && java.lang.Character != null && ! java.util.Set<java.lang.Character> . boolean ( java.lang.Character ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( char ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; } java.lang.Character = char ; } return java.lang.StringBuilder . java.lang.String ( ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private static < T extends java.lang.Comparable<T> < T > > java.util.List<T> < T > java.util.List<T> ( java.util.Map<?,java.util.List<T>> < ? , java.util.List<T> < T > > java.util.Map<?,java.util.List<T>> ) { java.util.List<T> < T > java.util.List<T> = new java.util.ArrayList<T> <> ( ) ; for ( java.util.List<T> < T > java.util.List<T> : java.util.Map<,java.util.List<T>> . java.util.Collection<java.util.List<T>> ( ) ) { java.util.List<T> . boolean ( java.util.List<T> ) ; } java.util.Collections . void ( java.util.List<T> ) ; return java.util.List<T> ; }  <METHOD_END>
