<METHOD_START> public abstract org.springframework.data.mongodb.config.MongoClient org.springframework.data.mongodb.config.MongoClient ( )  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.mongodb.config.ReactiveMongoOperations org.springframework.data.mongodb.config.ReactiveMongoOperations ( ) java.lang.Exception { return new ReactiveMongoTemplate ( org.springframework.data.mongodb.config.ReactiveMongoDatabaseFactory ( ) , org.springframework.data.mongodb.config.MappingMongoConverter ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.mongodb.config.ReactiveMongoDatabaseFactory org.springframework.data.mongodb.config.ReactiveMongoDatabaseFactory ( ) { return new SimpleReactiveMongoDatabaseFactory ( org.springframework.data.mongodb.config.MongoClient ( ) , getDatabaseName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.mongodb.config.MappingMongoConverter org.springframework.data.mongodb.config.MappingMongoConverter ( ) java.lang.Exception { MappingMongoConverter org.springframework.data.mongodb.config.MappingMongoConverter = new MappingMongoConverter ( ReactiveMongoTemplate . NO_OP_REF_RESOLVER , mongoMappingContext ( ) ) ; org.springframework.data.mongodb.config.MappingMongoConverter . setCustomConversions ( customConversions ( ) ) ; return org.springframework.data.mongodb.config.MappingMongoConverter ; }  <METHOD_END>
