<METHOD_START> @ java.lang.Override protected org.springframework.cache.aspectj.ConfigurableApplicationContext org.springframework.cache.aspectj.ConfigurableApplicationContext ( ) { return new AnnotationConfigApplicationContext ( org.springframework.cache.aspectj.AspectJEnableCachingTests.EnableCachingConfig .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Bean public org.springframework.cache.aspectj.CacheManager org.springframework.cache.aspectj.CacheManager ( ) { return CacheTestUtils . createSimpleCacheManager ( STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.cache.aspectj.CacheableService<?> < ? > org.springframework.cache.aspectj.CacheableService<?> ( ) { return new DefaultCacheableService ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.cache.aspectj.CacheableService<?> < ? > org.springframework.cache.aspectj.CacheableService<?> ( ) { return new AnnotatedClassCacheableService ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Bean public org.springframework.cache.aspectj.KeyGenerator org.springframework.cache.aspectj.KeyGenerator ( ) { return new SomeKeyGenerator ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Bean public org.springframework.cache.aspectj.CacheErrorHandler org.springframework.cache.aspectj.CacheErrorHandler ( ) { return new SimpleCacheErrorHandler ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.cache.aspectj.KeyGenerator org.springframework.cache.aspectj.KeyGenerator ( ) { return new SomeCustomKeyGenerator ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.cache.aspectj.CacheManager org.springframework.cache.aspectj.CacheManager ( ) { return CacheTestUtils . createSimpleCacheManager ( STRING ) ; }  <METHOD_END>
