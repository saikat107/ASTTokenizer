<METHOD_START> @ Before public void void ( ) java.io.IOException { this . java.lang.String = java.lang.System . java.lang.String ( java.lang.String ) ; java.lang.System . java.lang.String ( java.lang.String , this . org.springframework.boot.logging.TemporaryFolder . newFolder ( ) . getAbsolutePath ( ) ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { java.lang.System . java.lang.String ( java.lang.String , this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { java.lang.System . java.lang.String ( STRING ) ; java.lang.System . java.lang.String ( STRING ) ; }  <METHOD_END>
<METHOD_START> protected final java.lang.String [] java.lang.String[] ( AbstractLoggingSystem org.springframework.boot.logging.AbstractLoggingSystem ) { return org.springframework.boot.logging.AbstractLoggingSystem . getSpringConfigLocations ( ) ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.boot.logging.LogFile org.springframework.boot.logging.LogFile ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return org.springframework.boot.logging.LogFile ( java.lang.String , java.lang.String , true ) ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.boot.logging.LogFile org.springframework.boot.logging.LogFile ( java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { LogFile org.springframework.boot.logging.LogFile = new LogFile ( java.lang.String , java.lang.String ) ; if ( boolean ) { org.springframework.boot.logging.LogFile . applyToSystemProperties ( ) ; } return org.springframework.boot.logging.LogFile ; }  <METHOD_END>
<METHOD_START> protected final java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = StringUtils . cleanPath ( java.lang.System . java.lang.String ( java.lang.String ) ) ; if ( java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - NUMBER ) ; } return java.lang.String ; }  <METHOD_END>
