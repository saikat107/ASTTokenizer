<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = HtmlUtils . htmlEscape ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; java.lang.String = HtmlUtils . htmlEscapeDecimal ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; java.lang.String = HtmlUtils . htmlEscapeHex ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = HtmlUtils . htmlUnescape ( java.lang.String ) ; assertEquals ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNull ( STRING , HtmlUtils . htmlEscape ( null ) ) ; assertEquals ( STRING , STRING , HtmlUtils . htmlEscape ( STRING ) ) ; assertEquals ( STRING , STRING , HtmlUtils . htmlEscape ( STRING ) ) ; assertEquals ( STRING , STRING , HtmlUtils . htmlEscape ( STRING ) ) ; assertEquals ( STRING , STRING , HtmlUtils . htmlEscapeDecimal ( STRING ) ) ; assertEquals ( STRING , STRING , HtmlUtils . htmlEscape ( STRING + ( char ) NUMBER ) ) ; assertEquals ( STRING , STRING , HtmlUtils . htmlEscapeDecimal ( STRING + ( char ) NUMBER ) ) ; assertEquals ( STRING , STRING , HtmlUtils . htmlEscape ( STRING + ( char ) NUMBER ) ) ; assertEquals ( STRING , STRING , HtmlUtils . htmlEscapeDecimal ( STRING + ( char ) NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) {		String utf8 = ("UTF-8");		assertNull("A null string should be converted to a null string",				HtmlUtils.htmlEscape(null, utf8));		assertEquals("An empty string should be converted to an empty string",				"", HtmlUtils.htmlEscape("", utf8));		assertEquals("A string containing no  <METHOD_END>
