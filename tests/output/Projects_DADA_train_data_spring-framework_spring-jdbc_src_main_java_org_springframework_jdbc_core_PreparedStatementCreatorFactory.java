<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.util.List<org.springframework.jdbc.core.SqlParameter> = new java.util.LinkedList <> ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int ... int[] ) { this . java.lang.String = java.lang.String ; this . java.util.List<org.springframework.jdbc.core.SqlParameter> = SqlParameter . sqlTypesToAnonymousParameterList ( int[] ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.util.List<org.springframework.jdbc.core.SqlParameter> < SqlParameter > java.util.List<org.springframework.jdbc.core.SqlParameter> ) { this . java.lang.String = java.lang.String ; this . java.util.List<org.springframework.jdbc.core.SqlParameter> = java.util.List<org.springframework.jdbc.core.SqlParameter> ; }  <METHOD_END>
<METHOD_START> public void void ( SqlParameter org.springframework.jdbc.core.SqlParameter ) { this . java.util.List<org.springframework.jdbc.core.SqlParameter> . add ( org.springframework.jdbc.core.SqlParameter ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public org.springframework.jdbc.core.PreparedStatementSetter org.springframework.jdbc.core.PreparedStatementSetter ( java.util.List<?> < ? > java.util.List<?> ) { return new org.springframework.jdbc.core.PreparedStatementCreatorFactory.PreparedStatementCreatorImpl ( java.util.List<> != null ? java.util.List<> : java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.jdbc.core.PreparedStatementSetter org.springframework.jdbc.core.PreparedStatementSetter ( java.lang.Object [] java.lang.Object[] ) { return new org.springframework.jdbc.core.PreparedStatementCreatorFactory.PreparedStatementCreatorImpl ( java.lang.Object[] != null ? java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) : java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.jdbc.core.PreparedStatementCreator org.springframework.jdbc.core.PreparedStatementCreator ( java.util.List<?> < ? > java.util.List<?> ) { return new org.springframework.jdbc.core.PreparedStatementCreatorFactory.PreparedStatementCreatorImpl ( java.util.List<> != null ? java.util.List<> : java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.jdbc.core.PreparedStatementCreator org.springframework.jdbc.core.PreparedStatementCreator ( java.lang.Object [] java.lang.Object[] ) { return new org.springframework.jdbc.core.PreparedStatementCreatorFactory.PreparedStatementCreatorImpl ( java.lang.Object[] != null ? java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) : java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.jdbc.core.PreparedStatementCreator org.springframework.jdbc.core.PreparedStatementCreator ( java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] ) { return new org.springframework.jdbc.core.PreparedStatementCreatorFactory.PreparedStatementCreatorImpl ( java.lang.String , java.lang.Object[] != null ? java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) : java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.util.List<?> < ? > java.util.List<?> ) { this( java.lang.String , java.util.List<> ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.util.List<?> < ? > java.util.List<?> ) { this . java.lang.String = java.lang.String ; Assert . notNull ( java.util.List<> , STRING ) ; this . java.util.List<?> = java.util.List<> ; if ( this . java.util.List<> . int ( ) != java.util.List<org.springframework.jdbc.core.SqlParameter> . size ( ) ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; for ( int int = NUMBER ; int < java.util.List<> . int ( ) ; int ++ ) { java.lang.Object java.lang.Object = java.util.List<> . get ( int ) ; if ( java.lang.Object instanceof SqlParameterValue ) { java.util.Set<java.lang.String> . boolean ( ( ( SqlParameterValue ) java.lang.Object ) . getName ( ) ) ; } else { java.util.Set<java.lang.String> . boolean ( STRING + int ) ; } } if ( java.util.Set<java.lang.String> . int ( ) != java.util.List<org.springframework.jdbc.core.SqlParameter> . size ( ) ) { throw new InvalidDataAccessApiUsageException ( STRING + java.lang.String + STRING + java.util.Set<java.lang.String> . int ( ) + STRING + java.util.List<org.springframework.jdbc.core.SqlParameter> . size ( ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.sql.PreparedStatement java.sql.PreparedStatement ( java.sql.Connection java.sql.Connection ) throws java.sql.SQLException { java.sql.PreparedStatement java.sql.PreparedStatement ; if ( java.lang.String[] != null || boolean ) { if ( java.lang.String[] != null ) { java.sql.PreparedStatement = java.sql.Connection . java.sql.PreparedStatement ( this . java.lang.String , java.lang.String[] ) ; } else { java.sql.PreparedStatement = java.sql.Connection . java.sql.PreparedStatement ( this . java.lang.String , java.sql.PreparedStatement . int ) ; } } else if ( int == java.sql.ResultSet . int && ! boolean ) { java.sql.PreparedStatement = java.sql.Connection . java.sql.PreparedStatement ( this . java.lang.String ) ; } else { java.sql.PreparedStatement = java.sql.Connection . java.sql.PreparedStatement ( this . java.lang.String , int , boolean ? java.sql.ResultSet . int : java.sql.ResultSet . int ) ; } void ( java.sql.PreparedStatement ) ; return java.sql.PreparedStatement ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.sql.PreparedStatement java.sql.PreparedStatement ) throws java.sql.SQLException { int int = NUMBER ; for ( int int = NUMBER ; int < this . java.util.List<> . int ( ) ; int ++ ) { java.lang.Object java.lang.Object = this . java.util.List<> . get ( int ) ; SqlParameter org.springframework.jdbc.core.SqlParameter ; if ( java.lang.Object instanceof SqlParameterValue ) { SqlParameterValue org.springframework.jdbc.core.SqlParameterValue = ( SqlParameterValue ) java.lang.Object ; java.lang.Object = org.springframework.jdbc.core.SqlParameterValue . getValue ( ) ; org.springframework.jdbc.core.SqlParameter = org.springframework.jdbc.core.SqlParameterValue ; } else { if ( java.util.List<org.springframework.jdbc.core.SqlParameter> . size ( ) <= int ) { throw new InvalidDataAccessApiUsageException ( STRING + java.lang.String + STRING + ( int + NUMBER ) + STRING + java.util.List<org.springframework.jdbc.core.SqlParameter> . size ( ) + STRING ) ; } org.springframework.jdbc.core.SqlParameter = java.util.List<org.springframework.jdbc.core.SqlParameter> . get ( int ) ; } if ( java.lang.Object instanceof java.util.Collection && org.springframework.jdbc.core.SqlParameter . getSqlType ( ) != java.sql.Types . int ) { java.util.Collection<?> < ? > java.util.Collection<?> = ( java.util.Collection<?> < ? > ) java.lang.Object ; for ( java.lang.Object java.lang.Object : java.util.Collection<> ) { if ( java.lang.Object instanceof java.lang.Object [] ) { java.lang.Object [] java.lang.Object[] = ( ( java.lang.Object [] ) java.lang.Object ) ; for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { StatementCreatorUtils . setParameterValue ( java.sql.PreparedStatement , int ++ , org.springframework.jdbc.core.SqlParameter , java.lang.Object ) ; } } else { StatementCreatorUtils . setParameterValue ( java.sql.PreparedStatement , int ++ , org.springframework.jdbc.core.SqlParameter , java.lang.Object ) ; } } } else { StatementCreatorUtils . setParameterValue ( java.sql.PreparedStatement , int ++ , org.springframework.jdbc.core.SqlParameter , java.lang.Object ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { StatementCreatorUtils . cleanupParameters ( this . java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + java.lang.String + STRING + this . java.util.List<> ; }  <METHOD_END>
