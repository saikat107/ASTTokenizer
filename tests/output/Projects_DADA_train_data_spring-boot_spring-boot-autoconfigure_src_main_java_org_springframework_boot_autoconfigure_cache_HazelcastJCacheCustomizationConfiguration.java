<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration.HazelcastPropertiesCustomizer org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration.HazelcastPropertiesCustomizer ( ObjectProvider < HazelcastInstance > org.springframework.boot.autoconfigure.cache.ObjectProvider<org.springframework.boot.autoconfigure.cache.HazelcastInstance> ) { return new org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration.HazelcastPropertiesCustomizer ( org.springframework.boot.autoconfigure.cache.ObjectProvider<org.springframework.boot.autoconfigure.cache.HazelcastInstance> . getIfUnique ( ) ) ; }  <METHOD_END>
<METHOD_START> void ( HazelcastInstance org.springframework.boot.autoconfigure.cache.HazelcastInstance ) { this . org.springframework.boot.autoconfigure.cache.HazelcastInstance = org.springframework.boot.autoconfigure.cache.HazelcastInstance ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( CacheProperties org.springframework.boot.autoconfigure.cache.CacheProperties , java.util.Properties java.util.Properties ) { Resource org.springframework.boot.autoconfigure.cache.Resource = org.springframework.boot.autoconfigure.cache.CacheProperties . resolveConfigLocation ( org.springframework.boot.autoconfigure.cache.CacheProperties . getJcache ( ) . getConfig ( ) ) ; if ( org.springframework.boot.autoconfigure.cache.Resource != null ) { java.util.Properties . java.lang.Object ( STRING , java.net.URI ( org.springframework.boot.autoconfigure.cache.Resource ) . toString ( ) ) ; } else if ( this . org.springframework.boot.autoconfigure.cache.HazelcastInstance != null ) { java.util.Properties . java.lang.Object ( STRING , this . org.springframework.boot.autoconfigure.cache.HazelcastInstance ) ; } }  <METHOD_END>
<METHOD_START> private static java.net.URI java.net.URI ( Resource org.springframework.boot.autoconfigure.cache.Resource ) { try { return org.springframework.boot.autoconfigure.cache.Resource . getURI ( ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.boot.autoconfigure.cache.Resource , java.io.IOException ) ; } }  <METHOD_END>
