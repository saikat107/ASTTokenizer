<METHOD_START> @ Before public void void ( ) { this . org.springframework.test.web.servlet.samples.context.MockMvc = MockMvcBuilders . webAppContextSetup ( this . org.springframework.test.web.servlet.samples.context.WebApplicationContext ) . alwaysExpect ( status ( ) . isOk ( ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.test.web.servlet.samples.context.MockMvc . perform ( get ( STRING ) ) . andExpect ( forwardedUrl ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.test.web.servlet.samples.context.MockMvc . perform ( get ( STRING ) ) . andExpect ( content ( ) . contentType ( STRING ) ) . andExpect ( content ( ) . string ( containsString ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.test.web.servlet.samples.context.MockMvc . perform ( get ( STRING ) ) . andExpect ( handler ( ) . handlerType ( DefaultServletHttpRequestHandler .class ) ) . andExpect ( forwardedUrl ( STRING ) ) ; }  <METHOD_END>
