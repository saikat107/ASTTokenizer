<METHOD_START> @ Before public void void ( ) java.lang.Exception { PageContext org.springframework.web.servlet.tags.PageContext = createPageContext ( ) ; org.springframework.web.servlet.tags.ParamTag . setPageContext ( org.springframework.web.servlet.tags.PageContext ) ; org.springframework.web.servlet.tags.ParamTag . setParent ( org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.ParamTag . setName ( STRING ) ; org.springframework.web.servlet.tags.ParamTag . setValue ( STRING ) ; int int = org.springframework.web.servlet.tags.ParamTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.ParamTag . setName ( STRING ) ; org.springframework.web.servlet.tags.ParamTag . setBodyContent ( new MockBodyContent ( STRING , new MockHttpServletResponse ( ) ) ) ; int int = org.springframework.web.servlet.tags.ParamTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.ParamTag . setName ( STRING ) ; int int = org.springframework.web.servlet.tags.ParamTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getName ( ) ) ; assertNull ( org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.ParamTag . setName ( STRING ) ; org.springframework.web.servlet.tags.ParamTag . setValue ( null ) ; int int = org.springframework.web.servlet.tags.ParamTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getName ( ) ) ; assertNull ( org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.ParamTag . setName ( STRING ) ; org.springframework.web.servlet.tags.ParamTag . setValue ( STRING ) ; int int = org.springframework.web.servlet.tags.ParamTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getValue ( ) ) ; org.springframework.web.servlet.tags.ParamTag . release ( ) ; org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag = new org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag ( ) ; org.springframework.web.servlet.tags.ParamTag . setPageContext ( createPageContext ( ) ) ; org.springframework.web.servlet.tags.ParamTag . setParent ( org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag ) ; org.springframework.web.servlet.tags.ParamTag . setName ( STRING ) ; org.springframework.web.servlet.tags.ParamTag . setBodyContent ( new MockBodyContent ( STRING , new MockHttpServletResponse ( ) ) ) ; int = org.springframework.web.servlet.tags.ParamTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.ParamTagTests.MockParamSupportTag . org.springframework.web.servlet.tags.Param ( ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = JspException .class ) public void void ( ) java.lang.Exception { org.springframework.web.servlet.tags.ParamTag . setName ( STRING ) ; org.springframework.web.servlet.tags.ParamTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.ParamTag . setParent ( null ) ; org.springframework.web.servlet.tags.ParamTag . doEndTag ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Param org.springframework.web.servlet.tags.Param ) { this . org.springframework.web.servlet.tags.Param = org.springframework.web.servlet.tags.Param ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.tags.Param org.springframework.web.servlet.tags.Param ( ) { return org.springframework.web.servlet.tags.Param ; }  <METHOD_END>
