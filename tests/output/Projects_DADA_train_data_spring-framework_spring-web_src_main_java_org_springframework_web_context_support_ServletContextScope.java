<METHOD_START> public void ( ServletContext org.springframework.web.context.support.ServletContext ) { Assert . notNull ( org.springframework.web.context.support.ServletContext , STRING ) ; this . org.springframework.web.context.support.ServletContext = org.springframework.web.context.support.ServletContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , ObjectFactory < ? > org.springframework.web.context.support.ObjectFactory<?> ) { java.lang.Object java.lang.Object = this . org.springframework.web.context.support.ServletContext . getAttribute ( java.lang.String ) ; if ( java.lang.Object == null ) { java.lang.Object = org.springframework.web.context.support.ObjectFactory<> . getObject ( ) ; this . org.springframework.web.context.support.ServletContext . setAttribute ( java.lang.String , java.lang.Object ) ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { java.lang.Object java.lang.Object = this . org.springframework.web.context.support.ServletContext . getAttribute ( java.lang.String ) ; if ( java.lang.Object != null ) { this . org.springframework.web.context.support.ServletContext . removeAttribute ( java.lang.String ) ; this . java.util.Map<java.lang.String,java.lang.Runnable> . java.lang.Runnable ( java.lang.String ) ; return java.lang.Object ; } else { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Runnable java.lang.Runnable ) { this . java.util.Map<java.lang.String,java.lang.Runnable> . java.lang.Runnable ( java.lang.String , java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { for ( java.lang.Runnable java.lang.Runnable : this . java.util.Map<java.lang.String,java.lang.Runnable> . java.util.Collection<java.lang.Runnable> ( ) ) { java.lang.Runnable . void ( ) ; } this . java.util.Map<java.lang.String,java.lang.Runnable> . void ( ) ; }  <METHOD_END>
