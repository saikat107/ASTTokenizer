<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element ) { return ( ( StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ) ? MarshallingWebServiceOutboundGateway .class : SimpleWebServiceOutboundGateway .class ) . getName ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.ws.config.BeanDefinitionBuilder org.springframework.integration.ws.config.BeanDefinitionBuilder ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.ws.config.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.ws.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( this . java.lang.String ( org.w3c.dom.Element ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING ) ; if ( StringUtils . hasText ( java.lang.String ) == StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { if ( ! CollectionUtils . isEmpty ( java.util.List<org.w3c.dom.Element> ) ) { org.springframework.integration.ws.config.ParserContext . getReaderContext ( ) . error ( STRING + STRING , org.w3c.dom.Element ) ; } org.springframework.integration.ws.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } else { org.springframework.integration.ws.config.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; if ( ! CollectionUtils . isEmpty ( java.util.List<org.w3c.dom.Element> ) ) { ManagedMap < java.lang.String , java.lang.Object > org.springframework.integration.ws.config.ManagedMap<java.lang.String,java.lang.Object> = new ManagedMap < java.lang.String , java.lang.Object > ( ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; BeanDefinitionBuilder org.springframework.integration.ws.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ExpressionFactoryBean .class ) ; org.springframework.integration.ws.config.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; org.springframework.integration.ws.config.ManagedMap<java.lang.String,java.lang.Object> . put ( java.lang.String , org.springframework.integration.ws.config.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; } org.springframework.integration.ws.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.ws.config.ManagedMap<java.lang.String,java.lang.Object> ) ; } } IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ws.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ws.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ws.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ws.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ws.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; this . void ( org.springframework.integration.ws.config.BeanDefinitionBuilder , org.w3c.dom.Element , org.springframework.integration.ws.config.ParserContext ) ; IntegrationNamespaceUtils . configureHeaderMapper ( org.w3c.dom.Element , org.springframework.integration.ws.config.BeanDefinitionBuilder , org.springframework.integration.ws.config.ParserContext , DefaultSoapHeaderMapper .class , null ) ; return org.springframework.integration.ws.config.BeanDefinitionBuilder ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( BeanDefinitionBuilder org.springframework.integration.ws.config.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.ws.config.ParserContext ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } } else { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } else { org.springframework.integration.ws.config.BeanDefinitionBuilder . addConstructorArgValue ( null ) ; } } IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ws.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; return; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ws.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) && StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) && StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) || StringUtils . hasText ( java.lang.String ) ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ws.config.ParserContext . getReaderContext ( ) . warning ( STRING + STRING , org.w3c.dom.Element ) ; } } else { IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ws.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; } }  <METHOD_END>
