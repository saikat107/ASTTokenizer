<METHOD_START> @ Before public void void ( ) { this . org.springframework.messaging.converter.SimpleMessageConverter = new SimpleMessageConverter ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNull ( this . org.springframework.messaging.converter.SimpleMessageConverter . toMessage ( null , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MessageHeaders org.springframework.messaging.converter.MessageHeaders = new MessageHeaders ( java.util.Collections .< java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( STRING , STRING ) ) ; Message < ? > org.springframework.messaging.converter.Message<?> = this . org.springframework.messaging.converter.SimpleMessageConverter . toMessage ( STRING , org.springframework.messaging.converter.MessageHeaders ) ; assertEquals ( STRING , org.springframework.messaging.converter.Message<> . getPayload ( ) ) ; assertEquals ( STRING , org.springframework.messaging.converter.Message<> . getHeaders ( ) . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MessageHeaderAccessor org.springframework.messaging.converter.MessageHeaderAccessor = new MessageHeaderAccessor ( ) ; org.springframework.messaging.converter.MessageHeaderAccessor . setHeader ( STRING , STRING ) ; org.springframework.messaging.converter.MessageHeaderAccessor . setLeaveMutable ( true ) ; MessageHeaders org.springframework.messaging.converter.MessageHeaders = org.springframework.messaging.converter.MessageHeaderAccessor . getMessageHeaders ( ) ; Message < ? > org.springframework.messaging.converter.Message<?> = this . org.springframework.messaging.converter.SimpleMessageConverter . toMessage ( STRING , org.springframework.messaging.converter.MessageHeaders ) ; assertEquals ( STRING , org.springframework.messaging.converter.Message<> . getPayload ( ) ) ; assertSame ( org.springframework.messaging.converter.MessageHeaders , org.springframework.messaging.converter.Message<> . getHeaders ( ) ) ; assertEquals ( STRING , org.springframework.messaging.converter.Message<> . getHeaders ( ) . get ( STRING ) ) ; }  <METHOD_END>
