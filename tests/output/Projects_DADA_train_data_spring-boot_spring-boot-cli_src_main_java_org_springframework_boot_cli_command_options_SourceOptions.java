<METHOD_START> public void ( OptionSet org.springframework.boot.cli.command.options.OptionSet ) { this( org.springframework.boot.cli.command.options.OptionSet , null ); }  <METHOD_END>
<METHOD_START> public void ( java.util.List<?> < ? > java.util.List<?> ) { this( java.util.List<> , null ); }  <METHOD_END>
<METHOD_START> public void ( OptionSet org.springframework.boot.cli.command.options.OptionSet , java.lang.ClassLoader java.lang.ClassLoader ) { this( org.springframework.boot.cli.command.options.OptionSet . nonOptionArguments ( ) , java.lang.ClassLoader ); }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> , java.lang.ClassLoader java.lang.ClassLoader ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; int int = NUMBER ; for ( java.lang.Object java.lang.Object : java.util.List<> ) { if ( java.lang.Object instanceof java.lang.String ) { java.lang.String java.lang.String = ( java.lang.String ) java.lang.Object ; if ( STRING . boolean ( java.lang.String ) ) { break; } java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; java.io.File java.io.File = new java.io.File ( java.lang.String ) ; if ( java.io.File . boolean ( ) ) { java.util.List<java.lang.String> . boolean ( java.io.File . java.io.File ( ) . java.net.URI ( ) . java.lang.String ( ) ) ; } else if ( ! boolean ( java.io.File ) ) { java.util.List<java.lang.String> . boolean ( ResourceUtils . getUrls ( java.lang.String , java.lang.ClassLoader ) ) ; } for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { if ( boolean ( java.lang.String ) ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } if ( boolean ( java.lang.String ) ) { if ( java.util.List<java.lang.String> . boolean ( ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String ) ; } else { int ++ ; } } } } this . java.util.List<?> = java.util.Collections . java.util.List<> ( java.util.List<> . java.util.List<> ( int , java.util.List<> . int ( ) ) ) ; Assert . isTrue ( ! java.util.List<java.lang.String> . boolean ( ) , STRING ) ; this . java.util.List<java.lang.String> = java.util.Collections . java.util.List<java.lang.String> ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.io.File java.io.File ) { return boolean ( ) && java.io.File . boolean ( ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return java.io.File . char == '\\' ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.String java.lang.String ) { return java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<?> < ? > java.util.List<?> ( ) { return this . java.util.List<> ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.util.List<> . java.lang.String[] ( new java.lang.String [ this . java.util.List<> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return this . java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ this . java.util.List<java.lang.String> . int ( ) ] ) ; }  <METHOD_END>
