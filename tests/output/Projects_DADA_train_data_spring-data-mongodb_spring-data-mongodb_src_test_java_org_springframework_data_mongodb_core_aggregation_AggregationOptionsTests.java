<METHOD_START> @ Before public void void ( ) { org.springframework.data.mongodb.core.aggregation.AggregationOptions = newAggregationOptions ( ) . explain ( true ) . cursorBatchSize ( NUMBER ) . allowDiskUse ( true ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.mongodb.core.aggregation.AggregationOptions . isAllowDiskUse ( ) , is ( true ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.AggregationOptions . isExplain ( ) , is ( true ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.AggregationOptions . getCursor ( ) , is ( new Document ( STRING , NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , new Document ( STRING , NUMBER ) ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , true ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , true ) ; org.springframework.data.mongodb.core.aggregation.AggregationOptions = AggregationOptions . fromDocument ( org.springframework.data.mongodb.core.aggregation.Document ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.AggregationOptions . isAllowDiskUse ( ) , is ( true ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.AggregationOptions . isExplain ( ) , is ( true ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.AggregationOptions . getCursor ( ) , is ( new Document ( STRING , NUMBER ) ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.AggregationOptions . getCursorBatchSize ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.mongodb.core.aggregation.AggregationOptions . toDocument ( ) , is ( Document . parse ( STRING ) ) ) ; }  <METHOD_END>
