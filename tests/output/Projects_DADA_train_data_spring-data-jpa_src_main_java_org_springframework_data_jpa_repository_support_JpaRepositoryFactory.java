<METHOD_START> public void ( EntityManager org.springframework.data.jpa.repository.support.EntityManager ) { Assert . notNull ( org.springframework.data.jpa.repository.support.EntityManager , STRING ) ; this . org.springframework.data.jpa.repository.support.EntityManager = org.springframework.data.jpa.repository.support.EntityManager ; this . org.springframework.data.jpa.repository.support.QueryExtractor = PersistenceProvider . fromEntityManager ( org.springframework.data.jpa.repository.support.EntityManager ) ; this . org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor = new CrudMethodMetadataPostProcessor ( ) ; addRepositoryProxyPostProcessor ( org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { super. setBeanClassLoader ( java.lang.ClassLoader ) ; this . org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor . setBeanClassLoader ( java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( RepositoryInformation org.springframework.data.jpa.repository.support.RepositoryInformation ) { SimpleJpaRepository < ? , ? > org.springframework.data.jpa.repository.support.SimpleJpaRepository<?,?> = org.springframework.data.jpa.repository.support.SimpleJpaRepository ( org.springframework.data.jpa.repository.support.RepositoryInformation , org.springframework.data.jpa.repository.support.EntityManager ) ; org.springframework.data.jpa.repository.support.SimpleJpaRepository<,> . setRepositoryMethodMetadata ( org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor . getCrudMethodMetadata ( ) ) ; return org.springframework.data.jpa.repository.support.SimpleJpaRepository<,> ; }  <METHOD_END>
<METHOD_START> protected < T , ID extends java.io.Serializable > org.springframework.data.jpa.repository.support.SimpleJpaRepository<?,?> < ? , ? > org.springframework.data.jpa.repository.support.SimpleJpaRepository<?,?> ( RepositoryInformation org.springframework.data.jpa.repository.support.RepositoryInformation , EntityManager org.springframework.data.jpa.repository.support.EntityManager ) { JpaEntityInformation < ? , java.io.Serializable > org.springframework.data.jpa.repository.support.JpaEntityInformation<?,java.io.Serializable> = org.springframework.data.jpa.repository.support.JpaEntityInformation ( org.springframework.data.jpa.repository.support.RepositoryInformation . getDomainType ( ) ) ; return getTargetRepositoryViaReflection ( org.springframework.data.jpa.repository.support.RepositoryInformation , org.springframework.data.jpa.repository.support.JpaEntityInformation<,java.io.Serializable> , org.springframework.data.jpa.repository.support.EntityManager ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( RepositoryMetadata org.springframework.data.jpa.repository.support.RepositoryMetadata ) { if ( boolean ( org.springframework.data.jpa.repository.support.RepositoryMetadata . getRepositoryInterface ( ) ) ) { return QuerydslJpaRepository .class ; } else { return SimpleJpaRepository .class ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return QUERY_DSL_PRESENT && QuerydslPredicateExecutor .class . boolean ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Optional<org.springframework.data.jpa.repository.support.QueryLookupStrategy> < QueryLookupStrategy > java.util.Optional<org.springframework.data.jpa.repository.support.QueryLookupStrategy> ( Key org.springframework.data.jpa.repository.support.Key , EvaluationContextProvider org.springframework.data.jpa.repository.support.EvaluationContextProvider ) { return java.util.Optional . java.util.Optional ( JpaQueryLookupStrategy . create ( org.springframework.data.jpa.repository.support.EntityManager , org.springframework.data.jpa.repository.support.Key , org.springframework.data.jpa.repository.support.QueryExtractor , org.springframework.data.jpa.repository.support.EvaluationContextProvider ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public < T , ID extends java.io.Serializable > org.springframework.data.jpa.repository.support.JpaEntityInformation<T,ID> < T , ID > org.springframework.data.jpa.repository.support.JpaEntityInformation<T,ID> ( java.lang.Class<T> < T > java.lang.Class<T> ) { return ( JpaEntityInformation < T , ID > ) JpaEntityInformationSupport . getEntityInformation ( java.lang.Class<T> , org.springframework.data.jpa.repository.support.EntityManager ) ; }  <METHOD_END>
