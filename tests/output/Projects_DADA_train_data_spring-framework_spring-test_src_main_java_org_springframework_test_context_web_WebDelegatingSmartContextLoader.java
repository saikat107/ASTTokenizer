<METHOD_START> public void ( ) { if ( boolean ) { try { java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . forName ( java.lang.String , org.springframework.test.context.web.WebDelegatingSmartContextLoader .class . java.lang.ClassLoader ( ) ) ; this . org.springframework.test.context.web.SmartContextLoader = ( SmartContextLoader ) BeanUtils . instantiateClass ( java.lang.Class<> ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { throw new java.lang.IllegalStateException ( STRING + STRING + java.lang.String , java.lang.Throwable ) ; } } else { this . org.springframework.test.context.web.SmartContextLoader = new GenericXmlWebContextLoader ( ) ; } this . org.springframework.test.context.web.SmartContextLoader = new AnnotationConfigWebContextLoader ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.test.context.web.SmartContextLoader org.springframework.test.context.web.SmartContextLoader ( ) { return this . org.springframework.test.context.web.SmartContextLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.test.context.web.SmartContextLoader org.springframework.test.context.web.SmartContextLoader ( ) { return this . org.springframework.test.context.web.SmartContextLoader ; }  <METHOD_END>
