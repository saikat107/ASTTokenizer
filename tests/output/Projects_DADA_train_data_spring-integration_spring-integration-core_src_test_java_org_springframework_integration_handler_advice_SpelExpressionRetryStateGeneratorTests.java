<METHOD_START> @ Test public void void ( ) { SpelExpressionRetryStateGenerator org.springframework.integration.handler.advice.SpelExpressionRetryStateGenerator = new SpelExpressionRetryStateGenerator ( STRING ) ; RetryState org.springframework.integration.handler.advice.RetryState = org.springframework.integration.handler.advice.SpelExpressionRetryStateGenerator . determineRetryState ( org.springframework.integration.handler.advice.Message<java.lang.String> ) ; assertEquals ( STRING , org.springframework.integration.handler.advice.RetryState . getKey ( ) ) ; assertFalse ( ( ( DefaultRetryState ) org.springframework.integration.handler.advice.RetryState ) . isForceRefresh ( ) ) ; assertTrue ( org.springframework.integration.handler.advice.RetryState . rollbackFor ( new java.lang.RuntimeException ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RetryState org.springframework.integration.handler.advice.RetryState = org.springframework.integration.handler.advice.RetryStateGenerator . determineRetryState ( org.springframework.integration.handler.advice.Message<java.lang.String> ) ; assertEquals ( STRING , org.springframework.integration.handler.advice.RetryState . getKey ( ) ) ; assertFalse ( ( ( DefaultRetryState ) org.springframework.integration.handler.advice.RetryState ) . isForceRefresh ( ) ) ; assertTrue ( org.springframework.integration.handler.advice.RetryState . rollbackFor ( new java.lang.RuntimeException ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SpelExpressionRetryStateGenerator org.springframework.integration.handler.advice.SpelExpressionRetryStateGenerator = new SpelExpressionRetryStateGenerator ( STRING , STRING ) ; RetryState org.springframework.integration.handler.advice.RetryState = org.springframework.integration.handler.advice.SpelExpressionRetryStateGenerator . determineRetryState ( org.springframework.integration.handler.advice.Message<java.lang.String> ) ; assertEquals ( STRING , org.springframework.integration.handler.advice.RetryState . getKey ( ) ) ; assertTrue ( ( ( DefaultRetryState ) org.springframework.integration.handler.advice.RetryState ) . isForceRefresh ( ) ) ; assertTrue ( org.springframework.integration.handler.advice.RetryState . rollbackFor ( new java.lang.RuntimeException ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SpelExpressionRetryStateGenerator org.springframework.integration.handler.advice.SpelExpressionRetryStateGenerator = new SpelExpressionRetryStateGenerator ( STRING , STRING ) ; RetryState org.springframework.integration.handler.advice.RetryState = org.springframework.integration.handler.advice.SpelExpressionRetryStateGenerator . determineRetryState ( org.springframework.integration.handler.advice.Message<java.lang.String> ) ; assertEquals ( STRING , org.springframework.integration.handler.advice.RetryState . getKey ( ) ) ; assertFalse ( ( ( DefaultRetryState ) org.springframework.integration.handler.advice.RetryState ) . isForceRefresh ( ) ) ; assertTrue ( org.springframework.integration.handler.advice.RetryState . rollbackFor ( new java.lang.RuntimeException ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SpelExpressionRetryStateGenerator org.springframework.integration.handler.advice.SpelExpressionRetryStateGenerator = new SpelExpressionRetryStateGenerator ( STRING , STRING ) ; RetryState org.springframework.integration.handler.advice.RetryState = org.springframework.integration.handler.advice.SpelExpressionRetryStateGenerator . determineRetryState ( org.springframework.integration.handler.advice.Message<java.lang.String> ) ; assertEquals ( STRING , org.springframework.integration.handler.advice.RetryState . getKey ( ) ) ; assertTrue ( ( ( DefaultRetryState ) org.springframework.integration.handler.advice.RetryState ) . isForceRefresh ( ) ) ; assertTrue ( org.springframework.integration.handler.advice.RetryState . rollbackFor ( new java.lang.RuntimeException ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SpelExpressionRetryStateGenerator org.springframework.integration.handler.advice.SpelExpressionRetryStateGenerator = new SpelExpressionRetryStateGenerator ( STRING ) ; org.springframework.integration.handler.advice.SpelExpressionRetryStateGenerator . setClassifier ( new ClassifierSupport < java.lang.Throwable , java.lang.Boolean > ( false ) ) ; RetryState org.springframework.integration.handler.advice.RetryState = org.springframework.integration.handler.advice.SpelExpressionRetryStateGenerator . determineRetryState ( org.springframework.integration.handler.advice.Message<java.lang.String> ) ; assertEquals ( STRING , org.springframework.integration.handler.advice.RetryState . getKey ( ) ) ; assertFalse ( ( ( DefaultRetryState ) org.springframework.integration.handler.advice.RetryState ) . isForceRefresh ( ) ) ; assertFalse ( org.springframework.integration.handler.advice.RetryState . rollbackFor ( new java.lang.RuntimeException ( ) ) ) ; }  <METHOD_END>
