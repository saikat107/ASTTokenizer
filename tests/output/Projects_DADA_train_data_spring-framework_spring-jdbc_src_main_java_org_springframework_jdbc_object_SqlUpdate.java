<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( javax.sql.DataSource javax.sql.DataSource , java.lang.String java.lang.String ) { setDataSource ( javax.sql.DataSource ) ; setSql ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( javax.sql.DataSource javax.sql.DataSource , java.lang.String java.lang.String , int [] int[] ) { setDataSource ( javax.sql.DataSource ) ; setSql ( java.lang.String ) ; setTypes ( int[] ) ; }  <METHOD_END>
<METHOD_START> public void ( javax.sql.DataSource javax.sql.DataSource , java.lang.String java.lang.String , int [] int[] , int int ) { setDataSource ( javax.sql.DataSource ) ; setSql ( java.lang.String ) ; setTypes ( int[] ) ; this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> protected void void ( int int ) throws org.springframework.jdbc.object.JdbcUpdateAffectedIncorrectNumberOfRowsException { if ( this . int > NUMBER && int > this . int ) { throw new JdbcUpdateAffectedIncorrectNumberOfRowsException ( getSql ( ) , this . int , int ) ; } if ( this . int > NUMBER && int != this . int ) { throw new JdbcUpdateAffectedIncorrectNumberOfRowsException ( getSql ( ) , this . int , int ) ; } }  <METHOD_END>
<METHOD_START> public int int ( java.lang.Object ... java.lang.Object[] ) throws org.springframework.jdbc.object.DataAccessException { validateParameters ( java.lang.Object[] ) ; int int = getJdbcTemplate ( ) . update ( newPreparedStatementCreator ( java.lang.Object[] ) ) ; void ( int ) ; return int ; }  <METHOD_END>
<METHOD_START> public int int ( java.lang.Object [] java.lang.Object[] , KeyHolder org.springframework.jdbc.object.KeyHolder ) throws org.springframework.jdbc.object.DataAccessException { if ( ! isReturnGeneratedKeys ( ) && getGeneratedKeysColumnNames ( ) == null ) { throw new InvalidDataAccessApiUsageException ( STRING + STRING + STRING ) ; } validateParameters ( java.lang.Object[] ) ; int int = getJdbcTemplate ( ) . update ( newPreparedStatementCreator ( java.lang.Object[] ) , org.springframework.jdbc.object.KeyHolder ) ; void ( int ) ; return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) org.springframework.jdbc.object.DataAccessException { return int ( ( java.lang.Object [] ) null ) ; }  <METHOD_END>
<METHOD_START> public int int ( int int ) throws org.springframework.jdbc.object.DataAccessException { return int ( new java.lang.Object [] { int } ) ; }  <METHOD_END>
<METHOD_START> public int int ( int int , int int ) throws org.springframework.jdbc.object.DataAccessException { return int ( new java.lang.Object [] { int , int } ) ; }  <METHOD_END>
<METHOD_START> public int int ( long long ) throws org.springframework.jdbc.object.DataAccessException { return int ( new java.lang.Object [] { long } ) ; }  <METHOD_END>
<METHOD_START> public int int ( long long , long long ) throws org.springframework.jdbc.object.DataAccessException { return int ( new java.lang.Object [] { long , long } ) ; }  <METHOD_END>
<METHOD_START> public int int ( java.lang.String java.lang.String ) throws org.springframework.jdbc.object.DataAccessException { return int ( new java.lang.Object [] { java.lang.String } ) ; }  <METHOD_END>
<METHOD_START> public int int ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws org.springframework.jdbc.object.DataAccessException { return int ( new java.lang.Object [] { java.lang.String , java.lang.String } ) ; }  <METHOD_END>
<METHOD_START> public int int ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) throws org.springframework.jdbc.object.DataAccessException { validateNamedParameters ( java.util.Map<java.lang.String,> ) ; ParsedSql org.springframework.jdbc.object.ParsedSql = getParsedSql ( ) ; MapSqlParameterSource org.springframework.jdbc.object.MapSqlParameterSource = new MapSqlParameterSource ( java.util.Map<java.lang.String,> ) ; java.lang.String java.lang.String = NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.object.ParsedSql , org.springframework.jdbc.object.MapSqlParameterSource ) ; java.lang.Object [] java.lang.Object[] = NamedParameterUtils . buildValueArray ( org.springframework.jdbc.object.ParsedSql , org.springframework.jdbc.object.MapSqlParameterSource , getDeclaredParameters ( ) ) ; int int = getJdbcTemplate ( ) . update ( newPreparedStatementCreator ( java.lang.String , java.lang.Object[] ) ) ; void ( int ) ; return int ; }  <METHOD_END>
<METHOD_START> public int int ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> , KeyHolder org.springframework.jdbc.object.KeyHolder ) throws org.springframework.jdbc.object.DataAccessException { validateNamedParameters ( java.util.Map<java.lang.String,> ) ; ParsedSql org.springframework.jdbc.object.ParsedSql = getParsedSql ( ) ; MapSqlParameterSource org.springframework.jdbc.object.MapSqlParameterSource = new MapSqlParameterSource ( java.util.Map<java.lang.String,> ) ; java.lang.String java.lang.String = NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.object.ParsedSql , org.springframework.jdbc.object.MapSqlParameterSource ) ; java.lang.Object [] java.lang.Object[] = NamedParameterUtils . buildValueArray ( org.springframework.jdbc.object.ParsedSql , org.springframework.jdbc.object.MapSqlParameterSource , getDeclaredParameters ( ) ) ; int int = getJdbcTemplate ( ) . update ( newPreparedStatementCreator ( java.lang.String , java.lang.Object[] ) , org.springframework.jdbc.object.KeyHolder ) ; void ( int ) ; return int ; }  <METHOD_END>
