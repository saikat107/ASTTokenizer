<METHOD_START> @ Test public void void ( ) { MailMessage org.springframework.data.jpa.repository.support.MailMessage = new MailMessage ( ) ; org.springframework.data.jpa.repository.support.MailMessage . setContent ( STRING ) ; MailSender org.springframework.data.jpa.repository.support.MailSender = new MailSender ( STRING ) ; org.springframework.data.jpa.repository.support.MailMessage . setMailSender ( org.springframework.data.jpa.repository.support.MailSender ) ; MailMessage org.springframework.data.jpa.repository.support.MailMessage = new MailMessage ( ) ; org.springframework.data.jpa.repository.support.MailMessage . setContent ( STRING ) ; org.springframework.data.jpa.repository.support.MailMessageRepository . save ( org.springframework.data.jpa.repository.support.MailMessage ) ; org.springframework.data.jpa.repository.support.MailMessageRepository . save ( org.springframework.data.jpa.repository.support.MailMessage ) ; Page < MailMessage > org.springframework.data.jpa.repository.support.Page<org.springframework.data.jpa.repository.support.MailMessage> = org.springframework.data.jpa.repository.support.MailMessageRepository . findAll ( PageRequest . of ( NUMBER , NUMBER , new JpaSort ( Direction . ASC , path ( MailMessage_ . mailSender ) . dot ( MailSender_ . name ) ) ) ) ; java.util.List<org.springframework.data.jpa.repository.support.MailMessage> < MailMessage > java.util.List<org.springframework.data.jpa.repository.support.MailMessage> = org.springframework.data.jpa.repository.support.Page<org.springframework.data.jpa.repository.support.MailMessage> . getContent ( ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> , hasSize ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> . get ( NUMBER ) . getMailSender ( ) , is ( nullValue ( ) ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> . get ( NUMBER ) . getMailSender ( ) , is ( org.springframework.data.jpa.repository.support.MailSender ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MailMessage org.springframework.data.jpa.repository.support.MailMessage = new MailMessage ( ) ; org.springframework.data.jpa.repository.support.MailMessage . setContent ( STRING ) ; MailSender org.springframework.data.jpa.repository.support.MailSender = new MailSender ( STRING ) ; org.springframework.data.jpa.repository.support.MailMessage . setMailSender ( org.springframework.data.jpa.repository.support.MailSender ) ; MailMessage org.springframework.data.jpa.repository.support.MailMessage = new MailMessage ( ) ; org.springframework.data.jpa.repository.support.MailMessage . setContent ( STRING ) ; org.springframework.data.jpa.repository.support.MailMessageRepository . save ( org.springframework.data.jpa.repository.support.MailMessage ) ; org.springframework.data.jpa.repository.support.MailMessageRepository . save ( org.springframework.data.jpa.repository.support.MailMessage ) ; java.util.List<org.springframework.data.jpa.repository.support.MailMessage> < MailMessage > java.util.List<org.springframework.data.jpa.repository.support.MailMessage> = org.springframework.data.jpa.repository.support.MailMessageRepository . findAll ( org.springframework.data.jpa.repository.support.QMailMessage . content . eq ( STRING ) , org.springframework.data.jpa.repository.support.QMailMessage . mailSender . name . asc ( ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> , hasSize ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> . get ( NUMBER ) . getMailSender ( ) , is ( nullValue ( ) ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> . get ( NUMBER ) . getMailSender ( ) , is ( org.springframework.data.jpa.repository.support.MailSender ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MailUser org.springframework.data.jpa.repository.support.MailUser = new MailUser ( STRING ) ; org.springframework.data.jpa.repository.support.EntityManager . persist ( org.springframework.data.jpa.repository.support.MailUser ) ; MailMessage org.springframework.data.jpa.repository.support.MailMessage = new MailMessage ( ) ; org.springframework.data.jpa.repository.support.MailMessage . setContent ( STRING ) ; MailSender org.springframework.data.jpa.repository.support.MailSender = new MailSender ( STRING ) ; org.springframework.data.jpa.repository.support.MailSender . setMailUser ( org.springframework.data.jpa.repository.support.MailUser ) ; org.springframework.data.jpa.repository.support.MailMessage . setMailSender ( org.springframework.data.jpa.repository.support.MailSender ) ; MailMessage org.springframework.data.jpa.repository.support.MailMessage = new MailMessage ( ) ; org.springframework.data.jpa.repository.support.MailMessage . setContent ( STRING ) ; org.springframework.data.jpa.repository.support.MailMessageRepository . save ( org.springframework.data.jpa.repository.support.MailMessage ) ; org.springframework.data.jpa.repository.support.MailMessageRepository . save ( org.springframework.data.jpa.repository.support.MailMessage ) ; java.util.List<org.springframework.data.jpa.repository.support.MailMessage> < MailMessage > java.util.List<org.springframework.data.jpa.repository.support.MailMessage> = org.springframework.data.jpa.repository.support.MailMessageRepository . findAll ( org.springframework.data.jpa.repository.support.QMailMessage . content . eq ( STRING ) , org.springframework.data.jpa.repository.support.QMailMessage . mailSender . mailUser . name . asc ( ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> , hasSize ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> . get ( NUMBER ) . getMailSender ( ) , is ( nullValue ( ) ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> . get ( NUMBER ) . getMailSender ( ) , is ( org.springframework.data.jpa.repository.support.MailSender ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MailUser org.springframework.data.jpa.repository.support.MailUser = new MailUser ( STRING ) ; org.springframework.data.jpa.repository.support.EntityManager . persist ( org.springframework.data.jpa.repository.support.MailUser ) ; MailMessage org.springframework.data.jpa.repository.support.MailMessage = new MailMessage ( ) ; org.springframework.data.jpa.repository.support.MailMessage . setContent ( STRING ) ; MailSender org.springframework.data.jpa.repository.support.MailSender = new MailSender ( STRING ) ; org.springframework.data.jpa.repository.support.MailSender . setMailUser ( org.springframework.data.jpa.repository.support.MailUser ) ; org.springframework.data.jpa.repository.support.MailMessage . setMailSender ( org.springframework.data.jpa.repository.support.MailSender ) ; MailMessage org.springframework.data.jpa.repository.support.MailMessage = new MailMessage ( ) ; org.springframework.data.jpa.repository.support.MailMessage . setContent ( STRING ) ; org.springframework.data.jpa.repository.support.MailMessageRepository . save ( org.springframework.data.jpa.repository.support.MailMessage ) ; org.springframework.data.jpa.repository.support.MailMessageRepository . save ( org.springframework.data.jpa.repository.support.MailMessage ) ; Page < MailMessage > org.springframework.data.jpa.repository.support.Page<org.springframework.data.jpa.repository.support.MailMessage> = org.springframework.data.jpa.repository.support.MailMessageRepository . findAll ( PageRequest . of ( NUMBER , NUMBER , Sort . by ( Sort . Direction . ASC , STRING ) ) ) ; java.util.List<org.springframework.data.jpa.repository.support.MailMessage> < MailMessage > java.util.List<org.springframework.data.jpa.repository.support.MailMessage> = org.springframework.data.jpa.repository.support.Page<org.springframework.data.jpa.repository.support.MailMessage> . getContent ( ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> , hasSize ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> . get ( NUMBER ) . getMailSender ( ) , is ( nullValue ( ) ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.support.MailMessage> . get ( NUMBER ) . getMailSender ( ) , is ( org.springframework.data.jpa.repository.support.MailSender ) ) ; }  <METHOD_END>
