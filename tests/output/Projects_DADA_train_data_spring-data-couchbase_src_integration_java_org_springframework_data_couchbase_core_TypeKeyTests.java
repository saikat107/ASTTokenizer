<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; boolean boolean = false ; Beer org.springframework.data.couchbase.core.Beer = new Beer ( java.lang.String , java.lang.String , boolean , STRING ) ; org.springframework.data.couchbase.core.CouchbaseTemplate . save ( org.springframework.data.couchbase.core.Beer ) ; RawJsonDocument org.springframework.data.couchbase.core.RawJsonDocument = org.springframework.data.couchbase.core.Bucket . get ( java.lang.String , RawJsonDocument .class ) ; assertNotNull ( org.springframework.data.couchbase.core.RawJsonDocument ) ; java.lang.String java.lang.String = org.springframework.data.couchbase.core.RawJsonDocument . content ( ) ; assertNotNull ( java.lang.String ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.couchbase.core.ObjectMapper . readValue ( java.lang.String , new TypeReference < java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > ( ) {} ) ; assertNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( MappingCouchbaseConverter . TYPEKEY_DEFAULT ) ) ; assertNotNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( false , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
