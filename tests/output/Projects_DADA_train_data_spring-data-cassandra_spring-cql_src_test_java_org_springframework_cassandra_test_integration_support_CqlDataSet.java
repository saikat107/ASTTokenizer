<METHOD_START> private void ( java.net.URL java.net.URL , java.lang.String java.lang.String ) { this . java.net.URL = java.net.URL ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.List<java.lang.String> ( ) ; }  <METHOD_END>
<METHOD_START> @ SneakyThrows private java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return Resources . readLines ( java.net.URL , java.nio.charset.Charset . java.nio.charset.Charset ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.cassandra.test.integration.support.CqlDataSet org.springframework.cassandra.test.integration.support.CqlDataSet ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return new org.springframework.cassandra.test.integration.support.CqlDataSet ( java.net.URL , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.cassandra.test.integration.support.CqlDataSet org.springframework.cassandra.test.integration.support.CqlDataSet ( java.lang.String java.lang.String ) { java.net.URL java.net.URL = Resources . getResource ( java.lang.String ) ; return new org.springframework.cassandra.test.integration.support.CqlDataSet ( java.net.URL , null ) ; }  <METHOD_END>
