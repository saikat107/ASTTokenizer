<METHOD_START> void ( java.net.HttpURLConnection java.net.HttpURLConnection , int int , boolean boolean ) { this . java.net.HttpURLConnection = java.net.HttpURLConnection ; this . int = int ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.client.HttpMethod org.springframework.http.client.HttpMethod ( ) { return HttpMethod . resolve ( this . java.net.HttpURLConnection . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URI java.net.URI ( ) { try { return this . java.net.HttpURLConnection . java.net.URL ( ) . java.net.URI ( ) ; } catch ( java.net.URISyntaxException java.net.URISyntaxException ) { throw new java.lang.IllegalStateException ( STRING + java.net.URISyntaxException . java.lang.String ( ) , java.net.URISyntaxException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.io.OutputStream java.io.OutputStream ( HttpHeaders org.springframework.http.client.HttpHeaders ) throws java.io.IOException { if ( this . java.io.OutputStream == null ) { if ( this . boolean ) { int int = ( int ) org.springframework.http.client.HttpHeaders . getContentLength ( ) ; if ( int >= NUMBER ) { this . java.net.HttpURLConnection . void ( int ) ; } else { this . java.net.HttpURLConnection . void ( this . int ) ; } } SimpleBufferingClientHttpRequest . addHeaders ( this . java.net.HttpURLConnection , org.springframework.http.client.HttpHeaders ) ; this . java.net.HttpURLConnection . void ( ) ; this . java.io.OutputStream = this . java.net.HttpURLConnection . java.io.OutputStream ( ) ; } return StreamUtils . nonClosing ( this . java.io.OutputStream ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.http.client.ClientHttpResponse org.springframework.http.client.ClientHttpResponse ( HttpHeaders org.springframework.http.client.HttpHeaders ) throws java.io.IOException { try { if ( this . java.io.OutputStream != null ) { this . java.io.OutputStream . void ( ) ; } else { SimpleBufferingClientHttpRequest . addHeaders ( this . java.net.HttpURLConnection , org.springframework.http.client.HttpHeaders ) ; this . java.net.HttpURLConnection . void ( ) ; this . java.net.HttpURLConnection . int ( ) ; } } catch ( java.io.IOException java.io.IOException ) { } return new SimpleClientHttpResponse ( this . java.net.HttpURLConnection ) ; }  <METHOD_END>
