<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertiesFactoryBean org.springframework.beans.factory.config.PropertiesFactoryBean = new PropertiesFactoryBean ( ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setLocation ( org.springframework.beans.factory.config.Resource ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . afterPropertiesSet ( ) ; java.util.Properties java.util.Properties = org.springframework.beans.factory.config.PropertiesFactoryBean . getObject ( ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertiesFactoryBean org.springframework.beans.factory.config.PropertiesFactoryBean = new PropertiesFactoryBean ( ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setLocation ( org.springframework.beans.factory.config.Resource ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . afterPropertiesSet ( ) ; java.util.Properties java.util.Properties = org.springframework.beans.factory.config.PropertiesFactoryBean . getObject ( ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertiesFactoryBean org.springframework.beans.factory.config.PropertiesFactoryBean = new PropertiesFactoryBean ( ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setProperties ( java.util.Properties ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . afterPropertiesSet ( ) ; java.util.Properties java.util.Properties = org.springframework.beans.factory.config.PropertiesFactoryBean . getObject ( ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertiesFactoryBean org.springframework.beans.factory.config.PropertiesFactoryBean = new PropertiesFactoryBean ( ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setLocation ( org.springframework.beans.factory.config.Resource ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setProperties ( java.util.Properties ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . afterPropertiesSet ( ) ; java.util.Properties java.util.Properties = org.springframework.beans.factory.config.PropertiesFactoryBean . getObject ( ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertiesFactoryBean org.springframework.beans.factory.config.PropertiesFactoryBean = new PropertiesFactoryBean ( ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setLocation ( org.springframework.beans.factory.config.Resource ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setPropertiesArray ( new java.util.Properties [] { java.util.Properties , java.util.Properties , java.util.Properties } ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . afterPropertiesSet ( ) ; java.util.Properties java.util.Properties = org.springframework.beans.factory.config.PropertiesFactoryBean . getObject ( ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertiesFactoryBean org.springframework.beans.factory.config.PropertiesFactoryBean = new PropertiesFactoryBean ( ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setLocation ( org.springframework.beans.factory.config.Resource ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setProperties ( java.util.Properties ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setLocalOverride ( true ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . afterPropertiesSet ( ) ; java.util.Properties java.util.Properties = org.springframework.beans.factory.config.PropertiesFactoryBean . getObject ( ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertiesFactoryBean org.springframework.beans.factory.config.PropertiesFactoryBean = new PropertiesFactoryBean ( ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setSingleton ( false ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setLocation ( org.springframework.beans.factory.config.Resource ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . setProperties ( java.util.Properties ) ; org.springframework.beans.factory.config.PropertiesFactoryBean . afterPropertiesSet ( ) ; java.util.Properties java.util.Properties = org.springframework.beans.factory.config.PropertiesFactoryBean . getObject ( ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; java.util.Properties java.util.Properties = org.springframework.beans.factory.config.PropertiesFactoryBean . getObject ( ) ; assertTrue ( java.util.Properties != java.util.Properties ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; }  <METHOD_END>
