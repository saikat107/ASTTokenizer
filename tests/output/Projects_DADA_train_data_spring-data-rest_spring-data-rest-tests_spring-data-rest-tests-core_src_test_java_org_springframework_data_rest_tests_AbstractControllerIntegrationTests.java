<METHOD_START> public void ( ApplicationContext org.springframework.data.rest.tests.ApplicationContext , ObjectFactory < ConversionService > org.springframework.data.rest.tests.ObjectFactory<org.springframework.data.rest.tests.ConversionService> ) { super( org.springframework.data.rest.tests.ApplicationContext , org.springframework.data.rest.tests.ObjectFactory<org.springframework.data.rest.tests.ConversionService> ); }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.tests.PersistentEntityResourceAssembler org.springframework.data.rest.tests.PersistentEntityResourceAssembler ( ) { SelfLinkProvider org.springframework.data.rest.tests.SelfLinkProvider = new DefaultSelfLinkProvider ( persistentEntities ( ) , entityLinks ( ) , java.util.Collections .< EntityLookup < ? > > java.util.List<org.springframework.data.rest.tests.EntityLookup<?>> ( ) ) ; return new PersistentEntityResourceAssembler ( persistentEntities ( ) , org.springframework.data.rest.tests.AbstractControllerIntegrationTests.StubProjector . org.springframework.data.rest.tests.AbstractControllerIntegrationTests.StubProjector , associationLinks ( ) , org.springframework.data.rest.tests.SelfLinkProvider ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) { TestMvcClient . initWebTest ( ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.rest.tests.RootResourceInformation org.springframework.data.rest.tests.RootResourceInformation ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; PersistentEntity < ? , ? > org.springframework.data.rest.tests.PersistentEntity<?,?> = org.springframework.data.rest.tests.Repositories . getPersistentEntity ( java.lang.Class<> ) ; return new RootResourceInformation ( org.springframework.data.rest.tests.ResourceMappings . getMetadataFor ( java.lang.Class<> ) , org.springframework.data.rest.tests.PersistentEntity<,> , org.springframework.data.rest.tests.RepositoryInvokerFactory . getInvokerFor ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.rest.tests.WebRequest org.springframework.data.rest.tests.WebRequest ( RequestParameters org.springframework.data.rest.tests.RequestParameters ) { MockHttpServletRequest org.springframework.data.rest.tests.MockHttpServletRequest = new MockHttpServletRequest ( ) ; org.springframework.data.rest.tests.MockHttpServletRequest . setParameters ( org.springframework.data.rest.tests.RequestParameters . asMap ( ) ) ; ServletRequestAttributes org.springframework.data.rest.tests.ServletRequestAttributes = new ServletRequestAttributes ( org.springframework.data.rest.tests.MockHttpServletRequest ) ; RequestContextHolder . setRequestAttributes ( org.springframework.data.rest.tests.ServletRequestAttributes ) ; return new ServletWebRequest ( org.springframework.data.rest.tests.MockHttpServletRequest ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.rest.tests.ResourceMetadata org.springframework.data.rest.tests.ResourceMetadata ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.data.rest.tests.ResourceMappings . getMetadataFor ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return false ; }  <METHOD_END>
