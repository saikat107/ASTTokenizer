<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) { return org.springframework.web.servlet.mvc.method.annotation.MethodParameter . hasParameterAnnotation ( RequestAttribute .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.mvc.method.annotation.NamedValueInfo org.springframework.web.servlet.mvc.method.annotation.NamedValueInfo ( MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) { RequestAttribute org.springframework.web.servlet.mvc.method.annotation.RequestAttribute = org.springframework.web.servlet.mvc.method.annotation.MethodParameter . getParameterAnnotation ( RequestAttribute .class ) ; return new NamedValueInfo ( org.springframework.web.servlet.mvc.method.annotation.RequestAttribute . name ( ) , org.springframework.web.servlet.mvc.method.annotation.RequestAttribute . required ( ) , ValueConstants . DEFAULT_NONE ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.String java.lang.String , MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , NativeWebRequest org.springframework.web.servlet.mvc.method.annotation.NativeWebRequest ) { return org.springframework.web.servlet.mvc.method.annotation.NativeWebRequest . getAttribute ( java.lang.String , RequestAttributes . SCOPE_REQUEST ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String , MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) throws org.springframework.web.servlet.mvc.method.annotation.ServletException { throw new ServletRequestBindingException ( STRING + java.lang.String + STRING + org.springframework.web.servlet.mvc.method.annotation.MethodParameter . getNestedParameterType ( ) . getSimpleName ( ) ) ; }  <METHOD_END>
