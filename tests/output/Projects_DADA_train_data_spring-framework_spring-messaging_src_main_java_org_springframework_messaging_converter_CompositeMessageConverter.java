<METHOD_START> public void ( java.util.Collection<org.springframework.messaging.converter.MessageConverter> < MessageConverter > java.util.Collection<org.springframework.messaging.converter.MessageConverter> ) { Assert . notEmpty ( java.util.Collection<org.springframework.messaging.converter.MessageConverter> , STRING ) ; this . java.util.List<org.springframework.messaging.converter.MessageConverter> = new java.util.ArrayList <> ( java.util.Collection<org.springframework.messaging.converter.MessageConverter> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Message < ? > org.springframework.messaging.converter.Message<?> , java.lang.Class<?> < ? > java.lang.Class<?> ) { for ( MessageConverter org.springframework.messaging.converter.MessageConverter : java.util.List<org.springframework.messaging.converter.MessageConverter> ( ) ) { java.lang.Object java.lang.Object = org.springframework.messaging.converter.MessageConverter . fromMessage ( org.springframework.messaging.converter.Message<> , java.lang.Class<> ) ; if ( java.lang.Object != null ) { return java.lang.Object ; } } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Message < ? > org.springframework.messaging.converter.Message<?> , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Object java.lang.Object ) { for ( MessageConverter org.springframework.messaging.converter.MessageConverter : java.util.List<org.springframework.messaging.converter.MessageConverter> ( ) ) { java.lang.Object java.lang.Object = ( org.springframework.messaging.converter.MessageConverter instanceof SmartMessageConverter ? ( ( SmartMessageConverter ) org.springframework.messaging.converter.MessageConverter ) . fromMessage ( org.springframework.messaging.converter.Message<> , java.lang.Class<> , java.lang.Object ) : org.springframework.messaging.converter.MessageConverter . fromMessage ( org.springframework.messaging.converter.Message<> , java.lang.Class<> ) ) ; if ( java.lang.Object != null ) { return java.lang.Object ; } } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.messaging.converter.Message<?> < ? > org.springframework.messaging.converter.Message<?> ( java.lang.Object java.lang.Object , MessageHeaders org.springframework.messaging.converter.MessageHeaders ) { for ( MessageConverter org.springframework.messaging.converter.MessageConverter : java.util.List<org.springframework.messaging.converter.MessageConverter> ( ) ) { Message < ? > org.springframework.messaging.converter.Message<?> = org.springframework.messaging.converter.MessageConverter . toMessage ( java.lang.Object , org.springframework.messaging.converter.MessageHeaders ) ; if ( org.springframework.messaging.converter.Message<> != null ) { return org.springframework.messaging.converter.Message<> ; } } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.messaging.converter.Message<?> < ? > org.springframework.messaging.converter.Message<?> ( java.lang.Object java.lang.Object , MessageHeaders org.springframework.messaging.converter.MessageHeaders , java.lang.Object java.lang.Object ) { for ( MessageConverter org.springframework.messaging.converter.MessageConverter : java.util.List<org.springframework.messaging.converter.MessageConverter> ( ) ) { Message < ? > org.springframework.messaging.converter.Message<?> = ( org.springframework.messaging.converter.MessageConverter instanceof SmartMessageConverter ? ( ( SmartMessageConverter ) org.springframework.messaging.converter.MessageConverter ) . toMessage ( java.lang.Object , org.springframework.messaging.converter.MessageHeaders , java.lang.Object ) : org.springframework.messaging.converter.MessageConverter . toMessage ( java.lang.Object , org.springframework.messaging.converter.MessageHeaders ) ) ; if ( org.springframework.messaging.converter.Message<> != null ) { return org.springframework.messaging.converter.Message<> ; } } return null ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.messaging.converter.MessageConverter> < MessageConverter > java.util.List<org.springframework.messaging.converter.MessageConverter> ( ) { return this . java.util.List<org.springframework.messaging.converter.MessageConverter> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + java.util.List<org.springframework.messaging.converter.MessageConverter> ( ) + STRING ; }  <METHOD_END>
