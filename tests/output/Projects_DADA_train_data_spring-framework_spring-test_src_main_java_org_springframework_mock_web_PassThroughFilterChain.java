<METHOD_START> public void ( Filter org.springframework.mock.web.Filter , FilterChain org.springframework.mock.web.FilterChain ) { Assert . notNull ( org.springframework.mock.web.Filter , STRING ) ; Assert . notNull ( org.springframework.mock.web.FilterChain , STRING ) ; this . org.springframework.mock.web.Filter = org.springframework.mock.web.Filter ; this . org.springframework.mock.web.FilterChain = org.springframework.mock.web.FilterChain ; }  <METHOD_END>
<METHOD_START> public void ( Servlet org.springframework.mock.web.Servlet ) { Assert . notNull ( org.springframework.mock.web.Servlet , STRING ) ; this . org.springframework.mock.web.Servlet = org.springframework.mock.web.Servlet ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletRequest org.springframework.mock.web.ServletRequest , ServletResponse org.springframework.mock.web.ServletResponse ) throws org.springframework.mock.web.ServletException , java.io.IOException { if ( this . org.springframework.mock.web.Filter != null ) { this . org.springframework.mock.web.Filter . doFilter ( org.springframework.mock.web.ServletRequest , org.springframework.mock.web.ServletResponse , this . org.springframework.mock.web.FilterChain ) ; } else { this . org.springframework.mock.web.Servlet . service ( org.springframework.mock.web.ServletRequest , org.springframework.mock.web.ServletResponse ) ; } }  <METHOD_END>
