<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { org.springframework.util.xml.SimpleNamespaceContext . getNamespaceURI ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( javax.xml.XMLConstants . java.lang.String , java.lang.String ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getNamespaceURI ( javax.xml.XMLConstants . java.lang.String ) , is ( javax.xml.XMLConstants . java.lang.String ) ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( javax.xml.XMLConstants . java.lang.String , java.lang.String ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getNamespaceURI ( javax.xml.XMLConstants . java.lang.String ) , is ( javax.xml.XMLConstants . java.lang.String ) ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getNamespaceURI ( java.lang.String ) , is ( javax.xml.XMLConstants . java.lang.String ) ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( java.lang.String , java.lang.String ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getNamespaceURI ( java.lang.String ) , is ( java.lang.String ) ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getNamespaceURI ( javax.xml.XMLConstants . java.lang.String ) , is ( javax.xml.XMLConstants . java.lang.String ) ) ; org.springframework.util.xml.SimpleNamespaceContext . bindDefaultNamespaceUri ( java.lang.String ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getNamespaceURI ( javax.xml.XMLConstants . java.lang.String ) , is ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { org.springframework.util.xml.SimpleNamespaceContext . getPrefix ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getPrefix ( javax.xml.XMLConstants . java.lang.String ) , is ( javax.xml.XMLConstants . java.lang.String ) ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getPrefix ( javax.xml.XMLConstants . java.lang.String ) , is ( javax.xml.XMLConstants . java.lang.String ) ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getPrefix ( java.lang.String ) , is ( nullValue ( ) ) ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getPrefix ( java.lang.String ) , anyOf ( is ( STRING ) , is ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { org.springframework.util.xml.SimpleNamespaceContext . getPrefixes ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.UnsupportedOperationException .class ) public void void ( ) java.lang.Exception { org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( java.lang.String , java.lang.String ) ; java.util.Iterator<java.lang.String> < java.lang.String > java.util.Iterator<java.lang.String> = org.springframework.util.xml.SimpleNamespaceContext . getPrefixes ( java.lang.String ) ; java.util.Iterator<java.lang.String> . void ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( STRING , java.util.Set<java.lang.String> ( org.springframework.util.xml.SimpleNamespaceContext . getPrefixes ( javax.xml.XMLConstants . java.lang.String ) ) , is ( java.util.Set<java.lang.String> ( javax.xml.XMLConstants . java.lang.String ) ) ) ; assertThat ( STRING , java.util.Set<java.lang.String> ( org.springframework.util.xml.SimpleNamespaceContext . getPrefixes ( javax.xml.XMLConstants . java.lang.String ) ) , is ( java.util.Set<java.lang.String> ( javax.xml.XMLConstants . java.lang.String ) ) ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getPrefixes ( STRING ) . hasNext ( ) , is ( false ) ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; assertThat ( STRING , java.util.Set<java.lang.String> ( org.springframework.util.xml.SimpleNamespaceContext . getPrefixes ( java.lang.String ) ) , is ( java.util.Set<java.lang.String> ( STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( null , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( java.lang.String , java.lang.String ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getNamespaceURI ( java.lang.String ) , is ( java.lang.String ) ) ; assertThat ( STRING , java.util.Set<java.lang.String> ( org.springframework.util.xml.SimpleNamespaceContext . getPrefixes ( java.lang.String ) ) , hasItem ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; assertThat ( STRING , java.util.Set<java.lang.String> ( org.springframework.util.xml.SimpleNamespaceContext . getBoundPrefixes ( ) ) , is ( java.util.Set<java.lang.String> ( STRING , STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; org.springframework.util.xml.SimpleNamespaceContext . clear ( ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getBoundPrefixes ( ) . hasNext ( ) , is ( false ) ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getPrefixes ( java.lang.String ) . hasNext ( ) , is ( false ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.util.xml.SimpleNamespaceContext . removeBinding ( java.lang.String ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( java.lang.String , java.lang.String ) ; org.springframework.util.xml.SimpleNamespaceContext . removeBinding ( java.lang.String ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getNamespaceURI ( java.lang.String ) , is ( javax.xml.XMLConstants . java.lang.String ) ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getPrefix ( java.lang.String ) , is ( nullValue ( ) ) ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getPrefixes ( java.lang.String ) . hasNext ( ) , is ( false ) ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; org.springframework.util.xml.SimpleNamespaceContext . bindNamespaceUri ( STRING , java.lang.String ) ; org.springframework.util.xml.SimpleNamespaceContext . removeBinding ( STRING ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getNamespaceURI ( STRING ) , is ( javax.xml.XMLConstants . java.lang.String ) ) ; assertThat ( STRING , org.springframework.util.xml.SimpleNamespaceContext . getPrefix ( java.lang.String ) , is ( STRING ) ) ; assertThat ( STRING , java.util.Set<java.lang.String> ( org.springframework.util.xml.SimpleNamespaceContext . getPrefixes ( java.lang.String ) ) , is ( java.util.Set<java.lang.String> ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> private java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( java.util.Iterator<java.lang.String> < java.lang.String > java.util.Iterator<java.lang.String> ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; while ( java.util.Iterator<java.lang.String> . boolean ( ) ) { java.util.Set<java.lang.String> . boolean ( java.util.Iterator<java.lang.String> . java.lang.String ( ) ) ; } return java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> private java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( java.lang.String ... java.lang.String[] ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; } return java.util.Set<java.lang.String> ; }  <METHOD_END>
