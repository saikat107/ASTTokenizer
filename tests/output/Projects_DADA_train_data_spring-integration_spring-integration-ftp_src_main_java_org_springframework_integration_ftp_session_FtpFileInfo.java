<METHOD_START> public void ( FTPFile org.springframework.integration.ftp.session.FTPFile ) { Assert . notNull ( org.springframework.integration.ftp.session.FTPFile , STRING ) ; this . org.springframework.integration.ftp.session.FTPFile = org.springframework.integration.ftp.session.FTPFile ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . org.springframework.integration.ftp.session.FTPFile . isDirectory ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . org.springframework.integration.ftp.session.FTPFile . isSymbolicLink ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . org.springframework.integration.ftp.session.FTPFile . getSize ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . org.springframework.integration.ftp.session.FTPFile . getTimestamp ( ) . getTimeInMillis ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.integration.ftp.session.FTPFile . getName ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; if ( this . org.springframework.integration.ftp.session.FTPFile . isDirectory ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else if ( this . org.springframework.integration.ftp.session.FTPFile . isSymbolicLink ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( this . org.springframework.integration.ftp.session.FTPFile . hasPermission ( FTPFile . USER_ACCESS , FTPFile . READ_PERMISSION ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( this . org.springframework.integration.ftp.session.FTPFile . hasPermission ( FTPFile . USER_ACCESS , FTPFile . WRITE_PERMISSION ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( this . org.springframework.integration.ftp.session.FTPFile . hasPermission ( FTPFile . USER_ACCESS , FTPFile . EXECUTE_PERMISSION ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( this . org.springframework.integration.ftp.session.FTPFile . hasPermission ( FTPFile . GROUP_ACCESS , FTPFile . READ_PERMISSION ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( this . org.springframework.integration.ftp.session.FTPFile . hasPermission ( FTPFile . GROUP_ACCESS , FTPFile . WRITE_PERMISSION ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( this . org.springframework.integration.ftp.session.FTPFile . hasPermission ( FTPFile . GROUP_ACCESS , FTPFile . EXECUTE_PERMISSION ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( this . org.springframework.integration.ftp.session.FTPFile . hasPermission ( FTPFile . WORLD_ACCESS , FTPFile . READ_PERMISSION ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( this . org.springframework.integration.ftp.session.FTPFile . hasPermission ( FTPFile . WORLD_ACCESS , FTPFile . WRITE_PERMISSION ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( this . org.springframework.integration.ftp.session.FTPFile . hasPermission ( FTPFile . WORLD_ACCESS , FTPFile . EXECUTE_PERMISSION ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.ftp.session.FTPFile org.springframework.integration.ftp.session.FTPFile ( ) { return this . org.springframework.integration.ftp.session.FTPFile ; }  <METHOD_END>
