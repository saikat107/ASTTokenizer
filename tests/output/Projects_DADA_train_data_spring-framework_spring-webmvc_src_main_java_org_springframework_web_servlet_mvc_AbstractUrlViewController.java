<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.web.servlet.mvc.UrlPathHelper . setAlwaysUseFullPath ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.web.servlet.mvc.UrlPathHelper . setUrlDecode ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.web.servlet.mvc.UrlPathHelper . setRemoveSemicolonContent ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( UrlPathHelper org.springframework.web.servlet.mvc.UrlPathHelper ) { Assert . notNull ( org.springframework.web.servlet.mvc.UrlPathHelper , STRING ) ; this . org.springframework.web.servlet.mvc.UrlPathHelper = org.springframework.web.servlet.mvc.UrlPathHelper ; }  <METHOD_END>
<METHOD_START> protected org.springframework.web.servlet.mvc.UrlPathHelper org.springframework.web.servlet.mvc.UrlPathHelper ( ) { return this . org.springframework.web.servlet.mvc.UrlPathHelper ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.mvc.ModelAndView org.springframework.web.servlet.mvc.ModelAndView ( HttpServletRequest org.springframework.web.servlet.mvc.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.mvc.HttpServletResponse ) { java.lang.String java.lang.String = org.springframework.web.servlet.mvc.UrlPathHelper ( ) . getLookupPathForRequest ( org.springframework.web.servlet.mvc.HttpServletRequest ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.mvc.HttpServletRequest ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + java.lang.String + STRING + java.lang.String + STRING ) ; } return new ModelAndView ( java.lang.String , RequestContextUtils . getInputFlashMap ( org.springframework.web.servlet.mvc.HttpServletRequest ) ) ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.String java.lang.String ( HttpServletRequest org.springframework.web.servlet.mvc.HttpServletRequest );  <METHOD_END>
