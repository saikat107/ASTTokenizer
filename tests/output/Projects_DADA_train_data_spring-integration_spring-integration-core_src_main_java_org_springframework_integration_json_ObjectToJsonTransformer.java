<METHOD_START> public void ( ) { this( JsonObjectMapperProvider . newInstance ( ) ); }  <METHOD_END>
<METHOD_START> public void ( JsonObjectMapper < ? , ? > org.springframework.integration.json.JsonObjectMapper<?,?> ) { this( org.springframework.integration.json.JsonObjectMapper<,> , org.springframework.integration.json.ObjectToJsonTransformer.ResultType . org.springframework.integration.json.ObjectToJsonTransformer.ResultType ); }  <METHOD_END>
<METHOD_START> public void ( org.springframework.integration.json.ObjectToJsonTransformer.ResultType org.springframework.integration.json.ObjectToJsonTransformer.ResultType ) { this( JsonObjectMapperProvider . newInstance ( ) , org.springframework.integration.json.ObjectToJsonTransformer.ResultType ); }  <METHOD_END>
<METHOD_START> public void ( JsonObjectMapper < ? , ? > org.springframework.integration.json.JsonObjectMapper<?,?> , org.springframework.integration.json.ObjectToJsonTransformer.ResultType org.springframework.integration.json.ObjectToJsonTransformer.ResultType ) { Assert . notNull ( org.springframework.integration.json.JsonObjectMapper<,> , STRING ) ; Assert . notNull ( org.springframework.integration.json.ObjectToJsonTransformer.ResultType , STRING ) ; this . org.springframework.integration.json.JsonObjectMapper<?,?> = org.springframework.integration.json.JsonObjectMapper<,> ; this . org.springframework.integration.json.ObjectToJsonTransformer.ResultType = org.springframework.integration.json.ObjectToJsonTransformer.ResultType ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . boolean = true ; this . java.lang.String = java.lang.String . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.json.Message<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.integration.json.ObjectToJsonTransformer.ResultType . org.springframework.integration.json.ObjectToJsonTransformer.ResultType . boolean ( this . org.springframework.integration.json.ObjectToJsonTransformer.ResultType ) ? this . org.springframework.integration.json.JsonObjectMapper<,> . toJson ( org.springframework.integration.json.Message<> . getPayload ( ) ) : this . org.springframework.integration.json.JsonObjectMapper<,> . toJsonNode ( org.springframework.integration.json.Message<> . getPayload ( ) ) ; AbstractIntegrationMessageBuilder < java.lang.Object > org.springframework.integration.json.AbstractIntegrationMessageBuilder<java.lang.Object> = this . getMessageBuilderFactory ( ) . withPayload ( java.lang.Object ) ; LinkedCaseInsensitiveMap < java.lang.Object > org.springframework.integration.json.LinkedCaseInsensitiveMap<java.lang.Object> = new LinkedCaseInsensitiveMap < java.lang.Object > ( ) ; org.springframework.integration.json.LinkedCaseInsensitiveMap<java.lang.Object> . putAll ( org.springframework.integration.json.Message<> . getHeaders ( ) ) ; if ( org.springframework.integration.json.LinkedCaseInsensitiveMap<java.lang.Object> . containsKey ( MessageHeaders . CONTENT_TYPE ) ) { if ( this . boolean ) { if ( StringUtils . hasLength ( this . java.lang.String ) ) { org.springframework.integration.json.LinkedCaseInsensitiveMap<java.lang.Object> . put ( MessageHeaders . CONTENT_TYPE , this . java.lang.String ) ; } } } else if ( StringUtils . hasLength ( this . java.lang.String ) ) { org.springframework.integration.json.LinkedCaseInsensitiveMap<java.lang.Object> . put ( MessageHeaders . CONTENT_TYPE , this . java.lang.String ) ; } this . org.springframework.integration.json.JsonObjectMapper<,> . populateJavaTypes ( org.springframework.integration.json.LinkedCaseInsensitiveMap<java.lang.Object> , org.springframework.integration.json.Message<> . getPayload ( ) ) ; org.springframework.integration.json.AbstractIntegrationMessageBuilder<java.lang.Object> . copyHeaders ( org.springframework.integration.json.LinkedCaseInsensitiveMap<java.lang.Object> ) ; return org.springframework.integration.json.AbstractIntegrationMessageBuilder<java.lang.Object> . build ( ) ; }  <METHOD_END>
