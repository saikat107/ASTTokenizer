<METHOD_START> protected abstract org.springframework.cache.config.ConfigurableApplicationContext org.springframework.cache.config.ConfigurableApplicationContext ( )  <METHOD_END>
<METHOD_START> @ Before public void void ( ) { this . org.springframework.cache.config.ConfigurableApplicationContext = org.springframework.cache.config.ConfigurableApplicationContext ( ) ; this . org.springframework.cache.config.CacheableService<?> = org.springframework.cache.config.ConfigurableApplicationContext . getBean ( STRING , CacheableService .class ) ; this . org.springframework.cache.config.CacheableService<?> = org.springframework.cache.config.ConfigurableApplicationContext . getBean ( STRING , CacheableService .class ) ; this . org.springframework.cache.config.CacheManager = org.springframework.cache.config.ConfigurableApplicationContext . getBean ( STRING , CacheManager .class ) ; java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = this . org.springframework.cache.config.CacheManager . getCacheNames ( ) ; assertTrue ( java.util.Collection<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.Collection<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.Collection<java.lang.String> . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.cache.config.ConfigurableApplicationContext != null ) { this . org.springframework.cache.config.ConfigurableApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; assertNull ( this . org.springframework.cache.config.CacheManager . getCache ( STRING ) . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cacheNull ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cacheNull ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cacheNull ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertEquals ( java.lang.Object , this . org.springframework.cache.config.CacheManager . getCache ( STRING ) . get ( java.lang.Object ) . get ( ) ) ; assertNull ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cacheSync ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cacheSync ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cacheSync ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; assertNull ( this . org.springframework.cache.config.CacheManager . getCache ( STRING ) . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cacheSyncNull ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cacheSyncNull ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cacheSyncNull ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertEquals ( java.lang.Object , this . org.springframework.cache.config.CacheManager . getCache ( STRING ) . get ( java.lang.Object ) . get ( ) ) ; assertNull ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; org.springframework.cache.config.CacheableService<> . invalidate ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; try { org.springframework.cache.config.CacheableService<> . evictEarly ( java.lang.Object ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { } java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; try { org.springframework.cache.config.CacheableService<> . evictWithException ( java.lang.Object ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { } java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; org.springframework.cache.config.CacheableService<> . evict ( java.lang.Object , null ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; try { org.springframework.cache.config.CacheableService<> . invalidateEarly ( java.lang.Object , null ) ; } catch ( java.lang.Exception java.lang.Exception ) { } java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; org.springframework.cache.config.CacheableService<> . evictAll ( new java.lang.Object ( ) ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( java.lang.Object ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . conditional ( NUMBER ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . conditional ( NUMBER ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . conditional ( NUMBER ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . conditional ( NUMBER ) ; assertSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . conditionalSync ( NUMBER ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . conditionalSync ( NUMBER ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . conditionalSync ( NUMBER ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . conditionalSync ( NUMBER ) ; assertSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; org.springframework.cache.config.Cache . clear ( ) ; org.springframework.cache.config.CacheableService<> . unless ( NUMBER ) ; org.springframework.cache.config.CacheableService<> . unless ( NUMBER ) ; assertThat ( org.springframework.cache.config.Cache . get ( NUMBER ) . get ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.cache.config.Cache . get ( NUMBER ) , nullValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . key ( NUMBER , NUMBER ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . key ( NUMBER , NUMBER ) ; assertSame ( java.lang.Object , java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . key ( NUMBER , NUMBER ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . key ( NUMBER , NUMBER ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . varArgsKey ( NUMBER , NUMBER , NUMBER ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . varArgsKey ( NUMBER , NUMBER , NUMBER ) ; assertSame ( java.lang.Object , java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . varArgsKey ( NUMBER , NUMBER , NUMBER ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . varArgsKey ( NUMBER , NUMBER ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; assertNull ( org.springframework.cache.config.CacheableService<> . nullValue ( java.lang.Object ) ) ; int int = org.springframework.cache.config.CacheableService<> . nullInvocations ( ) . intValue ( ) ; assertNull ( org.springframework.cache.config.CacheableService<> . nullValue ( java.lang.Object ) ) ; assertEquals ( int , org.springframework.cache.config.CacheableService<> . nullInvocations ( ) . intValue ( ) ) ; assertNull ( org.springframework.cache.config.CacheableService<> . nullValue ( new java.lang.Object ( ) ) ) ; assertEquals ( int + NUMBER , org.springframework.cache.config.CacheableService<> . nullInvocations ( ) . intValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> , java.lang.String java.lang.String ) throws java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . name ( java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.CacheableService<> . name ( java.lang.Object ) ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; assertNotNull ( org.springframework.cache.config.Cache . get ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . rootVars ( java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.CacheableService<> . rootVars ( java.lang.Object ) ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; java.lang.String java.lang.String = STRING + AopProxyUtils . ultimateTargetClass ( org.springframework.cache.config.CacheableService<> ) + org.springframework.cache.config.CacheableService<> ; assertNotNull ( org.springframework.cache.config.Cache . get ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.String java.lang.String = java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) ; try { org.springframework.cache.config.CacheableService<> . throwChecked ( java.lang.String ) ; fail ( STRING ) ; } catch ( java.lang.Exception java.lang.Exception ) { assertEquals ( STRING , java.io.IOException .class , java.lang.Exception . java.lang.Class<? extends java.lang.Exception> ( ) ) ; assertEquals ( java.lang.String , java.lang.Exception . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { try { org.springframework.cache.config.CacheableService<> . throwUnchecked ( NUMBER ) ; fail ( STRING ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { assertEquals ( STRING , java.lang.UnsupportedOperationException .class , java.lang.RuntimeException . java.lang.Class<? extends java.lang.RuntimeException> ( ) ) ; assertEquals ( STRING , java.lang.RuntimeException . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.String java.lang.String = java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) ; try { org.springframework.cache.config.CacheableService<> . throwCheckedSync ( java.lang.String ) ; fail ( STRING ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; assertEquals ( STRING , java.io.IOException .class , java.lang.Exception . java.lang.Class<? extends java.lang.Exception> ( ) ) ; assertEquals ( java.lang.String , java.lang.Exception . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { try { org.springframework.cache.config.CacheableService<> . throwUncheckedSync ( NUMBER ) ; fail ( STRING ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { assertEquals ( STRING , java.lang.UnsupportedOperationException .class , java.lang.RuntimeException . java.lang.Class<? extends java.lang.RuntimeException> ( ) ) ; assertEquals ( STRING , java.lang.RuntimeException . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) { java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . cache ( null ) ; assertSame ( java.lang.Object , org.springframework.cache.config.CacheableService<> . cache ( null ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . update ( java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; java.lang.Object = new java.lang.Object ( ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . update ( java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) { java.lang.Integer java.lang.Integer = NUMBER ; java.lang.Integer java.lang.Integer = NUMBER ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; assertEquals ( java.lang.Integer , java.lang.Integer . java.lang.Integer ( org.springframework.cache.config.CacheableService<> . conditionalUpdate ( java.lang.Integer ) . toString ( ) ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Integer ) ) ; assertEquals ( java.lang.Integer , java.lang.Integer . java.lang.Integer ( org.springframework.cache.config.CacheableService<> . conditionalUpdate ( java.lang.Integer ) . toString ( ) ) ) ; assertEquals ( java.lang.Integer , java.lang.Integer . java.lang.Integer ( org.springframework.cache.config.Cache . get ( java.lang.Integer ) . get ( ) . toString ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = new java.lang.Object ( ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiCache ( java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiCache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiCache ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiCache ( java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = java.lang.Object . java.lang.String ( ) + STRING ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiCache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiCache ( java.lang.Object ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; org.springframework.cache.config.Cache . put ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; org.springframework.cache.config.CacheableService<> . multiEvict ( java.lang.Object ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiCache ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiCache ( java.lang.Object ) ; assertNotSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) { java.lang.Object java.lang.Object = NUMBER ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiUpdate ( java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; java.lang.Object = NUMBER ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiUpdate ( java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) throws java.lang.Exception { java.lang.Long java.lang.Long = java.lang.Long . long ; TestEntity org.springframework.cache.config.TestEntity = new TestEntity ( ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Long ) ) ; assertNull ( org.springframework.cache.config.TestEntity . getId ( ) ) ; org.springframework.cache.config.CacheableService<> . putRefersToResult ( org.springframework.cache.config.TestEntity ) ; assertSame ( org.springframework.cache.config.TestEntity , org.springframework.cache.config.Cache . get ( java.lang.Long ) . get ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) { java.lang.String java.lang.String = STRING ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; java.lang.Object java.lang.Object = NUMBER ; org.springframework.cache.config.Cache . put ( java.lang.Object , java.lang.Object ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.String ) ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiCacheAndEvict ( java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.CacheableService<> . multiCacheAndEvict ( java.lang.Object ) ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.String ) . get ( ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.String ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( CacheableService < ? > org.springframework.cache.config.CacheableService<?> ) { Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; java.lang.Object java.lang.Object = NUMBER ; org.springframework.cache.config.Cache . put ( java.lang.Object , java.lang.Object ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiConditionalCacheAndEvict ( java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiConditionalCacheAndEvict ( java.lang.Object ) ; assertTrue ( ! java.lang.Object . boolean ( java.lang.Object ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; java.lang.Object java.lang.Object = NUMBER ; java.lang.Object java.lang.Object = org.springframework.cache.config.CacheableService<> . multiConditionalCacheAndEvict ( java.lang.Object ) ; assertSame ( java.lang.Object , org.springframework.cache.config.CacheableService<> . multiConditionalCacheAndEvict ( java.lang.Object ) ) ; assertSame ( java.lang.Object , org.springframework.cache.config.Cache . get ( java.lang.Object ) . get ( ) ) ; assertNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; assertNull ( this . org.springframework.cache.config.CacheableService<> . nullValue ( java.lang.Object ) ) ; int int = this . org.springframework.cache.config.CacheableService<> . nullInvocations ( ) . intValue ( ) ; assertNull ( this . org.springframework.cache.config.CacheableService<> . nullValue ( java.lang.Object ) ) ; assertEquals ( int , this . org.springframework.cache.config.CacheableService<> . nullInvocations ( ) . intValue ( ) ) ; assertNull ( this . org.springframework.cache.config.CacheableService<> . nullValue ( new java.lang.Object ( ) ) ) ; assertEquals ( int , this . org.springframework.cache.config.CacheableService<> . nullInvocations ( ) . intValue ( ) ) ; assertEquals ( int + NUMBER , AnnotatedClassCacheableService . nullInvocations . intValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = this . org.springframework.cache.config.CacheableService<> . customKeyGenerator ( java.lang.Object ) ; assertSame ( java.lang.Object , this . org.springframework.cache.config.CacheableService<> . customKeyGenerator ( java.lang.Object ) ) ; Cache org.springframework.cache.config.Cache = this . org.springframework.cache.config.CacheManager . getCache ( STRING ) ; java.lang.Object java.lang.Object = SomeCustomKeyGenerator . generateKey ( STRING , java.lang.Object ) ; assertNotNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { try { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; this . org.springframework.cache.config.CacheableService<> . unknownCustomKeyGenerator ( java.lang.Object ) ; fail ( STRING ) ; } catch ( NoSuchBeanDefinitionException org.springframework.cache.config.NoSuchBeanDefinitionException ) { } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CacheManager org.springframework.cache.config.CacheManager = this . org.springframework.cache.config.ConfigurableApplicationContext . getBean ( STRING , CacheManager .class ) ; java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = this . org.springframework.cache.config.CacheableService<> . customCacheManager ( java.lang.Object ) ; assertSame ( java.lang.Object , this . org.springframework.cache.config.CacheableService<> . customCacheManager ( java.lang.Object ) ) ; Cache org.springframework.cache.config.Cache = org.springframework.cache.config.CacheManager . getCache ( STRING ) ; assertNotNull ( org.springframework.cache.config.Cache . get ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { try { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; this . org.springframework.cache.config.CacheableService<> . unknownCustomCacheManager ( java.lang.Object ) ; fail ( STRING ) ; } catch ( NoSuchBeanDefinitionException org.springframework.cache.config.NoSuchBeanDefinitionException ) { } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( this . org.springframework.cache.config.CacheableService<> ) ; }  <METHOD_END>
