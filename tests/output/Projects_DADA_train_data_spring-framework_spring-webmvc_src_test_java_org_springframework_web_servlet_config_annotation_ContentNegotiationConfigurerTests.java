<METHOD_START> @ Before public void void ( ) { this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest = new MockHttpServletRequest ( ) ; this . org.springframework.web.servlet.config.annotation.NativeWebRequest = new ServletWebRequest ( this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest ) ; this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer = new ContentNegotiationConfigurer ( this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest . getServletContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentNegotiationManager org.springframework.web.servlet.config.annotation.ContentNegotiationManager = this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . getContentNegotiationManager ( ) ; this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest . setRequestURI ( STRING ) ; assertEquals ( STRING , java.util.Arrays . java.util.List ( MediaType . IMAGE_GIF ) , org.springframework.web.servlet.config.annotation.ContentNegotiationManager . resolveMediaTypes ( this . org.springframework.web.servlet.config.annotation.NativeWebRequest ) ) ; this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest . setRequestURI ( STRING ) ; this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest . addParameter ( STRING , STRING ) ; assertEquals ( STRING , java.util.Collections . java.util.List<java.lang.Object> ( ) , org.springframework.web.servlet.config.annotation.ContentNegotiationManager . resolveMediaTypes ( this . org.springframework.web.servlet.config.annotation.NativeWebRequest ) ) ; this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest . setRequestURI ( STRING ) ; this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest . addHeader ( STRING , MediaType . IMAGE_GIF_VALUE ) ; assertEquals ( STRING , java.util.Arrays . java.util.List ( MediaType . IMAGE_GIF ) , org.springframework.web.servlet.config.annotation.ContentNegotiationManager . resolveMediaTypes ( this . org.springframework.web.servlet.config.annotation.NativeWebRequest ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . mediaTypes ( java.util.Collections . java.util.Map ( STRING , MediaType . APPLICATION_JSON ) ) ; ContentNegotiationManager org.springframework.web.servlet.config.annotation.ContentNegotiationManager = this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . getContentNegotiationManager ( ) ; this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest . setRequestURI ( STRING ) ; assertEquals ( java.util.Arrays . java.util.List ( MediaType . APPLICATION_JSON ) , org.springframework.web.servlet.config.annotation.ContentNegotiationManager . resolveMediaTypes ( this . org.springframework.web.servlet.config.annotation.NativeWebRequest ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . favorParameter ( true ) ; this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . parameterName ( STRING ) ; this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . mediaTypes ( java.util.Collections . java.util.Map ( STRING , MediaType . APPLICATION_JSON ) ) ; ContentNegotiationManager org.springframework.web.servlet.config.annotation.ContentNegotiationManager = this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . getContentNegotiationManager ( ) ; this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest . setRequestURI ( STRING ) ; this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest . addParameter ( STRING , STRING ) ; assertEquals ( java.util.Arrays . java.util.List ( MediaType . APPLICATION_JSON ) , org.springframework.web.servlet.config.annotation.ContentNegotiationManager . resolveMediaTypes ( this . org.springframework.web.servlet.config.annotation.NativeWebRequest ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . ignoreAcceptHeader ( true ) ; ContentNegotiationManager org.springframework.web.servlet.config.annotation.ContentNegotiationManager = this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . getContentNegotiationManager ( ) ; this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest . setRequestURI ( STRING ) ; this . org.springframework.web.servlet.config.annotation.MockHttpServletRequest . addHeader ( STRING , MediaType . IMAGE_GIF_VALUE ) ; assertEquals ( java.util.Collections . java.util.List<java.lang.Object> ( ) , org.springframework.web.servlet.config.annotation.ContentNegotiationManager . resolveMediaTypes ( this . org.springframework.web.servlet.config.annotation.NativeWebRequest ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . defaultContentType ( MediaType . APPLICATION_JSON ) ; ContentNegotiationManager org.springframework.web.servlet.config.annotation.ContentNegotiationManager = this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . getContentNegotiationManager ( ) ; assertEquals ( java.util.Arrays . java.util.List ( MediaType . APPLICATION_JSON ) , org.springframework.web.servlet.config.annotation.ContentNegotiationManager . resolveMediaTypes ( this . org.springframework.web.servlet.config.annotation.NativeWebRequest ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . defaultContentTypeStrategy ( new FixedContentNegotiationStrategy ( MediaType . APPLICATION_JSON ) ) ; ContentNegotiationManager org.springframework.web.servlet.config.annotation.ContentNegotiationManager = this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer . getContentNegotiationManager ( ) ; assertEquals ( java.util.Arrays . java.util.List ( MediaType . APPLICATION_JSON ) , org.springframework.web.servlet.config.annotation.ContentNegotiationManager . resolveMediaTypes ( this . org.springframework.web.servlet.config.annotation.NativeWebRequest ) ) ; }  <METHOD_END>
