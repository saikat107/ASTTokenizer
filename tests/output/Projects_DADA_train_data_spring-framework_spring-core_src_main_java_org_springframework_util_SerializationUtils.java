<METHOD_START> public static byte [] byte[] ( java.lang.Object java.lang.Object ) { if ( java.lang.Object == null ) { return null ; } java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( NUMBER ) ; try { java.io.ObjectOutputStream java.io.ObjectOutputStream = new java.io.ObjectOutputStream ( java.io.ByteArrayOutputStream ) ; java.io.ObjectOutputStream . void ( java.lang.Object ) ; java.io.ObjectOutputStream . void ( ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) , java.io.IOException ) ; } return java.io.ByteArrayOutputStream . byte[] ( ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.Object java.lang.Object ( byte [] byte[] ) { if ( byte[] == null ) { return null ; } try { java.io.ObjectInputStream java.io.ObjectInputStream = new java.io.ObjectInputStream ( new java.io.ByteArrayInputStream ( byte[] ) ) ; return java.io.ObjectInputStream . java.lang.Object ( ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalArgumentException ( STRING , java.io.IOException ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { throw new java.lang.IllegalStateException ( STRING , java.lang.ClassNotFoundException ) ; } }  <METHOD_END>
