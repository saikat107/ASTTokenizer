<METHOD_START> public void ( TransactionManager org.springframework.transaction.jta.TransactionManager ) throws org.springframework.transaction.jta.SystemException { Assert . notNull ( org.springframework.transaction.jta.TransactionManager , STRING ) ; this . org.springframework.transaction.jta.TransactionManager = org.springframework.transaction.jta.TransactionManager ; }  <METHOD_END>
<METHOD_START> public final org.springframework.transaction.jta.TransactionManager org.springframework.transaction.jta.TransactionManager ( ) { return this . org.springframework.transaction.jta.TransactionManager ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.transaction.jta.RollbackException , org.springframework.transaction.jta.HeuristicMixedException , org.springframework.transaction.jta.HeuristicRollbackException , java.lang.SecurityException , org.springframework.transaction.jta.SystemException { this . org.springframework.transaction.jta.TransactionManager . commit ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.transaction.jta.SystemException { this . org.springframework.transaction.jta.TransactionManager . rollback ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.transaction.jta.SystemException { this . org.springframework.transaction.jta.TransactionManager . setRollbackOnly ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) org.springframework.transaction.jta.SystemException { return this . org.springframework.transaction.jta.TransactionManager . getStatus ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( javax.transaction.xa.XAResource javax.transaction.xa.XAResource ) throws org.springframework.transaction.jta.RollbackException , org.springframework.transaction.jta.SystemException { return this . org.springframework.transaction.jta.TransactionManager . getTransaction ( ) . enlistResource ( javax.transaction.xa.XAResource ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( javax.transaction.xa.XAResource javax.transaction.xa.XAResource , int int ) throws org.springframework.transaction.jta.SystemException { return this . org.springframework.transaction.jta.TransactionManager . getTransaction ( ) . delistResource ( javax.transaction.xa.XAResource , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Synchronization org.springframework.transaction.jta.Synchronization ) throws org.springframework.transaction.jta.RollbackException , org.springframework.transaction.jta.SystemException { this . org.springframework.transaction.jta.TransactionManager . getTransaction ( ) . registerSynchronization ( org.springframework.transaction.jta.Synchronization ) ; }  <METHOD_END>
