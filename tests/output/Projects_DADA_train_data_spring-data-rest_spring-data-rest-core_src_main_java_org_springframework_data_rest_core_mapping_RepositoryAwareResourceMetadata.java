<METHOD_START> public void ( PersistentEntity < ? , ? > org.springframework.data.rest.core.mapping.PersistentEntity<?,?> , CollectionResourceMapping org.springframework.data.rest.core.mapping.CollectionResourceMapping , RepositoryResourceMappings org.springframework.data.rest.core.mapping.RepositoryResourceMappings , RepositoryMetadata org.springframework.data.rest.core.mapping.RepositoryMetadata ) { Assert . notNull ( org.springframework.data.rest.core.mapping.PersistentEntity<,> , STRING ) ; Assert . notNull ( org.springframework.data.rest.core.mapping.CollectionResourceMapping , STRING ) ; Assert . notNull ( org.springframework.data.rest.core.mapping.RepositoryResourceMappings , STRING ) ; Assert . notNull ( org.springframework.data.rest.core.mapping.RepositoryMetadata , STRING ) ; this . org.springframework.data.rest.core.mapping.CollectionResourceMapping = org.springframework.data.rest.core.mapping.CollectionResourceMapping ; this . org.springframework.data.rest.core.mapping.PersistentEntitiesResourceMappings = org.springframework.data.rest.core.mapping.RepositoryResourceMappings ; this . org.springframework.data.rest.core.mapping.RepositoryMetadata = org.springframework.data.rest.core.mapping.RepositoryMetadata ; this . org.springframework.data.rest.core.mapping.SupportedHttpMethods = new CrudMethodsSupportedHttpMethods ( org.springframework.data.rest.core.mapping.RepositoryMetadata . getCrudMethods ( ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return AnnotationUtils . findAnnotation ( org.springframework.data.rest.core.mapping.RepositoryMetadata . getRepositoryInterface ( ) , Primary .class ) != null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.data.rest.core.mapping.RepositoryMetadata . getDomainType ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.PropertyAwareResourceMapping org.springframework.data.rest.core.mapping.PropertyAwareResourceMapping ( java.lang.String java.lang.String ) { if ( this . org.springframework.data.rest.core.mapping.MappingResourceMetadata == null ) { this . org.springframework.data.rest.core.mapping.MappingResourceMetadata = org.springframework.data.rest.core.mapping.PersistentEntitiesResourceMappings . getMappingMetadataFor ( java.lang.Class<?> ( ) ) ; } return org.springframework.data.rest.core.mapping.MappingResourceMetadata . getProperty ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping ( PersistentProperty < ? > org.springframework.data.rest.core.mapping.PersistentProperty<?> ) { return org.springframework.data.rest.core.mapping.PersistentEntitiesResourceMappings . getMappingFor ( org.springframework.data.rest.core.mapping.PersistentProperty<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( PersistentProperty < ? > org.springframework.data.rest.core.mapping.PersistentProperty<?> ) { return org.springframework.data.rest.core.mapping.PersistentEntitiesResourceMappings . isMapped ( org.springframework.data.rest.core.mapping.PersistentProperty<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.rest.core.mapping.CollectionResourceMapping . isExported ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.rest.core.mapping.CollectionResourceMapping . getRel ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.rest.core.mapping.CollectionResourceMapping . getItemResourceRel ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.Path org.springframework.data.rest.core.mapping.Path ( ) { return org.springframework.data.rest.core.mapping.CollectionResourceMapping . getPath ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.rest.core.mapping.CollectionResourceMapping . isPagingResource ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.ResourceDescription org.springframework.data.rest.core.mapping.ResourceDescription ( ) { return org.springframework.data.rest.core.mapping.CollectionResourceMapping . getDescription ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.ResourceDescription org.springframework.data.rest.core.mapping.ResourceDescription ( ) { return org.springframework.data.rest.core.mapping.CollectionResourceMapping . getItemResourceDescription ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.data.rest.core.mapping.CollectionResourceMapping . getExcerptProjection ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.SearchResourceMappings org.springframework.data.rest.core.mapping.SearchResourceMappings ( ) { return org.springframework.data.rest.core.mapping.PersistentEntitiesResourceMappings . getSearchResourceMappings ( org.springframework.data.rest.core.mapping.RepositoryMetadata . getDomainType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.SupportedHttpMethods org.springframework.data.rest.core.mapping.SupportedHttpMethods ( ) { return org.springframework.data.rest.core.mapping.SupportedHttpMethods ; }  <METHOD_END>
