<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.jmx.support.MBeanServerNotFoundException { try { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<? extends org.springframework.jmx.support.WebSphereMBeanServerFactoryBean> ( ) . java.lang.ClassLoader ( ) . java.lang.Class<?> ( java.lang.String ) ; java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<> . java.lang.reflect.Method ( java.lang.String ) ; java.lang.Object java.lang.Object = java.lang.reflect.Method . java.lang.Object ( null ) ; java.lang.reflect.Method java.lang.reflect.Method = java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.reflect.Method ( java.lang.String ) ; this . javax.management.MBeanServer = ( javax.management.MBeanServer ) java.lang.reflect.Method . java.lang.Object ( java.lang.Object ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { throw new MBeanServerNotFoundException ( STRING , java.lang.ClassNotFoundException ) ; } catch ( java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException ) { throw new MBeanServerNotFoundException ( STRING , java.lang.reflect.InvocationTargetException . java.lang.Throwable ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new MBeanServerNotFoundException ( STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.management.MBeanServer javax.management.MBeanServer ( ) { return this . javax.management.MBeanServer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<? extends javax.management.MBeanServer> < ? extends javax.management.MBeanServer > java.lang.Class<? extends javax.management.MBeanServer> ( ) { return ( this . javax.management.MBeanServer != null ? this . javax.management.MBeanServer . java.lang.Class<? extends javax.management.MBeanServer> ( ) : javax.management.MBeanServer .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
