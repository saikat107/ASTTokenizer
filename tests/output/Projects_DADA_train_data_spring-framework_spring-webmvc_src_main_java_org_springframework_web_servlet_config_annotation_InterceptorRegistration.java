<METHOD_START> public void ( HandlerInterceptor org.springframework.web.servlet.config.annotation.HandlerInterceptor ) { Assert . notNull ( org.springframework.web.servlet.config.annotation.HandlerInterceptor , STRING ) ; this . org.springframework.web.servlet.config.annotation.HandlerInterceptor = org.springframework.web.servlet.config.annotation.HandlerInterceptor ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.InterceptorRegistration org.springframework.web.servlet.config.annotation.InterceptorRegistration ( java.lang.String ... java.lang.String[] ) { this . java.util.List<java.lang.String> . boolean ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.InterceptorRegistration org.springframework.web.servlet.config.annotation.InterceptorRegistration ( java.lang.String ... java.lang.String[] ) { this . java.util.List<java.lang.String> . boolean ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.InterceptorRegistration org.springframework.web.servlet.config.annotation.InterceptorRegistration ( PathMatcher org.springframework.web.servlet.config.annotation.PathMatcher ) { this . org.springframework.web.servlet.config.annotation.PathMatcher = org.springframework.web.servlet.config.annotation.PathMatcher ; return this ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( ) { if ( this . java.util.List<java.lang.String> . boolean ( ) && this . java.util.List<java.lang.String> . boolean ( ) ) { return this . org.springframework.web.servlet.config.annotation.HandlerInterceptor ; } java.lang.String [] java.lang.String[] = java.lang.String[] ( this . java.util.List<java.lang.String> ) ; java.lang.String [] java.lang.String[] = java.lang.String[] ( this . java.util.List<java.lang.String> ) ; MappedInterceptor org.springframework.web.servlet.config.annotation.MappedInterceptor = new MappedInterceptor ( java.lang.String[] , java.lang.String[] , this . org.springframework.web.servlet.config.annotation.HandlerInterceptor ) ; if ( this . org.springframework.web.servlet.config.annotation.PathMatcher != null ) { org.springframework.web.servlet.config.annotation.MappedInterceptor . setPathMatcher ( this . org.springframework.web.servlet.config.annotation.PathMatcher ) ; } return org.springframework.web.servlet.config.annotation.MappedInterceptor ; }  <METHOD_END>
<METHOD_START> private static java.lang.String [] java.lang.String[] ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return ( CollectionUtils . isEmpty ( java.util.List<java.lang.String> ) ? null : java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ) ; }  <METHOD_END>
