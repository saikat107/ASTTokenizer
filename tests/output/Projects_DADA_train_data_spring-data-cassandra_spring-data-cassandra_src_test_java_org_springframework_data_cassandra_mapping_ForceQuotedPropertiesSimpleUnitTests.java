<METHOD_START> @ Test public void void ( ) { CassandraPersistentEntity < ? > org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?> = org.springframework.data.cassandra.mapping.CassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.ForceQuotedPropertiesSimpleUnitTests.Implicit .class ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CassandraPersistentEntity < ? > org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?> = org.springframework.data.cassandra.mapping.CassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.ForceQuotedPropertiesSimpleUnitTests.Default .class ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CassandraPersistentEntity < ? > org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?> = org.springframework.data.cassandra.mapping.CassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.ForceQuotedPropertiesSimpleUnitTests.Explicit .class ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING + java.lang.String + STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING + java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CassandraPersistentEntity < ? > org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?> = org.springframework.data.cassandra.mapping.CassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.ForceQuotedPropertiesSimpleUnitTests.ImplicitKey .class ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING ) ; java.util.List<org.springframework.data.cassandra.mapping.CqlIdentifier> < CqlIdentifier > java.util.List<org.springframework.data.cassandra.mapping.CqlIdentifier> = java.util.Arrays . java.util.List ( quotedCqlId ( STRING ) , quotedCqlId ( STRING ) ) ; CassandraPersistentEntity < ? > org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?> = org.springframework.data.cassandra.mapping.CassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.ForceQuotedPropertiesSimpleUnitTests.ImplicitComposite .class ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) . getColumnNames ( ) ) . isEqualTo ( java.util.List<org.springframework.data.cassandra.mapping.CqlIdentifier> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CassandraPersistentEntity < ? > org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?> = org.springframework.data.cassandra.mapping.CassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.ForceQuotedPropertiesSimpleUnitTests.DefaultKey .class ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) ) . isEqualTo ( CqlIdentifier . cqlId ( STRING ) ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) ) . isEqualTo ( CqlIdentifier . cqlId ( STRING ) ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING ) ; java.util.List<org.springframework.data.cassandra.mapping.CqlIdentifier> < CqlIdentifier > java.util.List<org.springframework.data.cassandra.mapping.CqlIdentifier> = java.util.Arrays . java.util.List ( cqlId ( STRING ) , cqlId ( STRING ) ) ; CassandraPersistentEntity < ? > org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?> = org.springframework.data.cassandra.mapping.CassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.ForceQuotedPropertiesSimpleUnitTests.DefaultComposite .class ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) . getColumnNames ( ) ) . isEqualTo ( java.util.List<org.springframework.data.cassandra.mapping.CqlIdentifier> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CassandraPersistentEntity < ? > org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?> = org.springframework.data.cassandra.mapping.CassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.ForceQuotedPropertiesSimpleUnitTests.ExplicitKey .class ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; CassandraPersistentProperty org.springframework.data.cassandra.mapping.CassandraPersistentProperty = org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) ) . isEqualTo ( CqlIdentifier . cqlId ( STRING , true ) ) . isNotEqualTo ( CqlIdentifier . cqlId ( STRING ) ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING + java.lang.String + STRING ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentProperty . getColumnName ( ) . toCql ( ) ) . isEqualTo ( STRING + java.lang.String + STRING ) ; java.util.List<org.springframework.data.cassandra.mapping.CqlIdentifier> < CqlIdentifier > java.util.List<org.springframework.data.cassandra.mapping.CqlIdentifier> = java.util.Arrays . java.util.List ( quotedCqlId ( java.lang.String ) , quotedCqlId ( java.lang.String ) ) ; CassandraPersistentEntity < ? > org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?> = org.springframework.data.cassandra.mapping.CassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.ForceQuotedPropertiesSimpleUnitTests.ExplicitComposite .class ) ; assertThat ( org.springframework.data.cassandra.mapping.CassandraPersistentEntity<> . getRequiredPersistentProperty ( STRING ) . getColumnNames ( ) ) . isEqualTo ( java.util.List<org.springframework.data.cassandra.mapping.CqlIdentifier> ) ; }  <METHOD_END>
