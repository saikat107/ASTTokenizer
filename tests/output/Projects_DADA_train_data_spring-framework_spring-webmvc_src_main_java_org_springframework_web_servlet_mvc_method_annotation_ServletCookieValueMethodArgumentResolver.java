<METHOD_START> public void ( ConfigurableBeanFactory org.springframework.web.servlet.mvc.method.annotation.ConfigurableBeanFactory ) { super( org.springframework.web.servlet.mvc.method.annotation.ConfigurableBeanFactory ); }  <METHOD_END>
<METHOD_START> public void void ( UrlPathHelper org.springframework.web.servlet.mvc.method.annotation.UrlPathHelper ) { this . org.springframework.web.servlet.mvc.method.annotation.UrlPathHelper = org.springframework.web.servlet.mvc.method.annotation.UrlPathHelper ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.String java.lang.String , MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , NativeWebRequest org.springframework.web.servlet.mvc.method.annotation.NativeWebRequest ) throws java.lang.Exception { HttpServletRequest org.springframework.web.servlet.mvc.method.annotation.HttpServletRequest = org.springframework.web.servlet.mvc.method.annotation.NativeWebRequest . getNativeRequest ( HttpServletRequest .class ) ; Cookie org.springframework.web.servlet.mvc.method.annotation.Cookie = WebUtils . getCookie ( org.springframework.web.servlet.mvc.method.annotation.HttpServletRequest , java.lang.String ) ; if ( Cookie .class . boolean ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter . getNestedParameterType ( ) ) ) { return org.springframework.web.servlet.mvc.method.annotation.Cookie ; } else if ( org.springframework.web.servlet.mvc.method.annotation.Cookie != null ) { return this . org.springframework.web.servlet.mvc.method.annotation.UrlPathHelper . decodeRequestString ( org.springframework.web.servlet.mvc.method.annotation.HttpServletRequest , org.springframework.web.servlet.mvc.method.annotation.Cookie . getValue ( ) ) ; } else { return null ; } }  <METHOD_END>
