<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setSerializers ( ( org.springframework.http.converter.json.JsonSerializer<?> < ? > [] ) null ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setSerializersByType ( null ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setDeserializersByType ( null ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setFeaturesToEnable ( ( java.lang.Object [] ) null ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setFeaturesToDisable ( ( java.lang.Object [] ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = FatalBeanException .class ) public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setFeaturesToEnable ( java.lang.Boolean . java.lang.Boolean ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setAutoDetectFields ( false ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setAutoDetectGettersSetters ( false ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setDefaultViewInclusion ( false ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setFailOnEmptyBeans ( false ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setIndentOutput ( true ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; ObjectMapper org.springframework.http.converter.json.ObjectMapper = this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getSerializationConfig ( ) . isEnabled ( MapperFeature . AUTO_DETECT_FIELDS ) ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getDeserializationConfig ( ) . isEnabled ( MapperFeature . AUTO_DETECT_FIELDS ) ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getSerializationConfig ( ) . isEnabled ( MapperFeature . AUTO_DETECT_GETTERS ) ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getDeserializationConfig ( ) . isEnabled ( MapperFeature . AUTO_DETECT_SETTERS ) ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getDeserializationConfig ( ) . isEnabled ( MapperFeature . DEFAULT_VIEW_INCLUSION ) ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getSerializationConfig ( ) . isEnabled ( SerializationFeature . FAIL_ON_EMPTY_BEANS ) ) ; assertTrue ( org.springframework.http.converter.json.ObjectMapper . getSerializationConfig ( ) . isEnabled ( SerializationFeature . INDENT_OUTPUT ) ) ; assertSame ( Include . ALWAYS , org.springframework.http.converter.json.ObjectMapper . getSerializationConfig ( ) . getSerializationInclusion ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertSame ( Include . ALWAYS , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getSerializationConfig ( ) . getSerializationInclusion ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setSerializationInclusion ( Include . NON_NULL ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertSame ( Include . NON_NULL , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getSerializationConfig ( ) . getSerializationInclusion ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setSerializationInclusion ( Include . NON_DEFAULT ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertSame ( Include . NON_DEFAULT , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getSerializationConfig ( ) . getSerializationInclusion ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setSerializationInclusion ( Include . NON_EMPTY ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertSame ( Include . NON_EMPTY , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getSerializationConfig ( ) . getSerializationInclusion ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setDateFormat ( this . java.text.SimpleDateFormat ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertEquals ( this . java.text.SimpleDateFormat , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getSerializationConfig ( ) . getDateFormat ( ) ) ; assertEquals ( this . java.text.SimpleDateFormat , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getDeserializationConfig ( ) . getDateFormat ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setSimpleDateFormat ( java.lang.String ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertEquals ( this . java.text.SimpleDateFormat , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getSerializationConfig ( ) . getDateFormat ( ) ) ; assertEquals ( this . java.text.SimpleDateFormat , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getDeserializationConfig ( ) . getDateFormat ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setLocale ( java.util.Locale . java.util.Locale ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertEquals ( java.util.Locale . java.util.Locale , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getSerializationConfig ( ) . getLocale ( ) ) ; assertEquals ( java.util.Locale . java.util.Locale , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getDeserializationConfig ( ) . getLocale ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.TimeZone java.util.TimeZone = java.util.TimeZone . java.util.TimeZone ( STRING ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setTimeZone ( java.util.TimeZone ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertEquals ( java.util.TimeZone , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getSerializationConfig ( ) . getTimeZone ( ) ) ; assertEquals ( java.util.TimeZone , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getDeserializationConfig ( ) . getTimeZone ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setTimeZone ( java.util.TimeZone . java.util.TimeZone ( STRING ) ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; java.util.TimeZone java.util.TimeZone = java.util.TimeZone . java.util.TimeZone ( STRING ) ; assertEquals ( java.util.TimeZone , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getSerializationConfig ( ) . getTimeZone ( ) ) ; assertEquals ( java.util.TimeZone , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getDeserializationConfig ( ) . getTimeZone ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { NumberSerializer org.springframework.http.converter.json.NumberSerializer = new NumberSerializer ( java.lang.Integer .class ) ; SimpleModule org.springframework.http.converter.json.SimpleModule = new SimpleModule ( ) ; org.springframework.http.converter.json.SimpleModule . addSerializer ( java.lang.Integer .class , org.springframework.http.converter.json.NumberSerializer ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setModules ( java.util.Arrays . java.util.List ( new Module [] { org.springframework.http.converter.json.SimpleModule } ) ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; ObjectMapper org.springframework.http.converter.json.ObjectMapper = this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ; Serializers org.springframework.http.converter.json.Serializers = org.springframework.http.converter.json.SerializerFactoryConfig ( org.springframework.http.converter.json.ObjectMapper ) . serializers ( ) . iterator ( ) . next ( ) ; assertSame ( org.springframework.http.converter.json.NumberSerializer , org.springframework.http.converter.json.Serializers . findSerializer ( null , SimpleType . construct ( java.lang.Integer .class ) , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.http.converter.json.JsonProcessingException , java.io.UnsupportedEncodingException { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; ObjectMapper org.springframework.http.converter.json.ObjectMapper = this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ; java.lang.Long java.lang.Long = NUMBER ; DateTime org.springframework.http.converter.json.DateTime = new DateTime ( java.lang.Long , DateTimeZone . UTC ) ; assertEquals ( java.lang.Long . java.lang.String ( ) , new java.lang.String ( org.springframework.http.converter.json.ObjectMapper . writeValueAsBytes ( org.springframework.http.converter.json.DateTime ) , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) org.springframework.http.converter.json.JsonProcessingException , java.io.UnsupportedEncodingException { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setModulesToInstall ( org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBeanTests.CustomIntegerModule .class ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; ObjectMapper org.springframework.http.converter.json.ObjectMapper = this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ; DateTime org.springframework.http.converter.json.DateTime = new DateTime ( NUMBER , DateTimeZone . UTC ) ; assertEquals ( STRING , new java.lang.String ( org.springframework.http.converter.json.ObjectMapper . writeValueAsBytes ( org.springframework.http.converter.json.DateTime ) , STRING ) ) ; assertThat ( new java.lang.String ( org.springframework.http.converter.json.ObjectMapper . writeValueAsBytes ( new java.lang.Integer ( NUMBER ) ) , STRING ) , containsString ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.http.converter.json.JsonProcessingException , java.io.UnsupportedEncodingException { java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> < java.lang.Class<?> < ? > , JsonSerializer < ? > > java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> = new java.util.HashMap<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> <> ( ) ; java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> . put ( java.lang.Integer .class , new org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBeanTests.CustomIntegerSerializer ( ) ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setSerializersByType ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; ObjectMapper org.springframework.http.converter.json.ObjectMapper = this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ; DateTime org.springframework.http.converter.json.DateTime = new DateTime ( NUMBER , DateTimeZone . UTC ) ; assertEquals ( STRING , new java.lang.String ( org.springframework.http.converter.json.ObjectMapper . writeValueAsBytes ( org.springframework.http.converter.json.DateTime ) , STRING ) ) ; assertThat ( new java.lang.String ( org.springframework.http.converter.json.ObjectMapper . writeValueAsBytes ( new java.lang.Integer ( NUMBER ) ) , STRING ) , containsString ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertNotNull ( this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ) ; assertTrue ( this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . isSingleton ( ) ) ; assertEquals ( ObjectMapper .class , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObjectType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNull ( this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObjectType ( ) ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.http.converter.json.SerializerFactoryConfig org.springframework.http.converter.json.SerializerFactoryConfig ( ObjectMapper org.springframework.http.converter.json.ObjectMapper ) { return ( ( BasicSerializerFactory ) org.springframework.http.converter.json.ObjectMapper . getSerializerFactory ( ) ) . getFactoryConfig ( ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.http.converter.json.DeserializerFactoryConfig org.springframework.http.converter.json.DeserializerFactoryConfig ( ObjectMapper org.springframework.http.converter.json.ObjectMapper ) { return ( ( BasicDeserializerFactory ) org.springframework.http.converter.json.ObjectMapper . getDeserializationContext ( ) . getFactory ( ) ) . getFactoryConfig ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { PropertyNamingStrategy org.springframework.http.converter.json.PropertyNamingStrategy = new PropertyNamingStrategy . PropertyNamingStrategy ( ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setPropertyNamingStrategy ( org.springframework.http.converter.json.PropertyNamingStrategy ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertSame ( org.springframework.http.converter.json.PropertyNamingStrategy , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getSerializationConfig ( ) . getPropertyNamingStrategy ( ) ) ; assertSame ( org.springframework.http.converter.json.PropertyNamingStrategy , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getDeserializationConfig ( ) . getPropertyNamingStrategy ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.String .class ; java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Object .class ; java.util.Map<java.lang.Class<?>,java.lang.Class<?>> < java.lang.Class<?> < ? > , java.lang.Class<?> < ? > > java.util.Map<java.lang.Class<?>,java.lang.Class<?>> = new java.util.HashMap<java.lang.Class<?>,java.lang.Class<?>> <> ( ) ; java.util.Map<java.lang.Class<?>,java.lang.Class<?>> . java.lang.Class<?> ( java.lang.Class<> , java.lang.Class<> ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setModules ( java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setMixIns ( java.util.Map<java.lang.Class<?>,java.lang.Class<?>> ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; ObjectMapper org.springframework.http.converter.json.ObjectMapper = this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ; assertEquals ( NUMBER , org.springframework.http.converter.json.ObjectMapper . mixInCount ( ) ) ; assertSame ( java.lang.Class<> , org.springframework.http.converter.json.ObjectMapper . findMixInClassFor ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.http.converter.json.JsonProcessingException { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setFilters ( new SimpleFilterProvider ( ) . setFailOnUnknownId ( false ) ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; ObjectMapper org.springframework.http.converter.json.ObjectMapper = this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ; org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBeanTests.JacksonFilteredBean org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBeanTests.JacksonFilteredBean = new org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBeanTests.JacksonFilteredBean ( STRING , STRING ) ; java.lang.String java.lang.String = org.springframework.http.converter.json.ObjectMapper . writeValueAsString ( org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBeanTests.JacksonFilteredBean ) ; assertThat ( java.lang.String , containsString ( STRING ) ) ; assertThat ( java.lang.String , containsString ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { NopAnnotationIntrospector org.springframework.http.converter.json.NopAnnotationIntrospector = NopAnnotationIntrospector . instance ; ObjectMapper org.springframework.http.converter.json.ObjectMapper = new ObjectMapper ( ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setObjectMapper ( org.springframework.http.converter.json.ObjectMapper ) ; assertTrue ( this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . isSingleton ( ) ) ; assertEquals ( ObjectMapper .class , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObjectType ( ) ) ; java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> < java.lang.Class<?> < ? > , JsonDeserializer < ? > > java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> = new java.util.HashMap<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> <> ( ) ; java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> . put ( java.util.Date .class , new DateDeserializer ( ) ) ; JsonSerializer < java.lang.Class<?> < ? > > org.springframework.http.converter.json.JsonSerializer<java.lang.Class<?>> = new ClassSerializer ( ) ; JsonSerializer < java.lang.Number > org.springframework.http.converter.json.JsonSerializer<java.lang.Number> = new NumberSerializer ( java.lang.Integer .class ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setModules ( new java.util.ArrayList <> ( ) ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setSerializers ( org.springframework.http.converter.json.JsonSerializer<java.lang.Class<?>> ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setSerializersByType ( java.util.Collections . java.util.Map ( java.lang.Boolean .class , org.springframework.http.converter.json.JsonSerializer<java.lang.Number> ) ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setDeserializersByType ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setAnnotationIntrospector ( org.springframework.http.converter.json.NopAnnotationIntrospector ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setFeaturesToEnable ( SerializationFeature . FAIL_ON_EMPTY_BEANS , DeserializationFeature . UNWRAP_ROOT_VALUE , JsonParser . Feature . ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER , JsonGenerator . Feature . WRITE_NUMBERS_AS_STRINGS ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setFeaturesToDisable ( MapperFeature . AUTO_DETECT_GETTERS , MapperFeature . AUTO_DETECT_FIELDS , JsonParser . Feature . AUTO_CLOSE_SOURCE , JsonGenerator . Feature . QUOTE_FIELD_NAMES ) ; assertFalse ( org.springframework.http.converter.json.SerializerFactoryConfig ( org.springframework.http.converter.json.ObjectMapper ) . hasSerializers ( ) ) ; assertFalse ( org.springframework.http.converter.json.DeserializerFactoryConfig ( org.springframework.http.converter.json.ObjectMapper ) . hasDeserializers ( ) ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setSerializationInclusion ( Include . NON_NULL ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertSame ( org.springframework.http.converter.json.ObjectMapper , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ) ; assertTrue ( org.springframework.http.converter.json.SerializerFactoryConfig ( org.springframework.http.converter.json.ObjectMapper ) . hasSerializers ( ) ) ; assertTrue ( org.springframework.http.converter.json.DeserializerFactoryConfig ( org.springframework.http.converter.json.ObjectMapper ) . hasDeserializers ( ) ) ; Serializers org.springframework.http.converter.json.Serializers = org.springframework.http.converter.json.SerializerFactoryConfig ( org.springframework.http.converter.json.ObjectMapper ) . serializers ( ) . iterator ( ) . next ( ) ; assertSame ( org.springframework.http.converter.json.JsonSerializer<java.lang.Class<?>> , org.springframework.http.converter.json.Serializers . findSerializer ( null , SimpleType . construct ( java.lang.Class .class ) , null ) ) ; assertSame ( org.springframework.http.converter.json.JsonSerializer<java.lang.Number> , org.springframework.http.converter.json.Serializers . findSerializer ( null , SimpleType . construct ( java.lang.Boolean .class ) , null ) ) ; assertNull ( org.springframework.http.converter.json.Serializers . findSerializer ( null , SimpleType . construct ( java.lang.Number .class ) , null ) ) ; assertSame ( org.springframework.http.converter.json.NopAnnotationIntrospector , org.springframework.http.converter.json.ObjectMapper . getSerializationConfig ( ) . getAnnotationIntrospector ( ) ) ; assertSame ( org.springframework.http.converter.json.NopAnnotationIntrospector , org.springframework.http.converter.json.ObjectMapper . getDeserializationConfig ( ) . getAnnotationIntrospector ( ) ) ; assertTrue ( org.springframework.http.converter.json.ObjectMapper . getSerializationConfig ( ) . isEnabled ( SerializationFeature . FAIL_ON_EMPTY_BEANS ) ) ; assertTrue ( org.springframework.http.converter.json.ObjectMapper . getDeserializationConfig ( ) . isEnabled ( DeserializationFeature . UNWRAP_ROOT_VALUE ) ) ; assertTrue ( org.springframework.http.converter.json.ObjectMapper . getFactory ( ) . isEnabled ( JsonParser . Feature . ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER ) ) ; assertTrue ( org.springframework.http.converter.json.ObjectMapper . getFactory ( ) . isEnabled ( JsonGenerator . Feature . WRITE_NUMBERS_AS_STRINGS ) ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getSerializationConfig ( ) . isEnabled ( MapperFeature . AUTO_DETECT_GETTERS ) ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getDeserializationConfig ( ) . isEnabled ( MapperFeature . DEFAULT_VIEW_INCLUSION ) ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getDeserializationConfig ( ) . isEnabled ( DeserializationFeature . FAIL_ON_UNKNOWN_PROPERTIES ) ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getDeserializationConfig ( ) . isEnabled ( MapperFeature . AUTO_DETECT_FIELDS ) ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getFactory ( ) . isEnabled ( JsonParser . Feature . AUTO_CLOSE_SOURCE ) ) ; assertFalse ( org.springframework.http.converter.json.ObjectMapper . getFactory ( ) . isEnabled ( JsonGenerator . Feature . QUOTE_FIELD_NAMES ) ) ; assertSame ( Include . NON_NULL , org.springframework.http.converter.json.ObjectMapper . getSerializationConfig ( ) . getSerializationInclusion ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setObjectMapper ( new XmlMapper ( ) ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertNotNull ( this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ) ; assertTrue ( this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . isSingleton ( ) ) ; assertEquals ( XmlMapper .class , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObjectType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setCreateXmlMapper ( true ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertNotNull ( this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ) ; assertTrue ( this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . isSingleton ( ) ) ; assertEquals ( XmlMapper .class , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObjectType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . setFactory ( new SmileFactory ( ) ) ; this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . afterPropertiesSet ( ) ; assertNotNull ( this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) ) ; assertTrue ( this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . isSingleton ( ) ) ; assertEquals ( SmileFactory .class , this . org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean . getObject ( ) . getFactory ( ) . getClass ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.Class<? extends org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBeanTests.CustomIntegerModule> ( ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.converter.json.Version org.springframework.http.converter.json.Version ( ) { return Version . unknownVersion ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SetupContext org.springframework.http.converter.json.SetupContext ) { SimpleSerializers org.springframework.http.converter.json.SimpleSerializers = new SimpleSerializers ( ) ; org.springframework.http.converter.json.SimpleSerializers . addSerializer ( java.lang.Integer .class , new org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBeanTests.CustomIntegerSerializer ( ) ) ; org.springframework.http.converter.json.SetupContext . addSerializers ( org.springframework.http.converter.json.SimpleSerializers ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Integer java.lang.Integer , JsonGenerator org.springframework.http.converter.json.JsonGenerator , SerializerProvider org.springframework.http.converter.json.SerializerProvider ) throws java.io.IOException { org.springframework.http.converter.json.JsonGenerator . writeStartObject ( ) ; org.springframework.http.converter.json.JsonGenerator . writeNumberField ( STRING , java.lang.Integer ) ; org.springframework.http.converter.json.JsonGenerator . writeEndObject ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
