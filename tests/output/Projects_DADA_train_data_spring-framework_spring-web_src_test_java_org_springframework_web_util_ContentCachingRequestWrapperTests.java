<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.util.MockHttpServletRequest . setMethod ( STRING ) ; this . org.springframework.web.util.MockHttpServletRequest . setCharacterEncoding ( java.lang.String ) ; this . org.springframework.web.util.MockHttpServletRequest . setContent ( STRING . byte[] ( java.lang.String ) ) ; ContentCachingRequestWrapper org.springframework.web.util.ContentCachingRequestWrapper = new ContentCachingRequestWrapper ( this . org.springframework.web.util.MockHttpServletRequest ) ; byte [] byte[] = FileCopyUtils . copyToByteArray ( org.springframework.web.util.ContentCachingRequestWrapper . getInputStream ( ) ) ; assertArrayEquals ( byte[] , org.springframework.web.util.ContentCachingRequestWrapper . getContentAsByteArray ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.util.MockHttpServletRequest . setMethod ( STRING ) ; this . org.springframework.web.util.MockHttpServletRequest . setCharacterEncoding ( java.lang.String ) ; this . org.springframework.web.util.MockHttpServletRequest . setContent ( STRING . byte[] ( java.lang.String ) ) ; ContentCachingRequestWrapper org.springframework.web.util.ContentCachingRequestWrapper = new ContentCachingRequestWrapper ( this . org.springframework.web.util.MockHttpServletRequest , NUMBER ) ; byte [] byte[] = FileCopyUtils . copyToByteArray ( org.springframework.web.util.ContentCachingRequestWrapper . getInputStream ( ) ) ; assertArrayEquals ( STRING . byte[] ( java.lang.String ) , byte[] ) ; assertArrayEquals ( STRING . byte[] ( java.lang.String ) , org.springframework.web.util.ContentCachingRequestWrapper . getContentAsByteArray ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.util.MockHttpServletRequest . setMethod ( STRING ) ; this . org.springframework.web.util.MockHttpServletRequest . setCharacterEncoding ( java.lang.String ) ; this . org.springframework.web.util.MockHttpServletRequest . setContent ( STRING . byte[] ( java.lang.String ) ) ; ContentCachingRequestWrapper org.springframework.web.util.ContentCachingRequestWrapper = new ContentCachingRequestWrapper ( this . org.springframework.web.util.MockHttpServletRequest , NUMBER ) { @ java.lang.Override protected void void ( int int ) { throw new java.lang.IllegalStateException ( java.lang.String . java.lang.String ( int ) ) ; } } ; try { FileCopyUtils . copyToByteArray ( org.springframework.web.util.ContentCachingRequestWrapper . getInputStream ( ) ) ; fail ( STRING ) ; } catch ( java.lang.IllegalStateException java.lang.IllegalStateException ) { assertEquals ( STRING , java.lang.IllegalStateException . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int ) { throw new java.lang.IllegalStateException ( java.lang.String . java.lang.String ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.util.MockHttpServletRequest . setMethod ( STRING ) ; this . org.springframework.web.util.MockHttpServletRequest . setContentType ( java.lang.String ) ; this . org.springframework.web.util.MockHttpServletRequest . setCharacterEncoding ( java.lang.String ) ; this . org.springframework.web.util.MockHttpServletRequest . setParameter ( STRING , STRING ) ; this . org.springframework.web.util.MockHttpServletRequest . setParameter ( STRING , STRING , STRING ) ; ContentCachingRequestWrapper org.springframework.web.util.ContentCachingRequestWrapper = new ContentCachingRequestWrapper ( this . org.springframework.web.util.MockHttpServletRequest ) ; assertFalse ( org.springframework.web.util.ContentCachingRequestWrapper . getParameterMap ( ) . isEmpty ( ) ) ; assertEquals ( STRING , new java.lang.String ( org.springframework.web.util.ContentCachingRequestWrapper . getContentAsByteArray ( ) ) ) ; assertEquals ( STRING , new java.lang.String ( FileCopyUtils . copyToByteArray ( org.springframework.web.util.ContentCachingRequestWrapper . getInputStream ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.util.MockHttpServletRequest . setMethod ( STRING ) ; this . org.springframework.web.util.MockHttpServletRequest . setContentType ( java.lang.String ) ; this . org.springframework.web.util.MockHttpServletRequest . setCharacterEncoding ( java.lang.String ) ; this . org.springframework.web.util.MockHttpServletRequest . setParameter ( STRING , STRING ) ; this . org.springframework.web.util.MockHttpServletRequest . setParameter ( STRING , STRING , STRING ) ; ContentCachingRequestWrapper org.springframework.web.util.ContentCachingRequestWrapper = new ContentCachingRequestWrapper ( this . org.springframework.web.util.MockHttpServletRequest ) ; byte [] byte[] = FileCopyUtils . copyToByteArray ( org.springframework.web.util.ContentCachingRequestWrapper . getInputStream ( ) ) ; assertArrayEquals ( byte[] , org.springframework.web.util.ContentCachingRequestWrapper . getContentAsByteArray ( ) ) ; }  <METHOD_END>
