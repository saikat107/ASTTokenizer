<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.data.couchbase.repository.spel.User> < User > java.util.List<org.springframework.data.couchbase.repository.spel.User> = org.springframework.data.couchbase.repository.spel.SpelRepository . findCustomUsers ( ) ; assertEquals ( NUMBER , java.util.List<org.springframework.data.couchbase.repository.spel.User> . size ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.data.couchbase.repository.spel.User> . get ( NUMBER ) . getKey ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.data.couchbase.repository.spel.User> . get ( NUMBER ) . getUsername ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.data.couchbase.repository.spel.User> < User > java.util.List<org.springframework.data.couchbase.repository.spel.User> = org.springframework.data.couchbase.repository.spel.SpelRepository . findUserWithDynamicCriteria ( STRING , STRING ) ; java.util.List<org.springframework.data.couchbase.repository.spel.User> < User > java.util.List<org.springframework.data.couchbase.repository.spel.User> = org.springframework.data.couchbase.repository.spel.SpelRepository . findUserWithDynamicCriteria ( STRING , NUMBER ) ; assertThat ( java.util.List<org.springframework.data.couchbase.repository.spel.User> , hasSize ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.couchbase.repository.spel.User> , hasSize ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.couchbase.repository.spel.User> . get ( NUMBER ) . getKey ( ) , is ( STRING ) ) ; assertThat ( java.util.List<org.springframework.data.couchbase.repository.spel.User> . get ( NUMBER ) . getKey ( ) , is ( STRING ) ) ; }  <METHOD_END>
