<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.modelmbean.ModelMBeanAttributeInfo javax.management.modelmbean.ModelMBeanAttributeInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( AGE_ATTRIBUTE ) ; assertTrue ( STRING , javax.management.modelmbean.ModelMBeanAttributeInfo . boolean ( ) ) ; assertFalse ( STRING , javax.management.modelmbean.ModelMBeanAttributeInfo . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = ( javax.management.modelmbean.ModelMBeanInfo ) getMBeanInfo ( ) ; javax.management.MBeanAttributeInfo javax.management.MBeanAttributeInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( STRING ) ; assertNotNull ( STRING , javax.management.MBeanAttributeInfo ) ; assertTrue ( STRING , javax.management.MBeanAttributeInfo . boolean ( ) ) ; assertTrue ( STRING , javax.management.MBeanAttributeInfo . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.jmx.export.assembler.MBeanInfoAssembler org.springframework.jmx.export.assembler.MBeanInfoAssembler ( ) java.lang.Exception { MethodExclusionMBeanInfoAssembler org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler = new MethodExclusionMBeanInfoAssembler ( ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( java.lang.String , STRING ) ; org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler . setIgnoredMethodMappings ( java.util.Properties ) ; return org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler ; }  <METHOD_END>
