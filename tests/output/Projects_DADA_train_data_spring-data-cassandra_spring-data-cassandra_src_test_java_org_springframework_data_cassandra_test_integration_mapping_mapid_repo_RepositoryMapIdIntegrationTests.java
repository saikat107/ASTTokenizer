<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { return new java.lang.String [] { SinglePrimaryKeyColumn .class . java.lang.Package ( ) . java.lang.String ( ) } ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) { assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.CassandraOperations ) . isNotNull ( ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKecColumnRepository ) . isNotNull ( ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumnsRepository ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SinglePrimaryKeyColumn org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn = new SinglePrimaryKeyColumn ( uuid ( ) ) ; org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn . setValue ( uuid ( ) ) ; SinglePrimaryKeyColumn org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn = org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKecColumnRepository . save ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn ) . isSameAs ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn ) ; MapId org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MapId = id ( STRING , org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn . getKey ( ) ) ; SinglePrimaryKeyColumn org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn = org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKecColumnRepository . findOne ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MapId ) . get ( ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn ) . isNotSameAs ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn . getKey ( ) ) . isEqualTo ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn . getKey ( ) ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn . getValue ( ) ) . isEqualTo ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn . getValue ( ) ) ; org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn . setValue ( uuid ( ) ) ; SinglePrimaryKeyColumn org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn = org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKecColumnRepository . save ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn ) . isSameAs ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn ) ; org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn = org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKecColumnRepository . findOne ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MapId ) . get ( ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn ) . isNotSameAs ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn . getValue ( ) ) . isEqualTo ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn . getValue ( ) ) ; org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKecColumnRepository . delete ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKeyColumn ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.SinglePrimaryKecColumnRepository . findOne ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MapId ) ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MultiPrimaryKeyColumns org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns = new MultiPrimaryKeyColumns ( uuid ( ) , uuid ( ) ) ; org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . setValue ( uuid ( ) ) ; MultiPrimaryKeyColumns org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns = org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumnsRepository . save ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns ) . isSameAs ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns ) ; MapId org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MapId = id ( STRING , org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . getKey0 ( ) ) . with ( STRING , org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . getKey1 ( ) ) ; MultiPrimaryKeyColumns org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns = org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumnsRepository . findOne ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MapId ) . get ( ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns ) . isNotSameAs ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . getKey0 ( ) ) . isEqualTo ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . getKey0 ( ) ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . getKey1 ( ) ) . isEqualTo ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . getKey1 ( ) ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . getValue ( ) ) . isEqualTo ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . getValue ( ) ) ; org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . setValue ( uuid ( ) ) ; MultiPrimaryKeyColumns org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns = org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumnsRepository . save ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns ) . isSameAs ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns ) ; org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns = org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumnsRepository . findOne ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MapId ) . get ( ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns ) . isNotSameAs ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . getValue ( ) ) . isEqualTo ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns . getValue ( ) ) ; org.springframework.data.cassandra.test.integration.mapping.mapid.repo.CassandraOperations . delete ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumns ) ; assertThat ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MultiPrimaryKeyColumnsRepository . findOne ( org.springframework.data.cassandra.test.integration.mapping.mapid.repo.MapId ) ) . isEmpty ( ) ; }  <METHOD_END>
