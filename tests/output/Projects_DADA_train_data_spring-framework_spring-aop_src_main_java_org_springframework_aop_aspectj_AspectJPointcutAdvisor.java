<METHOD_START> public void ( AbstractAspectJAdvice org.springframework.aop.aspectj.AbstractAspectJAdvice ) { Assert . notNull ( org.springframework.aop.aspectj.AbstractAspectJAdvice , STRING ) ; this . org.springframework.aop.aspectj.AbstractAspectJAdvice = org.springframework.aop.aspectj.AbstractAspectJAdvice ; this . org.springframework.aop.aspectj.Pointcut = org.springframework.aop.aspectj.AbstractAspectJAdvice . buildSafePointcut ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . java.lang.Integer = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.aspectj.Advice org.springframework.aop.aspectj.Advice ( ) { return this . org.springframework.aop.aspectj.AbstractAspectJAdvice ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.aspectj.Pointcut org.springframework.aop.aspectj.Pointcut ( ) { return this . org.springframework.aop.aspectj.Pointcut ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { if ( this . java.lang.Integer != null ) { return this . java.lang.Integer ; } else { return this . org.springframework.aop.aspectj.AbstractAspectJAdvice . getOrder ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.aop.aspectj.AspectJPointcutAdvisor ) ) { return false ; } org.springframework.aop.aspectj.AspectJPointcutAdvisor org.springframework.aop.aspectj.AspectJPointcutAdvisor = ( org.springframework.aop.aspectj.AspectJPointcutAdvisor ) java.lang.Object ; return ( ObjectUtils . nullSafeEquals ( this . org.springframework.aop.aspectj.AbstractAspectJAdvice , org.springframework.aop.aspectj.AspectJPointcutAdvisor . org.springframework.aop.aspectj.AbstractAspectJAdvice ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.aop.aspectj.AspectJPointcutAdvisor .class . int ( ) ; }  <METHOD_END>
