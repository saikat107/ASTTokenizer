<METHOD_START> public void ( ) { this( null ); }  <METHOD_END>
<METHOD_START> public void ( CacheFactoryBean org.springframework.data.gemfire.test.CacheFactoryBean ) { setUseBeanFactoryLocator ( false ) ; if ( org.springframework.data.gemfire.test.CacheFactoryBean != null ) { setBeanClassLoader ( org.springframework.data.gemfire.test.CacheFactoryBean . getBeanClassLoader ( ) ) ; setBeanFactory ( org.springframework.data.gemfire.test.CacheFactoryBean . getBeanFactory ( ) ) ; setBeanName ( org.springframework.data.gemfire.test.CacheFactoryBean . getBeanName ( ) ) ; setCacheXml ( org.springframework.data.gemfire.test.CacheFactoryBean . getCacheXml ( ) ) ; setPhase ( org.springframework.data.gemfire.test.CacheFactoryBean . getPhase ( ) ) ; setProperties ( org.springframework.data.gemfire.test.CacheFactoryBean . getProperties ( ) ) ; setClose ( org.springframework.data.gemfire.test.CacheFactoryBean . getClose ( ) ) ; setCopyOnRead ( org.springframework.data.gemfire.test.CacheFactoryBean . getCopyOnRead ( ) ) ; setCriticalHeapPercentage ( org.springframework.data.gemfire.test.CacheFactoryBean . getCriticalHeapPercentage ( ) ) ; setDynamicRegionSupport ( org.springframework.data.gemfire.test.CacheFactoryBean . getDynamicRegionSupport ( ) ) ; setEnableAutoReconnect ( org.springframework.data.gemfire.test.CacheFactoryBean . getEnableAutoReconnect ( ) ) ; setEvictionHeapPercentage ( org.springframework.data.gemfire.test.CacheFactoryBean . getEvictionHeapPercentage ( ) ) ; setGatewayConflictResolver ( org.springframework.data.gemfire.test.CacheFactoryBean . getGatewayConflictResolver ( ) ) ; setJndiDataSources ( org.springframework.data.gemfire.test.CacheFactoryBean . getJndiDataSources ( ) ) ; setLockLease ( org.springframework.data.gemfire.test.CacheFactoryBean . getLockLease ( ) ) ; setLockTimeout ( org.springframework.data.gemfire.test.CacheFactoryBean . getLockTimeout ( ) ) ; setMessageSyncInterval ( org.springframework.data.gemfire.test.CacheFactoryBean . getMessageSyncInterval ( ) ) ; setPdxDiskStoreName ( org.springframework.data.gemfire.test.CacheFactoryBean . getPdxDiskStoreName ( ) ) ; setPdxIgnoreUnreadFields ( org.springframework.data.gemfire.test.CacheFactoryBean . getPdxIgnoreUnreadFields ( ) ) ; setPdxPersistent ( org.springframework.data.gemfire.test.CacheFactoryBean . getPdxPersistent ( ) ) ; setPdxReadSerialized ( org.springframework.data.gemfire.test.CacheFactoryBean . getPdxReadSerialized ( ) ) ; setPdxSerializer ( org.springframework.data.gemfire.test.CacheFactoryBean . getPdxSerializer ( ) ) ; setSearchTimeout ( org.springframework.data.gemfire.test.CacheFactoryBean . getSearchTimeout ( ) ) ; setTransactionListeners ( org.springframework.data.gemfire.test.CacheFactoryBean . getTransactionListeners ( ) ) ; setTransactionWriter ( org.springframework.data.gemfire.test.CacheFactoryBean . getTransactionWriter ( ) ) ; setUseBeanFactoryLocator ( org.springframework.data.gemfire.test.CacheFactoryBean . isUseBeanFactoryLocator ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected < T extends org.springframework.data.gemfire.test.GemFireCache > T T ( ) { StubCache org.springframework.data.gemfire.test.StubCache = new StubCache ( ) ; org.springframework.data.gemfire.test.StubCache . setProperties ( getProperties ( ) ) ; return ( T ) org.springframework.data.gemfire.test.StubCache ; }  <METHOD_END>
