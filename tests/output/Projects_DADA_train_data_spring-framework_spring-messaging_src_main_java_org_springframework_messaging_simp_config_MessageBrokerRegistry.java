<METHOD_START> public void ( SubscribableChannel org.springframework.messaging.simp.config.SubscribableChannel , MessageChannel org.springframework.messaging.simp.config.MessageChannel ) { Assert . notNull ( org.springframework.messaging.simp.config.SubscribableChannel , STRING ) ; Assert . notNull ( org.springframework.messaging.simp.config.MessageChannel , STRING ) ; this . org.springframework.messaging.simp.config.SubscribableChannel = org.springframework.messaging.simp.config.SubscribableChannel ; this . org.springframework.messaging.simp.config.MessageChannel = org.springframework.messaging.simp.config.MessageChannel ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.SimpleBrokerRegistration org.springframework.messaging.simp.config.SimpleBrokerRegistration ( java.lang.String ... java.lang.String[] ) { this . org.springframework.messaging.simp.config.SimpleBrokerRegistration = new SimpleBrokerRegistration ( this . org.springframework.messaging.simp.config.SubscribableChannel , this . org.springframework.messaging.simp.config.MessageChannel , java.lang.String[] ) ; return this . org.springframework.messaging.simp.config.SimpleBrokerRegistration ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.StompBrokerRelayRegistration org.springframework.messaging.simp.config.StompBrokerRelayRegistration ( java.lang.String ... java.lang.String[] ) { this . org.springframework.messaging.simp.config.StompBrokerRelayRegistration = new StompBrokerRelayRegistration ( this . org.springframework.messaging.simp.config.SubscribableChannel , this . org.springframework.messaging.simp.config.MessageChannel , java.lang.String[] ) ; return this . org.springframework.messaging.simp.config.StompBrokerRelayRegistration ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.ChannelRegistration org.springframework.messaging.simp.config.ChannelRegistration ( ) { return this . org.springframework.messaging.simp.config.ChannelRegistration ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.simp.config.ChannelRegistration org.springframework.messaging.simp.config.ChannelRegistration ( ) { return this . org.springframework.messaging.simp.config.ChannelRegistration ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return ( this . org.springframework.messaging.simp.config.StompBrokerRelayRegistration != null ? this . org.springframework.messaging.simp.config.StompBrokerRelayRegistration . getUserDestinationBroadcast ( ) : null ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return ( this . org.springframework.messaging.simp.config.StompBrokerRelayRegistration != null ? this . org.springframework.messaging.simp.config.StompBrokerRelayRegistration . getUserRegistryBroadcast ( ) : null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.MessageBrokerRegistry org.springframework.messaging.simp.config.MessageBrokerRegistry ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; return this ; }  <METHOD_END>
<METHOD_START> protected java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( ) { return ( this . java.lang.String[] != null ? java.util.Arrays . java.util.List<java.lang.String> ( this . java.lang.String[] ) : null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.MessageBrokerRegistry org.springframework.messaging.simp.config.MessageBrokerRegistry ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.MessageBrokerRegistry org.springframework.messaging.simp.config.MessageBrokerRegistry ( PathMatcher org.springframework.messaging.simp.config.PathMatcher ) { this . org.springframework.messaging.simp.config.PathMatcher = org.springframework.messaging.simp.config.PathMatcher ; return this ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.simp.config.PathMatcher org.springframework.messaging.simp.config.PathMatcher ( ) { return this . org.springframework.messaging.simp.config.PathMatcher ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.config.MessageBrokerRegistry org.springframework.messaging.simp.config.MessageBrokerRegistry ( int int ) { this . java.lang.Integer = int ; return this ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.simp.config.SimpleBrokerMessageHandler org.springframework.messaging.simp.config.SimpleBrokerMessageHandler ( SubscribableChannel org.springframework.messaging.simp.config.SubscribableChannel ) { if ( this . org.springframework.messaging.simp.config.SimpleBrokerRegistration == null && this . org.springframework.messaging.simp.config.StompBrokerRelayRegistration == null ) { org.springframework.messaging.simp.config.SimpleBrokerRegistration ( ) ; } if ( this . org.springframework.messaging.simp.config.SimpleBrokerRegistration != null ) { SimpleBrokerMessageHandler org.springframework.messaging.simp.config.SimpleBrokerMessageHandler = this . org.springframework.messaging.simp.config.SimpleBrokerRegistration . getMessageHandler ( org.springframework.messaging.simp.config.SubscribableChannel ) ; org.springframework.messaging.simp.config.SimpleBrokerMessageHandler . setPathMatcher ( this . org.springframework.messaging.simp.config.PathMatcher ) ; org.springframework.messaging.simp.config.SimpleBrokerMessageHandler . setCacheLimit ( this . java.lang.Integer ) ; return org.springframework.messaging.simp.config.SimpleBrokerMessageHandler ; } return null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler org.springframework.messaging.simp.config.StompBrokerRelayMessageHandler ( SubscribableChannel org.springframework.messaging.simp.config.SubscribableChannel ) { if ( this . org.springframework.messaging.simp.config.StompBrokerRelayRegistration != null ) { return this . org.springframework.messaging.simp.config.StompBrokerRelayRegistration . getMessageHandler ( org.springframework.messaging.simp.config.SubscribableChannel ) ; } return null ; }  <METHOD_END>
