<METHOD_START> public void ( CacheManager org.springframework.web.servlet.resource.CacheManager , java.lang.String java.lang.String ) { this( org.springframework.web.servlet.resource.CacheManager . getCache ( java.lang.String ) ); }  <METHOD_END>
<METHOD_START> public void ( Cache org.springframework.web.servlet.resource.Cache ) { Assert . notNull ( org.springframework.web.servlet.resource.Cache , STRING ) ; this . org.springframework.web.servlet.resource.Cache = org.springframework.web.servlet.resource.Cache ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.resource.Cache org.springframework.web.servlet.resource.Cache ( ) { return this . org.springframework.web.servlet.resource.Cache ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.resource.Resource org.springframework.web.servlet.resource.Resource ( HttpServletRequest org.springframework.web.servlet.resource.HttpServletRequest , java.lang.String java.lang.String , java.util.List<? extends org.springframework.web.servlet.resource.Resource> < ? extends Resource > java.util.List<? extends org.springframework.web.servlet.resource.Resource> , ResourceResolverChain org.springframework.web.servlet.resource.ResourceResolverChain ) { java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.resource.HttpServletRequest , java.lang.String ) ; Resource org.springframework.web.servlet.resource.Resource = this . org.springframework.web.servlet.resource.Cache . get ( java.lang.String , Resource .class ) ; if ( org.springframework.web.servlet.resource.Resource != null ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( STRING + org.springframework.web.servlet.resource.Resource ) ; } return org.springframework.web.servlet.resource.Resource ; } org.springframework.web.servlet.resource.Resource = org.springframework.web.servlet.resource.ResourceResolverChain . resolveResource ( org.springframework.web.servlet.resource.HttpServletRequest , java.lang.String , java.util.List<> ) ; if ( org.springframework.web.servlet.resource.Resource != null ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( STRING + org.springframework.web.servlet.resource.Resource ) ; } this . org.springframework.web.servlet.resource.Cache . put ( java.lang.String , org.springframework.web.servlet.resource.Resource ) ; } return org.springframework.web.servlet.resource.Resource ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( HttpServletRequest org.springframework.web.servlet.resource.HttpServletRequest , java.lang.String java.lang.String ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; if ( org.springframework.web.servlet.resource.HttpServletRequest != null ) { java.lang.String java.lang.String = org.springframework.web.servlet.resource.HttpServletRequest . getHeader ( STRING ) ; if ( java.lang.String != null && java.lang.String . boolean ( STRING ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( java.lang.String java.lang.String , java.util.List<? extends org.springframework.web.servlet.resource.Resource> < ? extends Resource > java.util.List<? extends org.springframework.web.servlet.resource.Resource> , ResourceResolverChain org.springframework.web.servlet.resource.ResourceResolverChain ) { java.lang.String java.lang.String = java.lang.String + java.lang.String ; java.lang.String java.lang.String = this . org.springframework.web.servlet.resource.Cache . get ( java.lang.String , java.lang.String .class ) ; if ( java.lang.String != null ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( STRING + java.lang.String + STRING ) ; } return java.lang.String ; } java.lang.String = org.springframework.web.servlet.resource.ResourceResolverChain . resolveUrlPath ( java.lang.String , java.util.List<> ) ; if ( java.lang.String != null ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( STRING + java.lang.String + STRING ) ; } this . org.springframework.web.servlet.resource.Cache . put ( java.lang.String , java.lang.String ) ; } return java.lang.String ; }  <METHOD_END>
