<METHOD_START> public void void ( java.lang.String java.lang.String , Matcher < ? super org.w3c.dom.Node > org.springframework.test.util.Matcher<? super org.w3c.dom.Node> ) throws java.lang.Exception { org.w3c.dom.Document org.w3c.dom.Document = org.w3c.dom.Document ( java.lang.String ) ; assertThat ( STRING , org.w3c.dom.Document , org.springframework.test.util.Matcher<> ) ; }  <METHOD_END>
<METHOD_START> private org.w3c.dom.Document org.w3c.dom.Document ( java.lang.String java.lang.String ) throws java.lang.Exception { javax.xml.parsers.DocumentBuilderFactory javax.xml.parsers.DocumentBuilderFactory = javax.xml.parsers.DocumentBuilderFactory . javax.xml.parsers.DocumentBuilderFactory ( ) ; javax.xml.parsers.DocumentBuilderFactory . void ( true ) ; javax.xml.parsers.DocumentBuilder javax.xml.parsers.DocumentBuilder = javax.xml.parsers.DocumentBuilderFactory . javax.xml.parsers.DocumentBuilder ( ) ; org.xml.sax.InputSource org.xml.sax.InputSource = new org.xml.sax.InputSource ( new java.io.StringReader ( java.lang.String ) ) ; return javax.xml.parsers.DocumentBuilder . org.w3c.dom.Document ( org.xml.sax.InputSource ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , Matcher < ? super javax.xml.transform.Source > org.springframework.test.util.Matcher<? super javax.xml.transform.Source> ) throws java.lang.Exception { org.w3c.dom.Document org.w3c.dom.Document = org.w3c.dom.Document ( java.lang.String ) ; assertThat ( STRING , new javax.xml.transform.dom.DOMSource ( org.w3c.dom.Document ) , org.springframework.test.util.Matcher<> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.lang.Exception { org.springframework.test.util.XmlExpectationsHelper.XmlUnitDiff org.springframework.test.util.XmlExpectationsHelper.XmlUnitDiff = new org.springframework.test.util.XmlExpectationsHelper.XmlUnitDiff ( java.lang.String , java.lang.String ) ; if ( org.springframework.test.util.XmlExpectationsHelper.XmlUnitDiff . boolean ( ) ) { AssertionErrors . fail ( STRING + org.springframework.test.util.XmlExpectationsHelper.XmlUnitDiff . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . org.springframework.test.util.Diff = DiffBuilder . compare ( java.lang.String ) . withTest ( java.lang.String ) . withNodeMatcher ( new DefaultNodeMatcher ( ElementSelectors . byNameAndText ) ) . ignoreWhitespace ( ) . ignoreComments ( ) . checkForSimilar ( ) . build ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.springframework.test.util.Diff . hasDifferences ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.test.util.Diff . toString ( ) ; }  <METHOD_END>
