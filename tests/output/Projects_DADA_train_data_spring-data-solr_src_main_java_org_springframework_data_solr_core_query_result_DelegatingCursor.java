<METHOD_START> protected void ( SolrQuery org.springframework.data.solr.core.query.result.SolrQuery ) { this( org.springframework.data.solr.core.query.result.SolrQuery , CursorMarkParams . CURSOR_MARK_START ); }  <METHOD_END>
<METHOD_START> protected void ( SolrQuery org.springframework.data.solr.core.query.result.SolrQuery , java.lang.String java.lang.String ) { this . org.springframework.data.solr.core.query.result.SolrQuery = org.springframework.data.solr.core.query.result.SolrQuery ; this . java.lang.String = StringUtils . hasText ( java.lang.String ) ? java.lang.String : CursorMarkParams . CURSOR_MARK_START ; this . org.springframework.data.solr.core.query.result.State = State . REDAY ; this . java.util.Iterator<T> = java.util.Collections .< T > java.util.List<T> ( ) . java.util.Iterator<T> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { void ( ) ; if ( ! java.util.Iterator<T> . boolean ( ) && ! boolean ( ) ) { void ( java.lang.String ( ) ) ; } if ( java.util.Iterator<T> . boolean ( ) ) { return true ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( ) { void ( ) ; if ( ! boolean ( ) ) { throw new java.util.NoSuchElementException ( STRING + java.lang.String ( ) + STRING ) ; } T T = T ( java.util.Iterator<T> ) ; long ++ ; return T ; }  <METHOD_END>
<METHOD_START> protected T T ( java.util.Iterator<T> < T > java.util.Iterator<T> ) { return java.util.Iterator<T> . T ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { SolrQuery org.springframework.data.solr.core.query.result.SolrQuery = org.springframework.data.solr.core.query.result.SolrQuery . getCopy ( ) ; org.springframework.data.solr.core.query.result.SolrQuery . set ( CursorMarkParams . CURSOR_MARK_PARAM , this . java.lang.String ( ) ) ; org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> < T > org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> = org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> ( org.springframework.data.solr.core.query.result.SolrQuery ) ; void ( org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> ) ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> < T > org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> ( SolrQuery org.springframework.data.solr.core.query.result.SolrQuery );  <METHOD_END>
<METHOD_START> private void void ( org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> < T > org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> ) { if ( org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> == null ) { this . java.util.Iterator<T> = java.util.Collections .< T > java.util.List<T> ( ) . java.util.Iterator<T> ( ) ; this . org.springframework.data.solr.core.query.result.State = State . FINISHED ; return; } if ( java.lang.String ( ) . boolean ( org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> . java.lang.String ( ) ) ) { this . org.springframework.data.solr.core.query.result.State = State . FINISHED ; } this . java.lang.String = org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> . java.lang.String ( ) ; if ( ! CollectionUtils . isEmpty ( org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> . java.util.Collection<T> ( ) ) ) { java.util.Iterator<T> = org.springframework.data.solr.core.query.result.DelegatingCursor.PartialResult<T> . java.util.Iterator<T> ( ) ; } else { java.util.Collections .< T > java.util.List<T> ( ) . java.util.Iterator<T> ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.result.DelegatingCursor<T> < T > org.springframework.data.solr.core.query.result.DelegatingCursor<T> ( ) { if ( ! boolean ( ) ) { throw new InvalidDataAccessApiUsageException ( STRING + org.springframework.data.solr.core.query.result.State + STRING ) ; } this . org.springframework.data.solr.core.query.result.State = State . OPEN ; void ( this . java.lang.String ( ) ) ; return this ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.io.IOException { try { void ( ) ; } finally { this . org.springframework.data.solr.core.query.result.State = State . CLOSED ; } }  <METHOD_END>
<METHOD_START> protected void void ( ) { this . java.util.Iterator<T> = java.util.Collections .< T > java.util.List<T> ( ) . java.util.Iterator<T> ( ) ; this . org.springframework.data.solr.core.query.result.SolrQuery . clear ( ) ; this . long = - NUMBER ; this . java.lang.String = null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return State . REDAY . equals ( org.springframework.data.solr.core.query.result.State ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return State . OPEN . equals ( org.springframework.data.solr.core.query.result.State ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return State . FINISHED . equals ( org.springframework.data.solr.core.query.result.State ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return State . CLOSED . equals ( org.springframework.data.solr.core.query.result.State ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( boolean ( ) || boolean ( ) ) { throw new InvalidDataAccessApiUsageException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.util.Collection<T> < T > java.util.Collection<T> ) { this . java.lang.String = java.lang.String ; this . java.util.Collection<T> = ( java.util.Collection<T> != null ? new java.util.ArrayList<T> <> ( java.util.Collection<T> ) : java.util.Collections .< T > java.util.List<T> ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<T> < T > java.util.Collection<T> ( ) { return java.util.Collection<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<T> < T > java.util.Iterator<T> ( ) { return java.util.Collection<T> . java.util.Iterator<T> ( ) ; }  <METHOD_END>
