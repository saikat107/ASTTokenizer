<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.time.Duration java.time.Duration ) { this . java.time.Duration = java.time.Duration ; }  <METHOD_END>
<METHOD_START> public java.time.Duration java.time.Duration ( ) { return this . java.time.Duration ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ServerWebExchange org.springframework.web.server.session.ServerWebExchange ) { MultiValueMap < java.lang.String , HttpCookie > org.springframework.web.server.session.MultiValueMap<java.lang.String,org.springframework.web.server.session.HttpCookie> = org.springframework.web.server.session.ServerWebExchange . getRequest ( ) . getCookies ( ) ; java.util.List<org.springframework.web.server.session.HttpCookie> < HttpCookie > java.util.List<org.springframework.web.server.session.HttpCookie> = org.springframework.web.server.session.MultiValueMap<java.lang.String,org.springframework.web.server.session.HttpCookie> . get ( java.lang.String ( ) ) ; if ( java.util.List<org.springframework.web.server.session.HttpCookie> == null ) { return java.util.Collections . java.util.List<java.lang.String> ( ) ; } return java.util.List<org.springframework.web.server.session.HttpCookie> . stream ( ) . map ( HttpCookie :: getValue ) . collect ( java.util.stream.Collectors . java.util.stream.Collector<java.lang.Object,?,java.util.List<java.lang.Object>> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServerWebExchange org.springframework.web.server.session.ServerWebExchange , java.lang.String java.lang.String ) { java.time.Duration java.time.Duration = ( StringUtils . hasText ( java.lang.String ) ? java.time.Duration ( ) : java.time.Duration . java.time.Duration ( NUMBER ) ) ; ResponseCookie org.springframework.web.server.session.ResponseCookie = ResponseCookie . from ( java.lang.String ( ) , java.lang.String ) . maxAge ( java.time.Duration ) . build ( ) ; MultiValueMap < java.lang.String , ResponseCookie > org.springframework.web.server.session.MultiValueMap<java.lang.String,org.springframework.web.server.session.ResponseCookie> = org.springframework.web.server.session.ServerWebExchange . getResponse ( ) . getCookies ( ) ; org.springframework.web.server.session.MultiValueMap<java.lang.String,org.springframework.web.server.session.ResponseCookie> . set ( java.lang.String ( ) , org.springframework.web.server.session.ResponseCookie ) ; }  <METHOD_END>
