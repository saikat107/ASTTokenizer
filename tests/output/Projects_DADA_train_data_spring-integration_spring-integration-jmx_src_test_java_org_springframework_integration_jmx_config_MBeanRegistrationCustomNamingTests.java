<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<javax.management.ObjectName> < javax.management.ObjectName > java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; assertTrue ( java.util.Set<javax.management.ObjectName> . boolean ( new javax.management.ObjectName ( STRING ) ) ) ; assertTrue ( java.util.Set<javax.management.ObjectName> . boolean ( new javax.management.ObjectName ( STRING ) ) ) ; assertTrue ( java.util.Set<javax.management.ObjectName> . boolean ( new javax.management.ObjectName ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.management.ObjectName javax.management.ObjectName ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws javax.management.MalformedObjectNameException { java.lang.String java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; return org.springframework.integration.jmx.config.ObjectNamingStrategy . getObjectName ( java.lang.Object , java.lang.String ) ; }  <METHOD_END>
