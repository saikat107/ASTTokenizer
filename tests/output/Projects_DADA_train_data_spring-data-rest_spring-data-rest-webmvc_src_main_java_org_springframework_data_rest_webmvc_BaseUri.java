<METHOD_START> public void ( java.net.URI java.net.URI ) { Assert . notNull ( java.net.URI , STRING ) ; java.lang.String java.lang.String = java.net.URI . java.lang.String ( ) ; this . java.net.URI = java.net.URI . java.net.URI ( trimTrailingCharacter ( trimTrailingCharacter ( java.lang.String , '/' ) , '/' ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this( java.net.URI . java.net.URI ( java.lang.String ) ); }  <METHOD_END>
<METHOD_START> public java.net.URI java.net.URI ( ) { return java.net.URI ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( NativeWebRequest org.springframework.data.rest.webmvc.NativeWebRequest ) { return java.lang.String ( org.springframework.data.rest.webmvc.NativeWebRequest . getNativeRequest ( HttpServletRequest .class ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( HttpServletRequest org.springframework.data.rest.webmvc.HttpServletRequest ) { java.lang.String java.lang.String = org.springframework.data.rest.webmvc.UrlPathHelper . getLookupPathForRequest ( org.springframework.data.rest.webmvc.HttpServletRequest ) ; return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; java.lang.String = trimTrailingCharacter ( java.lang.String , '/' ) ; if ( ! java.net.URI . boolean ( ) ) { java.lang.String java.lang.String = java.net.URI . java.lang.String ( ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { return java.lang.String ; } java.lang.String = java.lang.String . boolean ( STRING ) ? java.lang.String : STRING . java.lang.String ( java.lang.String ) ; return java.lang.String . boolean ( java.lang.String ) ? java.lang.String . java.lang.String ( java.lang.String . int ( ) , java.lang.String . int ( ) ) : null ; } java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = UriComponentsBuilder . fromUri ( java.net.URI ) . build ( ) . getPathSegments ( ) ; java.util.Collections . void ( java.util.List<java.lang.String> ) ; java.lang.String java.lang.String = STRING ; for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { java.lang.String = STRING . java.lang.String ( java.lang.String ) . java.lang.String ( java.lang.String ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { return java.lang.String . java.lang.String ( java.lang.String . int ( ) , java.lang.String . int ( ) ) ; } } return null ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.UriComponentsBuilder org.springframework.data.rest.webmvc.UriComponentsBuilder ( ) { if ( java.net.URI . boolean ( ) ) { return UriComponentsBuilder . fromUri ( java.net.URI ) ; } return ServletUriComponentsBuilder . fromCurrentServletMapping ( ) . path ( java.net.URI . java.lang.String ( ) ) ; }  <METHOD_END>
