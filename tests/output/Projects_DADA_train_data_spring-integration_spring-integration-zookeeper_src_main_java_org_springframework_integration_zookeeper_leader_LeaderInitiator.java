<METHOD_START> public void ( CuratorFramework org.springframework.integration.zookeeper.leader.CuratorFramework , Candidate org.springframework.integration.zookeeper.leader.Candidate ) { this( org.springframework.integration.zookeeper.leader.CuratorFramework , org.springframework.integration.zookeeper.leader.Candidate , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( CuratorFramework org.springframework.integration.zookeeper.leader.CuratorFramework , Candidate org.springframework.integration.zookeeper.leader.Candidate , java.lang.String java.lang.String ) { this . org.springframework.integration.zookeeper.leader.CuratorFramework = org.springframework.integration.zookeeper.leader.CuratorFramework ; this . org.springframework.integration.zookeeper.leader.Candidate = org.springframework.integration.zookeeper.leader.Candidate ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { synchronized ( this . java.lang.Object ) { if ( ! this . boolean ) { if ( this . org.springframework.integration.zookeeper.leader.CuratorFramework . getState ( ) != CuratorFrameworkState . STARTED ) { this . org.springframework.integration.zookeeper.leader.CuratorFramework . start ( ) ; } this . org.springframework.integration.zookeeper.leader.LeaderSelector = new LeaderSelector ( this . org.springframework.integration.zookeeper.leader.CuratorFramework , java.lang.String ( ) , new org.springframework.integration.zookeeper.leader.LeaderInitiator.LeaderListener ( ) ) ; this . org.springframework.integration.zookeeper.leader.LeaderSelector . setId ( this . org.springframework.integration.zookeeper.leader.Candidate . getId ( ) ) ; this . org.springframework.integration.zookeeper.leader.LeaderSelector . autoRequeue ( ) ; this . org.springframework.integration.zookeeper.leader.LeaderSelector . start ( ) ; this . boolean = true ; org.springframework.integration.zookeeper.leader.Log . debug ( STRING ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { synchronized ( this . java.lang.Object ) { if ( this . boolean ) { this . org.springframework.integration.zookeeper.leader.LeaderSelector . close ( ) ; this . boolean = false ; org.springframework.integration.zookeeper.leader.Log . debug ( STRING ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Runnable java.lang.Runnable ) { void ( ) ; java.lang.Runnable . void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( LeaderEventPublisher org.springframework.integration.zookeeper.leader.LeaderEventPublisher ) { this . org.springframework.integration.zookeeper.leader.LeaderEventPublisher = org.springframework.integration.zookeeper.leader.LeaderEventPublisher ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.zookeeper.leader.Context org.springframework.integration.zookeeper.leader.Context ( ) { if ( this . org.springframework.integration.zookeeper.leader.LeaderSelector == null ) { return org.springframework.integration.zookeeper.leader.Context ; } return this . org.springframework.integration.zookeeper.leader.LeaderInitiator.CuratorContext ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = StringUtils . hasText ( this . java.lang.String ) ? this . java.lang.String : java.lang.String ; if ( ! java.lang.String . boolean ( STRING ) ) { java.lang.String = STRING + java.lang.String ; } if ( ! java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String + STRING ; } return java.lang.String + this . org.springframework.integration.zookeeper.leader.Candidate . getRole ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( CuratorFramework org.springframework.integration.zookeeper.leader.CuratorFramework ) throws java.lang.Exception { try { org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.Candidate . onGranted ( org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.LeaderInitiator.CuratorContext ) ; if ( org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.LeaderEventPublisher != null ) { try { org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.LeaderEventPublisher . publishOnGranted ( org.springframework.integration.zookeeper.leader.LeaderInitiator .this , org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.LeaderInitiator.CuratorContext , org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.Candidate . getRole ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { org.springframework.integration.zookeeper.leader.Log . warn ( STRING , java.lang.Exception ) ; } } java.lang.Thread . void ( java.lang.Long . long ) ; } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { } finally { org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.Candidate . onRevoked ( org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.LeaderInitiator.CuratorContext ) ; if ( org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.LeaderEventPublisher != null ) { try { org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.LeaderEventPublisher . publishOnRevoked ( org.springframework.integration.zookeeper.leader.LeaderInitiator .this , org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.LeaderInitiator.CuratorContext , org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.Candidate . getRole ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { org.springframework.integration.zookeeper.leader.Log . warn ( STRING , java.lang.Exception ) ; } } } }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.LeaderSelector . hasLeadership ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.LeaderSelector . interruptLeadership ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.Candidate . getRole ( ) + STRING + org.springframework.integration.zookeeper.leader.LeaderInitiator .this . org.springframework.integration.zookeeper.leader.Candidate . getId ( ) + STRING + boolean ( ) + STRING ; }  <METHOD_END>
