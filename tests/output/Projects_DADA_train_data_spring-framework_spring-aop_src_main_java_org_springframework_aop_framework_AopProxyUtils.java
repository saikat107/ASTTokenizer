<METHOD_START> public static java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; java.lang.Object java.lang.Object = java.lang.Object ; java.lang.Class<?> < ? > java.lang.Class<?> = null ; while ( java.lang.Object instanceof TargetClassAware ) { java.lang.Class<?> = ( ( TargetClassAware ) java.lang.Object ) . getTargetClass ( ) ; java.lang.Object java.lang.Object = null ; if ( java.lang.Object instanceof Advised ) { TargetSource org.springframework.aop.framework.TargetSource = ( ( Advised ) java.lang.Object ) . getTargetSource ( ) ; if ( org.springframework.aop.framework.TargetSource instanceof SingletonTargetSource ) { java.lang.Object = ( ( SingletonTargetSource ) org.springframework.aop.framework.TargetSource ) . getTarget ( ) ; } } java.lang.Object = java.lang.Object ; } if ( java.lang.Class<> == null ) { java.lang.Class<?> = ( AopUtils . isCglibProxy ( java.lang.Object ) ? java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.Class<? super > ( ) : java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; } return java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public static java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( AdvisedSupport org.springframework.aop.framework.AdvisedSupport ) { return java.lang.Class<?>[] ( org.springframework.aop.framework.AdvisedSupport , false ) ; }  <METHOD_END>
<METHOD_START> static java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( AdvisedSupport org.springframework.aop.framework.AdvisedSupport , boolean boolean ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.aop.framework.AdvisedSupport . getProxiedInterfaces ( ) ; if ( java.lang.Class<?>[] . int == NUMBER ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.aop.framework.AdvisedSupport . getTargetClass ( ) ; if ( java.lang.Class<> != null ) { if ( java.lang.Class<> . boolean ( ) ) { org.springframework.aop.framework.AdvisedSupport . setInterfaces ( java.lang.Class<> ) ; } else if ( java.lang.reflect.Proxy . boolean ( java.lang.Class<> ) ) { org.springframework.aop.framework.AdvisedSupport . setInterfaces ( java.lang.Class<> . java.lang.Class<?>[] ( ) ) ; } java.lang.Class<?>[] = org.springframework.aop.framework.AdvisedSupport . getProxiedInterfaces ( ) ; } } boolean boolean = ! org.springframework.aop.framework.AdvisedSupport . isInterfaceProxied ( SpringProxy .class ) ; boolean boolean = ! org.springframework.aop.framework.AdvisedSupport . isOpaque ( ) && ! org.springframework.aop.framework.AdvisedSupport . isInterfaceProxied ( Advised .class ) ; boolean boolean = ( boolean && ! org.springframework.aop.framework.AdvisedSupport . isInterfaceProxied ( DecoratingProxy .class ) ) ; int int = NUMBER ; if ( boolean ) { int ++ ; } if ( boolean ) { int ++ ; } if ( boolean ) { int ++ ; } java.lang.Class<?> < ? > [] java.lang.Class<?>[] = new java.lang.Class<?> < ? > [ java.lang.Class<?>[] . int + int ] ; java.lang.System . void ( java.lang.Class<?>[] , NUMBER , java.lang.Class<?>[] , NUMBER , java.lang.Class<?>[] . int ) ; int int = java.lang.Class<?>[] . int ; if ( boolean ) { java.lang.Class<?>[] [ int ] = SpringProxy .class ; int ++ ; } if ( boolean ) { java.lang.Class<?>[] [ int ] = Advised .class ; int ++ ; } if ( boolean ) { java.lang.Class<?>[] [ int ] = DecoratingProxy .class ; } return java.lang.Class<?>[] ; }  <METHOD_END>
<METHOD_START> public static java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( java.lang.Object java.lang.Object ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.Class<?>[] ( ) ; int int = NUMBER ; if ( java.lang.Object instanceof SpringProxy ) { int ++ ; } if ( java.lang.Object instanceof Advised ) { int ++ ; } if ( java.lang.Object instanceof DecoratingProxy ) { int ++ ; } java.lang.Class<?> < ? > [] java.lang.Class<?>[] = new java.lang.Class<?> < ? > [ java.lang.Class<?>[] . int - int ] ; java.lang.System . void ( java.lang.Class<?>[] , NUMBER , java.lang.Class<?>[] , NUMBER , java.lang.Class<?>[] . int ) ; Assert . notEmpty ( java.lang.Class<?>[] , STRING ) ; return java.lang.Class<?>[] ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( AdvisedSupport org.springframework.aop.framework.AdvisedSupport , AdvisedSupport org.springframework.aop.framework.AdvisedSupport ) { return ( org.springframework.aop.framework.AdvisedSupport == org.springframework.aop.framework.AdvisedSupport || ( boolean ( org.springframework.aop.framework.AdvisedSupport , org.springframework.aop.framework.AdvisedSupport ) && boolean ( org.springframework.aop.framework.AdvisedSupport , org.springframework.aop.framework.AdvisedSupport ) && org.springframework.aop.framework.AdvisedSupport . getTargetSource ( ) . equals ( org.springframework.aop.framework.AdvisedSupport . getTargetSource ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( AdvisedSupport org.springframework.aop.framework.AdvisedSupport , AdvisedSupport org.springframework.aop.framework.AdvisedSupport ) { return java.util.Arrays . boolean ( org.springframework.aop.framework.AdvisedSupport . getProxiedInterfaces ( ) , org.springframework.aop.framework.AdvisedSupport . getProxiedInterfaces ( ) ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( AdvisedSupport org.springframework.aop.framework.AdvisedSupport , AdvisedSupport org.springframework.aop.framework.AdvisedSupport ) { return java.util.Arrays . boolean ( org.springframework.aop.framework.AdvisedSupport . getAdvisors ( ) , org.springframework.aop.framework.AdvisedSupport . getAdvisors ( ) ) ; }  <METHOD_END>
<METHOD_START> static java.lang.Object [] java.lang.Object[] ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object ... java.lang.Object[] ) { if ( java.lang.reflect.Method . boolean ( ) && ! ObjectUtils . isEmpty ( java.lang.Object[] ) ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = java.lang.reflect.Method . java.lang.Class<?>[] ( ) ; if ( java.lang.Class<?>[] . int == java.lang.Object[] . int ) { int int = java.lang.Class<?>[] . int - NUMBER ; java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<?>[] [ int ] ; if ( java.lang.Class<> . boolean ( ) ) { java.lang.Object java.lang.Object = java.lang.Object[] [ int ] ; if ( java.lang.Object instanceof java.lang.Object [] && ! java.lang.Class<> . boolean ( java.lang.Object ) ) { java.lang.Object [] java.lang.Object[] = new java.lang.Object [ java.lang.Object[] . int ] ; java.lang.System . void ( java.lang.Object[] , NUMBER , java.lang.Object[] , NUMBER , int ) ; java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<> . java.lang.Class<?> ( ) ; int int = java.lang.reflect.Array . int ( java.lang.Object ) ; java.lang.Object java.lang.Object = java.lang.reflect.Array . java.lang.Object ( java.lang.Class<> , int ) ; java.lang.System . void ( java.lang.Object , NUMBER , java.lang.Object , NUMBER , int ) ; java.lang.Object[] [ int ] = java.lang.Object ; return java.lang.Object[] ; } } } } return java.lang.Object[] ; }  <METHOD_END>
