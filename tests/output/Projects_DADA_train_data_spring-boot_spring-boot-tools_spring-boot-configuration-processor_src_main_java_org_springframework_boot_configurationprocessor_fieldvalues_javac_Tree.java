<METHOD_START> void ( java.lang.Object java.lang.Object ) { super( STRING , java.lang.Object ); }  <METHOD_END>
<METHOD_START> public void void ( TreeVisitor org.springframework.boot.configurationprocessor.fieldvalues.javac.TreeVisitor ) throws java.lang.Exception { this . java.lang.reflect.Method . java.lang.Object ( getInstance ( ) , java.lang.reflect.Proxy . java.lang.Object ( getInstance ( ) . getClass ( ) . getClassLoader ( ) , new java.lang.Class<?> < ? > [] { this . java.lang.Class<> } , new org.springframework.boot.configurationprocessor.fieldvalues.javac.Tree.TreeVisitorInvocationHandler ( org.springframework.boot.configurationprocessor.fieldvalues.javac.TreeVisitor ) ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> void ( TreeVisitor org.springframework.boot.configurationprocessor.fieldvalues.javac.TreeVisitor ) { this . org.springframework.boot.configurationprocessor.fieldvalues.javac.TreeVisitor = org.springframework.boot.configurationprocessor.fieldvalues.javac.TreeVisitor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] )				throws java.lang.Throwable { if ( java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) ) { if ( ( java.lang.Integer ) java.lang.Object[] [ NUMBER ] == NUMBER ) { java.lang.Iterable java.lang.Iterable = ( java.lang.Iterable ) org.springframework.boot.configurationprocessor.fieldvalues.javac.Tree .this . java.lang.reflect.Method . java.lang.Object ( java.lang.Object[] [ NUMBER ] ) ; for ( java.lang.Object java.lang.Object : java.lang.Iterable ) { if ( java.lang.Object != null ) { org.springframework.boot.configurationprocessor.fieldvalues.javac.Tree .this . java.lang.reflect.Method . java.lang.Object ( java.lang.Object , java.lang.Object , ( ( java.lang.Integer ) java.lang.Object[] [ NUMBER ] ) + NUMBER ) ; } } } } if ( java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) ) { this . org.springframework.boot.configurationprocessor.fieldvalues.javac.TreeVisitor . visitVariable ( new VariableTree ( java.lang.Object[] [ NUMBER ] ) ) ; } return null ; }  <METHOD_END>
