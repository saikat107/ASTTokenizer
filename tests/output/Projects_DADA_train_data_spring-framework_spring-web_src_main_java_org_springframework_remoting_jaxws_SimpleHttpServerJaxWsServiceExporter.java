<METHOD_START> public void void ( com.sun.net.httpserver.HttpServer com.sun.net.httpserver.HttpServer ) { this . com.sun.net.httpserver.HttpServer = com.sun.net.httpserver.HttpServer ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<com.sun.net.httpserver.Filter> < com.sun.net.httpserver.Filter > java.util.List<com.sun.net.httpserver.Filter> ) { this . java.util.List<com.sun.net.httpserver.Filter> = java.util.List<com.sun.net.httpserver.Filter> ; }  <METHOD_END>
<METHOD_START> public void void ( com.sun.net.httpserver.Authenticator com.sun.net.httpserver.Authenticator ) { this . com.sun.net.httpserver.Authenticator = com.sun.net.httpserver.Authenticator ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( this . com.sun.net.httpserver.HttpServer == null ) { java.net.InetSocketAddress java.net.InetSocketAddress = ( this . java.lang.String != null ? new java.net.InetSocketAddress ( this . java.lang.String , this . int ) : new java.net.InetSocketAddress ( this . int ) ) ; this . com.sun.net.httpserver.HttpServer = com.sun.net.httpserver.HttpServer . com.sun.net.httpserver.HttpServer ( java.net.InetSocketAddress , this . int ) ; if ( this . org.springframework.remoting.jaxws.Log . isInfoEnabled ( ) ) { this . org.springframework.remoting.jaxws.Log . info ( STRING + java.net.InetSocketAddress ) ; } this . com.sun.net.httpserver.HttpServer . void ( ) ; this . boolean = true ; } super. afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( javax.xml.ws.Endpoint javax.xml.ws.Endpoint , javax.jws.WebService javax.jws.WebService ) { javax.xml.ws.Endpoint . void ( com.sun.net.httpserver.HttpContext ( javax.xml.ws.Endpoint , javax.jws.WebService . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( javax.xml.ws.Endpoint javax.xml.ws.Endpoint , javax.xml.ws.WebServiceProvider javax.xml.ws.WebServiceProvider ) { javax.xml.ws.Endpoint . void ( com.sun.net.httpserver.HttpContext ( javax.xml.ws.Endpoint , javax.xml.ws.WebServiceProvider . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> protected com.sun.net.httpserver.HttpContext com.sun.net.httpserver.HttpContext ( javax.xml.ws.Endpoint javax.xml.ws.Endpoint , java.lang.String java.lang.String ) { java.lang.String java.lang.String = java.lang.String ( javax.xml.ws.Endpoint , java.lang.String ) ; com.sun.net.httpserver.HttpContext com.sun.net.httpserver.HttpContext = this . com.sun.net.httpserver.HttpServer . com.sun.net.httpserver.HttpContext ( java.lang.String ) ; if ( this . java.util.List<com.sun.net.httpserver.Filter> != null ) { com.sun.net.httpserver.HttpContext . java.util.List<com.sun.net.httpserver.Filter> ( ) . boolean ( this . java.util.List<com.sun.net.httpserver.Filter> ) ; } if ( this . com.sun.net.httpserver.Authenticator != null ) { com.sun.net.httpserver.HttpContext . com.sun.net.httpserver.Authenticator ( this . com.sun.net.httpserver.Authenticator ) ; } return com.sun.net.httpserver.HttpContext ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( javax.xml.ws.Endpoint javax.xml.ws.Endpoint , java.lang.String java.lang.String ) { return this . java.lang.String + java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. destroy ( ) ; if ( this . boolean ) { org.springframework.remoting.jaxws.Log . info ( STRING ) ; this . com.sun.net.httpserver.HttpServer . void ( this . int ) ; } }  <METHOD_END>
