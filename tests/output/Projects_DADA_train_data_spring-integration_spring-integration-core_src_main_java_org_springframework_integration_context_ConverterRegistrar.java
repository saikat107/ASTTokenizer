<METHOD_START> void ( java.util.Set<?> < ? > java.util.Set<?> ) { this . java.util.Set<?> = java.util.Set<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.context.BeanFactory ) { this . org.springframework.integration.context.BeanFactory = org.springframework.integration.context.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { Assert . notNull ( this . org.springframework.integration.context.BeanFactory , STRING ) ; ConversionService org.springframework.integration.context.ConversionService = IntegrationUtils . getConversionService ( this . org.springframework.integration.context.BeanFactory ) ; if ( org.springframework.integration.context.ConversionService instanceof GenericConversionService ) { ConversionServiceFactory . registerConverters ( this . java.util.Set<> , ( GenericConversionService ) org.springframework.integration.context.ConversionService ) ; } else { Assert . notNull ( org.springframework.integration.context.ConversionService , STRING + IntegrationUtils . INTEGRATION_CONVERSION_SERVICE_BEAN_NAME + STRING ) ; } }  <METHOD_END>
