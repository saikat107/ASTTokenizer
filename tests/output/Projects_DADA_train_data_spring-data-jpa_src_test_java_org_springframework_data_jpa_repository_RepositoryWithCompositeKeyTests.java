<METHOD_START> @ Test public void void ( ) { IdClassExampleDepartment org.springframework.data.jpa.repository.IdClassExampleDepartment = new IdClassExampleDepartment ( ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setName ( STRING ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setDepartmentId ( - NUMBER ) ; IdClassExampleEmployee org.springframework.data.jpa.repository.IdClassExampleEmployee = new IdClassExampleEmployee ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.IdClassExampleDepartment ) ; org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . save ( org.springframework.data.jpa.repository.IdClassExampleEmployee ) ; IdClassExampleEmployeePK org.springframework.data.jpa.repository.IdClassExampleEmployeePK = new IdClassExampleEmployeePK ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployeePK . setDepartment ( org.springframework.data.jpa.repository.IdClassExampleDepartment . getDepartmentId ( ) ) ; org.springframework.data.jpa.repository.IdClassExampleEmployeePK . setEmpId ( org.springframework.data.jpa.repository.IdClassExampleEmployee . getEmpId ( ) ) ; IdClassExampleEmployee org.springframework.data.jpa.repository.IdClassExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . findOne ( org.springframework.data.jpa.repository.IdClassExampleEmployeePK ) . get ( ) ; assertThat ( org.springframework.data.jpa.repository.IdClassExampleEmployee , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.jpa.repository.IdClassExampleEmployee . getDepartment ( ) , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.jpa.repository.IdClassExampleEmployee . getDepartment ( ) . getName ( ) , is ( org.springframework.data.jpa.repository.IdClassExampleDepartment . getName ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { EmbeddedIdExampleDepartment org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment = new EmbeddedIdExampleDepartment ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . setName ( STRING ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . setDepartmentId ( - NUMBER ) ; EmbeddedIdExampleEmployee org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = new EmbeddedIdExampleEmployee ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setEmployeePk ( new EmbeddedIdExampleEmployeePK ( ) ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithEmbeddedId . save ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee ) ; EmbeddedIdExampleEmployeePK org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK = new EmbeddedIdExampleEmployeePK ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK . setDepartmentId ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . getDepartment ( ) . getDepartmentId ( ) ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK . setEmployeeId ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . getEmployeePk ( ) . getEmployeeId ( ) ) ; EmbeddedIdExampleEmployee org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithEmbeddedId . findOne ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK ) . get ( ) ; assertThat ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . getDepartment ( ) , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . getDepartment ( ) . getName ( ) , is ( org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . getName ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { if ( java.lang.Package . java.lang.Package ( STRING ) . java.lang.String ( ) . boolean ( STRING ) ) { org.springframework.data.jpa.repository.ExpectedException . expect ( InvalidDataAccessApiUsageException .class ) ; org.springframework.data.jpa.repository.ExpectedException . expectMessage ( STRING ) ; } IdClassExampleDepartment org.springframework.data.jpa.repository.IdClassExampleDepartment = new IdClassExampleDepartment ( ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setName ( STRING ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setDepartmentId ( - NUMBER ) ; IdClassExampleEmployee org.springframework.data.jpa.repository.IdClassExampleEmployee = new IdClassExampleEmployee ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.IdClassExampleDepartment ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . save ( org.springframework.data.jpa.repository.IdClassExampleEmployee ) ; Page < IdClassExampleEmployee > org.springframework.data.jpa.repository.Page<org.springframework.data.jpa.repository.IdClassExampleEmployee> = org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . findAll ( PageRequest . of ( NUMBER , NUMBER ) ) ; assertThat ( org.springframework.data.jpa.repository.Page<org.springframework.data.jpa.repository.IdClassExampleEmployee> , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.jpa.repository.Page<org.springframework.data.jpa.repository.IdClassExampleEmployee> . getTotalElements ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { EmbeddedIdExampleDepartment org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment = new EmbeddedIdExampleDepartment ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . setDepartmentId ( NUMBER ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . setName ( STRING ) ; EmbeddedIdExampleDepartment org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment = new EmbeddedIdExampleDepartment ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . setDepartmentId ( NUMBER ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . setName ( STRING ) ; EmbeddedIdExampleEmployee org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = new EmbeddedIdExampleEmployee ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setEmployeePk ( new EmbeddedIdExampleEmployeePK ( NUMBER , null ) ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithEmbeddedId . save ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee ) ; EmbeddedIdExampleEmployee org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = new EmbeddedIdExampleEmployee ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setEmployeePk ( new EmbeddedIdExampleEmployeePK ( NUMBER , null ) ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithEmbeddedId . save ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee ) ; EmbeddedIdExampleEmployee org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = new EmbeddedIdExampleEmployee ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setEmployeePk ( new EmbeddedIdExampleEmployeePK ( NUMBER , null ) ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithEmbeddedId . save ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee ) ; QEmbeddedIdExampleEmployee org.springframework.data.jpa.repository.QEmbeddedIdExampleEmployee = QEmbeddedIdExampleEmployee . embeddedIdExampleEmployee ; java.util.List<org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee> < EmbeddedIdExampleEmployee > java.util.List<org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee> = org.springframework.data.jpa.repository.EmployeeRepositoryWithEmbeddedId . findAll ( emp . employeePk . departmentId . eq ( org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . getDepartmentId ( ) ) , emp . employeePk . employeeId . asc ( ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee> , is ( notNullValue ( ) ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee> , hasSize ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee> . get ( NUMBER ) , is ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee> . get ( NUMBER ) , is ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { IdClassExampleDepartment org.springframework.data.jpa.repository.IdClassExampleDepartment = new IdClassExampleDepartment ( ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setDepartmentId ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setName ( STRING ) ; IdClassExampleDepartment org.springframework.data.jpa.repository.IdClassExampleDepartment = new IdClassExampleDepartment ( ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setDepartmentId ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setName ( STRING ) ; IdClassExampleEmployee org.springframework.data.jpa.repository.IdClassExampleEmployee = new IdClassExampleEmployee ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setEmpId ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.IdClassExampleDepartment ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . save ( org.springframework.data.jpa.repository.IdClassExampleEmployee ) ; IdClassExampleEmployee org.springframework.data.jpa.repository.IdClassExampleEmployee = new IdClassExampleEmployee ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setEmpId ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.IdClassExampleDepartment ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . save ( org.springframework.data.jpa.repository.IdClassExampleEmployee ) ; IdClassExampleEmployee org.springframework.data.jpa.repository.IdClassExampleEmployee = new IdClassExampleEmployee ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setEmpId ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.IdClassExampleDepartment ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . save ( org.springframework.data.jpa.repository.IdClassExampleEmployee ) ; QIdClassExampleEmployee org.springframework.data.jpa.repository.QIdClassExampleEmployee = QIdClassExampleEmployee . idClassExampleEmployee ; java.util.List<org.springframework.data.jpa.repository.IdClassExampleEmployee> < IdClassExampleEmployee > java.util.List<org.springframework.data.jpa.repository.IdClassExampleEmployee> = org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . findAll ( emp . department . departmentId . eq ( org.springframework.data.jpa.repository.IdClassExampleDepartment . getDepartmentId ( ) ) , emp . empId . asc ( ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.IdClassExampleEmployee> , is ( notNullValue ( ) ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.IdClassExampleEmployee> , hasSize ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.IdClassExampleEmployee> . get ( NUMBER ) , is ( org.springframework.data.jpa.repository.IdClassExampleEmployee ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.IdClassExampleEmployee> . get ( NUMBER ) , is ( org.springframework.data.jpa.repository.IdClassExampleEmployee ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { IdClassExampleDepartment org.springframework.data.jpa.repository.IdClassExampleDepartment = new IdClassExampleDepartment ( ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setName ( STRING ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setDepartmentId ( - NUMBER ) ; IdClassExampleEmployee org.springframework.data.jpa.repository.IdClassExampleEmployee = new IdClassExampleEmployee ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.IdClassExampleDepartment ) ; org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . save ( org.springframework.data.jpa.repository.IdClassExampleEmployee ) ; IdClassExampleEmployeePK org.springframework.data.jpa.repository.IdClassExampleEmployeePK = new IdClassExampleEmployeePK ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployeePK . setDepartment ( org.springframework.data.jpa.repository.IdClassExampleDepartment . getDepartmentId ( ) ) ; org.springframework.data.jpa.repository.IdClassExampleEmployeePK . setEmpId ( org.springframework.data.jpa.repository.IdClassExampleEmployee . getEmpId ( ) ) ; assertThat ( org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . exists ( org.springframework.data.jpa.repository.IdClassExampleEmployeePK ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { EmbeddedIdExampleDepartment org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment = new EmbeddedIdExampleDepartment ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . setDepartmentId ( NUMBER ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . setName ( STRING ) ; EmbeddedIdExampleEmployeePK org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK = new EmbeddedIdExampleEmployeePK ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK . setDepartmentId ( NUMBER ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK . setEmployeeId ( NUMBER ) ; EmbeddedIdExampleEmployee org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = new EmbeddedIdExampleEmployee ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setEmployeePk ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithEmbeddedId . save ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK . setDepartmentId ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . getDepartment ( ) . getDepartmentId ( ) ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK . setEmployeeId ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . getEmployeePk ( ) . getEmployeeId ( ) ) ; assertThat ( org.springframework.data.jpa.repository.EmployeeRepositoryWithEmbeddedId . exists ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { IdClassExampleDepartment org.springframework.data.jpa.repository.IdClassExampleDepartment = new IdClassExampleDepartment ( ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setDepartmentId ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setName ( STRING ) ; IdClassExampleEmployee org.springframework.data.jpa.repository.IdClassExampleEmployee = new IdClassExampleEmployee ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setEmpId ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.IdClassExampleDepartment ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . save ( org.springframework.data.jpa.repository.IdClassExampleEmployee ) ; IdClassExampleDepartment org.springframework.data.jpa.repository.IdClassExampleDepartment = new IdClassExampleDepartment ( ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setDepartmentId ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setName ( STRING ) ; IdClassExampleEmployee org.springframework.data.jpa.repository.IdClassExampleEmployee = new IdClassExampleEmployee ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setEmpId ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.IdClassExampleDepartment ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee = org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . save ( org.springframework.data.jpa.repository.IdClassExampleEmployee ) ; IdClassExampleEmployeePK org.springframework.data.jpa.repository.IdClassExampleEmployeePK = new IdClassExampleEmployeePK ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployeePK . setDepartment ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleEmployeePK . setEmpId ( NUMBER ) ; IdClassExampleEmployeePK org.springframework.data.jpa.repository.IdClassExampleEmployeePK = new IdClassExampleEmployeePK ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployeePK . setDepartment ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleEmployeePK . setEmpId ( NUMBER ) ; java.util.List<org.springframework.data.jpa.repository.IdClassExampleEmployee> < IdClassExampleEmployee > java.util.List<org.springframework.data.jpa.repository.IdClassExampleEmployee> = org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . findAll ( java.util.Arrays . java.util.List ( org.springframework.data.jpa.repository.IdClassExampleEmployeePK , org.springframework.data.jpa.repository.IdClassExampleEmployeePK ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.IdClassExampleEmployee> , hasSize ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { EmbeddedIdExampleDepartment org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment = new EmbeddedIdExampleDepartment ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . setDepartmentId ( NUMBER ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment . setName ( STRING ) ; EmbeddedIdExampleEmployeePK org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK = new EmbeddedIdExampleEmployeePK ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK . setDepartmentId ( NUMBER ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK . setEmployeeId ( NUMBER ) ; EmbeddedIdExampleEmployee org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee = new EmbeddedIdExampleEmployee ( ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.EmbeddedIdExampleDepartment ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setEmployeePk ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployeePK ) ; org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . setName ( STRING ) ; org.springframework.data.jpa.repository.EmployeeRepositoryWithEmbeddedId . save ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee ) ; assertThat ( org.springframework.data.jpa.repository.EmployeeRepositoryWithEmbeddedId . existsByName ( org.springframework.data.jpa.repository.EmbeddedIdExampleEmployee . getName ( ) ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { IdClassExampleDepartment org.springframework.data.jpa.repository.IdClassExampleDepartment = new IdClassExampleDepartment ( ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setDepartmentId ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleDepartment . setName ( STRING ) ; IdClassExampleEmployee org.springframework.data.jpa.repository.IdClassExampleEmployee = new IdClassExampleEmployee ( ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setEmpId ( NUMBER ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setDepartment ( org.springframework.data.jpa.repository.IdClassExampleDepartment ) ; org.springframework.data.jpa.repository.IdClassExampleEmployee . setName ( STRING ) ; org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . save ( org.springframework.data.jpa.repository.IdClassExampleEmployee ) ; assertThat ( org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . existsByName ( org.springframework.data.jpa.repository.IdClassExampleEmployee . getName ( ) ) , is ( true ) ) ; assertThat ( org.springframework.data.jpa.repository.EmployeeRepositoryWithIdClass . existsByName ( STRING ) , is ( false ) ) ; }  <METHOD_END>
