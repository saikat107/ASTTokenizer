<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.ArithmeticOperatorFactory org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.ArithmeticOperatorFactory ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.ArithmeticOperatorFactory ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.ArithmeticOperatorFactory org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.ArithmeticOperatorFactory ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.ArithmeticOperatorFactory ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = null ; }  <METHOD_END>
<METHOD_START> public void ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; this . java.lang.String = null ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( ) . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc . org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.Sum org.springframework.data.mongodb.core.aggregation.Sum ( ) { return java.lang.String != null ? AccumulatorOperators . Sum . sumOf ( java.lang.String ) : AccumulatorOperators . Sum . sumOf ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.Avg org.springframework.data.mongodb.core.aggregation.Avg ( ) { return java.lang.String != null ? AccumulatorOperators . Avg . avgOf ( java.lang.String ) : AccumulatorOperators . Avg . avgOf ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.Max org.springframework.data.mongodb.core.aggregation.Max ( ) { return java.lang.String != null ? AccumulatorOperators . Max . maxOf ( java.lang.String ) : AccumulatorOperators . Max . maxOf ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.Min org.springframework.data.mongodb.core.aggregation.Min ( ) { return java.lang.String != null ? AccumulatorOperators . Min . minOf ( java.lang.String ) : AccumulatorOperators . Min . minOf ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StdDevPop org.springframework.data.mongodb.core.aggregation.StdDevPop ( ) { return java.lang.String != null ? AccumulatorOperators . StdDevPop . stdDevPopOf ( java.lang.String ) : AccumulatorOperators . StdDevPop . stdDevPopOf ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StdDevSamp org.springframework.data.mongodb.core.aggregation.StdDevSamp ( ) { return java.lang.String != null ? AccumulatorOperators . StdDevSamp . stdDevSampOf ( java.lang.String ) : AccumulatorOperators . StdDevSamp . stdDevSampOf ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Abs ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> protected void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( java.util.Collections . java.util.List<java.lang.Number> ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( java.lang.Number java.lang.Number ) { return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Add ( append ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ceil ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( java.util.Collections . java.util.List<java.lang.Number> ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( java.lang.Number java.lang.Number ) { return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Divide ( append ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Exp ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Floor ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Ln ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.util.Collections . java.util.List<java.lang.Number> ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( java.lang.Number java.lang.Number ) { return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log ( append ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Log10 ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( java.util.Collections . java.util.List<java.lang.Number> ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( java.lang.Number java.lang.Number ) { return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Mod ( append ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( java.util.Collections . java.util.List<java.lang.Number> ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( java.lang.Number java.lang.Number ) { return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Multiply ( append ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( java.util.Collections . java.util.List<java.lang.Number> ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( java.lang.Number java.lang.Number ) { return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Pow ( append ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Sqrt ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( java.util.Collections . java.util.List<java.lang.Number> ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( java.lang.Number java.lang.Number ) { return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Subtract ( append ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArithmeticOperators.Trunc ( java.lang.Number ) ; }  <METHOD_END>
