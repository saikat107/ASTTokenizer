<METHOD_START> public void void ( ObjectFactory < AuditingHandler > org.springframework.data.jpa.domain.support.ObjectFactory<org.springframework.data.jpa.domain.support.AuditingHandler> ) { Assert . notNull ( org.springframework.data.jpa.domain.support.ObjectFactory<org.springframework.data.jpa.domain.support.AuditingHandler> , STRING ) ; this . org.springframework.data.jpa.domain.support.ObjectFactory<org.springframework.data.jpa.domain.support.AuditingHandler> = org.springframework.data.jpa.domain.support.ObjectFactory<org.springframework.data.jpa.domain.support.AuditingHandler> ; }  <METHOD_END>
<METHOD_START> @ PrePersist public void void ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; if ( org.springframework.data.jpa.domain.support.ObjectFactory<org.springframework.data.jpa.domain.support.AuditingHandler> != null ) { org.springframework.data.jpa.domain.support.ObjectFactory<org.springframework.data.jpa.domain.support.AuditingHandler> . getObject ( ) . markCreated ( java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> @ PreUpdate public void void ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; if ( org.springframework.data.jpa.domain.support.ObjectFactory<org.springframework.data.jpa.domain.support.AuditingHandler> != null ) { org.springframework.data.jpa.domain.support.ObjectFactory<org.springframework.data.jpa.domain.support.AuditingHandler> . getObject ( ) . markModified ( java.lang.Object ) ; } }  <METHOD_END>
