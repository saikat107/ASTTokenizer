<METHOD_START> @ Before public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; this . org.springframework.boot.env.ClassPathResource = new ClassPathResource ( java.lang.String , java.lang.Class<? extends org.springframework.boot.env.OriginTrackedPropertiesLoaderTests> ( ) ) ; this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> = new OriginTrackedPropertiesLoader ( this . org.springframework.boot.env.ClassPathResource ) . load ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Properties java.util.Properties = PropertiesLoaderUtils . loadProperties ( this . org.springframework.boot.env.ClassPathResource ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; new OriginTrackedPropertiesLoader ( this . org.springframework.boot.env.ClassPathResource ) . load ( false ) . forEach ( ( k , v ) -> ours . put ( k , v . getValue ( ) ) ) ; assertThat ( java.util.Properties ) . isEqualTo ( java.util.Properties ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ) . isNull ( ) ; assertThat ( this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ) . isNull ( ) ; assertThat ( this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ) . isNull ( ) ; assertThat ( this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = this . java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . get ( STRING ) ; assertThat ( java.lang.Object ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( OriginTrackedValue org.springframework.boot.env.OriginTrackedValue ) { return ( org.springframework.boot.env.OriginTrackedValue == null ? null : org.springframework.boot.env.OriginTrackedValue . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( OriginTrackedValue org.springframework.boot.env.OriginTrackedValue ) { if ( org.springframework.boot.env.OriginTrackedValue == null ) { return null ; } return ( ( TextResourcePropertyOrigin ) org.springframework.boot.env.OriginTrackedValue . getOrigin ( ) ) . getLocation ( ) . toString ( ) ; }  <METHOD_END>
