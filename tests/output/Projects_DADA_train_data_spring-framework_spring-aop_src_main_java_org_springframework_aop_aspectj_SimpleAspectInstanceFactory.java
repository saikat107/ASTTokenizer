<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; this . java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public final java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return this . java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final java.lang.Object java.lang.Object ( ) { try { return ReflectionUtils . accessibleConstructor ( this . java.lang.Class<> ) . newInstance ( ) ; } catch ( java.lang.NoSuchMethodException java.lang.NoSuchMethodException ) { throw new AopConfigException ( STRING + this . java.lang.Class<> . java.lang.String ( ) , java.lang.NoSuchMethodException ) ; } catch ( java.lang.InstantiationException java.lang.InstantiationException ) { throw new AopConfigException ( STRING + this . java.lang.Class<> . java.lang.String ( ) , java.lang.InstantiationException ) ; } catch ( java.lang.IllegalAccessException java.lang.IllegalAccessException ) { throw new AopConfigException ( STRING + this . java.lang.Class<> . java.lang.String ( ) , java.lang.IllegalAccessException ) ; } catch ( java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException ) { throw new AopConfigException ( STRING + this . java.lang.Class<> . java.lang.String ( ) , java.lang.reflect.InvocationTargetException . java.lang.Throwable ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.ClassLoader java.lang.ClassLoader ( ) { return this . java.lang.Class<> . java.lang.ClassLoader ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return int ( this . java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> protected int int ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return Ordered . LOWEST_PRECEDENCE ; }  <METHOD_END>
