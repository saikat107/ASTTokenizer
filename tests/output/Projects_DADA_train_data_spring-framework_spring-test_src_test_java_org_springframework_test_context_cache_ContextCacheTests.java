<METHOD_START> @ Before public void void ( ) { assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { assertEquals ( STRING , int , org.springframework.test.context.cache.ContextCache . getParentContextCount ( ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.test.context.cache.MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration ( TestContext org.springframework.test.context.cache.TestContext ) { return ( MergedContextConfiguration ) ReflectionTestUtils . getField ( org.springframework.test.context.cache.TestContext , STRING ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.test.context.cache.ApplicationContext org.springframework.test.context.cache.ApplicationContext ( java.lang.Class<?> < ? > java.lang.Class<?> ) { TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( java.lang.Class<> , org.springframework.test.context.cache.ContextCache ) ; return org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > java.lang.Class<?> , int int , int int , int int ) { assertNotNull ( org.springframework.test.context.cache.ApplicationContext ( java.lang.Class<> ) ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , java.lang.Class<> . java.lang.String ( ) , int , int , int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.test.context.cache.ContextCacheTests.AnnotationConfigContextLoaderTestCase .class , NUMBER , NUMBER , NUMBER ) ; void ( org.springframework.test.context.cache.ContextCacheTests.AnnotationConfigContextLoaderTestCase .class , NUMBER , NUMBER , NUMBER ) ; void ( org.springframework.test.context.cache.ContextCacheTests.CustomAnnotationConfigContextLoaderTestCase .class , NUMBER , NUMBER , NUMBER ) ; void ( org.springframework.test.context.cache.ContextCacheTests.CustomAnnotationConfigContextLoaderTestCase .class , NUMBER , NUMBER , NUMBER ) ; void ( org.springframework.test.context.cache.ContextCacheTests.AnnotationConfigContextLoaderTestCase .class , NUMBER , NUMBER , NUMBER ) ; void ( org.springframework.test.context.cache.ContextCacheTests.CustomAnnotationConfigContextLoaderTestCase .class , NUMBER , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { int int = NUMBER , int = NUMBER , int = NUMBER ; void ( org.springframework.test.context.cache.ContextCacheTests.FooBarProfilesTestCase .class , ++ int , int , ++ int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.FooBarProfilesTestCase .class , int , ++ int , int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.BarFooProfilesTestCase .class , ++ int , int , ++ int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.FooBarProfilesTestCase .class , int , ++ int , int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.FooBarProfilesTestCase .class , int , ++ int , int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.BarFooProfilesTestCase .class , int , ++ int , int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.FooBarActiveProfilesResolverTestCase .class , int , ++ int , int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; void ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel1TestCase .class , ++ int , int , ++ int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel1TestCase .class , int , ++ int , int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel2TestCase .class , ++ int , ++ int , ++ int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel2TestCase .class , int , ++ int , int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel2TestCase .class , int , ++ int , int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3aTestCase .class , ++ int , ++ int , ++ int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3aTestCase .class , int , ++ int , int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3bTestCase .class , ++ int , ++ int , ++ int ) ; void ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3bTestCase .class , int , ++ int , int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3aTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3bTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; org.springframework.test.context.cache.ContextCache . remove ( org.springframework.test.context.cache.MergedContextConfiguration ( org.springframework.test.context.cache.TestContext ) . getParent ( ) . getParent ( ) , HierarchyMode . CURRENT_LEVEL ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3aTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3bTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; org.springframework.test.context.cache.ContextCache . remove ( org.springframework.test.context.cache.MergedContextConfiguration ( org.springframework.test.context.cache.TestContext ) . getParent ( ) . getParent ( ) , HierarchyMode . EXHAUSTIVE ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3aTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3bTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; org.springframework.test.context.cache.ContextCache . remove ( org.springframework.test.context.cache.MergedContextConfiguration ( org.springframework.test.context.cache.TestContext ) . getParent ( ) , HierarchyMode . CURRENT_LEVEL ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3aTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3bTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; org.springframework.test.context.cache.ContextCache . remove ( org.springframework.test.context.cache.MergedContextConfiguration ( org.springframework.test.context.cache.TestContext ) . getParent ( ) , HierarchyMode . EXHAUSTIVE ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3aTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3bTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; org.springframework.test.context.cache.ContextCache . remove ( org.springframework.test.context.cache.MergedContextConfiguration ( org.springframework.test.context.cache.TestContext ) , HierarchyMode . CURRENT_LEVEL ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; org.springframework.test.context.cache.ContextCache . remove ( org.springframework.test.context.cache.MergedContextConfiguration ( org.springframework.test.context.cache.TestContext ) . getParent ( ) , HierarchyMode . CURRENT_LEVEL ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3aTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; TestContext org.springframework.test.context.cache.TestContext = TestContextTestUtils . buildTestContext ( org.springframework.test.context.cache.ContextCacheTests.ClassHierarchyContextHierarchyLevel3bTestCase .class , org.springframework.test.context.cache.ContextCache ) ; org.springframework.test.context.cache.TestContext . getApplicationContext ( ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; org.springframework.test.context.cache.ContextCache . remove ( org.springframework.test.context.cache.MergedContextConfiguration ( org.springframework.test.context.cache.TestContext ) , HierarchyMode . EXHAUSTIVE ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; org.springframework.test.context.cache.ContextCache . remove ( org.springframework.test.context.cache.MergedContextConfiguration ( org.springframework.test.context.cache.TestContext ) . getParent ( ) , HierarchyMode . EXHAUSTIVE ) ; assertContextCacheStatistics ( org.springframework.test.context.cache.ContextCache , STRING , NUMBER , NUMBER , NUMBER ) ; void ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return new java.lang.String [] { STRING , STRING } ; }  <METHOD_END>
