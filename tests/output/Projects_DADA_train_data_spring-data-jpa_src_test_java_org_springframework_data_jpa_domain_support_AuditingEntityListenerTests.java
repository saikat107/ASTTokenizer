<METHOD_START> @ Before public void void ( ) { org.springframework.data.jpa.domain.support.AuditableUser = new AuditableUser ( ) ; org.springframework.data.jpa.domain.support.AuditorAwareStub . setAuditor ( org.springframework.data.jpa.domain.support.AuditableUser ) ; org.springframework.data.jpa.domain.support.AuditableUserRepository . saveAndFlush ( org.springframework.data.jpa.domain.support.AuditableUser ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.data.jpa.domain.support.AuditableUser ) ; void ( org.springframework.data.jpa.domain.support.AuditableUser , org.springframework.data.jpa.domain.support.AuditableUser ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Thread . void ( NUMBER ) ; org.springframework.data.jpa.domain.support.AuditableUser . setFirstname ( STRING ) ; org.springframework.data.jpa.domain.support.AuditableUser = org.springframework.data.jpa.domain.support.AuditableUserRepository . saveAndFlush ( org.springframework.data.jpa.domain.support.AuditableUser ) ; assertThat ( org.springframework.data.jpa.domain.support.AuditableUser . getCreatedDate ( ) . get ( ) . isBefore ( org.springframework.data.jpa.domain.support.AuditableUser . getLastModifiedDate ( ) . get ( ) ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AuditableRole org.springframework.data.jpa.domain.support.AuditableRole = new AuditableRole ( ) ; org.springframework.data.jpa.domain.support.AuditableRole . setName ( STRING ) ; org.springframework.data.jpa.domain.support.AuditableUser . addRole ( org.springframework.data.jpa.domain.support.AuditableRole ) ; org.springframework.data.jpa.domain.support.AuditableUserRepository . save ( org.springframework.data.jpa.domain.support.AuditableUser ) ; org.springframework.data.jpa.domain.support.AuditableRole = org.springframework.data.jpa.domain.support.AuditableUser . getRoles ( ) . iterator ( ) . next ( ) ; void ( org.springframework.data.jpa.domain.support.AuditableUser ) ; void ( org.springframework.data.jpa.domain.support.AuditableRole ) ; void ( org.springframework.data.jpa.domain.support.AuditableUser , org.springframework.data.jpa.domain.support.AuditableUser ) ; void ( org.springframework.data.jpa.domain.support.AuditableUser , org.springframework.data.jpa.domain.support.AuditableRole ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotatedAuditableUser org.springframework.data.jpa.domain.support.AnnotatedAuditableUser = org.springframework.data.jpa.domain.support.AnnotatedAuditableUserRepository . save ( new AnnotatedAuditableUser ( ) ) ; assertThat ( org.springframework.data.jpa.domain.support.AnnotatedAuditableUser . getCreateAt ( ) , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.jpa.domain.support.AnnotatedAuditableUser . getLastModifiedBy ( ) , is ( notNullValue ( ) ) ) ; }  <METHOD_END>
<METHOD_START> private static void void ( Auditable < ? , ? , java.time.LocalDateTime > org.springframework.data.jpa.domain.support.Auditable<?,?,java.time.LocalDateTime> ) { assertThat ( org.springframework.data.jpa.domain.support.Auditable<,,java.time.LocalDateTime> . getCreatedDate ( ) . isPresent ( ) , is ( true ) ) ; assertThat ( org.springframework.data.jpa.domain.support.Auditable<,,java.time.LocalDateTime> . getLastModifiedDate ( ) . isPresent ( ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> private static void void ( AuditableUser org.springframework.data.jpa.domain.support.AuditableUser , Auditable < AuditableUser , ? , java.time.LocalDateTime > org.springframework.data.jpa.domain.support.Auditable<org.springframework.data.jpa.domain.support.AuditableUser,?,java.time.LocalDateTime> ) { assertThat ( org.springframework.data.jpa.domain.support.Auditable<org.springframework.data.jpa.domain.support.AuditableUser,,java.time.LocalDateTime> . getCreatedBy ( ) , is ( java.util.Optional . java.util.Optional ( org.springframework.data.jpa.domain.support.AuditableUser ) ) ) ; assertThat ( org.springframework.data.jpa.domain.support.Auditable<org.springframework.data.jpa.domain.support.AuditableUser,,java.time.LocalDateTime> . getLastModifiedBy ( ) , is ( java.util.Optional . java.util.Optional ( org.springframework.data.jpa.domain.support.AuditableUser ) ) ) ; }  <METHOD_END>
