<METHOD_START> public void ( ) { this( new java.io.File ( java.lang.String ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this( new java.io.File ( java.lang.String ) ); }  <METHOD_END>
<METHOD_START> public void ( java.io.File java.io.File ) { Assert . notNull ( java.io.File , STRING ) ; java.lang.String java.lang.String = SystemProperties . get ( java.lang.String[] ) ; if ( java.lang.String != null ) { this . java.io.File = new java.io.File ( java.lang.String ) ; } else { this . java.io.File = java.io.File ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletWebServerInitializedEvent org.springframework.boot.system.ServletWebServerInitializedEvent ) { java.io.File java.io.File = java.io.File ( org.springframework.boot.system.ServletWebServerInitializedEvent . getApplicationContext ( ) ) ; try { java.lang.String java.lang.String = java.lang.String . java.lang.String ( org.springframework.boot.system.ServletWebServerInitializedEvent . getWebServer ( ) . getPort ( ) ) ; void ( java.io.File ) ; FileCopyUtils . copy ( java.lang.String . byte[] ( ) , java.io.File ) ; java.io.File . void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { org.springframework.boot.system.Log . warn ( java.lang.String . java.lang.String ( STRING , this . java.io.File ) ) ; } }  <METHOD_END>
<METHOD_START> protected java.io.File java.io.File ( ServletWebServerApplicationContext org.springframework.boot.system.ServletWebServerApplicationContext ) { java.lang.String java.lang.String = org.springframework.boot.system.ServletWebServerApplicationContext . getNamespace ( ) ; if ( StringUtils . isEmpty ( java.lang.String ) ) { return this . java.io.File ; } java.lang.String java.lang.String = this . java.io.File . java.lang.String ( ) ; java.lang.String java.lang.String = StringUtils . getFilenameExtension ( this . java.io.File . java.lang.String ( ) ) ; java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - java.lang.String . int ( ) - NUMBER ) ; if ( boolean ( java.lang.String ) ) { java.lang.String = java.lang.String + STRING + java.lang.String . java.lang.String ( ) ; } else { java.lang.String = java.lang.String + STRING + java.lang.String . java.lang.String ( ) ; } if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.String = java.lang.String + STRING + java.lang.String ; } return new java.io.File ( this . java.io.File . java.io.File ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.String java.lang.String ) { for ( int int = NUMBER ; int < java.lang.String . int ( ) ; int ++ ) { if ( java.lang.Character . boolean ( java.lang.String . char ( int ) ) && ! java.lang.Character . boolean ( java.lang.String . char ( int ) ) ) { return false ; } } return true ; }  <METHOD_END>
<METHOD_START> private void void ( java.io.File java.io.File ) { java.io.File java.io.File = java.io.File . java.io.File ( ) ; if ( java.io.File != null ) { java.io.File . boolean ( ) ; } }  <METHOD_END>
