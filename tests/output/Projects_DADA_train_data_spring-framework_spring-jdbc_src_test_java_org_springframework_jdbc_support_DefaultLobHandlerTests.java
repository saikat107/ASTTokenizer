<METHOD_START> @ Test public void void ( ) java.sql.SQLException { org.springframework.jdbc.support.LobHandler . getBlobAsBytes ( java.sql.ResultSet , NUMBER ) ; verify ( java.sql.ResultSet ) . getBytes ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { org.springframework.jdbc.support.LobHandler . getBlobAsBinaryStream ( java.sql.ResultSet , NUMBER ) ; verify ( java.sql.ResultSet ) . getBinaryStream ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { org.springframework.jdbc.support.LobHandler . getClobAsString ( java.sql.ResultSet , NUMBER ) ; verify ( java.sql.ResultSet ) . getString ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { org.springframework.jdbc.support.LobHandler . getClobAsAsciiStream ( java.sql.ResultSet , NUMBER ) ; verify ( java.sql.ResultSet ) . getAsciiStream ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { org.springframework.jdbc.support.LobHandler . getClobAsCharacterStream ( java.sql.ResultSet , NUMBER ) ; verify ( java.sql.ResultSet ) . getCharacterStream ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { byte [] byte[] = STRING . byte[] ( ) ; org.springframework.jdbc.support.LobCreator . setBlobAsBytes ( java.sql.PreparedStatement , NUMBER , byte[] ) ; verify ( java.sql.PreparedStatement ) . setBytes ( NUMBER , byte[] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException , java.io.IOException { java.io.InputStream java.io.InputStream = new java.io.ByteArrayInputStream ( STRING . byte[] ( ) ) ; org.springframework.jdbc.support.LobCreator . setBlobAsBinaryStream ( java.sql.PreparedStatement , NUMBER , java.io.InputStream , NUMBER ) ; verify ( java.sql.PreparedStatement ) . setBinaryStream ( NUMBER , java.io.InputStream , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException , java.io.IOException { java.io.InputStream java.io.InputStream = new java.io.ByteArrayInputStream ( STRING . byte[] ( ) ) ; org.springframework.jdbc.support.LobCreator . setBlobAsBinaryStream ( java.sql.PreparedStatement , NUMBER , java.io.InputStream , - NUMBER ) ; verify ( java.sql.PreparedStatement ) . setBinaryStream ( NUMBER , java.io.InputStream ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException , java.io.IOException { java.lang.String java.lang.String = STRING ; org.springframework.jdbc.support.LobCreator . setClobAsString ( java.sql.PreparedStatement , NUMBER , java.lang.String ) ; verify ( java.sql.PreparedStatement ) . setString ( NUMBER , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException , java.io.IOException { java.io.InputStream java.io.InputStream = new java.io.ByteArrayInputStream ( STRING . byte[] ( ) ) ; org.springframework.jdbc.support.LobCreator . setClobAsAsciiStream ( java.sql.PreparedStatement , NUMBER , java.io.InputStream , NUMBER ) ; verify ( java.sql.PreparedStatement ) . setAsciiStream ( NUMBER , java.io.InputStream , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException , java.io.IOException { java.io.InputStream java.io.InputStream = new java.io.ByteArrayInputStream ( STRING . byte[] ( ) ) ; org.springframework.jdbc.support.LobCreator . setClobAsAsciiStream ( java.sql.PreparedStatement , NUMBER , java.io.InputStream , - NUMBER ) ; verify ( java.sql.PreparedStatement ) . setAsciiStream ( NUMBER , java.io.InputStream ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException , java.io.IOException { java.io.Reader java.io.Reader = new java.io.StringReader ( STRING ) ; org.springframework.jdbc.support.LobCreator . setClobAsCharacterStream ( java.sql.PreparedStatement , NUMBER , java.io.Reader , NUMBER ) ; verify ( java.sql.PreparedStatement ) . setCharacterStream ( NUMBER , java.io.Reader , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException , java.io.IOException { java.io.Reader java.io.Reader = new java.io.StringReader ( STRING ) ; org.springframework.jdbc.support.LobCreator . setClobAsCharacterStream ( java.sql.PreparedStatement , NUMBER , java.io.Reader , - NUMBER ) ; verify ( java.sql.PreparedStatement ) . setCharacterStream ( NUMBER , java.io.Reader ) ; }  <METHOD_END>
