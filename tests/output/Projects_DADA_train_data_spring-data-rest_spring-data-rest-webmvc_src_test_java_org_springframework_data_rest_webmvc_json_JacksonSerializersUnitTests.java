<METHOD_START> @ Before public void void ( ) { EnumTranslator org.springframework.data.rest.webmvc.json.EnumTranslator = mock ( EnumTranslator .class ) ; doReturn ( org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum . org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum ) . when ( org.springframework.data.rest.webmvc.json.EnumTranslator ) . fromText ( org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum .class , STRING ) ; this . org.springframework.data.rest.webmvc.json.ObjectMapper = new ObjectMapper ( ) ; this . org.springframework.data.rest.webmvc.json.ObjectMapper . registerModule ( new JacksonSerializers ( org.springframework.data.rest.webmvc.json.EnumTranslator ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample = org.springframework.data.rest.webmvc.json.ObjectMapper . readValue ( STRING , org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample .class ) ; assertThat ( org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample . org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum ) . isEqualTo ( org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum . org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample = org.springframework.data.rest.webmvc.json.ObjectMapper . readValue ( STRING , org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample .class ) ; assertThat ( org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample . java.util.Collection<org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum> ) . contains ( org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum . org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample = org.springframework.data.rest.webmvc.json.ObjectMapper . readValue ( STRING , org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample .class ) ; assertThat ( org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample . org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum[] , hasItemInArray ( org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum . org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample = org.springframework.data.rest.webmvc.json.ObjectMapper . readValue ( STRING , org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample .class ) ; assertThat ( org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample . java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum> . org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum ( STRING ) ) . isEqualTo ( org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum . org.springframework.data.rest.webmvc.json.JacksonSerializersUnitTests.Sample.SampleEnum ) ; }  <METHOD_END>
