<METHOD_START> void ( ) { super( WebFilter .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , ScannedGenericBeanDefinition org.springframework.boot.web.servlet.ScannedGenericBeanDefinition , BeanDefinitionRegistry org.springframework.boot.web.servlet.BeanDefinitionRegistry ) { BeanDefinitionBuilder org.springframework.boot.web.servlet.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( FilterRegistrationBean .class ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> ( java.util.Map<java.lang.String,java.lang.Object> ) ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.boot.web.servlet.ScannedGenericBeanDefinition ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , extractInitParameters ( java.util.Map<java.lang.String,java.lang.Object> ) ) ; java.lang.String java.lang.String = java.lang.String ( java.util.Map<java.lang.String,java.lang.Object> , org.springframework.boot.web.servlet.ScannedGenericBeanDefinition ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , extractUrlPatterns ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ) ; org.springframework.boot.web.servlet.BeanDefinitionRegistry . registerBeanDefinition ( java.lang.String , org.springframework.boot.web.servlet.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> < DispatcherType > java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { DispatcherType [] org.springframework.boot.web.servlet.DispatcherType[] = ( DispatcherType [] ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; if ( dispatcherTypes . length == NUMBER ) { return java.util.EnumSet . java.util.EnumSet<E> ( DispatcherType .class ) ; } if ( dispatcherTypes . length == NUMBER ) { return java.util.EnumSet . java.util.EnumSet ( org.springframework.boot.web.servlet.DispatcherType[] [ NUMBER ] ) ; } return java.util.EnumSet . java.util.EnumSet ( org.springframework.boot.web.servlet.DispatcherType[] [ NUMBER ] , java.util.Arrays . java.lang.Object[] ( org.springframework.boot.web.servlet.DispatcherType[] , NUMBER , dispatcherTypes . length ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , BeanDefinition org.springframework.boot.web.servlet.BeanDefinition ) { return ( java.lang.String ) ( StringUtils . hasText ( ( java.lang.String ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ? java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) : org.springframework.boot.web.servlet.BeanDefinition . getBeanClassName ( ) ) ; }  <METHOD_END>
