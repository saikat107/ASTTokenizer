<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . setComponentName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.integration.jms.MessageChannel ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . setRequestChannel ( org.springframework.integration.jms.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . setRequestChannelName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.integration.jms.MessageChannel ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . setReplyChannel ( org.springframework.integration.jms.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . setReplyChannelName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.integration.jms.MessageChannel ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . setErrorChannel ( org.springframework.integration.jms.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . setErrorChannelName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . setRequestTimeout ( long ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . setReplyTimeout ( long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . setShouldTrack ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . getComponentName ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( Destination org.springframework.integration.jms.Destination ) { this . java.lang.Object = org.springframework.integration.jms.Destination ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.Object = new org.springframework.integration.jms.ChannelPublishingJmsMessageListener.DestinationNameHolder ( java.lang.String , false ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.Object = new org.springframework.integration.jms.ChannelPublishingJmsMessageListener.DestinationNameHolder ( java.lang.String , true ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . int = boolean ? DeliveryMode . PERSISTENT : DeliveryMode . NON_PERSISTENT ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( DestinationResolver org.springframework.integration.jms.DestinationResolver ) { Assert . notNull ( org.springframework.integration.jms.DestinationResolver , STRING ) ; this . org.springframework.integration.jms.DestinationResolver = org.springframework.integration.jms.DestinationResolver ; }  <METHOD_END>
<METHOD_START> public void void ( MessageConverter org.springframework.integration.jms.MessageConverter ) { this . org.springframework.integration.jms.MessageConverter = org.springframework.integration.jms.MessageConverter ; }  <METHOD_END>
<METHOD_START> public void void ( JmsHeaderMapper org.springframework.integration.jms.JmsHeaderMapper ) { this . org.springframework.integration.jms.JmsHeaderMapper = org.springframework.integration.jms.JmsHeaderMapper ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.jms.BeanFactory ) throws org.springframework.integration.jms.BeansException { this . org.springframework.integration.jms.BeanFactory = org.springframework.integration.jms.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( javax . javax.jms . javax.jms javax.jms.Message , Session org.springframework.integration.jms.Session ) throws org.springframework.integration.jms.JMSException { java.lang.Object java.lang.Object = javax.jms.Message ; Message < ? > org.springframework.integration.jms.Message<?> = null ; boolean boolean = false ; try { if ( this . boolean ) { java.lang.Object = this . org.springframework.integration.jms.MessageConverter . fromMessage ( javax.jms.Message ) ; if ( this . org.springframework.integration.jms.Log . isDebugEnabled ( ) ) { this . org.springframework.integration.jms.Log . debug ( STRING + javax.jms.Message + STRING + java.lang.Object + STRING ) ; } } java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.integration.jms.JmsHeaderMapper . toHeaders ( javax.jms.Message ) ; org.springframework.integration.jms.Message<?> = ( java.lang.Object instanceof Message < ? > ) ? this . org.springframework.integration.jms.MessageBuilderFactory . fromMessage ( ( Message < ? > ) java.lang.Object ) . copyHeaders ( java.util.Map<java.lang.String,java.lang.Object> ) . build ( ) : this . org.springframework.integration.jms.MessageBuilderFactory . withPayload ( java.lang.Object ) . copyHeaders ( java.util.Map<java.lang.String,java.lang.Object> ) . build ( ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { MessageChannel org.springframework.integration.jms.MessageChannel = this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . org.springframework.integration.jms.MessageChannel ( ) ; if ( org.springframework.integration.jms.MessageChannel == null ) { throw java.lang.RuntimeException ; } org.springframework.integration.jms.MessageChannel . send ( new ErrorMessage ( new MessagingException ( STRING + javax.jms.Message , java.lang.RuntimeException ) ) ) ; boolean = true ; } if ( ! boolean ) { if ( ! this . boolean ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . void ( org.springframework.integration.jms.Message<> ) ; } else { Message < ? > org.springframework.integration.jms.Message<?> = this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . org.springframework.integration.jms.Message<?> ( org.springframework.integration.jms.Message<> ) ; if ( org.springframework.integration.jms.Message<> != null ) { Destination org.springframework.integration.jms.Destination = this . org.springframework.integration.jms.Destination ( javax.jms.Message , org.springframework.integration.jms.Session ) ; if ( this . org.springframework.integration.jms.Log . isDebugEnabled ( ) ) { this . org.springframework.integration.jms.Log . debug ( STRING + org.springframework.integration.jms.Destination ) ; } if ( org.springframework.integration.jms.Destination != null ) { java.lang.Object java.lang.Object = org.springframework.integration.jms.Message<> ; if ( this . boolean ) { java.lang.Object = org.springframework.integration.jms.Message<> . getPayload ( ) ; } try { javax . javax.jms . javax.jms javax.jms.Message = this . org.springframework.integration.jms.MessageConverter . toMessage ( java.lang.Object , org.springframework.integration.jms.Session ) ; this . org.springframework.integration.jms.JmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<> . getHeaders ( ) , javax.jms.Message ) ; this . void ( javax.jms.Message , javax.jms.Message ) ; this . void ( javax.jms.Message , org.springframework.integration.jms.Destination , org.springframework.integration.jms.Session ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { this . org.springframework.integration.jms.Log . error ( STRING + java.lang.Object , java.lang.RuntimeException ) ; throw java.lang.RuntimeException ; } } } else if ( this . org.springframework.integration.jms.Log . isDebugEnabled ( ) ) { this . org.springframework.integration.jms.Log . debug ( STRING ) ; } } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.integration.jms.BeanFactory != null ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . setBeanFactory ( this . org.springframework.integration.jms.BeanFactory ) ; } this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . afterPropertiesSet ( ) ; this . org.springframework.integration.jms.MessageBuilderFactory = IntegrationUtils . getMessageBuilderFactory ( this . org.springframework.integration.jms.BeanFactory ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . start ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener.GatewayDelegate . stop ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( javax . javax.jms . javax.jms javax.jms.Message , javax . javax.jms . javax.jms javax.jms.Message )			throws org.springframework.integration.jms.JMSException { if ( this . java.lang.String != null ) { if ( this . java.lang.String . boolean ( STRING ) ) { javax.jms.Message . setJMSCorrelationID ( javax.jms.Message . getJMSCorrelationID ( ) ) ; } else { java.lang.String java.lang.String = javax.jms.Message . getStringProperty ( this . java.lang.String ) ; if ( java.lang.String != null ) { javax.jms.Message . setStringProperty ( this . java.lang.String , java.lang.String ) ; } else if ( this . org.springframework.integration.jms.Log . isWarnEnabled ( ) ) { this . org.springframework.integration.jms.Log . warn ( STRING + this . java.lang.String + STRING ) ; } } } else if ( javax.jms.Message . getJMSCorrelationID ( ) == null ) { javax.jms.Message . setJMSCorrelationID ( javax.jms.Message . getJMSMessageID ( ) ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.integration.jms.Destination org.springframework.integration.jms.Destination ( javax . javax.jms . javax.jms javax.jms.Message , Session org.springframework.integration.jms.Session ) throws org.springframework.integration.jms.JMSException { Destination org.springframework.integration.jms.Destination = javax.jms.Message . getJMSReplyTo ( ) ; if ( org.springframework.integration.jms.Destination == null ) { org.springframework.integration.jms.Destination = org.springframework.integration.jms.Destination ( org.springframework.integration.jms.Session ) ; if ( org.springframework.integration.jms.Destination == null ) { throw new InvalidDestinationException ( STRING + STRING ) ; } } return org.springframework.integration.jms.Destination ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.jms.Destination org.springframework.integration.jms.Destination ( Session org.springframework.integration.jms.Session ) throws org.springframework.integration.jms.JMSException { if ( this . java.lang.Object instanceof Destination ) { return ( Destination ) this . java.lang.Object ; } if ( this . java.lang.Object instanceof org.springframework.integration.jms.ChannelPublishingJmsMessageListener.DestinationNameHolder ) { org.springframework.integration.jms.ChannelPublishingJmsMessageListener.DestinationNameHolder org.springframework.integration.jms.ChannelPublishingJmsMessageListener.DestinationNameHolder = ( org.springframework.integration.jms.ChannelPublishingJmsMessageListener.DestinationNameHolder ) this . java.lang.Object ; return this . org.springframework.integration.jms.DestinationResolver . resolveDestinationName ( org.springframework.integration.jms.Session , org.springframework.integration.jms.ChannelPublishingJmsMessageListener.DestinationNameHolder . java.lang.String , org.springframework.integration.jms.ChannelPublishingJmsMessageListener.DestinationNameHolder . boolean ) ; } return null ; }  <METHOD_END>
<METHOD_START> private void void ( javax . javax.jms . javax.jms javax.jms.Message , Destination org.springframework.integration.jms.Destination , Session org.springframework.integration.jms.Session )			throws org.springframework.integration.jms.JMSException { MessageProducer org.springframework.integration.jms.MessageProducer = org.springframework.integration.jms.Session . createProducer ( org.springframework.integration.jms.Destination ) ; try { if ( this . boolean ) { org.springframework.integration.jms.MessageProducer . send ( javax.jms.Message , this . int , this . int , this . long ) ; } else { org.springframework.integration.jms.MessageProducer . send ( javax.jms.Message ) ; } } finally { JmsUtils . closeMessageProducer ( org.springframework.integration.jms.MessageProducer ) ; } }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , boolean boolean ) { this . java.lang.String = java.lang.String ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.jms.MessageChannel org.springframework.integration.jms.MessageChannel ( ) { return super. getErrorChannel ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { super. send ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.jms.Message<?> < ? > org.springframework.integration.jms.Message<?> ( java.lang.Object java.lang.Object ) { return super. sendAndReceiveMessage ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { if ( org.springframework.integration.jms.ChannelPublishingJmsMessageListener .this . boolean ) { return STRING ; } else { return STRING ; } }  <METHOD_END>
