<METHOD_START> @ Before public void void ( ) { this . org.springframework.boot.autoconfigure.AutoConfigurationSorter = new AutoConfigurationSorter ( new CachingMetadataReaderFactory ( ) , this . org.springframework.boot.autoconfigure.AutoConfigurationMetadata ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = this . org.springframework.boot.autoconfigure.AutoConfigurationSorter . getInPriorityOrder ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String ) ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = this . org.springframework.boot.autoconfigure.AutoConfigurationSorter . getInPriorityOrder ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String , java.lang.String ) ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = this . org.springframework.boot.autoconfigure.AutoConfigurationSorter . getInPriorityOrder ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String , java.lang.String ) ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = this . org.springframework.boot.autoconfigure.AutoConfigurationSorter . getInPriorityOrder ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = this . org.springframework.boot.autoconfigure.AutoConfigurationSorter . getInPriorityOrder ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = this . org.springframework.boot.autoconfigure.AutoConfigurationSorter . getInPriorityOrder ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = this . org.springframework.boot.autoconfigure.AutoConfigurationSorter . getInPriorityOrder ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = this . org.springframework.boot.autoconfigure.AutoConfigurationSorter . getInPriorityOrder ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String ) ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.ExpectedException . expect ( java.lang.IllegalStateException .class ) ; this . org.springframework.boot.autoconfigure.ExpectedException . expectMessage ( STRING ) ; this . org.springframework.boot.autoconfigure.AutoConfigurationSorter . getInPriorityOrder ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MetadataReaderFactory org.springframework.boot.autoconfigure.MetadataReaderFactory = mock ( MetadataReaderFactory .class ) ; this . org.springframework.boot.autoconfigure.AutoConfigurationMetadata = org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; this . org.springframework.boot.autoconfigure.AutoConfigurationSorter = new AutoConfigurationSorter ( org.springframework.boot.autoconfigure.MetadataReaderFactory , this . org.springframework.boot.autoconfigure.AutoConfigurationMetadata ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = this . org.springframework.boot.autoconfigure.AutoConfigurationSorter . getInPriorityOrder ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.AutoConfigurationMetadata org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( java.lang.String ... java.lang.String[] )			throws java.lang.Exception { java.util.Properties java.util.Properties = new java.util.Properties ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . forName ( java.lang.String , null ) ; java.util.Properties . java.lang.Object ( java.lang.Class<> . java.lang.String ( ) , STRING ) ; AutoConfigureOrder org.springframework.boot.autoconfigure.AutoConfigureOrder = java.lang.Class<> . A ( AutoConfigureOrder .class ) ; if ( org.springframework.boot.autoconfigure.AutoConfigureOrder != null ) { java.util.Properties . java.lang.Object ( java.lang.String + STRING , java.lang.String . java.lang.String ( org.springframework.boot.autoconfigure.AutoConfigureOrder . value ( ) ) ) ; } AutoConfigureBefore org.springframework.boot.autoconfigure.AutoConfigureBefore = java.lang.Class<> . A ( AutoConfigureBefore .class ) ; if ( org.springframework.boot.autoconfigure.AutoConfigureBefore != null ) { java.util.Properties . java.lang.Object ( java.lang.String + STRING , java.lang.String ( org.springframework.boot.autoconfigure.AutoConfigureBefore . value ( ) , org.springframework.boot.autoconfigure.AutoConfigureBefore . name ( ) ) ) ; } AutoConfigureAfter org.springframework.boot.autoconfigure.AutoConfigureAfter = java.lang.Class<> . A ( AutoConfigureAfter .class ) ; if ( org.springframework.boot.autoconfigure.AutoConfigureAfter != null ) { java.util.Properties . java.lang.Object ( java.lang.String + STRING , java.lang.String ( org.springframework.boot.autoconfigure.AutoConfigureAfter . value ( ) , org.springframework.boot.autoconfigure.AutoConfigureAfter . name ( ) ) ) ; } } return AutoConfigurationMetadataLoader . loadMetadata ( java.util.Properties ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.Class<?> < ? > [] java.lang.Class<?>[] , java.lang.String [] java.lang.String[] ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.LinkedHashSet<java.lang.String> <> ( ) ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<?>[] ) { java.util.Set<java.lang.String> . boolean ( java.lang.Class<> . java.lang.String ( ) ) ; } for ( java.lang.String java.lang.String : java.lang.String[] ) { java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; } return StringUtils . collectionToCommaDelimitedString ( java.util.Set<java.lang.String> ) ; }  <METHOD_END>
