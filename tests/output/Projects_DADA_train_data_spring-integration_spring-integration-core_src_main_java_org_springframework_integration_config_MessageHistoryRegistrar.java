<METHOD_START> @ java.lang.Override public void void ( AnnotationMetadata org.springframework.integration.config.AnnotationMetadata , BeanDefinitionRegistry org.springframework.integration.config.BeanDefinitionRegistry ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.config.AnnotationMetadata . getAnnotationAttributes ( EnableMessageHistory .class . java.lang.String ( ) ) ; java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; if ( java.lang.Object instanceof java.lang.String [] ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( java.lang.String java.lang.String : ( java.lang.String [] ) java.lang.Object ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( STRING ) ; } java.lang.Object = java.lang.StringBuilder . java.lang.String ( NUMBER , java.lang.StringBuilder . int ( ) - NUMBER ) ; } if ( ! org.springframework.integration.config.BeanDefinitionRegistry . containsBeanDefinition ( IntegrationContextUtils . INTEGRATION_MESSAGE_HISTORY_CONFIGURER_BEAN_NAME ) ) { java.util.Set<java.lang.Object> < java.lang.Object > java.util.Set<java.lang.Object> = new ManagedSet < java.lang.Object > ( ) ; java.util.Set<java.lang.Object> . boolean ( java.lang.Object ) ; AbstractBeanDefinition org.springframework.integration.config.AbstractBeanDefinition = BeanDefinitionBuilder . genericBeanDefinition ( MessageHistoryConfigurer .class ) . addPropertyValue ( STRING , java.util.Set<java.lang.Object> ) . getBeanDefinition ( ) ; org.springframework.integration.config.BeanDefinitionRegistry . registerBeanDefinition ( IntegrationContextUtils . INTEGRATION_MESSAGE_HISTORY_CONFIGURER_BEAN_NAME , org.springframework.integration.config.AbstractBeanDefinition ) ; } else { BeanDefinition org.springframework.integration.config.BeanDefinition = org.springframework.integration.config.BeanDefinitionRegistry . getBeanDefinition ( IntegrationContextUtils . INTEGRATION_MESSAGE_HISTORY_CONFIGURER_BEAN_NAME ) ; PropertyValue org.springframework.integration.config.PropertyValue = org.springframework.integration.config.BeanDefinition . getPropertyValues ( ) . getPropertyValue ( STRING ) ; if ( org.springframework.integration.config.PropertyValue != null ) { @ java.lang.SuppressWarnings ( STRING ) java.util.Set<java.lang.Object> < java.lang.Object > java.util.Set<java.lang.Object> = ( java.util.Set<java.lang.Object> < java.lang.Object > ) org.springframework.integration.config.PropertyValue . getValue ( ) ; java.util.Set<java.lang.Object> . boolean ( java.lang.Object ) ; } else { java.util.Set<java.lang.Object> < java.lang.Object > java.util.Set<java.lang.Object> = new ManagedSet < java.lang.Object > ( ) ; java.util.Set<java.lang.Object> . boolean ( java.lang.Object ) ; org.springframework.integration.config.BeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , java.util.Set<java.lang.Object> ) ; } } }  <METHOD_END>
