<METHOD_START> public void ( ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean = new GatewayProxyFactoryBean ( ) ; this . org.springframework.integration.gateway.GatewayProxyFactoryBean . setServiceInterface ( RequestReplyExchanger .class ) ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.integration.gateway.MessageChannel ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean . setDefaultRequestChannel ( org.springframework.integration.gateway.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean . setDefaultRequestChannelName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.integration.gateway.MessageChannel ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean . setDefaultReplyChannel ( org.springframework.integration.gateway.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean . setDefaultReplyChannelName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.integration.gateway.MessageChannel ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean . setErrorChannel ( org.springframework.integration.gateway.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean . setErrorChannelName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Long java.lang.Long ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean . setDefaultRequestTimeout ( java.lang.Long ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Long java.lang.Long ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean . setDefaultReplyTimeout ( java.lang.Long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.gateway.Message<?> ) { if ( this . org.springframework.integration.gateway.RequestReplyExchanger == null ) { synchronized ( this ) { if ( this . org.springframework.integration.gateway.RequestReplyExchanger == null ) { void ( ) ; } } } return this . org.springframework.integration.gateway.RequestReplyExchanger . exchange ( org.springframework.integration.gateway.Message<> ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { BeanFactory org.springframework.integration.gateway.BeanFactory = getBeanFactory ( ) ; if ( org.springframework.integration.gateway.BeanFactory instanceof ConfigurableListableBeanFactory ) { ( ( ConfigurableListableBeanFactory ) org.springframework.integration.gateway.BeanFactory ) . initializeBean ( this . org.springframework.integration.gateway.GatewayProxyFactoryBean , null ) ; } try { this . org.springframework.integration.gateway.RequestReplyExchanger = ( RequestReplyExchanger ) this . org.springframework.integration.gateway.GatewayProxyFactoryBean . getObject ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new BeanCreationException ( STRING + this , java.lang.Exception ) ; } if ( this . boolean ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean . stop ( ) ; this . org.springframework.integration.gateway.GatewayProxyFactoryBean . start ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean . start ( ) ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.integration.gateway.GatewayProxyFactoryBean . stop ( ) ; this . boolean = false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
