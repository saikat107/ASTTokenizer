<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.aop.framework.autoproxy.BeanFactory ) { super. setBeanFactory ( org.springframework.aop.framework.autoproxy.BeanFactory ) ; if ( ! ( org.springframework.aop.framework.autoproxy.BeanFactory instanceof ConfigurableListableBeanFactory ) ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.aop.framework.autoproxy.BeanFactory ) ; } void ( ( ConfigurableListableBeanFactory ) org.springframework.aop.framework.autoproxy.BeanFactory ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ConfigurableListableBeanFactory org.springframework.aop.framework.autoproxy.ConfigurableListableBeanFactory ) { this . org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper = new org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.BeanFactoryAdvisorRetrievalHelperAdapter ( org.springframework.aop.framework.autoproxy.ConfigurableListableBeanFactory ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object [] java.lang.Object[] ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String , TargetSource org.springframework.aop.framework.autoproxy.TargetSource ) { java.util.List<org.springframework.aop.framework.autoproxy.Advisor> < Advisor > java.util.List<org.springframework.aop.framework.autoproxy.Advisor> = java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ( java.lang.Class<> , java.lang.String ) ; if ( java.util.List<org.springframework.aop.framework.autoproxy.Advisor> . isEmpty ( ) ) { return DO_NOT_PROXY ; } return java.util.List<org.springframework.aop.framework.autoproxy.Advisor> . toArray ( ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.aop.framework.autoproxy.Advisor> < Advisor > java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { java.util.List<org.springframework.aop.framework.autoproxy.Advisor> < Advisor > java.util.List<org.springframework.aop.framework.autoproxy.Advisor> = java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ( ) ; java.util.List<org.springframework.aop.framework.autoproxy.Advisor> < Advisor > java.util.List<org.springframework.aop.framework.autoproxy.Advisor> = java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ( java.util.List<org.springframework.aop.framework.autoproxy.Advisor> , java.lang.Class<> , java.lang.String ) ; void ( java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ) ; if ( ! java.util.List<org.springframework.aop.framework.autoproxy.Advisor> . isEmpty ( ) ) { java.util.List<org.springframework.aop.framework.autoproxy.Advisor> = java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ( java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ) ; } return java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.aop.framework.autoproxy.Advisor> < Advisor > java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ( ) { return this . org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper . findAdvisorBeans ( ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.aop.framework.autoproxy.Advisor> < Advisor > java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ( java.util.List<org.springframework.aop.framework.autoproxy.Advisor> < Advisor > java.util.List<org.springframework.aop.framework.autoproxy.Advisor> , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { ProxyCreationContext . setCurrentProxiedBeanName ( java.lang.String ) ; try { return AopUtils . findAdvisorsThatCanApply ( java.util.List<org.springframework.aop.framework.autoproxy.Advisor> , java.lang.Class<> ) ; } finally { ProxyCreationContext . setCurrentProxiedBeanName ( null ) ; } }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.String java.lang.String ) { return true ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.aop.framework.autoproxy.Advisor> < Advisor > java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ( java.util.List<org.springframework.aop.framework.autoproxy.Advisor> < Advisor > java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ) { AnnotationAwareOrderComparator . sort ( java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ) ; return java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ; }  <METHOD_END>
<METHOD_START> protected void void ( java.util.List<org.springframework.aop.framework.autoproxy.Advisor> < Advisor > java.util.List<org.springframework.aop.framework.autoproxy.Advisor> ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> public void ( ConfigurableListableBeanFactory org.springframework.aop.framework.autoproxy.ConfigurableListableBeanFactory ) { super( org.springframework.aop.framework.autoproxy.ConfigurableListableBeanFactory ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( java.lang.String java.lang.String ) { return org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator .this . boolean ( java.lang.String ) ; }  <METHOD_END>
