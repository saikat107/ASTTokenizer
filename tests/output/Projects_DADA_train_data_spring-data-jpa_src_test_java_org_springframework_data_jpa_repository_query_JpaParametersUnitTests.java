<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.reflect.Method java.lang.reflect.Method = org.springframework.data.jpa.repository.query.JpaParametersUnitTests.SampleRepository .class . java.lang.reflect.Method ( STRING , java.util.Date .class , java.lang.String .class ) ; JpaParameters org.springframework.data.jpa.repository.query.JpaParameters = new JpaParameters ( java.lang.reflect.Method ) ; JpaParameter org.springframework.data.jpa.repository.query.JpaParameter = org.springframework.data.jpa.repository.query.JpaParameters . getBindableParameter ( NUMBER ) ; assertThat ( org.springframework.data.jpa.repository.query.JpaParameter . isSpecialParameter ( ) , is ( false ) ) ; assertThat ( org.springframework.data.jpa.repository.query.JpaParameter . isTemporalParameter ( ) , is ( true ) ) ; assertThat ( org.springframework.data.jpa.repository.query.JpaParameter . getTemporalType ( ) , is ( TemporalType . TIMESTAMP ) ) ; org.springframework.data.jpa.repository.query.JpaParameter = org.springframework.data.jpa.repository.query.JpaParameters . getBindableParameter ( NUMBER ) ; assertThat ( org.springframework.data.jpa.repository.query.JpaParameter . isTemporalParameter ( ) , is ( false ) ) ; }  <METHOD_END>
<METHOD_START> void void ( @ Temporal ( TIMESTAMP ) java.util.Date java.util.Date , java.lang.String java.lang.String );  <METHOD_END>
