<METHOD_START> @ java.lang.Override protected org.springframework.web.jsf.BeanFactory org.springframework.web.jsf.BeanFactory ( FacesContext org.springframework.web.jsf.FacesContext ) { return org.springframework.web.jsf.StaticListableBeanFactory ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestNavigationHandler org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestNavigationHandler = new org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestNavigationHandler ( ) ; org.springframework.web.jsf.StaticListableBeanFactory . addBean ( STRING , org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestNavigationHandler ) ; org.springframework.web.jsf.DelegatingNavigationHandlerProxy . handleNavigation ( org.springframework.web.jsf.MockFacesContext , STRING , STRING ) ; assertEquals ( STRING , org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestNavigationHandler . java.lang.String ) ; assertEquals ( STRING , org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestNavigationHandler . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestDecoratingNavigationHandler org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestDecoratingNavigationHandler = new org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestDecoratingNavigationHandler ( ) ; org.springframework.web.jsf.StaticListableBeanFactory . addBean ( STRING , org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestDecoratingNavigationHandler ) ; org.springframework.web.jsf.DelegatingNavigationHandlerProxy . handleNavigation ( org.springframework.web.jsf.MockFacesContext , STRING , STRING ) ; assertEquals ( STRING , org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestDecoratingNavigationHandler . java.lang.String ) ; assertEquals ( STRING , org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestDecoratingNavigationHandler . java.lang.String ) ; assertEquals ( STRING , org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestNavigationHandler . java.lang.String ) ; assertEquals ( STRING , org.springframework.web.jsf.DelegatingNavigationHandlerTests.TestNavigationHandler . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( FacesContext org.springframework.web.jsf.FacesContext , java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( FacesContext org.springframework.web.jsf.FacesContext , java.lang.String java.lang.String , java.lang.String java.lang.String , NavigationHandler org.springframework.web.jsf.NavigationHandler ) { java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; if ( org.springframework.web.jsf.NavigationHandler != null ) { org.springframework.web.jsf.NavigationHandler . handleNavigation ( org.springframework.web.jsf.FacesContext , java.lang.String , java.lang.String ) ; } }  <METHOD_END>
