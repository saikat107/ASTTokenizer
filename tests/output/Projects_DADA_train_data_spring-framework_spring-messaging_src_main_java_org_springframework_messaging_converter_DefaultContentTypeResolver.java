<METHOD_START> public void void ( MimeType org.springframework.messaging.converter.MimeType ) { this . org.springframework.messaging.converter.MimeType = org.springframework.messaging.converter.MimeType ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.converter.MimeType org.springframework.messaging.converter.MimeType ( ) { return this . org.springframework.messaging.converter.MimeType ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.messaging.converter.MimeType org.springframework.messaging.converter.MimeType ( MessageHeaders org.springframework.messaging.converter.MessageHeaders ) { if ( org.springframework.messaging.converter.MessageHeaders == null || org.springframework.messaging.converter.MessageHeaders . get ( MessageHeaders . CONTENT_TYPE ) == null ) { return this . org.springframework.messaging.converter.MimeType ; } java.lang.Object java.lang.Object = org.springframework.messaging.converter.MessageHeaders . get ( MessageHeaders . CONTENT_TYPE ) ; if ( java.lang.Object instanceof MimeType ) { return ( MimeType ) java.lang.Object ; } else if ( java.lang.Object instanceof java.lang.String ) { return MimeType . valueOf ( ( java.lang.String ) java.lang.Object ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + this . org.springframework.messaging.converter.MimeType + STRING ; }  <METHOD_END>
