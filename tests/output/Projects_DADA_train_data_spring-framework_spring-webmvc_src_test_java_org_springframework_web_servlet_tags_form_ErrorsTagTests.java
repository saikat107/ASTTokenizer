<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected void void ( ) { this . org.springframework.web.servlet.tags.form.ErrorsTag = new ErrorsTag ( ) { @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; } } ; this . org.springframework.web.servlet.tags.form.ErrorsTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . setParent ( getFormTag ( ) ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . setPageContext ( getPageContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TestBean org.springframework.web.servlet.tags.form.TestBean ( ) { return new TestBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.ErrorsTag . setBodyContent ( new MockBodyContent ( java.lang.String , getWriter ( ) ) ) ; TestBean org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( org.springframework.web.servlet.tags.form.TestBean , java.lang.String ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; assertEquals ( java.lang.String , getOutput ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.ErrorsTag . setBodyContent ( new MockBodyContent ( STRING , getWriter ( ) ) ) ; TestBean org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( org.springframework.web.servlet.tags.form.TestBean , java.lang.String ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.ErrorsTag . setBodyContent ( new MockBodyContent ( STRING , getWriter ( ) ) ) ; TestBean org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( org.springframework.web.servlet.tags.form.TestBean , java.lang.String ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { TestBean org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( org.springframework.web.servlet.tags.form.TestBean , java.lang.String ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.ErrorsTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; TestBean org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( org.springframework.web.servlet.tags.form.TestBean , java.lang.String ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , java.lang.String , java.lang.String ) ; assertContainsAttribute ( java.lang.String , java.lang.String , java.lang.String ) ; assertBlockTagContains ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { TestBean org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( org.springframework.web.servlet.tags.form.TestBean , java.lang.String ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.ErrorsTag . setHtmlEscape ( false ) ; TestBean org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( org.springframework.web.servlet.tags.form.TestBean , java.lang.String ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { TestBean org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( org.springframework.web.servlet.tags.form.TestBean , java.lang.String ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . setElement ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( new TestBean ( ) , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; assertEquals ( NUMBER , java.lang.String . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; assertEquals ( NUMBER , java.lang.String . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( new TestBean ( ) , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; assertNotNull ( getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE ) ) ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.ErrorsTag . setBodyContent ( new MockBodyContent ( java.lang.String , getWriter ( ) ) ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doFinally ( ) ; assertEquals ( java.lang.String , getOutput ( ) ) ; assertNull ( getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; getPageContext ( ) . setAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE , java.lang.String ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( new TestBean ( ) , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; assertNotNull ( getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE ) ) ; assertTrue ( getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE ) instanceof java.util.List ) ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.ErrorsTag . setBodyContent ( new MockBodyContent ( java.lang.String , getWriter ( ) ) ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doFinally ( ) ; assertEquals ( java.lang.String , getOutput ( ) ) ; assertEquals ( java.lang.String , getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; getPageContext ( ) . setAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE , java.lang.String , PageContext . APPLICATION_SCOPE ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( new TestBean ( ) , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; assertNotNull ( getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE ) ) ; assertTrue ( getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE ) instanceof java.util.List ) ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.ErrorsTag . setBodyContent ( new MockBodyContent ( java.lang.String , getWriter ( ) ) ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doFinally ( ) ; assertEquals ( java.lang.String , getOutput ( ) ) ; assertEquals ( java.lang.String , getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE , PageContext . APPLICATION_SCOPE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( PageContext . APPLICATION_SCOPE ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( PageContext . SESSION_SCOPE ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( PageContext . PAGE_SCOPE ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( PageContext . REQUEST_SCOPE ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.ErrorsTag . setPath ( null ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( new TestBean ( ) , STRING ) ; org.springframework.web.servlet.tags.form.Errors . reject ( STRING , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertNotNull ( getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE ) ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; java.lang.String java.lang.String = getOutput ( ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertFalse ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.ErrorsTag . setPath ( STRING ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( new TestBean ( ) , STRING ) ; org.springframework.web.servlet.tags.form.Errors . reject ( STRING , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertNotNull ( getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE ) ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; java.lang.String java.lang.String = getOutput ( ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertFalse ( java.lang.String . boolean ( STRING ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.ErrorsTag . setPath ( STRING ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( new TestBean ( ) , STRING ) ; org.springframework.web.servlet.tags.form.Errors . reject ( STRING , STRING ) ; org.springframework.web.servlet.tags.form.Errors . rejectValue ( STRING , STRING , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertNotNull ( getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE ) ) ; this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; java.lang.String java.lang.String = getOutput ( ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Errors org.springframework.web.servlet.tags.form.Errors ) { java.util.Map java.util.Map = new java.util.HashMap ( ) ; java.util.Map . java.lang.Object ( BindingResult . MODEL_KEY_PREFIX + java.lang.String , org.springframework.web.servlet.tags.form.Errors ) ; MockPageContext org.springframework.web.servlet.tags.form.MockPageContext = getPageContext ( ) ; RequestContext org.springframework.web.servlet.tags.form.RequestContext = new RequestContext ( ( HttpServletRequest ) org.springframework.web.servlet.tags.form.MockPageContext . getRequest ( ) , java.util.Map ) ; org.springframework.web.servlet.tags.form.MockPageContext . setAttribute ( RequestContextAwareTag . REQUEST_CONTEXT_PAGE_ATTRIBUTE , org.springframework.web.servlet.tags.form.RequestContext ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { assertTrue ( java.lang.String . boolean ( STRING + this . org.springframework.web.servlet.tags.form.ErrorsTag . getElement ( ) + STRING ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { assertTrue ( java.lang.String . boolean ( STRING + this . org.springframework.web.servlet.tags.form.ErrorsTag . getElement ( ) + STRING ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) throws org.springframework.web.servlet.tags.form.JspException { java.lang.String java.lang.String = STRING ; getPageContext ( ) . setAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE , java.lang.String , int ) ; Errors org.springframework.web.servlet.tags.form.Errors = new BeanPropertyBindingResult ( new TestBean ( ) , STRING ) ; void ( org.springframework.web.servlet.tags.form.Errors ) ; int int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; int = this . org.springframework.web.servlet.tags.form.ErrorsTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; assertEquals ( NUMBER , java.lang.String . int ( ) ) ; assertEquals ( java.lang.String , getPageContext ( ) . getAttribute ( ErrorsTag . MESSAGES_ATTRIBUTE , int ) ) ; }  <METHOD_END>
