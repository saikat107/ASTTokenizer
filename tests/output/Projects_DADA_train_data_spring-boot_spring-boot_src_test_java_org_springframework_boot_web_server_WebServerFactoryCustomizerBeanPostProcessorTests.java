<METHOD_START> @ Before public void void ( ) { MockitoAnnotations . initMocks ( this ) ; this . org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor . setBeanFactory ( this . org.springframework.boot.web.server.ListableBeanFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.web.server.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.web.server.ExpectedException . expectMessage ( STRING + STRING ) ; this . org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor . setBeanFactory ( mock ( BeanFactory .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( ) ) ; java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = this . org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor . postProcessBeforeInitialization ( java.lang.Object , STRING ) ; assertThat ( java.lang.Object ) . isSameAs ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( ) ) ; java.lang.Object java.lang.Object = new java.lang.Object ( ) ; java.lang.Object java.lang.Object = this . org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor . postProcessAfterInitialization ( java.lang.Object , STRING ) ; assertThat ( java.lang.Object ) . isSameAs ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = java.util.Map<java.lang.String,java.lang.Object> ( ) ; void ( java.util.Map<java.lang.String,java.lang.Object> ) ; void ( WebServerFactory .class ) ; assertThat ( boolean ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) ) . isFalse ( ) ; assertThat ( boolean ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) ) . isFalse ( ) ; assertThat ( boolean ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = java.util.Map<java.lang.String,java.lang.Object> ( ) ; void ( java.util.Map<java.lang.String,java.lang.Object> ) ; void ( org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryOne .class ) ; assertThat ( boolean ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) ) . isTrue ( ) ; assertThat ( boolean ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) ) . isFalse ( ) ; assertThat ( boolean ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = java.util.Map<java.lang.String,java.lang.Object> ( ) ; void ( java.util.Map<java.lang.String,java.lang.Object> ) ; void ( org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryTwo .class ) ; assertThat ( boolean ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) ) . isFalse ( ) ; assertThat ( boolean ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) ) . isTrue ( ) ; assertThat ( boolean ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryOneCustomizer org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryOneCustomizer = new org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryOneCustomizer ( ) ; org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryTwoCustomizer org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryTwoCustomizer = new org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryTwoCustomizer ( ) ; org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryAllCustomizer org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryAllCustomizer = new org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryAllCustomizer ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryOneCustomizer ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryTwoCustomizer ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryAllCustomizer ) ; return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; void ( java.util.List<java.lang.String> ) ; void ( WebServerFactory .class ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; void ( java.util.List<java.lang.String> ) ; void ( org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryOne .class ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; void ( java.util.List<java.lang.String> ) ; void ( org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryTwo .class ) ; assertThat ( java.util.List<java.lang.String> ) . containsExactly ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { WebServerFactoryCustomizer < org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryOne > org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryOne> = ( f ) -> called . add ( STRING ) ; WebServerFactoryCustomizer < org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryTwo > org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryTwo> = ( f ) -> called . add ( STRING ) ; WebServerFactoryCustomizer < WebServerFactory > org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.server.WebServerFactory> = ( f ) -> called . add ( STRING ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryOne> ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.WebServerFactoryTwo> ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.server.WebServerFactory> ) ; void ( java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) private void void ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { given ( this . org.springframework.boot.web.server.ListableBeanFactory . getBeansOfType ( WebServerFactoryCustomizer .class , false , false ) ) . willReturn ( ( java.util.Map<java.lang.String,org.springframework.boot.web.server.WebServerFactoryCustomizer> < java.lang.String , WebServerFactoryCustomizer > ) java.util.Map<java.lang.String,> ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor . postProcessBeforeInitialization ( mock ( java.lang.Class<> ) , STRING ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> , java.lang.String java.lang.String ) { return ( ( org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessorTests.MockWebServerFactoryCustomizer<?> < ? > ) java.util.Map<java.lang.String,> . get ( java.lang.String ) ) . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( T T ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
