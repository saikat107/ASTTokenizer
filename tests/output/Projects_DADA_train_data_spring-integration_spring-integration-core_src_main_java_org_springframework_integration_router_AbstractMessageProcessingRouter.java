<METHOD_START> void ( MessageProcessor < ? > org.springframework.integration.router.MessageProcessor<?> ) { Assert . notNull ( org.springframework.integration.router.MessageProcessor<> , STRING ) ; this . org.springframework.integration.router.MessageProcessor<?> = org.springframework.integration.router.MessageProcessor<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( ) java.lang.Exception { super. onInit ( ) ; if ( this . org.springframework.integration.router.MessageProcessor<> instanceof AbstractMessageProcessor ) { ConversionService org.springframework.integration.router.ConversionService = getConversionService ( ) ; if ( org.springframework.integration.router.ConversionService != null ) { ( ( AbstractMessageProcessor < ? > ) this . org.springframework.integration.router.MessageProcessor<> ) . setConversionService ( org.springframework.integration.router.ConversionService ) ; } } if ( this . org.springframework.integration.router.MessageProcessor<> instanceof BeanFactoryAware && this . getBeanFactory ( ) != null ) { ( ( BeanFactoryAware ) this . org.springframework.integration.router.MessageProcessor<> ) . setBeanFactory ( this . getBeanFactory ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.integration.router.MessageProcessor<> instanceof Lifecycle ) { ( ( Lifecycle ) this . org.springframework.integration.router.MessageProcessor<> ) . start ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.integration.router.MessageProcessor<> instanceof Lifecycle ) { ( ( Lifecycle ) this . org.springframework.integration.router.MessageProcessor<> ) . stop ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ! ( this . org.springframework.integration.router.MessageProcessor<> instanceof Lifecycle ) || ( ( Lifecycle ) this . org.springframework.integration.router.MessageProcessor<> ) . isRunning ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( Message < ? > org.springframework.integration.router.Message<?> ) { java.lang.Object java.lang.Object = this . org.springframework.integration.router.MessageProcessor<> . processMessage ( org.springframework.integration.router.Message<> ) ; return java.util.Collections . java.util.List<java.lang.Object> ( java.lang.Object ) ; }  <METHOD_END>
