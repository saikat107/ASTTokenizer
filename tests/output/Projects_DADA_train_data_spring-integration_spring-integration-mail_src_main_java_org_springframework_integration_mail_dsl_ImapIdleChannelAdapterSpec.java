<METHOD_START> void ( ImapMailReceiver org.springframework.integration.mail.dsl.ImapMailReceiver ) { this( org.springframework.integration.mail.dsl.ImapMailReceiver , false ); }  <METHOD_END>
<METHOD_START> void ( ImapMailReceiver org.springframework.integration.mail.dsl.ImapMailReceiver , boolean boolean ) { super( new ImapIdleChannelAdapter ( org.springframework.integration.mail.dsl.ImapMailReceiver ) ); this . target . setAdviceChain ( this . java.util.List<org.springframework.integration.mail.dsl.Advice> ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver = org.springframework.integration.mail.dsl.ImapMailReceiver ; this . java.util.Collection<java.lang.Object> . boolean ( org.springframework.integration.mail.dsl.ImapMailReceiver ) ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( java.lang.String java.lang.String ) { return org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( PARSER . parseExpression ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( Expression org.springframework.integration.mail.dsl.Expression ) { void ( ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver . setSelectorExpression ( org.springframework.integration.mail.dsl.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> private void void ( ) { Assert . state ( ! this . boolean , STRING + this . org.springframework.integration.mail.dsl.ImapMailReceiver + STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( java.util.function.Function<org.springframework.integration.mail.dsl.MimeMessage,java.lang.Boolean> < MimeMessage , java.lang.Boolean > java.util.function.Function<org.springframework.integration.mail.dsl.MimeMessage,java.lang.Boolean> ) { return org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( new FunctionExpression < MimeMessage > ( java.util.function.Function<org.springframework.integration.mail.dsl.MimeMessage,java.lang.Boolean> ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( Session org.springframework.integration.mail.dsl.Session ) { void ( ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver . setSession ( org.springframework.integration.mail.dsl.Session ) ; this . boolean = true ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( java.util.Properties java.util.Properties ) { void ( ) ; void ( ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver . setJavaMailProperties ( java.util.Properties ) ; return this ; }  <METHOD_END>
<METHOD_START> private void void ( ) { Assert . state ( ! this . boolean , STRING + STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( java.util.function.Consumer<org.springframework.integration.mail.dsl.PropertiesBuilder> < PropertiesBuilder > java.util.function.Consumer<org.springframework.integration.mail.dsl.PropertiesBuilder> ) { PropertiesBuilder org.springframework.integration.mail.dsl.PropertiesBuilder = new PropertiesBuilder ( ) ; java.util.function.Consumer<org.springframework.integration.mail.dsl.PropertiesBuilder> . accept ( org.springframework.integration.mail.dsl.PropertiesBuilder ) ; return org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( org.springframework.integration.mail.dsl.PropertiesBuilder . get ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( Authenticator org.springframework.integration.mail.dsl.Authenticator ) { void ( ) ; void ( ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver . setJavaMailAuthenticator ( org.springframework.integration.mail.dsl.Authenticator ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( int int ) { void ( ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver . setMaxFetchSize ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( boolean boolean ) { void ( ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver . setShouldDeleteMessages ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( SearchTermStrategy org.springframework.integration.mail.dsl.SearchTermStrategy ) { void ( ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver . setSearchTermStrategy ( org.springframework.integration.mail.dsl.SearchTermStrategy ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( boolean boolean ) { void ( ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver . setShouldMarkMessagesAsRead ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( java.lang.String java.lang.String ) { void ( ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver . setUserFlag ( java.lang.String ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( HeaderMapper < MimeMessage > org.springframework.integration.mail.dsl.HeaderMapper<org.springframework.integration.mail.dsl.MimeMessage> ) { void ( ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver . setHeaderMapper ( org.springframework.integration.mail.dsl.HeaderMapper<org.springframework.integration.mail.dsl.MimeMessage> ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( boolean boolean ) { void ( ) ; this . org.springframework.integration.mail.dsl.ImapMailReceiver . setEmbeddedPartsAsBytes ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( TransactionSynchronizationFactory org.springframework.integration.mail.dsl.TransactionSynchronizationFactory ) { this . target . setTransactionSynchronizationFactory ( org.springframework.integration.mail.dsl.TransactionSynchronizationFactory ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( Advice ... org.springframework.integration.mail.dsl.Advice[] ) { this . java.util.List<org.springframework.integration.mail.dsl.Advice> . addAll ( java.util.Arrays . java.util.List ( org.springframework.integration.mail.dsl.Advice[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( PlatformTransactionManager org.springframework.integration.mail.dsl.PlatformTransactionManager ) { return org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( new TransactionInterceptorBuilder ( false ) . transactionManager ( org.springframework.integration.mail.dsl.PlatformTransactionManager ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( TransactionInterceptor org.springframework.integration.mail.dsl.TransactionInterceptor ) { return org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( org.springframework.integration.mail.dsl.TransactionInterceptor ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( ) { TransactionInterceptor org.springframework.integration.mail.dsl.TransactionInterceptor = new TransactionInterceptorBuilder ( false ) . build ( ) ; this . java.util.Collection<java.lang.Object> . boolean ( org.springframework.integration.mail.dsl.TransactionInterceptor ) ; return org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( org.springframework.integration.mail.dsl.TransactionInterceptor ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( java.util.concurrent.Executor java.util.concurrent.Executor ) { this . target . setSendingTaskExecutor ( java.util.concurrent.Executor ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec org.springframework.integration.mail.dsl.ImapIdleChannelAdapterSpec ( boolean boolean ) { this . target . setShouldReconnectAutomatically ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { return this . java.util.Collection<java.lang.Object> ; }  <METHOD_END>
