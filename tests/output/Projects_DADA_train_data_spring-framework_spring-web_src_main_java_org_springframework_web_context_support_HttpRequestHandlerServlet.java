<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.web.context.support.ServletException { WebApplicationContext org.springframework.web.context.support.WebApplicationContext = WebApplicationContextUtils . getRequiredWebApplicationContext ( getServletContext ( ) ) ; this . org.springframework.web.context.support.HttpRequestHandler = org.springframework.web.context.support.WebApplicationContext . getBean ( getServletName ( ) , HttpRequestHandler .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( HttpServletRequest org.springframework.web.context.support.HttpServletRequest , HttpServletResponse org.springframework.web.context.support.HttpServletResponse )			throws org.springframework.web.context.support.ServletException , java.io.IOException { LocaleContextHolder . setLocale ( org.springframework.web.context.support.HttpServletRequest . getLocale ( ) ) ; try { this . org.springframework.web.context.support.HttpRequestHandler . handleRequest ( org.springframework.web.context.support.HttpServletRequest , org.springframework.web.context.support.HttpServletResponse ) ; } catch ( HttpRequestMethodNotSupportedException org.springframework.web.context.support.HttpRequestMethodNotSupportedException ) { java.lang.String [] java.lang.String[] = org.springframework.web.context.support.HttpRequestMethodNotSupportedException . getSupportedMethods ( ) ; if ( java.lang.String[] != null ) { org.springframework.web.context.support.HttpServletResponse . setHeader ( STRING , StringUtils . arrayToDelimitedString ( java.lang.String[] , STRING ) ) ; } org.springframework.web.context.support.HttpServletResponse . sendError ( HttpServletResponse . SC_METHOD_NOT_ALLOWED , org.springframework.web.context.support.HttpRequestMethodNotSupportedException . getMessage ( ) ) ; } finally { LocaleContextHolder . resetLocaleContext ( ) ; } }  <METHOD_END>
