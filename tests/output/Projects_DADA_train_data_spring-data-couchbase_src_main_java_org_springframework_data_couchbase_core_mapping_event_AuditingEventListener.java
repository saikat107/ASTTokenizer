<METHOD_START> public void ( ObjectFactory < IsNewAwareAuditingHandler > org.springframework.data.couchbase.core.mapping.event.ObjectFactory<org.springframework.data.couchbase.core.mapping.event.IsNewAwareAuditingHandler> ) { Assert . notNull ( org.springframework.data.couchbase.core.mapping.event.ObjectFactory<org.springframework.data.couchbase.core.mapping.event.IsNewAwareAuditingHandler> , STRING ) ; this . org.springframework.data.couchbase.core.mapping.event.ObjectFactory<org.springframework.data.couchbase.core.mapping.event.IsNewAwareAuditingHandler> = org.springframework.data.couchbase.core.mapping.event.ObjectFactory<org.springframework.data.couchbase.core.mapping.event.IsNewAwareAuditingHandler> ; }  <METHOD_END>
<METHOD_START> public void void ( BeforeConvertEvent < java.lang.Object > org.springframework.data.couchbase.core.mapping.event.BeforeConvertEvent<java.lang.Object> ) { java.util.Optional . java.util.Optional ( org.springframework.data.couchbase.core.mapping.event.BeforeConvertEvent<java.lang.Object> . getSource ( ) ) . ifPresent ( it -> auditingHandlerFactory . getObject ( ) . markAudited ( it ) ) ; }  <METHOD_END>
