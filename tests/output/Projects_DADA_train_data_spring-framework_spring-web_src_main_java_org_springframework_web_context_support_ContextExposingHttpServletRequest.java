<METHOD_START> public void ( HttpServletRequest org.springframework.web.context.support.HttpServletRequest , WebApplicationContext org.springframework.web.context.support.WebApplicationContext ) { this( org.springframework.web.context.support.HttpServletRequest , org.springframework.web.context.support.WebApplicationContext , null ); }  <METHOD_END>
<METHOD_START> public void ( HttpServletRequest org.springframework.web.context.support.HttpServletRequest , WebApplicationContext org.springframework.web.context.support.WebApplicationContext , java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { super( org.springframework.web.context.support.HttpServletRequest ); Assert . notNull ( org.springframework.web.context.support.WebApplicationContext , STRING ) ; this . org.springframework.web.context.support.WebApplicationContext = org.springframework.web.context.support.WebApplicationContext ; this . java.util.Set<java.lang.String> = java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.context.support.WebApplicationContext org.springframework.web.context.support.WebApplicationContext ( ) { return this . org.springframework.web.context.support.WebApplicationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { if ( ( this . java.util.Set<java.lang.String> == null || ! this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ) && ( this . java.util.Set<java.lang.String> == null || this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ) && this . org.springframework.web.context.support.WebApplicationContext . containsBean ( java.lang.String ) ) { return this . org.springframework.web.context.support.WebApplicationContext . getBean ( java.lang.String ) ; } else { return super. getAttribute ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { super. setAttribute ( java.lang.String , java.lang.Object ) ; if ( this . java.util.Set<java.lang.String> == null ) { this . java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( NUMBER ) ; } this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; }  <METHOD_END>
