<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration .class ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; JmsMessagingTemplate org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsMessagingTemplate .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory ) . isEqualTo ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getConnectionFactory ( ) ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate . getJmsTemplate ( ) ) . isEqualTo ( org.springframework.boot.autoconfigure.jms.JmsTemplate ) ; assertThat ( ( ( ActiveMQConnectionFactory ) org.springframework.boot.autoconfigure.jms.JmsTemplate . getConnectionFactory ( ) ) . getBrokerURL ( ) ) . isEqualTo ( java.lang.String ) ; assertThat ( this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . containsBean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration2 .class ) ; assertThat ( this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) . getBrokerURL ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration3 .class ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getPriority ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration5 .class ) ; JmsMessagingTemplate org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsMessagingTemplate .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate . getDefaultDestinationName ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration2 .class , org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration3 .class , org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration5 .class ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getPriority ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) . getBrokerURL ( ) ) . isEqualTo ( STRING ) ; JmsMessagingTemplate org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsMessagingTemplate .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate . getDefaultDestinationName ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate . getJmsTemplate ( ) ) . isEqualTo ( org.springframework.boot.autoconfigure.jms.JmsTemplate ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.EnableJmsConfiguration .class ) ; JmsListenerContainerFactory < ? > org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING , JmsListenerContainerFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> . getClass ( ) ) . isEqualTo ( DefaultJmsListenerContainerFactory .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration6 .class , org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.EnableJmsConfiguration .class ) ; JmsListenerContainerFactory < ? > org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING , JmsListenerContainerFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> . getClass ( ) ) . isEqualTo ( SimpleJmsListenerContainerFactory .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.EnableJmsConfiguration .class , STRING , STRING , STRING , STRING ) ; JmsListenerContainerFactory < ? > org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING , JmsListenerContainerFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> . getClass ( ) ) . isEqualTo ( DefaultJmsListenerContainerFactory .class ) ; DefaultMessageListenerContainer org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer = ( ( DefaultJmsListenerContainerFactory ) org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> ) . createListenerContainer ( mock ( JmsListenerEndpoint .class ) ) ; assertThat ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer . isAutoStartup ( ) ) . isFalse ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer . getSessionAcknowledgeMode ( ) ) . isEqualTo ( Session . CLIENT_ACKNOWLEDGE ) ; assertThat ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer . getConcurrentConsumers ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer . getMaxConcurrentConsumers ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration7 .class , org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.EnableJmsConfiguration .class ) ; JmsListenerContainerFactory < ? > org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING , JmsListenerContainerFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> . getClass ( ) ) . isEqualTo ( DefaultJmsListenerContainerFactory .class ) ; DefaultMessageListenerContainer org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer = ( ( DefaultJmsListenerContainerFactory ) org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> ) . createListenerContainer ( mock ( JmsListenerEndpoint .class ) ) ; assertThat ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer . isSessionTransacted ( ) ) . isFalse ( ) ; assertThat ( new DirectFieldAccessor ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer ) . getPropertyValue ( STRING ) ) . isSameAs ( this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JtaTransactionManager .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration8 .class , org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.EnableJmsConfiguration .class ) ; JmsListenerContainerFactory < ? > org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING , JmsListenerContainerFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> . getClass ( ) ) . isEqualTo ( DefaultJmsListenerContainerFactory .class ) ; DefaultMessageListenerContainer org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer = ( ( DefaultJmsListenerContainerFactory ) org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> ) . createListenerContainer ( mock ( JmsListenerEndpoint .class ) ) ; assertThat ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer . isSessionTransacted ( ) ) . isTrue ( ) ; assertThat ( new DirectFieldAccessor ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer ) . getPropertyValue ( STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.EnableJmsConfiguration .class ) ; JmsListenerContainerFactory < ? > org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING , JmsListenerContainerFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> . getClass ( ) ) . isEqualTo ( DefaultJmsListenerContainerFactory .class ) ; DefaultMessageListenerContainer org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer = ( ( DefaultJmsListenerContainerFactory ) org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> ) . createListenerContainer ( mock ( JmsListenerEndpoint .class ) ) ; assertThat ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer . isSessionTransacted ( ) ) . isTrue ( ) ; assertThat ( new DirectFieldAccessor ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer ) . getPropertyValue ( STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.MessageConvertersConfiguration .class , org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.EnableJmsConfiguration .class ) ; JmsListenerContainerFactory < ? > org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING , JmsListenerContainerFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> . getClass ( ) ) . isEqualTo ( DefaultJmsListenerContainerFactory .class ) ; DefaultMessageListenerContainer org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer = ( ( DefaultJmsListenerContainerFactory ) org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> ) . createListenerContainer ( mock ( JmsListenerEndpoint .class ) ) ; assertThat ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer . getMessageConverter ( ) ) . isSameAs ( this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ( new java.lang.Class<?> < ? > [] { org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration9 .class , org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.EnableJmsConfiguration .class } , STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . containsBean ( STRING ) ) . isTrue ( ) ; JmsListenerContainerFactory < ? > org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING , JmsListenerContainerFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> ) . isInstanceOf ( DefaultJmsListenerContainerFactory .class ) ; DefaultMessageListenerContainer org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer = ( ( DefaultJmsListenerContainerFactory ) org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<> ) . createListenerContainer ( mock ( JmsListenerEndpoint .class ) ) ; assertThat ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer . getCacheLevel ( ) ) . isEqualTo ( DefaultMessageListenerContainer . CACHE_CONSUMER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer . isAutoStartup ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.MessageConvertersConfiguration .class ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getMessageConverter ( ) ) . isSameAs ( this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.DestinationResolversConfiguration .class ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getDestinationResolver ( ) ) . isSameAs ( this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.MessageConvertersConfiguration .class , STRING , STRING , STRING , STRING , STRING , STRING ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getMessageConverter ( ) ) . isSameAs ( this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( STRING ) ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . isPubSubDomain ( ) ) . isFalse ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getDefaultDestinationName ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getDeliveryDelay ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getDeliveryMode ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getPriority ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getTimeToLive ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . isExplicitQosEnabled ( ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getReceiveTimeout ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration .class ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . isPubSubDomain ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration4 .class ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . isPubSubDomain ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration .class , STRING ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; DefaultMessageListenerContainer org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( DefaultJmsListenerContainerFactory .class ) . createListenerContainer ( mock ( JmsListenerEndpoint .class ) ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . isPubSubDomain ( ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.DefaultMessageListenerContainer . isPubSubDomain ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration .class , STRING ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate . isPubSubDomain ( ) ) . isFalse ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory ) . isEqualTo ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getConnectionFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration .class , STRING ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory ) . isEqualTo ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getConnectionFactory ( ) ) ; assertThat ( ( ( ActiveMQConnectionFactory ) org.springframework.boot.autoconfigure.jms.JmsTemplate . getConnectionFactory ( ) ) . getBrokerURL ( ) ) . isEqualTo ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration .class , STRING ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory ) . isEqualTo ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getConnectionFactory ( ) ) ; assertThat ( ( ( ActiveMQConnectionFactory ) org.springframework.boot.autoconfigure.jms.JmsTemplate . getConnectionFactory ( ) ) . getBrokerURL ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration .class , STRING ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; PooledConnectionFactory org.springframework.boot.autoconfigure.jms.PooledConnectionFactory = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( PooledConnectionFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.PooledConnectionFactory ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.PooledConnectionFactory ) . isEqualTo ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getConnectionFactory ( ) ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory = ( ActiveMQConnectionFactory ) org.springframework.boot.autoconfigure.jms.PooledConnectionFactory . getConnectionFactory ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory . getBrokerURL ( ) ) . isEqualTo ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration .class , STRING , STRING ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; PooledConnectionFactory org.springframework.boot.autoconfigure.jms.PooledConnectionFactory = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( PooledConnectionFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.PooledConnectionFactory ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.PooledConnectionFactory ) . isEqualTo ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getConnectionFactory ( ) ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory = ( ActiveMQConnectionFactory ) org.springframework.boot.autoconfigure.jms.PooledConnectionFactory . getConnectionFactory ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory . getBrokerURL ( ) ) . isEqualTo ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.TestConfiguration .class , STRING , STRING ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; PooledConnectionFactory org.springframework.boot.autoconfigure.jms.PooledConnectionFactory = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( PooledConnectionFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.JmsTemplate ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.PooledConnectionFactory ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.PooledConnectionFactory ) . isEqualTo ( org.springframework.boot.autoconfigure.jms.JmsTemplate . getConnectionFactory ( ) ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory = ( ActiveMQConnectionFactory ) org.springframework.boot.autoconfigure.jms.PooledConnectionFactory . getConnectionFactory ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.ActiveMQConnectionFactory . getBrokerURL ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( org.springframework.boot.autoconfigure.jms.JmsAutoConfigurationTests.NoEnableJmsConfiguration .class ) ; AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext = this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ; org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsListenerConfigUtils . JMS_LISTENER_ANNOTATION_PROCESSOR_BEAN_NAME ) ; org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . getBean ( JmsListenerConfigUtils . JMS_LISTENER_ENDPOINT_REGISTRY_BEAN_NAME ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ( java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) { return org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ( java.lang.Class<?>[] ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String ... java.lang.String[] ) { this . org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ( new java.lang.Class<?> < ? > [] { java.lang.Class<> } , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ( java.lang.Class<?> < ? > [] java.lang.Class<?>[] , java.lang.String ... java.lang.String[] ) { AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . register ( java.lang.Class<?>[] ) ; org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . register ( ActiveMQAutoConfiguration .class , JmsAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext , java.lang.String[] ) ; org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext . refresh ( ) ; return org.springframework.boot.autoconfigure.jms.AnnotationConfigApplicationContext ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.boot.autoconfigure.jms.ConnectionFactory org.springframework.boot.autoconfigure.jms.ConnectionFactory ( ) { return new ActiveMQConnectionFactory ( ) { { setBrokerURL ( STRING ) ; } } ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.boot.autoconfigure.jms.JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate ( ConnectionFactory org.springframework.boot.autoconfigure.jms.ConnectionFactory ) { JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = new JmsTemplate ( org.springframework.boot.autoconfigure.jms.ConnectionFactory ) ; org.springframework.boot.autoconfigure.jms.JmsTemplate . setPriority ( NUMBER ) ; return org.springframework.boot.autoconfigure.jms.JmsTemplate ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String )				throws org.springframework.boot.autoconfigure.jms.BeansException { if ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . boolean ( JmsTemplate .class ) ) { JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate = ( JmsTemplate ) java.lang.Object ; org.springframework.boot.autoconfigure.jms.JmsTemplate . setPubSubDomain ( true ) ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String )				throws org.springframework.boot.autoconfigure.jms.BeansException { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate ( JmsTemplate org.springframework.boot.autoconfigure.jms.JmsTemplate ) { JmsMessagingTemplate org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate = new JmsMessagingTemplate ( org.springframework.boot.autoconfigure.jms.JmsTemplate ) ; org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate . setDefaultDestinationName ( STRING ) ; return org.springframework.boot.autoconfigure.jms.JmsMessagingTemplate ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> < ? > org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> ( ConnectionFactory org.springframework.boot.autoconfigure.jms.ConnectionFactory ) { SimpleJmsListenerContainerFactory org.springframework.boot.autoconfigure.jms.SimpleJmsListenerContainerFactory = new SimpleJmsListenerContainerFactory ( ) ; org.springframework.boot.autoconfigure.jms.SimpleJmsListenerContainerFactory . setConnectionFactory ( org.springframework.boot.autoconfigure.jms.ConnectionFactory ) ; return org.springframework.boot.autoconfigure.jms.SimpleJmsListenerContainerFactory ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.boot.autoconfigure.jms.JtaTransactionManager org.springframework.boot.autoconfigure.jms.JtaTransactionManager ( ) { return mock ( JtaTransactionManager .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.boot.autoconfigure.jms.DataSourceTransactionManager org.springframework.boot.autoconfigure.jms.DataSourceTransactionManager ( ) { return mock ( DataSourceTransactionManager .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Primary public org.springframework.boot.autoconfigure.jms.MessageConverter org.springframework.boot.autoconfigure.jms.MessageConverter ( ) { return mock ( MessageConverter .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jms.MessageConverter org.springframework.boot.autoconfigure.jms.MessageConverter ( ) { return mock ( MessageConverter .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Primary public org.springframework.boot.autoconfigure.jms.DestinationResolver org.springframework.boot.autoconfigure.jms.DestinationResolver ( ) { return mock ( DestinationResolver .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jms.DestinationResolver org.springframework.boot.autoconfigure.jms.DestinationResolver ( ) { return mock ( DestinationResolver .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> < ? > org.springframework.boot.autoconfigure.jms.JmsListenerContainerFactory<?> ( DefaultJmsListenerContainerFactoryConfigurer org.springframework.boot.autoconfigure.jms.DefaultJmsListenerContainerFactoryConfigurer , ConnectionFactory org.springframework.boot.autoconfigure.jms.ConnectionFactory ) { DefaultJmsListenerContainerFactory org.springframework.boot.autoconfigure.jms.DefaultJmsListenerContainerFactory = new DefaultJmsListenerContainerFactory ( ) ; org.springframework.boot.autoconfigure.jms.DefaultJmsListenerContainerFactoryConfigurer . configure ( org.springframework.boot.autoconfigure.jms.DefaultJmsListenerContainerFactory , org.springframework.boot.autoconfigure.jms.ConnectionFactory ) ; org.springframework.boot.autoconfigure.jms.DefaultJmsListenerContainerFactory . setCacheLevel ( DefaultMessageListenerContainer . CACHE_CONSUMER ) ; return org.springframework.boot.autoconfigure.jms.DefaultJmsListenerContainerFactory ; }  <METHOD_END>
