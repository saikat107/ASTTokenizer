<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.Collection<org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> < org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?> < ? > > java.util.Collection<org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> , org.springframework.data.rest.webmvc.json.JsonSchema.Definitions org.springframework.data.rest.webmvc.json.JsonSchema.Definitions ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( java.util.Collection<org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> , STRING ) ; Assert . notNull ( org.springframework.data.rest.webmvc.json.JsonSchema.Definitions , STRING ) ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . org.springframework.data.rest.webmvc.json.JsonSchema.PropertiesContainer = new org.springframework.data.rest.webmvc.json.JsonSchema.PropertiesContainer ( java.util.Collection<org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> ) ; this . org.springframework.data.rest.webmvc.json.JsonSchema.Definitions = org.springframework.data.rest.webmvc.json.JsonSchema.Definitions ; }  <METHOD_END>
<METHOD_START> @ JsonProperty ( STRING ) public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ JsonUnwrapped public org.springframework.data.rest.webmvc.json.JsonSchema.PropertiesContainer org.springframework.data.rest.webmvc.json.JsonSchema.PropertiesContainer ( ) { return org.springframework.data.rest.webmvc.json.JsonSchema.PropertiesContainer ; }  <METHOD_END>
<METHOD_START> @ JsonUnwrapped public org.springframework.data.rest.webmvc.json.JsonSchema.Definitions org.springframework.data.rest.webmvc.json.JsonSchema.Definitions ( ) { return org.springframework.data.rest.webmvc.json.JsonSchema.Definitions ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( TypeInformation < ? > org.springframework.data.rest.webmvc.json.TypeInformation<?> ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.data.rest.webmvc.json.TypeInformation<> . getType ( ) ; if ( java.lang.Class<> == null ) { return null ; } else if ( org.springframework.data.rest.webmvc.json.TypeInformation<> . isCollectionLike ( ) ) { return STRING ; } else if ( java.lang.Boolean .class . boolean ( java.lang.Class<> ) || boolean .class . boolean ( java.lang.Class<> ) ) { return STRING ; } else if ( java.lang.String .class . boolean ( java.lang.Class<> ) || boolean ( org.springframework.data.rest.webmvc.json.TypeInformation<> ) || java.lang.Class<> . boolean ( ) ) { return STRING ; } else if ( java.util.List<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ) { return STRING ; } else if ( ClassUtils . isAssignable ( java.lang.Number .class , java.lang.Class<> ) ) { return STRING ; } else { return STRING ; } }  <METHOD_END>
<METHOD_START> private static boolean boolean ( TypeInformation < ? > org.springframework.data.rest.webmvc.json.TypeInformation<?> ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.data.rest.webmvc.json.TypeInformation<> . getType ( ) ; if ( java.util.Date .class . boolean ( java.lang.Class<> ) ) { return true ; } for ( java.lang.String java.lang.String : java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING ) ) { if ( java.lang.Class<> . java.lang.String ( ) . boolean ( java.lang.String ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> public void ( TypeInformation < ? > org.springframework.data.rest.webmvc.json.TypeInformation<?> , java.util.Collection<org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> < org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?> < ? > > java.util.Collection<org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> ) { this . java.lang.String = java.lang.String ( org.springframework.data.rest.webmvc.json.TypeInformation<> . getActualType ( ) ) ; this . org.springframework.data.rest.webmvc.json.JsonSchema.PropertiesContainer = new org.springframework.data.rest.webmvc.json.JsonSchema.PropertiesContainer ( java.util.Collection<org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ JsonUnwrapped public org.springframework.data.rest.webmvc.json.JsonSchema.PropertiesContainer org.springframework.data.rest.webmvc.json.JsonSchema.PropertiesContainer ( ) { return org.springframework.data.rest.webmvc.json.JsonSchema.PropertiesContainer ; }  <METHOD_END>
<METHOD_START> public void ( java.util.Collection<org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> < org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?> < ? > > java.util.Collection<org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> ) { Assert . notNull ( java.util.Collection<org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> , STRING ) ; this . java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> = new java.util.HashMap<java.lang.String,org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> < java.lang.String , org.springframework.data.rest.webmvc.json.JsonSchema . org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?> < ? > > ( ) ; this . java.util.Collection<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; for ( org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?> < ? > org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?> : java.util.Collection<org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> ) { this . java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?>> . org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<?> ( org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<> . java.lang.String ( ) , org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<> ) ; if ( org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<> . boolean ( ) ) { this . java.util.Collection<java.lang.String> . boolean ( org.springframework.data.rest.webmvc.json.JsonSchema.AbstractJsonSchemaProperty<> . java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> public void ( ) { this . java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.JsonSchema.Item> = new java.util.HashMap<java.lang.String,org.springframework.data.rest.webmvc.json.JsonSchema.Item> < java.lang.String , org.springframework.data.rest.webmvc.json.JsonSchema.Item > ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.JsonSchema.Item> < java.lang.String , org.springframework.data.rest.webmvc.json.JsonSchema.Item > java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.JsonSchema.Item> ( ) { return java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.JsonSchema.Item> ; }  <METHOD_END>
<METHOD_START> boolean boolean ( TypeInformation < ? > org.springframework.data.rest.webmvc.json.TypeInformation<?> ) { return this . java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.JsonSchema.Item> . boolean ( java.lang.String ( org.springframework.data.rest.webmvc.json.TypeInformation<> ) ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( TypeInformation < ? > org.springframework.data.rest.webmvc.json.TypeInformation<?> , org.springframework.data.rest.webmvc.json.JsonSchema.Item org.springframework.data.rest.webmvc.json.JsonSchema.Item ) { java.lang.String java.lang.String = java.lang.String ( org.springframework.data.rest.webmvc.json.TypeInformation<> ) ; this . java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.JsonSchema.Item> . org.springframework.data.rest.webmvc.json.JsonSchema.Item ( java.lang.String , org.springframework.data.rest.webmvc.json.JsonSchema.Item ) ; return java.lang.String ; }  <METHOD_END>
<METHOD_START> static java.lang.String java.lang.String ( TypeInformation < ? > org.springframework.data.rest.webmvc.json.TypeInformation<?> ) { return java.lang.String . java.lang.String ( STRING , java.lang.String ( org.springframework.data.rest.webmvc.json.TypeInformation<> ) ) ; }  <METHOD_END>
<METHOD_START> static java.lang.String java.lang.String ( TypeInformation < ? > org.springframework.data.rest.webmvc.json.TypeInformation<?> ) { return StringUtils . uncapitalize ( org.springframework.data.rest.webmvc.json.TypeInformation<> . getActualType ( ) . getType ( ) . getSimpleName ( ) ) ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String , boolean boolean ) { this( java.lang.String , null , boolean ); }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . boolean = boolean ; this . boolean = false ; }  <METHOD_END>
<METHOD_START> @ JsonIgnore public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected T T ( ) { this . boolean = true ; return ( T ) this ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { super( java.lang.String , java.lang.String , boolean ); this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; return org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( ClassTypeInformation . from ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( TypeInformation < ? > org.springframework.data.rest.webmvc.json.TypeInformation<?> ) { Assert . notNull ( org.springframework.data.rest.webmvc.json.TypeInformation<> , STRING ) ; this . java.lang.String = java.lang.String ( org.springframework.data.rest.webmvc.json.TypeInformation<> ) ; if ( boolean ( org.springframework.data.rest.webmvc.json.TypeInformation<> ) ) { return org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( JsonSchemaFormat . DATE_TIME ) ; } if ( org.springframework.data.rest.webmvc.json.TypeInformation<> . isCollectionLike ( ) ) { if ( java.util.Set .class . boolean ( org.springframework.data.rest.webmvc.json.TypeInformation<> . getType ( ) ) ) { this . java.lang.Boolean = true ; } this . java.util.Map<java.lang.String,java.lang.String> = java.util.Collections . java.util.Map ( STRING , java.lang.String ( org.springframework.data.rest.webmvc.json.TypeInformation<> . getActualType ( ) ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( JsonSchemaFormat org.springframework.data.rest.webmvc.json.JsonSchemaFormat ) { Assert . notNull ( org.springframework.data.rest.webmvc.json.JsonSchemaFormat , STRING ) ; this . org.springframework.data.rest.webmvc.json.JsonSchemaFormat = org.springframework.data.rest.webmvc.json.JsonSchemaFormat ; return org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( org.springframework.data.rest.webmvc.json.TypeInformation<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( java.util.regex.Pattern . java.util.regex.Pattern ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( java.util.regex.Pattern java.util.regex.Pattern ) { Assert . notNull ( java.util.regex.Pattern , STRING ) ; this . java.lang.String = java.util.regex.Pattern . java.lang.String ( ) ; return org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( org.springframework.data.rest.webmvc.json.TypeInformation<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( ) { this . java.util.Map<java.lang.String,java.lang.String> = null ; this . java.lang.Boolean = null ; return org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( JsonSchemaFormat . URI ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty org.springframework.data.rest.webmvc.json.JsonSchema.JsonSchemaProperty ( TypeInformation < ? > org.springframework.data.rest.webmvc.json.TypeInformation<?> , java.lang.String java.lang.String ) { if ( org.springframework.data.rest.webmvc.json.TypeInformation<> . isCollectionLike ( ) ) { if ( java.util.Set .class . boolean ( org.springframework.data.rest.webmvc.json.TypeInformation<> . getType ( ) ) ) { this . java.lang.Boolean = true ; } this . java.lang.String = java.lang.String ( org.springframework.data.rest.webmvc.json.TypeInformation<> ) ; this . java.util.Map<java.lang.String,java.lang.String> = java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , java.lang.String ) ; return this ; } else { this . java.lang.String = java.lang.String ; return this ; } }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String , boolean boolean ) { this( java.lang.String , java.lang.String , java.util.List<java.lang.String> ( java.lang.Class<> ) , java.lang.String , boolean ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , java.lang.String java.lang.String , boolean boolean ) { super( java.lang.String , java.lang.String , java.lang.String , boolean ); this . java.util.List<java.lang.String> = java.util.Collections . java.util.List<java.lang.String> ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ JsonProperty ( STRING ) public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.JsonSchema.EnumProperty org.springframework.data.rest.webmvc.json.JsonSchema.EnumProperty ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { Assert . notNull ( java.util.List<java.lang.String> , STRING ) ; this . java.util.List<java.lang.String> = java.util.Collections . java.util.List<java.lang.String> ( java.util.List<java.lang.String> ) ; return this ; }  <METHOD_END>
<METHOD_START> private static java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.Class<?> < ? > java.lang.Class<?> ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; for ( java.lang.Object java.lang.Object : java.lang.Class<> . getEnumConstants ( ) ) { java.util.List<java.lang.String> . boolean ( java.lang.Object . java.lang.String ( ) ) ; } return java.util.List<java.lang.String> ; }  <METHOD_END>
