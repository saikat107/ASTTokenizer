<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.accept.MockHttpServletRequest . addHeader ( STRING , STRING ) ; java.util.List<org.springframework.web.accept.MediaType> < MediaType > java.util.List<org.springframework.web.accept.MediaType> = this . org.springframework.web.accept.HeaderContentNegotiationStrategy . resolveMediaTypes ( this . org.springframework.web.accept.NativeWebRequest ) ; assertEquals ( NUMBER , java.util.List<org.springframework.web.accept.MediaType> . size ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.web.accept.MediaType> . get ( NUMBER ) . toString ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.web.accept.MediaType> . get ( NUMBER ) . toString ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.web.accept.MediaType> . get ( NUMBER ) . toString ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.web.accept.MediaType> . get ( NUMBER ) . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.accept.MockHttpServletRequest . addHeader ( STRING , STRING ) ; this . org.springframework.web.accept.MockHttpServletRequest . addHeader ( STRING , STRING ) ; java.util.List<org.springframework.web.accept.MediaType> < MediaType > java.util.List<org.springframework.web.accept.MediaType> = this . org.springframework.web.accept.HeaderContentNegotiationStrategy . resolveMediaTypes ( this . org.springframework.web.accept.NativeWebRequest ) ; assertEquals ( NUMBER , java.util.List<org.springframework.web.accept.MediaType> . size ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.web.accept.MediaType> . get ( NUMBER ) . toString ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.web.accept.MediaType> . get ( NUMBER ) . toString ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.web.accept.MediaType> . get ( NUMBER ) . toString ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.web.accept.MediaType> . get ( NUMBER ) . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = HttpMediaTypeNotAcceptableException .class ) public void void ( ) java.lang.Exception { this . org.springframework.web.accept.MockHttpServletRequest . addHeader ( STRING , STRING ) ; this . org.springframework.web.accept.HeaderContentNegotiationStrategy . resolveMediaTypes ( this . org.springframework.web.accept.NativeWebRequest ) ; }  <METHOD_END>
