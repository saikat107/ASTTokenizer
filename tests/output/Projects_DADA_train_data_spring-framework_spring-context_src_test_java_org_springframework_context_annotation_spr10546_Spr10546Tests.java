<METHOD_START> @ After public void void ( ) { if ( org.springframework.context.annotation.spr10546.ConfigurableApplicationContext != null ) { org.springframework.context.annotation.spr10546.ConfigurableApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( AEnclosingConfig .class , AEnclosingConfig . AEnclosingConfig .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.spr10546.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.spr10546.ConfigurableApplicationContext = org.springframework.context.annotation.spr10546.AnnotationConfigApplicationContext ; org.springframework.context.annotation.spr10546.AnnotationConfigApplicationContext . scan ( AEnclosingConfig .class . java.lang.Package ( ) . java.lang.String ( ) ) ; org.springframework.context.annotation.spr10546.AnnotationConfigApplicationContext . refresh ( ) ; assertThat ( org.springframework.context.annotation.spr10546.ConfigurableApplicationContext . getBean ( STRING , java.lang.String .class ) , equalTo ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithImportResourceConfig .class , org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithImportResourceConfig . org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithImportResourceConfig.ChildConfig .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithComponentScanConfig .class , org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithComponentScanConfig . org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithComponentScanConfig.ChildConfig .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithGrandparentConfig .class , org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithGrandparentConfig . org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithGrandparentConfig.ChildConfig .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.context.annotation.spr10546.Spr10546Tests.ImportChildConfig .class , org.springframework.context.annotation.spr10546.Spr10546Tests.ChildConfig .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithImportConfig .class , org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithImportConfig . org.springframework.context.annotation.spr10546.Spr10546Tests.AEnclosingWithImportConfig.ChildConfig .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( AEnclosingConfig . AEnclosingConfig .class , AEnclosingConfig .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( AEnclosingConfig .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( AEnclosingConfig . AEnclosingConfig .class ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) { org.springframework.context.annotation.spr10546.ConfigurableApplicationContext = new AnnotationConfigApplicationContext ( java.lang.Class<?>[] ) ; assertThat ( org.springframework.context.annotation.spr10546.ConfigurableApplicationContext . getBean ( STRING , java.lang.String .class ) , equalTo ( STRING ) ) ; }  <METHOD_END>
