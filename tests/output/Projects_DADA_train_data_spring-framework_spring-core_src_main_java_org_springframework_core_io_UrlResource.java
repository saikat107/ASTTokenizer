<METHOD_START> public void ( java.net.URI java.net.URI ) throws java.net.MalformedURLException { Assert . notNull ( java.net.URI , STRING ) ; this . java.net.URI = java.net.URI ; this . java.net.URL = java.net.URI . java.net.URL ( ) ; this . java.net.URL = java.net.URL ( this . java.net.URL , java.net.URI . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.net.URL java.net.URL ) { Assert . notNull ( java.net.URL , STRING ) ; this . java.net.URL = java.net.URL ; this . java.net.URL = java.net.URL ( this . java.net.URL , java.net.URL . java.lang.String ( ) ) ; this . java.net.URI = null ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) throws java.net.MalformedURLException { Assert . notNull ( java.lang.String , STRING ) ; this . java.net.URI = null ; this . java.net.URL = new java.net.URL ( java.lang.String ) ; this . java.net.URL = java.net.URL ( this . java.net.URL , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.net.MalformedURLException { this( java.lang.String , java.lang.String , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.net.MalformedURLException { try { this . java.net.URI = new java.net.URI ( java.lang.String , java.lang.String , java.lang.String ) ; this . java.net.URL = this . java.net.URI . java.net.URL ( ) ; this . java.net.URL = java.net.URL ( this . java.net.URL , this . java.net.URI . java.lang.String ( ) ) ; } catch ( java.net.URISyntaxException java.net.URISyntaxException ) { java.net.MalformedURLException java.net.MalformedURLException = new java.net.MalformedURLException ( java.net.URISyntaxException . java.lang.String ( ) ) ; java.net.MalformedURLException . java.lang.Throwable ( java.net.URISyntaxException ) ; throw java.net.MalformedURLException ; } }  <METHOD_END>
<METHOD_START> private java.net.URL java.net.URL ( java.net.URL java.net.URL , java.lang.String java.lang.String ) { try { return new java.net.URL ( StringUtils . cleanPath ( java.lang.String ) ) ; } catch ( java.net.MalformedURLException java.net.MalformedURLException ) { return java.net.URL ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.InputStream java.io.InputStream ( ) java.io.IOException { java.net.URLConnection java.net.URLConnection = this . java.net.URL . java.net.URLConnection ( ) ; ResourceUtils . useCachesIfNecessary ( java.net.URLConnection ) ; try { return java.net.URLConnection . java.io.InputStream ( ) ; } catch ( java.io.IOException java.io.IOException ) { if ( java.net.URLConnection instanceof java.net.HttpURLConnection ) { ( ( java.net.HttpURLConnection ) java.net.URLConnection ) . void ( ) ; } throw java.io.IOException ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URL java.net.URL ( ) java.io.IOException { return this . java.net.URL ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URI java.net.URI ( ) java.io.IOException { if ( this . java.net.URI != null ) { return this . java.net.URI ; } else { return super. getURI ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { if ( this . java.net.URI != null ) { return super. isFile ( this . java.net.URI ) ; } else { return super. isFile ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.File java.io.File ( ) java.io.IOException { if ( this . java.net.URI != null ) { return super. getFile ( this . java.net.URI ) ; } else { return super. getFile ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.core.io.Resource org.springframework.core.io.Resource ( java.lang.String java.lang.String ) throws java.net.MalformedURLException { if ( java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER ) ; } return new org.springframework.core.io.UrlResource ( new java.net.URL ( this . java.net.URL , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return StringUtils . getFilename ( this . java.net.URL . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.net.URL + STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( java.lang.Object == this || ( java.lang.Object instanceof org.springframework.core.io.UrlResource && this . java.net.URL . boolean ( ( ( org.springframework.core.io.UrlResource ) java.lang.Object ) . java.net.URL ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.net.URL . int ( ) ; }  <METHOD_END>
