<METHOD_START> java.util.Collection<org.springframework.data.neo4j.examples.movies.repo.User> < User > java.util.Collection<org.springframework.data.neo4j.examples.movies.repo.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.neo4j.examples.movies.repo.User> < User > java.util.List<org.springframework.data.neo4j.examples.movies.repo.User> ( int int );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.neo4j.examples.movies.repo.User> < User > java.util.List<org.springframework.data.neo4j.examples.movies.repo.User> ( int int , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) int int ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.lang.Iterable<java.util.Map<java.lang.String,java.lang.Object>> < java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.lang.Iterable<java.util.Map<java.lang.String,java.lang.Object>> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.Collection<org.springframework.data.neo4j.examples.movies.repo.User> < User > java.util.Collection<org.springframework.data.neo4j.examples.movies.repo.User> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<java.util.Map<java.lang.String,java.lang.Object>> < java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.User org.springframework.data.neo4j.examples.movies.repo.User ( @ Param ( STRING ) java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.User org.springframework.data.neo4j.examples.movies.repo.User ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.lang.Iterable<org.springframework.data.neo4j.examples.movies.repo.UserQueryResult> < UserQueryResult > java.lang.Iterable<org.springframework.data.neo4j.examples.movies.repo.UserQueryResult> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.UnmanagedUserPojo org.springframework.data.neo4j.examples.movies.repo.UnmanagedUserPojo ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.UserQueryResultObject org.springframework.data.neo4j.examples.movies.repo.UserQueryResultObject ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.UserQueryResultObject org.springframework.data.neo4j.examples.movies.repo.UserQueryResultObject ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.lang.Iterable<org.springframework.data.neo4j.examples.movies.repo.RichUserQueryResult> < RichUserQueryResult > java.lang.Iterable<org.springframework.data.neo4j.examples.movies.repo.RichUserQueryResult> ( Gender org.springframework.data.neo4j.examples.movies.repo.Gender );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult> < EntityWrappingQueryResult > java.util.List<org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.User org.springframework.data.neo4j.examples.movies.repo.User ( User org.springframework.data.neo4j.examples.movies.repo.User );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.User org.springframework.data.neo4j.examples.movies.repo.User ( @ Param ( STRING ) User org.springframework.data.neo4j.examples.movies.repo.User );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.lang.Iterable<org.springframework.data.neo4j.examples.movies.repo.User> < User > java.lang.Iterable<org.springframework.data.neo4j.examples.movies.repo.User> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) void void ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.neo4j.examples.movies.repo.User> < User > java.util.List<org.springframework.data.neo4j.examples.movies.repo.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Depth ( value = NUMBER ) org.springframework.data.neo4j.examples.movies.repo.User org.springframework.data.neo4j.examples.movies.repo.User ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult> < EntityWrappingQueryResult > java.util.List<org.springframework.data.neo4j.examples.movies.repo.EntityWrappingQueryResult> ( )  <METHOD_END>
<METHOD_START> org.springframework.data.neo4j.examples.movies.repo.Page<org.springframework.data.neo4j.examples.movies.repo.User> < User > org.springframework.data.neo4j.examples.movies.repo.Page<org.springframework.data.neo4j.examples.movies.repo.User> ( java.lang.String java.lang.String , java.lang.String java.lang.String , Pageable org.springframework.data.neo4j.examples.movies.repo.Pageable );  <METHOD_END>
<METHOD_START> org.springframework.data.neo4j.examples.movies.repo.Slice<org.springframework.data.neo4j.examples.movies.repo.User> < User > org.springframework.data.neo4j.examples.movies.repo.Slice<org.springframework.data.neo4j.examples.movies.repo.User> ( java.lang.String java.lang.String , int int , Pageable org.springframework.data.neo4j.examples.movies.repo.Pageable );  <METHOD_END>
