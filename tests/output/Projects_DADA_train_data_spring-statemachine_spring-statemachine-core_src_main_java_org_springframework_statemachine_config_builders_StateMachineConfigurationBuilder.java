<METHOD_START> public void ( ) { super(); }  <METHOD_END>
<METHOD_START> public void ( ObjectPostProcessor < java.lang.Object > org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> , boolean boolean ) { super( org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> , boolean ); }  <METHOD_END>
<METHOD_START> public void ( ObjectPostProcessor < java.lang.Object > org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> ) { super( org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.ConfigurationConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.ConfigurationConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultConfigurationConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.DistributedStateMachineConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.DistributedStateMachineConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultDistributedStateMachineConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.SecurityConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.SecurityConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultSecurityConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.VerifierConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.VerifierConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultVerifierConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.MonitoringConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.MonitoringConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultMonitoringConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.config.builders.ConfigurationData<S,E> < S , E > org.springframework.statemachine.config.builders.ConfigurationData<S,E> ( ) java.lang.Exception { return new ConfigurationData < S , E > ( org.springframework.statemachine.config.builders.BeanFactory , org.springframework.statemachine.config.builders.TaskExecutor , org.springframework.statemachine.config.builders.TaskScheduler , boolean , org.springframework.statemachine.config.builders.StateMachineEnsemble<S,E> , java.util.List<org.springframework.statemachine.config.builders.StateMachineListener<S,E>> , boolean , org.springframework.statemachine.config.builders.AccessDecisionManager , org.springframework.statemachine.config.builders.AccessDecisionManager , org.springframework.statemachine.config.builders.SecurityRule , org.springframework.statemachine.config.builders.SecurityRule , boolean , org.springframework.statemachine.config.builders.StateMachineModelVerifier<S,E> , java.lang.String , org.springframework.statemachine.config.builders.StateMachineMonitor<S,E> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( BeanFactory org.springframework.statemachine.config.builders.BeanFactory ) { this . org.springframework.statemachine.config.builders.BeanFactory = org.springframework.statemachine.config.builders.BeanFactory ; }  <METHOD_END>
<METHOD_START> public void void ( TaskExecutor org.springframework.statemachine.config.builders.TaskExecutor ) { this . org.springframework.statemachine.config.builders.TaskExecutor = org.springframework.statemachine.config.builders.TaskExecutor ; }  <METHOD_END>
<METHOD_START> public void void ( TaskScheduler org.springframework.statemachine.config.builders.TaskScheduler ) { this . org.springframework.statemachine.config.builders.TaskScheduler = org.springframework.statemachine.config.builders.TaskScheduler ; }  <METHOD_END>
<METHOD_START> public void void ( StateMachineEnsemble < S , E > org.springframework.statemachine.config.builders.StateMachineEnsemble<S,E> ) { this . org.springframework.statemachine.config.builders.StateMachineEnsemble<S,E> = org.springframework.statemachine.config.builders.StateMachineEnsemble<S,E> ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.statemachine.config.builders.StateMachineListener<S,E>> < StateMachineListener < S , E > > java.util.List<org.springframework.statemachine.config.builders.StateMachineListener<S,E>> ) { this . java.util.List<org.springframework.statemachine.config.builders.StateMachineListener<S,E>> . clear ( ) ; this . java.util.List<org.springframework.statemachine.config.builders.StateMachineListener<S,E>> . addAll ( java.util.List<org.springframework.statemachine.config.builders.StateMachineListener<S,E>> ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( StateMachineMonitor < S , E > org.springframework.statemachine.config.builders.StateMachineMonitor<S,E> ) { this . org.springframework.statemachine.config.builders.StateMachineMonitor<S,E> = org.springframework.statemachine.config.builders.StateMachineMonitor<S,E> ; }  <METHOD_END>
<METHOD_START> public void void ( AccessDecisionManager org.springframework.statemachine.config.builders.AccessDecisionManager ) { this . org.springframework.statemachine.config.builders.AccessDecisionManager = org.springframework.statemachine.config.builders.AccessDecisionManager ; }  <METHOD_END>
<METHOD_START> public void void ( AccessDecisionManager org.springframework.statemachine.config.builders.AccessDecisionManager ) { this . org.springframework.statemachine.config.builders.AccessDecisionManager = org.springframework.statemachine.config.builders.AccessDecisionManager ; }  <METHOD_END>
<METHOD_START> public void void ( SecurityRule org.springframework.statemachine.config.builders.SecurityRule ) { this . org.springframework.statemachine.config.builders.SecurityRule = org.springframework.statemachine.config.builders.SecurityRule ; }  <METHOD_END>
<METHOD_START> public void void ( SecurityRule org.springframework.statemachine.config.builders.SecurityRule ) { this . org.springframework.statemachine.config.builders.SecurityRule = org.springframework.statemachine.config.builders.SecurityRule ; }  <METHOD_END>
<METHOD_START> public void void ( StateMachineModelVerifier < S , E > org.springframework.statemachine.config.builders.StateMachineModelVerifier<S,E> ) { this . org.springframework.statemachine.config.builders.StateMachineModelVerifier<S,E> = org.springframework.statemachine.config.builders.StateMachineModelVerifier<S,E> ; }  <METHOD_END>
