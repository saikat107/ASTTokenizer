<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.ComparisonOperatorFactory org.springframework.data.mongodb.core.aggregation.ComparisonOperators.ComparisonOperatorFactory ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.ComparisonOperatorFactory ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.ComparisonOperatorFactory org.springframework.data.mongodb.core.aggregation.ComparisonOperators.ComparisonOperatorFactory ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.ComparisonOperatorFactory ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = null ; }  <METHOD_END>
<METHOD_START> public void ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; this . java.lang.String = null ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( ) . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne . org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return java.lang.String != null ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Cmp ( append ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Eq ( append ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gt ( append ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lt ( append ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Gte ( append ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Lte ( append ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ComparisonOperators.Ne ( append ( java.lang.Object ) ) ; }  <METHOD_END>
