<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.reflect.Method java.lang.reflect.Method = org.springframework.data.jpa.repository.query.JpaCountQueryCreatorIntegrationTests.SomeRepository .class . java.lang.reflect.Method ( STRING , java.util.List .class ) ; PersistenceProvider org.springframework.data.jpa.repository.query.PersistenceProvider = PersistenceProvider . fromEntityManager ( org.springframework.data.jpa.repository.query.EntityManager ) ; JpaQueryMethod org.springframework.data.jpa.repository.query.JpaQueryMethod = new JpaQueryMethod ( java.lang.reflect.Method , AbstractRepositoryMetadata . getMetadata ( org.springframework.data.jpa.repository.query.JpaCountQueryCreatorIntegrationTests.SomeRepository .class ) , new SpelAwareProxyProjectionFactory ( ) , org.springframework.data.jpa.repository.query.PersistenceProvider ) ; PartTree org.springframework.data.jpa.repository.query.PartTree = new PartTree ( STRING , User .class ) ; ParameterMetadataProvider org.springframework.data.jpa.repository.query.ParameterMetadataProvider = new ParameterMetadataProvider ( org.springframework.data.jpa.repository.query.EntityManager . getCriteriaBuilder ( ) , org.springframework.data.jpa.repository.query.JpaQueryMethod . getParameters ( ) , org.springframework.data.jpa.repository.query.PersistenceProvider ) ; JpaCountQueryCreator org.springframework.data.jpa.repository.query.JpaCountQueryCreator = new JpaCountQueryCreator ( org.springframework.data.jpa.repository.query.PartTree , org.springframework.data.jpa.repository.query.JpaQueryMethod . getResultProcessor ( ) . getReturnedType ( ) , org.springframework.data.jpa.repository.query.EntityManager . getCriteriaBuilder ( ) , org.springframework.data.jpa.repository.query.ParameterMetadataProvider ) ; TypedQuery < ? extends java.lang.Object > org.springframework.data.jpa.repository.query.TypedQuery<? extends java.lang.Object> = org.springframework.data.jpa.repository.query.EntityManager . createQuery ( org.springframework.data.jpa.repository.query.JpaCountQueryCreator . createQuery ( ) ) ; assertThat ( HibernateUtils . getHibernateQuery ( org.springframework.data.jpa.repository.query.TypedQuery<> ) , startsWith ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> void void ( java.util.List<org.springframework.data.jpa.repository.query.Role> < Role > java.util.List<org.springframework.data.jpa.repository.query.Role> );  <METHOD_END>
