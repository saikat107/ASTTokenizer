<METHOD_START> public void ( ) { super( STRING , STRING , new org.springframework.boot.cli.command.install.InstallCommand.InstallOptionHandler ( ) ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected org.springframework.boot.cli.command.install.ExitStatus org.springframework.boot.cli.command.install.ExitStatus ( OptionSet org.springframework.boot.cli.command.install.OptionSet ) throws java.lang.Exception { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ( java.util.List<java.lang.String> < java.lang.String > ) org.springframework.boot.cli.command.install.OptionSet . nonOptionArguments ( ) ; Assert . notEmpty ( java.util.List<java.lang.String> , STRING + STRING ) ; try { new Installer ( org.springframework.boot.cli.command.install.OptionSet , this ) . install ( java.util.List<java.lang.String> ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.String java.lang.String = java.lang.Exception . java.lang.String ( ) ; Log . error ( java.lang.String != null ? java.lang.String : java.lang.Exception . java.lang.Class<? extends java.lang.Exception> ( ) . java.lang.String ( ) ) ; } return ExitStatus . OK ; }  <METHOD_END>
