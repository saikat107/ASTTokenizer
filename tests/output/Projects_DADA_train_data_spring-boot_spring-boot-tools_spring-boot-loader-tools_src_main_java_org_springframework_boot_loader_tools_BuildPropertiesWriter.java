<METHOD_START> public void ( java.io.File java.io.File ) { this . java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.boot.loader.tools.BuildPropertiesWriter.ProjectDetails org.springframework.boot.loader.tools.BuildPropertiesWriter.ProjectDetails ) throws java.io.IOException { java.util.Properties java.util.Properties = java.util.Properties ( org.springframework.boot.loader.tools.BuildPropertiesWriter.ProjectDetails ) ; void ( this . java.io.File ) ; java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream ( this . java.io.File ) ; try { java.util.Properties . void ( java.io.FileOutputStream , STRING ) ; } finally { try { java.io.FileOutputStream . void ( ) ; } catch ( java.io.IOException java.io.IOException ) { } } }  <METHOD_END>
<METHOD_START> private void void ( java.io.File java.io.File ) throws java.io.IOException { if ( java.io.File . boolean ( ) ) { return; } java.io.File java.io.File = java.io.File . java.io.File ( ) ; if ( ! java.io.File . boolean ( ) && ! java.io.File . boolean ( ) ) { throw new java.lang.IllegalStateException ( STRING + this . java.io.File . java.lang.String ( ) + STRING ) ; } if ( ! java.io.File . boolean ( ) ) { throw new java.lang.IllegalStateException ( STRING + this . java.io.File . java.lang.String ( ) + STRING ) ; } }  <METHOD_END>
<METHOD_START> protected java.util.Properties java.util.Properties ( org.springframework.boot.loader.tools.BuildPropertiesWriter.ProjectDetails org.springframework.boot.loader.tools.BuildPropertiesWriter.ProjectDetails ) { java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , org.springframework.boot.loader.tools.BuildPropertiesWriter.ProjectDetails . java.lang.String ( ) ) ; java.util.Properties . java.lang.Object ( STRING , org.springframework.boot.loader.tools.BuildPropertiesWriter.ProjectDetails . java.lang.String ( ) ) ; java.util.Properties . java.lang.Object ( STRING , org.springframework.boot.loader.tools.BuildPropertiesWriter.ProjectDetails . java.lang.String ( ) ) ; java.util.Properties . java.lang.Object ( STRING , org.springframework.boot.loader.tools.BuildPropertiesWriter.ProjectDetails . java.lang.String ( ) ) ; java.util.Properties . java.lang.Object ( STRING , java.lang.String ( new java.util.Date ( ) ) ) ; if ( org.springframework.boot.loader.tools.BuildPropertiesWriter.ProjectDetails . java.util.Map<java.lang.String,java.lang.String> ( ) != null ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : org.springframework.boot.loader.tools.BuildPropertiesWriter.ProjectDetails . java.util.Map<java.lang.String,java.lang.String> ( ) . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { java.util.Properties . java.lang.Object ( STRING + java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } } return java.util.Properties ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.util.Date java.util.Date ) { java.text.SimpleDateFormat java.text.SimpleDateFormat = new java.text.SimpleDateFormat ( STRING ) ; return java.text.SimpleDateFormat . java.lang.String ( java.util.Date ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; void ( java.util.Map<java.lang.String,java.lang.String> ) ; this . java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> private static void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { if ( java.util.Map<java.lang.String,java.lang.String> != null ) { for ( java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { if ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) == null ) { throw new org.springframework.boot.loader.tools.BuildPropertiesWriter.NullAdditionalPropertyValueException ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } } } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( ) { return this . java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( STRING + java.lang.String + STRING ); }  <METHOD_END>
