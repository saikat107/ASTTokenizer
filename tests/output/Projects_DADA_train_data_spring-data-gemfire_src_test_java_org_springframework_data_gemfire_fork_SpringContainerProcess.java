<METHOD_START> public static void void ( java.lang.String [] java.lang.String[] ) { ConfigurableApplicationContext org.springframework.data.gemfire.fork.ConfigurableApplicationContext = null ; try { org.springframework.data.gemfire.fork.ConfigurableApplicationContext = org.springframework.data.gemfire.fork.ConfigurableApplicationContext ( java.lang.String[] ) ; void ( org.springframework.data.gemfire.fork.ConfigurableApplicationContext ) ; } catch ( java.lang.Exception java.lang.Exception ) { org.springframework.data.gemfire.fork.Logger . debug ( STRING , java.lang.Exception ) ; java.lang.System . void ( NUMBER ) ; } finally { void ( org.springframework.data.gemfire.fork.ConfigurableApplicationContext ) ; } }  <METHOD_END>
<METHOD_START> private static org.springframework.data.gemfire.fork.ConfigurableApplicationContext org.springframework.data.gemfire.fork.ConfigurableApplicationContext ( java.lang.String [] java.lang.String[] ) { ConfigurableApplicationContext org.springframework.data.gemfire.fork.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( java.lang.String[] ) ; org.springframework.data.gemfire.fork.ConfigurableApplicationContext . registerShutdownHook ( ) ; return org.springframework.data.gemfire.fork.ConfigurableApplicationContext ; }  <METHOD_END>
<METHOD_START> private static void void ( ConfigurableApplicationContext org.springframework.data.gemfire.fork.ConfigurableApplicationContext ) { if ( org.springframework.data.gemfire.fork.ConfigurableApplicationContext != null ) { org.springframework.data.gemfire.fork.ConfigurableApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) private static void void ( ConfigurableApplicationContext org.springframework.data.gemfire.fork.ConfigurableApplicationContext ) throws java.io.IOException { ForkUtil . createControlFile ( org.springframework.data.gemfire.fork.SpringContainerProcess .class . java.lang.String ( ) ) ; java.util.Scanner java.util.Scanner = new java.util.Scanner ( java.lang.System . java.io.InputStream ) ; java.util.Scanner . java.lang.String ( ) ; }  <METHOD_END>
