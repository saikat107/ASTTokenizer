<METHOD_START> @ java.lang.Override public boolean boolean ( MetadataReader org.springframework.boot.test.context.filter.MetadataReader , MetadataReaderFactory org.springframework.boot.test.context.filter.MetadataReaderFactory ) throws java.io.IOException { if ( boolean ( org.springframework.boot.test.context.filter.MetadataReader ) ) { return true ; } if ( boolean ( org.springframework.boot.test.context.filter.MetadataReader ) ) { return true ; } java.lang.String java.lang.String = org.springframework.boot.test.context.filter.MetadataReader . getClassMetadata ( ) . getEnclosingClassName ( ) ; if ( java.lang.String != null ) { try { if ( boolean ( org.springframework.boot.test.context.filter.MetadataReaderFactory . getMetadataReader ( java.lang.String ) , org.springframework.boot.test.context.filter.MetadataReaderFactory ) ) { return true ; } } catch ( java.lang.Exception java.lang.Exception ) { } } return false ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( MetadataReader org.springframework.boot.test.context.filter.MetadataReader ) { return ( org.springframework.boot.test.context.filter.MetadataReader . getAnnotationMetadata ( ) . isAnnotated ( TestComponent .class . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( MetadataReader org.springframework.boot.test.context.filter.MetadataReader ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( org.springframework.boot.test.context.filter.MetadataReader . getAnnotationMetadata ( ) . hasAnnotation ( java.lang.String ) ) { return true ; } } for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( org.springframework.boot.test.context.filter.MetadataReader . getAnnotationMetadata ( ) . hasAnnotatedMethods ( java.lang.String ) ) { return true ; } } return false ; }  <METHOD_END>
