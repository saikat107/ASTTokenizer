<METHOD_START> public void void ( ResourceAdapter org.springframework.jca.endpoint.ResourceAdapter ) { this . org.springframework.jca.endpoint.ResourceAdapter = org.springframework.jca.endpoint.ResourceAdapter ; }  <METHOD_END>
<METHOD_START> public org.springframework.jca.endpoint.ResourceAdapter org.springframework.jca.endpoint.ResourceAdapter ( ) { return this . org.springframework.jca.endpoint.ResourceAdapter ; }  <METHOD_END>
<METHOD_START> public void void ( MessageEndpointFactory org.springframework.jca.endpoint.MessageEndpointFactory ) { this . org.springframework.jca.endpoint.MessageEndpointFactory = org.springframework.jca.endpoint.MessageEndpointFactory ; }  <METHOD_END>
<METHOD_START> public org.springframework.jca.endpoint.MessageEndpointFactory org.springframework.jca.endpoint.MessageEndpointFactory ( ) { return this . org.springframework.jca.endpoint.MessageEndpointFactory ; }  <METHOD_END>
<METHOD_START> public void void ( ActivationSpec org.springframework.jca.endpoint.ActivationSpec ) { this . org.springframework.jca.endpoint.ActivationSpec = org.springframework.jca.endpoint.ActivationSpec ; }  <METHOD_END>
<METHOD_START> public org.springframework.jca.endpoint.ActivationSpec org.springframework.jca.endpoint.ActivationSpec ( ) { return this . org.springframework.jca.endpoint.ActivationSpec ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.jca.endpoint.ResourceException { if ( org.springframework.jca.endpoint.ResourceAdapter ( ) == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( org.springframework.jca.endpoint.MessageEndpointFactory ( ) == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } ActivationSpec org.springframework.jca.endpoint.ActivationSpec = org.springframework.jca.endpoint.ActivationSpec ( ) ; if ( org.springframework.jca.endpoint.ActivationSpec == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( org.springframework.jca.endpoint.ActivationSpec . getResourceAdapter ( ) == null ) { org.springframework.jca.endpoint.ActivationSpec . setResourceAdapter ( org.springframework.jca.endpoint.ResourceAdapter ( ) ) ; } else if ( org.springframework.jca.endpoint.ActivationSpec . getResourceAdapter ( ) != org.springframework.jca.endpoint.ResourceAdapter ( ) ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.jca.endpoint.ActivationSpec + STRING + org.springframework.jca.endpoint.ActivationSpec . getResourceAdapter ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { synchronized ( this . java.lang.Object ) { if ( ! this . boolean ) { try { org.springframework.jca.endpoint.ResourceAdapter ( ) . endpointActivation ( org.springframework.jca.endpoint.MessageEndpointFactory ( ) , org.springframework.jca.endpoint.ActivationSpec ( ) ) ; } catch ( ResourceException org.springframework.jca.endpoint.ResourceException ) { throw new java.lang.IllegalStateException ( STRING , org.springframework.jca.endpoint.ResourceException ) ; } this . boolean = true ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { synchronized ( this . java.lang.Object ) { if ( this . boolean ) { org.springframework.jca.endpoint.ResourceAdapter ( ) . endpointDeactivation ( org.springframework.jca.endpoint.MessageEndpointFactory ( ) , org.springframework.jca.endpoint.ActivationSpec ( ) ) ; this . boolean = false ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Runnable java.lang.Runnable ) { synchronized ( this . java.lang.Object ) { void ( ) ; java.lang.Runnable . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { synchronized ( this . java.lang.Object ) { return this . boolean ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; }  <METHOD_END>
