<METHOD_START> @ java.lang.Override protected org.springframework.integration.config.xml.AbstractBeanDefinition org.springframework.integration.config.xml.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { BeanDefinitionRegistry org.springframework.integration.config.xml.BeanDefinitionRegistry = org.springframework.integration.config.xml.ParserContext . getRegistry ( ) ; BeanComponentDefinition org.springframework.integration.config.xml.BeanComponentDefinition = IntegrationNamespaceUtils . parseInnerHandlerDefinition ( org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; if ( org.springframework.integration.config.xml.BeanComponentDefinition != null ) { org.springframework.integration.config.xml.IntegrationConverterInitializer . registerConverter ( org.springframework.integration.config.xml.BeanDefinitionRegistry , org.springframework.integration.config.xml.BeanComponentDefinition ) ; } else { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; Assert . isTrue ( StringUtils . hasText ( java.lang.String ) , STRING ) ; org.springframework.integration.config.xml.IntegrationConverterInitializer . registerConverter ( org.springframework.integration.config.xml.BeanDefinitionRegistry , new RuntimeBeanReference ( java.lang.String ) ) ; } return null ; }  <METHOD_END>
