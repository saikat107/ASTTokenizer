<METHOD_START> public static org.springframework.aop.scope.BeanDefinitionHolder org.springframework.aop.scope.BeanDefinitionHolder ( BeanDefinitionHolder org.springframework.aop.scope.BeanDefinitionHolder , BeanDefinitionRegistry org.springframework.aop.scope.BeanDefinitionRegistry , boolean boolean ) { java.lang.String java.lang.String = org.springframework.aop.scope.BeanDefinitionHolder . getBeanName ( ) ; BeanDefinition org.springframework.aop.scope.BeanDefinition = org.springframework.aop.scope.BeanDefinitionHolder . getBeanDefinition ( ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; RootBeanDefinition org.springframework.aop.scope.RootBeanDefinition = new RootBeanDefinition ( ScopedProxyFactoryBean .class ) ; org.springframework.aop.scope.RootBeanDefinition . setDecoratedDefinition ( new BeanDefinitionHolder ( org.springframework.aop.scope.BeanDefinition , java.lang.String ) ) ; org.springframework.aop.scope.RootBeanDefinition . setOriginatingBeanDefinition ( org.springframework.aop.scope.BeanDefinition ) ; org.springframework.aop.scope.RootBeanDefinition . setSource ( org.springframework.aop.scope.BeanDefinitionHolder . getSource ( ) ) ; org.springframework.aop.scope.RootBeanDefinition . setRole ( org.springframework.aop.scope.BeanDefinition . getRole ( ) ) ; org.springframework.aop.scope.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , java.lang.String ) ; if ( boolean ) { org.springframework.aop.scope.BeanDefinition . setAttribute ( AutoProxyUtils . PRESERVE_TARGET_CLASS_ATTRIBUTE , java.lang.Boolean . java.lang.Boolean ) ; } else { org.springframework.aop.scope.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , java.lang.Boolean . java.lang.Boolean ) ; } org.springframework.aop.scope.RootBeanDefinition . setAutowireCandidate ( org.springframework.aop.scope.BeanDefinition . isAutowireCandidate ( ) ) ; org.springframework.aop.scope.RootBeanDefinition . setPrimary ( org.springframework.aop.scope.BeanDefinition . isPrimary ( ) ) ; if ( org.springframework.aop.scope.BeanDefinition instanceof AbstractBeanDefinition ) { org.springframework.aop.scope.RootBeanDefinition . copyQualifiersFrom ( ( AbstractBeanDefinition ) org.springframework.aop.scope.BeanDefinition ) ; } org.springframework.aop.scope.BeanDefinition . setAutowireCandidate ( false ) ; org.springframework.aop.scope.BeanDefinition . setPrimary ( false ) ; org.springframework.aop.scope.BeanDefinitionRegistry . registerBeanDefinition ( java.lang.String , org.springframework.aop.scope.BeanDefinition ) ; return new BeanDefinitionHolder ( org.springframework.aop.scope.RootBeanDefinition , java.lang.String , org.springframework.aop.scope.BeanDefinitionHolder . getAliases ( ) ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.lang.String + java.lang.String ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( java.lang.String java.lang.String ) { return ( java.lang.String != null && java.lang.String . boolean ( java.lang.String ) ) ; }  <METHOD_END>
