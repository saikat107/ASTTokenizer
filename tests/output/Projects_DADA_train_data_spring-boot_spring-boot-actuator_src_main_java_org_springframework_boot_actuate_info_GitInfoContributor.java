<METHOD_START> public void ( GitProperties org.springframework.boot.actuate.info.GitProperties , Mode org.springframework.boot.actuate.info.Mode ) { super( org.springframework.boot.actuate.info.GitProperties , org.springframework.boot.actuate.info.Mode ); }  <METHOD_END>
<METHOD_START> public void ( GitProperties org.springframework.boot.actuate.info.GitProperties ) { this( org.springframework.boot.actuate.info.GitProperties , Mode . SIMPLE ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Info . Info Info.Builder ) { Info.Builder . withDetail ( STRING , generateContent ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.actuate.info.PropertySource<?> < ? > org.springframework.boot.actuate.info.PropertySource<?> ( ) { java.util.Properties java.util.Properties = new java.util.Properties ( ) ; copyIfSet ( java.util.Properties , STRING ) ; java.lang.String java.lang.String = getProperties ( ) . getShortCommitId ( ) ; if ( java.lang.String != null ) { java.util.Properties . java.lang.Object ( STRING , java.lang.String ) ; } copyIfSet ( java.util.Properties , STRING ) ; return new PropertiesPropertySource ( STRING , java.util.Properties ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { replaceValue ( getNestedMap ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) , STRING , getProperties ( ) . getCommitTime ( ) ) ; replaceValue ( getNestedMap ( java.util.Map<java.lang.String,java.lang.Object> , STRING ) , STRING , getProperties ( ) . getDate ( STRING ) ) ; }  <METHOD_END>
