<METHOD_START> @ Before public void void ( ) { this . org.springframework.data.mongodb.core.MongoCursor<org.springframework.data.mongodb.core.Document> = doThrow ( java.lang.IllegalArgumentException .class ) . when ( mock ( MongoCursor .class ) ) ; this . org.springframework.data.mongodb.core.CloseableIterator<java.lang.Object> = new CloseableIterableCursorAdapter < java.lang.Object > ( org.springframework.data.mongodb.core.MongoCursor<org.springframework.data.mongodb.core.Document> , org.springframework.data.mongodb.core.PersistenceExceptionTranslator , org.springframework.data.mongodb.core.DocumentCallback<java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.mongodb.core.MongoCursor<org.springframework.data.mongodb.core.Document> . next ( ) ; org.springframework.data.mongodb.core.CloseableIterator<java.lang.Object> . next ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.mongodb.core.MongoCursor<org.springframework.data.mongodb.core.Document> . hasNext ( ) ; org.springframework.data.mongodb.core.CloseableIterator<java.lang.Object> . hasNext ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.mongodb.core.MongoCursor<org.springframework.data.mongodb.core.Document> . close ( ) ; org.springframework.data.mongodb.core.CloseableIterator<java.lang.Object> . close ( ) ; }  <METHOD_END>
