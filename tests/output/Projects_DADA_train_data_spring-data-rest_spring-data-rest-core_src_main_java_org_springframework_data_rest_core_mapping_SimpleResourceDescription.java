<METHOD_START> protected void ( java.lang.String java.lang.String , MediaType org.springframework.data.rest.core.mapping.MediaType ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.data.rest.core.mapping.MediaType , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.data.rest.core.mapping.MediaType = org.springframework.data.rest.core.mapping.MediaType ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.rest.core.mapping.ResourceDescription org.springframework.data.rest.core.mapping.ResourceDescription ( java.lang.String java.lang.String ) { return new org.springframework.data.rest.core.mapping.SimpleResourceDescription ( java.lang.String . java.lang.String ( STRING , java.lang.String , java.lang.String ) , org.springframework.data.rest.core.mapping.MediaType ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.core.mapping.MediaType org.springframework.data.rest.core.mapping.MediaType ( ) { return org.springframework.data.rest.core.mapping.MediaType ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return StringUtils . hasText ( java.lang.String ) && java.lang.String . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { return new java.lang.String [] { java.lang.String } ; }  <METHOD_END>
