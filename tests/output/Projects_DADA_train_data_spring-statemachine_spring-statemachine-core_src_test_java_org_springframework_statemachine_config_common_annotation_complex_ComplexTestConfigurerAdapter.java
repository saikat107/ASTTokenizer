<METHOD_START> @ java.lang.Override public final void void ( ComplexTestConfigBuilder org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBuilder ) throws java.lang.Exception { org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBuilder . setSharedObject ( java.lang.String .class , STRING ) ; org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBuilder . setSharedObject ( ComplexTestConfigBeanABuilder .class , org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanABuilder ( ) ) ; org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBuilder . setSharedObject ( ComplexTestConfigBeanBBuilder .class , org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanBBuilder ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ComplexTestConfigBuilder org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBuilder ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ComplexTestConfigBeanABuilder org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanABuilder ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ComplexTestConfigBeanBConfigurer org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanBConfigurer ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> protected final org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanBBuilder org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanBBuilder ( ) java.lang.Exception { if ( org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanBBuilder != null ) { return org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanBBuilder ; } org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanBBuilder = new ComplexTestConfigBeanBBuilder ( ) ; void ( org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanBBuilder ) ; return org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanBBuilder ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanABuilder org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanABuilder ( ) java.lang.Exception { if ( org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanABuilder != null ) { return org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanABuilder ; } org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanABuilder = new ComplexTestConfigBeanABuilder ( ) ; void ( org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanABuilder ) ; return org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfigBeanABuilder ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( AnnotationBuilder < ComplexTestConfig > org.springframework.statemachine.config.common.annotation.complex.AnnotationBuilder<org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfig> ) { return org.springframework.statemachine.config.common.annotation.complex.AnnotationBuilder<org.springframework.statemachine.config.common.annotation.complex.ComplexTestConfig> instanceof ComplexTestConfigBuilder ; }  <METHOD_END>
