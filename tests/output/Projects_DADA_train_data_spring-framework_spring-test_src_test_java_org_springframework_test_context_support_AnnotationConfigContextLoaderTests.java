<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.test.context.support.ExpectedException . expect ( java.lang.IllegalStateException .class ) ; org.springframework.test.context.support.ExpectedException . expectMessage ( containsString ( STRING ) ) ; MergedContextConfiguration org.springframework.test.context.support.MergedContextConfiguration = new MergedContextConfiguration ( java.lang.Class<? extends org.springframework.test.context.support.AnnotationConfigContextLoaderTests> ( ) , new java.lang.String [] { STRING } , java.lang.Class<?>[] , java.lang.String[] , org.springframework.test.context.support.AnnotationConfigContextLoader ) ; org.springframework.test.context.support.AnnotationConfigContextLoader . loadContext ( org.springframework.test.context.support.MergedContextConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.test.context.support.AnnotationConfigContextLoader . detectDefaultConfigurationClasses ( ContextConfigurationInnerClassTestCase .class ) ; assertNotNull ( java.lang.Class<?>[] ) ; assertEquals ( STRING , NUMBER , java.lang.Class<?>[] . int ) ; java.lang.Class<?>[] = org.springframework.test.context.support.AnnotationConfigContextLoader . detectDefaultConfigurationClasses ( AnnotatedFooConfigInnerClassTestCase .class ) ; assertNotNull ( java.lang.Class<?>[] ) ; assertEquals ( STRING , NUMBER , java.lang.Class<?>[] . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.test.context.support.AnnotationConfigContextLoader . detectDefaultConfigurationClasses ( MultipleStaticConfigurationClassesTestCase .class ) ; assertNotNull ( java.lang.Class<?>[] ) ; assertEquals ( STRING , NUMBER , java.lang.Class<?>[] . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.test.context.support.AnnotationConfigContextLoader . detectDefaultConfigurationClasses ( PlainVanillaFooConfigInnerClassTestCase .class ) ; assertNotNull ( java.lang.Class<?>[] ) ; assertEquals ( STRING , NUMBER , java.lang.Class<?>[] . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.test.context.support.AnnotationConfigContextLoader . detectDefaultConfigurationClasses ( FinalConfigInnerClassTestCase .class ) ; assertNotNull ( java.lang.Class<?>[] ) ; assertEquals ( STRING , NUMBER , java.lang.Class<?>[] . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.test.context.support.AnnotationConfigContextLoader . detectDefaultConfigurationClasses ( PrivateConfigInnerClassTestCase .class ) ; assertNotNull ( java.lang.Class<?>[] ) ; assertEquals ( STRING , NUMBER , java.lang.Class<?>[] . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.test.context.support.AnnotationConfigContextLoader . detectDefaultConfigurationClasses ( NonStaticConfigInnerClassesTestCase .class ) ; assertNotNull ( java.lang.Class<?>[] ) ; assertEquals ( STRING , NUMBER , java.lang.Class<?>[] . int ) ; }  <METHOD_END>
