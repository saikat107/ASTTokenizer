<METHOD_START> @ java.lang.Override protected org.springframework.integration.config.xml.BeanMetadataElement org.springframework.integration.config.xml.BeanMetadataElement ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ParserContext . extractSource ( org.w3c.dom.Element ) ; BeanMetadataElement org.springframework.integration.config.xml.BeanMetadataElement = null ; BeanComponentDefinition org.springframework.integration.config.xml.BeanComponentDefinition = IntegrationNamespaceUtils . parseInnerHandlerDefinition ( org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( IntegrationNamespaceUtils . REF_ATTRIBUTE ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( IntegrationNamespaceUtils . METHOD_ATTRIBUTE ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( IntegrationNamespaceUtils . EXPRESSION_ATTRIBUTE ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; boolean boolean = org.springframework.integration.config.xml.BeanComponentDefinition != null ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = org.w3c.dom.Element != null ; boolean boolean = org.w3c.dom.Element != null ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; if ( ! boolean && ! boolean && ! boolean && ! boolean && ! boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } if ( boolean ) { if ( boolean || boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + IntegrationNamespaceUtils . createElementDescription ( org.w3c.dom.Element ) + STRING , java.lang.Object ) ; return null ; } if ( boolean ) { org.springframework.integration.config.xml.BeanMetadataElement = this . org.springframework.integration.config.xml.BeanMetadataElement ( org.springframework.integration.config.xml.BeanComponentDefinition , java.lang.String , org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; } else { org.springframework.integration.config.xml.BeanMetadataElement = org.springframework.integration.config.xml.BeanComponentDefinition . getBeanDefinition ( ) ; } } else if ( boolean ) { if ( boolean || boolean || boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + IntegrationNamespaceUtils . createElementDescription ( org.w3c.dom.Element ) + STRING , java.lang.Object ) ; return null ; } BeanDefinition org.springframework.integration.config.xml.BeanDefinition = org.springframework.integration.config.xml.ParserContext . getDelegate ( ) . parseCustomElement ( org.w3c.dom.Element ) ; BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( IntegrationConfigUtils . BASE_PACKAGE + STRING ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( org.springframework.integration.config.xml.BeanDefinition ) ; this . void ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; org.springframework.integration.config.xml.BeanMetadataElement = org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; } else if ( boolean || boolean ) { if ( boolean || boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; return null ; } if ( boolean & boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; return null ; } org.springframework.integration.config.xml.BeanMetadataElement = this . org.springframework.integration.config.xml.BeanMetadataElement ( java.lang.String , org.w3c.dom.Element , org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; } else if ( boolean ) { BeanMetadataElement org.springframework.integration.config.xml.BeanMetadataElement = new RuntimeBeanReference ( java.lang.String ) ; if ( boolean ) { org.springframework.integration.config.xml.BeanMetadataElement = this . org.springframework.integration.config.xml.BeanMetadataElement ( org.springframework.integration.config.xml.BeanMetadataElement , java.lang.String , org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; } else { org.springframework.integration.config.xml.BeanMetadataElement = org.springframework.integration.config.xml.BeanMetadataElement ; } } return org.springframework.integration.config.xml.BeanMetadataElement ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.config.xml.BeanMetadataElement org.springframework.integration.config.xml.BeanMetadataElement ( BeanMetadataElement org.springframework.integration.config.xml.BeanMetadataElement , java.lang.String java.lang.String , org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( MethodInvokingMessageSource .class ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.config.xml.BeanMetadataElement ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; this . void ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; return org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.config.xml.BeanMetadataElement org.springframework.integration.config.xml.BeanMetadataElement ( java.lang.String java.lang.String , org.w3c.dom.Element org.w3c.dom.Element , org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ExpressionEvaluatingMessageSource .class ) ; BeanDefinition org.springframework.integration.config.xml.BeanDefinition = null ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.BeanDefinition = new RootBeanDefinition ( ExpressionFactoryBean .class ) ; org.springframework.integration.config.xml.BeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( java.lang.String ) ; } else { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( DynamicExpression .class ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinition = org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; } org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( org.springframework.integration.config.xml.BeanDefinition ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( null ) ; this . void ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; return org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING ) ; if ( ! CollectionUtils . isEmpty ( java.util.List<org.w3c.dom.Element> ) ) { ManagedMap < java.lang.String , java.lang.Object > org.springframework.integration.config.xml.ManagedMap<java.lang.String,java.lang.Object> = new ManagedMap < java.lang.String , java.lang.Object > ( ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; BeanDefinition org.springframework.integration.config.xml.BeanDefinition = IntegrationNamespaceUtils . createExpressionDefinitionFromValueOrExpression ( STRING , STRING , org.springframework.integration.config.xml.ParserContext , org.w3c.dom.Element , true ) ; org.springframework.integration.config.xml.ManagedMap<java.lang.String,java.lang.Object> . put ( java.lang.String , org.springframework.integration.config.xml.BeanDefinition ) ; } org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.config.xml.ManagedMap<java.lang.String,java.lang.Object> ) ; } }  <METHOD_END>
