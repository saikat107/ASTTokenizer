<METHOD_START> public void ( WebHandler org.springframework.web.server.adapter.WebHandler ) { super( org.springframework.web.server.adapter.WebHandler ); }  <METHOD_END>
<METHOD_START> public void void ( WebSessionManager org.springframework.web.server.adapter.WebSessionManager ) { Assert . notNull ( org.springframework.web.server.adapter.WebSessionManager , STRING ) ; this . org.springframework.web.server.adapter.WebSessionManager = org.springframework.web.server.adapter.WebSessionManager ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.server.adapter.WebSessionManager org.springframework.web.server.adapter.WebSessionManager ( ) { return this . org.springframework.web.server.adapter.WebSessionManager ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.server.adapter.Mono<java.lang.Void> < java.lang.Void > org.springframework.web.server.adapter.Mono<java.lang.Void> ( ServerHttpRequest org.springframework.web.server.adapter.ServerHttpRequest , ServerHttpResponse org.springframework.web.server.adapter.ServerHttpResponse ) { ServerWebExchange org.springframework.web.server.adapter.ServerWebExchange = org.springframework.web.server.adapter.ServerWebExchange ( org.springframework.web.server.adapter.ServerHttpRequest , org.springframework.web.server.adapter.ServerHttpResponse ) ; return getDelegate ( ) . handle ( org.springframework.web.server.adapter.ServerWebExchange ) . otherwise ( ex -> { if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING , ex ) ; } response . setStatusCode ( HttpStatus . INTERNAL_SERVER_ERROR ) ; return Mono . empty ( ) ; } ) . then ( org.springframework.web.server.adapter.ServerHttpResponse :: setComplete ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.web.server.adapter.ServerWebExchange org.springframework.web.server.adapter.ServerWebExchange ( ServerHttpRequest org.springframework.web.server.adapter.ServerHttpRequest , ServerHttpResponse org.springframework.web.server.adapter.ServerHttpResponse ) { return new DefaultServerWebExchange ( org.springframework.web.server.adapter.ServerHttpRequest , org.springframework.web.server.adapter.ServerHttpResponse , this . org.springframework.web.server.adapter.WebSessionManager ) ; }  <METHOD_END>
