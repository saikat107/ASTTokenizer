<METHOD_START> public static boolean boolean ( HttpServletRequest org.springframework.web.multipart.support.HttpServletRequest ) { return ( WebUtils . getNativeRequest ( org.springframework.web.multipart.support.HttpServletRequest , MultipartHttpServletRequest .class ) != null || boolean ( org.springframework.web.multipart.support.HttpServletRequest ) ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( HttpServletRequest org.springframework.web.multipart.support.HttpServletRequest ) { java.lang.String java.lang.String = org.springframework.web.multipart.support.HttpServletRequest . getContentType ( ) ; return ( java.lang.String != null && java.lang.String . java.lang.String ( ) . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> static org.springframework.web.multipart.support.MultipartHttpServletRequest org.springframework.web.multipart.support.MultipartHttpServletRequest ( HttpServletRequest org.springframework.web.multipart.support.HttpServletRequest ) { MultipartHttpServletRequest org.springframework.web.multipart.support.MultipartHttpServletRequest = WebUtils . getNativeRequest ( org.springframework.web.multipart.support.HttpServletRequest , MultipartHttpServletRequest .class ) ; if ( org.springframework.web.multipart.support.MultipartHttpServletRequest != null ) { return org.springframework.web.multipart.support.MultipartHttpServletRequest ; } return new StandardMultipartHttpServletRequest ( org.springframework.web.multipart.support.HttpServletRequest ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( MethodParameter org.springframework.web.multipart.support.MethodParameter ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.web.multipart.support.MethodParameter . getNestedParameterType ( ) ; return ( MultipartFile .class == java.lang.Class<> || boolean ( org.springframework.web.multipart.support.MethodParameter ) || boolean ( org.springframework.web.multipart.support.MethodParameter ) || ( Part .class == java.lang.Class<> || boolean ( org.springframework.web.multipart.support.MethodParameter ) || boolean ( org.springframework.web.multipart.support.MethodParameter ) ) ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.Object java.lang.Object ( java.lang.String java.lang.String , MethodParameter org.springframework.web.multipart.support.MethodParameter , HttpServletRequest org.springframework.web.multipart.support.HttpServletRequest )			throws java.lang.Exception { MultipartHttpServletRequest org.springframework.web.multipart.support.MultipartHttpServletRequest = WebUtils . getNativeRequest ( org.springframework.web.multipart.support.HttpServletRequest , MultipartHttpServletRequest .class ) ; boolean boolean = ( org.springframework.web.multipart.support.MultipartHttpServletRequest != null || boolean ( org.springframework.web.multipart.support.HttpServletRequest ) ) ; if ( MultipartFile .class == org.springframework.web.multipart.support.MethodParameter . getNestedParameterType ( ) ) { if ( org.springframework.web.multipart.support.MultipartHttpServletRequest == null && boolean ) { org.springframework.web.multipart.support.MultipartHttpServletRequest = new StandardMultipartHttpServletRequest ( org.springframework.web.multipart.support.HttpServletRequest ) ; } return ( org.springframework.web.multipart.support.MultipartHttpServletRequest != null ? org.springframework.web.multipart.support.MultipartHttpServletRequest . getFile ( java.lang.String ) : null ) ; } else if ( boolean ( org.springframework.web.multipart.support.MethodParameter ) ) { if ( org.springframework.web.multipart.support.MultipartHttpServletRequest == null && boolean ) { org.springframework.web.multipart.support.MultipartHttpServletRequest = new StandardMultipartHttpServletRequest ( org.springframework.web.multipart.support.HttpServletRequest ) ; } return ( org.springframework.web.multipart.support.MultipartHttpServletRequest != null ? org.springframework.web.multipart.support.MultipartHttpServletRequest . getFiles ( java.lang.String ) : null ) ; } else if ( boolean ( org.springframework.web.multipart.support.MethodParameter ) ) { if ( org.springframework.web.multipart.support.MultipartHttpServletRequest == null && boolean ) { org.springframework.web.multipart.support.MultipartHttpServletRequest = new StandardMultipartHttpServletRequest ( org.springframework.web.multipart.support.HttpServletRequest ) ; } if ( org.springframework.web.multipart.support.MultipartHttpServletRequest != null ) { java.util.List<org.springframework.web.multipart.support.MultipartFile> < MultipartFile > java.util.List<org.springframework.web.multipart.support.MultipartFile> = org.springframework.web.multipart.support.MultipartHttpServletRequest . getFiles ( java.lang.String ) ; return java.util.List<org.springframework.web.multipart.support.MultipartFile> . toArray ( new MultipartFile [ java.util.List<org.springframework.web.multipart.support.MultipartFile> . size ( ) ] ) ; } else { return null ; } } else if ( Part .class == org.springframework.web.multipart.support.MethodParameter . getNestedParameterType ( ) ) { return ( boolean ? org.springframework.web.multipart.support.Part ( org.springframework.web.multipart.support.HttpServletRequest , java.lang.String ) : null ) ; } else if ( boolean ( org.springframework.web.multipart.support.MethodParameter ) ) { return ( boolean ? java.util.List<org.springframework.web.multipart.support.Part> ( org.springframework.web.multipart.support.HttpServletRequest , java.lang.String ) : null ) ; } else if ( boolean ( org.springframework.web.multipart.support.MethodParameter ) ) { return ( boolean ? org.springframework.web.multipart.support.Part[] ( org.springframework.web.multipart.support.HttpServletRequest , java.lang.String ) : null ) ; } else { return java.lang.Object ; } }  <METHOD_END>
<METHOD_START> private static boolean boolean ( MethodParameter org.springframework.web.multipart.support.MethodParameter ) { return ( MultipartFile .class == java.lang.Class<?> ( org.springframework.web.multipart.support.MethodParameter ) ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( MethodParameter org.springframework.web.multipart.support.MethodParameter ) { return ( MultipartFile .class == org.springframework.web.multipart.support.MethodParameter . getNestedParameterType ( ) . getComponentType ( ) ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( MethodParameter org.springframework.web.multipart.support.MethodParameter ) { return ( Part .class == java.lang.Class<?> ( org.springframework.web.multipart.support.MethodParameter ) ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( MethodParameter org.springframework.web.multipart.support.MethodParameter ) { return ( Part .class == org.springframework.web.multipart.support.MethodParameter . getNestedParameterType ( ) . getComponentType ( ) ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.Class<?> < ? > java.lang.Class<?> ( MethodParameter org.springframework.web.multipart.support.MethodParameter ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.web.multipart.support.MethodParameter . getNestedParameterType ( ) ; if ( java.util.Collection .class == java.lang.Class<> || java.util.List .class . boolean ( java.lang.Class<> ) ) { java.lang.Class<?> < ? > java.lang.Class<?> = ResolvableType . forMethodParameter ( org.springframework.web.multipart.support.MethodParameter ) . asCollection ( ) . resolveGeneric ( ) ; if ( java.lang.Class<> != null ) { return java.lang.Class<> ; } } return null ; }  <METHOD_END>
<METHOD_START> private static org.springframework.web.multipart.support.Part org.springframework.web.multipart.support.Part ( HttpServletRequest org.springframework.web.multipart.support.HttpServletRequest , java.lang.String java.lang.String ) throws java.lang.Exception { return org.springframework.web.multipart.support.HttpServletRequest . getPart ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private static java.util.List<org.springframework.web.multipart.support.Part> < Part > java.util.List<org.springframework.web.multipart.support.Part> ( HttpServletRequest org.springframework.web.multipart.support.HttpServletRequest , java.lang.String java.lang.String ) throws java.lang.Exception { java.util.Collection<org.springframework.web.multipart.support.Part> < Part > java.util.Collection<org.springframework.web.multipart.support.Part> = org.springframework.web.multipart.support.HttpServletRequest . getParts ( ) ; java.util.List<org.springframework.web.multipart.support.Part> < Part > java.util.List<org.springframework.web.multipart.support.Part> = new java.util.ArrayList <> ( java.util.Collection<org.springframework.web.multipart.support.Part> . size ( ) ) ; for ( Part org.springframework.web.multipart.support.Part : java.util.Collection<org.springframework.web.multipart.support.Part> ) { if ( org.springframework.web.multipart.support.Part . getName ( ) . equals ( java.lang.String ) ) { java.util.List<org.springframework.web.multipart.support.Part> . add ( org.springframework.web.multipart.support.Part ) ; } } return java.util.List<org.springframework.web.multipart.support.Part> ; }  <METHOD_END>
<METHOD_START> private static org.springframework.web.multipart.support.Part [] org.springframework.web.multipart.support.Part[] ( HttpServletRequest org.springframework.web.multipart.support.HttpServletRequest , java.lang.String java.lang.String ) throws java.lang.Exception { java.util.Collection<org.springframework.web.multipart.support.Part> < Part > java.util.Collection<org.springframework.web.multipart.support.Part> = org.springframework.web.multipart.support.HttpServletRequest . getParts ( ) ; java.util.List<org.springframework.web.multipart.support.Part> < Part > java.util.List<org.springframework.web.multipart.support.Part> = new java.util.ArrayList <> ( java.util.Collection<org.springframework.web.multipart.support.Part> . size ( ) ) ; for ( Part org.springframework.web.multipart.support.Part : java.util.Collection<org.springframework.web.multipart.support.Part> ) { if ( org.springframework.web.multipart.support.Part . getName ( ) . equals ( java.lang.String ) ) { java.util.List<org.springframework.web.multipart.support.Part> . add ( org.springframework.web.multipart.support.Part ) ; } } return java.util.List<org.springframework.web.multipart.support.Part> . toArray ( new Part [ java.util.List<org.springframework.web.multipart.support.Part> . size ( ) ] ) ; }  <METHOD_END>
