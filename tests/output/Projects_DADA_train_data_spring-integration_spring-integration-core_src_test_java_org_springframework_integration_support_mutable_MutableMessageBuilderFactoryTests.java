<METHOD_START> @ Test public void void ( ) java.lang.InterruptedException { this . org.springframework.integration.support.mutable.MutableMessageBuilderFactoryTests.ContextConfiguration.TestGateway . void ( STRING ) ; boolean boolean = this . java.util.concurrent.CountDownLatch . boolean ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) ; assertTrue ( STRING , boolean ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.integration.support.mutable.MutableMessageBuilderFactory org.springframework.integration.support.mutable.MutableMessageBuilderFactory ( ) { return new MutableMessageBuilderFactory ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.integration.support.mutable.DirectChannel org.springframework.integration.support.mutable.DirectChannel ( ) { return new DirectChannel ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.integration.support.mutable.DirectChannel org.springframework.integration.support.mutable.DirectChannel ( ) { return new DirectChannel ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public java.util.concurrent.CountDownLatch java.util.concurrent.CountDownLatch ( ) { return new java.util.concurrent.CountDownLatch ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Gateway ( requestChannel = STRING ) void void ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Filter ( inputChannel = STRING , outputChannel = STRING ) public boolean boolean ( MessageHeaders org.springframework.integration.support.mutable.MessageHeaders ) { try { org.springframework.integration.support.mutable.MessageHeaders . put ( STRING , STRING ) ; return true ; } catch ( java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException ) { return false ; } }  <METHOD_END>
<METHOD_START> @ ServiceActivator ( inputChannel = STRING ) public void void ( @ Payload java.lang.String java.lang.String ) { java.util.concurrent.CountDownLatch . void ( ) ; }  <METHOD_END>
