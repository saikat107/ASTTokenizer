<METHOD_START> public void ( ClientCacheFactoryBean org.springframework.data.gemfire.test.ClientCacheFactoryBean ) { setUseBeanFactoryLocator ( false ) ; if ( org.springframework.data.gemfire.test.ClientCacheFactoryBean != null ) { this . beanFactoryLocator = org.springframework.data.gemfire.test.ClientCacheFactoryBean . getBeanFactoryLocator ( ) ; setBeanClassLoader ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getBeanClassLoader ( ) ) ; setBeanFactory ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getBeanFactory ( ) ) ; setBeanName ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getBeanName ( ) ) ; setCacheXml ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getCacheXml ( ) ) ; setCopyOnRead ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getCopyOnRead ( ) ) ; setCriticalHeapPercentage ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getCriticalHeapPercentage ( ) ) ; setDurableClientId ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getDurableClientId ( ) ) ; setDurableClientTimeout ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getDurableClientTimeout ( ) ) ; setDynamicRegionSupport ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getDynamicRegionSupport ( ) ) ; setEvictionHeapPercentage ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getEvictionHeapPercentage ( ) ) ; setGatewayConflictResolver ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getGatewayConflictResolver ( ) ) ; setJndiDataSources ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getJndiDataSources ( ) ) ; setKeepAlive ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . isKeepAlive ( ) ) ; setLockLease ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getLockLease ( ) ) ; setLockTimeout ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getLockTimeout ( ) ) ; setMessageSyncInterval ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getMessageSyncInterval ( ) ) ; setPdxDiskStoreName ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getPdxDiskStoreName ( ) ) ; setPdxIgnoreUnreadFields ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getPdxIgnoreUnreadFields ( ) ) ; setPdxPersistent ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getPdxPersistent ( ) ) ; setPdxReadSerialized ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getPdxReadSerialized ( ) ) ; setPdxSerializer ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getPdxSerializer ( ) ) ; setPoolName ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getPoolName ( ) ) ; setProperties ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getProperties ( ) ) ; setReadyForEvents ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getReadyForEvents ( ) ) ; setSearchTimeout ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getSearchTimeout ( ) ) ; setTransactionListeners ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getTransactionListeners ( ) ) ; setTransactionWriter ( org.springframework.data.gemfire.test.ClientCacheFactoryBean . getTransactionWriter ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected < T extends org.springframework.data.gemfire.test.GemFireCache > T T ( ) { StubCache org.springframework.data.gemfire.test.StubCache = new StubCache ( ) ; org.springframework.data.gemfire.test.StubCache . setProperties ( getProperties ( ) ) ; return ( T ) org.springframework.data.gemfire.test.StubCache ; }  <METHOD_END>
