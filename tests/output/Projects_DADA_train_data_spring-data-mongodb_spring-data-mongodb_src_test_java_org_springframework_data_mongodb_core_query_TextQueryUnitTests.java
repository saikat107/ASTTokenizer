<METHOD_START> @ Test public void void ( ) { assertThat ( new TextQuery ( java.lang.String ) , isTextQuery ( ) . searchingFor ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( new TextQuery ( java.lang.String , java.lang.String ) , isTextQuery ( ) . searchingFor ( java.lang.String ) . inLanguage ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( new TextQuery ( java.lang.String ) . includeScore ( ) , isTextQuery ( ) . searchingFor ( java.lang.String ) . returningScore ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TextQuery org.springframework.data.mongodb.core.query.TextQuery = new TextQuery ( TextCriteria . forDefaultLanguage ( ) . matching ( java.lang.String ) ) . includeScore ( ) ; org.springframework.data.mongodb.core.query.TextQuery . fields ( ) . include ( STRING ) ; assertThat ( org.springframework.data.mongodb.core.query.TextQuery , isTextQuery ( ) . searchingFor ( java.lang.String ) . returningScore ( ) . includingField ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( new TextQuery ( java.lang.String ) . sortByScore ( ) , isTextQuery ( ) . searchingFor ( java.lang.String ) . returningScore ( ) . sortingByScore ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TextQuery org.springframework.data.mongodb.core.query.TextQuery = new TextQuery ( java.lang.String ) ; org.springframework.data.mongodb.core.query.TextQuery . with ( new Sort ( Direction . DESC , STRING ) ) ; org.springframework.data.mongodb.core.query.TextQuery . sortByScore ( ) ; assertThat ( org.springframework.data.mongodb.core.query.TextQuery , isTextQuery ( ) . searchingFor ( java.lang.String ) . returningScore ( ) . sortingByScore ( ) . sortingBy ( STRING , Direction . DESC ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TextQuery org.springframework.data.mongodb.core.query.TextQuery = new TextQuery ( java.lang.String ) . includeScore ( STRING ) . sortByScore ( ) ; assertThat ( org.springframework.data.mongodb.core.query.TextQuery , isTextQuery ( ) . searchingFor ( java.lang.String ) . returningScoreAs ( STRING ) . sortingByScore ( ) ) ; }  <METHOD_END>
