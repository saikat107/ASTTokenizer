<METHOD_START> @ Autowired public void ( javax.sql.DataSource javax.sql.DataSource ) { this . org.springframework.integration.jdbc.lock.JdbcTemplate = new JdbcTemplate ( javax.sql.DataSource ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . java.lang.String = java.lang.String . java.lang.String ( this . java.lang.String , this . java.lang.String ) ; this . java.lang.String = java.lang.String . java.lang.String ( this . java.lang.String , this . java.lang.String ) ; this . java.lang.String = java.lang.String . java.lang.String ( this . java.lang.String , this . java.lang.String ) ; this . java.lang.String = java.lang.String . java.lang.String ( this . java.lang.String , this . java.lang.String ) ; this . java.lang.String = java.lang.String . java.lang.String ( this . java.lang.String , this . java.lang.String ) ; this . java.lang.String = java.lang.String . java.lang.String ( this . java.lang.String , this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.integration.jdbc.lock.JdbcTemplate . update ( this . java.lang.String , this . java.lang.String , this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.jdbc.lock.JdbcTemplate . update ( this . java.lang.String , this . java.lang.String , java.lang.String , this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Transactional ( isolation = Isolation . SERIALIZABLE , timeout = NUMBER ) @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { int ( java.lang.String ) ; if ( this . org.springframework.integration.jdbc.lock.JdbcTemplate . update ( this . java.lang.String , new java.util.Date ( ) , this . java.lang.String , java.lang.String , this . java.lang.String ) > NUMBER ) { return true ; } try { return this . org.springframework.integration.jdbc.lock.JdbcTemplate . update ( this . java.lang.String , this . java.lang.String , java.lang.String , this . java.lang.String , new java.util.Date ( ) ) > NUMBER ; } catch ( DuplicateKeyException org.springframework.integration.jdbc.lock.DuplicateKeyException ) { return false ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { int ( java.lang.String ) ; return this . org.springframework.integration.jdbc.lock.JdbcTemplate . queryForObject ( this . java.lang.String , java.lang.Integer .class , this . java.lang.String , java.lang.String , this . java.lang.String , new java.util.Date ( java.lang.System . long ( ) - this . int ) ) == NUMBER ; }  <METHOD_END>
<METHOD_START> private int int ( java.lang.String java.lang.String ) { return this . org.springframework.integration.jdbc.lock.JdbcTemplate . update ( this . java.lang.String , this . java.lang.String , java.lang.String , new java.util.Date ( java.lang.System . long ( ) - this . int ) ) ; }  <METHOD_END>
