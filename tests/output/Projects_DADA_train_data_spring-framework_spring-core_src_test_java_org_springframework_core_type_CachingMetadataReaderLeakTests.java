<METHOD_START> @ Test public void void ( ) java.lang.Exception { Assume . group ( TestGroup . LONG_RUNNING ) ; java.net.URL java.net.URL = java.lang.Class<? extends org.springframework.core.type.CachingMetadataReaderLeakTests> ( ) . java.net.URL ( STRING ) ; assertThat ( java.net.URL , notNullValue ( ) ) ; for ( int int = NUMBER ; int < int ; int ++ ) { Resource org.springframework.core.type.Resource = new UrlResource ( java.net.URL ) { @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( java.lang.Object == this ) ; } @ java.lang.Override public int int ( ) { return java.lang.System . int ( this ) ; } } ; MetadataReader org.springframework.core.type.MetadataReader = org.springframework.core.type.MetadataReaderFactory . getMetadataReader ( org.springframework.core.type.Resource ) ; assertThat ( org.springframework.core.type.MetadataReader , notNullValue ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( java.lang.Object == this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.lang.System . int ( this ) ; }  <METHOD_END>
