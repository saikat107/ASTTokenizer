<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.config.BeanDefinition org.springframework.web.servlet.config.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.web.servlet.config.ParserContext ) { CompositeComponentDefinition org.springframework.web.servlet.config.CompositeComponentDefinition = new CompositeComponentDefinition ( org.w3c.dom.Element . java.lang.String ( ) , org.springframework.web.servlet.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; org.springframework.web.servlet.config.ParserContext . pushContainingComponent ( org.springframework.web.servlet.config.CompositeComponentDefinition ) ; RuntimeBeanReference org.springframework.web.servlet.config.RuntimeBeanReference = null ; if ( org.w3c.dom.Element . boolean ( STRING ) ) { org.springframework.web.servlet.config.RuntimeBeanReference = new RuntimeBeanReference ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ; } java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING , STRING , STRING ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { RootBeanDefinition org.springframework.web.servlet.config.RootBeanDefinition = new RootBeanDefinition ( MappedInterceptor .class ) ; org.springframework.web.servlet.config.RootBeanDefinition . setSource ( org.springframework.web.servlet.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; org.springframework.web.servlet.config.RootBeanDefinition . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) ; ManagedList < java.lang.String > org.springframework.web.servlet.config.ManagedList<java.lang.String> = null ; ManagedList < java.lang.String > org.springframework.web.servlet.config.ManagedList<java.lang.String> = null ; java.lang.Object java.lang.Object ; if ( STRING . boolean ( org.w3c.dom.Element . java.lang.String ( ) ) ) { org.springframework.web.servlet.config.ManagedList<java.lang.String> = org.springframework.web.servlet.config.ManagedList<java.lang.String> ( org.w3c.dom.Element , STRING ) ; org.springframework.web.servlet.config.ManagedList<java.lang.String> = org.springframework.web.servlet.config.ManagedList<java.lang.String> ( org.w3c.dom.Element , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING , STRING ) . get ( NUMBER ) ; java.lang.Object = org.springframework.web.servlet.config.ParserContext . getDelegate ( ) . parsePropertySubElement ( org.w3c.dom.Element , null ) ; } else { java.lang.Object = org.springframework.web.servlet.config.ParserContext . getDelegate ( ) . parsePropertySubElement ( org.w3c.dom.Element , null ) ; } org.springframework.web.servlet.config.RootBeanDefinition . getConstructorArgumentValues ( ) . addIndexedArgumentValue ( NUMBER , org.springframework.web.servlet.config.ManagedList<java.lang.String> ) ; org.springframework.web.servlet.config.RootBeanDefinition . getConstructorArgumentValues ( ) . addIndexedArgumentValue ( NUMBER , org.springframework.web.servlet.config.ManagedList<java.lang.String> ) ; org.springframework.web.servlet.config.RootBeanDefinition . getConstructorArgumentValues ( ) . addIndexedArgumentValue ( NUMBER , java.lang.Object ) ; if ( org.springframework.web.servlet.config.RuntimeBeanReference != null ) { org.springframework.web.servlet.config.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , org.springframework.web.servlet.config.RuntimeBeanReference ) ; } java.lang.String java.lang.String = org.springframework.web.servlet.config.ParserContext . getReaderContext ( ) . registerWithGeneratedName ( org.springframework.web.servlet.config.RootBeanDefinition ) ; org.springframework.web.servlet.config.ParserContext . registerComponent ( new BeanComponentDefinition ( org.springframework.web.servlet.config.RootBeanDefinition , java.lang.String ) ) ; } org.springframework.web.servlet.config.ParserContext . popAndRegisterContainingComponent ( ) ; return null ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.servlet.config.ManagedList<java.lang.String> < java.lang.String > org.springframework.web.servlet.config.ManagedList<java.lang.String> ( org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String ) { java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; ManagedList < java.lang.String > org.springframework.web.servlet.config.ManagedList<java.lang.String> = new ManagedList <> ( java.util.List<org.w3c.dom.Element> . int ( ) ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { org.springframework.web.servlet.config.ManagedList<java.lang.String> . add ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ; } return org.springframework.web.servlet.config.ManagedList<java.lang.String> ; }  <METHOD_END>
