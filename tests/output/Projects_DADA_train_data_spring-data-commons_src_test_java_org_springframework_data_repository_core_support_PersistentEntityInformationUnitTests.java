<METHOD_START> @ Test public void void ( ) { SampleMappingContext org.springframework.data.repository.core.support.SampleMappingContext = new SampleMappingContext ( ) ; PersistentEntity < java.lang.Object , SamplePersistentProperty > org.springframework.data.repository.core.support.PersistentEntity<java.lang.Object,org.springframework.data.repository.core.support.SamplePersistentProperty> = org.springframework.data.repository.core.support.SampleMappingContext . getRequiredPersistentEntity ( org.springframework.data.repository.core.support.PersistentEntityInformationUnitTests.Sample .class ) ; EntityInformation < java.lang.Object , java.lang.Long > org.springframework.data.repository.core.support.EntityInformation<java.lang.Object,java.lang.Long> = new PersistentEntityInformation <> ( org.springframework.data.repository.core.support.PersistentEntity<java.lang.Object,org.springframework.data.repository.core.support.SamplePersistentProperty> ) ; assertThat ( org.springframework.data.repository.core.support.EntityInformation<java.lang.Object,java.lang.Long> . getIdType ( ) ) . isEqualTo ( java.lang.Long .class ) ; org.springframework.data.repository.core.support.PersistentEntityInformationUnitTests.Sample org.springframework.data.repository.core.support.PersistentEntityInformationUnitTests.Sample = new org.springframework.data.repository.core.support.PersistentEntityInformationUnitTests.Sample ( ) ; org.springframework.data.repository.core.support.PersistentEntityInformationUnitTests.Sample . java.lang.Long = NUMBER ; assertThat ( org.springframework.data.repository.core.support.EntityInformation<java.lang.Object,java.lang.Long> . getId ( org.springframework.data.repository.core.support.PersistentEntityInformationUnitTests.Sample ) ) . hasValue ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SampleMappingContext org.springframework.data.repository.core.support.SampleMappingContext = new SampleMappingContext ( ) ; PersistentEntity < java.lang.Object , SamplePersistentProperty > org.springframework.data.repository.core.support.PersistentEntity<java.lang.Object,org.springframework.data.repository.core.support.SamplePersistentProperty> = org.springframework.data.repository.core.support.SampleMappingContext . getRequiredPersistentEntity ( org.springframework.data.repository.core.support.PersistentEntityInformationUnitTests.EntityWithoutId .class ) ; PersistentEntityInformation < java.lang.Object , java.io.Serializable > org.springframework.data.repository.core.support.PersistentEntityInformation<java.lang.Object,java.io.Serializable> = new PersistentEntityInformation <> ( org.springframework.data.repository.core.support.PersistentEntity<java.lang.Object,org.springframework.data.repository.core.support.SamplePersistentProperty> ) ; assertThat ( org.springframework.data.repository.core.support.PersistentEntityInformation<java.lang.Object,java.io.Serializable> . getId ( new org.springframework.data.repository.core.support.PersistentEntityInformationUnitTests.EntityWithoutId ( ) ) ) . isNotPresent ( ) ; }  <METHOD_END>
