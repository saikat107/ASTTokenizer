<METHOD_START> @ Test public void void ( ) { ManagedList org.springframework.beans.factory.support.ManagedList = new ManagedList ( ) ; org.springframework.beans.factory.support.ManagedList . add ( STRING ) ; org.springframework.beans.factory.support.ManagedList . add ( STRING ) ; ManagedList org.springframework.beans.factory.support.ManagedList = new ManagedList ( ) ; org.springframework.beans.factory.support.ManagedList . add ( STRING ) ; org.springframework.beans.factory.support.ManagedList . setMergeEnabled ( true ) ; java.util.List java.util.List = org.springframework.beans.factory.support.ManagedList . merge ( org.springframework.beans.factory.support.ManagedList ) ; assertEquals ( STRING , NUMBER , java.util.List . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ManagedList org.springframework.beans.factory.support.ManagedList = new ManagedList ( ) ; org.springframework.beans.factory.support.ManagedList . add ( STRING ) ; org.springframework.beans.factory.support.ManagedList . setMergeEnabled ( true ) ; assertSame ( org.springframework.beans.factory.support.ManagedList , org.springframework.beans.factory.support.ManagedList . merge ( null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) { ManagedList org.springframework.beans.factory.support.ManagedList = new ManagedList ( ) ; org.springframework.beans.factory.support.ManagedList . merge ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { ManagedList org.springframework.beans.factory.support.ManagedList = new ManagedList ( ) ; org.springframework.beans.factory.support.ManagedList . add ( STRING ) ; org.springframework.beans.factory.support.ManagedList . setMergeEnabled ( true ) ; org.springframework.beans.factory.support.ManagedList . merge ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ManagedList org.springframework.beans.factory.support.ManagedList = new ManagedList ( ) ; org.springframework.beans.factory.support.ManagedList . add ( STRING ) ; org.springframework.beans.factory.support.ManagedList . add ( STRING ) ; ManagedList org.springframework.beans.factory.support.ManagedList = new ManagedList ( ) ; org.springframework.beans.factory.support.ManagedList . setMergeEnabled ( true ) ; java.util.List java.util.List = org.springframework.beans.factory.support.ManagedList . merge ( org.springframework.beans.factory.support.ManagedList ) ; assertEquals ( STRING , NUMBER , java.util.List . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ManagedList org.springframework.beans.factory.support.ManagedList = new ManagedList ( ) ; org.springframework.beans.factory.support.ManagedList . add ( STRING ) ; org.springframework.beans.factory.support.ManagedList . add ( STRING ) ; ManagedList org.springframework.beans.factory.support.ManagedList = new ManagedList ( ) ; org.springframework.beans.factory.support.ManagedList . add ( STRING ) ; org.springframework.beans.factory.support.ManagedList . setMergeEnabled ( true ) ; java.util.List java.util.List = org.springframework.beans.factory.support.ManagedList . merge ( org.springframework.beans.factory.support.ManagedList ) ; assertEquals ( STRING , NUMBER , java.util.List . int ( ) ) ; }  <METHOD_END>
