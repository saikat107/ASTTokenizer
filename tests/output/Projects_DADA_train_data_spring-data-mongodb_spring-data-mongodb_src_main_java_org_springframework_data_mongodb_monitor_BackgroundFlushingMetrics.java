<METHOD_START> public void ( MongoClient org.springframework.data.mongodb.monitor.MongoClient ) { super( org.springframework.data.mongodb.monitor.MongoClient ); }  <METHOD_END>
<METHOD_START> @ ManagedMetric ( metricType = MetricType . COUNTER , displayName = STRING ) public int int ( ) { return java.lang.Integer ( STRING , java . lang . java.lang.Integer .class ) ; }  <METHOD_END>
<METHOD_START> @ ManagedMetric ( metricType = MetricType . COUNTER , displayName = STRING , unit = STRING ) public int int ( ) { return java.lang.Integer ( STRING , java . lang . java.lang.Integer .class ) ; }  <METHOD_END>
<METHOD_START> @ ManagedMetric ( metricType = MetricType . GAUGE , displayName = STRING , unit = STRING ) public double double ( ) { return java.lang.Double ( STRING , java . lang . java.lang.Double .class ) ; }  <METHOD_END>
<METHOD_START> @ ManagedMetric ( metricType = MetricType . GAUGE , displayName = STRING , unit = STRING ) public int int ( ) { return java.lang.Integer ( STRING , java . lang . java.lang.Integer .class ) ; }  <METHOD_END>
<METHOD_START> @ ManagedMetric ( metricType = MetricType . GAUGE , displayName = STRING ) public java.util.Date java.util.Date ( ) { return java.util.Date ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private < T > T T ( java.lang.String java.lang.String , java.lang.Class<T> < T > java.lang.Class<T> ) { Document org.springframework.data.mongodb.monitor.Document = ( Document ) getServerStatus ( ) . get ( STRING ) ; return ( T ) org.springframework.data.mongodb.monitor.Document . get ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private java.util.Date java.util.Date ( ) { Document org.springframework.data.mongodb.monitor.Document = ( Document ) getServerStatus ( ) . get ( STRING ) ; java.util.Date java.util.Date = ( java.util.Date ) org.springframework.data.mongodb.monitor.Document . get ( STRING ) ; return java.util.Date ; }  <METHOD_END>
