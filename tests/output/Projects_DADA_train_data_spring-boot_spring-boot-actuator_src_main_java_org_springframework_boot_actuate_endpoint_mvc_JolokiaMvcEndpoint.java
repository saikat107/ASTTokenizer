<METHOD_START> public void ( ) { super( STRING , STRING , true ); this . org.springframework.boot.actuate.endpoint.mvc.ServletWrappingController . setServletClass ( AgentServlet .class ) ; this . org.springframework.boot.actuate.endpoint.mvc.ServletWrappingController . setServletName ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { this . org.springframework.boot.actuate.endpoint.mvc.ServletWrappingController . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContext org.springframework.boot.actuate.endpoint.mvc.ServletContext ) { this . org.springframework.boot.actuate.endpoint.mvc.ServletWrappingController . setServletContext ( org.springframework.boot.actuate.endpoint.mvc.ServletContext ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Properties java.util.Properties ) { this . org.springframework.boot.actuate.endpoint.mvc.ServletWrappingController . setInitParameters ( java.util.Properties ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( ApplicationContext org.springframework.boot.actuate.endpoint.mvc.ApplicationContext )			throws org.springframework.boot.actuate.endpoint.mvc.BeansException { this . org.springframework.boot.actuate.endpoint.mvc.ServletWrappingController . setApplicationContext ( org.springframework.boot.actuate.endpoint.mvc.ApplicationContext ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.boot.actuate.endpoint.mvc.ServletWrappingController . destroy ( ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( STRING ) public org.springframework.boot.actuate.endpoint.mvc.ModelAndView org.springframework.boot.actuate.endpoint.mvc.ModelAndView ( HttpServletRequest org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , HttpServletResponse org.springframework.boot.actuate.endpoint.mvc.HttpServletResponse )			throws java.lang.Exception { return this . org.springframework.boot.actuate.endpoint.mvc.ServletWrappingController . handleRequest ( new org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.PathStripper ( org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , getPath ( ) ) , org.springframework.boot.actuate.endpoint.mvc.HttpServletResponse ) ; }  <METHOD_END>
<METHOD_START> void ( HttpServletRequest org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , java.lang.String java.lang.String ) { super( org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest ); this . java.lang.String = java.lang.String ; this . org.springframework.boot.actuate.endpoint.mvc.UrlPathHelper = new UrlPathHelper ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = this . org.springframework.boot.actuate.endpoint.mvc.UrlPathHelper . decodeRequestString ( ( HttpServletRequest ) getRequest ( ) , super. getRequestURI ( ) ) ; if ( java.lang.String . boolean ( this . java.lang.String ) ) { java.lang.String = java.lang.String . java.lang.String ( java.lang.String . int ( this . java.lang.String ) + this . java.lang.String . int ( ) ) ; } int int = java.lang.String . int ( STRING ) ; if ( int > NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) ; } while ( java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER ) ; } return java.lang.String ; }  <METHOD_END>
