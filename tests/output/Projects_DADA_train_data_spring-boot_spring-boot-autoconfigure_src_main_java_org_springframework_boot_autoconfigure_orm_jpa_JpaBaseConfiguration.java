<METHOD_START> protected void ( javax.sql.DataSource javax.sql.DataSource , JpaProperties org.springframework.boot.autoconfigure.orm.jpa.JpaProperties , ObjectProvider < JtaTransactionManager > org.springframework.boot.autoconfigure.orm.jpa.ObjectProvider<org.springframework.boot.autoconfigure.orm.jpa.JtaTransactionManager> , ObjectProvider < TransactionManagerCustomizers > org.springframework.boot.autoconfigure.orm.jpa.ObjectProvider<org.springframework.boot.autoconfigure.orm.jpa.TransactionManagerCustomizers> ) { this . javax.sql.DataSource = javax.sql.DataSource ; this . org.springframework.boot.autoconfigure.orm.jpa.JpaProperties = org.springframework.boot.autoconfigure.orm.jpa.JpaProperties ; this . org.springframework.boot.autoconfigure.orm.jpa.JtaTransactionManager = org.springframework.boot.autoconfigure.orm.jpa.ObjectProvider<org.springframework.boot.autoconfigure.orm.jpa.JtaTransactionManager> . getIfAvailable ( ) ; this . org.springframework.boot.autoconfigure.orm.jpa.TransactionManagerCustomizers = org.springframework.boot.autoconfigure.orm.jpa.ObjectProvider<org.springframework.boot.autoconfigure.orm.jpa.TransactionManagerCustomizers> . getIfAvailable ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( PlatformTransactionManager .class ) public org.springframework.boot.autoconfigure.orm.jpa.PlatformTransactionManager org.springframework.boot.autoconfigure.orm.jpa.PlatformTransactionManager ( ) { JpaTransactionManager org.springframework.boot.autoconfigure.orm.jpa.JpaTransactionManager = new JpaTransactionManager ( ) ; if ( this . org.springframework.boot.autoconfigure.orm.jpa.TransactionManagerCustomizers != null ) { this . org.springframework.boot.autoconfigure.orm.jpa.TransactionManagerCustomizers . customize ( org.springframework.boot.autoconfigure.orm.jpa.JpaTransactionManager ) ; } return org.springframework.boot.autoconfigure.orm.jpa.JpaTransactionManager ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public org.springframework.boot.autoconfigure.orm.jpa.JpaVendorAdapter org.springframework.boot.autoconfigure.orm.jpa.JpaVendorAdapter ( ) { AbstractJpaVendorAdapter org.springframework.boot.autoconfigure.orm.jpa.AbstractJpaVendorAdapter = org.springframework.boot.autoconfigure.orm.jpa.AbstractJpaVendorAdapter ( ) ; org.springframework.boot.autoconfigure.orm.jpa.AbstractJpaVendorAdapter . setShowSql ( this . org.springframework.boot.autoconfigure.orm.jpa.JpaProperties . isShowSql ( ) ) ; org.springframework.boot.autoconfigure.orm.jpa.AbstractJpaVendorAdapter . setDatabase ( this . org.springframework.boot.autoconfigure.orm.jpa.JpaProperties . determineDatabase ( this . javax.sql.DataSource ) ) ; org.springframework.boot.autoconfigure.orm.jpa.AbstractJpaVendorAdapter . setDatabasePlatform ( this . org.springframework.boot.autoconfigure.orm.jpa.JpaProperties . getDatabasePlatform ( ) ) ; org.springframework.boot.autoconfigure.orm.jpa.AbstractJpaVendorAdapter . setGenerateDdl ( this . org.springframework.boot.autoconfigure.orm.jpa.JpaProperties . isGenerateDdl ( ) ) ; return org.springframework.boot.autoconfigure.orm.jpa.AbstractJpaVendorAdapter ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilder org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilder ( JpaVendorAdapter org.springframework.boot.autoconfigure.orm.jpa.JpaVendorAdapter , ObjectProvider < PersistenceUnitManager > org.springframework.boot.autoconfigure.orm.jpa.ObjectProvider<org.springframework.boot.autoconfigure.orm.jpa.PersistenceUnitManager> ) { EntityManagerFactoryBuilder org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilder = new EntityManagerFactoryBuilder ( org.springframework.boot.autoconfigure.orm.jpa.JpaVendorAdapter , this . org.springframework.boot.autoconfigure.orm.jpa.JpaProperties . getProperties ( ) , org.springframework.boot.autoconfigure.orm.jpa.ObjectProvider<org.springframework.boot.autoconfigure.orm.jpa.PersistenceUnitManager> . getIfAvailable ( ) ) ; org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilder . setCallback ( EntityManagerFactoryBuilder.EntityManagerFactoryBeanCallback ( ) ) ; return org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilder ; }  <METHOD_END>
<METHOD_START> @ Bean @ Primary @ ConditionalOnMissingBean ( { LocalContainerEntityManagerFactoryBean .class , EntityManagerFactory .class } ) public org.springframework.boot.autoconfigure.orm.jpa.LocalContainerEntityManagerFactoryBean org.springframework.boot.autoconfigure.orm.jpa.LocalContainerEntityManagerFactoryBean ( EntityManagerFactoryBuilder org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilder ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = java.util.Map<java.lang.String,java.lang.Object> ( ) ; void ( java.util.Map<java.lang.String,java.lang.Object> ) ; return org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilder . dataSource ( this . javax.sql.DataSource ) . packages ( java.lang.String[] ( ) ) . properties ( java.util.Map<java.lang.String,java.lang.Object> ) . jta ( boolean ( ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.boot.autoconfigure.orm.jpa.AbstractJpaVendorAdapter org.springframework.boot.autoconfigure.orm.jpa.AbstractJpaVendorAdapter ( )  <METHOD_END>
<METHOD_START> protected abstract java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( )  <METHOD_END>
<METHOD_START> protected void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) {	}  <METHOD_END>
<METHOD_START> protected EntityManagerFactoryBuilder . EntityManagerFactoryBuilder.EntityManagerFactoryBeanCallback EntityManagerFactoryBuilder.EntityManagerFactoryBeanCallback ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected java.lang.String [] java.lang.String[] ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = EntityScanPackages . get ( this . org.springframework.boot.autoconfigure.orm.jpa.ConfigurableListableBeanFactory ) . getPackageNames ( ) ; if ( java.util.List<java.lang.String> . boolean ( ) && AutoConfigurationPackages . has ( this . org.springframework.boot.autoconfigure.orm.jpa.ConfigurableListableBeanFactory ) ) { java.util.List<java.lang.String> = AutoConfigurationPackages . get ( this . org.springframework.boot.autoconfigure.orm.jpa.ConfigurableListableBeanFactory ) ; } return java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.boot.autoconfigure.orm.jpa.JtaTransactionManager org.springframework.boot.autoconfigure.orm.jpa.JtaTransactionManager ( ) { return this . org.springframework.boot.autoconfigure.orm.jpa.JtaTransactionManager ; }  <METHOD_END>
<METHOD_START> protected final boolean boolean ( ) { return ( this . org.springframework.boot.autoconfigure.orm.jpa.JtaTransactionManager != null ) ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.boot.autoconfigure.orm.jpa.JpaProperties org.springframework.boot.autoconfigure.orm.jpa.JpaProperties ( ) { return this . org.springframework.boot.autoconfigure.orm.jpa.JpaProperties ; }  <METHOD_END>
<METHOD_START> protected final javax.sql.DataSource javax.sql.DataSource ( ) { return this . javax.sql.DataSource ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.boot.autoconfigure.orm.jpa.BeanFactory ) throws org.springframework.boot.autoconfigure.orm.jpa.BeansException { this . org.springframework.boot.autoconfigure.orm.jpa.ConfigurableListableBeanFactory = ( ConfigurableListableBeanFactory ) org.springframework.boot.autoconfigure.orm.jpa.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.orm.jpa.OpenEntityManagerInViewInterceptor org.springframework.boot.autoconfigure.orm.jpa.OpenEntityManagerInViewInterceptor ( ) { return new OpenEntityManagerInViewInterceptor ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( InterceptorRegistry org.springframework.boot.autoconfigure.orm.jpa.InterceptorRegistry ) { org.springframework.boot.autoconfigure.orm.jpa.InterceptorRegistry . addWebRequestInterceptor ( org.springframework.boot.autoconfigure.orm.jpa.OpenEntityManagerInViewInterceptor ( ) ) ; }  <METHOD_END>
