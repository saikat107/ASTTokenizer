<METHOD_START> public void ( ErrorAttributes org.springframework.boot.autoconfigure.web.servlet.error.ErrorAttributes ) { this( org.springframework.boot.autoconfigure.web.servlet.error.ErrorAttributes , null ); }  <METHOD_END>
<METHOD_START> public void ( ErrorAttributes org.springframework.boot.autoconfigure.web.servlet.error.ErrorAttributes , java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> < ErrorViewResolver > java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ) { Assert . notNull ( org.springframework.boot.autoconfigure.web.servlet.error.ErrorAttributes , STRING ) ; this . org.springframework.boot.autoconfigure.web.servlet.error.ErrorAttributes = org.springframework.boot.autoconfigure.web.servlet.error.ErrorAttributes ; this . java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> = java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ( java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> < ErrorViewResolver > java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ( java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> < ErrorViewResolver > java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ) { java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> < ErrorViewResolver > java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> = new java.util.ArrayList<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> <> ( ) ; if ( java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> != null ) { java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> . addAll ( java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ) ; AnnotationAwareOrderComparator . sortIfNecessary ( java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ) ; } return java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ; }  <METHOD_END>
<METHOD_START> protected java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( HttpServletRequest org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , boolean boolean ) { RequestAttributes org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes = new ServletRequestAttributes ( org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest ) ; return this . org.springframework.boot.autoconfigure.web.servlet.error.ErrorAttributes . getErrorAttributes ( org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes , boolean ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( HttpServletRequest org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest ) { java.lang.String java.lang.String = org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest . getParameter ( STRING ) ; if ( java.lang.String == null ) { return false ; } return ! STRING . boolean ( java.lang.String . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.boot.autoconfigure.web.servlet.error.HttpStatus org.springframework.boot.autoconfigure.web.servlet.error.HttpStatus ( HttpServletRequest org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest ) { java.lang.Integer java.lang.Integer = ( java.lang.Integer ) org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest . getAttribute ( STRING ) ; if ( java.lang.Integer == null ) { return HttpStatus . INTERNAL_SERVER_ERROR ; } try { return HttpStatus . valueOf ( java.lang.Integer ) ; } catch ( java.lang.Exception java.lang.Exception ) { return HttpStatus . INTERNAL_SERVER_ERROR ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView ( HttpServletRequest org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , HttpServletResponse org.springframework.boot.autoconfigure.web.servlet.error.HttpServletResponse , HttpStatus org.springframework.boot.autoconfigure.web.servlet.error.HttpStatus , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { for ( ErrorViewResolver org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver : this . java.util.List<org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver> ) { ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView = org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver . resolveErrorView ( org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , org.springframework.boot.autoconfigure.web.servlet.error.HttpStatus , java.util.Map<java.lang.String,java.lang.Object> ) ; if ( org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView != null ) { return org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView ; } } return null ; }  <METHOD_END>
