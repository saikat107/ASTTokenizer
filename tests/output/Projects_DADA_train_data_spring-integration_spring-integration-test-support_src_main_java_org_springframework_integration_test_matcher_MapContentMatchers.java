<METHOD_START> void ( T T , V V ) { this( T , IsEqual . equalTo ( V ) ); }  <METHOD_END>
<METHOD_START> void ( T T , Matcher < V > org.springframework.integration.test.matcher.Matcher<V> ) { super(); this . T = T ; this . org.springframework.integration.test.matcher.Matcher<V> = org.springframework.integration.test.matcher.Matcher<V> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Map<? super T,? super V> < ? super T , ? super V > java.util.Map<? super T,? super V> ) { return java.util.Map<,> . boolean ( T ) && org.springframework.integration.test.matcher.Matcher<V> . matches ( java.util.Map<,> . get ( T ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Description org.springframework.integration.test.matcher.Description ) { org.springframework.integration.test.matcher.Description . appendText ( STRING ) . appendValue ( T ) . appendText ( STRING ) . appendDescriptionOf ( org.springframework.integration.test.matcher.Matcher<V> ) ; }  <METHOD_END>
<METHOD_START> @ Factory public static < T , V > org.springframework.integration.test.matcher.Matcher<java.util.Map<? super T,? super V>> < java.util.Map<? super T,? super V> < ? super T , ? super V > > org.springframework.integration.test.matcher.Matcher<java.util.Map<? super T,? super V>> ( T T , V V ) { return new org.springframework.integration.test.matcher.MapContentMatchers<T,V> < T , V > ( T , V ) ; }  <METHOD_END>
<METHOD_START> @ Factory public static < T , V > org.springframework.integration.test.matcher.Matcher<java.util.Map<? super T,? super V>> < java.util.Map<? super T,? super V> < ? super T , ? super V > > org.springframework.integration.test.matcher.Matcher<java.util.Map<? super T,? super V>> ( T T , Matcher < V > org.springframework.integration.test.matcher.Matcher<V> ) { return new org.springframework.integration.test.matcher.MapContentMatchers<T,V> < T , V > ( T , org.springframework.integration.test.matcher.Matcher<V> ) ; }  <METHOD_END>
<METHOD_START> @ Factory @ java.lang.SuppressWarnings ( STRING ) public static < T , V > org.springframework.integration.test.matcher.Matcher<java.util.Map<? super T,? super V>> < java.util.Map<? super T,? super V> < ? super T , ? super V > > org.springframework.integration.test.matcher.Matcher<java.util.Map<? super T,? super V>> ( T T ) { return new org.springframework.integration.test.matcher.MapContentMatchers<T,V> < T , V > ( T , ( Matcher < V > ) anything ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Factory @ java.lang.SuppressWarnings ( { STRING , STRING } ) public static < T , V > org.springframework.integration.test.matcher.Matcher<java.util.Map<? super T,? super V>> < java.util.Map<? super T,? super V> < ? super T , ? super V > > org.springframework.integration.test.matcher.Matcher<java.util.Map<? super T,? super V>> ( java.util.Map<T,V> < T , V > java.util.Map<T,V> ) { java.util.List<org.springframework.integration.test.matcher.Matcher<? extends java.util.Map<? super T,? super V>>> < Matcher < ? extends java.util.Map<? super T,? super V> < ? super T , ? super V > > > java.util.List<org.springframework.integration.test.matcher.Matcher<? extends java.util.Map<? super T,? super V>>> = new java.util.ArrayList<org.springframework.integration.test.matcher.Matcher<? extends java.util.Map<? super T,? super V>>> < Matcher < ? extends java.util.Map<? super T,? super V> < ? super T , ? super V > > > ( java.util.Map<T,V> . int ( ) ) ; for ( java.util.Map . java.util.Map.Entry<T,V> < T , V > java.util.Map.Entry<T,V> : java.util.Map<T,V> . java.util.Set<java.util.Map.Entry<T,V>> ( ) ) { final V V = java.util.Map.Entry<T,V> . V ( ) ; if ( V instanceof Matcher < ? > ) { java.util.List<org.springframework.integration.test.matcher.Matcher<? extends java.util.Map<? super T,? super V>>> . add ( org.springframework.integration.test.matcher.Matcher<java.util.Map<? super T,? super V>> ( java.util.Map.Entry<T,V> . T ( ) , ( Matcher < V > ) V ) ) ; } else { java.util.List<org.springframework.integration.test.matcher.Matcher<? extends java.util.Map<? super T,? super V>>> . add ( org.springframework.integration.test.matcher.Matcher<java.util.Map<? super T,? super V>> ( java.util.Map.Entry<T,V> . T ( ) , V ) ) ; } } return new AllOf ( java.util.List<org.springframework.integration.test.matcher.Matcher<? extends java.util.Map<? super T,? super V>>> ) ; }  <METHOD_END>
