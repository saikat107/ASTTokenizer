<METHOD_START> @ Before public void void ( ) java.lang.Exception { Resource org.springframework.boot.env.Resource = new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.boot.env.OriginTrackedYamlLoaderTests> ( ) ) ; this . org.springframework.boot.env.OriginTrackedYamlLoader = new OriginTrackedYamlLoader ( org.springframework.boot.env.Resource , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Resource org.springframework.boot.env.Resource = new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.boot.env.OriginTrackedYamlLoaderTests> ( ) ) ; this . org.springframework.boot.env.OriginTrackedYamlLoader = new OriginTrackedYamlLoader ( org.springframework.boot.env.Resource , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.env.OriginTrackedYamlLoader . load ( ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) . java.lang.String ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.env.OriginTrackedValue . toString ( ) ) . isEqualTo ( STRING ) ; assertThat ( java.lang.String ( org.springframework.boot.env.OriginTrackedValue ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.env.OriginTrackedValue org.springframework.boot.env.OriginTrackedValue ( java.lang.String java.lang.String ) { if ( this . java.util.Map<java.lang.String,java.lang.Object> == null ) { this . java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.env.OriginTrackedYamlLoader . load ( ) ; } return ( OriginTrackedValue ) this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( OriginTrackedValue org.springframework.boot.env.OriginTrackedValue ) { return ( ( TextResourcePropertyOrigin ) org.springframework.boot.env.OriginTrackedValue . getOrigin ( ) ) . getLocation ( ) . toString ( ) ; }  <METHOD_END>
