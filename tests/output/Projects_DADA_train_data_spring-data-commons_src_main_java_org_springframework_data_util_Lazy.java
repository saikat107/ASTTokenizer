<METHOD_START> public static < T > org.springframework.data.util.Lazy<T> < T > org.springframework.data.util.Lazy<T> ( java.util.function.Supplier<T> < T > java.util.function.Supplier<T> ) { return new org.springframework.data.util.Lazy <> ( java.util.function.Supplier<T> ) ; }  <METHOD_END>
<METHOD_START> public T T ( ) { if ( java.util.Optional<T> == null ) { this . java.util.Optional<T> = java.util.Optional . java.util.Optional<T> ( java.util.function.Supplier<T> . T ( ) ) ; } return java.util.Optional<T> . T ( null ) ; }  <METHOD_END>
<METHOD_START> public < S > org.springframework.data.util.Lazy<S> < S > org.springframework.data.util.Lazy<S> ( java.util.function.Function<T,S> < T , S > java.util.function.Function<T,S> ) { Assert . notNull ( java.util.function.Function<T,S> , STRING ) ; return org.springframework.data.util.Lazy . org.springframework.data.util.Lazy<S> ( ( ) java.util.function.Function<T,S> . S ( T ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public < S > org.springframework.data.util.Lazy<S> < S > org.springframework.data.util.Lazy<S> ( java.util.function.Function<T,org.springframework.data.util.Lazy<S>> < T , org.springframework.data.util.Lazy<S> < S > > java.util.function.Function<T,org.springframework.data.util.Lazy<S>> ) { Assert . notNull ( java.util.function.Function<T,org.springframework.data.util.Lazy<S>> , STRING ) ; return org.springframework.data.util.Lazy . org.springframework.data.util.Lazy<S> ( ( ) java.util.function.Function<T,org.springframework.data.util.Lazy<S>> . org.springframework.data.util.Lazy<S> ( T ( ) ) . S ( ) ) ; }  <METHOD_END>
