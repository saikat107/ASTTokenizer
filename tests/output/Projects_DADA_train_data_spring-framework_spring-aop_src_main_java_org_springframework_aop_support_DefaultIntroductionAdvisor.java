<METHOD_START> public void ( Advice org.springframework.aop.support.Advice ) { this( org.springframework.aop.support.Advice , ( org.springframework.aop.support.Advice instanceof IntroductionInfo ? ( IntroductionInfo ) org.springframework.aop.support.Advice : null ) ); }  <METHOD_END>
<METHOD_START> public void ( Advice org.springframework.aop.support.Advice , IntroductionInfo org.springframework.aop.support.IntroductionInfo ) { Assert . notNull ( org.springframework.aop.support.Advice , STRING ) ; this . org.springframework.aop.support.Advice = org.springframework.aop.support.Advice ; if ( org.springframework.aop.support.IntroductionInfo != null ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.aop.support.IntroductionInfo . getInterfaces ( ) ; if ( java.lang.Class<?>[] . int == NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<?>[] ) { void ( java.lang.Class<> ) ; } } }  <METHOD_END>
<METHOD_START> public void ( DynamicIntroductionAdvice org.springframework.aop.support.DynamicIntroductionAdvice , java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( org.springframework.aop.support.DynamicIntroductionAdvice , STRING ) ; this . org.springframework.aop.support.Advice = org.springframework.aop.support.DynamicIntroductionAdvice ; void ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; if ( ! java.lang.Class<> . boolean ( ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Class<> . java.lang.String ( ) + STRING ) ; } this . java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( ) { return this . java.util.Set<java.lang.Class<?>> . java.lang.Class<?>[] ( new java.lang.Class<?> < ? > [ this . java.util.Set<java.lang.Class<?>> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.IllegalArgumentException { for ( java.lang.Class<?> < ? > java.lang.Class<?> : this . java.util.Set<java.lang.Class<?>> ) { if ( this . org.springframework.aop.support.Advice instanceof DynamicIntroductionAdvice && ! ( ( DynamicIntroductionAdvice ) this . org.springframework.aop.support.Advice ) . implementsInterface ( java.lang.Class<> ) ) { throw new java.lang.IllegalArgumentException ( STRING + this . org.springframework.aop.support.Advice + STRING + STRING + java.lang.Class<> . java.lang.String ( ) + STRING ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.support.Advice org.springframework.aop.support.Advice ( ) { return this . org.springframework.aop.support.Advice ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.support.ClassFilter org.springframework.aop.support.ClassFilter ( ) { return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.aop.support.DefaultIntroductionAdvisor ) ) { return false ; } org.springframework.aop.support.DefaultIntroductionAdvisor org.springframework.aop.support.DefaultIntroductionAdvisor = ( org.springframework.aop.support.DefaultIntroductionAdvisor ) java.lang.Object ; return ( this . org.springframework.aop.support.Advice . equals ( org.springframework.aop.support.DefaultIntroductionAdvisor . org.springframework.aop.support.Advice ) && this . java.util.Set<java.lang.Class<?>> . boolean ( org.springframework.aop.support.DefaultIntroductionAdvisor . java.util.Set<java.lang.Class<?>> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.aop.support.Advice . hashCode ( ) * NUMBER + this . java.util.Set<java.lang.Class<?>> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ClassUtils . getShortName ( java.lang.Class<? extends org.springframework.aop.support.DefaultIntroductionAdvisor> ( ) ) + STRING + this . org.springframework.aop.support.Advice + STRING + ClassUtils . classNamesToString ( this . java.util.Set<java.lang.Class<?>> ) ; }  <METHOD_END>
