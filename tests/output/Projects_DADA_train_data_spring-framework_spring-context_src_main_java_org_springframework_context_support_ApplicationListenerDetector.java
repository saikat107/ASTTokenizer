<METHOD_START> public void ( AbstractApplicationContext org.springframework.context.support.AbstractApplicationContext ) { this . org.springframework.context.support.AbstractApplicationContext = org.springframework.context.support.AbstractApplicationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( RootBeanDefinition org.springframework.context.support.RootBeanDefinition , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { if ( this . org.springframework.context.support.AbstractApplicationContext != null ) { this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( java.lang.String , org.springframework.context.support.RootBeanDefinition . isSingleton ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { if ( this . org.springframework.context.support.AbstractApplicationContext != null && java.lang.Object instanceof ApplicationListener ) { java.lang.Boolean java.lang.Boolean = this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( java.lang.String ) ; if ( java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.Boolean ) ) { this . org.springframework.context.support.AbstractApplicationContext . addApplicationListener ( ( ApplicationListener < ? > ) java.lang.Object ) ; } else if ( java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.Boolean ) ) { if ( org.springframework.context.support.Log . isWarnEnabled ( ) && ! this . org.springframework.context.support.AbstractApplicationContext . containsBean ( java.lang.String ) ) { org.springframework.context.support.Log . warn ( STRING + java.lang.String + STRING + STRING + STRING + STRING ) ; } this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( java.lang.String ) ; } } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { if ( this . org.springframework.context.support.AbstractApplicationContext != null && java.lang.Object instanceof ApplicationListener ) { ApplicationEventMulticaster org.springframework.context.support.ApplicationEventMulticaster = this . org.springframework.context.support.AbstractApplicationContext . getApplicationEventMulticaster ( ) ; org.springframework.context.support.ApplicationEventMulticaster . removeApplicationListener ( ( ApplicationListener < ? > ) java.lang.Object ) ; org.springframework.context.support.ApplicationEventMulticaster . removeApplicationListenerBean ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( java.lang.Object instanceof ApplicationListener ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( this == java.lang.Object || ( java.lang.Object instanceof org.springframework.context.support.ApplicationListenerDetector && this . org.springframework.context.support.AbstractApplicationContext == ( ( org.springframework.context.support.ApplicationListenerDetector ) java.lang.Object ) . org.springframework.context.support.AbstractApplicationContext ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ObjectUtils . nullSafeHashCode ( this . org.springframework.context.support.AbstractApplicationContext ) ; }  <METHOD_END>
