<METHOD_START> @ java.lang.Override protected java.net.URLConnection java.net.URLConnection ( java.net.URL java.net.URL ) throws java.io.IOException { return null ; }  <METHOD_END>
<METHOD_START> private void ( java.net.URL java.net.URL , JarFile org.springframework.boot.loader.jar.JarFile , org.springframework.boot.loader.jar.JarURLConnection.JarEntryName org.springframework.boot.loader.jar.JarURLConnection.JarEntryName )			throws java.io.IOException { super( java.net.URL ); this . java.net.URL = java.net.URL ; this . org.springframework.boot.loader.jar.JarFile = org.springframework.boot.loader.jar.JarFile ; this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName = org.springframework.boot.loader.jar.JarURLConnection.JarEntryName ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.io.IOException { if ( this . org.springframework.boot.loader.jar.JarFile == null ) { throw java.io.FileNotFoundException ; } if ( ! this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . boolean ( ) && this . org.springframework.boot.loader.jar.JarEntry == null ) { this . org.springframework.boot.loader.jar.JarEntry = this . org.springframework.boot.loader.jar.JarFile . getJarEntry ( java.lang.String ( ) ) ; if ( this . org.springframework.boot.loader.jar.JarEntry == null ) { void ( this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName , this . org.springframework.boot.loader.jar.JarFile ) ; } } this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.loader.jar.JarFile org.springframework.boot.loader.jar.JarFile ( ) java.io.IOException { void ( ) ; return this . org.springframework.boot.loader.jar.JarFile ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URL java.net.URL ( ) { if ( this . org.springframework.boot.loader.jar.JarFile == null ) { throw java.lang.IllegalStateException ; } if ( this . java.net.URL == null ) { this . java.net.URL = java.net.URL ( ) ; } return this . java.net.URL ; }  <METHOD_END>
<METHOD_START> private java.net.URL java.net.URL ( ) { try { java.lang.String java.lang.String = this . org.springframework.boot.loader.jar.JarFile . getUrl ( ) . getFile ( ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - java.lang.String . int ( ) ) ; } if ( java.lang.String . int ( java.lang.String ) == - NUMBER ) { return new java.net.URL ( java.lang.String ) ; } return new java.net.URL ( STRING + java.lang.String ) ; } catch ( java.net.MalformedURLException java.net.MalformedURLException ) { throw new java.lang.IllegalStateException ( java.net.MalformedURLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.loader.jar.JarEntry org.springframework.boot.loader.jar.JarEntry ( ) java.io.IOException { if ( this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName == null || this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . boolean ( ) ) { return null ; } void ( ) ; return this . org.springframework.boot.loader.jar.JarEntry ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { if ( this . org.springframework.boot.loader.jar.JarFile == null ) { throw java.lang.IllegalStateException ; } return this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.InputStream java.io.InputStream ( ) java.io.IOException { if ( this . org.springframework.boot.loader.jar.JarFile == null ) { throw java.io.FileNotFoundException ; } if ( this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . boolean ( ) && this . org.springframework.boot.loader.jar.JarFile . getType ( ) == JarFile . JarFileType . DIRECT ) { throw new java.io.IOException ( STRING ) ; } void ( ) ; java.io.InputStream java.io.InputStream = ( this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . boolean ( ) ? this . org.springframework.boot.loader.jar.JarFile . getData ( ) . getInputStream ( ResourceAccess . ONCE ) : this . org.springframework.boot.loader.jar.JarFile . getInputStream ( this . org.springframework.boot.loader.jar.JarEntry ) ) ; if ( java.io.InputStream == null ) { void ( this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName , this . org.springframework.boot.loader.jar.JarFile ) ; } return java.io.InputStream ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Object java.lang.Object , JarFile org.springframework.boot.loader.jar.JarFile )			throws java.io.FileNotFoundException { if ( java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.ThreadLocal<java.lang.Boolean> . java.lang.Boolean ( ) ) ) { throw java.io.FileNotFoundException ; } throw new java.io.FileNotFoundException ( STRING + java.lang.Object + STRING + org.springframework.boot.loader.jar.JarFile . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { if ( this . org.springframework.boot.loader.jar.JarFile == null ) { return - NUMBER ; } try { if ( this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . boolean ( ) ) { return this . org.springframework.boot.loader.jar.JarFile . size ( ) ; } JarEntry org.springframework.boot.loader.jar.JarEntry = org.springframework.boot.loader.jar.JarEntry ( ) ; return ( org.springframework.boot.loader.jar.JarEntry == null ? - NUMBER : ( int ) org.springframework.boot.loader.jar.JarEntry . getSize ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { return - NUMBER ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) java.io.IOException { void ( ) ; return ( this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . boolean ( ) ? this . org.springframework.boot.loader.jar.JarFile : super. java.lang.Object ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName == null ? null : this . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.security.Permission java.security.Permission ( ) java.io.IOException { if ( this . org.springframework.boot.loader.jar.JarFile == null ) { throw java.io.FileNotFoundException ; } if ( this . java.security.Permission == null ) { this . java.security.Permission = new java.io.FilePermission ( this . org.springframework.boot.loader.jar.JarFile . getRootJarFile ( ) . getFile ( ) . getPath ( ) , java.lang.String ) ; } return this . java.security.Permission ; }  <METHOD_END>
<METHOD_START> static void void ( boolean boolean ) { org.springframework.boot.loader.jar.JarURLConnection . java.lang.ThreadLocal<java.lang.Boolean> . void ( boolean ) ; }  <METHOD_END>
<METHOD_START> static org.springframework.boot.loader.jar.JarURLConnection org.springframework.boot.loader.jar.JarURLConnection ( java.net.URL java.net.URL , JarFile org.springframework.boot.loader.jar.JarFile ) throws java.io.IOException { java.lang.String java.lang.String = java.lang.String ( java.net.URL , org.springframework.boot.loader.jar.JarFile . getPathFromRoot ( ) ) ; int int ; int int = NUMBER ; while ( ( int = java.lang.String . int ( java.lang.String , int ) ) > NUMBER ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( int , int ) ; JarEntry org.springframework.boot.loader.jar.JarEntry = org.springframework.boot.loader.jar.JarFile . getJarEntry ( java.lang.String ) ; if ( org.springframework.boot.loader.jar.JarEntry == null ) { return org.springframework.boot.loader.jar.JarURLConnection . org.springframework.boot.loader.jar.JarURLConnection ( org.springframework.boot.loader.jar.JarFile , org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName ( java.lang.String ) ) ; } org.springframework.boot.loader.jar.JarFile = org.springframework.boot.loader.jar.JarFile . getNestedJarFile ( org.springframework.boot.loader.jar.JarEntry ) ; int += int + java.lang.String . int ( ) ; } org.springframework.boot.loader.jar.JarURLConnection.JarEntryName org.springframework.boot.loader.jar.JarURLConnection.JarEntryName = org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . org.springframework.boot.loader.jar.JarURLConnection.JarEntryName ( java.lang.String , int ) ; if ( java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.ThreadLocal<java.lang.Boolean> . java.lang.Boolean ( ) ) ) { if ( ! org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . boolean ( ) && ! org.springframework.boot.loader.jar.JarFile . containsEntry ( org.springframework.boot.loader.jar.JarURLConnection.JarEntryName . java.lang.String ( ) ) ) { return org.springframework.boot.loader.jar.JarURLConnection ; } } return new org.springframework.boot.loader.jar.JarURLConnection ( java.net.URL , org.springframework.boot.loader.jar.JarFile , org.springframework.boot.loader.jar.JarURLConnection.JarEntryName ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.net.URL java.net.URL , java.lang.String java.lang.String ) { java.lang.String java.lang.String = java.net.URL . java.lang.String ( ) ; int int = java.lang.String . int ( java.lang.String ) ; if ( int < NUMBER ) { return STRING ; } int int = int + java.lang.String . int ( ) + java.lang.String . int ( ) ; return java.lang.String . java.lang.String ( int ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.boot.loader.jar.JarURLConnection org.springframework.boot.loader.jar.JarURLConnection ( ) { try { return org.springframework.boot.loader.jar.JarURLConnection ( null , null ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalStateException ( java.io.IOException ) ; } }  <METHOD_END>
<METHOD_START> private static org.springframework.boot.loader.jar.JarURLConnection org.springframework.boot.loader.jar.JarURLConnection ( JarFile org.springframework.boot.loader.jar.JarFile , org.springframework.boot.loader.jar.JarURLConnection.JarEntryName org.springframework.boot.loader.jar.JarURLConnection.JarEntryName )			throws java.io.IOException { if ( java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.ThreadLocal<java.lang.Boolean> . java.lang.Boolean ( ) ) ) { return org.springframework.boot.loader.jar.JarURLConnection ; } return new org.springframework.boot.loader.jar.JarURLConnection ( null , org.springframework.boot.loader.jar.JarFile , org.springframework.boot.loader.jar.JarURLConnection.JarEntryName ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( ) || ( java.lang.String . int ( '%' ) < NUMBER ) ) { return java.lang.String ; } java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( java.lang.String . int ( ) ) ; void ( java.lang.String , java.io.ByteArrayOutputStream ) ; return AsciiBytes . toString ( java.io.ByteArrayOutputStream . byte[] ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream ) { int int = java.lang.String . int ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { int int = java.lang.String . char ( int ) ; if ( int > NUMBER ) { try { java.lang.String java.lang.String = java.net.URLEncoder . java.lang.String ( java.lang.String . java.lang.String ( ( char ) int ) , STRING ) ; void ( java.lang.String , java.io.ByteArrayOutputStream ) ; } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) { throw new java.lang.IllegalStateException ( java.io.UnsupportedEncodingException ) ; } } else { if ( int == '%' ) { if ( ( int + NUMBER ) >= int ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String . java.lang.String ( int ) + STRING ) ; } int = char ( java.lang.String , int ) ; int += NUMBER ; } java.io.ByteArrayOutputStream . void ( int ) ; } } }  <METHOD_END>
<METHOD_START> private char char ( java.lang.String java.lang.String , int int ) { int int = java.lang.Character . int ( java.lang.String . char ( int + NUMBER ) , NUMBER ) ; int int = java.lang.Character . int ( java.lang.String . char ( int + NUMBER ) , NUMBER ) ; if ( int == - NUMBER || int == - NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String . java.lang.String ( int ) + STRING ) ; } return ( ( char ) ( ( int << NUMBER ) + int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.lang.String . boolean ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { if ( this . java.lang.String == null ) { this . java.lang.String = java.lang.String ( ) ; } return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = ( boolean ( ) ? STRING : null ) ; java.lang.String = ( java.lang.String != null ? java.lang.String : java.lang.String ( java.lang.String ( ) ) ) ; java.lang.String = ( java.lang.String != null ? java.lang.String : STRING ) ; return java.lang.String ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.loader.jar.JarURLConnection.JarEntryName org.springframework.boot.loader.jar.JarURLConnection.JarEntryName ( java.lang.String java.lang.String ) { return org.springframework.boot.loader.jar.JarURLConnection.JarEntryName ( java.lang.String , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.loader.jar.JarURLConnection.JarEntryName org.springframework.boot.loader.jar.JarURLConnection.JarEntryName ( java.lang.String java.lang.String , int int ) { if ( java.lang.String . int ( ) <= int ) { return org.springframework.boot.loader.jar.JarURLConnection.JarEntryName ; } return new org.springframework.boot.loader.jar.JarURLConnection.JarEntryName ( java.lang.String . java.lang.String ( int ) ) ; }  <METHOD_END>
