<METHOD_START> public void ( java.lang.Iterable<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> < RepositoryRestConfigurer > java.lang.Iterable<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> ) { Assert . notNull ( java.lang.Iterable<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> , STRING ) ; this . java.lang.Iterable<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> = java.lang.Iterable<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( RepositoryRestConfiguration org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ) { for ( RepositoryRestConfigurer org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer : java.lang.Iterable<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> ) { org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer . configureRepositoryRestConfiguration ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableConversionService org.springframework.data.rest.webmvc.config.ConfigurableConversionService ) { for ( RepositoryRestConfigurer org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer : java.lang.Iterable<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> ) { org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer . configureConversionService ( org.springframework.data.rest.webmvc.config.ConfigurableConversionService ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ExceptionHandlerExceptionResolver org.springframework.data.rest.webmvc.config.ExceptionHandlerExceptionResolver ) { for ( RepositoryRestConfigurer org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer : java.lang.Iterable<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> ) { org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer . configureExceptionHandlerExceptionResolver ( org.springframework.data.rest.webmvc.config.ExceptionHandlerExceptionResolver ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> ) { for ( RepositoryRestConfigurer org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer : java.lang.Iterable<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> ) { org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer . configureHttpMessageConverters ( java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ObjectMapper org.springframework.data.rest.webmvc.config.ObjectMapper ) { for ( RepositoryRestConfigurer org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer : java.lang.Iterable<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> ) { org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer . configureJacksonObjectMapper ( org.springframework.data.rest.webmvc.config.ObjectMapper ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ValidatingRepositoryEventListener org.springframework.data.rest.webmvc.config.ValidatingRepositoryEventListener ) { for ( RepositoryRestConfigurer org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer : java.lang.Iterable<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> ) { org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer . configureValidatingRepositoryEventListener ( org.springframework.data.rest.webmvc.config.ValidatingRepositoryEventListener ) ; } }  <METHOD_END>
