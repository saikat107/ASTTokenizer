<METHOD_START> public void ( ) { this . java.lang.Long = null ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Long java.lang.Long ) { this . java.lang.Long = java.lang.Long ; }  <METHOD_END>
<METHOD_START> public java.lang.Long java.lang.Long ( ) { return this . java.lang.Long ; }  <METHOD_END>
<METHOD_START> synchronized void void ( org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler ) throws java.io.IOException { this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler = org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler ; for ( org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DataWithMediaType org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DataWithMediaType : this . java.util.Set<org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DataWithMediaType> ) { void ( org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DataWithMediaType . java.lang.Object ( ) , org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DataWithMediaType . org.springframework.web.servlet.mvc.method.annotation.MediaType ( ) ) ; } this . java.util.Set<org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DataWithMediaType> . void ( ) ; if ( this . boolean ) { if ( this . java.lang.Throwable != null ) { this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler . void ( this . java.lang.Throwable ) ; } else { this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler . void ( ) ; } } else { this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler . void ( this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DefaultCallback ) ; this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler . void ( this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DefaultCallback ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( ServerHttpResponse org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse ) {	}  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) throws java.io.IOException { void ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public synchronized void void ( java.lang.Object java.lang.Object , MediaType org.springframework.web.servlet.mvc.method.annotation.MediaType ) throws java.io.IOException { Assert . state ( ! this . boolean , STRING ) ; void ( java.lang.Object , org.springframework.web.servlet.mvc.method.annotation.MediaType ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Object java.lang.Object , MediaType org.springframework.web.servlet.mvc.method.annotation.MediaType ) throws java.io.IOException { if ( java.lang.Object != null ) { if ( this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler != null ) { try { this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler . void ( java.lang.Object , org.springframework.web.servlet.mvc.method.annotation.MediaType ) ; } catch ( java.io.IOException java.io.IOException ) { void ( java.io.IOException ) ; throw java.io.IOException ; } catch ( java.lang.Throwable java.lang.Throwable ) { void ( java.lang.Throwable ) ; throw new java.lang.IllegalStateException ( STRING + java.lang.Object , java.lang.Throwable ) ; } } else { this . java.util.Set<org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DataWithMediaType> . boolean ( new org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DataWithMediaType ( java.lang.Object , org.springframework.web.servlet.mvc.method.annotation.MediaType ) ) ; } } }  <METHOD_END>
<METHOD_START> public synchronized void void ( ) { this . boolean = true ; if ( this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler != null ) { this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler . void ( ) ; } }  <METHOD_END>
<METHOD_START> public synchronized void void ( java.lang.Throwable java.lang.Throwable ) { this . boolean = true ; this . java.lang.Throwable = java.lang.Throwable ; if ( this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler != null ) { this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.Handler . void ( java.lang.Throwable ) ; } }  <METHOD_END>
<METHOD_START> public synchronized void void ( java.lang.Runnable java.lang.Runnable ) { this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DefaultCallback . void ( java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> public synchronized void void ( java.lang.Runnable java.lang.Runnable ) { this . org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DefaultCallback . void ( java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + ObjectUtils . getIdentityHexString ( this ) ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Object java.lang.Object , MediaType org.springframework.web.servlet.mvc.method.annotation.MediaType ) throws java.io.IOException ;  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( java.lang.Throwable java.lang.Throwable );  <METHOD_END>
<METHOD_START> void void ( java.lang.Runnable java.lang.Runnable );  <METHOD_END>
<METHOD_START> void void ( java.lang.Runnable java.lang.Runnable );  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , MediaType org.springframework.web.servlet.mvc.method.annotation.MediaType ) { this . java.lang.Object = java.lang.Object ; this . org.springframework.web.servlet.mvc.method.annotation.MediaType = org.springframework.web.servlet.mvc.method.annotation.MediaType ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return this . java.lang.Object ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.mvc.method.annotation.MediaType org.springframework.web.servlet.mvc.method.annotation.MediaType ( ) { return this . org.springframework.web.servlet.mvc.method.annotation.MediaType ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Runnable java.lang.Runnable ) { this . java.lang.Runnable = java.lang.Runnable ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter .this . boolean = true ; if ( this . java.lang.Runnable != null ) { this . java.lang.Runnable . void ( ) ; } }  <METHOD_END>
