<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult>> < java.lang.String , java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult> < java.lang.String , StatsResult > > java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult>> ( ) { return java.util.Collections . java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult>> ( java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult>> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult>> < java.lang.String , java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult> < java.lang.String , StatsResult > > java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult>> ) { this . java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult>> = java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult> < java.lang.String , StatsResult > java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult> ( Field org.springframework.data.solr.core.query.result.Field ) { Assert . notNull ( org.springframework.data.solr.core.query.result.Field , STRING ) ; return java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult> ( org.springframework.data.solr.core.query.result.Field . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult> < java.lang.String , StatsResult > java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult> ( java.lang.String java.lang.String ) { Assert . notNull ( STRING , java.lang.String ) ; return java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult>> . get ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Long java.lang.Long ( ) { return java.lang.Long ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Long java.lang.Long ) { this . java.lang.Long = java.lang.Long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { return java.util.Collections . java.util.Collection<java.lang.Object> ( this . java.util.Collection<java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ) { if ( java.util.Collection<java.lang.Object> == null ) { this . java.util.Collection<java.lang.Object> = java.util.Collections . java.util.List<java.lang.Object> ( ) ; } else { this . java.util.Collection<java.lang.Object> = new java.util.ArrayList<java.lang.Object> <> ( ) ; this . java.util.Collection<java.lang.Object> . boolean ( java.util.Collection<java.lang.Object> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + getMin ( ) + STRING + getMax ( ) + STRING + getSum ( ) + STRING + getMean ( ) + STRING + getCount ( ) + STRING + getMissing ( ) + STRING + getStddev ( ) + STRING + java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.springframework.data.solr.core.query.result.StatsResult>> + STRING ; }  <METHOD_END>
