<METHOD_START> public void ( Field org.springframework.data.mongodb.core.aggregation.Field ) { this( new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.FieldReplacement ( org.springframework.data.mongodb.core.aggregation.Field ) ); }  <METHOD_END>
<METHOD_START> public void ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { this( new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.AggregationExpressionReplacement ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ); }  <METHOD_END>
<METHOD_START> public void ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.Replacement org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.Replacement ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.Replacement , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.Replacement = org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.Replacement ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootOperationBuilder org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootOperationBuilder ( ) { return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootOperationBuilder ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return new Document ( STRING , new Document ( STRING , org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.Replacement . java.lang.Object ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields ( ) { return ExposedFields . from ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation ( ) { return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation ( Document org.springframework.data.mongodb.core.aggregation.Document ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation ( ) . org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation ( org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ); }  <METHOD_END>
<METHOD_START> private void ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ) { super( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ); org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument = org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ; }  <METHOD_END>
<METHOD_START> protected void ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation , org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ) { this( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation . org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument . org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ) ); }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperationBuilder org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperationBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperationBuilder ( this , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperationBuilder org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperationBuilder ( java.lang.Object java.lang.Object ) { return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperationBuilder ( this , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation ( java.lang.Object java.lang.Object ) { return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation ( this , org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument . org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> protected void ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation , java.lang.Object java.lang.Object ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation = org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation ; this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation ( java.lang.String java.lang.String ) { if ( java.lang.Object instanceof AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation , org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument . org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( java.lang.String , ( AggregationExpression ) java.lang.Object ) ) ; } return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplaceRootDocumentOperation , org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument . org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( java.lang.String , java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> java.lang.Object java.lang.Object ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext );  <METHOD_END>
<METHOD_START> protected void ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return org.springframework.data.mongodb.core.aggregation.AggregationExpression . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; }  <METHOD_END>
<METHOD_START> protected void ( Field org.springframework.data.mongodb.core.aggregation.Field ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.Field = org.springframework.data.mongodb.core.aggregation.Field ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( org.springframework.data.mongodb.core.aggregation.Field ) . toString ( ) ; }  <METHOD_END>
<METHOD_START> protected void ( ) { java.util.Collection<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> = new java.util.ArrayList<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> < org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor > ( ) ; }  <METHOD_END>
<METHOD_START> protected void ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor , STRING ) ; java.util.Collection<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> = java.util.Collections . java.util.Set<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.Collection<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> < org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor > java.util.Collection<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> ) { this . java.util.Collection<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> = java.util.Collection<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( java.lang.Object java.lang.Object ) { return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.DocumentContributor ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( java.lang.String java.lang.String , AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ExpressionFieldContributor ( Fields . field ( java.lang.String ) , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ValueFieldContributor ( Fields . field ( java.lang.String ) , java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; for ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor : java.util.Collection<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> ) { org.springframework.data.mongodb.core.aggregation.Document . putAll ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor . org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } return org.springframework.data.mongodb.core.aggregation.Document ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument , STRING ) ; org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument = new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( ) ; java.util.List<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> < org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor > java.util.List<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> = new java.util.ArrayList<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> < org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor > ( this . java.util.Collection<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> . int ( ) + org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument . java.util.Collection<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> . int ( ) ) ; java.util.List<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> . boolean ( this . java.util.Collection<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> ) ; java.util.List<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> . boolean ( org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument . java.util.Collection<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> ) ; return new org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementDocument ( java.util.List<org.springframework.data.mongodb.core.aggregation.ReplaceRootOperation.ReplacementContributor> ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext );  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( STRING , java.lang.Object ) ; return ( Document ) org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getMappedObject ( org.springframework.data.mongodb.core.aggregation.Document ) . get ( STRING ) ; }  <METHOD_END>
<METHOD_START> public void ( Field org.springframework.data.mongodb.core.aggregation.Field ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.ExposedField = new ExposedField ( org.springframework.data.mongodb.core.aggregation.Field , true ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ExposedField org.springframework.data.mongodb.core.aggregation.ExposedField ( ) { return org.springframework.data.mongodb.core.aggregation.ExposedField ; }  <METHOD_END>
<METHOD_START> public void ( Field org.springframework.data.mongodb.core.aggregation.Field , java.lang.Object java.lang.Object ) { super( org.springframework.data.mongodb.core.aggregation.Field ); Assert . notNull ( java.lang.Object , STRING ) ; this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( STRING , java.lang.Object ) ; return new Document ( org.springframework.data.mongodb.core.aggregation.ExposedField ( ) . getTarget ( ) , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getMappedObject ( org.springframework.data.mongodb.core.aggregation.Document ) . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void ( Field org.springframework.data.mongodb.core.aggregation.Field , AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { super( org.springframework.data.mongodb.core.aggregation.Field ); Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return new Document ( org.springframework.data.mongodb.core.aggregation.ExposedField ( ) . getTarget ( ) , org.springframework.data.mongodb.core.aggregation.AggregationExpression . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; }  <METHOD_END>
