<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AbstractMessageHandlerMetrics org.springframework.integration.handler.AbstractMessageHandlerMetrics ) { Assert . notNull ( org.springframework.integration.handler.AbstractMessageHandlerMetrics , STRING ) ; this . org.springframework.integration.handler.AbstractMessageHandlerMetrics = org.springframework.integration.handler.AbstractMessageHandlerMetrics ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { if ( this . boolean ) { this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . setFullStatsEnabled ( true ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( Message < ? > org.springframework.integration.handler.Message<?> ) { Assert . notNull ( org.springframework.integration.handler.Message<> , STRING ) ; Assert . notNull ( org.springframework.integration.handler.Message<> . getPayload ( ) , STRING ) ; if ( this . boolean && this . logger . isDebugEnabled ( ) ) { this . logger . debug ( this + STRING + org.springframework.integration.handler.Message<> ) ; } MetricsContext org.springframework.integration.handler.MetricsContext = null ; boolean boolean = this . boolean ; AbstractMessageHandlerMetrics org.springframework.integration.handler.AbstractMessageHandlerMetrics = this . org.springframework.integration.handler.AbstractMessageHandlerMetrics ; try { if ( this . boolean ) { org.springframework.integration.handler.Message<?> = MessageHistory . write ( org.springframework.integration.handler.Message<> , this , this . getMessageBuilderFactory ( ) ) ; } if ( boolean ) { org.springframework.integration.handler.MetricsContext = org.springframework.integration.handler.AbstractMessageHandlerMetrics . beforeHandle ( ) ; } this . void ( org.springframework.integration.handler.Message<> ) ; if ( boolean ) { org.springframework.integration.handler.AbstractMessageHandlerMetrics . afterHandle ( org.springframework.integration.handler.MetricsContext , true ) ; } } catch ( java.lang.Exception java.lang.Exception ) { if ( boolean ) { org.springframework.integration.handler.AbstractMessageHandlerMetrics . afterHandle ( org.springframework.integration.handler.MetricsContext , false ) ; } if ( java.lang.Exception instanceof MessagingException ) { throw ( MessagingException ) java.lang.Exception ; } throw new MessageHandlingException ( org.springframework.integration.handler.Message<> , STRING + this + STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Subscription org.springframework.integration.handler.Subscription ) { Assert . notNull ( org.springframework.integration.handler.Subscription , STRING ) ; org.springframework.integration.handler.Subscription . request ( java.lang.Long . long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message < ? > org.springframework.integration.handler.Message<?> ) { void ( org.springframework.integration.handler.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Throwable java.lang.Throwable ) { Operators . onErrorDropped ( java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {	}  <METHOD_END>
<METHOD_START> protected abstract void void ( Message < ? > org.springframework.integration.handler.Message<?> ) throws java.lang.Exception ;  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . reset ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . getHandleCountLong ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . getHandleCount ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . getErrorCount ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . getErrorCountLong ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . getMeanDuration ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . getMinDuration ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . getMaxDuration ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( ) { return this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . getStandardDeviationDuration ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . getActiveCount ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . getActiveCountLong ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.handler.Statistics org.springframework.integration.handler.Statistics ( ) { return this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . getDuration ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { if ( boolean ) { this . boolean = true ; } this . boolean = boolean ; if ( this . org.springframework.integration.handler.AbstractMessageHandlerMetrics != null ) { this . org.springframework.integration.handler.AbstractMessageHandlerMetrics . setFullStatsEnabled ( boolean ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { this . boolean = boolean ; if ( ! boolean ) { this . boolean = false ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
