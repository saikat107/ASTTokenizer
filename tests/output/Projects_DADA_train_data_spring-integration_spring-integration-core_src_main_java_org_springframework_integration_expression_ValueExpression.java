<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( V V ) { Assert . notNull ( V , STRING ) ; this . V = V ; this . java.lang.Class<V> = ( java.lang.Class<V> < V > ) this . V . java.lang.Class<? extends java.lang.Object> ( ) ; this . org.springframework.integration.expression.TypedValue = new TypedValue ( this . V ) ; this . org.springframework.integration.expression.TypeDescriptor = this . org.springframework.integration.expression.TypedValue . getTypeDescriptor ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public V V ( ) org.springframework.integration.expression.EvaluationException { return this . V ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public V V ( java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return this . V ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public V V ( EvaluationContext org.springframework.integration.expression.EvaluationContext ) throws org.springframework.integration.expression.EvaluationException { return this . V ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public V V ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return this . V ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> ) throws org.springframework.integration.expression.EvaluationException { return T ( java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) throws org.springframework.integration.expression.EvaluationException { return org . springframework . expression . common . ExpressionUtils . convertTypedValue ( null , this . org.springframework.integration.expression.TypedValue , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> ) throws org.springframework.integration.expression.EvaluationException { return V ( org.springframework.integration.expression.EvaluationContext , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Class<T> < T > java.lang.Class<T> ) throws org.springframework.integration.expression.EvaluationException { return org . springframework . expression . common . ExpressionUtils . convertTypedValue ( org.springframework.integration.expression.EvaluationContext , this . org.springframework.integration.expression.TypedValue , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<V> < V > java.lang.Class<V> ( ) org.springframework.integration.expression.EvaluationException { return this . java.lang.Class<V> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<V> < V > java.lang.Class<V> ( java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return this . java.lang.Class<V> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<V> < V > java.lang.Class<V> ( EvaluationContext org.springframework.integration.expression.EvaluationContext ) throws org.springframework.integration.expression.EvaluationException { return this . java.lang.Class<V> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<V> < V > java.lang.Class<V> ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return this . java.lang.Class<V> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.TypeDescriptor org.springframework.integration.expression.TypeDescriptor ( ) org.springframework.integration.expression.EvaluationException { return this . org.springframework.integration.expression.TypeDescriptor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.TypeDescriptor org.springframework.integration.expression.TypeDescriptor ( java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return this . org.springframework.integration.expression.TypeDescriptor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.TypeDescriptor org.springframework.integration.expression.TypeDescriptor ( EvaluationContext org.springframework.integration.expression.EvaluationContext ) throws org.springframework.integration.expression.EvaluationException { return this . org.springframework.integration.expression.TypeDescriptor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.TypeDescriptor org.springframework.integration.expression.TypeDescriptor ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return this . org.springframework.integration.expression.TypeDescriptor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( EvaluationContext org.springframework.integration.expression.EvaluationContext ) throws org.springframework.integration.expression.EvaluationException { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { void ( org.springframework.integration.expression.EvaluationContext , null , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { void ( null , java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { throw new EvaluationException ( this . V . java.lang.String ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . V . java.lang.String ( ) ; }  <METHOD_END>
