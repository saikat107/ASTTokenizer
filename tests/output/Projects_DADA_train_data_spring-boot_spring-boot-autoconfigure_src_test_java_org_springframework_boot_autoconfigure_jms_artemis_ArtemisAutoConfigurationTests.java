<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.artemis.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory ) . isEqualTo ( org.springframework.boot.autoconfigure.jms.artemis.JmsTemplate . getConnectionFactory ( ) ) ; org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory , STRING , NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory . getUser ( ) ) . isNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory . getPassword ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING , STRING , STRING ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) ; org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory , STRING , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING , STRING , STRING ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.artemis.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory ) . isEqualTo ( org.springframework.boot.autoconfigure.jms.artemis.JmsTemplate . getConnectionFactory ( ) ) ; org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory , STRING , NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory . getUser ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory . getPassword ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING ) ; ArtemisProperties org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( ArtemisProperties .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties . getMode ( ) ) . isEqualTo ( ArtemisMode . EMBEDDED ) ; assertThat ( this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBeansOfType ( EmbeddedJMS .class ) ) . hasSize ( NUMBER ) ; org . org.apache . org.apache . org.apache . org.apache . org.apache . org.apache org.apache.activemq.artemis.core.config.Configuration = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( org . org.apache . org.apache . org.apache . org.apache . org.apache . org.apache .class ) ; assertThat ( org.apache.activemq.artemis.core.config.Configuration . isPersistenceEnabled ( ) ) . isFalse ( ) ; assertThat ( org.apache.activemq.artemis.core.config.Configuration . isSecurityEnabled ( ) ) . isFalse ( ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) ; org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class ) ; assertThat ( this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBeansOfType ( EmbeddedJMS .class ) ) . hasSize ( NUMBER ) ; org . org.apache . org.apache . org.apache . org.apache . org.apache . org.apache org.apache.activemq.artemis.core.config.Configuration = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( org . org.apache . org.apache . org.apache . org.apache . org.apache . org.apache .class ) ; assertThat ( org.apache.activemq.artemis.core.config.Configuration . isPersistenceEnabled ( ) ) . isFalse ( ) ; assertThat ( org.apache.activemq.artemis.core.config.Configuration . isSecurityEnabled ( ) ) . isFalse ( ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) ; org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBeansOfType ( EmbeddedJMS .class ) ) . isEmpty ( ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) ; org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory , STRING , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING , STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBeansOfType ( EmbeddedJMS .class ) ) . isEmpty ( ) ; ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( ActiveMQConnectionFactory .class ) ; org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING , STRING ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker = new org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker ( this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationConfiguration .class ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker = new org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker ( this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.CustomJmsConfiguration .class , STRING ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker = new org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker ( this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.CustomArtemisConfiguration .class ) ; org . org.apache . org.apache . org.apache . org.apache . org.apache . org.apache org.apache.activemq.artemis.core.config.Configuration = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( org . org.apache . org.apache . org.apache . org.apache . org.apache . org.apache .class ) ; assertThat ( org.apache.activemq.artemis.core.config.Configuration . getName ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException , org.springframework.boot.autoconfigure.jms.artemis.JMSException { java.io.File java.io.File = this . org.springframework.boot.autoconfigure.jms.artemis.TemporaryFolder . newFolder ( ) ; void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING , STRING , STRING + java.io.File . java.lang.String ( ) ) ; final java.lang.String java.lang.String = java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.artemis.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; org.springframework.boot.autoconfigure.jms.artemis.JmsTemplate . send ( STRING , new MessageCreator ( ) { @ java.lang.Override public org.springframework.boot.autoconfigure.jms.artemis.Message org.springframework.boot.autoconfigure.jms.artemis.Message ( Session org.springframework.boot.autoconfigure.jms.artemis.Session ) throws org.springframework.boot.autoconfigure.jms.artemis.JMSException { return org.springframework.boot.autoconfigure.jms.artemis.Session . createTextMessage ( java.lang.String ) ; } } ) ; this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . close ( ) ; void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING , STRING , STRING + java.io.File . java.lang.String ( ) ) ; JmsTemplate org.springframework.boot.autoconfigure.jms.artemis.JmsTemplate = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( JmsTemplate .class ) ; org.springframework.boot.autoconfigure.jms.artemis.JmsTemplate . setReceiveTimeout ( NUMBER ) ; Message org.springframework.boot.autoconfigure.jms.artemis.Message = org.springframework.boot.autoconfigure.jms.artemis.JmsTemplate . receive ( STRING ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.Message ) . isNotNull ( ) ; assertThat ( ( ( TextMessage ) org.springframework.boot.autoconfigure.jms.artemis.Message ) . getText ( ) ) . isEqualTo ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.autoconfigure.jms.artemis.Message org.springframework.boot.autoconfigure.jms.artemis.Message ( Session org.springframework.boot.autoconfigure.jms.artemis.Session ) throws org.springframework.boot.autoconfigure.jms.artemis.JMSException { return org.springframework.boot.autoconfigure.jms.artemis.Session . createTextMessage ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING ) ; AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING ) ; try { ArtemisProperties org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties = this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( ArtemisProperties .class ) ; ArtemisProperties org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties = org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . getBean ( ArtemisProperties .class ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties . getEmbedded ( ) . getServerId ( ) < org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties . getEmbedded ( ) . getServerId ( ) ) . isTrue ( ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker = new org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker ( this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker = new org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker ( org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; } finally { org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING , STRING ) ; AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.EmptyConfiguration .class , STRING , STRING , STRING ) ; try { org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker = new org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker ( this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker = new org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker ( org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ) ; org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker . void ( STRING , true ) ; } finally { org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory ) { TransportConfiguration org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration = org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration . getFactoryClassName ( ) ) . isEqualTo ( InVMConnectorFactory .class . java.lang.String ( ) ) ; return org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory , java.lang.String java.lang.String , int int ) { TransportConfiguration org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration = org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration . getFactoryClassName ( ) ) . isEqualTo ( NettyConnectorFactory .class . java.lang.String ( ) ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration . getParams ( ) . get ( STRING ) ) . isEqualTo ( java.lang.String ) ; assertThat ( org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration . getParams ( ) . get ( STRING ) ) . isEqualTo ( int ) ; return org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration ( ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory ) { TransportConfiguration [] org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration[] = org.springframework.boot.autoconfigure.jms.artemis.ActiveMQConnectionFactory . getServerLocator ( ) . getStaticTransportConfigurations ( ) ; assertThat ( transportConfigurations . length ) . isEqualTo ( NUMBER ) ; return org.springframework.boot.autoconfigure.jms.artemis.TransportConfiguration[] [ NUMBER ] ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String ... java.lang.String[] ) { this . org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ( java.lang.Class<> , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String ... java.lang.String[] ) { AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . register ( java.lang.Class<> ) ; org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . register ( ArtemisAutoConfiguration .class , JmsAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext , java.lang.String[] ) ; org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext . refresh ( ) ; return org.springframework.boot.autoconfigure.jms.artemis.AnnotationConfigApplicationContext ; }  <METHOD_END>
<METHOD_START> private void ( ApplicationContext org.springframework.boot.autoconfigure.jms.artemis.ApplicationContext ) { this . org.springframework.boot.autoconfigure.jms.artemis.JmsTemplate = org.springframework.boot.autoconfigure.jms.artemis.ApplicationContext . getBean ( JmsTemplate .class ) ; this . org.springframework.boot.autoconfigure.jms.artemis.DestinationResolver = new DynamicDestinationResolver ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , boolean boolean ) { void ( java.lang.String , false , boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , boolean boolean ) { void ( java.lang.String , true , boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( final java.lang.String java.lang.String , final boolean boolean , final boolean boolean ) { this . org.springframework.boot.autoconfigure.jms.artemis.JmsTemplate . execute ( new SessionCallback < java.lang.Void > ( ) { @ java.lang.Override public java.lang.Void java.lang.Void ( Session org.springframework.boot.autoconfigure.jms.artemis.Session ) throws org.springframework.boot.autoconfigure.jms.artemis.JMSException { try { Destination org.springframework.boot.autoconfigure.jms.artemis.Destination = org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker .this . org.springframework.boot.autoconfigure.jms.artemis.DestinationResolver . resolveDestinationName ( org.springframework.boot.autoconfigure.jms.artemis.Session , java.lang.String , boolean ) ; if ( ! boolean ) { throw new java.lang.IllegalStateException ( STRING + java.lang.String + STRING + org.springframework.boot.autoconfigure.jms.artemis.Destination ) ; } } catch ( JMSException org.springframework.boot.autoconfigure.jms.artemis.JMSException ) { if ( boolean ) { throw new java.lang.IllegalStateException ( STRING + java.lang.String + STRING + org.springframework.boot.autoconfigure.jms.artemis.JMSException . getMessage ( ) ) ; } } return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Void java.lang.Void ( Session org.springframework.boot.autoconfigure.jms.artemis.Session ) throws org.springframework.boot.autoconfigure.jms.artemis.JMSException { try { Destination org.springframework.boot.autoconfigure.jms.artemis.Destination = org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfigurationTests.DestinationChecker .this . org.springframework.boot.autoconfigure.jms.artemis.DestinationResolver . resolveDestinationName ( org.springframework.boot.autoconfigure.jms.artemis.Session , java.lang.String , boolean ) ; if ( ! boolean ) { throw new java.lang.IllegalStateException ( STRING + java.lang.String + STRING + org.springframework.boot.autoconfigure.jms.artemis.Destination ) ; } } catch ( JMSException org.springframework.boot.autoconfigure.jms.artemis.JMSException ) { if ( boolean ) { throw new java.lang.IllegalStateException ( STRING + java.lang.String + STRING + org.springframework.boot.autoconfigure.jms.artemis.JMSException . getMessage ( ) ) ; } } return null ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfiguration org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfiguration ( ) { JMSQueueConfigurationImpl org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfigurationImpl = new JMSQueueConfigurationImpl ( ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfigurationImpl . setName ( STRING ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfigurationImpl . setSelector ( STRING ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfigurationImpl . setDurable ( false ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfigurationImpl . setBindings ( STRING ) ; return org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfigurationImpl ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.boot.autoconfigure.jms.artemis.TopicConfiguration org.springframework.boot.autoconfigure.jms.artemis.TopicConfiguration ( ) { TopicConfigurationImpl org.springframework.boot.autoconfigure.jms.artemis.TopicConfigurationImpl = new TopicConfigurationImpl ( ) ; org.springframework.boot.autoconfigure.jms.artemis.TopicConfigurationImpl . setName ( STRING ) ; org.springframework.boot.autoconfigure.jms.artemis.TopicConfigurationImpl . setBindings ( STRING ) ; return org.springframework.boot.autoconfigure.jms.artemis.TopicConfigurationImpl ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration ( ) { JMSConfiguration org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration = new JMSConfigurationImpl ( ) ; JMSQueueConfiguration org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfiguration = new JMSQueueConfigurationImpl ( ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfiguration . setName ( STRING ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfiguration . setDurable ( false ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration . getQueueConfigurations ( ) . add ( org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfiguration ) ; return org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jms.artemis.ArtemisConfigurationCustomizer org.springframework.boot.autoconfigure.jms.artemis.ArtemisConfigurationCustomizer ( ) { return new ArtemisConfigurationCustomizer ( ) { @ java.lang.Override public void void ( org . org.apache . org.apache . org.apache . org.apache . org.apache . org.apache org.apache.activemq.artemis.core.config.Configuration ) { org.apache.activemq.artemis.core.config.Configuration . setClusterPassword ( STRING ) ; org.apache.activemq.artemis.core.config.Configuration . setName ( STRING ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org . org.apache . org.apache . org.apache . org.apache . org.apache . org.apache org.apache.activemq.artemis.core.config.Configuration ) { org.apache.activemq.artemis.core.config.Configuration . setClusterPassword ( STRING ) ; org.apache.activemq.artemis.core.config.Configuration . setName ( STRING ) ; }  <METHOD_END>
