<METHOD_START> public void ( Twitter org.springframework.integration.twitter.inbound.Twitter , java.lang.String java.lang.String ) { super( org.springframework.integration.twitter.inbound.Twitter , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<org.springframework.integration.twitter.inbound.Tweet> < Tweet > java.util.List<org.springframework.integration.twitter.inbound.Tweet> ( long long ) { SearchParameters org.springframework.integration.twitter.inbound.SearchParameters = new SearchParameters ( this . java.lang.String ) . count ( this . getPageSize ( ) ) . sinceId ( long ) ; SearchResults org.springframework.integration.twitter.inbound.SearchResults = this . getTwitter ( ) . searchOperations ( ) . search ( org.springframework.integration.twitter.inbound.SearchParameters ) ; return ( org.springframework.integration.twitter.inbound.SearchResults != null ) ? org.springframework.integration.twitter.inbound.SearchResults . getTweets ( ) : java.util.Collections .< Tweet > java.util.List<org.springframework.integration.twitter.inbound.Tweet> ( ) ; }  <METHOD_END>
