<METHOD_START> @ Before public void void ( ) { java.util.List<org.springframework.test.web.client.samples.matchers.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.test.web.client.samples.matchers.HttpMessageConverter<?>> = new java.util.ArrayList<org.springframework.test.web.client.samples.matchers.HttpMessageConverter<?>> <> ( ) ; java.util.List<org.springframework.test.web.client.samples.matchers.HttpMessageConverter<?>> . add ( new StringHttpMessageConverter ( ) ) ; java.util.List<org.springframework.test.web.client.samples.matchers.HttpMessageConverter<?>> . add ( new MappingJackson2HttpMessageConverter ( ) ) ; this . org.springframework.test.web.client.samples.matchers.RestTemplate = new RestTemplate ( ) ; this . org.springframework.test.web.client.samples.matchers.RestTemplate . setMessageConverters ( java.util.List<org.springframework.test.web.client.samples.matchers.HttpMessageConverter<?>> ) ; this . org.springframework.test.web.client.samples.matchers.MockRestServiceServer = MockRestServiceServer . createServer ( this . org.springframework.test.web.client.samples.matchers.RestTemplate ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.test.web.client.samples.matchers.MockRestServiceServer . expect ( requestTo ( STRING ) ) . andExpect ( header ( STRING , STRING ) ) . andRespond ( withSuccess ( java.lang.String , MediaType . APPLICATION_JSON ) ) ; this . org.springframework.test.web.client.samples.matchers.RestTemplate . getForObject ( new java.net.URI ( STRING ) , Person .class ) ; this . org.springframework.test.web.client.samples.matchers.MockRestServiceServer . verify ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.test.web.client.samples.matchers.MockRestServiceServer . expect ( requestTo ( STRING ) ) . andExpect ( header ( STRING , containsString ( STRING ) ) ) . andRespond ( withSuccess ( java.lang.String , MediaType . APPLICATION_JSON ) ) ; this . org.springframework.test.web.client.samples.matchers.RestTemplate . getForObject ( new java.net.URI ( STRING ) , Person .class ) ; this . org.springframework.test.web.client.samples.matchers.MockRestServiceServer . verify ( ) ; }  <METHOD_END>
