<METHOD_START> @ Before public void void ( ) java.lang.Exception { org.springframework.web.servlet.tags.MockPageContext = createPageContext ( ) ; org.springframework.web.servlet.tags.UrlTag = new UrlTag ( ) ; org.springframework.web.servlet.tags.UrlTag . setPageContext ( org.springframework.web.servlet.tags.MockPageContext ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.web.servlet.tags.UrlTag , instanceOf ( ParamAware .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { int int = org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; assertEquals ( Tag . EVAL_BODY_INCLUDE , int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; int int = org.springframework.web.servlet.tags.UrlTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setVar ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; org.springframework.web.servlet.tags.UrlTag . doEndTag ( ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.MockPageContext . getAttribute ( STRING , PageContext . PAGE_SCOPE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setVar ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setScope ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; org.springframework.web.servlet.tags.UrlTag . doEndTag ( ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.MockPageContext . getAttribute ( STRING , PageContext . REQUEST_SCOPE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setVar ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.UrlTag . doEndTag ( ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.MockPageContext . getAttribute ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setVar ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setHtmlEscape ( false ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.UrlTag . doEndTag ( ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.MockPageContext . getAttribute ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setVar ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setHtmlEscape ( true ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.UrlTag . doEndTag ( ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.MockPageContext . getAttribute ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setVar ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setJavaScriptEscape ( true ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.UrlTag . doEndTag ( ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.MockPageContext . getAttribute ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setVar ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setHtmlEscape ( true ) ; org.springframework.web.servlet.tags.UrlTag . setJavaScriptEscape ( true ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.UrlTag . doEndTag ( ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.MockPageContext . getAttribute ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . createQueryString ( java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> , true ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . createQueryString ( java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> , true ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . createQueryString ( java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> , false ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . createQueryString ( java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> , true ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( null ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . createQueryString ( java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> , true ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.util.Set<java.lang.String> . boolean ( STRING ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . createQueryString ( java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> , true ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . createQueryString ( java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> , true ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . createQueryString ( java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> , true ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( null ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . createQueryString ( java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> , true ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . createQueryString ( java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> , true ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . replaceUriTemplateParams ( STRING , java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( NUMBER , java.util.Set<java.lang.String> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . replaceUriTemplateParams ( STRING , java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( NUMBER , java.util.Set<java.lang.String> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . replaceUriTemplateParams ( STRING , java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( NUMBER , java.util.Set<java.lang.String> . int ( ) ) ; assertTrue ( java.util.Set<java.lang.String> . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . replaceUriTemplateParams ( STRING , java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( NUMBER , java.util.Set<java.lang.String> . int ( ) ) ; assertTrue ( java.util.Set<java.lang.String> . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . replaceUriTemplateParams ( STRING , java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( NUMBER , java.util.Set<java.lang.String> . int ( ) ) ; assertTrue ( java.util.Set<java.lang.String> . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . replaceUriTemplateParams ( STRING , java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( NUMBER , java.util.Set<java.lang.String> . int ( ) ) ; assertTrue ( java.util.Set<java.lang.String> . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { java.util.List<org.springframework.web.servlet.tags.Param> < Param > java.util.List<org.springframework.web.servlet.tags.Param> = new java.util.LinkedList<org.springframework.web.servlet.tags.Param> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; java.util.List<org.springframework.web.servlet.tags.Param> . add ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = org.springframework.web.servlet.tags.UrlTag . replaceUriTemplateParams ( STRING , java.util.List<org.springframework.web.servlet.tags.Param> , java.util.Set<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( NUMBER , java.util.Set<java.lang.String> . int ( ) ) ; assertTrue ( java.util.Set<java.lang.String> . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.tags.UrlTag ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.tags.UrlTag ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { ( ( MockHttpServletRequest ) org.springframework.web.servlet.tags.MockPageContext . getRequest ( ) ) . setContextPath ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.tags.UrlTag ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { ( ( MockHttpServletRequest ) org.springframework.web.servlet.tags.MockPageContext . getRequest ( ) ) . setContextPath ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setContext ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.tags.UrlTag ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { ( ( MockHttpServletRequest ) org.springframework.web.servlet.tags.MockPageContext . getRequest ( ) ) . setContextPath ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setContext ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.tags.UrlTag ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { ( ( MockHttpServletRequest ) org.springframework.web.servlet.tags.MockPageContext . getRequest ( ) ) . setContextPath ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . setContext ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.tags.UrlTag ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.tags.UrlTag ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.tags.UrlTag ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.JspException { org.springframework.web.servlet.tags.UrlTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . doStartTag ( ) ; Param org.springframework.web.servlet.tags.Param = new Param ( ) ; org.springframework.web.servlet.tags.Param . setName ( STRING ) ; org.springframework.web.servlet.tags.Param . setValue ( STRING ) ; org.springframework.web.servlet.tags.UrlTag . addParam ( org.springframework.web.servlet.tags.Param ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.tags.UrlTag ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( UrlTag org.springframework.web.servlet.tags.UrlTag ) { java.lang.reflect.Method java.lang.reflect.Method = ReflectionUtils . findMethod ( org.springframework.web.servlet.tags.UrlTag . getClass ( ) , STRING ) ; ReflectionUtils . makeAccessible ( java.lang.reflect.Method ) ; return ( java.lang.String ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.web.servlet.tags.UrlTag ) ; }  <METHOD_END>
