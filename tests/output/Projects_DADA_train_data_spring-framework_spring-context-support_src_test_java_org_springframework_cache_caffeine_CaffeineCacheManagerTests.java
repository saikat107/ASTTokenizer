<METHOD_START> @ Test public void void ( ) { CacheManager org.springframework.cache.caffeine.CacheManager = new CaffeineCacheManager ( ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CacheManager . getCache ( STRING ) ; assertTrue ( org.springframework.cache.caffeine.Cache instanceof CaffeineCache ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CacheManager . getCache ( STRING ) ; assertSame ( org.springframework.cache.caffeine.Cache , org.springframework.cache.caffeine.Cache ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CacheManager . getCache ( STRING ) ; assertTrue ( org.springframework.cache.caffeine.Cache instanceof CaffeineCache ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CacheManager . getCache ( STRING ) ; assertSame ( org.springframework.cache.caffeine.Cache , org.springframework.cache.caffeine.Cache ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CacheManager . getCache ( STRING ) ; assertTrue ( org.springframework.cache.caffeine.Cache instanceof CaffeineCache ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CacheManager . getCache ( STRING ) ; assertSame ( org.springframework.cache.caffeine.Cache , org.springframework.cache.caffeine.Cache ) ; org.springframework.cache.caffeine.Cache . put ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.cache.caffeine.Cache . get ( STRING ) . get ( ) ) ; org.springframework.cache.caffeine.Cache . put ( STRING , NUMBER ) ; assertEquals ( NUMBER , org.springframework.cache.caffeine.Cache . get ( STRING ) . get ( ) ) ; org.springframework.cache.caffeine.Cache . put ( STRING , null ) ; assertNull ( org.springframework.cache.caffeine.Cache . get ( STRING ) . get ( ) ) ; org.springframework.cache.caffeine.Cache . evict ( STRING ) ; assertNull ( org.springframework.cache.caffeine.Cache . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CaffeineCacheManager org.springframework.cache.caffeine.CaffeineCacheManager = new CaffeineCacheManager ( STRING , STRING ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertTrue ( org.springframework.cache.caffeine.Cache instanceof CaffeineCache ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertSame ( org.springframework.cache.caffeine.Cache , org.springframework.cache.caffeine.Cache ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertTrue ( org.springframework.cache.caffeine.Cache instanceof CaffeineCache ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertSame ( org.springframework.cache.caffeine.Cache , org.springframework.cache.caffeine.Cache ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertNull ( org.springframework.cache.caffeine.Cache ) ; org.springframework.cache.caffeine.Cache . put ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.cache.caffeine.Cache . get ( STRING ) . get ( ) ) ; org.springframework.cache.caffeine.Cache . put ( STRING , NUMBER ) ; assertEquals ( NUMBER , org.springframework.cache.caffeine.Cache . get ( STRING ) . get ( ) ) ; org.springframework.cache.caffeine.Cache . put ( STRING , null ) ; assertNull ( org.springframework.cache.caffeine.Cache . get ( STRING ) . get ( ) ) ; org.springframework.cache.caffeine.Cache . evict ( STRING ) ; assertNull ( org.springframework.cache.caffeine.Cache . get ( STRING ) ) ; org.springframework.cache.caffeine.CaffeineCacheManager . setAllowNullValues ( false ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertTrue ( org.springframework.cache.caffeine.Cache instanceof CaffeineCache ) ; assertTrue ( org.springframework.cache.caffeine.Cache != org.springframework.cache.caffeine.Cache ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertTrue ( org.springframework.cache.caffeine.Cache instanceof CaffeineCache ) ; assertTrue ( org.springframework.cache.caffeine.Cache != org.springframework.cache.caffeine.Cache ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertNull ( org.springframework.cache.caffeine.Cache ) ; org.springframework.cache.caffeine.Cache . put ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.cache.caffeine.Cache . get ( STRING ) . get ( ) ) ; org.springframework.cache.caffeine.Cache . put ( STRING , NUMBER ) ; assertEquals ( NUMBER , org.springframework.cache.caffeine.Cache . get ( STRING ) . get ( ) ) ; org.springframework.cache.caffeine.CaffeineCacheManager . setAllowNullValues ( true ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; org.springframework.cache.caffeine.Cache . put ( STRING , null ) ; assertNull ( org.springframework.cache.caffeine.Cache . get ( STRING ) . get ( ) ) ; org.springframework.cache.caffeine.Cache . evict ( STRING ) ; assertNull ( org.springframework.cache.caffeine.Cache . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CaffeineCacheManager org.springframework.cache.caffeine.CaffeineCacheManager = new CaffeineCacheManager ( STRING ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; Caffeine < java.lang.Object , java.lang.Object > org.springframework.cache.caffeine.Caffeine<java.lang.Object,java.lang.Object> = Caffeine . newBuilder ( ) . maximumSize ( NUMBER ) ; org.springframework.cache.caffeine.CaffeineCacheManager . setCaffeine ( org.springframework.cache.caffeine.Caffeine<java.lang.Object,java.lang.Object> ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertTrue ( org.springframework.cache.caffeine.Cache != org.springframework.cache.caffeine.Cache ) ; org.springframework.cache.caffeine.CaffeineCacheManager . setCaffeine ( org.springframework.cache.caffeine.Caffeine<java.lang.Object,java.lang.Object> ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertSame ( org.springframework.cache.caffeine.Cache , org.springframework.cache.caffeine.Cache ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CaffeineCacheManager org.springframework.cache.caffeine.CaffeineCacheManager = new CaffeineCacheManager ( STRING ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; org.springframework.cache.caffeine.CaffeineCacheManager . setCaffeineSpec ( CaffeineSpec . parse ( STRING ) ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertTrue ( org.springframework.cache.caffeine.Cache != org.springframework.cache.caffeine.Cache ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CaffeineCacheManager org.springframework.cache.caffeine.CaffeineCacheManager = new CaffeineCacheManager ( STRING ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; org.springframework.cache.caffeine.CaffeineCacheManager . setCacheSpecification ( STRING ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertTrue ( org.springframework.cache.caffeine.Cache != org.springframework.cache.caffeine.Cache ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CaffeineCacheManager org.springframework.cache.caffeine.CaffeineCacheManager = new CaffeineCacheManager ( STRING ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; CacheLoader < java.lang.Object , java.lang.Object > org.springframework.cache.caffeine.CacheLoader<java.lang.Object,java.lang.Object> = org.springframework.cache.caffeine.CacheLoader<java.lang.Object,java.lang.Object> ( ) ; org.springframework.cache.caffeine.CaffeineCacheManager . setCacheLoader ( org.springframework.cache.caffeine.CacheLoader<java.lang.Object,java.lang.Object> ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertTrue ( org.springframework.cache.caffeine.Cache != org.springframework.cache.caffeine.Cache ) ; org.springframework.cache.caffeine.CaffeineCacheManager . setCacheLoader ( org.springframework.cache.caffeine.CacheLoader<java.lang.Object,java.lang.Object> ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; assertSame ( org.springframework.cache.caffeine.Cache , org.springframework.cache.caffeine.Cache ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CaffeineCacheManager org.springframework.cache.caffeine.CaffeineCacheManager = new CaffeineCacheManager ( STRING ) ; assertNull ( org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ) ; org.springframework.cache.caffeine.CaffeineCacheManager . setCacheNames ( null ) ; assertNotNull ( org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CaffeineCacheManager org.springframework.cache.caffeine.CaffeineCacheManager = new CaffeineCacheManager ( STRING ) ; org.springframework.cache.caffeine.CaffeineCacheManager . setCacheLoader ( new CacheLoader < java.lang.Object , java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) throws java.lang.Exception { if ( STRING . boolean ( java.lang.Object ) ) { return STRING ; } throw new java.lang.IllegalArgumentException ( STRING ) ; } } ) ; Cache org.springframework.cache.caffeine.Cache = org.springframework.cache.caffeine.CaffeineCacheManager . getCache ( STRING ) ; Cache . Cache Cache.ValueWrapper = org.springframework.cache.caffeine.Cache . get ( STRING ) ; assertNotNull ( Cache.ValueWrapper ) ; assertEquals ( STRING , Cache.ValueWrapper . get ( ) ) ; org.springframework.cache.caffeine.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; org.springframework.cache.caffeine.ExpectedException . expectMessage ( STRING ) ; assertNull ( org.springframework.cache.caffeine.Cache . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) throws java.lang.Exception { if ( STRING . boolean ( java.lang.Object ) ) { return STRING ; } throw new java.lang.IllegalArgumentException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private org.springframework.cache.caffeine.CacheLoader<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > org.springframework.cache.caffeine.CacheLoader<java.lang.Object,java.lang.Object> ( ) { return mock ( CacheLoader .class ) ; }  <METHOD_END>
