<METHOD_START> @ Before public void void ( ) java.lang.Exception { org.springframework.web.method.annotation.ModelMethodProcessor = new ModelMethodProcessor ( ) ; org.springframework.web.method.annotation.ModelAndViewContainer = new ModelAndViewContainer ( ) ; java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<? extends org.springframework.web.method.annotation.ModelMethodProcessorTests> ( ) . java.lang.reflect.Method ( STRING , Model .class ) ; org.springframework.web.method.annotation.MethodParameter = new MethodParameter ( java.lang.reflect.Method , NUMBER ) ; org.springframework.web.method.annotation.MethodParameter = new MethodParameter ( java.lang.reflect.Method , - NUMBER ) ; org.springframework.web.method.annotation.NativeWebRequest = new ServletWebRequest ( new MockHttpServletRequest ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertTrue ( org.springframework.web.method.annotation.ModelMethodProcessor . supportsParameter ( org.springframework.web.method.annotation.MethodParameter ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertTrue ( org.springframework.web.method.annotation.ModelMethodProcessor . supportsReturnType ( org.springframework.web.method.annotation.MethodParameter ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertSame ( org.springframework.web.method.annotation.ModelAndViewContainer . getModel ( ) , org.springframework.web.method.annotation.ModelMethodProcessor . resolveArgument ( org.springframework.web.method.annotation.MethodParameter , org.springframework.web.method.annotation.ModelAndViewContainer , org.springframework.web.method.annotation.NativeWebRequest , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.web.method.annotation.ModelAndViewContainer . addAttribute ( STRING , STRING ) ; Model org.springframework.web.method.annotation.Model = new ExtendedModelMap ( ) ; org.springframework.web.method.annotation.Model . addAttribute ( STRING , STRING ) ; org.springframework.web.method.annotation.ModelMethodProcessor . handleReturnValue ( org.springframework.web.method.annotation.Model , org.springframework.web.method.annotation.MethodParameter , org.springframework.web.method.annotation.ModelAndViewContainer , org.springframework.web.method.annotation.NativeWebRequest ) ; assertEquals ( STRING , org.springframework.web.method.annotation.ModelAndViewContainer . getModel ( ) . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.web.method.annotation.ModelAndViewContainer . getModel ( ) . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private org.springframework.web.method.annotation.Model org.springframework.web.method.annotation.Model ( Model org.springframework.web.method.annotation.Model ) { return null ; }  <METHOD_END>
