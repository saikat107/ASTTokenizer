<METHOD_START> void ( ) { super( new RecipientListRouter ( ) ); }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( java.lang.String java.lang.String ) { return org.springframework.integration.dsl.RecipientListRouterSpec ( java.lang.String , ( java.lang.String ) null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { if ( StringUtils . hasText ( java.lang.String ) ) { return org.springframework.integration.dsl.RecipientListRouterSpec ( java.lang.String , PARSER . parseExpression ( java.lang.String ) ) ; } else { this . handler . addRecipient ( java.lang.String ) ; return _this ( ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( java.lang.String java.lang.String , Expression org.springframework.integration.dsl.Expression ) { ExpressionEvaluatingSelector org.springframework.integration.dsl.ExpressionEvaluatingSelector = new ExpressionEvaluatingSelector ( org.springframework.integration.dsl.Expression ) ; this . handler . addRecipient ( java.lang.String , org.springframework.integration.dsl.ExpressionEvaluatingSelector ) ; this . componentsToRegister . add ( org.springframework.integration.dsl.ExpressionEvaluatingSelector ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( java.lang.String java.lang.String , MessageSelector org.springframework.integration.dsl.MessageSelector ) { return org.springframework.integration.dsl.RecipientListRouterSpec ( java.lang.String , org.springframework.integration.dsl.MessageSelector ) ; }  <METHOD_END>
<METHOD_START> public < P > org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( java.lang.String java.lang.String , GenericSelector < P > org.springframework.integration.dsl.GenericSelector<P> ) { MessageSelector org.springframework.integration.dsl.MessageSelector ; if ( org.springframework.integration.dsl.GenericSelector<P> instanceof MessageSelector ) { org.springframework.integration.dsl.MessageSelector = ( MessageSelector ) org.springframework.integration.dsl.GenericSelector<P> ; } else { org.springframework.integration.dsl.MessageSelector = boolean ( org.springframework.integration.dsl.GenericSelector<P> ) ? new MethodInvokingSelector ( new LambdaMessageProcessor ( org.springframework.integration.dsl.GenericSelector<P> , null ) ) : new MethodInvokingSelector ( org.springframework.integration.dsl.GenericSelector<P> ) ; } this . handler . addRecipient ( java.lang.String , org.springframework.integration.dsl.MessageSelector ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.Object java.lang.Object ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ; return java.lang.Class<> . boolean ( ) && ! java.lang.Class<> . boolean ( ) && ! java.lang.Class<> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( MessageChannel org.springframework.integration.dsl.MessageChannel ) { return org.springframework.integration.dsl.RecipientListRouterSpec ( org.springframework.integration.dsl.MessageChannel , ( java.lang.String ) null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( MessageChannel org.springframework.integration.dsl.MessageChannel , java.lang.String java.lang.String ) { return org.springframework.integration.dsl.RecipientListRouterSpec ( org.springframework.integration.dsl.MessageChannel , StringUtils . hasText ( java.lang.String ) ? PARSER . parseExpression ( java.lang.String ) : null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( MessageChannel org.springframework.integration.dsl.MessageChannel , Expression org.springframework.integration.dsl.Expression ) { if ( org.springframework.integration.dsl.Expression != null ) { ExpressionEvaluatingSelector org.springframework.integration.dsl.ExpressionEvaluatingSelector = new ExpressionEvaluatingSelector ( org.springframework.integration.dsl.Expression ) ; this . handler . addRecipient ( org.springframework.integration.dsl.MessageChannel , org.springframework.integration.dsl.ExpressionEvaluatingSelector ) ; this . componentsToRegister . add ( org.springframework.integration.dsl.ExpressionEvaluatingSelector ) ; } else { this . handler . addRecipient ( org.springframework.integration.dsl.MessageChannel ) ; } return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( MessageChannel org.springframework.integration.dsl.MessageChannel , MessageSelector org.springframework.integration.dsl.MessageSelector ) { return org.springframework.integration.dsl.RecipientListRouterSpec ( org.springframework.integration.dsl.MessageChannel , org.springframework.integration.dsl.MessageSelector ) ; }  <METHOD_END>
<METHOD_START> public < P > org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( MessageChannel org.springframework.integration.dsl.MessageChannel , GenericSelector < P > org.springframework.integration.dsl.GenericSelector<P> ) { MessageSelector org.springframework.integration.dsl.MessageSelector ; if ( org.springframework.integration.dsl.GenericSelector<P> instanceof MessageSelector ) { org.springframework.integration.dsl.MessageSelector = ( MessageSelector ) org.springframework.integration.dsl.GenericSelector<P> ; } else { org.springframework.integration.dsl.MessageSelector = boolean ( org.springframework.integration.dsl.GenericSelector<P> ) ? new MethodInvokingSelector ( new LambdaMessageProcessor ( org.springframework.integration.dsl.GenericSelector<P> , null ) ) : new MethodInvokingSelector ( org.springframework.integration.dsl.GenericSelector<P> ) ; } this . handler . addRecipient ( org.springframework.integration.dsl.MessageChannel , org.springframework.integration.dsl.MessageSelector ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( MessageSelector org.springframework.integration.dsl.MessageSelector , IntegrationFlow org.springframework.integration.dsl.IntegrationFlow ) { return org.springframework.integration.dsl.RecipientListRouterSpec ( org.springframework.integration.dsl.MessageSelector , org.springframework.integration.dsl.IntegrationFlow ) ; }  <METHOD_END>
<METHOD_START> public < P > org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( GenericSelector < P > org.springframework.integration.dsl.GenericSelector<P> , IntegrationFlow org.springframework.integration.dsl.IntegrationFlow ) { Assert . notNull ( org.springframework.integration.dsl.IntegrationFlow , STRING ) ; DirectChannel org.springframework.integration.dsl.DirectChannel = org.springframework.integration.dsl.DirectChannel ( org.springframework.integration.dsl.IntegrationFlow ) ; return org.springframework.integration.dsl.RecipientListRouterSpec ( org.springframework.integration.dsl.DirectChannel , org.springframework.integration.dsl.GenericSelector<P> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( IntegrationFlow org.springframework.integration.dsl.IntegrationFlow ) { return org.springframework.integration.dsl.RecipientListRouterSpec ( ( java.lang.String ) null , org.springframework.integration.dsl.IntegrationFlow ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( java.lang.String java.lang.String , IntegrationFlow org.springframework.integration.dsl.IntegrationFlow ) { return org.springframework.integration.dsl.RecipientListRouterSpec ( StringUtils . hasText ( java.lang.String ) ? PARSER . parseExpression ( java.lang.String ) : null , org.springframework.integration.dsl.IntegrationFlow ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec ( Expression org.springframework.integration.dsl.Expression , IntegrationFlow org.springframework.integration.dsl.IntegrationFlow ) { Assert . notNull ( org.springframework.integration.dsl.IntegrationFlow , STRING ) ; DirectChannel org.springframework.integration.dsl.DirectChannel = org.springframework.integration.dsl.DirectChannel ( org.springframework.integration.dsl.IntegrationFlow ) ; return org.springframework.integration.dsl.RecipientListRouterSpec ( org.springframework.integration.dsl.DirectChannel , org.springframework.integration.dsl.Expression ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.dsl.DirectChannel org.springframework.integration.dsl.DirectChannel ( IntegrationFlow org.springframework.integration.dsl.IntegrationFlow ) { DirectChannel org.springframework.integration.dsl.DirectChannel = new DirectChannel ( ) ; IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder = IntegrationFlows . from ( org.springframework.integration.dsl.DirectChannel ) ; org.springframework.integration.dsl.IntegrationFlow . configure ( org.springframework.integration.dsl.IntegrationFlowBuilder ) ; this . componentsToRegister . add ( org.springframework.integration.dsl.IntegrationFlowBuilder . get ( ) ) ; return org.springframework.integration.dsl.DirectChannel ; }  <METHOD_END>
