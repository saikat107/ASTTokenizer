<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertEquals ( java.util.Locale , this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . resolveLocale ( org.springframework.web.servlet.i18n.HttpServletRequest ( java.util.Locale ) ) ) ; assertEquals ( java.util.Locale , this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . resolveLocale ( org.springframework.web.servlet.i18n.HttpServletRequest ( java.util.Locale , java.util.Locale ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . setSupportedLocales ( java.util.Collections . java.util.List<java.util.Locale> ( java.util.Locale ) ) ; assertEquals ( java.util.Locale , this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . resolveLocale ( org.springframework.web.servlet.i18n.HttpServletRequest ( java.util.Locale , java.util.Locale ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . setSupportedLocales ( java.util.Collections . java.util.List<java.util.Locale> ( java.util.Locale ) ) ; assertEquals ( java.util.Locale , this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . resolveLocale ( org.springframework.web.servlet.i18n.HttpServletRequest ( java.util.Locale , java.util.Locale ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . setSupportedLocales ( java.util.Arrays . java.util.List<java.util.Locale> ( java.util.Locale , java.util.Locale ) ) ; this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . setDefaultLocale ( java.util.Locale . java.util.Locale ) ; MockHttpServletRequest org.springframework.web.servlet.i18n.MockHttpServletRequest = new MockHttpServletRequest ( ) ; org.springframework.web.servlet.i18n.MockHttpServletRequest . addHeader ( STRING , java.util.Locale . java.lang.String ( ) ) ; org.springframework.web.servlet.i18n.MockHttpServletRequest . setPreferredLocales ( java.util.Collections . java.util.List<java.util.Locale> ( java.util.Locale ) ) ; assertEquals ( java.util.Locale . java.util.Locale , this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . resolveLocale ( org.springframework.web.servlet.i18n.MockHttpServletRequest ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . setDefaultLocale ( java.util.Locale ) ; MockHttpServletRequest org.springframework.web.servlet.i18n.MockHttpServletRequest = new MockHttpServletRequest ( ) ; assertEquals ( java.util.Locale , this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . resolveLocale ( org.springframework.web.servlet.i18n.MockHttpServletRequest ) ) ; org.springframework.web.servlet.i18n.MockHttpServletRequest . addHeader ( STRING , java.util.Locale . java.lang.String ( ) ) ; org.springframework.web.servlet.i18n.MockHttpServletRequest . setPreferredLocales ( java.util.Collections . java.util.List<java.util.Locale> ( java.util.Locale ) ) ; assertEquals ( java.util.Locale , this . org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver . resolveLocale ( org.springframework.web.servlet.i18n.MockHttpServletRequest ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.servlet.i18n.HttpServletRequest org.springframework.web.servlet.i18n.HttpServletRequest ( java.util.Locale ... java.util.Locale[] ) { MockHttpServletRequest org.springframework.web.servlet.i18n.MockHttpServletRequest = new MockHttpServletRequest ( ) ; org.springframework.web.servlet.i18n.MockHttpServletRequest . setPreferredLocales ( java.util.Arrays . java.util.List<java.util.Locale> ( java.util.Locale[] ) ) ; return org.springframework.web.servlet.i18n.MockHttpServletRequest ; }  <METHOD_END>
