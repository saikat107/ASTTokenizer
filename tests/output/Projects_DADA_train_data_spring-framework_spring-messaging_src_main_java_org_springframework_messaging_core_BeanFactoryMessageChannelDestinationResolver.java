<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( BeanFactory org.springframework.messaging.core.BeanFactory ) { Assert . notNull ( org.springframework.messaging.core.BeanFactory , STRING ) ; this . org.springframework.messaging.core.BeanFactory = org.springframework.messaging.core.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.messaging.core.BeanFactory ) { this . org.springframework.messaging.core.BeanFactory = org.springframework.messaging.core.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.messaging.core.MessageChannel org.springframework.messaging.core.MessageChannel ( java.lang.String java.lang.String ) { Assert . state ( this . org.springframework.messaging.core.BeanFactory != null , STRING ) ; try { return this . org.springframework.messaging.core.BeanFactory . getBean ( java.lang.String , MessageChannel .class ) ; } catch ( BeansException org.springframework.messaging.core.BeansException ) { throw new DestinationResolutionException ( STRING + java.lang.String + STRING , org.springframework.messaging.core.BeansException ) ; } }  <METHOD_END>
