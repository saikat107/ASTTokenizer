<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , ObjectFactory < ? > org.springframework.boot.test.autoconfigure.web.servlet.ObjectFactory<?> ) { synchronized ( this . java.util.Map<java.lang.String,java.lang.Object> ) { java.lang.Object java.lang.Object = this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; if ( java.lang.Object == null ) { java.lang.Object = org.springframework.boot.test.autoconfigure.web.servlet.ObjectFactory<> . getObject ( ) ; this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; } return java.lang.Object ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { synchronized ( this . java.util.Map<java.lang.String,java.lang.Object> ) { return this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Runnable java.lang.Runnable ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { boolean boolean = false ; synchronized ( this . java.util.Map<java.lang.String,java.lang.Object> ) { for ( java.lang.Object java.lang.Object : this . java.util.Map<java.lang.String,java.lang.Object> . java.util.Collection<java.lang.Object> ( ) ) { boolean = true ; if ( java.lang.Object instanceof WebDriver ) { ( ( WebDriver ) java.lang.Object ) . quit ( ) ; } } this . java.util.Map<java.lang.String,java.lang.Object> . void ( ) ; } return boolean ; }  <METHOD_END>
<METHOD_START> public static void void ( ConfigurableApplicationContext org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableApplicationContext ) { if ( ! ClassUtils . isPresent ( java.lang.String , null ) ) { return; } ConfigurableListableBeanFactory org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableListableBeanFactory = org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableApplicationContext . getBeanFactory ( ) ; if ( org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableListableBeanFactory . getRegisteredScope ( java.lang.String ) == null ) { org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableListableBeanFactory . registerScope ( java.lang.String , new org.springframework.boot.test.autoconfigure.web.servlet.WebDriverScope ( ) ) ; } org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableApplicationContext . addBeanFactoryPostProcessor ( new BeanFactoryPostProcessor ( ) { @ java.lang.Override public void void ( ConfigurableListableBeanFactory org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableListableBeanFactory ) throws org.springframework.boot.test.autoconfigure.web.servlet.BeansException { for ( java.lang.String java.lang.String : java.lang.String[] ) { for ( java.lang.String java.lang.String : org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableListableBeanFactory . getBeanNamesForType ( ClassUtils . resolveClassName ( java.lang.String , null ) ) ) { BeanDefinition org.springframework.boot.test.autoconfigure.web.servlet.BeanDefinition = org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableListableBeanFactory . getBeanDefinition ( java.lang.String ) ; if ( ! StringUtils . hasLength ( org.springframework.boot.test.autoconfigure.web.servlet.BeanDefinition . getScope ( ) ) ) { org.springframework.boot.test.autoconfigure.web.servlet.BeanDefinition . setScope ( java.lang.String ) ; } } } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableListableBeanFactory org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableListableBeanFactory ) throws org.springframework.boot.test.autoconfigure.web.servlet.BeansException { for ( java.lang.String java.lang.String : java.lang.String[] ) { for ( java.lang.String java.lang.String : org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableListableBeanFactory . getBeanNamesForType ( ClassUtils . resolveClassName ( java.lang.String , null ) ) ) { BeanDefinition org.springframework.boot.test.autoconfigure.web.servlet.BeanDefinition = org.springframework.boot.test.autoconfigure.web.servlet.ConfigurableListableBeanFactory . getBeanDefinition ( java.lang.String ) ; if ( ! StringUtils . hasLength ( org.springframework.boot.test.autoconfigure.web.servlet.BeanDefinition . getScope ( ) ) ) { org.springframework.boot.test.autoconfigure.web.servlet.BeanDefinition . setScope ( java.lang.String ) ; } } } }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.test.autoconfigure.web.servlet.WebDriverScope org.springframework.boot.test.autoconfigure.web.servlet.WebDriverScope ( ApplicationContext org.springframework.boot.test.autoconfigure.web.servlet.ApplicationContext ) { if ( org.springframework.boot.test.autoconfigure.web.servlet.ApplicationContext instanceof ConfigurableApplicationContext ) { Scope org.springframework.boot.test.autoconfigure.web.servlet.Scope = ( ( ConfigurableApplicationContext ) org.springframework.boot.test.autoconfigure.web.servlet.ApplicationContext ) . getBeanFactory ( ) . getRegisteredScope ( java.lang.String ) ; return ( org.springframework.boot.test.autoconfigure.web.servlet.Scope instanceof org.springframework.boot.test.autoconfigure.web.servlet.WebDriverScope ? ( org.springframework.boot.test.autoconfigure.web.servlet.WebDriverScope ) org.springframework.boot.test.autoconfigure.web.servlet.Scope : null ) ; } return null ; }  <METHOD_END>
