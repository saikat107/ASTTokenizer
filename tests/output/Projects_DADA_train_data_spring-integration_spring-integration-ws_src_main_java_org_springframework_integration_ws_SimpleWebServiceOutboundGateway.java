<METHOD_START> public void ( DestinationProvider org.springframework.integration.ws.DestinationProvider ) { this( org.springframework.integration.ws.DestinationProvider , null , null ); }  <METHOD_END>
<METHOD_START> public void ( DestinationProvider org.springframework.integration.ws.DestinationProvider , SourceExtractor < ? > org.springframework.integration.ws.SourceExtractor<?> ) { this( org.springframework.integration.ws.DestinationProvider , org.springframework.integration.ws.SourceExtractor<> , null ); }  <METHOD_END>
<METHOD_START> public void ( DestinationProvider org.springframework.integration.ws.DestinationProvider , SourceExtractor < ? > org.springframework.integration.ws.SourceExtractor<?> , WebServiceMessageFactory org.springframework.integration.ws.WebServiceMessageFactory ) { super( org.springframework.integration.ws.DestinationProvider , org.springframework.integration.ws.WebServiceMessageFactory ); this . org.springframework.integration.ws.SourceExtractor<?> = ( org.springframework.integration.ws.SourceExtractor<> != null ) ? org.springframework.integration.ws.SourceExtractor<> : new org.springframework.integration.ws.SimpleWebServiceOutboundGateway.DefaultSourceExtractor ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this( java.lang.String , null , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , SourceExtractor < ? > org.springframework.integration.ws.SourceExtractor<?> ) { this( java.lang.String , org.springframework.integration.ws.SourceExtractor<> , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , SourceExtractor < ? > org.springframework.integration.ws.SourceExtractor<?> , WebServiceMessageFactory org.springframework.integration.ws.WebServiceMessageFactory ) { super( java.lang.String , org.springframework.integration.ws.WebServiceMessageFactory ); this . org.springframework.integration.ws.SourceExtractor<?> = ( org.springframework.integration.ws.SourceExtractor<> != null ) ? org.springframework.integration.ws.SourceExtractor<> : new org.springframework.integration.ws.SimpleWebServiceOutboundGateway.DefaultSourceExtractor ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.String java.lang.String , final Message < ? > org.springframework.integration.ws.Message<?> , final WebServiceMessageCallback org.springframework.integration.ws.WebServiceMessageCallback ) { java.lang.Object java.lang.Object = org.springframework.integration.ws.Message<> . getPayload ( ) ; javax.xml.transform.Result javax.xml.transform.Result = null ; if ( java.lang.Object instanceof java.lang.String ) { javax.xml.transform.Result = new StringResult ( ) ; } else if ( java.lang.Object instanceof org.w3c.dom.Document ) { javax.xml.transform.Result = new javax.xml.transform.dom.DOMResult ( ) ; } return getWebServiceTemplate ( ) . sendAndReceive ( java.lang.String , new org.springframework.integration.ws.SimpleWebServiceOutboundGateway.SimpleRequestMessageCallback ( org.springframework.integration.ws.WebServiceMessageCallback , org.springframework.integration.ws.Message<> ) , new org.springframework.integration.ws.SimpleWebServiceOutboundGateway.SimpleResponseMessageExtractor ( javax.xml.transform.Result ) ) ; }  <METHOD_END>
<METHOD_START> void ( WebServiceMessageCallback org.springframework.integration.ws.WebServiceMessageCallback , Message < ? > org.springframework.integration.ws.Message<?> ) { super( org.springframework.integration.ws.WebServiceMessageCallback , org.springframework.integration.ws.Message<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( WebServiceMessage org.springframework.integration.ws.WebServiceMessage , java.lang.Object java.lang.Object )				throws java.io.IOException , javax.xml.transform.TransformerException { javax.xml.transform.Source javax.xml.transform.Source = this . javax.xml.transform.Source ( java.lang.Object ) ; transform ( javax.xml.transform.Source , org.springframework.integration.ws.WebServiceMessage . getPayloadResult ( ) ) ; if ( org.springframework.integration.ws.WebServiceMessage instanceof MimeMessage && java.lang.Object instanceof MimeMessage ) { void ( ( MimeMessage ) java.lang.Object , ( MimeMessage ) org.springframework.integration.ws.WebServiceMessage ) ; } }  <METHOD_END>
<METHOD_START> private javax.xml.transform.Source javax.xml.transform.Source ( java.lang.Object java.lang.Object ) throws java.io.IOException , javax.xml.transform.TransformerException { javax.xml.transform.Source javax.xml.transform.Source = null ; if ( java.lang.Object instanceof javax.xml.transform.Source ) { javax.xml.transform.Source = ( javax.xml.transform.Source ) java.lang.Object ; java.lang.Object java.lang.Object = org.springframework.integration.ws.SimpleWebServiceOutboundGateway .this . org.springframework.integration.ws.SourceExtractor<> . extractData ( javax.xml.transform.Source ) ; Assert . isInstanceOf ( javax.xml.transform.Source .class , java.lang.Object ) ; javax.xml.transform.Source = ( javax.xml.transform.Source ) java.lang.Object ; } else if ( java.lang.Object instanceof java.lang.String ) { javax.xml.transform.Source = new StringSource ( ( java.lang.String ) java.lang.Object ) ; } else if ( java.lang.Object instanceof org.w3c.dom.Document ) { javax.xml.transform.Source = new javax.xml.transform.dom.DOMSource ( ( org.w3c.dom.Document ) java.lang.Object ) ; } else if ( java.lang.Object instanceof WebServiceMessage ) { javax.xml.transform.Source = ( ( WebServiceMessage ) java.lang.Object ) . getPayloadSource ( ) ; } else { throw new MessagingException ( STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) + STRING + this . java.lang.Class<? extends org.springframework.integration.ws.SimpleWebServiceOutboundGateway.SimpleRequestMessageCallback> ( ) . java.lang.String ( ) + STRING + javax.xml.transform.Source .class . java.lang.String ( ) + STRING + org.w3c.dom.Document .class . java.lang.String ( ) + STRING + WebServiceMessage .class . java.lang.String ( ) + STRING + STRING + MarshallingWebServiceOutboundGateway .class . java.lang.String ( ) + STRING ) ; } return javax.xml.transform.Source ; }  <METHOD_END>
<METHOD_START> private void void ( MimeMessage org.springframework.integration.ws.MimeMessage , MimeMessage org.springframework.integration.ws.MimeMessage ) { for ( java.util.Iterator<org.springframework.integration.ws.Attachment> < Attachment > java.util.Iterator<org.springframework.integration.ws.Attachment> = org.springframework.integration.ws.MimeMessage . getAttachments ( ) ; java.util.Iterator<org.springframework.integration.ws.Attachment> . hasNext ( ) ; ) { Attachment org.springframework.integration.ws.Attachment = java.util.Iterator<org.springframework.integration.ws.Attachment> . next ( ) ; org.springframework.integration.ws.MimeMessage . addAttachment ( org.springframework.integration.ws.Attachment . getContentId ( ) , org.springframework.integration.ws.Attachment . getDataHandler ( ) ) ; } }  <METHOD_END>
<METHOD_START> void ( javax.xml.transform.Result javax.xml.transform.Result ) { super(); this . javax.xml.transform.Result = javax.xml.transform.Result ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( WebServiceMessage org.springframework.integration.ws.WebServiceMessage ) throws java.io.IOException , javax.xml.transform.TransformerException { if ( ! org.springframework.integration.ws.SimpleWebServiceOutboundGateway .this . boolean ) { return org.springframework.integration.ws.WebServiceMessage ; } else { javax.xml.transform.Source javax.xml.transform.Source = org.springframework.integration.ws.WebServiceMessage . getPayloadSource ( ) ; if ( javax.xml.transform.Source != null && this . javax.xml.transform.Result != null ) { this . transform ( javax.xml.transform.Source , this . javax.xml.transform.Result ) ; if ( this . javax.xml.transform.Result instanceof StringResult ) { return this . javax.xml.transform.Result . java.lang.String ( ) ; } else if ( this . javax.xml.transform.Result instanceof javax.xml.transform.dom.DOMResult ) { return ( ( javax.xml.transform.dom.DOMResult ) this . javax.xml.transform.Result ) . org.w3c.dom.Node ( ) ; } else { return this . javax.xml.transform.Result ; } } return javax.xml.transform.Source ; } }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.xml.transform.dom.DOMSource javax.xml.transform.dom.DOMSource ( javax.xml.transform.Source javax.xml.transform.Source ) throws java.io.IOException , javax.xml.transform.TransformerException { if ( javax.xml.transform.Source instanceof javax.xml.transform.dom.DOMSource ) { return ( javax.xml.transform.dom.DOMSource ) javax.xml.transform.Source ; } javax.xml.transform.dom.DOMResult javax.xml.transform.dom.DOMResult = new javax.xml.transform.dom.DOMResult ( ) ; this . transform ( javax.xml.transform.Source , javax.xml.transform.dom.DOMResult ) ; return new javax.xml.transform.dom.DOMSource ( javax.xml.transform.dom.DOMResult . org.w3c.dom.Node ( ) ) ; }  <METHOD_END>
