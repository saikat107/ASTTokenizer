<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { this( java.lang.ClassLoader , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader , java.lang.ClassLoader java.lang.ClassLoader ) { super( java.lang.ClassLoader ); this . java.lang.ClassLoader = java.lang.ClassLoader ; for ( java.lang.String java.lang.String : java.lang.String[] ) { excludePackage ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.String java.lang.String ) throws java.lang.ClassNotFoundException { if ( this . java.lang.ClassLoader != null && boolean ( java.lang.String ) ) { return this . java.lang.ClassLoader . java.lang.Class<?> ( java.lang.String ) ; } return super. loadClass ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.String java.lang.String , boolean boolean ) throws java.lang.ClassNotFoundException { if ( boolean ( java.lang.String ) ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<?> ( java.lang.String ) ; if ( java.lang.Class<> != null ) { if ( boolean ) { resolveClass ( java.lang.Class<> ) ; } return java.lang.Class<> ; } } return super. loadClass ( java.lang.String , boolean ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.String java.lang.String ) { return ! isExcluded ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.String java.lang.String ) throws java.lang.ClassNotFoundException { java.lang.Class<?> < ? > java.lang.Class<?> = findLoadedClass ( java.lang.String ) ; if ( java.lang.Class<> == null ) { byte [] byte[] = byte[] ( java.lang.String ) ; if ( byte[] != null ) { java.lang.Class<?> = defineClass ( java.lang.String , byte[] , NUMBER , byte[] . int ) ; } } return java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> protected byte [] byte[] ( java.lang.String java.lang.String ) throws java.lang.ClassNotFoundException { java.io.InputStream java.io.InputStream = java.io.InputStream ( java.lang.String ) ; if ( java.io.InputStream == null ) { return null ; } try { byte [] byte[] = FileCopyUtils . copyToByteArray ( java.io.InputStream ) ; return byte[] ( java.lang.String , byte[] ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.ClassNotFoundException ( STRING + java.lang.String + STRING , java.io.IOException ) ; } }  <METHOD_END>
<METHOD_START> protected java.io.InputStream java.io.InputStream ( java.lang.String java.lang.String ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( '.' , '/' ) + java.lang.String ; return getParent ( ) . getResourceAsStream ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected byte [] byte[] ( java.lang.String java.lang.String , byte [] byte[] ) { return byte[] ; }  <METHOD_END>
