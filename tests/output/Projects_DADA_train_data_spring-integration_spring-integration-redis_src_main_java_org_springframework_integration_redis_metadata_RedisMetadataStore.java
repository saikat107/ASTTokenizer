<METHOD_START> public void ( RedisProperties org.springframework.integration.redis.metadata.RedisProperties ) { Assert . notNull ( org.springframework.integration.redis.metadata.RedisProperties , STRING ) ; this . org.springframework.integration.redis.metadata.RedisProperties = org.springframework.integration.redis.metadata.RedisProperties ; }  <METHOD_END>
<METHOD_START> public void ( RedisConnectionFactory org.springframework.integration.redis.metadata.RedisConnectionFactory ) { this( org.springframework.integration.redis.metadata.RedisConnectionFactory , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( RedisConnectionFactory org.springframework.integration.redis.metadata.RedisConnectionFactory , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.integration.redis.metadata.RedisConnectionFactory , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; RedisOperations < java.lang.String , java.lang.String > org.springframework.integration.redis.metadata.RedisOperations<java.lang.String,java.lang.String> = new StringRedisTemplate ( org.springframework.integration.redis.metadata.RedisConnectionFactory ) ; BoundHashOperations < java.lang.String , java.lang.String , java.lang.String > org.springframework.integration.redis.metadata.BoundHashOperations<java.lang.String,java.lang.String,java.lang.String> = org.springframework.integration.redis.metadata.RedisOperations<java.lang.String,java.lang.String> . boundHashOps ( java.lang.String ) ; this . org.springframework.integration.redis.metadata.RedisProperties = new RedisProperties ( org.springframework.integration.redis.metadata.BoundHashOperations<java.lang.String,java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public void ( RedisOperations < java.lang.String , ? > org.springframework.integration.redis.metadata.RedisOperations<java.lang.String,?> ) { this( org.springframework.integration.redis.metadata.RedisOperations<java.lang.String,> , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( RedisOperations < java.lang.String , ? > org.springframework.integration.redis.metadata.RedisOperations<java.lang.String,?> , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.integration.redis.metadata.RedisOperations<java.lang.String,> , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; BoundHashOperations < java.lang.String , java.lang.String , java.lang.String > org.springframework.integration.redis.metadata.BoundHashOperations<java.lang.String,java.lang.String,java.lang.String> = org.springframework.integration.redis.metadata.RedisOperations<java.lang.String,> . boundHashOps ( java.lang.String ) ; this . org.springframework.integration.redis.metadata.RedisProperties = new RedisProperties ( org.springframework.integration.redis.metadata.BoundHashOperations<java.lang.String,java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; this . org.springframework.integration.redis.metadata.RedisProperties . put ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; java.lang.Object java.lang.Object = this . org.springframework.integration.redis.metadata.RedisProperties . get ( java.lang.String ) ; if ( java.lang.Object != null ) { Assert . isInstanceOf ( java.lang.String .class , java.lang.Object , STRING ) ; } return ( java.lang.String ) java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; java.lang.Object java.lang.Object = this . org.springframework.integration.redis.metadata.RedisProperties . remove ( java.lang.String ) ; if ( java.lang.Object != null ) { Assert . isInstanceOf ( java.lang.String .class , java.lang.Object , STRING ) ; } return ( java.lang.String ) java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; java.lang.Object java.lang.Object = this . org.springframework.integration.redis.metadata.RedisProperties . putIfAbsent ( java.lang.String , java.lang.String ) ; if ( java.lang.Object != null ) { Assert . isInstanceOf ( java.lang.String .class , java.lang.Object , STRING ) ; } return ( java.lang.String ) java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; return this . org.springframework.integration.redis.metadata.RedisProperties . replace ( java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
