<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.DateOperatorFactory org.springframework.data.mongodb.core.aggregation.DateOperators.DateOperatorFactory ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DateOperatorFactory ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.DateOperatorFactory org.springframework.data.mongodb.core.aggregation.DateOperators.DateOperatorFactory ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DateOperatorFactory ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = null ; }  <METHOD_END>
<METHOD_START> public void ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; this . java.lang.String = null ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear . org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear . org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth . org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth . org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek . org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek . org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.Year org.springframework.data.mongodb.core.aggregation.DateOperators.Year ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.Year . org.springframework.data.mongodb.core.aggregation.DateOperators.Year ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.Year . org.springframework.data.mongodb.core.aggregation.DateOperators.Year ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.Month org.springframework.data.mongodb.core.aggregation.DateOperators.Month ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.Month . org.springframework.data.mongodb.core.aggregation.DateOperators.Month ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.Month . org.springframework.data.mongodb.core.aggregation.DateOperators.Month ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.Week org.springframework.data.mongodb.core.aggregation.DateOperators.Week ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.Week . org.springframework.data.mongodb.core.aggregation.DateOperators.Week ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.Week . org.springframework.data.mongodb.core.aggregation.DateOperators.Week ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.Hour org.springframework.data.mongodb.core.aggregation.DateOperators.Hour ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.Hour . org.springframework.data.mongodb.core.aggregation.DateOperators.Hour ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.Hour . org.springframework.data.mongodb.core.aggregation.DateOperators.Hour ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.Minute org.springframework.data.mongodb.core.aggregation.DateOperators.Minute ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.Minute . org.springframework.data.mongodb.core.aggregation.DateOperators.Minute ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.Minute . org.springframework.data.mongodb.core.aggregation.DateOperators.Minute ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.Second org.springframework.data.mongodb.core.aggregation.DateOperators.Second ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.Second . org.springframework.data.mongodb.core.aggregation.DateOperators.Second ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.Second . org.springframework.data.mongodb.core.aggregation.DateOperators.Second ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond . org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond . org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString ( java.lang.String java.lang.String ) { return ( boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString . org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString.FormatBuilder ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString . org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString.FormatBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) . toString ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek . org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek . org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek . org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek . org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear . org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear . org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return java.lang.String != null ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfYear ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfMonth ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DayOfWeek ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Year org.springframework.data.mongodb.core.aggregation.DateOperators.Year ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Year ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Year org.springframework.data.mongodb.core.aggregation.DateOperators.Year ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Year ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Month org.springframework.data.mongodb.core.aggregation.DateOperators.Month ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Month ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Month org.springframework.data.mongodb.core.aggregation.DateOperators.Month ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Month ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Week org.springframework.data.mongodb.core.aggregation.DateOperators.Week ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Week ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Week org.springframework.data.mongodb.core.aggregation.DateOperators.Week ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Week ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Hour org.springframework.data.mongodb.core.aggregation.DateOperators.Hour ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Hour ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Hour org.springframework.data.mongodb.core.aggregation.DateOperators.Hour ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Hour ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Minute org.springframework.data.mongodb.core.aggregation.DateOperators.Minute ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Minute ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Minute org.springframework.data.mongodb.core.aggregation.DateOperators.Minute ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Minute ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Second org.springframework.data.mongodb.core.aggregation.DateOperators.Second ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Second ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Second org.springframework.data.mongodb.core.aggregation.DateOperators.Second ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Second ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.Millisecond ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString.FormatBuilder org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString.FormatBuilder ( final java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString.FormatBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString ( java.util.Map<java.lang.String,java.lang.Object> ( Fields . field ( java.lang.String ) , java.lang.String ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString ( java.util.Map<java.lang.String,java.lang.Object> ( Fields . field ( java.lang.String ) , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString.FormatBuilder org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString.FormatBuilder ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString.FormatBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString ( java.util.Map<java.lang.String,java.lang.Object> ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.String ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString ( java.util.Map<java.lang.String,java.lang.Object> ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> private static java . util . java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { java . util . java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( NUMBER ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.String ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.Object ) ; return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString org.springframework.data.mongodb.core.aggregation.DateOperators.DateToString ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.IsoDayOfWeek ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeek ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.DateOperators.IsoWeekYear ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
