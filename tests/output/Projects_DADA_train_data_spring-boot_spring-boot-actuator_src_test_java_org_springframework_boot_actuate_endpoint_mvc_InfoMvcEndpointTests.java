<METHOD_START> @ Before public void void ( ) { this . org.springframework.boot.actuate.endpoint.mvc.WebApplicationContext . getBean ( InfoEndpoint .class ) . setEnabled ( true ) ; this . org.springframework.boot.actuate.endpoint.mvc.MockMvc = MockMvcBuilders . webAppContextSetup ( this . org.springframework.boot.actuate.endpoint.mvc.WebApplicationContext ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.actuate.endpoint.mvc.MockMvc . perform ( get ( STRING ) ) . andExpect ( status ( ) . isOk ( ) ) . andExpect ( content ( ) . string ( containsString ( STRING ) ) ) . andExpect ( content ( ) . string ( containsString ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.actuate.endpoint.mvc.MockMvc . perform ( get ( STRING ) ) . andExpect ( status ( ) . isOk ( ) ) . andExpect ( header ( ) . string ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.actuate.endpoint.mvc.MockMvc . perform ( get ( STRING ) . header ( HttpHeaders . ACCEPT , MediaType . APPLICATION_JSON_VALUE ) ) . andExpect ( status ( ) . isOk ( ) ) . andExpect ( header ( ) . string ( STRING , MediaType . APPLICATION_JSON_UTF8_VALUE ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.endpoint.mvc.InfoEndpoint org.springframework.boot.actuate.endpoint.mvc.InfoEndpoint ( ) { return new InfoEndpoint ( java.util.Arrays . java.util.List ( org.springframework.boot.actuate.endpoint.mvc.InfoContributor ( ) , org.springframework.boot.actuate.endpoint.mvc.InfoContributor ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.endpoint.mvc.InfoContributor org.springframework.boot.actuate.endpoint.mvc.InfoContributor ( ) { return new InfoContributor ( ) { @ java.lang.Override public void void ( Info . Info Info.Builder ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; Info.Builder . withDetail ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Info . Info Info.Builder ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; Info.Builder . withDetail ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.endpoint.mvc.InfoContributor org.springframework.boot.actuate.endpoint.mvc.InfoContributor ( ) { return new InfoContributor ( ) { @ java.lang.Override public void void ( Info . Info Info.Builder ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; Info.Builder . withDetail ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Info . Info Info.Builder ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; Info.Builder . withDetail ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
