<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return this . java.lang.Object ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { if ( java.lang.Class<> != null && ! java.lang.Class<> . boolean ( ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return this . java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . java.lang.Boolean = java.lang.Boolean . java.lang.Boolean ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object [] java.lang.Object[] ) { this . java.lang.Object[] = java.lang.Object[] ; }  <METHOD_END>
<METHOD_START> protected void void ( ) java.lang.IllegalArgumentException { if ( java.lang.Object ( ) == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( ) java.lang.IllegalArgumentException { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<?> ( ) ; java.lang.Object java.lang.Object = java.lang.Object ( ) ; if ( java.lang.Class<> == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( java.lang.Object instanceof java.lang.String ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Object + STRING + STRING + STRING ) ; } if ( ! java.lang.Class<> . boolean ( java.lang.Object ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Class<> . java.lang.String ( ) + STRING + java.lang.Object + STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) + STRING ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( ) { void ( ) ; void ( ) ; ProxyFactory org.springframework.remoting.support.ProxyFactory = new ProxyFactory ( ) ; org.springframework.remoting.support.ProxyFactory . addInterface ( java.lang.Class<?> ( ) ) ; if ( this . java.lang.Boolean != null ? this . java.lang.Boolean . boolean ( ) : this . java.lang.Object[] == null ) { org.springframework.remoting.support.ProxyFactory . addAdvice ( new RemoteInvocationTraceInterceptor ( java.lang.String ( ) ) ) ; } if ( this . java.lang.Object[] != null ) { AdvisorAdapterRegistry org.springframework.remoting.support.AdvisorAdapterRegistry = GlobalAdvisorAdapterRegistry . getInstance ( ) ; for ( int int = NUMBER ; int < this . java.lang.Object[] . int ; int ++ ) { org.springframework.remoting.support.ProxyFactory . addAdvisor ( org.springframework.remoting.support.AdvisorAdapterRegistry . wrap ( this . java.lang.Object[] [ int ] ) ) ; } } org.springframework.remoting.support.ProxyFactory . setTarget ( java.lang.Object ( ) ) ; org.springframework.remoting.support.ProxyFactory . setOpaque ( true ) ; return org.springframework.remoting.support.ProxyFactory . getProxy ( getBeanClassLoader ( ) ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return ClassUtils . getShortName ( java.lang.Class<? extends org.springframework.remoting.support.RemoteExporter> ( ) ) ; }  <METHOD_END>
