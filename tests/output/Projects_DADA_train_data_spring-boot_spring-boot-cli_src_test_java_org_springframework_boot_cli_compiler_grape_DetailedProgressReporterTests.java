<METHOD_START> @ Before public void void ( ) { new DetailedProgressReporter ( this . org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession , this . java.io.PrintStream ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.cli.compiler.grape.TransferCancelledException { TransferEvent org.springframework.boot.cli.compiler.grape.TransferEvent = new TransferEvent . TransferEvent ( this . org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession , this . org.springframework.boot.cli.compiler.grape.TransferResource ) . build ( ) ; this . org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession . getTransferListener ( ) . transferStarted ( org.springframework.boot.cli.compiler.grape.TransferEvent ) ; assertThat ( new java.lang.String ( this . java.io.ByteArrayOutputStream . byte[] ( ) ) ) . isEqualTo ( java.lang.String . java.lang.String ( STRING , java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.InterruptedException { java.lang.Thread . void ( NUMBER ) ; TransferEvent org.springframework.boot.cli.compiler.grape.TransferEvent = new TransferEvent . TransferEvent ( this . org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession , this . org.springframework.boot.cli.compiler.grape.TransferResource ) . addTransferredBytes ( NUMBER ) . build ( ) ; this . org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession . getTransferListener ( ) . transferSucceeded ( org.springframework.boot.cli.compiler.grape.TransferEvent ) ; java.lang.String java.lang.String = new java.lang.String ( this . java.io.ByteArrayOutputStream . byte[] ( ) ) . java.lang.String ( STRING , STRING ) ; assertThat ( java.lang.String ) . startsWith ( STRING + java.lang.String + java.lang.String ) ; assertThat ( java.lang.String ) . contains ( STRING ) ; assertThat ( java.lang.String ) . contains ( STRING ) ; assertThat ( java.lang.String ) . endsWith ( STRING ) ; }  <METHOD_END>
