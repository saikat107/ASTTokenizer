<METHOD_START> public void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { this . java.util.Map<java.lang.String,java.lang.Object> = java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.concurrent.Executor java.util.concurrent.Executor ) { this . java.util.concurrent.Executor = java.util.concurrent.Executor ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( javax.xml.ws.WebServiceFeature ... javax.xml.ws.WebServiceFeature[] ) { this . javax.xml.ws.WebServiceFeature[] = javax.xml.ws.WebServiceFeature[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.remoting.jaxws.BeanFactory ) { if ( ! ( org.springframework.remoting.jaxws.BeanFactory instanceof ListableBeanFactory ) ) { throw new java.lang.IllegalStateException ( java.lang.Class<? extends org.springframework.remoting.jaxws.AbstractJaxWsServiceExporter> ( ) . java.lang.String ( ) + STRING ) ; } this . org.springframework.remoting.jaxws.ListableBeanFactory = ( ListableBeanFactory ) org.springframework.remoting.jaxws.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.LinkedHashSet <> ( this . org.springframework.remoting.jaxws.ListableBeanFactory . getBeanDefinitionCount ( ) ) ; java.util.Set<java.lang.String> . boolean ( java.util.Arrays . java.util.List ( this . org.springframework.remoting.jaxws.ListableBeanFactory . getBeanDefinitionNames ( ) ) ) ; if ( this . org.springframework.remoting.jaxws.ListableBeanFactory instanceof ConfigurableBeanFactory ) { java.util.Set<java.lang.String> . boolean ( java.util.Arrays . java.util.List ( ( ( ConfigurableBeanFactory ) this . org.springframework.remoting.jaxws.ListableBeanFactory ) . getSingletonNames ( ) ) ) ; } for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ) { try { java.lang.Class<?> < ? > java.lang.Class<?> = this . org.springframework.remoting.jaxws.ListableBeanFactory . getType ( java.lang.String ) ; if ( java.lang.Class<> != null && ! java.lang.Class<> . boolean ( ) ) { javax.jws.WebService javax.jws.WebService = java.lang.Class<> . javax.jws.WebService ( javax.jws.WebService .class ) ; javax.xml.ws.WebServiceProvider javax.xml.ws.WebServiceProvider = java.lang.Class<> . javax.xml.ws.WebServiceProvider ( javax.xml.ws.WebServiceProvider .class ) ; if ( javax.jws.WebService != null || javax.xml.ws.WebServiceProvider != null ) { javax.xml.ws.Endpoint javax.xml.ws.Endpoint = javax.xml.ws.Endpoint ( this . org.springframework.remoting.jaxws.ListableBeanFactory . getBean ( java.lang.String ) ) ; if ( this . java.util.Map<java.lang.String,java.lang.Object> != null ) { javax.xml.ws.Endpoint . void ( this . java.util.Map<java.lang.String,java.lang.Object> ) ; } if ( this . java.util.concurrent.Executor != null ) { javax.xml.ws.Endpoint . void ( this . java.util.concurrent.Executor ) ; } if ( javax.jws.WebService != null ) { void ( javax.xml.ws.Endpoint , javax.jws.WebService ) ; } else { void ( javax.xml.ws.Endpoint , javax.xml.ws.WebServiceProvider ) ; } this . java.util.Set<javax.xml.ws.Endpoint> . boolean ( javax.xml.ws.Endpoint ) ; } } } catch ( CannotLoadBeanClassException org.springframework.remoting.jaxws.CannotLoadBeanClassException ) { } } }  <METHOD_END>
<METHOD_START> protected javax.xml.ws.Endpoint javax.xml.ws.Endpoint ( java.lang.Object java.lang.Object ) { return ( this . javax.xml.ws.WebServiceFeature[] != null ? javax.xml.ws.Endpoint . javax.xml.ws.Endpoint ( this . java.lang.String , java.lang.Object , this . javax.xml.ws.WebServiceFeature[] ) : javax.xml.ws.Endpoint . javax.xml.ws.Endpoint ( this . java.lang.String , java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( javax.xml.ws.Endpoint javax.xml.ws.Endpoint , javax.jws.WebService javax.jws.WebService );  <METHOD_END>
<METHOD_START> protected abstract void void ( javax.xml.ws.Endpoint javax.xml.ws.Endpoint , javax.xml.ws.WebServiceProvider javax.xml.ws.WebServiceProvider );  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { for ( javax.xml.ws.Endpoint javax.xml.ws.Endpoint : this . java.util.Set<javax.xml.ws.Endpoint> ) { javax.xml.ws.Endpoint . void ( ) ; } }  <METHOD_END>
