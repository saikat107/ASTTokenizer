<METHOD_START> public void ( OptionSet org.springframework.core.env.OptionSet ) { super( org.springframework.core.env.OptionSet ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , OptionSet org.springframework.core.env.OptionSet ) { super( java.lang.String , org.springframework.core.env.OptionSet ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( java.lang.String java.lang.String ) { return this . source . has ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; for ( OptionSpec < ? > org.springframework.core.env.OptionSpec<?> : this . source . specs ( ) ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList <> ( org.springframework.core.env.OptionSpec<> . options ( ) ) ; if ( ! java.util.List<java.lang.String> . boolean ( ) ) { java.util.List<java.lang.String> . boolean ( java.util.List<java.lang.String> . java.lang.String ( java.util.List<java.lang.String> . int ( ) - NUMBER ) ) ; } } return java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.String java.lang.String ) { java.util.List<?> < ? > java.util.List<?> = this . source . valuesOf ( java.lang.String ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; for ( java.lang.Object java.lang.Object : java.util.List<> ) { java.util.List<java.lang.String> . boolean ( java.lang.Object . java.lang.String ( ) ) ; } if ( java.util.List<java.lang.String> . boolean ( ) ) { return ( this . source . has ( java.lang.String ) ? java.util.Collections . java.util.List<java.lang.String> ( ) : null ) ; } return java.util.Collections . java.util.List<java.lang.String> ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { java.util.List<?> < ? > java.util.List<?> = this . source . nonOptionArguments ( ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; for ( java.lang.Object java.lang.Object : java.util.List<> ) { java.util.List<java.lang.String> . boolean ( java.lang.Object . java.lang.String ( ) ) ; } return ( java.util.List<java.lang.String> . boolean ( ) ? java.util.Collections . java.util.List<java.lang.String> ( ) : java.util.Collections . java.util.List<java.lang.String> ( java.util.List<java.lang.String> ) ) ; }  <METHOD_END>
