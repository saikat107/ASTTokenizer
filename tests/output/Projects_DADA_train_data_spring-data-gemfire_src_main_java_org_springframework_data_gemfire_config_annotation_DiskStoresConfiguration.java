<METHOD_START> @ java.lang.Override public void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata , BeanDefinitionRegistry org.springframework.data.gemfire.config.annotation.BeanDefinitionRegistry ) { if ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata . hasAnnotation ( EnableDiskStores .class . java.lang.String ( ) ) ) { AnnotationAttributes org.springframework.data.gemfire.config.annotation.AnnotationAttributes = AnnotationAttributes . fromMap ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata . getAnnotationAttributes ( EnableDiskStores .class . java.lang.String ( ) ) ) ; AnnotationAttributes [] org.springframework.data.gemfire.config.annotation.AnnotationAttributes[] = ArrayUtils . nullSafeArray ( org.springframework.data.gemfire.config.annotation.AnnotationAttributes . getAnnotationArray ( STRING ) , AnnotationAttributes .class ) ; for ( AnnotationAttributes org.springframework.data.gemfire.config.annotation.AnnotationAttributes : org.springframework.data.gemfire.config.annotation.AnnotationAttributes[] ) { registerDiskStoreBeanDefinition ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata , org.springframework.data.gemfire.config.annotation.AnnotationAttributes ( org.springframework.data.gemfire.config.annotation.AnnotationAttributes , org.springframework.data.gemfire.config.annotation.AnnotationAttributes ) , org.springframework.data.gemfire.config.annotation.BeanDefinitionRegistry ) ; } } }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.AnnotationAttributes org.springframework.data.gemfire.config.annotation.AnnotationAttributes ( AnnotationAttributes org.springframework.data.gemfire.config.annotation.AnnotationAttributes , AnnotationAttributes org.springframework.data.gemfire.config.annotation.AnnotationAttributes ) { void ( org.springframework.data.gemfire.config.annotation.AnnotationAttributes , STRING , org.springframework.data.gemfire.config.annotation.AnnotationAttributes . getBoolean ( STRING ) , false ) ; void ( org.springframework.data.gemfire.config.annotation.AnnotationAttributes , STRING , org.springframework.data.gemfire.config.annotation.AnnotationAttributes .< java.lang.Integer > getNumber ( STRING ) , NUMBER ) ; void ( org.springframework.data.gemfire.config.annotation.AnnotationAttributes , STRING , org.springframework.data.gemfire.config.annotation.AnnotationAttributes .< java.lang.Integer > getNumber ( STRING ) , NUMBER ) ; return org.springframework.data.gemfire.config.annotation.AnnotationAttributes ; }  <METHOD_END>
<METHOD_START> private < T > void void ( AnnotationAttributes org.springframework.data.gemfire.config.annotation.AnnotationAttributes , java.lang.String java.lang.String , T T , T T ) { if ( ! org.springframework.data.gemfire.config.annotation.AnnotationAttributes . containsKey ( java.lang.String ) || java.lang.String ( org.springframework.data.gemfire.config.annotation.AnnotationAttributes . get ( java.lang.String ) ) . equals ( java.lang.String ( T ) ) ) { org.springframework.data.gemfire.config.annotation.AnnotationAttributes . put ( java.lang.String , T ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.Object java.lang.Object ) { return java.lang.String . java.lang.String ( java.lang.Object ) ; }  <METHOD_END>
