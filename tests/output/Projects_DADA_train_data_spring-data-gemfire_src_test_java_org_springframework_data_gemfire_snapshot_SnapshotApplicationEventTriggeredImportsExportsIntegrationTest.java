<METHOD_START> @ BeforeClass public static void void ( ) java.lang.Exception { java.io.File = new java.io.File ( new java.io.File ( FileSystemUtils . WORKING_DIRECTORY , STRING ) , STRING ) ; assertThat ( java.io.File . boolean ( ) || java.io.File . boolean ( ) , is ( true ) ) ; java.io.File java.io.File = new java.io.File ( java.io.File , STRING ) ; java.io.File java.io.File = new java.io.File ( java.io.File , STRING ) ; assertThat ( java.io.File . boolean ( ) || java.io.File . boolean ( ) , is ( true ) ) ; assertThat ( java.io.File . boolean ( ) || java.io.File . boolean ( ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ AfterClass public static void void ( ) { FileSystemUtils . deleteRecursive ( java.io.File . java.io.File ( ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( Region < java.lang.Long , Person > org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , Person ... org.springframework.data.gemfire.snapshot.Person[] ) { assertThat ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> . size ( ) , is ( equalTo ( people . length ) ) ) ; for ( Person org.springframework.data.gemfire.snapshot.Person : org.springframework.data.gemfire.snapshot.Person[] ) { void ( org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> . get ( org.springframework.data.gemfire.snapshot.Person . getId ( ) ) ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( Person org.springframework.data.gemfire.snapshot.Person , Person org.springframework.data.gemfire.snapshot.Person ) { assertThat ( java.lang.String . java.lang.String ( STRING , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person ) , org.springframework.data.gemfire.snapshot.Person , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.gemfire.snapshot.Person . getId ( ) , is ( equalTo ( org.springframework.data.gemfire.snapshot.Person . getId ( ) ) ) ) ; assertThat ( org.springframework.data.gemfire.snapshot.Person . getFirstname ( ) , is ( equalTo ( org.springframework.data.gemfire.snapshot.Person . getFirstname ( ) ) ) ) ; assertThat ( org.springframework.data.gemfire.snapshot.Person . getLastname ( ) , is ( equalTo ( org.springframework.data.gemfire.snapshot.Person . getLastname ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.snapshot.Person org.springframework.data.gemfire.snapshot.Person ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return new Person ( java.util.concurrent.atomic.AtomicLong . long ( ) , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.snapshot.Person org.springframework.data.gemfire.snapshot.Person ( Region < java.lang.Long , Person > org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , Person org.springframework.data.gemfire.snapshot.Person ) { org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> . putIfAbsent ( org.springframework.data.gemfire.snapshot.Person . getId ( ) , org.springframework.data.gemfire.snapshot.Person ) ; return org.springframework.data.gemfire.snapshot.Person ; }  <METHOD_END>
<METHOD_START> protected void void ( final int int , final int int , final int int , final int int ) { ThreadUtils . timedWait ( java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( int ) , NUMBER , new ThreadUtils . ThreadUtils ( ) { @ java.lang.Override public boolean boolean ( ) { return ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> . size ( ) < int && org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> . size ( ) < int && org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> . size ( ) < int ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> . size ( ) < int && org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> . size ( ) < int && org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> . size ( ) < int ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; SnapshotApplicationEvent org.springframework.data.gemfire.snapshot.SnapshotApplicationEvent = new ExportSnapshotApplicationEvent < java.lang.Long , Person > ( this , org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> . getFullPath ( ) ) ; org.springframework.data.gemfire.snapshot.ApplicationEventPublisher . publishEvent ( org.springframework.data.gemfire.snapshot.SnapshotApplicationEvent ) ; void ( NUMBER , NUMBER , NUMBER , NUMBER ) ; void ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person ) ; void ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person ) ; void ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; org.springframework.data.gemfire.snapshot.ApplicationEventPublisher . publishEvent ( org.springframework.data.gemfire.snapshot.SnapshotApplicationEvent ) ; void ( NUMBER , NUMBER , NUMBER , NUMBER ) ; void ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person ) ; void ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person ) ; void ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; Person org.springframework.data.gemfire.snapshot.Person = org.springframework.data.gemfire.snapshot.Person ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person ( STRING , STRING ) ) ; org.springframework.data.gemfire.snapshot.ApplicationEventPublisher . publishEvent ( org.springframework.data.gemfire.snapshot.SnapshotApplicationEvent ) ; void ( NUMBER , NUMBER , NUMBER , NUMBER ) ; void ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person ) ; void ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person ) ; void ( org.springframework.data.gemfire.snapshot.Region<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person , org.springframework.data.gemfire.snapshot.Person ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { Assert . state ( StringUtils . hasText ( java.lang.String ) , STRING ) ; return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Map . java.util.Map.Entry<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> < java.lang.Long , Person > java.util.Map.Entry<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> ) { return boolean ( java.util.Map.Entry<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( Person org.springframework.data.gemfire.snapshot.Person ) { return java.lang.String ( ) . boolean ( org.springframework.data.gemfire.snapshot.Person . getLastname ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final java.util.Map . java.util.Map.Entry<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> < java.lang.Long , Person > java.util.Map.Entry<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> ) { return ! super. boolean ( java.util.Map.Entry<java.lang.Long,org.springframework.data.gemfire.snapshot.Person> ) ; }  <METHOD_END>
<METHOD_START> @ Scheduled ( fixedDelay = NUMBER ) @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { boolean boolean = false ; for ( java.io.File java.io.File : java.io.File[] ( java.io.File . java.io.File[] ( FileSystemUtils . FileOnlyFilter . INSTANCE ) ) ) { boolean |= boolean ( java.io.File ) ; } if ( boolean ) { org.springframework.data.gemfire.snapshot.ApplicationEventPublisher . publishEvent ( new ImportSnapshotApplicationEvent < java.lang.Long , Person > ( this ) ) ; } }  <METHOD_END>
<METHOD_START> protected java.io.File [] java.io.File[] ( java.io.File ... java.io.File[] ) { return ( java.io.File[] != null ? java.io.File[] : new java.io.File [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.io.File java.io.File ) { java.lang.Long java.lang.Long = java.io.File . long ( ) ; java.lang.Long java.lang.Long = java.util.Map<java.io.File,java.lang.Long> . java.lang.Long ( java.io.File ) ; java.lang.Long = ( java.lang.Long != null ? java.lang.Long : java.lang.Long ) ; java.util.Map<java.io.File,java.lang.Long> . java.lang.Long ( java.io.File , java.lang.Long ) ; return ! java.lang.Long . boolean ( java.lang.Long ) ; }  <METHOD_END>
