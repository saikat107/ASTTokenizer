<METHOD_START> @ Test public void void ( ) java.lang.Exception { Resource org.springframework.integration.xml.selector.Resource = new ByteArrayResource ( STRING . byte[] ( ) ) ; new XmlValidatingMessageSelector ( org.springframework.integration.xml.selector.Resource , ( SchemaType ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Resource org.springframework.integration.xml.selector.Resource = new ByteArrayResource ( STRING . byte[] ( ) ) ; new XmlValidatingMessageSelector ( org.springframework.integration.xml.selector.Resource , SchemaType . XML_SCHEMA ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ConfigurableApplicationContext org.springframework.integration.xml.selector.ConfigurableApplicationContext = null ; try { org.springframework.integration.xml.selector.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.xml.selector.XmlValidatingMessageSelectorTests> ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { assertTrue ( java.lang.Exception . java.lang.String ( ) . boolean ( STRING ) ) ; } finally { if ( org.springframework.integration.xml.selector.ConfigurableApplicationContext != null ) { org.springframework.integration.xml.selector.ConfigurableApplicationContext . close ( ) ; } } }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { new XmlValidatingMessageSelector ( null , ( SchemaType ) null ) ; }  <METHOD_END>
