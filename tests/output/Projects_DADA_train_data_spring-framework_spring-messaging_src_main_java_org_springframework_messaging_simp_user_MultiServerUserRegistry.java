<METHOD_START> public void ( SimpUserRegistry org.springframework.messaging.simp.user.SimpUserRegistry ) { Assert . notNull ( org.springframework.messaging.simp.user.SimpUserRegistry , STRING ) ; this . java.lang.String = java.lang.String ( ) ; this . org.springframework.messaging.simp.user.SimpUserRegistry = org.springframework.messaging.simp.user.SimpUserRegistry ; this . boolean = this . org.springframework.messaging.simp.user.SimpUserRegistry instanceof SmartApplicationListener ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( ) { java.lang.String java.lang.String ; try { java.lang.String = java.net.InetAddress . java.net.InetAddress ( ) . java.lang.String ( ) ; } catch ( java.net.UnknownHostException java.net.UnknownHostException ) { java.lang.String = STRING ; } return java.lang.String + '-' + java.util.UUID . java.util.UUID ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ( this . boolean ? ( ( SmartApplicationListener ) this . org.springframework.messaging.simp.user.SimpUserRegistry ) . getOrder ( ) : Ordered . LOWEST_PRECEDENCE ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<? extends org.springframework.messaging.simp.user.ApplicationEvent> < ? extends ApplicationEvent > java.lang.Class<? extends org.springframework.messaging.simp.user.ApplicationEvent> ) { return ( this . boolean && ( ( SmartApplicationListener ) this . org.springframework.messaging.simp.user.SimpUserRegistry ) . supportsEventType ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return ( this . boolean && ( ( SmartApplicationListener ) this . org.springframework.messaging.simp.user.SimpUserRegistry ) . supportsSourceType ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationEvent org.springframework.messaging.simp.user.ApplicationEvent ) { if ( this . boolean ) { ( ( SmartApplicationListener ) this . org.springframework.messaging.simp.user.SimpUserRegistry ) . onApplicationEvent ( org.springframework.messaging.simp.user.ApplicationEvent ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.messaging.simp.user.SimpUser org.springframework.messaging.simp.user.SimpUser ( java.lang.String java.lang.String ) { for ( org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot : this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> . java.util.Collection<org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> ( ) ) { SimpUser org.springframework.messaging.simp.user.SimpUser = org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ( ) . org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser ( java.lang.String ) ; if ( org.springframework.messaging.simp.user.SimpUser != null ) { return org.springframework.messaging.simp.user.SimpUser ; } } return this . org.springframework.messaging.simp.user.SimpUserRegistry . getUser ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<org.springframework.messaging.simp.user.SimpUser> < SimpUser > java.util.Set<org.springframework.messaging.simp.user.SimpUser> ( ) { java.util.Set<org.springframework.messaging.simp.user.SimpUser> < SimpUser > java.util.Set<org.springframework.messaging.simp.user.SimpUser> = new java.util.HashSet<org.springframework.messaging.simp.user.SimpUser> <> ( ) ; for ( org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot : this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> . java.util.Collection<org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> ( ) ) { java.util.Set<org.springframework.messaging.simp.user.SimpUser> . addAll ( org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ( ) . java.util.Collection<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ( ) ) ; } java.util.Set<org.springframework.messaging.simp.user.SimpUser> . addAll ( this . org.springframework.messaging.simp.user.SimpUserRegistry . getUsers ( ) ) ; return java.util.Set<org.springframework.messaging.simp.user.SimpUser> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ; for ( org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot : this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> . java.util.Collection<org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> ( ) ) { int += org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ( ) . int ( ) ; } int += this . org.springframework.messaging.simp.user.SimpUserRegistry . getUserCount ( ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> < SimpSubscription > java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> ( SimpSubscriptionMatcher org.springframework.messaging.simp.user.SimpSubscriptionMatcher ) { java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> < SimpSubscription > java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> = new java.util.HashSet<org.springframework.messaging.simp.user.SimpSubscription> <> ( ) ; for ( org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot : this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> . java.util.Collection<org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> ( ) ) { java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> . addAll ( org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot . java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> ( org.springframework.messaging.simp.user.SimpSubscriptionMatcher ) ) ; } java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> . addAll ( this . org.springframework.messaging.simp.user.SimpUserRegistry . findSubscriptions ( org.springframework.messaging.simp.user.SimpSubscriptionMatcher ) ) ; return java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> ; }  <METHOD_END>
<METHOD_START> java.lang.Object java.lang.Object ( ) { return new org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot ( this . java.lang.String , this . org.springframework.messaging.simp.user.SimpUserRegistry ) ; }  <METHOD_END>
<METHOD_START> void void ( Message < ? > org.springframework.messaging.simp.user.Message<?> , MessageConverter org.springframework.messaging.simp.user.MessageConverter , long long ) { org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot = ( org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot ) org.springframework.messaging.simp.user.MessageConverter . fromMessage ( org.springframework.messaging.simp.user.Message<> , org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot .class ) ; if ( org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot != null && ! org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot . java.lang.String ( ) . boolean ( this . java.lang.String ) ) { org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot . void ( long , this . org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup ) ; this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> . org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot ( org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot . java.lang.String ( ) , org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot ) ; } }  <METHOD_END>
<METHOD_START> void void ( ) { long long = java.lang.System . long ( ) ; java.util.Iterator<java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot>> < java.util.Map . java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> < java.lang.String , org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot > > java.util.Iterator<java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot>> = this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> . java.util.Set<java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot>> ( ) . java.util.Iterator<java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot>> ( ) ; while ( java.util.Iterator<java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot>> . boolean ( ) ) { java.util.Map . java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> < java.lang.String , org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot > java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> = java.util.Iterator<java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot>> . java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> ( ) ; if ( java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> . org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot ( ) . boolean ( long ) ) { java.util.Iterator<java.util.Map.Entry<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot>> . void ( ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . org.springframework.messaging.simp.user.SimpUserRegistry + STRING + this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( ) {		}  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , SimpUserRegistry org.springframework.messaging.simp.user.SimpUserRegistry ) { this . java.lang.String = java.lang.String ; java.util.Set<org.springframework.messaging.simp.user.SimpUser> < SimpUser > java.util.Set<org.springframework.messaging.simp.user.SimpUser> = org.springframework.messaging.simp.user.SimpUserRegistry . getUsers ( ) ; this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> = new java.util.HashMap <> ( java.util.Set<org.springframework.messaging.simp.user.SimpUser> . size ( ) ) ; for ( SimpUser org.springframework.messaging.simp.user.SimpUser : java.util.Set<org.springframework.messaging.simp.user.SimpUser> ) { this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> . org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser ( org.springframework.messaging.simp.user.SimpUser . getName ( ) , new org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser ( org.springframework.messaging.simp.user.SimpUser ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> < java.lang.String , org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser > java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ) { this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> = java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> < java.lang.String , org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser > java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ( ) { return this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( long long ) { return ( long > this . long ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long , org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup ) { this . long = java.lang.System . long ( ) + long ; for ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser : this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> . java.util.Collection<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ( ) ) { org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser . void ( org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup ) ; } }  <METHOD_END>
<METHOD_START> public java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> < SimpSubscription > java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> ( SimpSubscriptionMatcher org.springframework.messaging.simp.user.SimpSubscriptionMatcher ) { java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> < SimpSubscription > java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> = new java.util.HashSet<org.springframework.messaging.simp.user.SimpSubscription> <> ( ) ; for ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser : this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> . java.util.Collection<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ( ) ) { for ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession : org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> ) { for ( SimpSubscription org.springframework.messaging.simp.user.SimpSubscription : org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> ) { if ( org.springframework.messaging.simp.user.SimpSubscriptionMatcher . match ( org.springframework.messaging.simp.user.SimpSubscription ) ) { java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> . add ( org.springframework.messaging.simp.user.SimpSubscription ) ; } } } } return java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String + STRING + this . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( ) { this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> = new java.util.HashSet<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> <> ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( SimpUser org.springframework.messaging.simp.user.SimpUser ) { this . java.lang.String = org.springframework.messaging.simp.user.SimpUser . getName ( ) ; java.util.Set<org.springframework.messaging.simp.user.SimpSession> < SimpSession > java.util.Set<org.springframework.messaging.simp.user.SimpSession> = org.springframework.messaging.simp.user.SimpUser . getSessions ( ) ; this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> = new java.util.HashSet <> ( java.util.Set<org.springframework.messaging.simp.user.SimpSession> . size ( ) ) ; for ( SimpSession org.springframework.messaging.simp.user.SimpSession : java.util.Set<org.springframework.messaging.simp.user.SimpSession> ) { this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> . boolean ( new org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession ( org.springframework.messaging.simp.user.SimpSession ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { if ( this . org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup != null ) { return ! this . org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> ( java.lang.String ( ) ) . isEmpty ( ) ; } return ! this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.messaging.simp.user.SimpSession org.springframework.messaging.simp.user.SimpSession ( java.lang.String java.lang.String ) { if ( this . org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup != null ) { return this . org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> ( java.lang.String ( ) ) . get ( java.lang.String ) ; } for ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession : this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> ) { if ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession . java.lang.String ( ) . boolean ( java.lang.String ) ) { return org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession ; } } return null ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> < org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession > java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> ) { this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> . boolean ( java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<org.springframework.messaging.simp.user.SimpSession> < SimpSession > java.util.Set<org.springframework.messaging.simp.user.SimpSession> ( ) { if ( this . org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup != null ) { java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> < java.lang.String , SimpSession > java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> = this . org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> ( java.lang.String ( ) ) ; return new java.util.HashSet <> ( java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> . values ( ) ) ; } return new java.util.HashSet <> ( this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> ) ; }  <METHOD_END>
<METHOD_START> private void void ( org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup ) { this . org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup = org.springframework.messaging.simp.user.MultiServerUserRegistry.SessionLookup ; for ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession : this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> ) { org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession . void ( this ) ; org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession . void ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> < java.lang.String , SimpSession > java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> ) { for ( SimpSession org.springframework.messaging.simp.user.SimpSession : this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> ) { java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> . put ( org.springframework.messaging.simp.user.SimpSession . getId ( ) , org.springframework.messaging.simp.user.SimpSession ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( this == java.lang.Object || ( java.lang.Object instanceof SimpUser && this . java.lang.String . boolean ( ( ( SimpUser ) java.lang.Object ) . getName ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.lang.String . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String + STRING + this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( ) { this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> = new java.util.HashSet<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> <> ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( SimpSession org.springframework.messaging.simp.user.SimpSession ) { this . java.lang.String = org.springframework.messaging.simp.user.SimpSession . getId ( ) ; java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> < SimpSubscription > java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> = org.springframework.messaging.simp.user.SimpSession . getSubscriptions ( ) ; this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> = new java.util.HashSet <> ( java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> . size ( ) ) ; for ( SimpSubscription org.springframework.messaging.simp.user.SimpSubscription : java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> ) { this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> . boolean ( new org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription ( org.springframework.messaging.simp.user.SimpSubscription ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser ) { this . org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser = org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser ( ) { return this . org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> < org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription > java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> ) { this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> . boolean ( java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> < SimpSubscription > java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> ( ) { return new java.util.HashSet <> ( this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { for ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription : this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> ) { org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription . void ( this ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( this == java.lang.Object || ( java.lang.Object instanceof SimpSession && this . java.lang.String . boolean ( ( ( SimpSession ) java.lang.Object ) . getId ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.lang.String . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String + STRING + this . java.util.Set<org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSubscription> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( ) {		}  <METHOD_END>
<METHOD_START> public void ( SimpSubscription org.springframework.messaging.simp.user.SimpSubscription ) { this . java.lang.String = org.springframework.messaging.simp.user.SimpSubscription . getId ( ) ; this . java.lang.String = org.springframework.messaging.simp.user.SimpSubscription . getDestination ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession ) { this . org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession = org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession ( ) { return this . org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof SimpSubscription ) ) { return false ; } SimpSubscription org.springframework.messaging.simp.user.SimpSubscription = ( SimpSubscription ) java.lang.Object ; return ( ObjectUtils . nullSafeEquals ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession ( ) , org.springframework.messaging.simp.user.SimpSubscription . getSession ( ) ) && this . java.lang.String . boolean ( org.springframework.messaging.simp.user.SimpSubscription . getId ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.lang.String . int ( ) * NUMBER + ObjectUtils . nullSafeHashCode ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> < java.lang.String , SimpSession > java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> ( java.lang.String java.lang.String ) { java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> < java.lang.String , SimpSession > java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> = new java.util.HashMap<java.lang.String,org.springframework.messaging.simp.user.SimpSession> <> ( NUMBER ) ; SimpUser org.springframework.messaging.simp.user.SimpUser = org.springframework.messaging.simp.user.SimpUserRegistry . getUser ( java.lang.String ) ; if ( org.springframework.messaging.simp.user.SimpUser != null ) { for ( SimpSession org.springframework.messaging.simp.user.SimpSession : org.springframework.messaging.simp.user.SimpUser . getSessions ( ) ) { java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> . put ( org.springframework.messaging.simp.user.SimpSession . getId ( ) , org.springframework.messaging.simp.user.SimpSession ) ; } } for ( org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot : java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> . java.util.Collection<org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot> ( ) ) { org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser = org.springframework.messaging.simp.user.MultiServerUserRegistry.UserRegistrySnapshot . java.util.Map<java.lang.String,org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser> ( ) . org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser ( java.lang.String ) ; if ( org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser != null ) { org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpUser . void ( java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> ) ; } } return java.util.Map<java.lang.String,org.springframework.messaging.simp.user.SimpSession> ; }  <METHOD_END>
