<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathRestartStrategy org.springframework.boot.devtools.classpath.ClassPathRestartStrategy = org.springframework.boot.devtools.classpath.ClassPathRestartStrategy ( null ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathRestartStrategy org.springframework.boot.devtools.classpath.ClassPathRestartStrategy = org.springframework.boot.devtools.classpath.ClassPathRestartStrategy ( STRING ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathRestartStrategy org.springframework.boot.devtools.classpath.ClassPathRestartStrategy = org.springframework.boot.devtools.classpath.ClassPathRestartStrategy ( STRING ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , false ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , false ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , true ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathRestartStrategy org.springframework.boot.devtools.classpath.ClassPathRestartStrategy = org.springframework.boot.devtools.classpath.ClassPathRestartStrategy ( STRING ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , false ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , false ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , false ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , false ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , true ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathRestartStrategy org.springframework.boot.devtools.classpath.ClassPathRestartStrategy = org.springframework.boot.devtools.classpath.ClassPathRestartStrategy ( STRING ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , true ) ; java.lang.String java.lang.String = STRING ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , java.lang.String + STRING , false ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , java.lang.String + STRING , false ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathRestartStrategy org.springframework.boot.devtools.classpath.ClassPathRestartStrategy = org.springframework.boot.devtools.classpath.ClassPathRestartStrategy ( STRING STRING ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , false ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , false ) ; void ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , STRING , true ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.devtools.classpath.ClassPathRestartStrategy org.springframework.boot.devtools.classpath.ClassPathRestartStrategy ( java.lang.String java.lang.String ) { return new PatternClassPathRestartStrategy ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( ClassPathRestartStrategy org.springframework.boot.devtools.classpath.ClassPathRestartStrategy , java.lang.String java.lang.String , boolean boolean ) { assertThat ( org.springframework.boot.devtools.classpath.ClassPathRestartStrategy . isRestartRequired ( org.springframework.boot.devtools.classpath.ChangedFile ( java.lang.String ) ) ) . isEqualTo ( boolean ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.devtools.classpath.ChangedFile org.springframework.boot.devtools.classpath.ChangedFile ( java.lang.String java.lang.String ) { return new ChangedFile ( new java.io.File ( STRING ) , new java.io.File ( STRING + java.lang.String ) , Type . ADD ) ; }  <METHOD_END>
