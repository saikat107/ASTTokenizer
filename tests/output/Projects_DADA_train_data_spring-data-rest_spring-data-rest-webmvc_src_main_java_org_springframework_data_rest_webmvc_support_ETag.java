<METHOD_START> private void ( java.lang.String java.lang.String ) { this . java.lang.String = trimTrailingCharacter ( trimLeadingCharacter ( java.lang.String , '"' ) , '"' ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.rest.webmvc.support.ETag org.springframework.data.rest.webmvc.support.ETag ( java.lang.String java.lang.String ) { return new org.springframework.data.rest.webmvc.support.ETag ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.rest.webmvc.support.ETag org.springframework.data.rest.webmvc.support.ETag ( java.util.Optional<java.lang.String> < java.lang.String > java.util.Optional<java.lang.String> ) { return java.util.Optional<java.lang.String> . java.util.Optional<org.springframework.data.rest.webmvc.support.ETag> ( org.springframework.data.rest.webmvc.support.ETag ::new ) . org.springframework.data.rest.webmvc.support.ETag ( org.springframework.data.rest.webmvc.support.ETag ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.rest.webmvc.support.ETag org.springframework.data.rest.webmvc.support.ETag ( PersistentEntityResource org.springframework.data.rest.webmvc.support.PersistentEntityResource ) { Assert . notNull ( org.springframework.data.rest.webmvc.support.PersistentEntityResource , STRING ) ; return org.springframework.data.rest.webmvc.support.ETag ( org.springframework.data.rest.webmvc.support.PersistentEntityResource . getPersistentEntity ( ) , org.springframework.data.rest.webmvc.support.PersistentEntityResource . getContent ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.rest.webmvc.support.ETag org.springframework.data.rest.webmvc.support.ETag ( PersistentEntity < ? , ? extends PersistentProperty < ? > > org.springframework.data.rest.webmvc.support.PersistentEntity<?,? extends org.springframework.data.rest.webmvc.support.PersistentProperty<?>> , java.lang.Object java.lang.Object ) { return java.util.Optional<java.lang.String> ( org.springframework.data.rest.webmvc.support.PersistentEntity<,> , java.lang.Object ) . map ( org.springframework.data.rest.webmvc.support.ETag :: from ) . orElse ( org.springframework.data.rest.webmvc.support.ETag ) ; }  <METHOD_END>
<METHOD_START> public void void ( PersistentEntity < ? , ? > org.springframework.data.rest.webmvc.support.PersistentEntity<?,?> , java.lang.Object java.lang.Object ) { if ( this == org.springframework.data.rest.webmvc.support.ETag || java.lang.Object == null ) { return; } if ( ! this . boolean ( org.springframework.data.rest.webmvc.support.ETag ( org.springframework.data.rest.webmvc.support.PersistentEntity<,> , java.lang.Object ) ) ) { throw new ETagDoesntMatchException ( java.lang.Object , this ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( PersistentEntity < ? , ? > org.springframework.data.rest.webmvc.support.PersistentEntity<?,?> , java.lang.Object java.lang.Object ) { if ( this == org.springframework.data.rest.webmvc.support.ETag || java.lang.Object == null ) { return false ; } return this . boolean ( org.springframework.data.rest.webmvc.support.ETag ( org.springframework.data.rest.webmvc.support.PersistentEntity<,> , java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.support.HttpHeaders org.springframework.data.rest.webmvc.support.HttpHeaders ( HttpHeaders org.springframework.data.rest.webmvc.support.HttpHeaders ) { Assert . notNull ( org.springframework.data.rest.webmvc.support.HttpHeaders , STRING ) ; java.lang.String java.lang.String = java.lang.String ( ) ; if ( java.lang.String == null ) { return org.springframework.data.rest.webmvc.support.HttpHeaders ; } org.springframework.data.rest.webmvc.support.HttpHeaders . setETag ( java.lang.String ) ; return org.springframework.data.rest.webmvc.support.HttpHeaders ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String == null ? null : STRING . java.lang.String ( java.lang.String ) . java.lang.String ( STRING ) ; }  <METHOD_END>
<METHOD_START> private static java.util.Optional<java.lang.String> < java.lang.String > java.util.Optional<java.lang.String> ( PersistentEntity < ? , ? extends PersistentProperty < ? > > org.springframework.data.rest.webmvc.support.PersistentEntity<?,? extends org.springframework.data.rest.webmvc.support.PersistentProperty<?>> , java.lang.Object java.lang.Object ) { Assert . notNull ( org.springframework.data.rest.webmvc.support.PersistentEntity<,> , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; PersistentPropertyAccessor org.springframework.data.rest.webmvc.support.PersistentPropertyAccessor = org.springframework.data.rest.webmvc.support.PersistentEntity<,> . getPropertyAccessor ( java.lang.Object ) ; return org.springframework.data.rest.webmvc.support.PersistentEntity<,> . getVersionProperty ( ) . flatMap ( it -> accessor . getProperty ( it ) ) . map ( java.lang.Object :: java.lang.String ) ; }  <METHOD_END>
