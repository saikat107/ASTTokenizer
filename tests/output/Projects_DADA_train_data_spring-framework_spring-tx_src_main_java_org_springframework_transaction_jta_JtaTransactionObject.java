<METHOD_START> public void ( UserTransaction org.springframework.transaction.jta.UserTransaction ) { this . org.springframework.transaction.jta.UserTransaction = org.springframework.transaction.jta.UserTransaction ; }  <METHOD_END>
<METHOD_START> public final org.springframework.transaction.jta.UserTransaction org.springframework.transaction.jta.UserTransaction ( ) { return this . org.springframework.transaction.jta.UserTransaction ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { if ( this . org.springframework.transaction.jta.UserTransaction == null ) { return false ; } try { int int = this . org.springframework.transaction.jta.UserTransaction . getStatus ( ) ; return ( int == Status . STATUS_MARKED_ROLLBACK || int == Status . STATUS_ROLLEDBACK ) ; } catch ( SystemException org.springframework.transaction.jta.SystemException ) { throw new TransactionSystemException ( STRING , org.springframework.transaction.jta.SystemException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { TransactionSynchronizationUtils . triggerFlush ( ) ; }  <METHOD_END>
