<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertFalse ( STRING , StaxUtils . isStaxSource ( new javax.xml.transform.dom.DOMSource ( ) ) ) ; assertFalse ( STRING , StaxUtils . isStaxSource ( new javax.xml.transform.sax.SAXSource ( ) ) ) ; assertFalse ( STRING , StaxUtils . isStaxSource ( new javax.xml.transform.stream.StreamSource ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.xml.stream.XMLInputFactory javax.xml.stream.XMLInputFactory = javax.xml.stream.XMLInputFactory . javax.xml.stream.XMLInputFactory ( ) ; java.lang.String java.lang.String = STRING ; javax.xml.stream.XMLStreamReader javax.xml.stream.XMLStreamReader = javax.xml.stream.XMLInputFactory . javax.xml.stream.XMLStreamReader ( new java.io.StringReader ( java.lang.String ) ) ; javax.xml.transform.Source javax.xml.transform.Source = StaxUtils . createCustomStaxSource ( javax.xml.stream.XMLStreamReader ) ; assertTrue ( STRING , StaxUtils . isStaxSource ( javax.xml.transform.Source ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.xml.stream.XMLInputFactory javax.xml.stream.XMLInputFactory = javax.xml.stream.XMLInputFactory . javax.xml.stream.XMLInputFactory ( ) ; java.lang.String java.lang.String = STRING ; javax.xml.stream.XMLStreamReader javax.xml.stream.XMLStreamReader = javax.xml.stream.XMLInputFactory . javax.xml.stream.XMLStreamReader ( new java.io.StringReader ( java.lang.String ) ) ; javax.xml.transform.stax.StAXSource javax.xml.transform.stax.StAXSource = new javax.xml.transform.stax.StAXSource ( javax.xml.stream.XMLStreamReader ) ; assertTrue ( STRING , StaxUtils . isStaxSource ( javax.xml.transform.stax.StAXSource ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertFalse ( STRING , StaxUtils . isStaxResult ( new javax.xml.transform.dom.DOMResult ( ) ) ) ; assertFalse ( STRING , StaxUtils . isStaxResult ( new javax.xml.transform.sax.SAXResult ( ) ) ) ; assertFalse ( STRING , StaxUtils . isStaxResult ( new javax.xml.transform.stream.StreamResult ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.xml.stream.XMLOutputFactory javax.xml.stream.XMLOutputFactory = javax.xml.stream.XMLOutputFactory . javax.xml.stream.XMLOutputFactory ( ) ; javax.xml.stream.XMLStreamWriter javax.xml.stream.XMLStreamWriter = javax.xml.stream.XMLOutputFactory . javax.xml.stream.XMLStreamWriter ( new java.io.StringWriter ( ) ) ; javax.xml.transform.Result javax.xml.transform.Result = StaxUtils . createCustomStaxResult ( javax.xml.stream.XMLStreamWriter ) ; assertTrue ( STRING , StaxUtils . isStaxResult ( javax.xml.transform.Result ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.xml.stream.XMLOutputFactory javax.xml.stream.XMLOutputFactory = javax.xml.stream.XMLOutputFactory . javax.xml.stream.XMLOutputFactory ( ) ; javax.xml.stream.XMLStreamWriter javax.xml.stream.XMLStreamWriter = javax.xml.stream.XMLOutputFactory . javax.xml.stream.XMLStreamWriter ( new java.io.StringWriter ( ) ) ; javax.xml.transform.stax.StAXResult javax.xml.transform.stax.StAXResult = new javax.xml.transform.stax.StAXResult ( javax.xml.stream.XMLStreamWriter ) ; assertTrue ( STRING , StaxUtils . isStaxResult ( javax.xml.transform.stax.StAXResult ) ) ; }  <METHOD_END>
