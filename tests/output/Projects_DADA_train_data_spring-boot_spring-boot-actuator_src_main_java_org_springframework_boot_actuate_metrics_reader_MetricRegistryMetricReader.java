<METHOD_START> public void ( MetricRegistry org.springframework.boot.actuate.metrics.reader.MetricRegistry ) { this . org.springframework.boot.actuate.metrics.reader.MetricRegistry = org.springframework.boot.actuate.metrics.reader.MetricRegistry ; org.springframework.boot.actuate.metrics.reader.MetricRegistry . addListener ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.actuate.metrics.reader.Metric<?> < ? > org.springframework.boot.actuate.metrics.reader.Metric<?> ( java.lang.String java.lang.String ) { java.lang.String java.lang.String = this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) ; if ( java.lang.String == null ) { return null ; } com . com.codahale . com.codahale . com.codahale com.codahale.metrics.Metric = this . org.springframework.boot.actuate.metrics.reader.MetricRegistry . getMetrics ( ) . get ( java.lang.String ) ; if ( com.codahale.metrics.Metric == null ) { return null ; } if ( com.codahale.metrics.Metric instanceof Counter ) { Counter org.springframework.boot.actuate.metrics.reader.Counter = ( Counter ) com.codahale.metrics.Metric ; return new Metric < java.lang.Number > ( java.lang.String , org.springframework.boot.actuate.metrics.reader.Counter . getCount ( ) ) ; } if ( com.codahale.metrics.Metric instanceof Gauge ) { java.lang.Object java.lang.Object = ( ( Gauge < ? > ) com.codahale.metrics.Metric ) . getValue ( ) ; if ( java.lang.Object instanceof java.lang.Number ) { return new Metric <> ( java.lang.String , ( java.lang.Number ) java.lang.Object ) ; } if ( org.springframework.boot.actuate.metrics.reader.Log . isDebugEnabled ( ) ) { org.springframework.boot.actuate.metrics.reader.Log . debug ( STRING + java.lang.String + STRING + com.codahale.metrics.Metric + STRING ) ; } return null ; } if ( com.codahale.metrics.Metric instanceof Sampling ) { if ( java.lang.String . boolean ( STRING ) ) { java.lang.Number java.lang.Number = java.lang.Number ( ( ( Sampling ) com.codahale.metrics.Metric ) . getSnapshot ( ) , java.lang.String ) ; if ( com.codahale.metrics.Metric instanceof Timer ) { java.lang.Number = java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( java.lang.Number . long ( ) , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) ; } return new Metric <> ( java.lang.String , java.lang.Number ) ; } } return new Metric <> ( java.lang.String , java.lang.Number ( com.codahale.metrics.Metric , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Iterable<org.springframework.boot.actuate.metrics.reader.Metric<?>> < Metric < ? > > java.lang.Iterable<org.springframework.boot.actuate.metrics.reader.Metric<?>> ( ) { return new java.lang.Iterable<org.springframework.boot.actuate.metrics.reader.Metric<?>> < Metric < ? > > ( ) { @ java.lang.Override public java.util.Iterator<org.springframework.boot.actuate.metrics.reader.Metric<?>> < Metric < ? > > java.util.Iterator<org.springframework.boot.actuate.metrics.reader.Metric<?>> ( ) { java.util.Set<org.springframework.boot.actuate.metrics.reader.Metric<?>> < Metric < ? > > java.util.Set<org.springframework.boot.actuate.metrics.reader.Metric<?>> = new java.util.HashSet<org.springframework.boot.actuate.metrics.reader.Metric<?>> <> ( ) ; for ( java.lang.String java.lang.String : org.springframework.boot.actuate.metrics.reader.MetricRegistryMetricReader .this . java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.lang.String> ( ) ) { Metric < ? > org.springframework.boot.actuate.metrics.reader.Metric<?> = org.springframework.boot.actuate.metrics.reader.Metric<?> ( java.lang.String ) ; if ( org.springframework.boot.actuate.metrics.reader.Metric<> != null ) { java.util.Set<org.springframework.boot.actuate.metrics.reader.Metric<?>> . add ( org.springframework.boot.actuate.metrics.reader.Metric<> ) ; } } return java.util.Set<org.springframework.boot.actuate.metrics.reader.Metric<?>> . iterator ( ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.boot.actuate.metrics.reader.Metric<?>> < Metric < ? > > java.util.Iterator<org.springframework.boot.actuate.metrics.reader.Metric<?>> ( ) { java.util.Set<org.springframework.boot.actuate.metrics.reader.Metric<?>> < Metric < ? > > java.util.Set<org.springframework.boot.actuate.metrics.reader.Metric<?>> = new java.util.HashSet<org.springframework.boot.actuate.metrics.reader.Metric<?>> <> ( ) ; for ( java.lang.String java.lang.String : org.springframework.boot.actuate.metrics.reader.MetricRegistryMetricReader .this . java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.lang.String> ( ) ) { Metric < ? > org.springframework.boot.actuate.metrics.reader.Metric<?> = org.springframework.boot.actuate.metrics.reader.Metric<?> ( java.lang.String ) ; if ( org.springframework.boot.actuate.metrics.reader.Metric<> != null ) { java.util.Set<org.springframework.boot.actuate.metrics.reader.Metric<?>> . add ( org.springframework.boot.actuate.metrics.reader.Metric<> ) ; } } return java.util.Set<org.springframework.boot.actuate.metrics.reader.Metric<?>> . iterator ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . java.util.Map<java.lang.String,java.lang.String> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , Gauge < ? > org.springframework.boot.actuate.metrics.reader.Gauge<?> ) { this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; synchronized ( this . java.lang.Object ) { this . org.springframework.boot.actuate.metrics.reader.MultiValueMap<java.lang.String,java.lang.String> . add ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , Counter org.springframework.boot.actuate.metrics.reader.Counter ) { this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; synchronized ( this . java.lang.Object ) { this . org.springframework.boot.actuate.metrics.reader.MultiValueMap<java.lang.String,java.lang.String> . add ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , Histogram org.springframework.boot.actuate.metrics.reader.Histogram ) { for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ( org.springframework.boot.actuate.metrics.reader.Histogram ) ) { java.lang.String java.lang.String = java.lang.String + STRING + java.lang.String ; this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; synchronized ( this . java.lang.Object ) { this . org.springframework.boot.actuate.metrics.reader.MultiValueMap<java.lang.String,java.lang.String> . add ( java.lang.String , java.lang.String ) ; } } for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ( org.springframework.boot.actuate.metrics.reader.Histogram . getSnapshot ( ) ) ) { java.lang.String java.lang.String = java.lang.String + STRING + java.lang.String ; this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; synchronized ( this . java.lang.Object ) { this . org.springframework.boot.actuate.metrics.reader.MultiValueMap<java.lang.String,java.lang.String> . add ( java.lang.String , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , Meter org.springframework.boot.actuate.metrics.reader.Meter ) { for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ( org.springframework.boot.actuate.metrics.reader.Meter ) ) { java.lang.String java.lang.String = java.lang.String + STRING + java.lang.String ; this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; synchronized ( this . java.lang.Object ) { this . org.springframework.boot.actuate.metrics.reader.MultiValueMap<java.lang.String,java.lang.String> . add ( java.lang.String , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , Timer org.springframework.boot.actuate.metrics.reader.Timer ) { for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ( org.springframework.boot.actuate.metrics.reader.Timer ) ) { java.lang.String java.lang.String = java.lang.String + STRING + java.lang.String ; this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; synchronized ( this . java.lang.Object ) { this . org.springframework.boot.actuate.metrics.reader.MultiValueMap<java.lang.String,java.lang.String> . add ( java.lang.String , java.lang.String ) ; } } for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ( org.springframework.boot.actuate.metrics.reader.Timer . getSnapshot ( ) ) ) { java.lang.String java.lang.String = java.lang.String + STRING + java.lang.String ; this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; synchronized ( this . java.lang.Object ) { this . org.springframework.boot.actuate.metrics.reader.MultiValueMap<java.lang.String,java.lang.String> . add ( java.lang.String , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ; synchronized ( this . java.lang.Object ) { java.util.List<java.lang.String> = this . org.springframework.boot.actuate.metrics.reader.MultiValueMap<java.lang.String,java.lang.String> . remove ( java.lang.String ) ; } if ( java.util.List<java.lang.String> != null ) { for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String + STRING + java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> private static java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( java.lang.Object java.lang.Object ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = java.util.Map<java.lang.Class<?>,java.util.Set<java.lang.String>> . java.util.Set<java.lang.String> ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; if ( java.util.Set<java.lang.String> == null ) { java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; } if ( java.util.Set<java.lang.String> . boolean ( ) ) { for ( java.beans.PropertyDescriptor java.beans.PropertyDescriptor : BeanUtils . getPropertyDescriptors ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { if ( ClassUtils . isAssignable ( java.lang.Number .class , java.beans.PropertyDescriptor . java.lang.Class<?> ( ) ) ) { java.util.Set<java.lang.String> . boolean ( java.beans.PropertyDescriptor . java.lang.String ( ) ) ; } } java.util.Map<java.lang.Class<?>,java.util.Set<java.lang.String>> . java.util.Set<java.lang.String> ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) , java.util.Set<java.lang.String> ) ; } return java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> private static java.lang.Number java.lang.Number ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { java.lang.String java.lang.String = StringUtils . getFilenameExtension ( java.lang.String ) ; return ( java.lang.Number ) new BeanWrapperImpl ( java.lang.Object ) . getPropertyValue ( java.lang.String ) ; }  <METHOD_END>
