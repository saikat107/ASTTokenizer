<METHOD_START> public void ( MetricReader org.springframework.boot.actuate.metrics.export.MetricReader , GaugeWriter org.springframework.boot.actuate.metrics.export.GaugeWriter ) { this( org.springframework.boot.actuate.metrics.export.MetricReader , org.springframework.boot.actuate.metrics.export.GaugeWriter , STRING ); }  <METHOD_END>
<METHOD_START> public void ( MetricReader org.springframework.boot.actuate.metrics.export.MetricReader , GaugeWriter org.springframework.boot.actuate.metrics.export.GaugeWriter , java.lang.String java.lang.String ) { super( java.lang.String ); this . org.springframework.boot.actuate.metrics.export.MetricReader = org.springframework.boot.actuate.metrics.export.MetricReader ; this . org.springframework.boot.actuate.metrics.export.GaugeWriter = org.springframework.boot.actuate.metrics.export.GaugeWriter ; if ( org.springframework.boot.actuate.metrics.export.GaugeWriter instanceof CounterWriter ) { this . org.springframework.boot.actuate.metrics.export.CounterWriter = ( CounterWriter ) org.springframework.boot.actuate.metrics.export.GaugeWriter ; } else { this . org.springframework.boot.actuate.metrics.export.CounterWriter = null ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { if ( java.lang.String[] != null ) { this . java.lang.String[] = java.lang.String[] ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { if ( java.lang.String[] != null ) { this . java.lang.String[] = java.lang.String[] ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Iterable<org.springframework.boot.actuate.metrics.export.Metric<?>> < Metric < ? > > java.lang.Iterable<org.springframework.boot.actuate.metrics.export.Metric<?>> ( java.lang.String java.lang.String ) { if ( ObjectUtils . isEmpty ( this . java.lang.String[] ) && ObjectUtils . isEmpty ( this . java.lang.String[] ) ) { return this . org.springframework.boot.actuate.metrics.export.MetricReader . findAll ( ) ; } return new org.springframework.boot.actuate.metrics.export.MetricCopyExporter.PatternMatchingIterable ( org.springframework.boot.actuate.metrics.export.MetricCopyExporter .this . org.springframework.boot.actuate.metrics.export.MetricReader ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String , java.util.Collection<org.springframework.boot.actuate.metrics.export.Metric<?>> < Metric < ? > > java.util.Collection<org.springframework.boot.actuate.metrics.export.Metric<?>> ) { for ( Metric < ? > org.springframework.boot.actuate.metrics.export.Metric<?> : java.util.Collection<org.springframework.boot.actuate.metrics.export.Metric<?>> ) { if ( org.springframework.boot.actuate.metrics.export.Metric<> . getName ( ) . startsWith ( STRING ) && this . org.springframework.boot.actuate.metrics.export.CounterWriter != null ) { this . org.springframework.boot.actuate.metrics.export.CounterWriter . increment ( org.springframework.boot.actuate.metrics.export.Delta<?> ( org.springframework.boot.actuate.metrics.export.Metric<> ) ) ; } else { this . org.springframework.boot.actuate.metrics.export.GaugeWriter . set ( org.springframework.boot.actuate.metrics.export.Metric<> ) ; } } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.metrics.export.Delta<?> < ? > org.springframework.boot.actuate.metrics.export.Delta<?> ( Metric < ? > org.springframework.boot.actuate.metrics.export.Metric<?> ) { long long = org.springframework.boot.actuate.metrics.export.Metric<> . getValue ( ) . longValue ( ) ; java.lang.Long java.lang.Long = this . java.util.concurrent.ConcurrentMap<java.lang.String,java.lang.Long> . java.lang.Long ( org.springframework.boot.actuate.metrics.export.Metric<> . getName ( ) , long ) ; if ( java.lang.Long != null ) { long = long - java.lang.Long ; } else { this . java.util.concurrent.ConcurrentMap<java.lang.String,java.lang.Long> . java.lang.Long ( org.springframework.boot.actuate.metrics.export.Metric<> . getName ( ) , long ) ; } return new Delta <> ( org.springframework.boot.actuate.metrics.export.Metric<> . getName ( ) , long , org.springframework.boot.actuate.metrics.export.Metric<> . getTimestamp ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( this . org.springframework.boot.actuate.metrics.export.GaugeWriter ) ; }  <METHOD_END>
<METHOD_START> private void void ( GaugeWriter org.springframework.boot.actuate.metrics.export.GaugeWriter ) { if ( org.springframework.boot.actuate.metrics.export.GaugeWriter instanceof CompositeMetricWriter ) { for ( MetricWriter org.springframework.boot.actuate.metrics.export.MetricWriter : ( CompositeMetricWriter ) org.springframework.boot.actuate.metrics.export.GaugeWriter ) { void ( org.springframework.boot.actuate.metrics.export.MetricWriter ) ; } } try { if ( ClassUtils . isPresent ( STRING , null ) ) { if ( org.springframework.boot.actuate.metrics.export.GaugeWriter instanceof java.io.Flushable ) { ( ( java.io.Flushable ) org.springframework.boot.actuate.metrics.export.GaugeWriter ) . void ( ) ; return; } } java.lang.reflect.Method java.lang.reflect.Method = ReflectionUtils . findMethod ( org.springframework.boot.actuate.metrics.export.GaugeWriter . getClass ( ) , STRING ) ; if ( java.lang.reflect.Method != null ) { ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.boot.actuate.metrics.export.GaugeWriter ) ; } } catch ( java.lang.Exception java.lang.Exception ) { org.springframework.boot.actuate.metrics.export.Log . warn ( STRING + java.lang.Exception . java.lang.Class<? extends java.lang.Exception> ( ) + STRING + java.lang.Exception . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> void ( MetricReader org.springframework.boot.actuate.metrics.export.MetricReader ) { this . org.springframework.boot.actuate.metrics.export.MetricReader = org.springframework.boot.actuate.metrics.export.MetricReader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.boot.actuate.metrics.export.Metric<?>> < Metric < ? > > java.util.Iterator<org.springframework.boot.actuate.metrics.export.Metric<?>> ( ) { return new org.springframework.boot.actuate.metrics.export.MetricCopyExporter.PatternMatchingIterator ( this . org.springframework.boot.actuate.metrics.export.MetricReader . findAll ( ) . iterator ( ) ) ; }  <METHOD_END>
<METHOD_START> void ( java.util.Iterator<org.springframework.boot.actuate.metrics.export.Metric<?>> < Metric < ? > > java.util.Iterator<org.springframework.boot.actuate.metrics.export.Metric<?>> ) { this . java.util.Iterator<org.springframework.boot.actuate.metrics.export.Metric<?>> = java.util.Iterator<org.springframework.boot.actuate.metrics.export.Metric<?>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { if ( this . org.springframework.boot.actuate.metrics.export.Metric<> != null ) { return true ; } this . org.springframework.boot.actuate.metrics.export.Metric<?> = org.springframework.boot.actuate.metrics.export.Metric<?> ( ) ; return this . org.springframework.boot.actuate.metrics.export.Metric<> != null ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.metrics.export.Metric<?> < ? > org.springframework.boot.actuate.metrics.export.Metric<?> ( ) { while ( this . java.util.Iterator<org.springframework.boot.actuate.metrics.export.Metric<?>> . hasNext ( ) ) { Metric < ? > org.springframework.boot.actuate.metrics.export.Metric<?> = this . java.util.Iterator<org.springframework.boot.actuate.metrics.export.Metric<?>> . next ( ) ; if ( boolean ( org.springframework.boot.actuate.metrics.export.Metric<> ) ) { return org.springframework.boot.actuate.metrics.export.Metric<> ; } } return null ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( Metric < ? > org.springframework.boot.actuate.metrics.export.Metric<?> ) { java.lang.String [] java.lang.String[] = org.springframework.boot.actuate.metrics.export.MetricCopyExporter .this . java.lang.String[] ; java.lang.String [] java.lang.String[] = org.springframework.boot.actuate.metrics.export.MetricCopyExporter .this . java.lang.String[] ; java.lang.String java.lang.String = org.springframework.boot.actuate.metrics.export.Metric<> . getName ( ) ; if ( ObjectUtils . isEmpty ( java.lang.String[] ) || PatternMatchUtils . simpleMatch ( java.lang.String[] , java.lang.String ) ) { return ! PatternMatchUtils . simpleMatch ( java.lang.String[] , java.lang.String ) ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.actuate.metrics.export.Metric<?> < ? > org.springframework.boot.actuate.metrics.export.Metric<?> ( ) { Metric < ? > org.springframework.boot.actuate.metrics.export.Metric<?> = this . org.springframework.boot.actuate.metrics.export.Metric<> ; this . org.springframework.boot.actuate.metrics.export.Metric<?> = null ; return org.springframework.boot.actuate.metrics.export.Metric<> ; }  <METHOD_END>
