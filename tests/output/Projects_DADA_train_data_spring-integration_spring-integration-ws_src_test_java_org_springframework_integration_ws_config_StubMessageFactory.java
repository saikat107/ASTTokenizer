<METHOD_START> public org.springframework.integration.ws.config.WebServiceMessage org.springframework.integration.ws.config.WebServiceMessage ( ) { WebServiceMessage org.springframework.integration.ws.config.WebServiceMessage = mock ( WebServiceMessage .class ) ; javax.xml.transform.Source javax.xml.transform.Source = mock ( javax.xml.transform.Source .class ) ; when ( org.springframework.integration.ws.config.WebServiceMessage . getPayloadSource ( ) ) . thenReturn ( javax.xml.transform.Source ) ; return org.springframework.integration.ws.config.WebServiceMessage ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.ws.config.WebServiceMessage org.springframework.integration.ws.config.WebServiceMessage ( java.io.InputStream java.io.InputStream ) throws java.io.IOException { try { javax.xml.transform.Transformer javax.xml.transform.Transformer = javax.xml.transform.TransformerFactory . javax.xml.transform.TransformerFactory ( ) . javax.xml.transform.Transformer ( ) ; javax.xml.parsers.DocumentBuilder javax.xml.parsers.DocumentBuilder = javax.xml.parsers.DocumentBuilderFactory . javax.xml.parsers.DocumentBuilderFactory ( ) . javax.xml.parsers.DocumentBuilder ( ) ; org.xml.sax.InputSource org.xml.sax.InputSource = new org.xml.sax.InputSource ( new java.io.InputStreamReader ( java.io.InputStream ) ) ; org.w3c.dom.Document org.w3c.dom.Document = javax.xml.parsers.DocumentBuilder . org.w3c.dom.Document ( org.xml.sax.InputSource ) ; return new DomPoxMessage ( org.w3c.dom.Document , javax.xml.transform.Transformer , STRING ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.IllegalArgumentException ( java.lang.Exception ) ; } }  <METHOD_END>
