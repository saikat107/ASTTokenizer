<METHOD_START> @ Before public void void ( ) { this . java.lang.String = STRING ; this . org.springframework.web.servlet.mvc.method.annotation.MediaType = MediaType . TEXT_PLAIN ; this . java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> = StringHttpMessageConverter .class ; this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new MethodParameter ( ClassUtils . getMethod ( this . java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChainTests> ( ) , STRING , java.lang.String .class ) , NUMBER ) ; this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new MethodParameter ( ClassUtils . getMethod ( this . java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChainTests> ( ) , STRING , java.lang.String .class ) , - NUMBER ) ; this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest = new ServletServerHttpRequest ( new MockHttpServletRequest ( ) ) ; this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse = new ServletServerHttpResponse ( new MockHttpServletResponse ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) java.io.IOException { RequestBodyAdvice org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdvice = Mockito . mock ( RequestBodyAdvice .class ) ; ResponseBodyAdvice < java.lang.String > org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice<java.lang.String> = Mockito . mock ( ResponseBodyAdvice .class ) ; java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = java.util.Arrays . java.util.List ( org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdvice , org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice<java.lang.String> ) ; RequestResponseBodyAdviceChain org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain = new RequestResponseBodyAdviceChain ( java.util.List<java.lang.Object> ) ; HttpInputMessage org.springframework.web.servlet.mvc.method.annotation.HttpInputMessage = new ServletServerHttpRequest ( new MockHttpServletRequest ( ) ) ; given ( org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdvice . supports ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , java.lang.String .class , this . java.lang.Class<> ) ) . willReturn ( true ) ; given ( org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdvice . beforeBodyRead ( eq ( this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest ) , eq ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) , eq ( java.lang.String .class ) , eq ( this . java.lang.Class<> ) ) ) . willReturn ( org.springframework.web.servlet.mvc.method.annotation.HttpInputMessage ) ; assertSame ( org.springframework.web.servlet.mvc.method.annotation.HttpInputMessage , org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain . beforeBodyRead ( this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest , this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , java.lang.String .class , this . java.lang.Class<> ) ) ; java.lang.String java.lang.String = STRING ; given ( org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdvice . afterBodyRead ( eq ( this . java.lang.String ) , eq ( this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest ) , eq ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) , eq ( java.lang.String .class ) , eq ( this . java.lang.Class<> ) ) ) . willReturn ( java.lang.String ) ; assertEquals ( java.lang.String , org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain . afterBodyRead ( this . java.lang.String , this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest , this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , java.lang.String .class , this . java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) { RequestBodyAdvice org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdvice = Mockito . mock ( RequestBodyAdvice .class ) ; ResponseBodyAdvice < java.lang.String > org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice<java.lang.String> = Mockito . mock ( ResponseBodyAdvice .class ) ; java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = java.util.Arrays . java.util.List ( org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdvice , org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice<java.lang.String> ) ; RequestResponseBodyAdviceChain org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain = new RequestResponseBodyAdviceChain ( java.util.List<java.lang.Object> ) ; java.lang.String java.lang.String = STRING ; given ( org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice<java.lang.String> . supports ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . java.lang.Class<> ) ) . willReturn ( true ) ; given ( org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice<java.lang.String> . beforeBodyWrite ( eq ( this . java.lang.String ) , eq ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) , eq ( this . org.springframework.web.servlet.mvc.method.annotation.MediaType ) , eq ( this . java.lang.Class<> ) , same ( this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest ) , same ( this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse ) ) ) . willReturn ( java.lang.String ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain . beforeBodyWrite ( this . java.lang.String , this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . org.springframework.web.servlet.mvc.method.annotation.MediaType , this . java.lang.Class<> , this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest , this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = new ControllerAdviceBean ( new org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChainTests.MyControllerAdvice ( ) ) ; RequestResponseBodyAdviceChain org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain = new RequestResponseBodyAdviceChain ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object ) ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain . beforeBodyWrite ( this . java.lang.String , this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . org.springframework.web.servlet.mvc.method.annotation.MediaType , this . java.lang.Class<> , this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest , this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = new ControllerAdviceBean ( new org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChainTests.TargetedControllerAdvice ( ) ) ; RequestResponseBodyAdviceChain org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain = new RequestResponseBodyAdviceChain ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object ) ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain . beforeBodyWrite ( this . java.lang.String , this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . org.springframework.web.servlet.mvc.method.annotation.MediaType , this . java.lang.Class<> , this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest , this . org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse ) ; assertEquals ( this . java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < ? extends HttpMessageConverter < ? > > java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String , MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , MediaType org.springframework.web.servlet.mvc.method.annotation.MediaType , java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < ? extends HttpMessageConverter < ? > > java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> , ServerHttpRequest org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest , ServerHttpResponse org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse ) { return java.lang.String + STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < ? extends HttpMessageConverter < ? > > java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String , MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , MediaType org.springframework.web.servlet.mvc.method.annotation.MediaType , java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < ? extends HttpMessageConverter < ? > > java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> , ServerHttpRequest org.springframework.web.servlet.mvc.method.annotation.ServerHttpRequest , ServerHttpResponse org.springframework.web.servlet.mvc.method.annotation.ServerHttpResponse ) { return java.lang.String + STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ ResponseBody public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return STRING ; }  <METHOD_END>
