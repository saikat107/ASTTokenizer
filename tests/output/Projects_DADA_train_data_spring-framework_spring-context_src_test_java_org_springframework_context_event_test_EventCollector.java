<METHOD_START> public void void ( Identifiable org.springframework.context.event.test.Identifiable , java.lang.Object java.lang.Object ) { this . org.springframework.context.event.test.MultiValueMap<java.lang.String,java.lang.Object> . add ( org.springframework.context.event.test.Identifiable . getId ( ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( Identifiable org.springframework.context.event.test.Identifiable ) { return this . org.springframework.context.event.test.MultiValueMap<java.lang.String,java.lang.Object> . get ( org.springframework.context.event.test.Identifiable . getId ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = this . org.springframework.context.event.test.MultiValueMap<java.lang.String,java.lang.Object> . getOrDefault ( java.lang.String , java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; assertEquals ( STRING + java.util.List<java.lang.Object> , NUMBER , java.util.List<java.lang.Object> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( Identifiable org.springframework.context.event.test.Identifiable ) { void ( org.springframework.context.event.test.Identifiable . getId ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = this . org.springframework.context.event.test.MultiValueMap<java.lang.String,java.lang.Object> . getOrDefault ( java.lang.String , java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; assertEquals ( STRING , java.lang.Object[] . int , java.util.List<java.lang.Object> . int ( ) ) ; for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { assertEquals ( STRING + int , java.lang.Object[] [ int ] , java.util.List<java.lang.Object> . java.lang.Object ( int ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( Identifiable org.springframework.context.event.test.Identifiable , java.lang.Object ... java.lang.Object[] ) { void ( org.springframework.context.event.test.Identifiable . getId ( ) , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { int int = NUMBER ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.util.List<java.lang.Object>> < java.lang.String , java.util.List<java.lang.Object> < java.lang.Object > > java.util.Map.Entry<java.lang.String,java.util.List<java.lang.Object>> : this . org.springframework.context.event.test.MultiValueMap<java.lang.String,java.lang.Object> . entrySet ( ) ) { int += java.util.Map.Entry<java.lang.String,java.util.List<java.lang.Object>> . java.util.List<java.lang.Object> ( ) . int ( ) ; } assertEquals ( STRING + this . org.springframework.context.event.test.MultiValueMap<java.lang.String,java.lang.Object> . size ( ) + STRING , int , int ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . org.springframework.context.event.test.MultiValueMap<java.lang.String,java.lang.Object> . clear ( ) ; }  <METHOD_END>
