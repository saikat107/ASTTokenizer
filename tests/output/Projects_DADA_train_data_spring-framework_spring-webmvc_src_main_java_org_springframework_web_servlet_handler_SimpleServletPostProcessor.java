<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContext org.springframework.web.servlet.handler.ServletContext ) { this . org.springframework.web.servlet.handler.ServletContext = org.springframework.web.servlet.handler.ServletContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletConfig org.springframework.web.servlet.handler.ServletConfig ) { this . org.springframework.web.servlet.handler.ServletConfig = org.springframework.web.servlet.handler.ServletConfig ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.web.servlet.handler.BeansException { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.web.servlet.handler.BeansException { if ( java.lang.Object instanceof Servlet ) { ServletConfig org.springframework.web.servlet.handler.ServletConfig = this . org.springframework.web.servlet.handler.ServletConfig ; if ( org.springframework.web.servlet.handler.ServletConfig == null || ! this . boolean ) { org.springframework.web.servlet.handler.ServletConfig = new org.springframework.web.servlet.handler.SimpleServletPostProcessor.DelegatingServletConfig ( java.lang.String , this . org.springframework.web.servlet.handler.ServletContext ) ; } try { ( ( Servlet ) java.lang.Object ) . init ( org.springframework.web.servlet.handler.ServletConfig ) ; } catch ( ServletException org.springframework.web.servlet.handler.ServletException ) { throw new BeanInitializationException ( STRING , org.springframework.web.servlet.handler.ServletException ) ; } } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.web.servlet.handler.BeansException { if ( java.lang.Object instanceof Servlet ) { ( ( Servlet ) java.lang.Object ) . destroy ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( java.lang.Object instanceof Servlet ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , ServletContext org.springframework.web.servlet.handler.ServletContext ) { this . java.lang.String = java.lang.String ; this . org.springframework.web.servlet.handler.ServletContext = org.springframework.web.servlet.handler.ServletContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.handler.ServletContext org.springframework.web.servlet.handler.ServletContext ( ) { return this . org.springframework.web.servlet.handler.ServletContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Enumeration<java.lang.String> < java.lang.String > java.util.Enumeration<java.lang.String> ( ) { return java.util.Collections . java.util.Enumeration<java.lang.String> ( java.util.Collections . java.util.Set<java.lang.String> ( ) ) ; }  <METHOD_END>
