<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.handler.BeanFactory ) throws org.springframework.integration.handler.BeansException { Assert . notNull ( org.springframework.integration.handler.BeanFactory , STRING ) ; this . org.springframework.integration.handler.BeanFactory = org.springframework.integration.handler.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( Message < ? > org.springframework.integration.handler.Message<?> ) { if ( this . org.springframework.integration.handler.MessageProcessor<T> == null ) { java.lang.Object java.lang.Object = this . org.springframework.integration.handler.BeanFactory . getBean ( this . java.lang.String ) ; this . org.springframework.integration.handler.MessageProcessor<T> = new MethodInvokingMessageProcessor <> ( java.lang.Object , this . java.lang.String ) ; } return this . org.springframework.integration.handler.MessageProcessor<T> . processMessage ( org.springframework.integration.handler.Message<> ) ; }  <METHOD_END>
