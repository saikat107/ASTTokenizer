<METHOD_START> @ Before public void void ( ) { AnnotationConfigApplicationContext org.springframework.integration.twitter.inbound.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.integration.twitter.inbound.AnnotationConfigApplicationContext . register ( org.springframework.integration.twitter.inbound.SearchReceivingMessageSourceWithRedisTests.SearchReceivingMessageSourceWithRedisTestsConfig .class ) ; org.springframework.integration.twitter.inbound.AnnotationConfigApplicationContext . registerShutdownHook ( ) ; org.springframework.integration.twitter.inbound.AnnotationConfigApplicationContext . refresh ( ) ; this . org.springframework.integration.twitter.inbound.SourcePollingChannelAdapter = org.springframework.integration.twitter.inbound.AnnotationConfigApplicationContext . getBean ( SourcePollingChannelAdapter .class ) ; this . org.springframework.integration.twitter.inbound.AbstractTwitterMessageSource<?> = org.springframework.integration.twitter.inbound.AnnotationConfigApplicationContext . getBean ( AbstractTwitterMessageSource .class ) ; this . org.springframework.integration.twitter.inbound.MetadataStore = org.springframework.integration.twitter.inbound.AnnotationConfigApplicationContext . getBean ( MetadataStore .class ) ; this . org.springframework.integration.twitter.inbound.PollableChannel = org.springframework.integration.twitter.inbound.AnnotationConfigApplicationContext . getBean ( STRING , PollableChannel .class ) ; this . java.lang.String = TestUtils . getPropertyValue ( org.springframework.integration.twitter.inbound.SourcePollingChannelAdapter , STRING , java.lang.String .class ) ; this . org.springframework.integration.twitter.inbound.MetadataStore . put ( java.lang.String , STRING ) ; this . org.springframework.integration.twitter.inbound.AbstractTwitterMessageSource<> . afterPropertiesSet ( ) ; org.springframework.integration.twitter.inbound.AnnotationConfigApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test @ RedisAvailable public void void ( ) java.lang.Exception { MetadataStore org.springframework.integration.twitter.inbound.MetadataStore = TestUtils . getPropertyValue ( this . org.springframework.integration.twitter.inbound.SourcePollingChannelAdapter , STRING , MetadataStore .class ) ; assertTrue ( STRING , org.springframework.integration.twitter.inbound.MetadataStore instanceof RedisMetadataStore ) ; assertSame ( this . org.springframework.integration.twitter.inbound.MetadataStore , org.springframework.integration.twitter.inbound.MetadataStore ) ; assertEquals ( STRING , java.lang.String ) ; this . org.springframework.integration.twitter.inbound.SourcePollingChannelAdapter . start ( ) ; assertNotNull ( this . org.springframework.integration.twitter.inbound.PollableChannel . receive ( NUMBER ) ) ; assertNotNull ( this . org.springframework.integration.twitter.inbound.PollableChannel . receive ( NUMBER ) ) ; assertNotNull ( this . org.springframework.integration.twitter.inbound.PollableChannel . receive ( NUMBER ) ) ; assertNull ( this . org.springframework.integration.twitter.inbound.PollableChannel . receive ( NUMBER ) ) ; java.lang.String java.lang.String = this . org.springframework.integration.twitter.inbound.MetadataStore . get ( java.lang.String ) ; assertNotNull ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; this . org.springframework.integration.twitter.inbound.SourcePollingChannelAdapter . stop ( ) ; this . org.springframework.integration.twitter.inbound.MetadataStore . put ( java.lang.String , STRING ) ; this . org.springframework.integration.twitter.inbound.AbstractTwitterMessageSource<> . afterPropertiesSet ( ) ; this . org.springframework.integration.twitter.inbound.SourcePollingChannelAdapter . start ( ) ; assertNotNull ( this . org.springframework.integration.twitter.inbound.PollableChannel . receive ( NUMBER ) ) ; assertNotNull ( this . org.springframework.integration.twitter.inbound.PollableChannel . receive ( NUMBER ) ) ; assertNull ( this . org.springframework.integration.twitter.inbound.PollableChannel . receive ( NUMBER ) ) ; java.lang.String = this . org.springframework.integration.twitter.inbound.MetadataStore . get ( java.lang.String ) ; assertNotNull ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) public org.springframework.integration.twitter.inbound.TwitterTemplate org.springframework.integration.twitter.inbound.TwitterTemplate ( ) { TwitterTemplate org.springframework.integration.twitter.inbound.TwitterTemplate = mock ( TwitterTemplate .class ) ; SearchOperations org.springframework.integration.twitter.inbound.SearchOperations = mock ( SearchOperations .class ) ; Tweet org.springframework.integration.twitter.inbound.Tweet = mock ( Tweet .class ) ; given ( org.springframework.integration.twitter.inbound.Tweet . getId ( ) ) . willReturn ( STRING ) ; given ( org.springframework.integration.twitter.inbound.Tweet . getCreatedAt ( ) ) . willReturn ( new java.util.GregorianCalendar ( NUMBER , NUMBER , NUMBER ) . java.util.Date ( ) ) ; Tweet org.springframework.integration.twitter.inbound.Tweet = mock ( Tweet .class ) ; given ( org.springframework.integration.twitter.inbound.Tweet . getId ( ) ) . willReturn ( STRING ) ; given ( org.springframework.integration.twitter.inbound.Tweet . getCreatedAt ( ) ) . willReturn ( new java.util.GregorianCalendar ( NUMBER , NUMBER , NUMBER ) . java.util.Date ( ) ) ; final Tweet org.springframework.integration.twitter.inbound.Tweet = mock ( Tweet .class ) ; given ( org.springframework.integration.twitter.inbound.Tweet . getId ( ) ) . willReturn ( STRING ) ; given ( org.springframework.integration.twitter.inbound.Tweet . getCreatedAt ( ) ) . willReturn ( new java.util.GregorianCalendar ( NUMBER , NUMBER , NUMBER ) . java.util.Date ( ) ) ; final java.util.List<org.springframework.integration.twitter.inbound.Tweet> < Tweet > java.util.List<org.springframework.integration.twitter.inbound.Tweet> = new java.util.ArrayList<org.springframework.integration.twitter.inbound.Tweet> < Tweet > ( ) ; java.util.List<org.springframework.integration.twitter.inbound.Tweet> . add ( org.springframework.integration.twitter.inbound.Tweet ) ; java.util.List<org.springframework.integration.twitter.inbound.Tweet> . add ( org.springframework.integration.twitter.inbound.Tweet ) ; java.util.List<org.springframework.integration.twitter.inbound.Tweet> . add ( org.springframework.integration.twitter.inbound.Tweet ) ; final SearchResults org.springframework.integration.twitter.inbound.SearchResults = new SearchResults ( java.util.List<org.springframework.integration.twitter.inbound.Tweet> , new SearchMetadata ( NUMBER , NUMBER ) ) ; when ( org.springframework.integration.twitter.inbound.TwitterTemplate . searchOperations ( ) ) . thenReturn ( org.springframework.integration.twitter.inbound.SearchOperations ) ; when ( org.springframework.integration.twitter.inbound.TwitterTemplate . searchOperations ( ) . search ( any ( SearchParameters .class ) ) ) . thenReturn ( org.springframework.integration.twitter.inbound.SearchResults ) ; when ( org.springframework.integration.twitter.inbound.TwitterTemplate . isAuthorized ( ) ) . thenReturn ( true ) ; final UserOperations org.springframework.integration.twitter.inbound.UserOperations = mock ( UserOperations .class ) ; when ( org.springframework.integration.twitter.inbound.TwitterTemplate . userOperations ( ) ) . thenReturn ( org.springframework.integration.twitter.inbound.UserOperations ) ; when ( org.springframework.integration.twitter.inbound.UserOperations . getProfileId ( ) ) . thenReturn ( NUMBER ) ; return org.springframework.integration.twitter.inbound.TwitterTemplate ; }  <METHOD_END>
