<METHOD_START> @ Test public void void ( ) java.io.IOException { MockServletContext org.springframework.web.context.support.MockServletContext = new MockServletContext ( ) ; Resource org.springframework.web.context.support.Resource = new ServletContextResource ( org.springframework.web.context.support.MockServletContext , STRING ) ; void ( org.springframework.web.context.support.Resource ) ; assertEquals ( org.springframework.web.context.support.Resource , new ServletContextResource ( org.springframework.web.context.support.MockServletContext , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { MockServletContext org.springframework.web.context.support.MockServletContext = new MockServletContext ( ) ; Resource org.springframework.web.context.support.Resource = new ServletContextResource ( org.springframework.web.context.support.MockServletContext , STRING ) ; Resource org.springframework.web.context.support.Resource = org.springframework.web.context.support.Resource . createRelative ( STRING ) ; assertEquals ( new ServletContextResource ( org.springframework.web.context.support.MockServletContext , STRING ) , org.springframework.web.context.support.Resource ) ; }  <METHOD_END>
<METHOD_START> private void void ( Resource org.springframework.web.context.support.Resource ) throws java.io.IOException { assertEquals ( STRING , org.springframework.web.context.support.Resource . getFilename ( ) ) ; assertTrue ( org.springframework.web.context.support.Resource . getURL ( ) . getFile ( ) . endsWith ( STRING ) ) ; Resource org.springframework.web.context.support.Resource = org.springframework.web.context.support.Resource . createRelative ( STRING ) ; assertEquals ( STRING , org.springframework.web.context.support.Resource . getFilename ( ) ) ; assertTrue ( org.springframework.web.context.support.Resource . getURL ( ) . getFile ( ) . endsWith ( STRING ) ) ; assertTrue ( org.springframework.web.context.support.Resource . exists ( ) ) ; Resource org.springframework.web.context.support.Resource = org.springframework.web.context.support.Resource . createRelative ( STRING ) ; assertEquals ( STRING , org.springframework.web.context.support.Resource . getFilename ( ) ) ; assertTrue ( org.springframework.web.context.support.Resource . getURL ( ) . getFile ( ) . endsWith ( STRING ) ) ; assertTrue ( org.springframework.web.context.support.Resource . exists ( ) ) ; }  <METHOD_END>
