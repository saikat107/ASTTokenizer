<METHOD_START> @ Before public void void ( ) { this . org.springframework.test.web.servlet.samples.spr.MockMvc = webAppContextSetup ( this . org.springframework.test.web.servlet.samples.spr.WebApplicationContext ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.net.URI java.net.URI = UriComponentsBuilder . fromUriString ( STRING ) . pathSegment ( java.lang.String ) . build ( ) . encode ( ) . toUri ( ) ; ResultActions org.springframework.test.web.servlet.samples.spr.ResultActions = org.springframework.test.web.servlet.samples.spr.MockMvc . perform ( get ( java.net.URI ) ) ; org.springframework.test.web.servlet.samples.spr.ResultActions . andExpect ( status ( ) . isOk ( ) ) . andExpect ( model ( ) . attribute ( STRING , is ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.test.web.servlet.samples.spr.EncodedUriTests.MyController org.springframework.test.web.servlet.samples.spr.EncodedUriTests.MyController ( ) { return new org.springframework.test.web.servlet.samples.spr.EncodedUriTests.MyController ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.test.web.servlet.samples.spr.EncodedUriTests.HandlerMappingConfigurer org.springframework.test.web.servlet.samples.spr.EncodedUriTests.HandlerMappingConfigurer ( ) { return new org.springframework.test.web.servlet.samples.spr.EncodedUriTests.HandlerMappingConfigurer ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ViewResolverRegistry org.springframework.test.web.servlet.samples.spr.ViewResolverRegistry ) { org.springframework.test.web.servlet.samples.spr.ViewResolverRegistry . jsp ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( value = STRING , method = RequestMethod . GET ) public java.lang.String java.lang.String ( @ PathVariable java.lang.String java.lang.String , Model org.springframework.test.web.servlet.samples.spr.Model ) { org.springframework.test.web.servlet.samples.spr.Model . addAttribute ( STRING , java.lang.String ) ; return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.test.web.servlet.samples.spr.BeansException { if ( java.lang.Object instanceof RequestMappingHandlerMapping ) { RequestMappingHandlerMapping org.springframework.test.web.servlet.samples.spr.RequestMappingHandlerMapping = ( RequestMappingHandlerMapping ) java.lang.Object ; org.springframework.test.web.servlet.samples.spr.RequestMappingHandlerMapping . setUrlDecode ( false ) ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.test.web.servlet.samples.spr.BeansException { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return PriorityOrdered . HIGHEST_PRECEDENCE ; }  <METHOD_END>
