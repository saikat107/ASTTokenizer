<METHOD_START> public void ( CassandraOperations org.springframework.boot.actuate.health.CassandraOperations ) { Assert . notNull ( org.springframework.boot.actuate.health.CassandraOperations , STRING ) ; this . org.springframework.boot.actuate.health.CassandraOperations = org.springframework.boot.actuate.health.CassandraOperations ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Health . Health Health.Builder ) throws java.lang.Exception { try { Select org.springframework.boot.actuate.health.Select = QueryBuilder . select ( STRING ) . from ( STRING , STRING ) ; ResultSet org.springframework.boot.actuate.health.ResultSet = this . org.springframework.boot.actuate.health.CassandraOperations . getCqlOperations ( ) . queryForResultSet ( org.springframework.boot.actuate.health.Select ) ; if ( org.springframework.boot.actuate.health.ResultSet . isExhausted ( ) ) { Health.Builder . up ( ) ; return; } java.lang.String java.lang.String = org.springframework.boot.actuate.health.ResultSet . one ( ) . getString ( NUMBER ) ; Health.Builder . up ( ) . withDetail ( STRING , java.lang.String ) ; } catch ( java.lang.Exception java.lang.Exception ) { Health.Builder . down ( java.lang.Exception ) ; } }  <METHOD_END>
