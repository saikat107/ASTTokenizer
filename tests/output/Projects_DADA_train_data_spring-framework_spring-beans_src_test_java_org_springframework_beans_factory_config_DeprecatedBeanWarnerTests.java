<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { org.springframework.beans.factory.config.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; BeanDefinition org.springframework.beans.factory.config.BeanDefinition = new RootBeanDefinition ( MyDeprecatedBean .class ) ; java.lang.String java.lang.String = STRING ; org.springframework.beans.factory.config.DefaultListableBeanFactory . registerBeanDefinition ( java.lang.String , org.springframework.beans.factory.config.BeanDefinition ) ; org.springframework.beans.factory.config.DeprecatedBeanWarner = new org.springframework.beans.factory.config.DeprecatedBeanWarnerTests.MyDeprecatedBeanWarner ( ) ; org.springframework.beans.factory.config.DeprecatedBeanWarner . postProcessBeanFactory ( org.springframework.beans.factory.config.DefaultListableBeanFactory ) ; assertEquals ( java.lang.String , this . java.lang.String ) ; assertEquals ( org.springframework.beans.factory.config.BeanDefinition , this . org.springframework.beans.factory.config.BeanDefinition ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> , BeanDefinition org.springframework.beans.factory.config.BeanDefinition ) { org.springframework.beans.factory.config.DeprecatedBeanWarnerTests .this . java.lang.String = java.lang.String ; org.springframework.beans.factory.config.DeprecatedBeanWarnerTests .this . org.springframework.beans.factory.config.BeanDefinition = org.springframework.beans.factory.config.BeanDefinition ; }  <METHOD_END>
