<METHOD_START> @ java.lang.Override public final void void ( SimpleTestConfigBuilder org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBuilder ) throws java.lang.Exception { org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBuilder . setSharedObject ( java.lang.String .class , STRING ) ; org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBuilder . setSharedObject ( SimpleTestConfigBeanABuilder .class , org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanABuilder ( ) ) ; org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBuilder . setSharedObject ( SimpleTestConfigBeanBBuilder .class , org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanBBuilder ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SimpleTestConfigBuilder org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBuilder ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SimpleTestConfigBeanABuilder org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanABuilder ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SimpleTestConfigBeanBConfigurer org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanBConfigurer ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> protected final org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanBBuilder org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanBBuilder ( ) java.lang.Exception { if ( org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanBBuilder != null ) { return org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanBBuilder ; } org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanBBuilder = new SimpleTestConfigBeanBBuilder ( ) ; void ( org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanBBuilder ) ; return org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanBBuilder ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanABuilder org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanABuilder ( ) java.lang.Exception { if ( org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanABuilder != null ) { return org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanABuilder ; } org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanABuilder = new SimpleTestConfigBeanABuilder ( ) ; void ( org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanABuilder ) ; return org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfigBeanABuilder ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( AnnotationBuilder < SimpleTestConfig > org.springframework.statemachine.config.common.annotation.simple.AnnotationBuilder<org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfig> ) { return org.springframework.statemachine.config.common.annotation.simple.AnnotationBuilder<org.springframework.statemachine.config.common.annotation.simple.SimpleTestConfig> instanceof SimpleTestConfigBuilder ; }  <METHOD_END>
