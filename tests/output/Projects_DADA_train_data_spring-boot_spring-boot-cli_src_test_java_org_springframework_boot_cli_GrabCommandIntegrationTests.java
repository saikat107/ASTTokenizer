<METHOD_START> @ Before @ After public void void ( ) { FileSystemUtils . deleteRecursively ( new java.io.File ( STRING ) ) ; java.lang.System . java.lang.String ( STRING ) ; java.lang.System . java.lang.String ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.System . java.lang.String ( STRING , STRING ) ; java.lang.System . java.lang.String ( STRING , STRING ) ; java.lang.String java.lang.String = this . org.springframework.boot.cli.CliTester . grab ( STRING , STRING ) ; assertThat ( new java.io.File ( STRING ) . boolean ( ) ) . isTrue ( ) ; assertThat ( java.lang.String . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { try { this . org.springframework.boot.cli.CliTester . grab ( STRING ) ; fail ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { assertThat ( java.lang.Exception . java.lang.String ( ) ) . contains ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.System . java.lang.String ( STRING , STRING ) ; FileSystemUtils . copyRecursively ( new java.io.File ( STRING ) , new java.io.File ( STRING ) ) ; this . org.springframework.boot.cli.CliTester . grab ( STRING , STRING ) ; assertThat ( new java.io.File ( STRING ) . boolean ( ) ) . isTrue ( ) ; }  <METHOD_END>
