<METHOD_START> @ java.lang.Override public void void ( RestTemplate org.springframework.boot.web.client.RestTemplate ) { HttpHost org.springframework.boot.web.client.HttpHost = new HttpHost ( STRING ) ; HttpClient org.springframework.boot.web.client.HttpClient = HttpClientBuilder . create ( ) . setRoutePlanner ( new DefaultProxyRoutePlanner ( org.springframework.boot.web.client.HttpHost ) { @ java.lang.Override public org.springframework.boot.web.client.HttpHost org.springframework.boot.web.client.HttpHost ( HttpHost org.springframework.boot.web.client.HttpHost , HttpRequest org.springframework.boot.web.client.HttpRequest , HttpContext org.springframework.boot.web.client.HttpContext )										throws org.springframework.boot.web.client.HttpException { if ( org.springframework.boot.web.client.HttpHost . getHostName ( ) . equals ( STRING ) ) { return null ; } return super. determineProxy ( org.springframework.boot.web.client.HttpHost , org.springframework.boot.web.client.HttpRequest , org.springframework.boot.web.client.HttpContext ) ; } } ) . build ( ) ; org.springframework.boot.web.client.RestTemplate . setRequestFactory ( new HttpComponentsClientHttpRequestFactory ( org.springframework.boot.web.client.HttpClient ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.web.client.HttpHost org.springframework.boot.web.client.HttpHost ( HttpHost org.springframework.boot.web.client.HttpHost , HttpRequest org.springframework.boot.web.client.HttpRequest , HttpContext org.springframework.boot.web.client.HttpContext )										throws org.springframework.boot.web.client.HttpException { if ( org.springframework.boot.web.client.HttpHost . getHostName ( ) . equals ( STRING ) ) { return null ; } return super. determineProxy ( org.springframework.boot.web.client.HttpHost , org.springframework.boot.web.client.HttpRequest , org.springframework.boot.web.client.HttpContext ) ; }  <METHOD_END>
