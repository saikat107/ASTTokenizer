<METHOD_START> @ Test public void void ( ) java.lang.Exception { TcpConnectionFactoryFactoryBean org.springframework.integration.ip.config.TcpConnectionFactoryFactoryBean = new TcpConnectionFactoryFactoryBean ( ) ; org.springframework.integration.ip.config.TcpConnectionFactoryFactoryBean . setHost ( STRING ) ; org.springframework.integration.ip.config.TcpConnectionFactoryFactoryBean . setBeanFactory ( mock ( BeanFactory .class ) ) ; org.springframework.integration.ip.config.TcpConnectionFactoryFactoryBean . afterPropertiesSet ( ) ; assertEquals ( NUMBER , TestUtils . getPropertyValue ( org.springframework.integration.ip.config.TcpConnectionFactoryFactoryBean . getObject ( ) , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { TcpConnectionFactoryFactoryBean org.springframework.integration.ip.config.TcpConnectionFactoryFactoryBean = new TcpConnectionFactoryFactoryBean ( ) ; org.springframework.integration.ip.config.TcpConnectionFactoryFactoryBean . setHost ( STRING ) ; org.springframework.integration.ip.config.TcpConnectionFactoryFactoryBean . setReadDelay ( NUMBER ) ; org.springframework.integration.ip.config.TcpConnectionFactoryFactoryBean . setBeanFactory ( mock ( BeanFactory .class ) ) ; org.springframework.integration.ip.config.TcpConnectionFactoryFactoryBean . afterPropertiesSet ( ) ; assertEquals ( NUMBER , TestUtils . getPropertyValue ( org.springframework.integration.ip.config.TcpConnectionFactoryFactoryBean . getObject ( ) , STRING ) ) ; }  <METHOD_END>
