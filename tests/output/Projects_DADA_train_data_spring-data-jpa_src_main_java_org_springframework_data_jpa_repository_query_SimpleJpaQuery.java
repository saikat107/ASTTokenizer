<METHOD_START> public void ( JpaQueryMethod org.springframework.data.jpa.repository.query.JpaQueryMethod , EntityManager org.springframework.data.jpa.repository.query.EntityManager , EvaluationContextProvider org.springframework.data.jpa.repository.query.EvaluationContextProvider , SpelExpressionParser org.springframework.data.jpa.repository.query.SpelExpressionParser ) { this( org.springframework.data.jpa.repository.query.JpaQueryMethod , org.springframework.data.jpa.repository.query.EntityManager , org.springframework.data.jpa.repository.query.JpaQueryMethod . getAnnotatedQuery ( ) , org.springframework.data.jpa.repository.query.EvaluationContextProvider , org.springframework.data.jpa.repository.query.SpelExpressionParser ); }  <METHOD_END>
<METHOD_START> public void ( JpaQueryMethod org.springframework.data.jpa.repository.query.JpaQueryMethod , EntityManager org.springframework.data.jpa.repository.query.EntityManager , java.lang.String java.lang.String , EvaluationContextProvider org.springframework.data.jpa.repository.query.EvaluationContextProvider , SpelExpressionParser org.springframework.data.jpa.repository.query.SpelExpressionParser ) { super( org.springframework.data.jpa.repository.query.JpaQueryMethod , org.springframework.data.jpa.repository.query.EntityManager , java.lang.String , org.springframework.data.jpa.repository.query.EvaluationContextProvider , org.springframework.data.jpa.repository.query.SpelExpressionParser ); void ( getQuery ( ) . getQueryString ( ) , java.lang.String . java.lang.String ( STRING , org.springframework.data.jpa.repository.query.JpaQueryMethod ) ) ; if ( org.springframework.data.jpa.repository.query.JpaQueryMethod . isPageQuery ( ) ) { void ( getCountQuery ( ) . getQueryString ( ) , java.lang.String . java.lang.String ( STRING , org.springframework.data.jpa.repository.query.JpaQueryMethod ) ) ; } }  <METHOD_END>
<METHOD_START> private final void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { if ( getQueryMethod ( ) . isProcedureQuery ( ) ) { return; } EntityManager org.springframework.data.jpa.repository.query.EntityManager = null ; try { org.springframework.data.jpa.repository.query.EntityManager = getEntityManager ( ) . getEntityManagerFactory ( ) . createEntityManager ( ) ; org.springframework.data.jpa.repository.query.EntityManager . createQuery ( java.lang.String ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { throw new java.lang.IllegalArgumentException ( java.lang.String , java.lang.RuntimeException ) ; } finally { if ( org.springframework.data.jpa.repository.query.EntityManager != null ) { org.springframework.data.jpa.repository.query.EntityManager . close ( ) ; } } }  <METHOD_END>
