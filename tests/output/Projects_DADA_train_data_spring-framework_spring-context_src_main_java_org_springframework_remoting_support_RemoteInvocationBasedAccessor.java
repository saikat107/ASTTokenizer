<METHOD_START> public void void ( RemoteInvocationFactory org.springframework.remoting.support.RemoteInvocationFactory ) { this . org.springframework.remoting.support.RemoteInvocationFactory = ( org.springframework.remoting.support.RemoteInvocationFactory != null ? org.springframework.remoting.support.RemoteInvocationFactory : new DefaultRemoteInvocationFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.remoting.support.RemoteInvocationFactory org.springframework.remoting.support.RemoteInvocationFactory ( ) { return this . org.springframework.remoting.support.RemoteInvocationFactory ; }  <METHOD_END>
<METHOD_START> protected org.springframework.remoting.support.RemoteInvocation org.springframework.remoting.support.RemoteInvocation ( MethodInvocation org.springframework.remoting.support.MethodInvocation ) { return org.springframework.remoting.support.RemoteInvocationFactory ( ) . createRemoteInvocation ( org.springframework.remoting.support.MethodInvocation ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( RemoteInvocationResult org.springframework.remoting.support.RemoteInvocationResult ) throws java.lang.Throwable { return org.springframework.remoting.support.RemoteInvocationResult . recreate ( ) ; }  <METHOD_END>
