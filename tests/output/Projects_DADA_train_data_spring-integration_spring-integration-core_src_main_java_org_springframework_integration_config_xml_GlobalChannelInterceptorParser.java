<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.config.xml.AbstractBeanDefinition org.springframework.integration.config.xml.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( GlobalChannelInterceptorWrapper .class ) ; java.lang.Object java.lang.Object = java.lang.Object ( org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.Object ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , java.lang.String , STRING ) ; return org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { BeanComponentDefinition org.springframework.integration.config.xml.BeanComponentDefinition = IntegrationNamespaceUtils . parseInnerHandlerDefinition ( org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; if ( org.springframework.integration.config.xml.BeanComponentDefinition != null ) { return org.springframework.integration.config.xml.BeanComponentDefinition ; } BeanDefinitionParserDelegate org.springframework.integration.config.xml.BeanDefinitionParserDelegate = org.springframework.integration.config.xml.ParserContext . getDelegate ( ) ; java.lang.String java.lang.String = null ; if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; } else { java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElements ( org.w3c.dom.Element ) ; if ( java.util.List<org.w3c.dom.Element> . boolean ( ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } else { org.w3c.dom.Element org.w3c.dom.Element = java.util.List<org.w3c.dom.Element> . org.w3c.dom.Element ( NUMBER ) ; if ( STRING . boolean ( org.w3c.dom.Element . java.lang.String ( ) ) ) { java.lang.String = new WireTapParser ( ) . parse ( org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; } else if ( org.springframework.integration.config.xml.BeanDefinitionParserDelegate . nodeNameEquals ( org.w3c.dom.Element , BeanDefinitionParserDelegate . REF_ELEMENT ) ) { return org.springframework.integration.config.xml.BeanDefinitionParserDelegate . parsePropertySubElement ( org.w3c.dom.Element , null ) ; } else { BeanDefinition org.springframework.integration.config.xml.BeanDefinition = org.springframework.integration.config.xml.BeanDefinitionParserDelegate . parseCustomElement ( org.w3c.dom.Element ) ; java.lang.String = BeanDefinitionReaderUtils . generateBeanName ( org.springframework.integration.config.xml.BeanDefinition , org.springframework.integration.config.xml.ParserContext . getRegistry ( ) ) ; } } } return new RuntimeBeanReference ( java.lang.String ) ; }  <METHOD_END>
