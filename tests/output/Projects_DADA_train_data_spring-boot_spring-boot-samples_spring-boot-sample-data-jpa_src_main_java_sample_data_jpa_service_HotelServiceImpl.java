<METHOD_START> public void ( HotelRepository sample.data.jpa.service.HotelRepository , ReviewRepository sample.data.jpa.service.ReviewRepository ) { this . sample.data.jpa.service.HotelRepository = sample.data.jpa.service.HotelRepository ; this . sample.data.jpa.service.ReviewRepository = sample.data.jpa.service.ReviewRepository ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public sample.data.jpa.service.Hotel sample.data.jpa.service.Hotel ( City sample.data.jpa.service.City , java.lang.String java.lang.String ) { Assert . notNull ( sample.data.jpa.service.City , STRING ) ; Assert . hasLength ( java.lang.String , STRING ) ; return this . sample.data.jpa.service.HotelRepository . findByCityAndName ( sample.data.jpa.service.City , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public sample.data.jpa.service.Page<sample.data.jpa.service.Review> < Review > sample.data.jpa.service.Page<sample.data.jpa.service.Review> ( Hotel sample.data.jpa.service.Hotel , Pageable sample.data.jpa.service.Pageable ) { Assert . notNull ( sample.data.jpa.service.Hotel , STRING ) ; return this . sample.data.jpa.service.ReviewRepository . findByHotel ( sample.data.jpa.service.Hotel , sample.data.jpa.service.Pageable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public sample.data.jpa.service.Review sample.data.jpa.service.Review ( Hotel sample.data.jpa.service.Hotel , int int ) { Assert . notNull ( sample.data.jpa.service.Hotel , STRING ) ; return this . sample.data.jpa.service.ReviewRepository . findByHotelAndIndex ( sample.data.jpa.service.Hotel , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public sample.data.jpa.service.Review sample.data.jpa.service.Review ( Hotel sample.data.jpa.service.Hotel , ReviewDetails sample.data.jpa.service.ReviewDetails ) { Review sample.data.jpa.service.Review = new Review ( sample.data.jpa.service.Hotel , NUMBER , sample.data.jpa.service.ReviewDetails ) ; return this . sample.data.jpa.service.ReviewRepository . save ( sample.data.jpa.service.Review ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public sample.data.jpa.service.ReviewsSummary sample.data.jpa.service.ReviewsSummary ( Hotel sample.data.jpa.service.Hotel ) { java.util.List<sample.data.jpa.service.RatingCount> < RatingCount > java.util.List<sample.data.jpa.service.RatingCount> = this . sample.data.jpa.service.HotelRepository . findRatingCounts ( sample.data.jpa.service.Hotel ) ; return new sample.data.jpa.service.HotelServiceImpl.ReviewsSummaryImpl ( java.util.List<sample.data.jpa.service.RatingCount> ) ; }  <METHOD_END>
<METHOD_START> public void ( java.util.List<sample.data.jpa.service.RatingCount> < RatingCount > java.util.List<sample.data.jpa.service.RatingCount> ) { this . java.util.Map<sample.data.jpa.service.Rating,java.lang.Long> = new java.util.HashMap <> ( ) ; for ( RatingCount sample.data.jpa.service.RatingCount : java.util.List<sample.data.jpa.service.RatingCount> ) { this . java.util.Map<sample.data.jpa.service.Rating,java.lang.Long> . put ( sample.data.jpa.service.RatingCount . getRating ( ) , sample.data.jpa.service.RatingCount . getCount ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( Rating sample.data.jpa.service.Rating ) { java.lang.Long java.lang.Long = this . java.util.Map<sample.data.jpa.service.Rating,java.lang.Long> . get ( sample.data.jpa.service.Rating ) ; return java.lang.Long == null ? NUMBER : java.lang.Long ; }  <METHOD_END>
