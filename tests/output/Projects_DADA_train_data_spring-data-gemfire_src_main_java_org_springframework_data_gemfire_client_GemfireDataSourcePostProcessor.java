<METHOD_START> public void ( final ClientCache org.springframework.data.gemfire.client.ClientCache ) { this . org.springframework.data.gemfire.client.ClientCache = org.springframework.data.gemfire.client.ClientCache ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableListableBeanFactory org.springframework.data.gemfire.client.ConfigurableListableBeanFactory ) throws org.springframework.data.gemfire.client.BeansException { void ( org.springframework.data.gemfire.client.ConfigurableListableBeanFactory , java.lang.Iterable<java.lang.String> ( ) ) ; }  <METHOD_END>
<METHOD_START> java.lang.Iterable<java.lang.String> < java.lang.String > java.lang.Iterable<java.lang.String> ( ) { try { return java.lang.Object ( new ListRegionsOnServerFunction ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { try { java.lang.Object java.lang.Object = java.lang.Object ( new GetRegionsFunction ( ) ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Collections . java.util.List<java.lang.String> ( ) ; if ( boolean ( java.lang.Object ) ) { java.lang.Object [] java.lang.Object[] = ( java.lang.Object [] ) java.lang.Object ; java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( java.lang.Object[] . int ) ; for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { java.util.List<java.lang.String> . boolean ( ( ( RegionInformation ) java.lang.Object ) . getName ( ) ) ; } } return java.util.List<java.lang.String> ; } catch ( java.lang.Exception java.lang.Exception ) { void ( STRING , java.lang.Exception ) ; return java.util.Collections . java.util.List<java.lang.String> ( ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) < T > T T ( Function org.springframework.data.gemfire.client.Function , java.lang.Object ... java.lang.Object[] ) { return new GemfireOnServersFunctionTemplate ( org.springframework.data.gemfire.client.ClientCache ) . executeAndExtract ( org.springframework.data.gemfire.client.Function , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> boolean boolean ( java.lang.Object java.lang.Object ) { return ( java.lang.Object instanceof java.lang.Object [] && ( ( java.lang.Object [] ) java.lang.Object ) . int > NUMBER && ( ( java.lang.Object [] ) java.lang.Object ) [ NUMBER ] instanceof RegionInformation ) ; }  <METHOD_END>
<METHOD_START> void void ( ConfigurableListableBeanFactory org.springframework.data.gemfire.client.ConfigurableListableBeanFactory , java.lang.Iterable<java.lang.String> < java.lang.String > java.lang.Iterable<java.lang.String> ) { if ( java.lang.Iterable<java.lang.String> . java.util.Iterator<java.lang.String> ( ) . boolean ( ) ) { ClientRegionFactory < ? , ? > org.springframework.data.gemfire.client.ClientRegionFactory<?,?> = org.springframework.data.gemfire.client.ClientCache . createClientRegionFactory ( ClientRegionShortcut . PROXY ) ; for ( java.lang.String java.lang.String : java.lang.Iterable<java.lang.String> ) { boolean boolean = true ; if ( org.springframework.data.gemfire.client.ConfigurableListableBeanFactory . containsBean ( java.lang.String ) ) { java.lang.Object java.lang.Object = org.springframework.data.gemfire.client.ConfigurableListableBeanFactory . getBean ( java.lang.String ) ; Assert . isTrue ( java.lang.Object instanceof Region , java.lang.String . java.lang.String ( STRING , java.lang.String , ObjectUtils . nullSafeClassName ( java.lang.Object ) ) ) ; boolean = false ; } if ( boolean ) { void ( STRING , java.lang.String ) ; org.springframework.data.gemfire.client.ConfigurableListableBeanFactory . registerSingleton ( java.lang.String , org.springframework.data.gemfire.client.ClientRegionFactory<,> . create ( java.lang.String ) ) ; } else { void ( STRING , java.lang.String ) ; } } } }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { if ( org.springframework.data.gemfire.client.Log . isDebugEnabled ( ) ) { org.springframework.data.gemfire.client.Log . debug ( java.lang.String . java.lang.String ( java.lang.String , java.lang.Object[] ) ) ; } }  <METHOD_END>
