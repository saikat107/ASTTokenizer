<METHOD_START> @ Test public void void ( ) java.lang.Exception { @ java.lang.SuppressWarnings ( STRING ) ResponseEntity < java.util.Map > sample.actuator.ResponseEntity<java.util.Map> = this . sample.actuator.TestRestTemplate . getForEntity ( STRING , java.util.Map .class ) ; assertThat ( sample.actuator.ResponseEntity<java.util.Map> . getStatusCode ( ) ) . isEqualTo ( HttpStatus . INTERNAL_SERVER_ERROR ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = sample.actuator.ResponseEntity<java.util.Map> . getBody ( ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ResponseEntity < java.lang.String > sample.actuator.ResponseEntity<java.lang.String> = this . sample.actuator.TestRestTemplate . getForEntity ( STRING , java.lang.String .class ) ; assertThat ( sample.actuator.ResponseEntity<java.lang.String> . getStatusCode ( ) ) . isEqualTo ( HttpStatus . OK ) ; assertThat ( sample.actuator.ResponseEntity<java.lang.String> . getBody ( ) ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { @ java.lang.SuppressWarnings ( STRING ) ResponseEntity < java.util.Map > sample.actuator.ResponseEntity<java.util.Map> = this . sample.actuator.TestRestTemplate . getForEntity ( STRING , java.util.Map .class ) ; assertThat ( sample.actuator.ResponseEntity<java.util.Map> . getStatusCode ( ) ) . isEqualTo ( HttpStatus . UNAUTHORIZED ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = sample.actuator.ResponseEntity<java.util.Map> . getBody ( ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( sample.actuator.ResponseEntity<java.util.Map> . getHeaders ( ) ) . doesNotContainKey ( STRING ) ; }  <METHOD_END>
