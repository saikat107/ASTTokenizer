<METHOD_START> public void ( double double , int int ) { this( double , int , false ); }  <METHOD_END>
<METHOD_START> public void ( double double , int int , boolean boolean ) { this . double = double > NUMBER ? NUMBER / double : NUMBER ; this . int = int ; this . int = int * NUMBER ; this . double = boolean ? NUMBER : NUMBER ; this . double = java.lang.System . long ( ) / this . double ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( NUMBER , java.lang.System . long ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { void ( NUMBER , long ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( NUMBER , java.lang.System . long ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { void ( NUMBER , long ) ; }  <METHOD_END>
<METHOD_START> public synchronized void void ( ) { this . double = java.lang.System . long ( ) / this . double ; this . java.util.Deque<java.lang.Long> . void ( ) ; this . java.util.Deque<java.lang.Integer> . void ( ) ; this . long = NUMBER ; this . double = NUMBER ; this . double = java.lang.Double . double ; }  <METHOD_END>
<METHOD_START> private synchronized void void ( int int , long long ) { if ( this . java.util.Deque<java.lang.Long> . int ( ) == this . int ) { this . java.util.Deque<java.lang.Long> . java.lang.Long ( ) ; this . java.util.Deque<java.lang.Integer> . java.lang.Integer ( ) ; } this . java.util.Deque<java.lang.Long> . boolean ( long ) ; this . java.util.Deque<java.lang.Integer> . boolean ( int ) ; this . long ++ ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.support.management.Statistics org.springframework.integration.support.management.Statistics ( ) { java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> ; java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ; long long ; synchronized ( this ) { java.util.List<java.lang.Long> = new java.util.ArrayList<java.lang.Long> < java.lang.Long > ( this . java.util.Deque<java.lang.Long> ) ; java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> < java.lang.Integer > ( this . java.util.Deque<java.lang.Integer> ) ; long = this . long ; } ExponentialMovingAverage org.springframework.integration.support.management.ExponentialMovingAverage = new ExponentialMovingAverage ( this . int ) ; double double = NUMBER ; double double = NUMBER ; double double = NUMBER ; double double = this . double ; double double = this . double ; int int = java.util.List<java.lang.Long> . int ( ) ; java.util.Iterator<java.lang.Integer> < java.lang.Integer > java.util.Iterator<java.lang.Integer> = java.util.List<java.lang.Integer> . java.util.Iterator<java.lang.Integer> ( ) ; for ( java.lang.Long java.lang.Long : java.util.List<java.lang.Long> ) { double double = java.lang.Long / this . double ; if ( int == NUMBER ) { double = this . double ; } else if ( double == NUMBER ) { double = double ; java.util.Iterator<java.lang.Integer> . java.lang.Integer ( ) ; continue; } double double = java.lang.Math . double ( ( double - double ) * this . double ) ; double = double ; double = double * double + java.util.Iterator<java.lang.Integer> . java.lang.Integer ( ) ; double = double * double + NUMBER ; double double = double / double ; if ( double > double ) { double = double ; } if ( double < double ) { double = double ; } org.springframework.integration.support.management.ExponentialMovingAverage . append ( double ) ; } synchronized ( this ) { if ( double > this . double ) { this . double = double ; } if ( double < this . double ) { this . double = double ; } } return new Statistics ( long , double < java.lang.Double . double ? double : NUMBER , double , org.springframework.integration.support.management.ExponentialMovingAverage . getMean ( ) , org.springframework.integration.support.management.ExponentialMovingAverage . getStandardDeviation ( ) ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return ( int ) this . long ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return this . long ; }  <METHOD_END>
<METHOD_START> public double double ( ) { double double = java.lang.System . long ( ) - double ( ) ; return double / NUMBER / this . double ; }  <METHOD_END>
<METHOD_START> public double double ( ) { if ( this . long == NUMBER ) { return NUMBER ; } return double ( org.springframework.integration.support.management.Statistics ( ) ) ; }  <METHOD_END>
<METHOD_START> private double double ( Statistics org.springframework.integration.support.management.Statistics ) { double double = java.lang.System . long ( ) / this . double ; double double = org.springframework.integration.support.management.Statistics . getMean ( ) ; double double = java.lang.Math . double ( ( double ( ) / this . double - double ) * this . double ) ; return double * double + NUMBER - double ; }  <METHOD_END>
<METHOD_START> private synchronized double double ( ) { if ( this . java.util.Deque<java.lang.Long> . int ( ) > NUMBER ) { return this . java.util.Deque<java.lang.Long> . java.lang.Long ( ) ; } else { return this . double * this . double ; } }  <METHOD_END>
<METHOD_START> public double double ( ) { return org.springframework.integration.support.management.Statistics ( ) . getStandardDeviation ( ) ; }  <METHOD_END>
<METHOD_START> public double double ( ) { return org.springframework.integration.support.management.Statistics ( ) . getMax ( ) ; }  <METHOD_END>
<METHOD_START> public double double ( ) { return org.springframework.integration.support.management.Statistics ( ) . getMin ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.support.management.Statistics org.springframework.integration.support.management.Statistics ( ) { Statistics org.springframework.integration.support.management.Statistics = org.springframework.integration.support.management.Statistics ( ) ; org.springframework.integration.support.management.Statistics . setMean ( double ( org.springframework.integration.support.management.Statistics ) ) ; return org.springframework.integration.support.management.Statistics ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String . java.lang.String ( STRING , org.springframework.integration.support.management.Statistics ( ) , double ( ) ) ; }  <METHOD_END>
