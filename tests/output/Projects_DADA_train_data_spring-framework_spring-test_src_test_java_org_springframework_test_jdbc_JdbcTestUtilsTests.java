<METHOD_START> @ Test public void void ( ) java.lang.Exception { given ( org.springframework.test.jdbc.JdbcTemplate . update ( STRING ) ) . willReturn ( NUMBER ) ; int int = JdbcTestUtils . deleteFromTableWhere ( org.springframework.test.jdbc.JdbcTemplate , STRING , null ) ; assertThat ( int , equalTo ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { given ( org.springframework.test.jdbc.JdbcTemplate . update ( STRING ) ) . willReturn ( NUMBER ) ; int int = JdbcTestUtils . deleteFromTableWhere ( org.springframework.test.jdbc.JdbcTemplate , STRING , STRING ) ; assertThat ( int , equalTo ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { given ( org.springframework.test.jdbc.JdbcTemplate . update ( STRING , STRING , NUMBER ) ) . willReturn ( NUMBER ) ; int int = JdbcTestUtils . deleteFromTableWhere ( org.springframework.test.jdbc.JdbcTemplate , STRING , STRING , STRING , NUMBER ) ; assertThat ( int , equalTo ( NUMBER ) ) ; }  <METHOD_END>
