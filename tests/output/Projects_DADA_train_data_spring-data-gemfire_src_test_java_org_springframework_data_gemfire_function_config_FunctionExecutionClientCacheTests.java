<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClientCache org.springframework.data.gemfire.function.config.ClientCache = org.springframework.data.gemfire.function.config.ApplicationContext . getBean ( STRING , ClientCache .class ) ; Pool org.springframework.data.gemfire.function.config.Pool = org.springframework.data.gemfire.function.config.ApplicationContext . getBean ( STRING , Pool .class ) ; assertEquals ( STRING , org.springframework.data.gemfire.function.config.Pool . getName ( ) ) ; assertTrue ( org.springframework.data.gemfire.function.config.ClientCache . getDefaultPool ( ) . getLocators ( ) . isEmpty ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.function.config.ClientCache . getDefaultPool ( ) . getServers ( ) . size ( ) ) ; assertEquals ( org.springframework.data.gemfire.function.config.Pool . getServers ( ) . get ( NUMBER ) , org.springframework.data.gemfire.function.config.ClientCache . getDefaultPool ( ) . getServers ( ) . get ( NUMBER ) ) ; Region org.springframework.data.gemfire.function.config.Region = org.springframework.data.gemfire.function.config.ApplicationContext . getBean ( STRING , Region .class ) ; assertEquals ( STRING , org.springframework.data.gemfire.function.config.Region . getAttributes ( ) . getPoolName ( ) ) ; GemfireOnServerFunctionTemplate org.springframework.data.gemfire.function.config.GemfireOnServerFunctionTemplate = org.springframework.data.gemfire.function.config.ApplicationContext . getBean ( GemfireOnServerFunctionTemplate .class ) ; assertTrue ( org.springframework.data.gemfire.function.config.GemfireOnServerFunctionTemplate . getResultCollector ( ) instanceof org.springframework.data.gemfire.function.config.MyResultCollector ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.data.gemfire.function.config.MyResultCollector org.springframework.data.gemfire.function.config.MyResultCollector ( ) { return new org.springframework.data.gemfire.function.config.MyResultCollector ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DistributedMember org.springframework.data.gemfire.function.config.DistributedMember , java.lang.Object java.lang.Object ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) org.springframework.data.gemfire.function.config.FunctionException { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( long long , java.util.concurrent.TimeUnit java.util.concurrent.TimeUnit ) throws org.springframework.data.gemfire.function.config.FunctionException , java.lang.InterruptedException { return null ; }  <METHOD_END>
