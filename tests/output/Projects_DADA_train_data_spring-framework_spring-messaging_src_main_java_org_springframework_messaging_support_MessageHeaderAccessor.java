<METHOD_START> public void ( ) { this( null ); }  <METHOD_END>
<METHOD_START> public void ( Message < ? > org.springframework.messaging.support.Message<?> ) { this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders = new org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders ( org.springframework.messaging.support.Message<> != null ? org.springframework.messaging.support.Message<> . getHeaders ( ) : null ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.support.MessageHeaderAccessor org.springframework.messaging.support.MessageHeaderAccessor ( Message < ? > org.springframework.messaging.support.Message<?> ) { return new org.springframework.messaging.support.MessageHeaderAccessor ( org.springframework.messaging.support.Message<> ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { Assert . state ( this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders . boolean ( ) , STRING ) ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders . void ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders . boolean ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> void void ( IdGenerator org.springframework.messaging.support.IdGenerator ) { this . org.springframework.messaging.support.IdGenerator = org.springframework.messaging.support.IdGenerator ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.support.MessageHeaders org.springframework.messaging.support.MessageHeaders ( ) { if ( ! this . boolean ) { void ( ) ; } return this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.support.MessageHeaders org.springframework.messaging.support.MessageHeaders ( ) { return new MessageHeaders ( this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { return new java.util.HashMap <> ( this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { return this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders . get ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { if ( boolean ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String + STRING ) ; } void ( java.lang.String , java.lang.Object ) ; if ( java.lang.Object != null ) { if ( ! ObjectUtils . nullSafeEquals ( java.lang.Object , java.lang.Object ( java.lang.String ) ) ) { this . boolean = true ; this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders . java.util.Map<java.lang.String,java.lang.Object> ( ) . java.lang.Object ( java.lang.String , java.lang.Object ) ; } } else { if ( this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders . containsKey ( java.lang.String ) ) { this . boolean = true ; this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders . java.util.Map<java.lang.String,java.lang.Object> ( ) . java.lang.Object ( java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { if ( java.lang.String != null && java.lang.Object != null ) { if ( MessageHeaders . ERROR_CHANNEL . equals ( java.lang.String ) || MessageHeaders . REPLY_CHANNEL . endsWith ( java.lang.String ) ) { if ( ! ( java.lang.Object instanceof MessageChannel || java.lang.Object instanceof java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String + STRING ) ; } } } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { if ( java.lang.Object ( java.lang.String ) == null ) { void ( java.lang.String , java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { if ( StringUtils . hasLength ( java.lang.String ) && ! boolean ( java.lang.String ) ) { void ( java.lang.String , null ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( StringUtils . hasLength ( java.lang.String ) ) { if ( java.lang.String . boolean ( STRING ) ) { java.util.List<java.lang.String> . boolean ( java.util.List<java.lang.String> ( java.lang.String , this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders ) ) ; } else { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } } for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { void ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.String java.lang.String , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; if ( java.util.Map<java.lang.String,java.lang.Object> != null ) { for ( java.lang.String java.lang.String : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.lang.String> ( ) ) { if ( PatternMatchUtils . simpleMatch ( java.lang.String , java.lang.String ) ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } } return java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { if ( java.util.Map<java.lang.String,> != null ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,?> < java.lang.String , ? > java.util.Map.Entry<java.lang.String,?> : java.util.Map<java.lang.String,> . java.util.Set<java.util.Map.Entry<java.lang.String,>> ( ) ) { if ( ! boolean ( java.util.Map.Entry<java.lang.String,> . java.lang.String ( ) ) ) { void ( java.util.Map.Entry<java.lang.String,> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,> . getValue ( ) ) ; } } } }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { if ( java.util.Map<java.lang.String,> != null ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,?> < java.lang.String , ? > java.util.Map.Entry<java.lang.String,?> : java.util.Map<java.lang.String,> . java.util.Set<java.util.Map.Entry<java.lang.String,>> ( ) ) { if ( ! boolean ( java.util.Map.Entry<java.lang.String,> . java.lang.String ( ) ) ) { void ( java.util.Map.Entry<java.lang.String,> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,> . getValue ( ) ) ; } } } }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.String java.lang.String ) { return ( MessageHeaders . ID . equals ( java.lang.String ) || MessageHeaders . TIMESTAMP . equals ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public java.util.UUID java.util.UUID ( ) { java.lang.Object java.lang.Object = java.lang.Object ( MessageHeaders . ID ) ; if ( java.lang.Object == null ) { return null ; } return ( java.lang.Object instanceof java.util.UUID ? ( java.util.UUID ) java.lang.Object : java.util.UUID . java.util.UUID ( java.lang.Object . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Long java.lang.Long ( ) { java.lang.Object java.lang.Object = java.lang.Object ( MessageHeaders . TIMESTAMP ) ; if ( java.lang.Object == null ) { return null ; } return ( java.lang.Object instanceof java.lang.Long ? ( java.lang.Long ) java.lang.Object : java.lang.Long . long ( java.lang.Object . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( MimeType org.springframework.messaging.support.MimeType ) { void ( MessageHeaders . CONTENT_TYPE , org.springframework.messaging.support.MimeType ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.support.MimeType org.springframework.messaging.support.MimeType ( ) { java.lang.Object java.lang.Object = java.lang.Object ( MessageHeaders . CONTENT_TYPE ) ; if ( java.lang.Object == null ) { return null ; } return ( java.lang.Object instanceof MimeType ? ( MimeType ) java.lang.Object : MimeType . valueOf ( java.lang.Object . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( MessageHeaders . REPLY_CHANNEL , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.messaging.support.MessageChannel ) { void ( MessageHeaders . REPLY_CHANNEL , org.springframework.messaging.support.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return java.lang.Object ( MessageHeaders . REPLY_CHANNEL ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( MessageHeaders . ERROR_CHANNEL , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.messaging.support.MessageChannel ) { void ( MessageHeaders . ERROR_CHANNEL , org.springframework.messaging.support.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return java.lang.Object ( MessageHeaders . ERROR_CHANNEL ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.Object java.lang.Object ) { return STRING + this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders . java.lang.String ( ) + java.lang.String ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.Object java.lang.Object ) { return STRING + this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders . java.lang.String ( ) + java.lang.String ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof java.lang.String ) { java.lang.String java.lang.String = ( java.lang.String ) java.lang.Object ; return ( java.lang.String . int ( ) < NUMBER ) ? STRING + java.lang.String : STRING + java.lang.String . java.lang.String ( NUMBER , NUMBER ) + STRING ; } else if ( java.lang.Object instanceof byte [] ) { byte [] byte[] = ( byte [] ) java.lang.Object ; if ( boolean ( ) ) { java.nio.charset.Charset java.nio.charset.Charset = org.springframework.messaging.support.MimeType ( ) . getCharset ( ) ; java.nio.charset.Charset = ( java.nio.charset.Charset != null ? java.nio.charset.Charset : java.nio.charset.Charset ) ; return ( byte[] . int < NUMBER ) ? STRING + new java.lang.String ( byte[] , java.nio.charset.Charset ) : STRING + new java.lang.String ( java.util.Arrays . byte[] ( byte[] , NUMBER ) , java.nio.charset.Charset ) + STRING ; } else { return STRING + byte[] . int + STRING ; } } else { java.lang.String java.lang.String = java.lang.Object . java.lang.String ( ) ; return ( java.lang.String . int ( ) < NUMBER ) ? STRING + java.lang.String : STRING + ObjectUtils . identityToString ( java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof java.lang.String ) { return STRING + java.lang.Object ; } else if ( java.lang.Object instanceof byte [] ) { byte [] byte[] = ( byte [] ) java.lang.Object ; if ( boolean ( ) ) { java.nio.charset.Charset java.nio.charset.Charset = org.springframework.messaging.support.MimeType ( ) . getCharset ( ) ; java.nio.charset.Charset = ( java.nio.charset.Charset != null ? java.nio.charset.Charset : java.nio.charset.Charset ) ; return STRING + new java.lang.String ( byte[] , java.nio.charset.Charset ) ; } else { return STRING + byte[] . int + STRING ; } } else { return STRING + java.lang.Object ; } }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { for ( MimeType org.springframework.messaging.support.MimeType : org.springframework.messaging.support.MimeType[] ) { if ( org.springframework.messaging.support.MimeType . includes ( org.springframework.messaging.support.MimeType ( ) ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.Class<? extends org.springframework.messaging.support.MessageHeaderAccessor> ( ) . java.lang.String ( ) + STRING + this . org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders + STRING ; }  <METHOD_END>
<METHOD_START> public static < T extends org.springframework.messaging.support.MessageHeaderAccessor > T T ( Message < ? > org.springframework.messaging.support.Message<?> , java.lang.Class<T> < T > java.lang.Class<T> ) { return org.springframework.messaging.support.MessageHeaderAccessor ( org.springframework.messaging.support.Message<> . getHeaders ( ) , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public static < T extends org.springframework.messaging.support.MessageHeaderAccessor > T T ( MessageHeaders org.springframework.messaging.support.MessageHeaders , java.lang.Class<T> < T > java.lang.Class<T> ) { if ( org.springframework.messaging.support.MessageHeaders instanceof org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders ) { org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders = ( org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders ) org.springframework.messaging.support.MessageHeaders ; org.springframework.messaging.support.MessageHeaderAccessor org.springframework.messaging.support.MessageHeaderAccessor = org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders . org.springframework.messaging.support.MessageHeaderAccessor ( ) ; if ( java.lang.Class<T> . boolean ( org.springframework.messaging.support.MessageHeaderAccessor . java.lang.Class<? extends org.springframework.messaging.support.MessageHeaderAccessor> ( ) ) ) { return ( T ) org.springframework.messaging.support.MessageHeaderAccessor ; } } return null ; }  <METHOD_END>
<METHOD_START> public static org.springframework.messaging.support.MessageHeaderAccessor org.springframework.messaging.support.MessageHeaderAccessor ( Message < ? > org.springframework.messaging.support.Message<?> ) { if ( org.springframework.messaging.support.Message<> . getHeaders ( ) instanceof org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders ) { org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders = ( org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders ) org.springframework.messaging.support.Message<> . getHeaders ( ) ; org.springframework.messaging.support.MessageHeaderAccessor org.springframework.messaging.support.MessageHeaderAccessor = org.springframework.messaging.support.MessageHeaderAccessor.MutableMessageHeaders . org.springframework.messaging.support.MessageHeaderAccessor ( ) ; if ( org.springframework.messaging.support.MessageHeaderAccessor != null ) { return ( org.springframework.messaging.support.MessageHeaderAccessor . boolean ( ) ? org.springframework.messaging.support.MessageHeaderAccessor : org.springframework.messaging.support.MessageHeaderAccessor . org.springframework.messaging.support.MessageHeaderAccessor ( org.springframework.messaging.support.Message<> ) ) ; } } return new org.springframework.messaging.support.MessageHeaderAccessor ( org.springframework.messaging.support.Message<> ) ; }  <METHOD_END>
<METHOD_START> public void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { super( java.util.Map<java.lang.String,java.lang.Object> , MessageHeaders . ID_VALUE_NONE , - NUMBER ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { Assert . state ( this . boolean , STRING ) ; return super. getRawHeaders ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( ! this . boolean ) { return; } if ( java.util.UUID ( ) == null ) { IdGenerator org.springframework.messaging.support.IdGenerator = ( org.springframework.messaging.support.MessageHeaderAccessor .this . org.springframework.messaging.support.IdGenerator != null ? org.springframework.messaging.support.MessageHeaderAccessor .this . org.springframework.messaging.support.IdGenerator : MessageHeaders . getIdGenerator ( ) ) ; java.util.UUID java.util.UUID = org.springframework.messaging.support.IdGenerator . generateId ( ) ; if ( java.util.UUID != null && java.util.UUID != MessageHeaders . ID_VALUE_NONE ) { java.util.Map<java.lang.String,java.lang.Object> ( ) . java.lang.Object ( ID , java.util.UUID ) ; } } if ( java.lang.Long ( ) == null ) { if ( org.springframework.messaging.support.MessageHeaderAccessor .this . boolean ) { java.util.Map<java.lang.String,java.lang.Object> ( ) . java.lang.Object ( TIMESTAMP , java.lang.System . long ( ) ) ; } } this . boolean = false ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.support.MessageHeaderAccessor org.springframework.messaging.support.MessageHeaderAccessor ( ) { return org.springframework.messaging.support.MessageHeaderAccessor .this ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( ) { return new MessageHeaders ( this ) ; }  <METHOD_END>
