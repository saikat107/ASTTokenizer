<METHOD_START> public static org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( ) { org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder = new org.springframework.beans.factory.support.BeanDefinitionBuilder ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition = new GenericBeanDefinition ( ) ; return org.springframework.beans.factory.support.BeanDefinitionBuilder ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String ) { org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder = new org.springframework.beans.factory.support.BeanDefinitionBuilder ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition = new GenericBeanDefinition ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition . setBeanClassName ( java.lang.String ) ; return org.springframework.beans.factory.support.BeanDefinitionBuilder ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.Class<?> < ? > java.lang.Class<?> ) { org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder = new org.springframework.beans.factory.support.BeanDefinitionBuilder ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition = new GenericBeanDefinition ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition . setBeanClass ( java.lang.Class<> ) ; return org.springframework.beans.factory.support.BeanDefinitionBuilder ; }  <METHOD_END>
<METHOD_START> public static < T > org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.Class<T> < T > java.lang.Class<T> , java.util.function.Supplier<T> < T > java.util.function.Supplier<T> ) { org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder = new org.springframework.beans.factory.support.BeanDefinitionBuilder ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition = new GenericBeanDefinition ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition . setBeanClass ( java.lang.Class<T> ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition . setInstanceSupplier ( java.util.function.Supplier<T> ) ; return org.springframework.beans.factory.support.BeanDefinitionBuilder ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String ) { return org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder = new org.springframework.beans.factory.support.BeanDefinitionBuilder ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition = new RootBeanDefinition ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition . setBeanClassName ( java.lang.String ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition . setFactoryMethodName ( java.lang.String ) ; return org.springframework.beans.factory.support.BeanDefinitionBuilder ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.Class<> , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder = new org.springframework.beans.factory.support.BeanDefinitionBuilder ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition = new RootBeanDefinition ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition . setBeanClass ( java.lang.Class<> ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition . setFactoryMethodName ( java.lang.String ) ; return org.springframework.beans.factory.support.BeanDefinitionBuilder ; }  <METHOD_END>
<METHOD_START> public static org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String ) { org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder = new org.springframework.beans.factory.support.BeanDefinitionBuilder ( ) ; org.springframework.beans.factory.support.BeanDefinitionBuilder . org.springframework.beans.factory.support.AbstractBeanDefinition = new ChildBeanDefinition ( java.lang.String ) ; return org.springframework.beans.factory.support.BeanDefinitionBuilder ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.AbstractBeanDefinition org.springframework.beans.factory.support.AbstractBeanDefinition ( ) { return this . org.springframework.beans.factory.support.AbstractBeanDefinition ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.AbstractBeanDefinition org.springframework.beans.factory.support.AbstractBeanDefinition ( ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . validate ( ) ; return this . org.springframework.beans.factory.support.AbstractBeanDefinition ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . setParentName ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . setFactoryMethodName ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . setFactoryMethodName ( java.lang.String ) ; this . org.springframework.beans.factory.support.AbstractBeanDefinition . setFactoryBeanName ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.Object java.lang.Object ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . getConstructorArgumentValues ( ) . addIndexedArgumentValue ( this . int ++ , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . getConstructorArgumentValues ( ) . addIndexedArgumentValue ( this . int ++ , new RuntimeBeanReference ( java.lang.String ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . getPropertyValues ( ) . add ( java.lang.String , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . getPropertyValues ( ) . add ( java.lang.String , new RuntimeBeanReference ( java.lang.String ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . setInitMethodName ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . setDestroyMethodName ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . setScope ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( boolean boolean ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . setAbstract ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( boolean boolean ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . setLazyInit ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( int int ) { org.springframework.beans.factory.support.AbstractBeanDefinition . setAutowireMode ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( int int ) { org.springframework.beans.factory.support.AbstractBeanDefinition . setDependencyCheck ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( java.lang.String java.lang.String ) { if ( this . org.springframework.beans.factory.support.AbstractBeanDefinition . getDependsOn ( ) == null ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . setDependsOn ( java.lang.String ) ; } else { java.lang.String [] java.lang.String[] = ObjectUtils . addObjectToArray ( this . org.springframework.beans.factory.support.AbstractBeanDefinition . getDependsOn ( ) , java.lang.String ) ; this . org.springframework.beans.factory.support.AbstractBeanDefinition . setDependsOn ( java.lang.String[] ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( int int ) { this . org.springframework.beans.factory.support.AbstractBeanDefinition . setRole ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.BeanDefinitionBuilder org.springframework.beans.factory.support.BeanDefinitionBuilder ( BeanDefinitionCustomizer ... org.springframework.beans.factory.support.BeanDefinitionCustomizer[] ) { if ( org.springframework.beans.factory.support.BeanDefinitionCustomizer[] != null ) { for ( BeanDefinitionCustomizer org.springframework.beans.factory.support.BeanDefinitionCustomizer : org.springframework.beans.factory.support.BeanDefinitionCustomizer[] ) { org.springframework.beans.factory.support.BeanDefinitionCustomizer . customize ( org.springframework.beans.factory.support.AbstractBeanDefinition ) ; } } return this ; }  <METHOD_END>
