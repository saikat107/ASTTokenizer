<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertTrue ( org.springframework.web.method.annotation.SessionAttributesHandler . isHandlerSessionAttribute ( STRING , null ) ) ; assertTrue ( org.springframework.web.method.annotation.SessionAttributesHandler . isHandlerSessionAttribute ( STRING , null ) ) ; assertTrue ( org.springframework.web.method.annotation.SessionAttributesHandler . isHandlerSessionAttribute ( STRING , TestBean .class ) ) ; assertFalse ( org.springframework.web.method.annotation.SessionAttributesHandler . isHandlerSessionAttribute ( STRING , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.web.method.annotation.SessionAttributeStore . storeAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING , STRING ) ; org.springframework.web.method.annotation.SessionAttributeStore . storeAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING , STRING ) ; org.springframework.web.method.annotation.SessionAttributeStore . storeAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING , new TestBean ( ) ) ; org.springframework.web.method.annotation.SessionAttributeStore . storeAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING , new TestBean ( ) ) ; assertEquals ( STRING , new java.util.HashSet <> ( java.util.List<java.lang.String> ( STRING , STRING ) ) , org.springframework.web.method.annotation.SessionAttributesHandler . retrieveAttributes ( org.springframework.web.method.annotation.NativeWebRequest ) . keySet ( ) ) ; org.springframework.web.method.annotation.SessionAttributesHandler . isHandlerSessionAttribute ( STRING , TestBean .class ) ; assertEquals ( STRING , new java.util.HashSet <> ( java.util.List<java.lang.String> ( STRING , STRING , STRING ) ) , org.springframework.web.method.annotation.SessionAttributesHandler . retrieveAttributes ( org.springframework.web.method.annotation.NativeWebRequest ) . keySet ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.web.method.annotation.SessionAttributeStore . storeAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING , STRING ) ; org.springframework.web.method.annotation.SessionAttributeStore . storeAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING , STRING ) ; org.springframework.web.method.annotation.SessionAttributeStore . storeAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING , new TestBean ( ) ) ; org.springframework.web.method.annotation.SessionAttributesHandler . cleanupAttributes ( org.springframework.web.method.annotation.NativeWebRequest ) ; assertNull ( org.springframework.web.method.annotation.SessionAttributeStore . retrieveAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING ) ) ; assertNull ( org.springframework.web.method.annotation.SessionAttributeStore . retrieveAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING ) ) ; assertNotNull ( org.springframework.web.method.annotation.SessionAttributeStore . retrieveAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING ) ) ; org.springframework.web.method.annotation.SessionAttributesHandler . isHandlerSessionAttribute ( STRING , TestBean .class ) ; org.springframework.web.method.annotation.SessionAttributesHandler . cleanupAttributes ( org.springframework.web.method.annotation.NativeWebRequest ) ; assertNull ( org.springframework.web.method.annotation.SessionAttributeStore . retrieveAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ModelMap org.springframework.web.method.annotation.ModelMap = new ModelMap ( ) ; org.springframework.web.method.annotation.ModelMap . put ( STRING , STRING ) ; org.springframework.web.method.annotation.ModelMap . put ( STRING , STRING ) ; org.springframework.web.method.annotation.ModelMap . put ( STRING , new TestBean ( ) ) ; org.springframework.web.method.annotation.SessionAttributesHandler . storeAttributes ( org.springframework.web.method.annotation.NativeWebRequest , org.springframework.web.method.annotation.ModelMap ) ; assertEquals ( STRING , org.springframework.web.method.annotation.SessionAttributeStore . retrieveAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING ) ) ; assertEquals ( STRING , org.springframework.web.method.annotation.SessionAttributeStore . retrieveAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING ) ) ; assertTrue ( org.springframework.web.method.annotation.SessionAttributeStore . retrieveAttribute ( org.springframework.web.method.annotation.NativeWebRequest , STRING ) instanceof TestBean ) ; }  <METHOD_END>
