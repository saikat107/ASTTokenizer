<METHOD_START> protected void ( SessionFactory < F > org.springframework.integration.file.dsl.SessionFactory<F> ) { this . target = new FileTransferringMessageHandler <> ( org.springframework.integration.file.dsl.SessionFactory<F> ) ; }  <METHOD_END>
<METHOD_START> protected void ( RemoteFileTemplate < F > org.springframework.integration.file.dsl.RemoteFileTemplate<F> ) { this . target = new FileTransferringMessageHandler <> ( org.springframework.integration.file.dsl.RemoteFileTemplate<F> ) ; }  <METHOD_END>
<METHOD_START> protected void ( RemoteFileTemplate < F > org.springframework.integration.file.dsl.RemoteFileTemplate<F> , FileExistsMode org.springframework.integration.file.dsl.FileExistsMode ) { this . target = new FileTransferringMessageHandler <> ( org.springframework.integration.file.dsl.RemoteFileTemplate<F> , org.springframework.integration.file.dsl.FileExistsMode ) ; }  <METHOD_END>
<METHOD_START> public S S ( boolean boolean ) { this . target . setAutoCreateDirectory ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { this . target . setRemoteFileSeparator ( java.lang.String ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { this . target . setRemoteDirectoryExpression ( new LiteralExpression ( java.lang.String ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { this . target . setRemoteDirectoryExpression ( PARSER . parseExpression ( java.lang.String ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public < P > S S ( java.util.function.Function<org.springframework.integration.file.dsl.Message<P>,java.lang.String> < Message < P > , java.lang.String > java.util.function.Function<org.springframework.integration.file.dsl.Message<P>,java.lang.String> ) { this . target . setRemoteDirectoryExpression ( new FunctionExpression <> ( java.util.function.Function<org.springframework.integration.file.dsl.Message<P>,java.lang.String> ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { this . target . setTemporaryRemoteDirectoryExpression ( new LiteralExpression ( java.lang.String ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { this . target . setTemporaryRemoteDirectoryExpression ( PARSER . parseExpression ( java.lang.String ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public < P > S S ( java.util.function.Function<org.springframework.integration.file.dsl.Message<P>,java.lang.String> < Message < P > , java.lang.String > java.util.function.Function<org.springframework.integration.file.dsl.Message<P>,java.lang.String> ) { this . target . setTemporaryRemoteDirectoryExpression ( new FunctionExpression <> ( java.util.function.Function<org.springframework.integration.file.dsl.Message<P>,java.lang.String> ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( boolean boolean ) { this . target . setUseTemporaryFileName ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( FileNameGenerator org.springframework.integration.file.dsl.FileNameGenerator ) { this . org.springframework.integration.file.dsl.FileNameGenerator = org.springframework.integration.file.dsl.FileNameGenerator ; this . target . setFileNameGenerator ( org.springframework.integration.file.dsl.FileNameGenerator ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { Assert . isNull ( this . org.springframework.integration.file.dsl.FileNameGenerator , STRING ) ; this . org.springframework.integration.file.dsl.DefaultFileNameGenerator = new DefaultFileNameGenerator ( ) ; this . org.springframework.integration.file.dsl.DefaultFileNameGenerator . setExpression ( java.lang.String ) ; return S ( this . org.springframework.integration.file.dsl.DefaultFileNameGenerator ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { this . target . setCharset ( java.lang.String ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.nio.charset.Charset java.nio.charset.Charset ) { Assert . notNull ( java.nio.charset.Charset , STRING ) ; return S ( java.nio.charset.Charset . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { this . target . setTemporaryFileSuffix ( java.lang.String ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( int int ) { this . target . setChmod ( int ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { if ( this . org.springframework.integration.file.dsl.DefaultFileNameGenerator != null ) { return java.util.Collections . java.util.List ( this . org.springframework.integration.file.dsl.DefaultFileNameGenerator ) ; } return null ; }  <METHOD_END>
