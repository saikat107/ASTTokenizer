<METHOD_START> @ Test public void void ( ) java.lang.Exception { RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate = request -> true ; RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate = request -> true ; RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate = request -> false ; MockServerRequest org.springframework.web.reactive.function.server.MockServerRequest = MockServerRequest . builder ( ) . build ( ) ; assertTrue ( org.springframework.web.reactive.function.server.RequestPredicate . and ( org.springframework.web.reactive.function.server.RequestPredicate ) . test ( org.springframework.web.reactive.function.server.MockServerRequest ) ) ; assertTrue ( org.springframework.web.reactive.function.server.RequestPredicate . and ( org.springframework.web.reactive.function.server.RequestPredicate ) . test ( org.springframework.web.reactive.function.server.MockServerRequest ) ) ; assertFalse ( org.springframework.web.reactive.function.server.RequestPredicate . and ( org.springframework.web.reactive.function.server.RequestPredicate ) . test ( org.springframework.web.reactive.function.server.MockServerRequest ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate = request -> false ; RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate = org.springframework.web.reactive.function.server.RequestPredicate . negate ( ) ; MockServerRequest org.springframework.web.reactive.function.server.MockServerRequest = MockServerRequest . builder ( ) . build ( ) ; assertTrue ( org.springframework.web.reactive.function.server.RequestPredicate . test ( org.springframework.web.reactive.function.server.MockServerRequest ) ) ; org.springframework.web.reactive.function.server.RequestPredicate = request -> true ; org.springframework.web.reactive.function.server.RequestPredicate = org.springframework.web.reactive.function.server.RequestPredicate . negate ( ) ; assertFalse ( org.springframework.web.reactive.function.server.RequestPredicate . test ( org.springframework.web.reactive.function.server.MockServerRequest ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate = request -> true ; RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate = request -> false ; RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate = request -> false ; MockServerRequest org.springframework.web.reactive.function.server.MockServerRequest = MockServerRequest . builder ( ) . build ( ) ; assertTrue ( org.springframework.web.reactive.function.server.RequestPredicate . or ( org.springframework.web.reactive.function.server.RequestPredicate ) . test ( org.springframework.web.reactive.function.server.MockServerRequest ) ) ; assertTrue ( org.springframework.web.reactive.function.server.RequestPredicate . or ( org.springframework.web.reactive.function.server.RequestPredicate ) . test ( org.springframework.web.reactive.function.server.MockServerRequest ) ) ; assertFalse ( org.springframework.web.reactive.function.server.RequestPredicate . or ( org.springframework.web.reactive.function.server.RequestPredicate ) . test ( org.springframework.web.reactive.function.server.MockServerRequest ) ) ; }  <METHOD_END>
