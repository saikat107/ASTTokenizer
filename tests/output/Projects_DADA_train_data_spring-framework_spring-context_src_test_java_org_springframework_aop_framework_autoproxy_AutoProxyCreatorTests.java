<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.aop.framework.autoproxy.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor .class ) ; RootBeanDefinition org.springframework.aop.framework.autoproxy.RootBeanDefinition = new RootBeanDefinition ( BeanNameAutoProxyCreator .class ) ; org.springframework.aop.framework.autoproxy.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , STRING ) ; org.springframework.aop.framework.autoproxy.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , STRING ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . getDefaultListableBeanFactory ( ) . registerBeanDefinition ( STRING , org.springframework.aop.framework.autoproxy.RootBeanDefinition ) ; RootBeanDefinition org.springframework.aop.framework.autoproxy.RootBeanDefinition = new RootBeanDefinition ( TestBean .class ) ; org.springframework.aop.framework.autoproxy.RootBeanDefinition . setAutowireMode ( RootBeanDefinition . AUTOWIRE_BY_TYPE ) ; RootBeanDefinition org.springframework.aop.framework.autoproxy.RootBeanDefinition = new RootBeanDefinition ( TestBean .class ) ; org.springframework.aop.framework.autoproxy.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , new BeanDefinitionHolder ( org.springframework.aop.framework.autoproxy.RootBeanDefinition , STRING ) ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . getDefaultListableBeanFactory ( ) . registerBeanDefinition ( STRING , org.springframework.aop.framework.autoproxy.RootBeanDefinition ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , DummyFactory .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , IndexedTestBean .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . refresh ( ) ; MessageSource org.springframework.aop.framework.autoproxy.MessageSource = ( MessageSource ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertFalse ( java.lang.reflect.Proxy . boolean ( org.springframework.aop.framework.autoproxy.MessageSource . getClass ( ) ) ) ; assertTrue ( java.lang.reflect.Proxy . boolean ( org.springframework.aop.framework.autoproxy.ITestBean . getClass ( ) ) ) ; assertTrue ( java.lang.reflect.Proxy . boolean ( org.springframework.aop.framework.autoproxy.ITestBean . getSpouse ( ) . getClass ( ) ) ) ; assertEquals ( org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) , org.springframework.aop.framework.autoproxy.ITestBean . getNestedIndexedBean ( ) ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getName ( ) ; org.springframework.aop.framework.autoproxy.ITestBean . getSpouse ( ) . getName ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertTrue ( AopUtils . isJdkDynamicProxy ( org.springframework.aop.framework.autoproxy.ITestBean ) ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getAge ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertSame ( org.springframework.aop.framework.autoproxy.ITestBean , org.springframework.aop.framework.autoproxy.ITestBean ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getAge ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.aop.framework.autoproxy.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor .class ) ; RootBeanDefinition org.springframework.aop.framework.autoproxy.RootBeanDefinition = new RootBeanDefinition ( BeanNameAutoProxyCreator .class ) ; org.springframework.aop.framework.autoproxy.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , STRING ) ; org.springframework.aop.framework.autoproxy.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , STRING ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . getDefaultListableBeanFactory ( ) . registerBeanDefinition ( STRING , org.springframework.aop.framework.autoproxy.RootBeanDefinition ) ; RootBeanDefinition org.springframework.aop.framework.autoproxy.RootBeanDefinition = new RootBeanDefinition ( TestBean .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . getDefaultListableBeanFactory ( ) . registerBeanDefinition ( STRING , org.springframework.aop.framework.autoproxy.RootBeanDefinition ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , DummyFactory .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . refresh ( ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertTrue ( java.lang.reflect.Proxy . boolean ( org.springframework.aop.framework.autoproxy.ITestBean . getClass ( ) ) ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; int int = org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ; org.springframework.aop.framework.autoproxy.ITestBean . getName ( ) ; assertEquals ( int + NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; FactoryBean < ? > org.springframework.aop.framework.autoproxy.FactoryBean<?> = ( FactoryBean < ? > ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertTrue ( java.lang.reflect.Proxy . boolean ( org.springframework.aop.framework.autoproxy.FactoryBean<> . getClass ( ) ) ) ; TestBean org.springframework.aop.framework.autoproxy.TestBean = ( TestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertFalse ( AopUtils . isAopProxy ( org.springframework.aop.framework.autoproxy.TestBean ) ) ; assertEquals ( int + NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.TestBean . getAge ( ) ; assertEquals ( int + NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.aop.framework.autoproxy.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , TestBean .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , TestBean .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerPrototype ( STRING , TestBean .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . refresh ( ) ; MessageSource org.springframework.aop.framework.autoproxy.MessageSource = ( MessageSource ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertFalse ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.MessageSource ) ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces ) ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly ) ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.ITestBean ) ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.ITestBean ) ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.ITestBean ) ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getName ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getAge ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getSpouse ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.aop.framework.autoproxy.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.FallbackTestAutoProxyCreator .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , TestBean .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , TestBean .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerPrototype ( STRING , TestBean .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . refresh ( ) ; MessageSource org.springframework.aop.framework.autoproxy.MessageSource = ( MessageSource ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertFalse ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.MessageSource ) ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces ) ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly ) ) ; assertFalse ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.ITestBean ) ) ; assertFalse ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.ITestBean ) ) ; assertFalse ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.ITestBean ) ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getName ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getAge ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getSpouse ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.aop.framework.autoproxy.StaticApplicationContext = new StaticApplicationContext ( ) ; MutablePropertyValues org.springframework.aop.framework.autoproxy.MutablePropertyValues = new MutablePropertyValues ( ) ; org.springframework.aop.framework.autoproxy.MutablePropertyValues . add ( STRING , STRING ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator .class , org.springframework.aop.framework.autoproxy.MutablePropertyValues ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.CustomProxyFactoryBean .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.CustomProxyFactoryBean .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerPrototype ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.SpringProxyFactoryBean .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . refresh ( ) ; MessageSource org.springframework.aop.framework.autoproxy.MessageSource = ( MessageSource ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; ITestBean org.springframework.aop.framework.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertFalse ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.MessageSource ) ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.NoInterfaces ) ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.ContainerCallbackInterfacesOnly ) ) ; assertFalse ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.ITestBean ) ) ; assertFalse ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.ITestBean ) ) ; assertFalse ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.ITestBean ) ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getName ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getAge ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.ITestBean . getSpouse ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.aop.framework.autoproxy.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , PackageVisibleMethod .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . refresh ( ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int = NUMBER ; PackageVisibleMethod org.springframework.aop.framework.autoproxy.PackageVisibleMethod = ( PackageVisibleMethod ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.PackageVisibleMethod ) ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.PackageVisibleMethod . doSomething ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.aop.framework.autoproxy.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , DummyFactory .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . refresh ( ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int = NUMBER ; FactoryBean < ? > org.springframework.aop.framework.autoproxy.FactoryBean<?> = ( FactoryBean < ? > ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.FactoryBean<> ) ) ; TestBean org.springframework.aop.framework.autoproxy.TestBean = ( TestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.TestBean ) ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.TestBean . getAge ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.aop.framework.autoproxy.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator .class ) ; MutablePropertyValues org.springframework.aop.framework.autoproxy.MutablePropertyValues = new MutablePropertyValues ( ) ; org.springframework.aop.framework.autoproxy.MutablePropertyValues . add ( STRING , STRING ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , DummyFactory .class , org.springframework.aop.framework.autoproxy.MutablePropertyValues ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . refresh ( ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int = NUMBER ; FactoryBean < ? > org.springframework.aop.framework.autoproxy.FactoryBean<?> = ( FactoryBean < ? > ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.FactoryBean<> ) ) ; TestBean org.springframework.aop.framework.autoproxy.TestBean = ( TestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.TestBean ) ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.TestBean . getAge ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.aop.framework.autoproxy.StaticApplicationContext = new StaticApplicationContext ( ) ; MutablePropertyValues org.springframework.aop.framework.autoproxy.MutablePropertyValues = new MutablePropertyValues ( ) ; org.springframework.aop.framework.autoproxy.MutablePropertyValues . add ( STRING , STRING ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator .class , org.springframework.aop.framework.autoproxy.MutablePropertyValues ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , DummyFactory .class ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . refresh ( ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int = NUMBER ; FactoryBean < ? > org.springframework.aop.framework.autoproxy.FactoryBean<?> = ( FactoryBean < ? > ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertFalse ( AopUtils . isAopProxy ( org.springframework.aop.framework.autoproxy.FactoryBean<> ) ) ; TestBean org.springframework.aop.framework.autoproxy.TestBean = ( TestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.TestBean ) ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.TestBean . getAge ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; TestBean org.springframework.aop.framework.autoproxy.TestBean = ( TestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertSame ( org.springframework.aop.framework.autoproxy.TestBean , org.springframework.aop.framework.autoproxy.TestBean ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.TestBean . getAge ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.aop.framework.autoproxy.StaticApplicationContext = new StaticApplicationContext ( ) ; MutablePropertyValues org.springframework.aop.framework.autoproxy.MutablePropertyValues = new MutablePropertyValues ( ) ; org.springframework.aop.framework.autoproxy.MutablePropertyValues . add ( STRING , STRING ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator .class , org.springframework.aop.framework.autoproxy.MutablePropertyValues ) ; org.springframework.aop.framework.autoproxy.MutablePropertyValues = new MutablePropertyValues ( ) ; org.springframework.aop.framework.autoproxy.MutablePropertyValues . add ( STRING , STRING ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . registerSingleton ( STRING , DummyFactory .class , org.springframework.aop.framework.autoproxy.MutablePropertyValues ) ; org.springframework.aop.framework.autoproxy.StaticApplicationContext . refresh ( ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator = ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int = NUMBER ; FactoryBean < ? > org.springframework.aop.framework.autoproxy.FactoryBean<?> = ( FactoryBean < ? > ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.FactoryBean<> ) ) ; TestBean org.springframework.aop.framework.autoproxy.TestBean = ( TestBean ) org.springframework.aop.framework.autoproxy.StaticApplicationContext . getBean ( STRING ) ; assertFalse ( AopUtils . isCglibProxy ( org.springframework.aop.framework.autoproxy.TestBean ) ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; org.springframework.aop.framework.autoproxy.TestBean . getAge ( ) ; assertEquals ( NUMBER , org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestAutoProxyCreator . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor . int ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { setProxyTargetClass ( true ) ; setOrder ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object [] java.lang.Object[] ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String , TargetSource org.springframework.aop.framework.autoproxy.TargetSource ) { if ( StaticMessageSource .class . boolean ( java.lang.Class<> ) ) { return DO_NOT_PROXY ; } else if ( java.lang.String . boolean ( STRING ) ) { boolean boolean = FactoryBean .class . boolean ( java.lang.Class<> ) ; if ( ( this . boolean && boolean ) || ( this . boolean && ! boolean ) ) { return new java.lang.Object [] { this . org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.TestInterceptor } ; } else { return DO_NOT_PROXY ; } } else { return PROXY_WITHOUT_ADDITIONAL_INTERCEPTORS ; } }  <METHOD_END>
<METHOD_START> public void ( ) { setProxyTargetClass ( false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( MethodInvocation org.springframework.aop.framework.autoproxy.MethodInvocation ) throws java.lang.Throwable { if ( ! org.springframework.aop.framework.autoproxy.MethodInvocation . getMethod ( ) . getName ( ) . equals ( STRING ) ) { this . int ++ ; } return org.springframework.aop.framework.autoproxy.MethodInvocation . proceed ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.aop.framework.autoproxy.BeanFactory ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.aop.framework.autoproxy.ApplicationContext ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.framework.autoproxy.ITestBean org.springframework.aop.framework.autoproxy.ITestBean ( ) { return ( ITestBean ) java.lang.reflect.Proxy . java.lang.Object ( org.springframework.aop.framework.autoproxy.AutoProxyCreatorTests.CustomProxyFactoryBean .class . java.lang.ClassLoader ( ) , new java.lang.Class<?> < ? > [] { ITestBean .class } , new java.lang.reflect.InvocationHandler ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] ) throws java.lang.Throwable { return ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.aop.framework.autoproxy.TestBean , java.lang.Object[] ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] ) throws java.lang.Throwable { return ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.aop.framework.autoproxy.TestBean , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return ITestBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.framework.autoproxy.ITestBean org.springframework.aop.framework.autoproxy.ITestBean ( ) { return ProxyFactory . getProxy ( ITestBean .class , new SingletonTargetSource ( org.springframework.aop.framework.autoproxy.TestBean ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return ITestBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
