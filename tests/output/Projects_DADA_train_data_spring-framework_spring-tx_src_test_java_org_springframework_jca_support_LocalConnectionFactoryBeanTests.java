<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { new LocalConnectionFactoryBean ( ) . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalConnectionFactoryBean org.springframework.jca.support.LocalConnectionFactoryBean = new LocalConnectionFactoryBean ( ) ; assertTrue ( org.springframework.jca.support.LocalConnectionFactoryBean . isSingleton ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalConnectionFactoryBean org.springframework.jca.support.LocalConnectionFactoryBean = new LocalConnectionFactoryBean ( ) ; assertNull ( org.springframework.jca.support.LocalConnectionFactoryBean . getObjectType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.Object java.lang.Object = new java.lang.Object ( ) ; ManagedConnectionFactory org.springframework.jca.support.ManagedConnectionFactory = mock ( ManagedConnectionFactory .class ) ; given ( org.springframework.jca.support.ManagedConnectionFactory . createConnectionFactory ( ) ) . willReturn ( java.lang.Object ) ; LocalConnectionFactoryBean org.springframework.jca.support.LocalConnectionFactoryBean = new LocalConnectionFactoryBean ( ) ; org.springframework.jca.support.LocalConnectionFactoryBean . setManagedConnectionFactory ( org.springframework.jca.support.ManagedConnectionFactory ) ; org.springframework.jca.support.LocalConnectionFactoryBean . afterPropertiesSet ( ) ; assertEquals ( java.lang.Object , org.springframework.jca.support.LocalConnectionFactoryBean . getObject ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ManagedConnectionFactory org.springframework.jca.support.ManagedConnectionFactory = mock ( ManagedConnectionFactory .class ) ; ConnectionManager org.springframework.jca.support.ConnectionManager = mock ( ConnectionManager .class ) ; LocalConnectionFactoryBean org.springframework.jca.support.LocalConnectionFactoryBean = new LocalConnectionFactoryBean ( ) ; org.springframework.jca.support.LocalConnectionFactoryBean . setManagedConnectionFactory ( org.springframework.jca.support.ManagedConnectionFactory ) ; org.springframework.jca.support.LocalConnectionFactoryBean . setConnectionManager ( org.springframework.jca.support.ConnectionManager ) ; org.springframework.jca.support.LocalConnectionFactoryBean . afterPropertiesSet ( ) ; verify ( org.springframework.jca.support.ManagedConnectionFactory ) . createConnectionFactory ( org.springframework.jca.support.ConnectionManager ) ; }  <METHOD_END>
