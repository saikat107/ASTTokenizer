<METHOD_START> @ BeforeClass @ AfterClass public static void void ( ) { ReflectionTestUtils . setField ( TomcatURLStreamHandlerFactory .class , STRING , null ) ; ReflectionTestUtils . setField ( java.net.URL .class , STRING , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.boot.autoconfigure.jersey.OutputCapture . toString ( ) ) . contains ( STRING ) ; assertThat ( org.springframework.boot.autoconfigure.jersey.OutputCapture . toString ( ) ) . contains ( STRING + org.springframework.boot.autoconfigure.jersey.JerseyAutoConfigurationServletContainerTests.Application .class . java.lang.String ( ) + STRING ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { register ( org.springframework.boot.autoconfigure.jersey.JerseyAutoConfigurationServletContainerTests.Application .class ) ; }  <METHOD_END>
<METHOD_START> @ GET public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jersey.TomcatServletWebServerFactory org.springframework.boot.autoconfigure.jersey.TomcatServletWebServerFactory ( ) { return new TomcatServletWebServerFactory ( ) { @ java.lang.Override protected void void ( Context org.springframework.boot.autoconfigure.jersey.Context ) { Wrapper org.springframework.boot.autoconfigure.jersey.Wrapper = org.springframework.boot.autoconfigure.jersey.Context . createWrapper ( ) ; java.lang.String java.lang.String = org.springframework.boot.autoconfigure.jersey.JerseyAutoConfigurationServletContainerTests.Application .class . java.lang.String ( ) ; org.springframework.boot.autoconfigure.jersey.Wrapper . setName ( java.lang.String ) ; org.springframework.boot.autoconfigure.jersey.Wrapper . setServletClass ( ServletContainer .class . java.lang.String ( ) ) ; org.springframework.boot.autoconfigure.jersey.Wrapper . setServlet ( new ServletContainer ( ) ) ; org.springframework.boot.autoconfigure.jersey.Wrapper . setOverridable ( false ) ; org.springframework.boot.autoconfigure.jersey.Context . addChild ( org.springframework.boot.autoconfigure.jersey.Wrapper ) ; java.lang.String java.lang.String = UDecoder . URLDecode ( STRING , STRING ) ; org.springframework.boot.autoconfigure.jersey.Context . addServletMappingDecoded ( java.lang.String , java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Context org.springframework.boot.autoconfigure.jersey.Context ) { Wrapper org.springframework.boot.autoconfigure.jersey.Wrapper = org.springframework.boot.autoconfigure.jersey.Context . createWrapper ( ) ; java.lang.String java.lang.String = org.springframework.boot.autoconfigure.jersey.JerseyAutoConfigurationServletContainerTests.Application .class . java.lang.String ( ) ; org.springframework.boot.autoconfigure.jersey.Wrapper . setName ( java.lang.String ) ; org.springframework.boot.autoconfigure.jersey.Wrapper . setServletClass ( ServletContainer .class . java.lang.String ( ) ) ; org.springframework.boot.autoconfigure.jersey.Wrapper . setServlet ( new ServletContainer ( ) ) ; org.springframework.boot.autoconfigure.jersey.Wrapper . setOverridable ( false ) ; org.springframework.boot.autoconfigure.jersey.Context . addChild ( org.springframework.boot.autoconfigure.jersey.Wrapper ) ; java.lang.String java.lang.String = UDecoder . URLDecode ( STRING , STRING ) ; org.springframework.boot.autoconfigure.jersey.Context . addServletMappingDecoded ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
