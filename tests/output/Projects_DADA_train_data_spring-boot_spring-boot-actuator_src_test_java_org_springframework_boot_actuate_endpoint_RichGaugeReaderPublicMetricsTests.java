<METHOD_START> @ Test public void void ( ) java.lang.Exception { InMemoryRichGaugeRepository org.springframework.boot.actuate.endpoint.InMemoryRichGaugeRepository = new InMemoryRichGaugeRepository ( ) ; org.springframework.boot.actuate.endpoint.InMemoryRichGaugeRepository . set ( new Metric <> ( STRING , NUMBER , new java.util.Date ( ) ) ) ; org.springframework.boot.actuate.endpoint.InMemoryRichGaugeRepository . set ( new Metric <> ( STRING , NUMBER , new java.util.Date ( ) ) ) ; RichGaugeReaderPublicMetrics org.springframework.boot.actuate.endpoint.RichGaugeReaderPublicMetrics = new RichGaugeReaderPublicMetrics ( org.springframework.boot.actuate.endpoint.InMemoryRichGaugeRepository ) ; java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> < java.lang.String , Metric < ? > > java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> = new java.util.HashMap<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> <> ( ) ; for ( Metric < ? > org.springframework.boot.actuate.endpoint.Metric<?> : org.springframework.boot.actuate.endpoint.RichGaugeReaderPublicMetrics . metrics ( ) ) { java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . put ( org.springframework.boot.actuate.endpoint.Metric<> . getName ( ) , org.springframework.boot.actuate.endpoint.Metric<> ) ; } assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . containsKey ( STRING ) ) . isTrue ( ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . get ( STRING ) . getValue ( ) . doubleValue ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . containsKey ( STRING ) ) . isTrue ( ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . get ( STRING ) . getValue ( ) . doubleValue ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . containsKey ( STRING ) ) . isTrue ( ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . get ( STRING ) . getValue ( ) . doubleValue ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . containsKey ( STRING ) ) . isTrue ( ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . get ( STRING ) . getValue ( ) . doubleValue ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . containsKey ( STRING ) ) . isTrue ( ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . get ( STRING ) . getValue ( ) . longValue ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . containsKey ( STRING ) ) . isTrue ( ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.Metric<?>> . get ( STRING ) . getValue ( ) . doubleValue ( ) ) . isEqualTo ( - NUMBER ) ; }  <METHOD_END>
