<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( GroovyImplicitAliasesContextConfigClass .class , STRING ) ; void ( XmlImplicitAliasesContextConfigClass .class , STRING ) ; void ( ValueImplicitAliasesContextConfigClass .class , STRING ) ; void ( Location1ImplicitAliasesContextConfigClass .class , STRING ) ; void ( Location2ImplicitAliasesContextConfigClass .class , STRING ) ; void ( Location3ImplicitAliasesContextConfigClass .class , STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) throws java.lang.Exception { java.lang.reflect.Method java.lang.reflect.Method = ImplicitAliasesContextConfig .class . java.lang.reflect.Method ( STRING ) ; java.lang.reflect.Method java.lang.reflect.Method = ImplicitAliasesContextConfig .class . java.lang.reflect.Method ( STRING ) ; java.lang.reflect.Method java.lang.reflect.Method = ImplicitAliasesContextConfig .class . java.lang.reflect.Method ( STRING ) ; AnnotationAttributeExtractor < ? > org.springframework.core.annotation.AnnotationAttributeExtractor<?> = org.springframework.core.annotation.AnnotationAttributeExtractor<?> ( java.lang.Class<> , java.lang.String , ImplicitAliasesContextConfig .class ) ; assertThat ( org.springframework.core.annotation.AnnotationAttributeExtractor<> . getAttributeValue ( java.lang.reflect.Method ) , is ( java.lang.String ) ) ; assertThat ( org.springframework.core.annotation.AnnotationAttributeExtractor<> . getAttributeValue ( java.lang.reflect.Method ) , is ( java.lang.String ) ) ; assertThat ( org.springframework.core.annotation.AnnotationAttributeExtractor<> . getAttributeValue ( java.lang.reflect.Method ) , is ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.core.annotation.AnnotationAttributeExtractor<?> < ? > org.springframework.core.annotation.AnnotationAttributeExtractor<?> ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String , java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> );  <METHOD_END>
