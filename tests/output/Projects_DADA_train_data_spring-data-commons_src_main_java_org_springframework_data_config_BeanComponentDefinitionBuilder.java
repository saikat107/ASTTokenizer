<METHOD_START> public void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.config.ParserContext ) { Assert . notNull ( org.w3c.dom.Element , STRING ) ; Assert . notNull ( org.springframework.data.config.ParserContext , STRING ) ; this . org.w3c.dom.Element = org.w3c.dom.Element ; this . org.springframework.data.config.ParserContext = org.springframework.data.config.ParserContext ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.config.BeanComponentDefinition org.springframework.data.config.BeanComponentDefinition ( BeanDefinitionBuilder org.springframework.data.config.BeanDefinitionBuilder ) { Assert . notNull ( org.springframework.data.config.BeanDefinitionBuilder , STRING ) ; AbstractBeanDefinition org.springframework.data.config.AbstractBeanDefinition = org.springframework.data.config.BeanDefinitionBuilder . getRawBeanDefinition ( ) ; java.lang.String java.lang.String = BeanDefinitionReaderUtils . generateBeanName ( org.springframework.data.config.AbstractBeanDefinition , org.springframework.data.config.ParserContext . getRegistry ( ) , org.springframework.data.config.ParserContext . isNested ( ) ) ; return org.springframework.data.config.BeanComponentDefinition ( org.springframework.data.config.BeanDefinitionBuilder , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.config.BeanComponentDefinition org.springframework.data.config.BeanComponentDefinition ( BeanDefinitionBuilder org.springframework.data.config.BeanDefinitionBuilder , java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; return org.springframework.data.config.BeanComponentDefinition ( org.springframework.data.config.BeanDefinitionBuilder , StringUtils . hasText ( java.lang.String ) ? java.lang.String : java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.config.BeanComponentDefinition org.springframework.data.config.BeanComponentDefinition ( BeanDefinitionBuilder org.springframework.data.config.BeanDefinitionBuilder , java.lang.String java.lang.String ) { return org.springframework.data.config.BeanComponentDefinition ( org.springframework.data.config.BeanDefinitionBuilder , java.lang.String , org.w3c.dom.Element ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.config.BeanComponentDefinition org.springframework.data.config.BeanComponentDefinition ( BeanDefinitionBuilder org.springframework.data.config.BeanDefinitionBuilder , java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Assert . notNull ( org.springframework.data.config.BeanDefinitionBuilder , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; AbstractBeanDefinition org.springframework.data.config.AbstractBeanDefinition = org.springframework.data.config.BeanDefinitionBuilder . getRawBeanDefinition ( ) ; org.springframework.data.config.AbstractBeanDefinition . setSource ( org.springframework.data.config.ParserContext . extractSource ( java.lang.Object ) ) ; return new BeanComponentDefinition ( org.springframework.data.config.AbstractBeanDefinition , java.lang.String ) ; }  <METHOD_END>
