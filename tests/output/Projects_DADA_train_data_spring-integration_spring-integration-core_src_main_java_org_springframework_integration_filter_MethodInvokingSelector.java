<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method ) { super( new MethodInvokingMessageProcessor < java.lang.Boolean > ( java.lang.Object , java.lang.reflect.Method ) ); java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.reflect.Method . java.lang.Class<?> ( ) ; Assert . isTrue ( boolean .class . boolean ( java.lang.Class<> ) || java.lang.Boolean .class . boolean ( java.lang.Class<> ) , STRING ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { super( new MethodInvokingMessageProcessor < java.lang.Boolean > ( java.lang.Object , java.lang.String ) ); }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( java.lang.Object java.lang.Object ) { super( java.lang.Object instanceof MessageProcessor < ? > ? ( MessageProcessor < java.lang.Boolean > ) java.lang.Object : new MethodInvokingMessageProcessor < java.lang.Boolean > ( java.lang.Object , Filter .class ) ); }  <METHOD_END>
