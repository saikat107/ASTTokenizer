<METHOD_START> public void ( Twitter org.springframework.integration.twitter.outbound.Twitter ) { Assert . notNull ( org.springframework.integration.twitter.outbound.Twitter , STRING ) ; this . org.springframework.integration.twitter.outbound.Twitter = org.springframework.integration.twitter.outbound.Twitter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Message < ? > org.springframework.integration.twitter.outbound.Message<?> ) throws java.lang.Exception { Assert . isTrue ( org.springframework.integration.twitter.outbound.Message<> . getPayload ( ) instanceof java.lang.String , STRING + STRING ) ; java.lang.Object java.lang.Object = org.springframework.integration.twitter.outbound.Message<> . getHeaders ( ) . get ( TwitterHeaders . DM_TARGET_USER_ID ) ; Assert . isTrue ( java.lang.Object instanceof java.lang.String || java.lang.Object instanceof java.lang.Number , STRING + TwitterHeaders . DM_TARGET_USER_ID + STRING ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.integration.twitter.outbound.Message<> . getPayload ( ) ; if ( java.lang.Object instanceof java.lang.Number ) { this . org.springframework.integration.twitter.outbound.Twitter . directMessageOperations ( ) . sendDirectMessage ( ( ( java.lang.Number ) java.lang.Object ) . long ( ) , java.lang.String ) ; } else if ( java.lang.Object instanceof java.lang.String ) { this . org.springframework.integration.twitter.outbound.Twitter . directMessageOperations ( ) . sendDirectMessage ( ( java.lang.String ) java.lang.Object , java.lang.String ) ; } }  <METHOD_END>
