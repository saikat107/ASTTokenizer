<METHOD_START> public static int int ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { return PageContext . REQUEST_SCOPE ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return PageContext . SESSION_SCOPE ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return PageContext . APPLICATION_SCOPE ; } else { return PageContext . PAGE_SCOPE ; } }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Tag org.springframework.web.util.Tag , java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( org.springframework.web.util.Tag , STRING ) ; Assert . notNull ( java.lang.Class<> , STRING ) ; if ( ! Tag .class . boolean ( java.lang.Class<> ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Class<> . java.lang.String ( ) + STRING ) ; } Tag org.springframework.web.util.Tag = org.springframework.web.util.Tag . getParent ( ) ; while ( org.springframework.web.util.Tag != null ) { if ( java.lang.Class<> . boolean ( org.springframework.web.util.Tag . getClass ( ) ) ) { return true ; } org.springframework.web.util.Tag = org.springframework.web.util.Tag . getParent ( ) ; } return false ; }  <METHOD_END>
<METHOD_START> public static void void ( Tag org.springframework.web.util.Tag , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; if ( ! org.springframework.web.util.TagUtils . boolean ( org.springframework.web.util.Tag , java.lang.Class<> ) ) { throw new java.lang.IllegalStateException ( STRING + java.lang.String + STRING + java.lang.String + STRING ) ; } }  <METHOD_END>
