<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.info.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; new SimpleInfoContributor ( null , new java.lang.Object ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; Info org.springframework.boot.actuate.info.Info = org.springframework.boot.actuate.info.Info ( STRING , java.lang.Object ) ; assertThat ( org.springframework.boot.actuate.info.Info . get ( STRING ) ) . isSameAs ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.boot.actuate.info.Info org.springframework.boot.actuate.info.Info ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { SimpleInfoContributor org.springframework.boot.actuate.info.SimpleInfoContributor = new SimpleInfoContributor ( java.lang.String , java.lang.Object ) ; Info . Info Info.Builder = new Info . Info ( ) ; org.springframework.boot.actuate.info.SimpleInfoContributor . contribute ( Info.Builder ) ; return Info.Builder . build ( ) ; }  <METHOD_END>
