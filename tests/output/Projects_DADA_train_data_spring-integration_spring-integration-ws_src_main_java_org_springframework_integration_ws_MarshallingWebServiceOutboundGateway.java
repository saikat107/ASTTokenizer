<METHOD_START> public void ( DestinationProvider org.springframework.integration.ws.DestinationProvider , Marshaller org.springframework.integration.ws.Marshaller , Unmarshaller org.springframework.integration.ws.Unmarshaller , WebServiceMessageFactory org.springframework.integration.ws.WebServiceMessageFactory ) { super( org.springframework.integration.ws.DestinationProvider , org.springframework.integration.ws.WebServiceMessageFactory ); void ( org.springframework.integration.ws.Marshaller , org.springframework.integration.ws.Unmarshaller ) ; }  <METHOD_END>
<METHOD_START> public void ( DestinationProvider org.springframework.integration.ws.DestinationProvider , Marshaller org.springframework.integration.ws.Marshaller , Unmarshaller org.springframework.integration.ws.Unmarshaller ) { this( org.springframework.integration.ws.DestinationProvider , org.springframework.integration.ws.Marshaller , org.springframework.integration.ws.Unmarshaller , null ); }  <METHOD_END>
<METHOD_START> public void ( DestinationProvider org.springframework.integration.ws.DestinationProvider , Marshaller org.springframework.integration.ws.Marshaller , WebServiceMessageFactory org.springframework.integration.ws.WebServiceMessageFactory ) { this( org.springframework.integration.ws.DestinationProvider , org.springframework.integration.ws.Marshaller , null , org.springframework.integration.ws.WebServiceMessageFactory ); }  <METHOD_END>
<METHOD_START> public void ( DestinationProvider org.springframework.integration.ws.DestinationProvider , Marshaller org.springframework.integration.ws.Marshaller ) { this( org.springframework.integration.ws.DestinationProvider , org.springframework.integration.ws.Marshaller , ( WebServiceMessageFactory ) null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , Marshaller org.springframework.integration.ws.Marshaller , Unmarshaller org.springframework.integration.ws.Unmarshaller , WebServiceMessageFactory org.springframework.integration.ws.WebServiceMessageFactory ) { super( java.lang.String , org.springframework.integration.ws.WebServiceMessageFactory ); void ( org.springframework.integration.ws.Marshaller , org.springframework.integration.ws.Unmarshaller ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , Marshaller org.springframework.integration.ws.Marshaller , Unmarshaller org.springframework.integration.ws.Unmarshaller ) { this( java.lang.String , org.springframework.integration.ws.Marshaller , org.springframework.integration.ws.Unmarshaller , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , Marshaller org.springframework.integration.ws.Marshaller , WebServiceMessageFactory org.springframework.integration.ws.WebServiceMessageFactory ) { this( java.lang.String , org.springframework.integration.ws.Marshaller , null , org.springframework.integration.ws.WebServiceMessageFactory ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , Marshaller org.springframework.integration.ws.Marshaller ) { this( java.lang.String , org.springframework.integration.ws.Marshaller , ( WebServiceMessageFactory ) null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , WebServiceTemplate org.springframework.integration.ws.WebServiceTemplate ) { super( java.lang.String , null ); doSetWebServiceTemplate ( org.springframework.integration.ws.WebServiceTemplate ) ; }  <METHOD_END>
<METHOD_START> public void ( DestinationProvider org.springframework.integration.ws.DestinationProvider , WebServiceTemplate org.springframework.integration.ws.WebServiceTemplate ) { super( org.springframework.integration.ws.DestinationProvider , null ); doSetWebServiceTemplate ( org.springframework.integration.ws.WebServiceTemplate ) ; }  <METHOD_END>
<METHOD_START> private void void ( Marshaller org.springframework.integration.ws.Marshaller , Unmarshaller org.springframework.integration.ws.Unmarshaller ) { Assert . notNull ( org.springframework.integration.ws.Marshaller , STRING ) ; if ( org.springframework.integration.ws.Unmarshaller == null ) { Assert . isInstanceOf ( Unmarshaller .class , org.springframework.integration.ws.Marshaller , STRING + org.springframework.integration.ws.Marshaller + STRING + STRING + STRING ) ; org.springframework.integration.ws.Unmarshaller = ( Unmarshaller ) org.springframework.integration.ws.Marshaller ; } Assert . notNull ( org.springframework.integration.ws.Unmarshaller , STRING ) ; getWebServiceTemplate ( ) . setMarshaller ( org.springframework.integration.ws.Marshaller ) ; getWebServiceTemplate ( ) . setUnmarshaller ( org.springframework.integration.ws.Unmarshaller ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.String java.lang.String , Message < ? > org.springframework.integration.ws.Message<?> , WebServiceMessageCallback org.springframework.integration.ws.WebServiceMessageCallback ) { return getWebServiceTemplate ( ) . marshalSendAndReceive ( java.lang.String , org.springframework.integration.ws.Message<> . getPayload ( ) , new org.springframework.integration.ws.MarshallingWebServiceOutboundGateway.PassThroughRequestMessageCallback ( org.springframework.integration.ws.WebServiceMessageCallback , org.springframework.integration.ws.Message<> ) ) ; }  <METHOD_END>
<METHOD_START> void ( WebServiceMessageCallback org.springframework.integration.ws.WebServiceMessageCallback , Message < ? > org.springframework.integration.ws.Message<?> ) { super( org.springframework.integration.ws.WebServiceMessageCallback , org.springframework.integration.ws.Message<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( WebServiceMessage org.springframework.integration.ws.WebServiceMessage , java.lang.Object java.lang.Object ) throws java.io.IOException {		}  <METHOD_END>
