<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( ApplicationContext org.springframework.context.support.ApplicationContext ) { super( org.springframework.context.support.ApplicationContext ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) throws org.springframework.context.support.BeansException { this( new java.lang.String [] { java.lang.String } , true , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String ... java.lang.String[] ) throws org.springframework.context.support.BeansException { this( java.lang.String[] , true , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String [] java.lang.String[] , ApplicationContext org.springframework.context.support.ApplicationContext ) throws org.springframework.context.support.BeansException { this( java.lang.String[] , true , org.springframework.context.support.ApplicationContext ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String [] java.lang.String[] , boolean boolean ) throws org.springframework.context.support.BeansException { this( java.lang.String[] , boolean , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String [] java.lang.String[] , boolean boolean , ApplicationContext org.springframework.context.support.ApplicationContext )			throws org.springframework.context.support.BeansException { super( org.springframework.context.support.ApplicationContext ); setConfigLocations ( java.lang.String[] ) ; if ( boolean ) { refresh ( ) ; } }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) throws org.springframework.context.support.BeansException { this( new java.lang.String [] { java.lang.String } , java.lang.Class<> ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String [] java.lang.String[] , java.lang.Class<?> < ? > java.lang.Class<?> ) throws org.springframework.context.support.BeansException { this( java.lang.String[] , java.lang.Class<> , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String [] java.lang.String[] , java.lang.Class<?> < ? > java.lang.Class<?> , ApplicationContext org.springframework.context.support.ApplicationContext )			throws org.springframework.context.support.BeansException { super( org.springframework.context.support.ApplicationContext ); Assert . notNull ( java.lang.String[] , STRING ) ; Assert . notNull ( java.lang.Class<> , STRING ) ; this . org.springframework.context.support.Resource[] = new Resource [ java.lang.String[] . int ] ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { this . org.springframework.context.support.Resource[] [ int ] = new ClassPathResource ( java.lang.String[] [ int ] , java.lang.Class<> ) ; } refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.context.support.Resource [] org.springframework.context.support.Resource[] ( ) { return this . org.springframework.context.support.Resource[] ; }  <METHOD_END>
