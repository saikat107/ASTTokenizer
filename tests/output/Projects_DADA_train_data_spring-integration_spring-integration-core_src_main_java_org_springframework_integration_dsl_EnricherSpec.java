<METHOD_START> void ( ) { super( new ContentEnricher ( ) ); }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( MessageChannel org.springframework.integration.dsl.MessageChannel ) { this . handler . setRequestChannel ( org.springframework.integration.dsl.MessageChannel ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String ) { this . handler . setRequestChannelName ( java.lang.String ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( MessageChannel org.springframework.integration.dsl.MessageChannel ) { this . handler . setReplyChannel ( org.springframework.integration.dsl.MessageChannel ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String ) { this . handler . setReplyChannelName ( java.lang.String ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.Long java.lang.Long ) { this . handler . setRequestTimeout ( java.lang.Long ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.Long java.lang.Long ) { this . handler . setReplyTimeout ( java.lang.Long ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String ) { this . handler . setRequestPayloadExpression ( PARSER . parseExpression ( java.lang.String ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public < P > org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.util.function.Function<org.springframework.integration.dsl.Message<P>,?> < Message < P > , ? > java.util.function.Function<org.springframework.integration.dsl.Message<P>,?> ) { this . handler . setRequestPayloadExpression ( new FunctionExpression <> ( java.util.function.Function<org.springframework.integration.dsl.Message<P>,> ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( IntegrationFlow org.springframework.integration.dsl.IntegrationFlow ) { Assert . notNull ( org.springframework.integration.dsl.IntegrationFlow , STRING ) ; DirectChannel org.springframework.integration.dsl.DirectChannel = new DirectChannel ( ) ; IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder = IntegrationFlows . from ( org.springframework.integration.dsl.DirectChannel ) ; org.springframework.integration.dsl.IntegrationFlow . configure ( org.springframework.integration.dsl.IntegrationFlowBuilder ) ; this . componentsToRegister . add ( org.springframework.integration.dsl.IntegrationFlowBuilder . get ( ) ) ; return org.springframework.integration.dsl.EnricherSpec ( org.springframework.integration.dsl.DirectChannel ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( boolean boolean ) { this . handler . setShouldClonePayload ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public < V > org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String , V V ) { this . java.util.Map<java.lang.String,org.springframework.integration.dsl.Expression> . put ( java.lang.String , new ValueExpression < V > ( V ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.util.Map<java.lang.String,org.springframework.integration.dsl.Expression> . put ( java.lang.String , PARSER . parseExpression ( java.lang.String ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public < P > org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String , java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> < Message < P > , java.lang.Object > java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) { this . java.util.Map<java.lang.String,org.springframework.integration.dsl.Expression> . put ( java.lang.String , new FunctionExpression <> ( java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public < V > org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String , V V ) { return this . org.springframework.integration.dsl.EnricherSpec ( java.lang.String , V , null ) ; }  <METHOD_END>
<METHOD_START> public < V > org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String , V V , java.lang.Boolean java.lang.Boolean ) { AbstractHeaderValueMessageProcessor < V > org.springframework.integration.dsl.AbstractHeaderValueMessageProcessor<V> = new StaticHeaderValueMessageProcessor < V > ( V ) ; org.springframework.integration.dsl.AbstractHeaderValueMessageProcessor<V> . setOverwrite ( java.lang.Boolean ) ; return org.springframework.integration.dsl.EnricherSpec ( java.lang.String , org.springframework.integration.dsl.AbstractHeaderValueMessageProcessor<V> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return org.springframework.integration.dsl.EnricherSpec ( java.lang.String , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.Boolean java.lang.Boolean ) { Assert . hasText ( java.lang.String , STRING ) ; return org.springframework.integration.dsl.EnricherSpec ( java.lang.String , PARSER . parseExpression ( java.lang.String ) , java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> public < P > org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String , java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> < Message < P > , java.lang.Object > java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) { return org.springframework.integration.dsl.EnricherSpec ( java.lang.String , java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> , null ) ; }  <METHOD_END>
<METHOD_START> public < P > org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String , java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> < Message < P > , java.lang.Object > java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> , java.lang.Boolean java.lang.Boolean ) { return org.springframework.integration.dsl.EnricherSpec ( java.lang.String , new FunctionExpression <> ( java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) , java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String , Expression org.springframework.integration.dsl.Expression , java.lang.Boolean java.lang.Boolean ) { AbstractHeaderValueMessageProcessor < ? > org.springframework.integration.dsl.AbstractHeaderValueMessageProcessor<?> = new ExpressionEvaluatingHeaderValueMessageProcessor <> ( org.springframework.integration.dsl.Expression , null ) ; org.springframework.integration.dsl.AbstractHeaderValueMessageProcessor<> . setOverwrite ( java.lang.Boolean ) ; return org.springframework.integration.dsl.EnricherSpec ( java.lang.String , org.springframework.integration.dsl.AbstractHeaderValueMessageProcessor<> ) ; }  <METHOD_END>
<METHOD_START> public < V > org.springframework.integration.dsl.EnricherSpec org.springframework.integration.dsl.EnricherSpec ( java.lang.String java.lang.String , HeaderValueMessageProcessor < V > org.springframework.integration.dsl.HeaderValueMessageProcessor<V> ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.util.Map<java.lang.String,org.springframework.integration.dsl.HeaderValueMessageProcessor<?>> . put ( java.lang.String , org.springframework.integration.dsl.HeaderValueMessageProcessor<V> ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.dsl.Tuple2<org.springframework.integration.dsl.ConsumerEndpointFactoryBean,org.springframework.integration.dsl.ContentEnricher> < ConsumerEndpointFactoryBean , ContentEnricher > org.springframework.integration.dsl.Tuple2<org.springframework.integration.dsl.ConsumerEndpointFactoryBean,org.springframework.integration.dsl.ContentEnricher> ( ) { if ( ! this . java.util.Map<java.lang.String,org.springframework.integration.dsl.Expression> . isEmpty ( ) ) { this . handler . setPropertyExpressions ( this . java.util.Map<java.lang.String,org.springframework.integration.dsl.Expression> ) ; } if ( ! this . java.util.Map<java.lang.String,org.springframework.integration.dsl.HeaderValueMessageProcessor<?>> . isEmpty ( ) ) { this . handler . setHeaderExpressions ( this . java.util.Map<java.lang.String,org.springframework.integration.dsl.HeaderValueMessageProcessor<?>> ) ; } return super. doGet ( ) ; }  <METHOD_END>
