<METHOD_START> public void void ( ConnectionSpec org.springframework.jca.cci.connection.ConnectionSpec ) { this . org.springframework.jca.cci.connection.ConnectionSpec = org.springframework.jca.cci.connection.ConnectionSpec ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionSpec org.springframework.jca.cci.connection.ConnectionSpec ) { this . java.lang.ThreadLocal<org.springframework.jca.cci.connection.ConnectionSpec> . set ( org.springframework.jca.cci.connection.ConnectionSpec ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . java.lang.ThreadLocal<org.springframework.jca.cci.connection.ConnectionSpec> . remove ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final org.springframework.jca.cci.connection.Connection org.springframework.jca.cci.connection.Connection ( ) org.springframework.jca.cci.connection.ResourceException { ConnectionSpec org.springframework.jca.cci.connection.ConnectionSpec = this . java.lang.ThreadLocal<org.springframework.jca.cci.connection.ConnectionSpec> . get ( ) ; if ( org.springframework.jca.cci.connection.ConnectionSpec != null ) { return org.springframework.jca.cci.connection.Connection ( org.springframework.jca.cci.connection.ConnectionSpec ) ; } else { return org.springframework.jca.cci.connection.Connection ( this . org.springframework.jca.cci.connection.ConnectionSpec ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.jca.cci.connection.Connection org.springframework.jca.cci.connection.Connection ( ConnectionSpec org.springframework.jca.cci.connection.ConnectionSpec ) throws org.springframework.jca.cci.connection.ResourceException { if ( getTargetConnectionFactory ( ) == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } if ( org.springframework.jca.cci.connection.ConnectionSpec != null ) { return getTargetConnectionFactory ( ) . getConnection ( org.springframework.jca.cci.connection.ConnectionSpec ) ; } else { return getTargetConnectionFactory ( ) . getConnection ( ) ; } }  <METHOD_END>
