<METHOD_START> @ Test public void void ( ) java.lang.InterruptedException { java.util.concurrent.CountDownLatch java.util.concurrent.CountDownLatch = new java.util.concurrent.CountDownLatch ( NUMBER ) ; TestApplicationContext org.springframework.integration.config.TestApplicationContext = TestUtils . createTestApplicationContext ( ) ; RootBeanDefinition org.springframework.integration.config.RootBeanDefinition = new RootBeanDefinition ( MessagingAnnotationPostProcessor .class ) ; org.springframework.integration.config.TestApplicationContext . registerBeanDefinition ( STRING , org.springframework.integration.config.RootBeanDefinition ) ; org.springframework.integration.config.TestApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( DirectChannel .class ) ) ; RootBeanDefinition org.springframework.integration.config.RootBeanDefinition = new RootBeanDefinition ( org.springframework.integration.config.ServiceActivatorAnnotationPostProcessorTests.SimpleServiceActivatorAnnotationTestBean .class ) ; org.springframework.integration.config.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( java.util.concurrent.CountDownLatch ) ; org.springframework.integration.config.TestApplicationContext . registerBeanDefinition ( STRING , org.springframework.integration.config.RootBeanDefinition ) ; org.springframework.integration.config.TestApplicationContext . refresh ( ) ; org.springframework.integration.config.ServiceActivatorAnnotationPostProcessorTests.SimpleServiceActivatorAnnotationTestBean org.springframework.integration.config.ServiceActivatorAnnotationPostProcessorTests.SimpleServiceActivatorAnnotationTestBean = ( org.springframework.integration.config.ServiceActivatorAnnotationPostProcessorTests.SimpleServiceActivatorAnnotationTestBean ) org.springframework.integration.config.TestApplicationContext . getBean ( STRING ) ; assertEquals ( NUMBER , java.util.concurrent.CountDownLatch . long ( ) ) ; assertNull ( org.springframework.integration.config.ServiceActivatorAnnotationPostProcessorTests.SimpleServiceActivatorAnnotationTestBean . java.lang.String ( ) ) ; MessageChannel org.springframework.integration.config.MessageChannel = ( MessageChannel ) org.springframework.integration.config.TestApplicationContext . getBean ( STRING ) ; org.springframework.integration.config.MessageChannel . send ( new GenericMessage < java.lang.String > ( STRING ) ) ; java.util.concurrent.CountDownLatch . boolean ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) ; assertEquals ( NUMBER , java.util.concurrent.CountDownLatch . long ( ) ) ; assertEquals ( STRING , org.springframework.integration.config.ServiceActivatorAnnotationPostProcessorTests.SimpleServiceActivatorAnnotationTestBean . java.lang.String ( ) ) ; org.springframework.integration.config.TestApplicationContext . stop ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.util.concurrent.CountDownLatch java.util.concurrent.CountDownLatch ) { this . java.util.concurrent.CountDownLatch = java.util.concurrent.CountDownLatch ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { this . java.util.concurrent.CountDownLatch . void ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.util.concurrent.CountDownLatch java.util.concurrent.CountDownLatch ) { super( java.util.concurrent.CountDownLatch ); }  <METHOD_END>
<METHOD_START> @ ServiceActivator ( inputChannel = STRING ) public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . void ( ) ; }  <METHOD_END>
