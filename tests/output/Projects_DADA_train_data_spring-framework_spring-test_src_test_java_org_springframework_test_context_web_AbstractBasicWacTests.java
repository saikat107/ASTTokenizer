<METHOD_START> @ java.lang.Override public void void ( ServletContext org.springframework.test.context.web.ServletContext ) { this . org.springframework.test.context.web.ServletContext = org.springframework.test.context.web.ServletContext ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertNotNull ( STRING , org.springframework.test.context.web.WebApplicationContext . getServletContext ( ) ) ; assertNotNull ( STRING , org.springframework.test.context.web.ServletContext ) ; assertNotNull ( STRING , org.springframework.test.context.web.MockServletContext ) ; assertNotNull ( STRING , org.springframework.test.context.web.MockHttpServletRequest ) ; assertNotNull ( STRING , org.springframework.test.context.web.MockHttpServletResponse ) ; assertNotNull ( STRING , org.springframework.test.context.web.MockHttpSession ) ; assertNotNull ( STRING , org.springframework.test.context.web.ServletWebRequest ) ; java.lang.Object java.lang.Object = org.springframework.test.context.web.MockServletContext . getAttribute ( WebApplicationContext . ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE ) ; assertNotNull ( STRING + WebApplicationContext . ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE , java.lang.Object ) ; assertSame ( STRING , org.springframework.test.context.web.WebApplicationContext , java.lang.Object ) ; assertSame ( STRING , org.springframework.test.context.web.MockServletContext , org.springframework.test.context.web.WebApplicationContext . getServletContext ( ) ) ; assertSame ( STRING , org.springframework.test.context.web.MockServletContext , org.springframework.test.context.web.MockHttpServletRequest . getServletContext ( ) ) ; assertEquals ( STRING , new java.io.File ( STRING ) . java.lang.String ( ) , org.springframework.test.context.web.MockServletContext . getRealPath ( STRING ) ) ; }  <METHOD_END>
