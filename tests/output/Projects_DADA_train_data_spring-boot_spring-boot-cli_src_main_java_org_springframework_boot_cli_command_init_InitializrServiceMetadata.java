<METHOD_START> void ( JSONObject org.springframework.boot.cli.command.init.JSONObject ) throws org.springframework.boot.cli.command.init.JSONException { this . java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> = java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> ( org.springframework.boot.cli.command.init.JSONObject ) ; this . org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> = org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> ( org.springframework.boot.cli.command.init.JSONObject ) ; this . java.util.Map<java.lang.String,java.lang.String> = java.util.Collections . java.util.Map ( java.util.Map<java.lang.String,java.lang.String> ( org.springframework.boot.cli.command.init.JSONObject ) ) ; }  <METHOD_END>
<METHOD_START> void ( ProjectType org.springframework.boot.cli.command.init.ProjectType ) { this . java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> = new java.util.HashMap <> ( ) ; this . org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> = new org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder <> ( ) ; this . org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> . getContent ( ) . put ( org.springframework.boot.cli.command.init.ProjectType . getId ( ) , org.springframework.boot.cli.command.init.ProjectType ) ; this . org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> . setDefaultItem ( org.springframework.boot.cli.command.init.ProjectType ) ; this . java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<org.springframework.boot.cli.command.init.Dependency> < Dependency > java.util.Collection<org.springframework.boot.cli.command.init.Dependency> ( ) { return this . java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> . values ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.command.init.Dependency org.springframework.boot.cli.command.init.Dependency ( java.lang.String java.lang.String ) { return this . java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> . get ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> < java.lang.String , ProjectType > java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> ( ) { return this . org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> . getContent ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.command.init.ProjectType org.springframework.boot.cli.command.init.ProjectType ( ) { if ( this . org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> . getDefaultItem ( ) != null ) { return this . org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> . getDefaultItem ( ) ; } java.lang.String java.lang.String = java.util.Map<java.lang.String,java.lang.String> ( ) . java.lang.String ( STRING ) ; if ( java.lang.String != null ) { return this . org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> . getContent ( ) . get ( java.lang.String ) ; } return null ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( ) { return this . java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> < java.lang.String , Dependency > java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> ( JSONObject org.springframework.boot.cli.command.init.JSONObject )			throws org.springframework.boot.cli.command.init.JSONException { java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> < java.lang.String , Dependency > java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> = new java.util.HashMap<java.lang.String,org.springframework.boot.cli.command.init.Dependency> <> ( ) ; if ( ! org.springframework.boot.cli.command.init.JSONObject . has ( java.lang.String ) ) { return java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> ; } JSONObject org.springframework.boot.cli.command.init.JSONObject = org.springframework.boot.cli.command.init.JSONObject . getJSONObject ( java.lang.String ) ; JSONArray org.springframework.boot.cli.command.init.JSONArray = org.springframework.boot.cli.command.init.JSONObject . getJSONArray ( java.lang.String ) ; for ( int int = NUMBER ; int < org.springframework.boot.cli.command.init.JSONArray . length ( ) ; int ++ ) { JSONObject org.springframework.boot.cli.command.init.JSONObject = org.springframework.boot.cli.command.init.JSONArray . getJSONObject ( int ) ; void ( org.springframework.boot.cli.command.init.JSONObject , java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> ) ; } return java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> < java.lang.String , ProjectType > org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> ( JSONObject org.springframework.boot.cli.command.init.JSONObject )			throws org.springframework.boot.cli.command.init.JSONException { org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> < java.lang.String , ProjectType > org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> = new org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> <> ( ) ; if ( ! org.springframework.boot.cli.command.init.JSONObject . has ( java.lang.String ) ) { return org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> ; } JSONObject org.springframework.boot.cli.command.init.JSONObject = org.springframework.boot.cli.command.init.JSONObject . getJSONObject ( java.lang.String ) ; JSONArray org.springframework.boot.cli.command.init.JSONArray = org.springframework.boot.cli.command.init.JSONObject . getJSONArray ( java.lang.String ) ; java.lang.String java.lang.String = org.springframework.boot.cli.command.init.JSONObject . has ( java.lang.String ) ? org.springframework.boot.cli.command.init.JSONObject . getString ( java.lang.String ) : null ; for ( int int = NUMBER ; int < org.springframework.boot.cli.command.init.JSONArray . length ( ) ; int ++ ) { JSONObject org.springframework.boot.cli.command.init.JSONObject = org.springframework.boot.cli.command.init.JSONArray . getJSONObject ( int ) ; ProjectType org.springframework.boot.cli.command.init.ProjectType = org.springframework.boot.cli.command.init.ProjectType ( org.springframework.boot.cli.command.init.JSONObject , java.lang.String ) ; org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> . getContent ( ) . put ( org.springframework.boot.cli.command.init.ProjectType . getId ( ) , org.springframework.boot.cli.command.init.ProjectType ) ; if ( org.springframework.boot.cli.command.init.ProjectType . isDefaultType ( ) ) { org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> . setDefaultItem ( org.springframework.boot.cli.command.init.ProjectType ) ; } } return org.springframework.boot.cli.command.init.InitializrServiceMetadata.MetadataHolder<java.lang.String,org.springframework.boot.cli.command.init.ProjectType> ; }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( JSONObject org.springframework.boot.cli.command.init.JSONObject ) throws org.springframework.boot.cli.command.init.JSONException { java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; java.util.Iterator<?> < ? > java.util.Iterator<?> = org.springframework.boot.cli.command.init.JSONObject . keys ( ) ; while ( java.util.Iterator<> . boolean ( ) ) { java.lang.String java.lang.String = ( java.lang.String ) java.util.Iterator<> . next ( ) ; java.lang.Object java.lang.Object = org.springframework.boot.cli.command.init.JSONObject . get ( java.lang.String ) ; if ( java.lang.Object instanceof JSONObject ) { JSONObject org.springframework.boot.cli.command.init.JSONObject = ( JSONObject ) java.lang.Object ; if ( org.springframework.boot.cli.command.init.JSONObject . has ( java.lang.String ) ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , org.springframework.boot.cli.command.init.JSONObject . getString ( java.lang.String ) ) ; } } } return java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> private void void ( JSONObject org.springframework.boot.cli.command.init.JSONObject , java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> < java.lang.String , Dependency > java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> )			throws org.springframework.boot.cli.command.init.JSONException { if ( org.springframework.boot.cli.command.init.JSONObject . has ( java.lang.String ) ) { JSONArray org.springframework.boot.cli.command.init.JSONArray = org.springframework.boot.cli.command.init.JSONObject . getJSONArray ( java.lang.String ) ; for ( int int = NUMBER ; int < org.springframework.boot.cli.command.init.JSONArray . length ( ) ; int ++ ) { Dependency org.springframework.boot.cli.command.init.Dependency = org.springframework.boot.cli.command.init.Dependency ( org.springframework.boot.cli.command.init.JSONArray . getJSONObject ( int ) ) ; java.util.Map<java.lang.String,org.springframework.boot.cli.command.init.Dependency> . put ( org.springframework.boot.cli.command.init.Dependency . getId ( ) , org.springframework.boot.cli.command.init.Dependency ) ; } } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.command.init.Dependency org.springframework.boot.cli.command.init.Dependency ( JSONObject org.springframework.boot.cli.command.init.JSONObject ) throws org.springframework.boot.cli.command.init.JSONException { java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.cli.command.init.JSONObject , java.lang.String , null ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.cli.command.init.JSONObject , java.lang.String , null ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.cli.command.init.JSONObject , java.lang.String , null ) ; return new Dependency ( java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.command.init.ProjectType org.springframework.boot.cli.command.init.ProjectType ( JSONObject org.springframework.boot.cli.command.init.JSONObject , java.lang.String java.lang.String )			throws org.springframework.boot.cli.command.init.JSONException { java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.cli.command.init.JSONObject , java.lang.String , null ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.cli.command.init.JSONObject , java.lang.String , null ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.cli.command.init.JSONObject , java.lang.String , null ) ; boolean boolean = java.lang.String . boolean ( java.lang.String ) ; java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; if ( org.springframework.boot.cli.command.init.JSONObject . has ( STRING ) ) { JSONObject org.springframework.boot.cli.command.init.JSONObject = org.springframework.boot.cli.command.init.JSONObject . getJSONObject ( STRING ) ; java.util.Map<java.lang.String,java.lang.String> . void ( java.util.Map<java.lang.String,java.lang.String> ( org.springframework.boot.cli.command.init.JSONObject ) ) ; } return new ProjectType ( java.lang.String , java.lang.String , java.lang.String , boolean , java.util.Map<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( JSONObject org.springframework.boot.cli.command.init.JSONObject , java.lang.String java.lang.String , java.lang.String java.lang.String )			throws org.springframework.boot.cli.command.init.JSONException { return org.springframework.boot.cli.command.init.JSONObject . has ( java.lang.String ) ? org.springframework.boot.cli.command.init.JSONObject . getString ( java.lang.String ) : java.lang.String ; }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( JSONObject org.springframework.boot.cli.command.init.JSONObject ) throws org.springframework.boot.cli.command.init.JSONException { java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; for ( java.util.Iterator<?> < ? > java.util.Iterator<?> = org.springframework.boot.cli.command.init.JSONObject . keys ( ) ; java.util.Iterator<> . boolean ( ) ;) { java.lang.String java.lang.String = ( java.lang.String ) java.util.Iterator<> . next ( ) ; java.lang.Object java.lang.Object = org.springframework.boot.cli.command.init.JSONObject . get ( java.lang.String ) ; if ( java.lang.Object instanceof java.lang.String ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , ( java.lang.String ) java.lang.Object ) ; } } return java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> private void ( ) { this . java.util.Map<K,T> = new java.util.HashMap<K,T> <> ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<K,T> < K , T > java.util.Map<K,T> ( ) { return this . java.util.Map<K,T> ; }  <METHOD_END>
<METHOD_START> public T T ( ) { return this . T ; }  <METHOD_END>
<METHOD_START> public void void ( T T ) { this . T = T ; }  <METHOD_END>
