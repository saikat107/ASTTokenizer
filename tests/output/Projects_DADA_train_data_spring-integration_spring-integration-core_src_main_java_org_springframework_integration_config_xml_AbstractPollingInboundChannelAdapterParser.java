<METHOD_START> @ java.lang.Override protected org.springframework.integration.config.xml.AbstractBeanDefinition org.springframework.integration.config.xml.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext , java.lang.String java.lang.String ) { BeanMetadataElement org.springframework.integration.config.xml.BeanMetadataElement = this . org.springframework.integration.config.xml.BeanMetadataElement ( org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; if ( org.springframework.integration.config.xml.BeanMetadataElement == null ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( SourcePollingChannelAdapterFactoryBean .class ) ; java.lang.String java.lang.String = null ; if ( org.springframework.integration.config.xml.BeanMetadataElement instanceof BeanDefinition ) { java.lang.String java.lang.String = this . resolveId ( org.w3c.dom.Element , org.springframework.integration.config.xml.BeanDefinitionBuilder . getRawBeanDefinition ( ) , org.springframework.integration.config.xml.ParserContext ) ; java.lang.String = java.lang.String + STRING ; org.springframework.integration.config.xml.ParserContext . getRegistry ( ) . registerBeanDefinition ( java.lang.String , ( BeanDefinition ) org.springframework.integration.config.xml.BeanMetadataElement ) ; } else if ( org.springframework.integration.config.xml.BeanMetadataElement instanceof RuntimeBeanReference ) { java.lang.String = ( ( RuntimeBeanReference ) org.springframework.integration.config.xml.BeanMetadataElement ) . getBeanName ( ) ; } else { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.springframework.integration.config.xml.BeanMetadataElement ) ; } org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; if ( org.w3c.dom.Element != null ) { IntegrationNamespaceUtils . configurePollerMetadata ( org.w3c.dom.Element , org.springframework.integration.config.xml.BeanDefinitionBuilder , org.springframework.integration.config.xml.ParserContext ) ; } return org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.integration.config.xml.BeanMetadataElement org.springframework.integration.config.xml.BeanMetadataElement ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext );  <METHOD_END>
