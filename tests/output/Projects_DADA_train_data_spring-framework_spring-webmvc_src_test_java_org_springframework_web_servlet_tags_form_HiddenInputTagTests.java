<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected void void ( ) { this . org.springframework.web.servlet.tags.form.HiddenInputTag = new HiddenInputTag ( ) { @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; } } ; this . org.springframework.web.servlet.tags.form.HiddenInputTag . setPageContext ( getPageContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.HiddenInputTag . setPath ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.HiddenInputTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.HiddenInputTag . setPath ( STRING ) ; BeanPropertyBindingResult org.springframework.web.servlet.tags.form.BeanPropertyBindingResult = new BeanPropertyBindingResult ( this . org.springframework.web.servlet.tags.form.TestBean , COMMAND_NAME ) ; org.springframework.web.servlet.tags.form.BeanPropertyBindingResult . getPropertyAccessor ( ) . registerCustomEditor ( java.lang.Float .class , new SimpleFloatEditor ( ) ) ; exposeBindingResult ( org.springframework.web.servlet.tags.form.BeanPropertyBindingResult ) ; assertEquals ( Tag . SKIP_BODY , this . org.springframework.web.servlet.tags.form.HiddenInputTag . doStartTag ( ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.form.JspException { try { this . org.springframework.web.servlet.tags.form.HiddenInputTag . setDynamicAttribute ( null , STRING , STRING ) ; fail ( STRING ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { assertEquals ( STRING , java.lang.IllegalArgumentException . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.HiddenInputTag . setDisabled ( true ) ; this . org.springframework.web.servlet.tags.form.HiddenInputTag . doStartTag ( ) ; this . org.springframework.web.servlet.tags.form.HiddenInputTag . doEndTag ( ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.HiddenInputTag . setDisabled ( false ) ; this . org.springframework.web.servlet.tags.form.HiddenInputTag . doStartTag ( ) ; this . org.springframework.web.servlet.tags.form.HiddenInputTag . doEndTag ( ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TestBean org.springframework.web.servlet.tags.form.TestBean ( ) { this . org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; org.springframework.web.servlet.tags.form.TestBean . setMyFloat ( new java.lang.Float ( STRING ) ) ; return org.springframework.web.servlet.tags.form.TestBean ; }  <METHOD_END>
