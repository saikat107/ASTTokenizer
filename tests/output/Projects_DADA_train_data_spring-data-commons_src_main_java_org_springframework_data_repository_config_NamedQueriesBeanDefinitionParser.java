<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.repository.config.BeanDefinition org.springframework.data.repository.config.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.repository.config.ParserContext ) { BeanDefinitionBuilder org.springframework.data.repository.config.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( PropertiesFactoryBean .class ) ; org.springframework.data.repository.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ( org.w3c.dom.Element ) ) ; if ( boolean ( org.w3c.dom.Element ) ) { org.springframework.data.repository.config.BeanDefinitionBuilder . addPropertyValue ( STRING , true ) ; } AbstractBeanDefinition org.springframework.data.repository.config.AbstractBeanDefinition = org.springframework.data.repository.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; org.springframework.data.repository.config.AbstractBeanDefinition . setSource ( org.springframework.data.repository.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; BeanDefinitionBuilder org.springframework.data.repository.config.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( PropertiesBasedNamedQueries .class ) ; org.springframework.data.repository.config.BeanDefinitionBuilder . addConstructorArgValue ( org.springframework.data.repository.config.AbstractBeanDefinition ) ; AbstractBeanDefinition org.springframework.data.repository.config.AbstractBeanDefinition = org.springframework.data.repository.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; org.springframework.data.repository.config.AbstractBeanDefinition . setSource ( org.springframework.data.repository.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; return org.springframework.data.repository.config.AbstractBeanDefinition ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( org.w3c.dom.Element org.w3c.dom.Element ) { return ! StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; return StringUtils . hasText ( java.lang.String ) ? java.lang.String : java.lang.String ; }  <METHOD_END>
