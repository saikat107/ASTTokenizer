<METHOD_START> @ Test public void void ( ) java.io.IOException , java.lang.InterruptedException { Invocation org.springframework.boot.cli.Invocation = this . org.springframework.boot.cli.CommandLineInvoker . invoke ( STRING ) ; assertThat ( org.springframework.boot.cli.Invocation . await ( ) , equalTo ( NUMBER ) ) ; assertThat ( STRING + org.springframework.boot.cli.Invocation . getErrorOutput ( ) , org.springframework.boot.cli.Invocation . getErrorOutput ( ) . length ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.boot.cli.Invocation . getStandardOutputLines ( ) . size ( ) , equalTo ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException , java.lang.InterruptedException { Invocation org.springframework.boot.cli.Invocation = this . org.springframework.boot.cli.CommandLineInvoker . invoke ( ) ; assertThat ( org.springframework.boot.cli.Invocation . await ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.boot.cli.Invocation . getErrorOutput ( ) . length ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.boot.cli.Invocation . getStandardOutput ( ) , startsWith ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException , java.lang.InterruptedException { Invocation org.springframework.boot.cli.Invocation = this . org.springframework.boot.cli.CommandLineInvoker . invoke ( STRING ) ; assertThat ( org.springframework.boot.cli.Invocation . await ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.boot.cli.Invocation . getErrorOutput ( ) , containsString ( STRING ) ) ; assertThat ( org.springframework.boot.cli.Invocation . getStandardOutput ( ) . length ( ) , equalTo ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException , java.lang.InterruptedException { Invocation org.springframework.boot.cli.Invocation = this . org.springframework.boot.cli.CommandLineInvoker . invoke ( STRING ) ; assertThat ( org.springframework.boot.cli.Invocation . await ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.boot.cli.Invocation . getErrorOutput ( ) . length ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.boot.cli.Invocation . getStandardOutput ( ) , startsWith ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException , java.lang.InterruptedException { Invocation org.springframework.boot.cli.Invocation = this . org.springframework.boot.cli.CommandLineInvoker . invoke ( STRING ) ; assertThat ( org.springframework.boot.cli.Invocation . await ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.boot.cli.Invocation . getErrorOutput ( ) . length ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.boot.cli.Invocation . getStandardOutput ( ) , startsWith ( STRING ) ) ; }  <METHOD_END>
