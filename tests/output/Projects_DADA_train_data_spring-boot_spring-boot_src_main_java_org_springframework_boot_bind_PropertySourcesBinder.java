<METHOD_START> public void ( PropertySources org.springframework.boot.bind.PropertySources ) { this . org.springframework.boot.bind.PropertySources = org.springframework.boot.bind.PropertySources ; }  <METHOD_END>
<METHOD_START> public void ( PropertySource < ? > org.springframework.boot.bind.PropertySource<?> ) { this( org.springframework.boot.bind.PropertySources ( org.springframework.boot.bind.PropertySource<> ) ); }  <METHOD_END>
<METHOD_START> public void ( ConfigurableEnvironment org.springframework.boot.bind.ConfigurableEnvironment ) { this( org.springframework.boot.bind.ConfigurableEnvironment . getPropertySources ( ) ); }  <METHOD_END>
<METHOD_START> public void void ( PropertySources org.springframework.boot.bind.PropertySources ) { this . org.springframework.boot.bind.PropertySources = org.springframework.boot.bind.PropertySources ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.bind.PropertySources org.springframework.boot.bind.PropertySources ( ) { return this . org.springframework.boot.bind.PropertySources ; }  <METHOD_END>
<METHOD_START> public void void ( ConversionService org.springframework.boot.bind.ConversionService ) { this . org.springframework.boot.bind.ConversionService = org.springframework.boot.bind.ConversionService ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.bind.ConversionService org.springframework.boot.bind.ConversionService ( ) { return this . org.springframework.boot.bind.ConversionService ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( java.lang.String java.lang.String ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; void ( java.lang.String , java.util.Map<java.lang.String,java.lang.Object> ) ; return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { PropertiesConfigurationFactory < java.lang.Object > org.springframework.boot.bind.PropertiesConfigurationFactory<java.lang.Object> = new PropertiesConfigurationFactory <> ( java.lang.Object ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.boot.bind.PropertiesConfigurationFactory<java.lang.Object> . setTargetName ( java.lang.String ) ; } if ( this . org.springframework.boot.bind.ConversionService != null ) { org.springframework.boot.bind.PropertiesConfigurationFactory<java.lang.Object> . setConversionService ( this . org.springframework.boot.bind.ConversionService ) ; } org.springframework.boot.bind.PropertiesConfigurationFactory<java.lang.Object> . setPropertySources ( this . org.springframework.boot.bind.PropertySources ) ; try { org.springframework.boot.bind.PropertiesConfigurationFactory<java.lang.Object> . bindPropertiesToTarget ( ) ; } catch ( BindException org.springframework.boot.bind.BindException ) { throw new java.lang.IllegalStateException ( STRING + java.lang.Object , org.springframework.boot.bind.BindException ) ; } }  <METHOD_END>
<METHOD_START> private static org.springframework.boot.bind.PropertySources org.springframework.boot.bind.PropertySources ( PropertySource < ? > org.springframework.boot.bind.PropertySource<?> ) { MutablePropertySources org.springframework.boot.bind.MutablePropertySources = new MutablePropertySources ( ) ; org.springframework.boot.bind.MutablePropertySources . addLast ( org.springframework.boot.bind.PropertySource<> ) ; return org.springframework.boot.bind.MutablePropertySources ; }  <METHOD_END>
