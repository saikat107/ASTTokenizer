<METHOD_START> @ Before public void void ( ) { this . sample.hypermedia.gson.MockMvc = MockMvcBuilders . webAppContextSetup ( this . sample.hypermedia.gson.WebApplicationContext ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . sample.hypermedia.gson.MockMvc . perform ( get ( STRING ) . accept ( MediaType . APPLICATION_JSON ) ) . andExpect ( status ( ) . isOk ( ) ) . andExpect ( jsonPath ( STRING ) . value ( STRING ) ) . andExpect ( jsonPath ( STRING ) . exists ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . sample.hypermedia.gson.MockMvc . perform ( get ( STRING ) . accept ( MediaType . APPLICATION_JSON ) ) . andExpect ( status ( ) . isOk ( ) ) . andExpect ( jsonPath ( STRING ) . doesNotExist ( ) ) . andExpect ( jsonPath ( STRING ) . isArray ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . sample.hypermedia.gson.MockMvc . perform ( get ( STRING ) . accept ( MediaType . APPLICATION_JSON ) ) . andExpect ( status ( ) . isOk ( ) ) . andExpect ( jsonPath ( STRING ) . doesNotExist ( ) ) ; }  <METHOD_END>
