<METHOD_START> public void ( ) { super( Jackson2ObjectMapperBuilder . json ( ) . build ( ) , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ObjectMapper org.springframework.web.servlet.view.json.ObjectMapper ) { super( org.springframework.web.servlet.view.json.ObjectMapper , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . java.lang.String = ( boolean ? STRING : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.util.Set<java.lang.String> = java.util.Collections . java.util.Set<java.lang.String> ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { this . java.util.Set<java.lang.String> = java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public final java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return this . java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { this . java.util.Set<java.lang.String> = java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( HttpServletRequest org.springframework.web.servlet.view.json.HttpServletRequest ) { if ( this . java.util.Set<java.lang.String> != null ) { for ( java.lang.String java.lang.String : this . java.util.Set<java.lang.String> ) { java.lang.String java.lang.String = org.springframework.web.servlet.view.json.HttpServletRequest . getParameter ( java.lang.String ) ; if ( StringUtils . isEmpty ( java.lang.String ) ) { continue; } if ( ! boolean ( java.lang.String ) ) { if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + java.lang.String ) ; } continue; } return java.lang.String ; } } return null ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.String java.lang.String ) { return java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( java.util.Map<java.lang.String,java.lang.Object> . int ( ) ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = ( ! CollectionUtils . isEmpty ( this . java.util.Set<java.lang.String> ) ? this . java.util.Set<java.lang.String> : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.lang.String> ( ) ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { if ( ! ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) instanceof BindingResult ) && java.util.Set<java.lang.String> . boolean ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) ) && ! java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) . boolean ( JsonView .class . java.lang.String ( ) ) && ! java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) . boolean ( FilterProvider .class . java.lang.String ( ) ) ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ) ; } } return ( this . boolean && java.util.Map<java.lang.String,java.lang.Object> . int ( ) == NUMBER ? java.util.Map<java.lang.String,java.lang.Object> . java.util.Collection<java.lang.Object> ( ) . java.util.Iterator<java.lang.Object> ( ) . java.lang.Object ( ) : java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , HttpServletRequest org.springframework.web.servlet.view.json.HttpServletRequest ) { java.lang.Object java.lang.Object = super. filterAndWrapModel ( java.util.Map<java.lang.String,java.lang.Object> , org.springframework.web.servlet.view.json.HttpServletRequest ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.view.json.HttpServletRequest ) ; if ( java.lang.String != null ) { if ( java.lang.Object instanceof MappingJacksonValue ) { ( ( MappingJacksonValue ) java.lang.Object ) . setJsonpFunction ( java.lang.String ) ; } else { MappingJacksonValue org.springframework.web.servlet.view.json.MappingJacksonValue = new MappingJacksonValue ( java.lang.Object ) ; org.springframework.web.servlet.view.json.MappingJacksonValue . setJsonpFunction ( java.lang.String ) ; java.lang.Object = org.springframework.web.servlet.view.json.MappingJacksonValue ; } } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( JsonGenerator org.springframework.web.servlet.view.json.JsonGenerator , java.lang.Object java.lang.Object ) throws java.io.IOException { if ( this . java.lang.String != null ) { org.springframework.web.servlet.view.json.JsonGenerator . writeRaw ( this . java.lang.String ) ; } java.lang.String java.lang.String = null ; if ( java.lang.Object instanceof MappingJacksonValue ) { java.lang.String = ( ( MappingJacksonValue ) java.lang.Object ) . getJsonpFunction ( ) ; } if ( java.lang.String != null ) { org.springframework.web.servlet.view.json.JsonGenerator . writeRaw ( STRING STRING ) ; org.springframework.web.servlet.view.json.JsonGenerator . writeRaw ( java.lang.String + STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( JsonGenerator org.springframework.web.servlet.view.json.JsonGenerator , java.lang.Object java.lang.Object ) throws java.io.IOException { java.lang.String java.lang.String = null ; if ( java.lang.Object instanceof MappingJacksonValue ) { java.lang.String = ( ( MappingJacksonValue ) java.lang.Object ) . getJsonpFunction ( ) ; } if ( java.lang.String != null ) { org.springframework.web.servlet.view.json.JsonGenerator . writeRaw ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( HttpServletRequest org.springframework.web.servlet.view.json.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.view.json.HttpServletResponse ) { if ( java.lang.String ( org.springframework.web.servlet.view.json.HttpServletRequest ) != null ) { org.springframework.web.servlet.view.json.HttpServletResponse . setContentType ( java.lang.String ) ; } else { super. setResponseContentType ( org.springframework.web.servlet.view.json.HttpServletRequest , org.springframework.web.servlet.view.json.HttpServletResponse ) ; } }  <METHOD_END>
