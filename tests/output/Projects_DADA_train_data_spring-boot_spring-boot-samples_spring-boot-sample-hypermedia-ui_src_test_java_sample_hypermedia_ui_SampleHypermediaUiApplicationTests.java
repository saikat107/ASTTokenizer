<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = this . sample.hypermedia.ui.TestRestTemplate . getForObject ( STRING , java.lang.String .class ) ; assertThat ( java.lang.String ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = this . sample.hypermedia.ui.TestRestTemplate . getForObject ( STRING , java.lang.String .class ) ; assertThat ( java.lang.String ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { HttpHeaders sample.hypermedia.ui.HttpHeaders = new HttpHeaders ( ) ; sample.hypermedia.ui.HttpHeaders . setAccept ( java.util.Arrays . java.util.List ( MediaType . APPLICATION_JSON ) ) ; ResponseEntity < java.lang.String > sample.hypermedia.ui.ResponseEntity<java.lang.String> = this . sample.hypermedia.ui.TestRestTemplate . exchange ( STRING , HttpMethod . GET , new HttpEntity < java.lang.Void > ( sample.hypermedia.ui.HttpHeaders ) , java.lang.String .class ) ; assertThat ( sample.hypermedia.ui.ResponseEntity<java.lang.String> . getBody ( ) ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { HttpHeaders sample.hypermedia.ui.HttpHeaders = new HttpHeaders ( ) ; sample.hypermedia.ui.HttpHeaders . setAccept ( java.util.Arrays . java.util.List ( MediaType . TEXT_HTML ) ) ; ResponseEntity < java.lang.String > sample.hypermedia.ui.ResponseEntity<java.lang.String> = this . sample.hypermedia.ui.TestRestTemplate . exchange ( STRING , HttpMethod . GET , new HttpEntity < java.lang.Void > ( sample.hypermedia.ui.HttpHeaders ) , java.lang.String .class ) ; assertThat ( sample.hypermedia.ui.ResponseEntity<java.lang.String> . getBody ( ) ) . contains ( STRING ) ; }  <METHOD_END>
