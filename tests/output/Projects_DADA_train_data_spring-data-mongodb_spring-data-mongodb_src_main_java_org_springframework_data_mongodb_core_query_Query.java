<METHOD_START> public static org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( CriteriaDefinition org.springframework.data.mongodb.core.query.CriteriaDefinition ) { return new org.springframework.data.mongodb.core.query.Query ( org.springframework.data.mongodb.core.query.CriteriaDefinition ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {}  <METHOD_END>
<METHOD_START> public void ( CriteriaDefinition org.springframework.data.mongodb.core.query.CriteriaDefinition ) { org.springframework.data.mongodb.core.query.Query ( org.springframework.data.mongodb.core.query.CriteriaDefinition ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( CriteriaDefinition org.springframework.data.mongodb.core.query.CriteriaDefinition ) { CriteriaDefinition org.springframework.data.mongodb.core.query.CriteriaDefinition = this . java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.CriteriaDefinition> . get ( org.springframework.data.mongodb.core.query.CriteriaDefinition . getKey ( ) ) ; java.lang.String java.lang.String = org.springframework.data.mongodb.core.query.CriteriaDefinition . getKey ( ) ; if ( org.springframework.data.mongodb.core.query.CriteriaDefinition == null ) { this . java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.CriteriaDefinition> . put ( java.lang.String , org.springframework.data.mongodb.core.query.CriteriaDefinition ) ; } else { throw new InvalidMongoDbApiUsageException ( java.lang.String . java.lang.String ( STRING + STRING , java.lang.String , serializeToJsonSafely ( org.springframework.data.mongodb.core.query.CriteriaDefinition . getCriteriaObject ( ) ) ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Field org.springframework.data.mongodb.core.query.Field ( ) { if ( org.springframework.data.mongodb.core.query.Field == null ) { this . org.springframework.data.mongodb.core.query.Field = new Field ( ) ; } return this . org.springframework.data.mongodb.core.query.Field ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( long long ) { this . long = long ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( Pageable org.springframework.data.mongodb.core.query.Pageable ) { if ( org.springframework.data.mongodb.core.query.Pageable . isUnpaged ( ) ) { return this ; } this . int = org.springframework.data.mongodb.core.query.Pageable . getPageSize ( ) ; this . long = org.springframework.data.mongodb.core.query.Pageable . getOffset ( ) ; return org.springframework.data.mongodb.core.query.Query ( org.springframework.data.mongodb.core.query.Pageable . getSort ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( Sort org.springframework.data.mongodb.core.query.Sort ) { if ( org.springframework.data.mongodb.core.query.Sort == null || ObjectUtils . nullSafeEquals ( Sort . unsorted ( ) , org.springframework.data.mongodb.core.query.Sort ) ) { return this ; } for ( Order org.springframework.data.mongodb.core.query.Order : org.springframework.data.mongodb.core.query.Sort ) { if ( org.springframework.data.mongodb.core.query.Order . isIgnoreCase ( ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING + STRING , org.springframework.data.mongodb.core.query.Order . getProperty ( ) ) ) ; } } if ( this . org.springframework.data.mongodb.core.query.Sort == null ) { this . org.springframework.data.mongodb.core.query.Sort = org.springframework.data.mongodb.core.query.Sort ; } else { this . org.springframework.data.mongodb.core.query.Sort = this . org.springframework.data.mongodb.core.query.Sort . and ( org.springframework.data.mongodb.core.query.Sort ) ; } return this ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( ) { return java.util.Set<java.lang.Class<?>> == null ? java.util.Collections .< java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( ) : java.util.Set<java.lang.Class<?>> ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) { Assert . notNull ( java.lang.Class<> , STRING ) ; Assert . notNull ( java.lang.Class<?>[] , STRING ) ; java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<?>[] ) { java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Document org.springframework.data.mongodb.core.query.Document ( ) { Document org.springframework.data.mongodb.core.query.Document = new Document ( ) ; for ( CriteriaDefinition org.springframework.data.mongodb.core.query.CriteriaDefinition : java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.CriteriaDefinition> . values ( ) ) { org.springframework.data.mongodb.core.query.Document . putAll ( org.springframework.data.mongodb.core.query.CriteriaDefinition . getCriteriaObject ( ) ) ; } if ( ! java.util.Set<java.lang.Class<?>> . boolean ( ) ) { org.springframework.data.mongodb.core.query.Document . put ( java.lang.String , java.util.Set<java.lang.Class<?>> ( ) ) ; } return org.springframework.data.mongodb.core.query.Document ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Document org.springframework.data.mongodb.core.query.Document ( ) { return this . org.springframework.data.mongodb.core.query.Field == null ? null : org.springframework.data.mongodb.core.query.Field . getFieldsObject ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Document org.springframework.data.mongodb.core.query.Document ( ) { if ( this . org.springframework.data.mongodb.core.query.Sort == null ) { return null ; } Document org.springframework.data.mongodb.core.query.Document = new Document ( ) ; for ( org . springframework . data . org.springframework.data.domain . org.springframework.data.domain . org.springframework.data.domain org.springframework.data.domain.Sort.Order : this . org.springframework.data.mongodb.core.query.Sort ) { org.springframework.data.mongodb.core.query.Document . put ( org.springframework.data.domain.Sort.Order . getProperty ( ) , org.springframework.data.domain.Sort.Order . isAscending ( ) ? NUMBER : - NUMBER ) ; } return org.springframework.data.mongodb.core.query.Document ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return this . long ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( long long ) { org.springframework.data.mongodb.core.query.Meta . setMaxTimeMsec ( long ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( long long , java.util.concurrent.TimeUnit java.util.concurrent.TimeUnit ) { org.springframework.data.mongodb.core.query.Meta . setMaxTime ( long , java.util.concurrent.TimeUnit ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( long long ) { org.springframework.data.mongodb.core.query.Meta . setMaxScan ( long ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( java.lang.String java.lang.String ) { org.springframework.data.mongodb.core.query.Meta . setComment ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( ) { org.springframework.data.mongodb.core.query.Meta . setSnapshot ( true ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( ) { org.springframework.data.mongodb.core.query.Meta . addFlag ( Meta . CursorOption . NO_TIMEOUT ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( ) { org.springframework.data.mongodb.core.query.Meta . addFlag ( Meta . CursorOption . EXHAUST ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( ) { org.springframework.data.mongodb.core.query.Meta . addFlag ( Meta . CursorOption . SLAVE_OK ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ( ) { org.springframework.data.mongodb.core.query.Meta . addFlag ( Meta . CursorOption . PARTIAL ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Meta org.springframework.data.mongodb.core.query.Meta ( ) { return org.springframework.data.mongodb.core.query.Meta ; }  <METHOD_END>
<METHOD_START> public void void ( Meta org.springframework.data.mongodb.core.query.Meta ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Meta , STRING ) ; this . org.springframework.data.mongodb.core.query.Meta = org.springframework.data.mongodb.core.query.Meta ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.data.mongodb.core.query.CriteriaDefinition> < CriteriaDefinition > java.util.List<org.springframework.data.mongodb.core.query.CriteriaDefinition> ( ) { return new java.util.ArrayList<org.springframework.data.mongodb.core.query.CriteriaDefinition> < CriteriaDefinition > ( this . java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.CriteriaDefinition> . values ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String . java.lang.String ( STRING , serializeToJsonSafely ( org.springframework.data.mongodb.core.query.Document ( ) ) , serializeToJsonSafely ( org.springframework.data.mongodb.core.query.Document ( ) ) , serializeToJsonSafely ( org.springframework.data.mongodb.core.query.Document ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null || ! java.lang.Class<? extends org.springframework.data.mongodb.core.query.Query> ( ) . boolean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { return false ; } return boolean ( ( org.springframework.data.mongodb.core.query.Query ) java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( org.springframework.data.mongodb.core.query.Query org.springframework.data.mongodb.core.query.Query ) { boolean boolean = this . java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.CriteriaDefinition> . equals ( org.springframework.data.mongodb.core.query.Query . java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.CriteriaDefinition> ) ; boolean boolean = nullSafeEquals ( this . org.springframework.data.mongodb.core.query.Field , org.springframework.data.mongodb.core.query.Query . org.springframework.data.mongodb.core.query.Field ) ; boolean boolean = nullSafeEquals ( this . org.springframework.data.mongodb.core.query.Sort , org.springframework.data.mongodb.core.query.Query . org.springframework.data.mongodb.core.query.Sort ) ; boolean boolean = nullSafeEquals ( this . java.lang.String , org.springframework.data.mongodb.core.query.Query . java.lang.String ) ; boolean boolean = this . long == org.springframework.data.mongodb.core.query.Query . long ; boolean boolean = this . int == org.springframework.data.mongodb.core.query.Query . int ; boolean boolean = nullSafeEquals ( this . org.springframework.data.mongodb.core.query.Meta , org.springframework.data.mongodb.core.query.Query . org.springframework.data.mongodb.core.query.Meta ) ; return boolean && boolean && boolean && boolean && boolean && boolean && boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ; int += NUMBER * java.util.Map<java.lang.String,org.springframework.data.mongodb.core.query.CriteriaDefinition> . hashCode ( ) ; int += NUMBER * nullSafeHashCode ( org.springframework.data.mongodb.core.query.Field ) ; int += NUMBER * nullSafeHashCode ( org.springframework.data.mongodb.core.query.Sort ) ; int += NUMBER * nullSafeHashCode ( java.lang.String ) ; int += NUMBER * long ; int += NUMBER * int ; int += NUMBER * nullSafeHashCode ( org.springframework.data.mongodb.core.query.Meta ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public static boolean boolean ( java.lang.String java.lang.String ) { return java.lang.String . boolean ( java.lang.String ) ; }  <METHOD_END>
