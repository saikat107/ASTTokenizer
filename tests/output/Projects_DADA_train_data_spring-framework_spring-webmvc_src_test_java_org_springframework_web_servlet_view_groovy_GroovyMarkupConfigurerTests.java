<METHOD_START> @ Before public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.view.groovy.StaticApplicationContext = new StaticApplicationContext ( ) ; this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer = new GroovyMarkupConfigurer ( ) ; this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . setResourceLoaderPath ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . setApplicationContext ( this . org.springframework.web.servlet.view.groovy.StaticApplicationContext ) ; this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . afterPropertiesSet ( ) ; TemplateEngine org.springframework.web.servlet.view.groovy.TemplateEngine = this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . getTemplateEngine ( ) ; assertNotNull ( org.springframework.web.servlet.view.groovy.TemplateEngine ) ; assertEquals ( MarkupTemplateEngine .class , org.springframework.web.servlet.view.groovy.TemplateEngine . getClass ( ) ) ; MarkupTemplateEngine org.springframework.web.servlet.view.groovy.MarkupTemplateEngine = ( MarkupTemplateEngine ) org.springframework.web.servlet.view.groovy.TemplateEngine ; TemplateConfiguration org.springframework.web.servlet.view.groovy.TemplateConfiguration = org.springframework.web.servlet.view.groovy.MarkupTemplateEngine . getTemplateConfiguration ( ) ; assertNotNull ( org.springframework.web.servlet.view.groovy.TemplateConfiguration ) ; assertEquals ( GroovyMarkupConfigurer .class , org.springframework.web.servlet.view.groovy.TemplateConfiguration . getClass ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . setApplicationContext ( this . org.springframework.web.servlet.view.groovy.StaticApplicationContext ) ; this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . setTemplateEngine ( new org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurerTests.TestTemplateEngine ( ) ) ; this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . afterPropertiesSet ( ) ; TemplateEngine org.springframework.web.servlet.view.groovy.TemplateEngine = this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . getTemplateEngine ( ) ; assertNotNull ( org.springframework.web.servlet.view.groovy.TemplateEngine ) ; assertEquals ( org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurerTests.TestTemplateEngine .class , org.springframework.web.servlet.view.groovy.TemplateEngine . getClass ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . setApplicationContext ( this . org.springframework.web.servlet.view.groovy.StaticApplicationContext ) ; this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . setCacheTemplates ( false ) ; this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . afterPropertiesSet ( ) ; TemplateEngine org.springframework.web.servlet.view.groovy.TemplateEngine = this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . getTemplateEngine ( ) ; assertNotNull ( org.springframework.web.servlet.view.groovy.TemplateEngine ) ; assertEquals ( MarkupTemplateEngine .class , org.springframework.web.servlet.view.groovy.TemplateEngine . getClass ( ) ) ; MarkupTemplateEngine org.springframework.web.servlet.view.groovy.MarkupTemplateEngine = ( MarkupTemplateEngine ) org.springframework.web.servlet.view.groovy.TemplateEngine ; TemplateConfiguration org.springframework.web.servlet.view.groovy.TemplateConfiguration = org.springframework.web.servlet.view.groovy.MarkupTemplateEngine . getTemplateConfiguration ( ) ; assertNotNull ( org.springframework.web.servlet.view.groovy.TemplateConfiguration ) ; assertFalse ( org.springframework.web.servlet.view.groovy.TemplateConfiguration . isCacheTemplates ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . setApplicationContext ( this . org.springframework.web.servlet.view.groovy.StaticApplicationContext ) ; java.lang.ClassLoader java.lang.ClassLoader = this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . createTemplateClassLoader ( ) ; assertNotNull ( java.lang.ClassLoader ) ; java.net.URLClassLoader java.net.URLClassLoader = ( java.net.URLClassLoader ) java.lang.ClassLoader ; assertThat ( java.util.Arrays . java.util.List<java.net.URL> ( java.net.URLClassLoader . java.net.URL[] ( ) ) , Matchers . hasSize ( NUMBER ) ) ; assertThat ( java.util.Arrays . java.util.List<java.net.URL> ( java.net.URLClassLoader . java.net.URL[] ( ) ) . java.net.URL ( NUMBER ) . java.lang.String ( ) , Matchers . endsWith ( STRING ) ) ; this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . setResourceLoaderPath ( java.lang.String + STRING ) ; java.lang.ClassLoader = this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . createTemplateClassLoader ( ) ; assertNotNull ( java.lang.ClassLoader ) ; java.net.URLClassLoader = ( java.net.URLClassLoader ) java.lang.ClassLoader ; assertThat ( java.util.Arrays . java.util.List<java.net.URL> ( java.net.URLClassLoader . java.net.URL[] ( ) ) , Matchers . hasSize ( NUMBER ) ) ; assertThat ( java.util.Arrays . java.util.List<java.net.URL> ( java.net.URLClassLoader . java.net.URL[] ( ) ) . java.net.URL ( NUMBER ) . java.lang.String ( ) , Matchers . endsWith ( STRING ) ) ; assertThat ( java.util.Arrays . java.util.List<java.net.URL> ( java.net.URLClassLoader . java.net.URL[] ( ) ) . java.net.URL ( NUMBER ) . java.lang.String ( ) , Matchers . endsWith ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( new TemplateConfiguration ( ) ); }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.net.URL java.net.URL = this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . resolveTemplate ( java.lang.Class<? extends org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurerTests> ( ) . java.lang.ClassLoader ( ) , java.lang.String + STRING ) ; Assert . assertNotNull ( java.net.URL ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocaleContextHolder . setLocale ( java.util.Locale . java.util.Locale ) ; java.net.URL java.net.URL = this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . resolveTemplate ( java.lang.Class<? extends org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurerTests> ( ) . java.lang.ClassLoader ( ) , java.lang.String + STRING ) ; Assert . assertNotNull ( java.net.URL ) ; Assert . assertThat ( java.net.URL . java.lang.String ( ) , Matchers . containsString ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocaleContextHolder . setLocale ( java.util.Locale . java.util.Locale ) ; java.net.URL java.net.URL = this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . resolveTemplate ( java.lang.Class<? extends org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurerTests> ( ) . java.lang.ClassLoader ( ) , java.lang.String + STRING ) ; Assert . assertNotNull ( java.net.URL ) ; Assert . assertThat ( java.net.URL . java.lang.String ( ) , Matchers . containsString ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocaleContextHolder . setLocale ( java.util.Locale . java.util.Locale ) ; java.net.URL java.net.URL = this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . resolveTemplate ( java.lang.Class<? extends org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurerTests> ( ) . java.lang.ClassLoader ( ) , java.lang.String + STRING ) ; Assert . assertNotNull ( java.net.URL ) ; Assert . assertThat ( java.net.URL . java.lang.String ( ) , Matchers . containsString ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.io.IOException .class ) public void void ( ) java.lang.Exception { LocaleContextHolder . setLocale ( java.util.Locale . java.util.Locale ) ; this . org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer . resolveTemplate ( java.lang.Class<? extends org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurerTests> ( ) . java.lang.ClassLoader ( ) , java.lang.String + STRING ) ; Assert . fail ( ) ; }  <METHOD_END>
