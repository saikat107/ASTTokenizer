<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , java.lang.Class<? extends org.springframework.integration.jpa.config.xml.JpaInboundChannelAdapterParserTests> ( ) , STRING ) ; final AbstractMessageChannel org.springframework.integration.jpa.config.xml.AbstractMessageChannel = TestUtils . getPropertyValue ( this . org.springframework.integration.jpa.config.xml.SourcePollingChannelAdapter , STRING , AbstractMessageChannel .class ) ; assertEquals ( STRING , org.springframework.integration.jpa.config.xml.AbstractMessageChannel . getComponentName ( ) ) ; final JpaExecutor org.springframework.integration.jpa.config.xml.JpaExecutor = TestUtils . getPropertyValue ( this . org.springframework.integration.jpa.config.xml.SourcePollingChannelAdapter , STRING , JpaExecutor .class ) ; assertNotNull ( org.springframework.integration.jpa.config.xml.JpaExecutor ) ; final java.lang.Class<?> < ? > java.lang.Class<?> = TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING , java.lang.Class .class ) ; assertEquals ( STRING , java.lang.Class<> . java.lang.String ( ) ) ; final JpaOperations org.springframework.integration.jpa.config.xml.JpaOperations = TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING , JpaOperations .class ) ; assertNotNull ( org.springframework.integration.jpa.config.xml.JpaOperations ) ; assertTrue ( TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING , java.lang.Boolean .class ) ) ; ParameterSource org.springframework.integration.jpa.config.xml.ParameterSource = this . org.springframework.integration.jpa.config.xml.ConfigurableApplicationContext . getBean ( ParameterSource .class ) ; assertSame ( org.springframework.integration.jpa.config.xml.ParameterSource , TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , java.lang.Class<? extends org.springframework.integration.jpa.config.xml.JpaInboundChannelAdapterParserTests> ( ) , STRING ) ; final AbstractMessageChannel org.springframework.integration.jpa.config.xml.AbstractMessageChannel = TestUtils . getPropertyValue ( this . org.springframework.integration.jpa.config.xml.SourcePollingChannelAdapter , STRING , AbstractMessageChannel .class ) ; assertEquals ( STRING , org.springframework.integration.jpa.config.xml.AbstractMessageChannel . getComponentName ( ) ) ; final JpaExecutor org.springframework.integration.jpa.config.xml.JpaExecutor = TestUtils . getPropertyValue ( this . org.springframework.integration.jpa.config.xml.SourcePollingChannelAdapter , STRING , JpaExecutor .class ) ; assertNotNull ( org.springframework.integration.jpa.config.xml.JpaExecutor ) ; final java.lang.Class<?> < ? > java.lang.Class<?> = TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING , java.lang.Class .class ) ; assertEquals ( STRING , java.lang.Class<> . java.lang.String ( ) ) ; final JpaOperations org.springframework.integration.jpa.config.xml.JpaOperations = TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING , JpaOperations .class ) ; assertNotNull ( org.springframework.integration.jpa.config.xml.JpaOperations ) ; LiteralExpression org.springframework.integration.jpa.config.xml.LiteralExpression = TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING , LiteralExpression .class ) ; assertNotNull ( org.springframework.integration.jpa.config.xml.LiteralExpression ) ; assertEquals ( STRING , TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.LiteralExpression , STRING ) ) ; assertTrue ( TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING , java.lang.Boolean .class ) ) ; assertTrue ( TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING , java.lang.Boolean .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , java.lang.Class<? extends org.springframework.integration.jpa.config.xml.JpaInboundChannelAdapterParserTests> ( ) , STRING ) ; final AbstractMessageChannel org.springframework.integration.jpa.config.xml.AbstractMessageChannel = TestUtils . getPropertyValue ( this . org.springframework.integration.jpa.config.xml.SourcePollingChannelAdapter , STRING , AbstractMessageChannel .class ) ; assertEquals ( STRING , org.springframework.integration.jpa.config.xml.AbstractMessageChannel . getComponentName ( ) ) ; final JpaExecutor org.springframework.integration.jpa.config.xml.JpaExecutor = TestUtils . getPropertyValue ( this . org.springframework.integration.jpa.config.xml.SourcePollingChannelAdapter , STRING , JpaExecutor .class ) ; assertNotNull ( org.springframework.integration.jpa.config.xml.JpaExecutor ) ; final java.lang.Class<?> < ? > java.lang.Class<?> = TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING , java.lang.Class .class ) ; assertEquals ( STRING , java.lang.Class<> . java.lang.String ( ) ) ; final JpaOperations org.springframework.integration.jpa.config.xml.JpaOperations = TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING , JpaOperations .class ) ; assertNotNull ( org.springframework.integration.jpa.config.xml.JpaOperations ) ; SpelExpression org.springframework.integration.jpa.config.xml.SpelExpression = TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.JpaExecutor , STRING , SpelExpression .class ) ; assertNotNull ( org.springframework.integration.jpa.config.xml.SpelExpression ) ; assertEquals ( STRING , TestUtils . getPropertyValue ( org.springframework.integration.jpa.config.xml.SpelExpression , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.integration.jpa.config.xml.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , java.lang.Class<? extends org.springframework.integration.jpa.config.xml.JpaInboundChannelAdapterParserTests> ( ) ) ; assertNotNull ( org.springframework.integration.jpa.config.xml.ConfigurableApplicationContext . getBean ( STRING , JpaExecutor .class ) ) ; assertNotNull ( org.springframework.integration.jpa.config.xml.ConfigurableApplicationContext . getBean ( STRING , JpaExecutor .class ) ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { if ( org.springframework.integration.jpa.config.xml.ConfigurableApplicationContext != null ) { org.springframework.integration.jpa.config.xml.ConfigurableApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { org.springframework.integration.jpa.config.xml.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( java.lang.String , java.lang.Class<> ) ; org.springframework.integration.jpa.config.xml.SourcePollingChannelAdapter = this . org.springframework.integration.jpa.config.xml.ConfigurableApplicationContext . getBean ( java.lang.String , SourcePollingChannelAdapter .class ) ; }  <METHOD_END>
