<METHOD_START> @ Test public void void ( ) java.lang.Exception { RFC6587SyslogDeserializer org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer = new RFC6587SyslogDeserializer ( ) ; java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> = org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer . deserialize ( new java.io.ByteArrayInputStream ( java.lang.String . byte[] ( ) ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,> . get ( SyslogHeaders . FACILITY ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,> . get ( SyslogHeaders . SEVERITY ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,> . get ( SyslogHeaders . VERSION ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . TIMESTAMP ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . HOST ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . APP_NAME ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . PROCID ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . MSGID ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . MESSAGE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RFC6587SyslogDeserializer org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer = new RFC6587SyslogDeserializer ( ) ; java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> = org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer . deserialize ( new java.io.ByteArrayInputStream ( java.lang.String . byte[] ( ) ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,> . get ( SyslogHeaders . FACILITY ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,> . get ( SyslogHeaders . SEVERITY ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,> . get ( SyslogHeaders . VERSION ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . TIMESTAMP ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . HOST ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . APP_NAME ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . PROCID ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . MSGID ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . MESSAGE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RFC6587SyslogDeserializer org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer = new RFC6587SyslogDeserializer ( ) ; java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> = org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer . deserialize ( new java.io.ByteArrayInputStream ( java.lang.String . byte[] ( ) ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,> . get ( SyslogHeaders . FACILITY ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,> . get ( SyslogHeaders . SEVERITY ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,> . get ( SyslogHeaders . VERSION ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . TIMESTAMP ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . HOST ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . APP_NAME ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . PROCID ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . MSGID ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . MESSAGE ) ) ; assertEquals ( NUMBER , ( ( java.util.List<?> < ? > ) java.util.Map<java.lang.String,> . get ( SyslogHeaders . STRUCTURED_DATA ) ) . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RFC6587SyslogDeserializer org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer = new RFC6587SyslogDeserializer ( ) ; java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> = org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer . deserialize ( new java.io.ByteArrayInputStream ( java.lang.String . byte[] ( ) ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . DECODE_ERRORS ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . MESSAGE ) ) ; assertEquals ( NUMBER , ( ( java.util.List<?> < ? > ) java.util.Map<java.lang.String,> . get ( SyslogHeaders . STRUCTURED_DATA ) ) . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RFC6587SyslogDeserializer org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer = new RFC6587SyslogDeserializer ( ) ; java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> = org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer . deserialize ( new java.io.ByteArrayInputStream ( java.lang.String . byte[] ( ) ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . DECODE_ERRORS ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . MESSAGE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RFC6587SyslogDeserializer org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer = new RFC6587SyslogDeserializer ( ) ; java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> = org.springframework.integration.syslog.inbound.RFC6587SyslogDeserializer . deserialize ( new java.io.ByteArrayInputStream ( java.lang.String . byte[] ( ) ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,> . get ( SyslogHeaders . DECODE_ERRORS ) ) ; }  <METHOD_END>
