<METHOD_START> public void ( java.lang.String java.lang.String , BeanDefinition org.springframework.aop.config.BeanDefinition ) { this( java.lang.String , org.springframework.aop.config.BeanDefinition , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , BeanDefinition org.springframework.aop.config.BeanDefinition , BeanDefinition org.springframework.aop.config.BeanDefinition ) { Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.aop.config.BeanDefinition , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.aop.config.BeanDefinition = org.springframework.aop.config.BeanDefinition ; void ( org.springframework.aop.config.BeanDefinition , org.springframework.aop.config.BeanDefinition ) ; }  <METHOD_END>
<METHOD_START> private void void ( BeanDefinition org.springframework.aop.config.BeanDefinition , BeanDefinition org.springframework.aop.config.BeanDefinition ) { MutablePropertyValues org.springframework.aop.config.MutablePropertyValues = org.springframework.aop.config.BeanDefinition . getPropertyValues ( ) ; BeanReference org.springframework.aop.config.BeanReference = ( BeanReference ) org.springframework.aop.config.MutablePropertyValues . getPropertyValue ( STRING ) . getValue ( ) ; if ( org.springframework.aop.config.BeanDefinition != null ) { this . org.springframework.aop.config.BeanReference[] = new BeanReference [] { org.springframework.aop.config.BeanReference } ; this . org.springframework.aop.config.BeanDefinition[] = new BeanDefinition [] { org.springframework.aop.config.BeanDefinition , org.springframework.aop.config.BeanDefinition } ; this . java.lang.String = java.lang.String ( org.springframework.aop.config.BeanReference , org.springframework.aop.config.BeanDefinition ) ; } else { BeanReference org.springframework.aop.config.BeanReference = ( BeanReference ) org.springframework.aop.config.MutablePropertyValues . getPropertyValue ( STRING ) . getValue ( ) ; this . org.springframework.aop.config.BeanReference[] = new BeanReference [] { org.springframework.aop.config.BeanReference , org.springframework.aop.config.BeanReference } ; this . org.springframework.aop.config.BeanDefinition[] = new BeanDefinition [] { org.springframework.aop.config.BeanDefinition } ; this . java.lang.String = java.lang.String ( org.springframework.aop.config.BeanReference , org.springframework.aop.config.BeanReference ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( BeanReference org.springframework.aop.config.BeanReference , BeanDefinition org.springframework.aop.config.BeanDefinition ) { return new java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( org.springframework.aop.config.BeanReference . getBeanName ( ) ) . append ( STRING ) . append ( org.springframework.aop.config.BeanDefinition . getPropertyValues ( ) . getPropertyValue ( STRING ) . getValue ( ) ) . append ( STRING ) . toString ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( BeanReference org.springframework.aop.config.BeanReference , BeanReference org.springframework.aop.config.BeanReference ) { return new java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( org.springframework.aop.config.BeanReference . getBeanName ( ) ) . append ( STRING ) . append ( org.springframework.aop.config.BeanReference . getBeanName ( ) ) . append ( STRING ) . toString ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.config.BeanDefinition [] org.springframework.aop.config.BeanDefinition[] ( ) { return this . org.springframework.aop.config.BeanDefinition[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.config.BeanReference [] org.springframework.aop.config.BeanReference[] ( ) { return this . org.springframework.aop.config.BeanReference[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) { return this . org.springframework.aop.config.BeanDefinition . getSource ( ) ; }  <METHOD_END>
