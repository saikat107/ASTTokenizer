<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> = new java.util.ArrayList<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > ( ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; ReplaceOperation org.springframework.data.rest.webmvc.json.patch.ReplaceOperation = new ReplaceOperation ( STRING , true ) ; org.springframework.data.rest.webmvc.json.patch.ReplaceOperation . perform ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> , Todo .class ) ; assertTrue ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . isComplete ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> = new java.util.ArrayList<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > ( ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; ReplaceOperation org.springframework.data.rest.webmvc.json.patch.ReplaceOperation = new ReplaceOperation ( STRING , STRING ) ; org.springframework.data.rest.webmvc.json.patch.ReplaceOperation . perform ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> , Todo .class ) ; assertEquals ( STRING , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . getDescription ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> = new java.util.ArrayList<org.springframework.data.rest.webmvc.json.patch.Todo> < Todo > ( ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . add ( new Todo ( NUMBER , STRING , false ) ) ; ReplaceOperation org.springframework.data.rest.webmvc.json.patch.ReplaceOperation = new ReplaceOperation ( STRING , NUMBER ) ; org.springframework.data.rest.webmvc.json.patch.ReplaceOperation . perform ( java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> , Todo .class ) ; assertEquals ( STRING , java.util.List<org.springframework.data.rest.webmvc.json.patch.Todo> . get ( NUMBER ) . getDescription ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Todo org.springframework.data.rest.webmvc.json.patch.Todo = new Todo ( NUMBER , STRING , false ) ; ObjectMapper org.springframework.data.rest.webmvc.json.patch.ObjectMapper = new ObjectMapper ( ) ; ReplaceOperation org.springframework.data.rest.webmvc.json.patch.ReplaceOperation = new ReplaceOperation ( STRING , new JsonLateObjectEvaluator ( org.springframework.data.rest.webmvc.json.patch.ObjectMapper , org.springframework.data.rest.webmvc.json.patch.ObjectMapper . readTree ( STRING ) ) ) ; org.springframework.data.rest.webmvc.json.patch.ReplaceOperation . perform ( org.springframework.data.rest.webmvc.json.patch.Todo , Todo .class ) ; assertNotNull ( org.springframework.data.rest.webmvc.json.patch.Todo . getType ( ) ) ; assertNotNull ( org.springframework.data.rest.webmvc.json.patch.Todo . getType ( ) . getValue ( ) ) ; assertTrue ( org.springframework.data.rest.webmvc.json.patch.Todo . getType ( ) . getValue ( ) . equals ( STRING ) ) ; }  <METHOD_END>
