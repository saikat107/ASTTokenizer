<METHOD_START> void ( SessionFactory < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> , java.util.Comparator<java.io.File> < java.io.File > java.util.Comparator<java.io.File> ) { super( new SftpInboundFileSynchronizer ( org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> ) ); this . target = new SftpInboundFileSynchronizingMessageSource ( this . synchronizer , java.util.Comparator<java.io.File> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.sftp.dsl.SftpInboundChannelAdapterSpec org.springframework.integration.sftp.dsl.SftpInboundChannelAdapterSpec ( java.lang.String java.lang.String ) { return filter ( org.springframework.integration.sftp.dsl.CompositeFileListFilter<ChannelSftp.LsEntry> ( new SftpSimplePatternFileListFilter ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.sftp.dsl.SftpInboundChannelAdapterSpec org.springframework.integration.sftp.dsl.SftpInboundChannelAdapterSpec ( java.lang.String java.lang.String ) { return filter ( org.springframework.integration.sftp.dsl.CompositeFileListFilter<ChannelSftp.LsEntry> ( new SftpRegexPatternFileListFilter ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private org.springframework.integration.sftp.dsl.CompositeFileListFilter<ChannelSftp.LsEntry> < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.CompositeFileListFilter<ChannelSftp.LsEntry> ( FileListFilter < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.FileListFilter<ChannelSftp.LsEntry> ) { CompositeFileListFilter < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.CompositeFileListFilter<ChannelSftp.LsEntry> = new CompositeFileListFilter <> ( ) ; org.springframework.integration.sftp.dsl.CompositeFileListFilter<ChannelSftp.LsEntry> . addFilters ( org.springframework.integration.sftp.dsl.FileListFilter<ChannelSftp.LsEntry> , new SftpPersistentAcceptOnceFileListFilter ( new SimpleMetadataStore ( ) , STRING ) ) ; return org.springframework.integration.sftp.dsl.CompositeFileListFilter<ChannelSftp.LsEntry> ; }  <METHOD_END>
