<METHOD_START> @ Test public void void ( ) { MappingContextEvent < E , P > org.springframework.data.mapping.context.MappingContextEvent<E,P> = new MappingContextEvent <> ( org.springframework.data.mapping.context.MappingContext<,> , E ) ; assertThat ( org.springframework.data.mapping.context.MappingContextEvent<E,P> . getPersistentEntity ( ) ) . isEqualTo ( E ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MappingContextEvent < E , P > org.springframework.data.mapping.context.MappingContextEvent<E,P> = new MappingContextEvent <> ( org.springframework.data.mapping.context.MappingContext<,> , E ) ; assertThat ( org.springframework.data.mapping.context.MappingContextEvent<E,P> . getSource ( ) ) . isEqualTo ( org.springframework.data.mapping.context.MappingContext<,> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MappingContextEvent < E , P > org.springframework.data.mapping.context.MappingContextEvent<E,P> = new MappingContextEvent <> ( org.springframework.data.mapping.context.MappingContext<,> , E ) ; assertThat ( org.springframework.data.mapping.context.MappingContextEvent<E,P> . wasEmittedBy ( org.springframework.data.mapping.context.MappingContext<,> ) ) . isTrue ( ) ; assertThat ( org.springframework.data.mapping.context.MappingContextEvent<E,P> . wasEmittedBy ( org.springframework.data.mapping.context.MappingContext ) ) . isFalse ( ) ; }  <METHOD_END>
