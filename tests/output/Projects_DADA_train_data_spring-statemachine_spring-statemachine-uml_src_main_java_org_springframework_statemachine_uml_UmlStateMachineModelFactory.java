<METHOD_START> public void ( Resource org.springframework.statemachine.uml.Resource ) { Assert . notNull ( org.springframework.statemachine.uml.Resource , STRING ) ; this . org.springframework.statemachine.uml.Resource = org.springframework.statemachine.uml.Resource ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.uml.StateMachineModel<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.uml.StateMachineModel<java.lang.String,java.lang.String> ( ) { Model org.springframework.statemachine.uml.Model = null ; try { org.springframework.statemachine.uml.Model = UmlUtils . getModel ( java.net.URI ( org.springframework.statemachine.uml.Resource ( ) ) . getPath ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.statemachine.uml.Resource + STRING + java.lang.String , java.io.IOException ) ; } UmlModelParser org.springframework.statemachine.uml.UmlModelParser = new UmlModelParser ( org.springframework.statemachine.uml.Model , this ) ; DataHolder org.springframework.statemachine.uml.DataHolder = org.springframework.statemachine.uml.UmlModelParser . parseModel ( ) ; return new DefaultStateMachineModel < java.lang.String , java.lang.String > ( null , org.springframework.statemachine.uml.DataHolder . getStatesData ( ) , org.springframework.statemachine.uml.DataHolder . getTransitionsData ( ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.statemachine.uml.Resource org.springframework.statemachine.uml.Resource ( ) { if ( org.springframework.statemachine.uml.Resource != null ) { return org.springframework.statemachine.uml.Resource ; } else { return getResourceLoader ( ) . getResource ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private java.net.URI java.net.URI ( Resource org.springframework.statemachine.uml.Resource ) throws java.io.IOException { try { return org.springframework.statemachine.uml.Resource . getFile ( ) . toURI ( ) ; } catch ( java.lang.Exception java.lang.Exception ) {		} java.nio.file.Path java.nio.file.Path = java.nio.file.Files . java.nio.file.Path ( null , STRING ) ; FileCopyUtils . copy ( org.springframework.statemachine.uml.Resource . getInputStream ( ) , new java.io.FileOutputStream ( java.nio.file.Path . java.io.File ( ) ) ) ; return java.nio.file.Path . java.net.URI ( ) ; }  <METHOD_END>
