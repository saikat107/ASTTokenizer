<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.integration.store.MessageStoreTests.TestMessageStore org.springframework.integration.store.MessageStoreTests.TestMessageStore = new org.springframework.integration.store.MessageStoreTests.TestMessageStore ( ) ; org.springframework.integration.store.MessageStoreTests.TestMessageStore . setExpiryCallbacks ( java.util.Collections .< MessageGroupCallback > java.util.List<org.springframework.integration.store.MessageGroupCallback> ( ( messageGroupStore , group ) -> { } ) ) ; assertEquals ( NUMBER , ( ( java.util.Collection<?> < ? > ) ReflectionTestUtils . getField ( org.springframework.integration.store.MessageStoreTests.TestMessageStore , STRING ) ) . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.integration.store.MessageStoreTests.TestMessageStore org.springframework.integration.store.MessageStoreTests.TestMessageStore = new org.springframework.integration.store.MessageStoreTests.TestMessageStore ( ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; org.springframework.integration.store.MessageStoreTests.TestMessageStore . registerMessageGroupExpiryCallback ( ( messageGroupStore , group ) -> { list . add ( group . getOne ( ) . getPayload ( ) . toString ( ) ) ; messageGroupStore . removeMessageGroup ( group . getGroupId ( ) ) ; } ) ; org.springframework.integration.store.MessageStoreTests.TestMessageStore . expireMessageGroups ( - NUMBER ) ; assertEquals ( STRING , java.util.List<java.lang.String> . java.lang.String ( ) ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageStoreTests.TestMessageStore . org.springframework.integration.store.MessageGroup ( STRING ) . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.integration.store.MessageStoreTests.TestMessageStore org.springframework.integration.store.MessageStoreTests.TestMessageStore = new org.springframework.integration.store.MessageStoreTests.TestMessageStore ( ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageStoreTests.TestMessageStore . getMessageGroupCount ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.integration.store.MessageStoreTests.TestMessageStore org.springframework.integration.store.MessageStoreTests.TestMessageStore = new org.springframework.integration.store.MessageStoreTests.TestMessageStore ( ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageStoreTests.TestMessageStore . getMessageCountForAllMessageGroups ( ) ) ; }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.integration.store.MessageGroup> < MessageGroup > java.util.Iterator<org.springframework.integration.store.MessageGroup> ( ) { return java.util.Collections . java.util.List ( org.springframework.integration.store.MessageGroup ) . iterator ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , org.springframework.integration.store.Message<?> < ? > ... org.springframework.integration.store.Message<?>[] ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.store.MessageGroup org.springframework.integration.store.MessageGroup ( java.lang.Object java.lang.Object ) { return boolean ? new SimpleMessageGroup ( java.lang.Object ) : org.springframework.integration.store.MessageGroup ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.util.Collection<org.springframework.integration.store.Message<?>> < Message < ? > > java.util.Collection<org.springframework.integration.store.Message<?>> ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { if ( java.lang.Object . boolean ( org.springframework.integration.store.MessageGroup . getGroupId ( ) ) ) { boolean = true ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , int int ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.store.Message<?> < ? > org.springframework.integration.store.Message<?> ( java.lang.Object java.lang.Object ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.lang.Object java.lang.Object ) { return NUMBER ; }  <METHOD_END>
