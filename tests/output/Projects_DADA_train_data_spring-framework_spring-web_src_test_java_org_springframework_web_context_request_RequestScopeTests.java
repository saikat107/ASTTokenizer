<METHOD_START> @ Before public void void ( ) java.lang.Exception { this . org.springframework.web.context.request.DefaultListableBeanFactory . registerScope ( STRING , new RequestScope ( ) ) ; this . org.springframework.web.context.request.DefaultListableBeanFactory . setBeanExpressionResolver ( new StandardBeanExpressionResolver ( ) ) ; XmlBeanDefinitionReader org.springframework.web.context.request.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( this . org.springframework.web.context.request.DefaultListableBeanFactory ) ; org.springframework.web.context.request.XmlBeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.web.context.request.RequestScopeTests> ( ) ) ) ; this . org.springframework.web.context.request.DefaultListableBeanFactory . preInstantiateSingletons ( ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { RequestContextHolder . setRequestAttributes ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockHttpServletRequest org.springframework.web.context.request.MockHttpServletRequest = new MockHttpServletRequest ( ) ; org.springframework.web.context.request.MockHttpServletRequest . setContextPath ( STRING ) ; RequestAttributes org.springframework.web.context.request.RequestAttributes = new ServletRequestAttributes ( org.springframework.web.context.request.MockHttpServletRequest ) ; RequestContextHolder . setRequestAttributes ( org.springframework.web.context.request.RequestAttributes ) ; java.lang.String java.lang.String = STRING ; assertNull ( org.springframework.web.context.request.MockHttpServletRequest . getAttribute ( java.lang.String ) ) ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ; assertEquals ( STRING , org.springframework.web.context.request.TestBean . getName ( ) ) ; assertSame ( org.springframework.web.context.request.TestBean , org.springframework.web.context.request.MockHttpServletRequest . getAttribute ( java.lang.String ) ) ; assertSame ( org.springframework.web.context.request.TestBean , this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockHttpServletRequest org.springframework.web.context.request.MockHttpServletRequest = new MockHttpServletRequest ( ) ; ServletRequestAttributes org.springframework.web.context.request.ServletRequestAttributes = new ServletRequestAttributes ( org.springframework.web.context.request.MockHttpServletRequest ) ; RequestContextHolder . setRequestAttributes ( org.springframework.web.context.request.ServletRequestAttributes ) ; java.lang.String java.lang.String = STRING ; assertNull ( org.springframework.web.context.request.MockHttpServletRequest . getAttribute ( java.lang.String ) ) ; DerivedTestBean org.springframework.web.context.request.DerivedTestBean = ( DerivedTestBean ) this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ; assertSame ( org.springframework.web.context.request.DerivedTestBean , org.springframework.web.context.request.MockHttpServletRequest . getAttribute ( java.lang.String ) ) ; assertSame ( org.springframework.web.context.request.DerivedTestBean , this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ) ; org.springframework.web.context.request.ServletRequestAttributes . requestCompleted ( ) ; assertTrue ( org.springframework.web.context.request.DerivedTestBean . wasDestroyed ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockHttpServletRequest org.springframework.web.context.request.MockHttpServletRequest = new MockHttpServletRequest ( ) ; RequestAttributes org.springframework.web.context.request.RequestAttributes = new ServletRequestAttributes ( org.springframework.web.context.request.MockHttpServletRequest ) ; RequestContextHolder . setRequestAttributes ( org.springframework.web.context.request.RequestAttributes ) ; java.lang.String java.lang.String = STRING ; assertNull ( org.springframework.web.context.request.MockHttpServletRequest . getAttribute ( java.lang.String ) ) ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ; assertTrue ( org.springframework.web.context.request.MockHttpServletRequest . getAttribute ( java.lang.String ) instanceof FactoryBean ) ; assertSame ( org.springframework.web.context.request.TestBean , this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockHttpServletRequest org.springframework.web.context.request.MockHttpServletRequest = new MockHttpServletRequest ( ) ; RequestAttributes org.springframework.web.context.request.RequestAttributes = new ServletRequestAttributes ( org.springframework.web.context.request.MockHttpServletRequest ) ; RequestContextHolder . setRequestAttributes ( org.springframework.web.context.request.RequestAttributes ) ; try { java.lang.String java.lang.String = STRING ; assertNull ( org.springframework.web.context.request.MockHttpServletRequest . getAttribute ( java.lang.String ) ) ; this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ; fail ( STRING ) ; } catch ( BeanCreationException org.springframework.web.context.request.BeanCreationException ) { assertTrue ( org.springframework.web.context.request.BeanCreationException . contains ( BeanCurrentlyInCreationException .class ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MockHttpServletRequest org.springframework.web.context.request.MockHttpServletRequest = new MockHttpServletRequest ( ) ; ServletRequestAttributes org.springframework.web.context.request.ServletRequestAttributes = new ServletRequestAttributes ( org.springframework.web.context.request.MockHttpServletRequest ) ; RequestContextHolder . setRequestAttributes ( org.springframework.web.context.request.ServletRequestAttributes ) ; java.lang.String java.lang.String = STRING ; assertNull ( org.springframework.web.context.request.MockHttpServletRequest . getAttribute ( java.lang.String ) ) ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ; assertNotNull ( org.springframework.web.context.request.MockHttpServletRequest . getAttribute ( java.lang.String ) ) ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) org.springframework.web.context.request.TestBean . getSpouse ( ) ; assertSame ( org.springframework.web.context.request.TestBean , this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ) ; org.springframework.web.context.request.ServletRequestAttributes . requestCompleted ( ) ; assertTrue ( org.springframework.web.context.request.TestBean . wasDestroyed ( ) ) ; assertTrue ( org.springframework.web.context.request.TestBean . wasDestroyed ( ) ) ; org.springframework.web.context.request.MockHttpServletRequest = new MockHttpServletRequest ( ) ; org.springframework.web.context.request.ServletRequestAttributes = new ServletRequestAttributes ( org.springframework.web.context.request.MockHttpServletRequest ) ; RequestContextHolder . setRequestAttributes ( org.springframework.web.context.request.ServletRequestAttributes ) ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ; assertNotSame ( org.springframework.web.context.request.TestBean , org.springframework.web.context.request.TestBean ) ; assertNotSame ( org.springframework.web.context.request.TestBean , org.springframework.web.context.request.TestBean . getSpouse ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockHttpServletRequest org.springframework.web.context.request.MockHttpServletRequest = new MockHttpServletRequest ( ) ; ServletRequestAttributes org.springframework.web.context.request.ServletRequestAttributes = new ServletRequestAttributes ( org.springframework.web.context.request.MockHttpServletRequest ) ; RequestContextHolder . setRequestAttributes ( org.springframework.web.context.request.ServletRequestAttributes ) ; java.lang.String java.lang.String = STRING ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ; assertNull ( org.springframework.web.context.request.MockHttpServletRequest . getAttribute ( java.lang.String ) ) ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) org.springframework.web.context.request.TestBean . getSpouse ( ) ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) this . org.springframework.web.context.request.DefaultListableBeanFactory . getBean ( java.lang.String ) ; assertSame ( org.springframework.web.context.request.TestBean , org.springframework.web.context.request.TestBean ) ; assertSame ( org.springframework.web.context.request.TestBean , org.springframework.web.context.request.TestBean . getSpouse ( ) ) ; org.springframework.web.context.request.ServletRequestAttributes . requestCompleted ( ) ; assertTrue ( org.springframework.web.context.request.TestBean . wasDestroyed ( ) ) ; assertFalse ( org.springframework.web.context.request.TestBean . wasDestroyed ( ) ) ; }  <METHOD_END>
