<METHOD_START> public void ( ) { this( new LinkedMultiValueMap <> ( NUMBER ) , false ); }  <METHOD_END>
<METHOD_START> private void ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> , boolean boolean ) { Assert . notNull ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> , STRING ) ; if ( boolean ) { java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> = new LinkedMultiValueMap <> ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> . int ( ) ) ; for ( Entry < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > org.springframework.messaging.simp.stomp.Entry<java.lang.String,java.util.List<java.lang.String>> : java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.Set<java.util.Map.Entry<java.lang.String,java.util.List<java.lang.String>>> ( ) ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Collections . java.util.List ( org.springframework.messaging.simp.stomp.Entry<java.lang.String,java.util.List<java.lang.String>> . getValue ( ) ) ; java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( org.springframework.messaging.simp.stomp.Entry<java.lang.String,java.util.List<java.lang.String>> . getKey ( ) , java.util.List<java.lang.String> ) ; } this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> = java.util.Collections . java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) ; } else { this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> ; } }  <METHOD_END>
<METHOD_START> public void void ( MimeType org.springframework.messaging.simp.stomp.MimeType ) { Assert . isTrue ( ! org.springframework.messaging.simp.stomp.MimeType . isWildcardType ( ) , STRING ) ; Assert . isTrue ( ! org.springframework.messaging.simp.stomp.MimeType . isWildcardSubtype ( ) , STRING ) ; void ( java.lang.String , org.springframework.messaging.simp.stomp.MimeType . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.stomp.MimeType org.springframework.messaging.simp.stomp.MimeType ( ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; return ( StringUtils . hasLength ( java.lang.String ) ? MimeTypeUtils . parseMimeType ( java.lang.String ) : null ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { void ( java.lang.String , java.lang.Long . java.lang.String ( long ) ) ; }  <METHOD_END>
<METHOD_START> public long long ( ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; return ( java.lang.String != null ? java.lang.Long . long ( java.lang.String ) : - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( long [] long[] ) { if ( long[] == null || long[] . int != NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING + ( long[] != null ? long[] . int : STRING ) ) ; } java.lang.String java.lang.String = long[] [ NUMBER ] + STRING + long[] [ NUMBER ] ; if ( long[] [ NUMBER ] < NUMBER || long[] [ NUMBER ] < NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String ) ; } void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public long [] long[] ( ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String [] java.lang.String[] = StringUtils . split ( java.lang.String , STRING ) ; if ( java.lang.String[] == null ) { return null ; } return new long [] { java.lang.Long . java.lang.Long ( java.lang.String[] [ NUMBER ] ) , java.lang.Long . java.lang.Long ( java.lang.String[] [ NUMBER ] ) } ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { long [] long[] = long[] ( ) ; return ( long[] != null && long[] [ NUMBER ] != NUMBER && long[] [ NUMBER ] != NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String ) ; return java.util.List<java.lang.String> != null ? java.util.List<java.lang.String> . java.lang.String ( NUMBER ) : null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String , java.lang.String -> new java.util.LinkedList<java.lang.String> <> ( ) ) ; java.util.List<java.lang.String> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String , java.lang.String -> new java.util.LinkedList<java.lang.String> <> ( ) ) ; java.util.List<java.lang.String> . boolean ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.LinkedList<java.lang.String> <> ( ) ; java.util.List<java.lang.String> . boolean ( java.lang.String ) ; java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String , java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { for ( Entry < java.lang.String , java.lang.String > org.springframework.messaging.simp.stomp.Entry<java.lang.String,java.lang.String> : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { void ( org.springframework.messaging.simp.stomp.Entry<java.lang.String,java.lang.String> . getKey ( ) , org.springframework.messaging.simp.stomp.Entry<java.lang.String,java.lang.String> . getValue ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( ) { java.util.LinkedHashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.LinkedHashMap<java.lang.String,java.lang.String> = new java.util.LinkedHashMap<java.lang.String,java.lang.String> <> ( this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . int ( ) ) ; for ( Entry < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > org.springframework.messaging.simp.stomp.Entry<java.lang.String,java.util.List<java.lang.String>> : java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.Set<java.util.Map.Entry<java.lang.String,java.util.List<java.lang.String>>> ( ) ) { java.util.LinkedHashMap<java.lang.String,java.lang.String> . java.lang.String ( org.springframework.messaging.simp.stomp.Entry<java.lang.String,java.util.List<java.lang.String>> . getKey ( ) , org.springframework.messaging.simp.stomp.Entry<java.lang.String,java.util.List<java.lang.String>> . getValue ( ) . get ( NUMBER ) ) ; } return java.util.LinkedHashMap<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.Object java.lang.Object ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.String java.lang.String , java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String , java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.Object java.lang.Object ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Map<? extends java.lang.String,? extends java.util.List<java.lang.String>> < ? extends java.lang.String , ? extends java.util.List<java.lang.String> < java.lang.String > > java.util.Map<? extends java.lang.String,? extends java.util.List<java.lang.String>> ) { this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . void ( java.util.Map<,> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.Set<java.lang.String> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.util.List<java.lang.String>> < java.util.List<java.lang.String> < java.lang.String > > java.util.Collection<java.util.List<java.lang.String>> ( ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.Collection<java.util.List<java.lang.String>> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<org.springframework.messaging.simp.stomp.Entry<java.lang.String,java.util.List<java.lang.String>>> < Entry < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > > java.util.Set<org.springframework.messaging.simp.stomp.Entry<java.lang.String,java.util.List<java.lang.String>>> ( ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.Set<java.util.Map.Entry<java.lang.String,java.util.List<java.lang.String>>> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( this == java.lang.Object || ( java.lang.Object instanceof org.springframework.messaging.simp.stomp.StompHeaders && this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . boolean ( ( ( org.springframework.messaging.simp.stomp.StompHeaders ) java.lang.Object ) . java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.messaging.simp.stomp.StompHeaders org.springframework.messaging.simp.stomp.StompHeaders ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) { return new org.springframework.messaging.simp.stomp.StompHeaders ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> , true ) ; }  <METHOD_END>
