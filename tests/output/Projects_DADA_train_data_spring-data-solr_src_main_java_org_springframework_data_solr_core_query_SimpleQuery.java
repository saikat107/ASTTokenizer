<METHOD_START> public void ( ) {}  <METHOD_END>
<METHOD_START> public void ( Criteria org.springframework.data.solr.core.query.Criteria ) { this( org.springframework.data.solr.core.query.Criteria , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this( new SimpleStringCriteria ( java.lang.String ) ); }  <METHOD_END>
<METHOD_START> public void ( Criteria org.springframework.data.solr.core.query.Criteria , Pageable org.springframework.data.solr.core.query.Pageable ) { super( org.springframework.data.solr.core.query.Criteria ); if ( org.springframework.data.solr.core.query.Pageable != null ) { this . java.lang.Long = org.springframework.data.solr.core.query.Pageable . getOffset ( ) ; this . java.lang.Integer = org.springframework.data.solr.core.query.Pageable . getPageSize ( ) ; this . org.springframework.data.solr.core.query.Query ( org.springframework.data.solr.core.query.Pageable . getSort ( ) ) ; } }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.core.query.Pageable ) { this( new SimpleStringCriteria ( java.lang.String ) , org.springframework.data.solr.core.query.Pageable ); }  <METHOD_END>
<METHOD_START> public static final org.springframework.data.solr.core.query.Query org.springframework.data.solr.core.query.Query ( Query org.springframework.data.solr.core.query.Query ) { return org.springframework.data.solr.core.query.SimpleQuery ( org.springframework.data.solr.core.query.Query , new org.springframework.data.solr.core.query.SimpleQuery ( ) ) ; }  <METHOD_END>
<METHOD_START> public static < T extends org.springframework.data.solr.core.query.SimpleQuery > T T ( Query org.springframework.data.solr.core.query.Query , T T ) { if ( org.springframework.data.solr.core.query.Query == null || T == null ) { return null ; } if ( org.springframework.data.solr.core.query.Query . getCriteria ( ) != null ) { T . addCriteria ( org.springframework.data.solr.core.query.Query . getCriteria ( ) ) ; } if ( ! org.springframework.data.solr.core.query.Query . getFilterQueries ( ) . isEmpty ( ) ) { for ( FilterQuery org.springframework.data.solr.core.query.FilterQuery : org.springframework.data.solr.core.query.Query . getFilterQueries ( ) ) { T . org.springframework.data.solr.core.query.Query ( org.springframework.data.solr.core.query.FilterQuery ) ; } } if ( ! org.springframework.data.solr.core.query.Query . getProjectionOnFields ( ) . isEmpty ( ) ) { for ( Field org.springframework.data.solr.core.query.Field : org.springframework.data.solr.core.query.Query . getProjectionOnFields ( ) ) { T . org.springframework.data.solr.core.query.Query ( org.springframework.data.solr.core.query.Field ) ; } } if ( ! org.springframework.data.solr.core.query.Query . getGroupByFields ( ) . isEmpty ( ) ) { for ( Field org.springframework.data.solr.core.query.Field : org.springframework.data.solr.core.query.Query . getGroupByFields ( ) ) { T . org.springframework.data.solr.core.query.Query ( org.springframework.data.solr.core.query.Field ) ; } } if ( org.springframework.data.solr.core.query.Query . getSort ( ) != null ) { T . org.springframework.data.solr.core.query.Query ( org.springframework.data.solr.core.query.Query . getSort ( ) ) ; } if ( org.springframework.data.solr.core.query.Query . getDefType ( ) != null ) { T . void ( org.springframework.data.solr.core.query.Query . getDefType ( ) ) ; } if ( org.springframework.data.solr.core.query.Query . getDefaultOperator ( ) != null ) { T . void ( org.springframework.data.solr.core.query.Query . getDefaultOperator ( ) ) ; } if ( org.springframework.data.solr.core.query.Query . getTimeAllowed ( ) != null ) { T . org.springframework.data.solr.core.query.Query ( org.springframework.data.solr.core.query.Query . getTimeAllowed ( ) ) ; } if ( org.springframework.data.solr.core.query.Query . getRequestHandler ( ) != null ) { T . setRequestHandler ( org.springframework.data.solr.core.query.Query . getRequestHandler ( ) ) ; } return T ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public final < T extends org.springframework.data.solr.core.query.Query > T T ( Field org.springframework.data.solr.core.query.Field ) { Assert . notNull ( org.springframework.data.solr.core.query.Field , STRING ) ; Assert . hasText ( org.springframework.data.solr.core.query.Field . getName ( ) , STRING ) ; this . java.util.List<org.springframework.data.solr.core.query.Field> . add ( org.springframework.data.solr.core.query.Field ) ; return ( T ) this ; }  <METHOD_END>
<METHOD_START> public final < T extends org.springframework.data.solr.core.query.Query > T T ( java.lang.String java.lang.String ) { return this . org.springframework.data.solr.core.query.Query ( new SimpleField ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public final < T extends org.springframework.data.solr.core.query.Query > T T ( Field ... org.springframework.data.solr.core.query.Field[] ) { Assert . notEmpty ( org.springframework.data.solr.core.query.Field[] , STRING ) ; for ( Field org.springframework.data.solr.core.query.Field : org.springframework.data.solr.core.query.Field[] ) { org.springframework.data.solr.core.query.Query ( org.springframework.data.solr.core.query.Field ) ; } return ( T ) this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public final < T extends org.springframework.data.solr.core.query.Query > T T ( java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { org.springframework.data.solr.core.query.Query ( java.lang.String ) ; } return ( T ) this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final < T extends org.springframework.data.solr.core.query.Query > T T ( Pageable org.springframework.data.solr.core.query.Pageable ) { Assert . notNull ( org.springframework.data.solr.core.query.Pageable , STRING ) ; this . java.lang.Long = org.springframework.data.solr.core.query.Pageable . getOffset ( ) ; this . java.lang.Integer = org.springframework.data.solr.core.query.Pageable . getPageSize ( ) ; return this . org.springframework.data.solr.core.query.Query ( org.springframework.data.solr.core.query.Pageable . getSort ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( java.lang.Long java.lang.Long ) { this . java.lang.Long = java.lang.Long ; return ( T ) this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; return ( T ) this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override @ java.lang.Deprecated public final < T extends org.springframework.data.solr.core.query.Query > T T ( Field org.springframework.data.solr.core.query.Field ) { Assert . notNull ( org.springframework.data.solr.core.query.Field , STRING ) ; Assert . hasText ( org.springframework.data.solr.core.query.Field . getName ( ) , STRING ) ; if ( this . org.springframework.data.solr.core.query.GroupOptions == null ) { this . org.springframework.data.solr.core.query.GroupOptions = new GroupOptions ( ) ; } this . org.springframework.data.solr.core.query.GroupOptions . addGroupByField ( org.springframework.data.solr.core.query.Field ) . setGroupMain ( true ) ; return ( T ) this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public final < T extends org.springframework.data.solr.core.query.Query > T T ( java.lang.String java.lang.String ) { return org.springframework.data.solr.core.query.Query ( new SimpleField ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public final < T extends org.springframework.data.solr.core.query.Query > T T ( Sort org.springframework.data.solr.core.query.Sort ) { if ( org.springframework.data.solr.core.query.Sort == null ) { return ( T ) this ; } if ( this . org.springframework.data.solr.core.query.Sort == null ) { this . org.springframework.data.solr.core.query.Sort = org.springframework.data.solr.core.query.Sort ; } else { this . org.springframework.data.solr.core.query.Sort = this . org.springframework.data.solr.core.query.Sort . and ( org.springframework.data.solr.core.query.Sort ) ; } return ( T ) this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.Sort org.springframework.data.solr.core.query.Sort ( ) { return this . org.springframework.data.solr.core.query.Sort ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.Pageable org.springframework.data.solr.core.query.Pageable ( ) { if ( this . java.lang.Integer == null && this . java.lang.Long == null ) { return Pageable . unpaged ( ) ; } int int = this . java.lang.Integer != null ? this . java.lang.Integer : DEFAULT_PAGE_SIZE ; long long = this . java.lang.Long != null ? this . java.lang.Long : NUMBER ; return new SolrPageRequest ( int != NUMBER ? ( int ) ( long / int ) : NUMBER , int , this . org.springframework.data.solr.core.query.Sort ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Long java.lang.Long ( ) { return this . java.lang.Long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.Deprecated public java.util.List<org.springframework.data.solr.core.query.Field> < Field > java.util.List<org.springframework.data.solr.core.query.Field> ( ) { if ( this . org.springframework.data.solr.core.query.GroupOptions == null ) { return java.util.Collections . java.util.List<org.springframework.data.solr.core.query.Field> ( ) ; } return java.util.Collections . java.util.List ( this . org.springframework.data.solr.core.query.GroupOptions . getGroupByFields ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.data.solr.core.query.Field> < Field > java.util.List<org.springframework.data.solr.core.query.Field> ( ) { return java.util.Collections . java.util.List<org.springframework.data.solr.core.query.Field> ( this . java.util.List<org.springframework.data.solr.core.query.Field> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( FilterQuery org.springframework.data.solr.core.query.FilterQuery ) { this . java.util.List<org.springframework.data.solr.core.query.FilterQuery> . add ( org.springframework.data.solr.core.query.FilterQuery ) ; return ( T ) this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; return ( T ) this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( GroupOptions org.springframework.data.solr.core.query.GroupOptions ) { this . org.springframework.data.solr.core.query.GroupOptions = org.springframework.data.solr.core.query.GroupOptions ; return ( T ) this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( ) { return org.springframework.data.solr.core.query.GroupOptions ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.StatsOptions org.springframework.data.solr.core.query.StatsOptions ( ) { return org.springframework.data.solr.core.query.StatsOptions ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( StatsOptions org.springframework.data.solr.core.query.StatsOptions ) { this . org.springframework.data.solr.core.query.StatsOptions = org.springframework.data.solr.core.query.StatsOptions ; return ( T ) this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.data.solr.core.query.FilterQuery> < FilterQuery > java.util.List<org.springframework.data.solr.core.query.FilterQuery> ( ) { return java.util.Collections . java.util.List<org.springframework.data.solr.core.query.FilterQuery> ( this . java.util.List<org.springframework.data.solr.core.query.FilterQuery> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.Operator org.springframework.data.solr.core.query.Operator ( ) { return this . org.springframework.data.solr.core.query.Operator != null ? this . org.springframework.data.solr.core.query.Operator : Operator . NONE ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! Operator . NONE . equals ( org.springframework.data.solr.core.query.Operator ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Operator org.springframework.data.solr.core.query.Operator ) { this . org.springframework.data.solr.core.query.Operator = org.springframework.data.solr.core.query.Operator ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String != null ? this . java.lang.String : STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public < T extends org.springframework.data.solr.core.query.Query > T T ( SpellcheckOptions org.springframework.data.solr.core.query.SpellcheckOptions ) { this . org.springframework.data.solr.core.query.SpellcheckOptions = org.springframework.data.solr.core.query.SpellcheckOptions ; return ( T ) this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.SpellcheckOptions org.springframework.data.solr.core.query.SpellcheckOptions ( ) { return this . org.springframework.data.solr.core.query.SpellcheckOptions ; }  <METHOD_END>
