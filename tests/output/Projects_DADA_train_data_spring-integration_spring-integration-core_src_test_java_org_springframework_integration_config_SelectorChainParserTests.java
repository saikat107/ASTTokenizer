<METHOD_START> @ Test public void void ( ) { MessageSelector org.springframework.integration.config.MessageSelector = ( MessageSelector ) org.springframework.integration.config.ApplicationContext . getBean ( STRING ) ; MessageSelector org.springframework.integration.config.MessageSelector = ( MessageSelector ) org.springframework.integration.config.ApplicationContext . getBean ( STRING ) ; MessageSelectorChain org.springframework.integration.config.MessageSelectorChain = ( MessageSelectorChain ) org.springframework.integration.config.ApplicationContext . getBean ( STRING ) ; java.util.List<org.springframework.integration.config.MessageSelector> < MessageSelector > java.util.List<org.springframework.integration.config.MessageSelector> = this . java.util.List<org.springframework.integration.config.MessageSelector> ( org.springframework.integration.config.MessageSelectorChain ) ; assertEquals ( VotingStrategy . ALL , this . org.springframework.integration.config.VotingStrategy ( org.springframework.integration.config.MessageSelectorChain ) ) ; assertEquals ( org.springframework.integration.config.MessageSelector , java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) ) ; assertEquals ( org.springframework.integration.config.MessageSelector , java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) ) ; assertTrue ( org.springframework.integration.config.MessageSelectorChain . accept ( new GenericMessage < java.lang.String > ( STRING ) ) ) ; assertTrue ( this . org.springframework.integration.config.ApplicationContext . containsBean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MessageSelector org.springframework.integration.config.MessageSelector = ( MessageSelector ) org.springframework.integration.config.ApplicationContext . getBean ( STRING ) ; MessageSelector org.springframework.integration.config.MessageSelector = ( MessageSelector ) org.springframework.integration.config.ApplicationContext . getBean ( STRING ) ; MessageSelector org.springframework.integration.config.MessageSelector = ( MessageSelector ) org.springframework.integration.config.ApplicationContext . getBean ( STRING ) ; MessageSelector org.springframework.integration.config.MessageSelector = ( MessageSelector ) org.springframework.integration.config.ApplicationContext . getBean ( STRING ) ; MessageSelector org.springframework.integration.config.MessageSelector = ( MessageSelector ) org.springframework.integration.config.ApplicationContext . getBean ( STRING ) ; MessageSelector org.springframework.integration.config.MessageSelector = ( MessageSelector ) org.springframework.integration.config.ApplicationContext . getBean ( STRING ) ; MessageSelectorChain org.springframework.integration.config.MessageSelectorChain = ( MessageSelectorChain ) org.springframework.integration.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( VotingStrategy . MAJORITY , this . org.springframework.integration.config.VotingStrategy ( org.springframework.integration.config.MessageSelectorChain ) ) ; java.util.List<org.springframework.integration.config.MessageSelector> < MessageSelector > java.util.List<org.springframework.integration.config.MessageSelector> = this . java.util.List<org.springframework.integration.config.MessageSelector> ( org.springframework.integration.config.MessageSelectorChain ) ; assertEquals ( org.springframework.integration.config.MessageSelector , java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) ) ; assertTrue ( java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) instanceof MessageSelectorChain ) ; MessageSelectorChain org.springframework.integration.config.MessageSelectorChain = ( MessageSelectorChain ) java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) ; assertEquals ( VotingStrategy . ALL , this . org.springframework.integration.config.VotingStrategy ( org.springframework.integration.config.MessageSelectorChain ) ) ; java.util.List<org.springframework.integration.config.MessageSelector> < MessageSelector > java.util.List<org.springframework.integration.config.MessageSelector> = this . java.util.List<org.springframework.integration.config.MessageSelector> ( org.springframework.integration.config.MessageSelectorChain ) ; assertEquals ( org.springframework.integration.config.MessageSelector , java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) ) ; assertTrue ( java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) instanceof MessageSelectorChain ) ; MessageSelectorChain org.springframework.integration.config.MessageSelectorChain = ( MessageSelectorChain ) java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) ; assertEquals ( VotingStrategy . ANY , this . org.springframework.integration.config.VotingStrategy ( org.springframework.integration.config.MessageSelectorChain ) ) ; java.util.List<org.springframework.integration.config.MessageSelector> < MessageSelector > java.util.List<org.springframework.integration.config.MessageSelector> = this . java.util.List<org.springframework.integration.config.MessageSelector> ( org.springframework.integration.config.MessageSelectorChain ) ; assertEquals ( org.springframework.integration.config.MessageSelector , java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) ) ; assertEquals ( org.springframework.integration.config.MessageSelector , java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) ) ; assertEquals ( org.springframework.integration.config.MessageSelector , java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) ) ; assertTrue ( java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) instanceof MessageSelectorChain ) ; MessageSelectorChain org.springframework.integration.config.MessageSelectorChain = ( MessageSelectorChain ) java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) ; assertEquals ( VotingStrategy . MAJORITY_OR_TIE , this . org.springframework.integration.config.VotingStrategy ( org.springframework.integration.config.MessageSelectorChain ) ) ; java.util.List<org.springframework.integration.config.MessageSelector> < MessageSelector > java.util.List<org.springframework.integration.config.MessageSelector> = this . java.util.List<org.springframework.integration.config.MessageSelector> ( org.springframework.integration.config.MessageSelectorChain ) ; assertEquals ( org.springframework.integration.config.MessageSelector , java.util.List<org.springframework.integration.config.MessageSelector> . get ( NUMBER ) ) ; assertTrue ( org.springframework.integration.config.MessageSelectorChain . accept ( new GenericMessage < java.lang.String > ( STRING ) ) ) ; assertTrue ( org.springframework.integration.config.MessageSelectorChain . accept ( new GenericMessage < java.lang.String > ( STRING ) ) ) ; assertTrue ( org.springframework.integration.config.MessageSelectorChain . accept ( new GenericMessage < java.lang.String > ( STRING ) ) ) ; assertTrue ( org.springframework.integration.config.MessageSelectorChain . accept ( new GenericMessage < java.lang.String > ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private java.util.List<org.springframework.integration.config.MessageSelector> < MessageSelector > java.util.List<org.springframework.integration.config.MessageSelector> ( MessageSelectorChain org.springframework.integration.config.MessageSelectorChain ) { DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.MessageSelectorChain ) ; return ( java.util.List<org.springframework.integration.config.MessageSelector> < MessageSelector > ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.config.VotingStrategy org.springframework.integration.config.VotingStrategy ( MessageSelectorChain org.springframework.integration.config.MessageSelectorChain ) { return ( VotingStrategy ) new DirectFieldAccessor ( org.springframework.integration.config.MessageSelectorChain ) . getPropertyValue ( STRING ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( Message < ? > org.springframework.integration.config.Message<?> ) { return true ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( Message < ? > org.springframework.integration.config.Message<?> ) { return true ; }  <METHOD_END>
