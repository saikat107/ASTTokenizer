<METHOD_START> public void ( PageContext org.springframework.mock.web.PageContext ) { this . org.springframework.mock.web.PageContext = org.springframework.mock.web.PageContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet.jsp.el.Expression javax.servlet.jsp.el.Expression ( final java.lang.String java.lang.String , final java.lang.Class java.lang.Class , final javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet javax.servlet.jsp.el.FunctionMapper ) throws javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet.jsp.el.ELException { return new javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet javax.servlet.jsp.el.VariableResolver ) throws javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet.jsp.el.ELException { return java.lang.Object ( java.lang.String , java.lang.Class , javax.servlet.jsp.el.FunctionMapper ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet javax.servlet.jsp.el.VariableResolver ) throws javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet.jsp.el.ELException { return java.lang.Object ( java.lang.String , java.lang.Class , javax.servlet.jsp.el.FunctionMapper ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Class java.lang.Class , javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet javax.servlet.jsp.el.VariableResolver , javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet javax.servlet.jsp.el.FunctionMapper ) throws javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet.jsp.el.ELException { Assert . isNull ( javax.servlet.jsp.el.VariableResolver , STRING ) ; return java.lang.Object ( java.lang.String , java.lang.Class , javax.servlet.jsp.el.FunctionMapper ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Class java.lang.Class , javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet javax.servlet.jsp.el.FunctionMapper )			throws javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet.jsp.el.ELException { Assert . isNull ( javax.servlet.jsp.el.FunctionMapper , STRING ) ; try { return ExpressionEvaluatorManager . evaluate ( STRING , java.lang.String , java.lang.Class , this . org.springframework.mock.web.PageContext ) ; } catch ( JspException org.springframework.mock.web.JspException ) { throw new javax . javax.servlet . javax.servlet . javax.servlet . javax.servlet ( STRING + java.lang.String + STRING , org.springframework.mock.web.JspException ) ; } }  <METHOD_END>
