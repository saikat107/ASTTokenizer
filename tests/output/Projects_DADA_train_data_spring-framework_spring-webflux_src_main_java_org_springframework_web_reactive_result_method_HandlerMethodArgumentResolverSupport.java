<METHOD_START> protected void ( ReactiveAdapterRegistry org.springframework.web.reactive.result.method.ReactiveAdapterRegistry ) { Assert . notNull ( org.springframework.web.reactive.result.method.ReactiveAdapterRegistry , STRING ) ; this . org.springframework.web.reactive.result.method.ReactiveAdapterRegistry = org.springframework.web.reactive.result.method.ReactiveAdapterRegistry ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.reactive.result.method.ReactiveAdapterRegistry org.springframework.web.reactive.result.method.ReactiveAdapterRegistry ( ) { return this . org.springframework.web.reactive.result.method.ReactiveAdapterRegistry ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( MethodParameter org.springframework.web.reactive.result.method.MethodParameter , java.util.function.Predicate<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.function.Predicate<java.lang.Class<?>> ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.web.reactive.result.method.MethodParameter . getParameterType ( ) ; ReactiveAdapter org.springframework.web.reactive.result.method.ReactiveAdapter = org.springframework.web.reactive.result.method.ReactiveAdapterRegistry ( ) . getAdapter ( java.lang.Class<> ) ; if ( org.springframework.web.reactive.result.method.ReactiveAdapter != null ) { void ( org.springframework.web.reactive.result.method.ReactiveAdapter , org.springframework.web.reactive.result.method.MethodParameter ) ; java.lang.Class<?> = org.springframework.web.reactive.result.method.MethodParameter . nested ( ) . getNestedParameterType ( ) ; } return java.util.function.Predicate<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> private void void ( ReactiveAdapter org.springframework.web.reactive.result.method.ReactiveAdapter , MethodParameter org.springframework.web.reactive.result.method.MethodParameter ) { if ( org.springframework.web.reactive.result.method.ReactiveAdapter . isNoValue ( ) ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.web.reactive.result.method.MethodParameter . getGenericParameterType ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected boolean boolean ( MethodParameter org.springframework.web.reactive.result.method.MethodParameter , java.util.function.Predicate<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.function.Predicate<java.lang.Class<?>> ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.web.reactive.result.method.MethodParameter . getParameterType ( ) ; ReactiveAdapter org.springframework.web.reactive.result.method.ReactiveAdapter = org.springframework.web.reactive.result.method.ReactiveAdapterRegistry ( ) . getAdapter ( java.lang.Class<> ) ; if ( org.springframework.web.reactive.result.method.ReactiveAdapter != null ) { void ( org.springframework.web.reactive.result.method.ReactiveAdapter , org.springframework.web.reactive.result.method.MethodParameter ) ; java.lang.Class<?> = org.springframework.web.reactive.result.method.MethodParameter . nested ( ) . getNestedParameterType ( ) ; } if ( java.util.function.Predicate<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ) { if ( org.springframework.web.reactive.result.method.ReactiveAdapter == null ) { return true ; } throw java.lang.IllegalStateException ( org.springframework.web.reactive.result.method.MethodParameter ) ; } return false ; }  <METHOD_END>
<METHOD_START> private java.lang.IllegalStateException java.lang.IllegalStateException ( MethodParameter org.springframework.web.reactive.result.method.MethodParameter ) { return new java.lang.IllegalStateException ( java.lang.Class<? extends org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverSupport> ( ) . java.lang.String ( ) + STRING + org.springframework.web.reactive.result.method.MethodParameter . getGenericParameterType ( ) ) ; }  <METHOD_END>
<METHOD_START> protected < A extends java.lang.annotation.Annotation > boolean boolean ( MethodParameter org.springframework.web.reactive.result.method.MethodParameter , java.lang.Class<A> < A > java.lang.Class<A> , java.util.function.BiPredicate<A,java.lang.Class<?>> < A , java.lang.Class<?> < ? > > java.util.function.BiPredicate<A,java.lang.Class<?>> ) { A A = org.springframework.web.reactive.result.method.MethodParameter . getParameterAnnotation ( java.lang.Class<A> ) ; if ( A == null ) { return false ; } org.springframework.web.reactive.result.method.MethodParameter = org.springframework.web.reactive.result.method.MethodParameter . nestedIfOptional ( ) ; java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.web.reactive.result.method.MethodParameter . getNestedParameterType ( ) ; ReactiveAdapter org.springframework.web.reactive.result.method.ReactiveAdapter = org.springframework.web.reactive.result.method.ReactiveAdapterRegistry ( ) . getAdapter ( java.lang.Class<> ) ; if ( org.springframework.web.reactive.result.method.ReactiveAdapter != null ) { void ( org.springframework.web.reactive.result.method.ReactiveAdapter , org.springframework.web.reactive.result.method.MethodParameter ) ; org.springframework.web.reactive.result.method.MethodParameter = org.springframework.web.reactive.result.method.MethodParameter . nested ( ) ; java.lang.Class<?> = org.springframework.web.reactive.result.method.MethodParameter . getNestedParameterType ( ) ; } if ( java.util.function.BiPredicate<A,java.lang.Class<?>> . boolean ( A , java.lang.Class<> ) ) { if ( org.springframework.web.reactive.result.method.ReactiveAdapter == null ) { return true ; } throw java.lang.IllegalStateException ( org.springframework.web.reactive.result.method.MethodParameter ) ; } return false ; }  <METHOD_END>
