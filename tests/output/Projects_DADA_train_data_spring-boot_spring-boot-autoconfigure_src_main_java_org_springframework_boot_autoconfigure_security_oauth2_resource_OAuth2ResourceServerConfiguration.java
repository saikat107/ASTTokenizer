<METHOD_START> public void ( ResourceServerProperties org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties ) { this . org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties = org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( ResourceServerConfigurer .class ) public org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerConfigurer org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerConfigurer ( ) { return new org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration.ResourceSecurityConfigurer ( this . org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties ) ; }  <METHOD_END>
<METHOD_START> @ Bean public static org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration.ResourceServerFilterChainOrderProcessor org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration.ResourceServerFilterChainOrderProcessor ( ResourceServerProperties org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties ) { return new org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration.ResourceServerFilterChainOrderProcessor ( org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties ) ; }  <METHOD_END>
<METHOD_START> public void ( ResourceServerProperties org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties ) { this . org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties = org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ResourceServerSecurityConfigurer org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerSecurityConfigurer )				throws java.lang.Exception { org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerSecurityConfigurer . resourceId ( this . org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties . getResourceId ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( HttpSecurity org.springframework.boot.autoconfigure.security.oauth2.resource.HttpSecurity ) throws java.lang.Exception { org.springframework.boot.autoconfigure.security.oauth2.resource.HttpSecurity . authorizeRequests ( ) . anyRequest ( ) . authenticated ( ) ; }  <METHOD_END>
<METHOD_START> private void ( ResourceServerProperties org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties ) { this . org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties = org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.boot.autoconfigure.security.oauth2.resource.ApplicationContext )				throws org.springframework.boot.autoconfigure.security.oauth2.resource.BeansException { this . org.springframework.boot.autoconfigure.security.oauth2.resource.ApplicationContext = org.springframework.boot.autoconfigure.security.oauth2.resource.ApplicationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String )				throws org.springframework.boot.autoconfigure.security.oauth2.resource.BeansException { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String )				throws org.springframework.boot.autoconfigure.security.oauth2.resource.BeansException { if ( java.lang.Object instanceof ResourceServerConfiguration ) { if ( this . org.springframework.boot.autoconfigure.security.oauth2.resource.ApplicationContext . getBeanNamesForType ( ResourceServerConfiguration .class , false , false ) . length == NUMBER ) { ResourceServerConfiguration org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerConfiguration = ( ResourceServerConfiguration ) java.lang.Object ; org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerConfiguration . setOrder ( this . org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties . getFilterOrder ( ) ) ; } } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.autoconfigure.security.oauth2.resource.ConfigurationPhase org.springframework.boot.autoconfigure.security.oauth2.resource.ConfigurationPhase ( ) { return ConfigurationPhase . REGISTER_BEAN ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.autoconfigure.security.oauth2.resource.ConditionOutcome org.springframework.boot.autoconfigure.security.oauth2.resource.ConditionOutcome ( ConditionContext org.springframework.boot.autoconfigure.security.oauth2.resource.ConditionContext , AnnotatedTypeMetadata org.springframework.boot.autoconfigure.security.oauth2.resource.AnnotatedTypeMetadata ) { ConditionMessage . ConditionMessage ConditionMessage.Builder = ConditionMessage . forCondition ( STRING ) ; Environment org.springframework.boot.autoconfigure.security.oauth2.resource.Environment = org.springframework.boot.autoconfigure.security.oauth2.resource.ConditionContext . getEnvironment ( ) ; RelaxedPropertyResolver org.springframework.boot.autoconfigure.security.oauth2.resource.RelaxedPropertyResolver = new RelaxedPropertyResolver ( org.springframework.boot.autoconfigure.security.oauth2.resource.Environment , STRING ) ; if ( boolean ( org.springframework.boot.autoconfigure.security.oauth2.resource.Environment ) ) { return ConditionOutcome . match ( ConditionMessage.Builder . foundExactly ( STRING ) ) ; } if ( ! org.springframework.boot.autoconfigure.security.oauth2.resource.RelaxedPropertyResolver . getSubProperties ( STRING ) . isEmpty ( ) ) { return ConditionOutcome . match ( ConditionMessage.Builder . foundExactly ( STRING ) ) ; } if ( ! org.springframework.boot.autoconfigure.security.oauth2.resource.RelaxedPropertyResolver . getSubProperties ( STRING ) . isEmpty ( ) ) { return ConditionOutcome . match ( ConditionMessage.Builder . foundExactly ( STRING ) ) ; } if ( StringUtils . hasText ( org.springframework.boot.autoconfigure.security.oauth2.resource.RelaxedPropertyResolver . getProperty ( STRING ) ) ) { return ConditionOutcome . match ( ConditionMessage.Builder . foundExactly ( STRING ) ) ; } if ( StringUtils . hasText ( org.springframework.boot.autoconfigure.security.oauth2.resource.RelaxedPropertyResolver . getProperty ( STRING ) ) ) { return ConditionOutcome . match ( ConditionMessage.Builder . foundExactly ( STRING ) ) ; } if ( ClassUtils . isPresent ( java.lang.String , null ) ) { if ( org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration.AuthorizationServerEndpointsConfigurationBeanCondition . boolean ( org.springframework.boot.autoconfigure.security.oauth2.resource.ConditionContext ) ) { return ConditionOutcome . match ( ConditionMessage.Builder . found ( STRING ) . items ( java.lang.String ) ) ; } } return ConditionOutcome . noMatch ( ConditionMessage.Builder . didNotFind ( STRING ) . atAll ( ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( Environment org.springframework.boot.autoconfigure.security.oauth2.resource.Environment ) { RelaxedPropertyResolver org.springframework.boot.autoconfigure.security.oauth2.resource.RelaxedPropertyResolver = new RelaxedPropertyResolver ( org.springframework.boot.autoconfigure.security.oauth2.resource.Environment , STRING ) ; return StringUtils . hasLength ( org.springframework.boot.autoconfigure.security.oauth2.resource.RelaxedPropertyResolver . getProperty ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ConditionContext org.springframework.boot.autoconfigure.security.oauth2.resource.ConditionContext ) { java.lang.Class<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration.AuthorizationServerEndpointsConfigurationBeanCondition> < org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration.AuthorizationServerEndpointsConfigurationBeanCondition > java.lang.Class<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration.AuthorizationServerEndpointsConfigurationBeanCondition> = org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration.AuthorizationServerEndpointsConfigurationBeanCondition .class ; Conditional org.springframework.boot.autoconfigure.security.oauth2.resource.Conditional = AnnotationUtils . findAnnotation ( java.lang.Class<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration.AuthorizationServerEndpointsConfigurationBeanCondition> , Conditional .class ) ; StandardAnnotationMetadata org.springframework.boot.autoconfigure.security.oauth2.resource.StandardAnnotationMetadata = new StandardAnnotationMetadata ( java.lang.Class<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration.AuthorizationServerEndpointsConfigurationBeanCondition> ) ; for ( java.lang.Class<? extends org.springframework.boot.autoconfigure.security.oauth2.resource.Condition> < ? extends Condition > java.lang.Class<? extends org.springframework.boot.autoconfigure.security.oauth2.resource.Condition> : org.springframework.boot.autoconfigure.security.oauth2.resource.Conditional . value ( ) ) { Condition org.springframework.boot.autoconfigure.security.oauth2.resource.Condition = BeanUtils . instantiateClass ( java.lang.Class<> ) ; if ( org.springframework.boot.autoconfigure.security.oauth2.resource.Condition . matches ( org.springframework.boot.autoconfigure.security.oauth2.resource.ConditionContext , org.springframework.boot.autoconfigure.security.oauth2.resource.StandardAnnotationMetadata ) ) { return true ; } } return false ; }  <METHOD_END>
