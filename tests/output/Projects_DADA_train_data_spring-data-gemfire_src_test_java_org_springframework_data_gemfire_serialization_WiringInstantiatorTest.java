<METHOD_START> @ Autowired void void ( java.awt.Shape java.awt.Shape ) { this . java.awt.Shape = java.awt.Shape ; }  <METHOD_END>
<METHOD_START> public void void ( java.io.DataInput java.io.DataInput ) throws java.io.IOException , java.lang.ClassNotFoundException {		}  <METHOD_END>
<METHOD_START> public void void ( java.io.DataOutput java.io.DataOutput ) throws java.io.IOException {		}  <METHOD_END>
<METHOD_START> public void void ( java.beans.Beans java.beans.Beans ) { this . java.beans.Beans = java.beans.Beans ; }  <METHOD_END>
<METHOD_START> public void void ( java.io.DataInput java.io.DataInput ) throws java.io.IOException , java.lang.ClassNotFoundException {		}  <METHOD_END>
<METHOD_START> public void void ( java.io.DataOutput java.io.DataOutput ) throws java.io.IOException {		}  <METHOD_END>
<METHOD_START> public void void ( java.io.DataInput java.io.DataInput ) throws java.io.IOException , java.lang.ClassNotFoundException {		}  <METHOD_END>
<METHOD_START> public void void ( java.io.DataOutput java.io.DataOutput ) throws java.io.IOException {		}  <METHOD_END>
<METHOD_START> public void void ( java.io.DataInput java.io.DataInput ) throws java.io.IOException , java.lang.ClassNotFoundException {		}  <METHOD_END>
<METHOD_START> public void void ( java.io.DataOutput java.io.DataOutput ) throws java.io.IOException {		}  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.data.gemfire.serialization.WiringInstantiator . newInstance ( ) ; assertNotNull ( java.lang.Object ) ; assertTrue ( java.lang.Object instanceof org.springframework.data.gemfire.serialization.WiringInstantiatorTest.AnnotatedBean ) ; org.springframework.data.gemfire.serialization.WiringInstantiatorTest.AnnotatedBean org.springframework.data.gemfire.serialization.WiringInstantiatorTest.AnnotatedBean = ( org.springframework.data.gemfire.serialization.WiringInstantiatorTest.AnnotatedBean ) java.lang.Object ; assertNotNull ( org.springframework.data.gemfire.serialization.WiringInstantiatorTest.AnnotatedBean . java.awt.Point ) ; assertNotNull ( org.springframework.data.gemfire.serialization.WiringInstantiatorTest.AnnotatedBean . java.awt.Shape ) ; assertSame ( org.springframework.data.gemfire.serialization.WiringInstantiatorTest.AnnotatedBean . java.awt.Point , org.springframework.data.gemfire.serialization.ApplicationContext . getBean ( STRING ) ) ; assertSame ( org.springframework.data.gemfire.serialization.WiringInstantiatorTest.AnnotatedBean . java.awt.Shape , org.springframework.data.gemfire.serialization.ApplicationContext . getBean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { WiringInstantiator org.springframework.data.gemfire.serialization.WiringInstantiator = new WiringInstantiator ( new AsmInstantiatorGenerator ( ) . getInstantiator ( org.springframework.data.gemfire.serialization.WiringInstantiatorTest.TemplateWiringBean .class , NUMBER ) ) ; org.springframework.data.gemfire.serialization.WiringInstantiator . setBeanFactory ( org.springframework.data.gemfire.serialization.ApplicationContext . getAutowireCapableBeanFactory ( ) ) ; org.springframework.data.gemfire.serialization.WiringInstantiator . afterPropertiesSet ( ) ; java.lang.Object java.lang.Object = org.springframework.data.gemfire.serialization.WiringInstantiator . newInstance ( ) ; assertTrue ( java.lang.Object instanceof org.springframework.data.gemfire.serialization.WiringInstantiatorTest.TemplateWiringBean ) ; org.springframework.data.gemfire.serialization.WiringInstantiatorTest.TemplateWiringBean org.springframework.data.gemfire.serialization.WiringInstantiatorTest.TemplateWiringBean = ( org.springframework.data.gemfire.serialization.WiringInstantiatorTest.TemplateWiringBean ) java.lang.Object ; assertTrue ( org.springframework.data.gemfire.serialization.WiringInstantiatorTest.TemplateWiringBean . java.awt.Point == null ) ; assertNotNull ( org.springframework.data.gemfire.serialization.WiringInstantiatorTest.TemplateWiringBean . java.beans.Beans ) ; assertSame ( org.springframework.data.gemfire.serialization.WiringInstantiatorTest.TemplateWiringBean . java.beans.Beans , org.springframework.data.gemfire.serialization.ApplicationContext . getBean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { @ java.lang.SuppressWarnings ( STRING ) java.util.List<org.springframework.data.gemfire.serialization.Instantiator> < Instantiator > java.util.List<org.springframework.data.gemfire.serialization.Instantiator> = ( java.util.List<org.springframework.data.gemfire.serialization.Instantiator> < Instantiator > ) org.springframework.data.gemfire.serialization.ApplicationContext . getBean ( STRING ) ; assertNotNull ( java.util.List<org.springframework.data.gemfire.serialization.Instantiator> ) ; assertEquals ( NUMBER , java.util.List<org.springframework.data.gemfire.serialization.Instantiator> . size ( ) ) ; }  <METHOD_END>
