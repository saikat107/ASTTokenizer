<METHOD_START> void ( MessageGroupStore org.springframework.integration.store.MessageGroupStore , MessageGroup org.springframework.integration.store.MessageGroup ) { this . org.springframework.integration.store.MessageGroupStore = org.springframework.integration.store.MessageGroupStore ; this . org.springframework.integration.store.MessageGroup = org.springframework.integration.store.MessageGroup ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<org.springframework.integration.store.Message<?>> < Message < ? > > java.util.Collection<org.springframework.integration.store.Message<?>> ( ) { return java.util.Collections . java.util.Collection<org.springframework.integration.store.Message<?>> ( this . java.util.Collection<org.springframework.integration.store.Message<?>> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.store.Message<?> < ? > org.springframework.integration.store.Message<?> ( ) { if ( this . org.springframework.integration.store.Message<> == null ) { synchronized ( this ) { if ( this . org.springframework.integration.store.Message<> == null ) { if ( org.springframework.integration.store.Log . isDebugEnabled ( ) ) { org.springframework.integration.store.Log . debug ( STRING + this . org.springframework.integration.store.MessageGroup . getGroupId ( ) ) ; } this . org.springframework.integration.store.Message<?> = this . org.springframework.integration.store.MessageGroupStore . getOneMessageFromGroup ( this . org.springframework.integration.store.MessageGroup . getGroupId ( ) ) ; } } } return this . org.springframework.integration.store.Message<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { if ( int ( ) == NUMBER ) { return NUMBER ; } else { Message < ? > org.springframework.integration.store.Message<?> = org.springframework.integration.store.Message<?> ( ) ; if ( org.springframework.integration.store.Message<> != null ) { java.lang.Integer java.lang.Integer = org.springframework.integration.store.Message<> . getHeaders ( ) . get ( IntegrationMessageHeaderAccessor . SEQUENCE_SIZE , java.lang.Integer .class ) ; return ( java.lang.Integer != null ? java.lang.Integer : NUMBER ) ; } else { return NUMBER ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { if ( this . int == NUMBER ) { synchronized ( this ) { if ( this . int == NUMBER ) { if ( org.springframework.integration.store.Log . isDebugEnabled ( ) ) { org.springframework.integration.store.Log . debug ( STRING + this . org.springframework.integration.store.MessageGroup . getGroupId ( ) ) ; } this . int = this . org.springframework.integration.store.MessageGroupStore . messageGroupSize ( this . org.springframework.integration.store.MessageGroup . getGroupId ( ) ) ; } } } return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) { return this . org.springframework.integration.store.MessageGroup . getGroupId ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Message < ? > org.springframework.integration.store.Message<?> ) { return this . org.springframework.integration.store.MessageGroup . canAdd ( org.springframework.integration.store.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.integration.store.MessageGroup . getLastReleasedMessageSequenceNumber ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . org.springframework.integration.store.MessageGroup . isComplete ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.integration.store.MessageGroup . complete ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . org.springframework.integration.store.MessageGroup . getTimestamp ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . org.springframework.integration.store.MessageGroup . getLastModified ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( long long ) { this . org.springframework.integration.store.MessageGroup . setLastModified ( long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message < ? > org.springframework.integration.store.Message<?> ) { this . org.springframework.integration.store.MessageGroup . add ( org.springframework.integration.store.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Message < ? > org.springframework.integration.store.Message<?> ) { return this . org.springframework.integration.store.MessageGroup . remove ( org.springframework.integration.store.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { this . org.springframework.integration.store.MessageGroup . setLastReleasedMessageSequenceNumber ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.integration.store.MessageGroup . clear ( ) ; }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( this . java.util.Collection<org.springframework.integration.store.Message<?>> == null ) { synchronized ( this ) { if ( this . java.util.Collection<org.springframework.integration.store.Message<?>> == null ) { java.lang.Object java.lang.Object = org.springframework.integration.store.PersistentMessageGroup .this . org.springframework.integration.store.MessageGroup . getGroupId ( ) ; if ( org.springframework.integration.store.Log . isDebugEnabled ( ) ) { org.springframework.integration.store.Log . debug ( STRING + java.lang.Object ) ; } this . java.util.Collection<org.springframework.integration.store.Message<?>> = org.springframework.integration.store.PersistentMessageGroup .this . org.springframework.integration.store.MessageGroupStore . getMessagesForGroup ( java.lang.Object ) ; } } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { void ( ) ; return this . java.util.Collection<org.springframework.integration.store.Message<?>> . contains ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object [] java.lang.Object[] ( ) { void ( ) ; return this . java.util.Collection<org.springframework.integration.store.Message<?>> . toArray ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T [] T[] ( T [] T[] ) { void ( ) ; return this . java.util.Collection<org.springframework.integration.store.Message<?>> . toArray ( T[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Collection<?> < ? > java.util.Collection<?> ) { void ( ) ; return this . java.util.Collection<org.springframework.integration.store.Message<?>> . containsAll ( java.util.Collection<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.integration.store.Message<?>> < Message < ? > > java.util.Iterator<org.springframework.integration.store.Message<?>> ( ) { void ( ) ; return this . java.util.Collection<org.springframework.integration.store.Message<?>> . iterator ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.integration.store.PersistentMessageGroup .this . int ( ) ; }  <METHOD_END>
