<METHOD_START> @ Test public void void ( ) { assertTrue ( this . org.springframework.scheduling.config.ScheduledTaskRegistrar . getTriggerTaskList ( ) . isEmpty ( ) ) ; assertTrue ( this . org.springframework.scheduling.config.ScheduledTaskRegistrar . getCronTaskList ( ) . isEmpty ( ) ) ; assertTrue ( this . org.springframework.scheduling.config.ScheduledTaskRegistrar . getFixedRateTaskList ( ) . isEmpty ( ) ) ; assertTrue ( this . org.springframework.scheduling.config.ScheduledTaskRegistrar . getFixedDelayTaskList ( ) . isEmpty ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { TriggerTask org.springframework.scheduling.config.TriggerTask = mock ( TriggerTask .class ) ; java.util.List<org.springframework.scheduling.config.TriggerTask> < TriggerTask > java.util.List<org.springframework.scheduling.config.TriggerTask> = java.util.Collections . java.util.List ( org.springframework.scheduling.config.TriggerTask ) ; this . org.springframework.scheduling.config.ScheduledTaskRegistrar . setTriggerTasksList ( java.util.List<org.springframework.scheduling.config.TriggerTask> ) ; java.util.List<org.springframework.scheduling.config.TriggerTask> < TriggerTask > java.util.List<org.springframework.scheduling.config.TriggerTask> = this . org.springframework.scheduling.config.ScheduledTaskRegistrar . getTriggerTaskList ( ) ; assertEquals ( NUMBER , java.util.List<org.springframework.scheduling.config.TriggerTask> . size ( ) ) ; assertEquals ( org.springframework.scheduling.config.TriggerTask , java.util.List<org.springframework.scheduling.config.TriggerTask> . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CronTask org.springframework.scheduling.config.CronTask = mock ( CronTask .class ) ; java.util.List<org.springframework.scheduling.config.CronTask> < CronTask > java.util.List<org.springframework.scheduling.config.CronTask> = java.util.Collections . java.util.List ( org.springframework.scheduling.config.CronTask ) ; this . org.springframework.scheduling.config.ScheduledTaskRegistrar . setCronTasksList ( java.util.List<org.springframework.scheduling.config.CronTask> ) ; java.util.List<org.springframework.scheduling.config.CronTask> < CronTask > java.util.List<org.springframework.scheduling.config.CronTask> = this . org.springframework.scheduling.config.ScheduledTaskRegistrar . getCronTaskList ( ) ; assertEquals ( NUMBER , java.util.List<org.springframework.scheduling.config.CronTask> . size ( ) ) ; assertEquals ( org.springframework.scheduling.config.CronTask , java.util.List<org.springframework.scheduling.config.CronTask> . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { IntervalTask org.springframework.scheduling.config.IntervalTask = mock ( IntervalTask .class ) ; java.util.List<org.springframework.scheduling.config.IntervalTask> < IntervalTask > java.util.List<org.springframework.scheduling.config.IntervalTask> = java.util.Collections . java.util.List ( org.springframework.scheduling.config.IntervalTask ) ; this . org.springframework.scheduling.config.ScheduledTaskRegistrar . setFixedRateTasksList ( java.util.List<org.springframework.scheduling.config.IntervalTask> ) ; java.util.List<org.springframework.scheduling.config.IntervalTask> < IntervalTask > java.util.List<org.springframework.scheduling.config.IntervalTask> = this . org.springframework.scheduling.config.ScheduledTaskRegistrar . getFixedRateTaskList ( ) ; assertEquals ( NUMBER , java.util.List<org.springframework.scheduling.config.IntervalTask> . size ( ) ) ; assertEquals ( org.springframework.scheduling.config.IntervalTask , java.util.List<org.springframework.scheduling.config.IntervalTask> . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { IntervalTask org.springframework.scheduling.config.IntervalTask = mock ( IntervalTask .class ) ; java.util.List<org.springframework.scheduling.config.IntervalTask> < IntervalTask > java.util.List<org.springframework.scheduling.config.IntervalTask> = java.util.Collections . java.util.List ( org.springframework.scheduling.config.IntervalTask ) ; this . org.springframework.scheduling.config.ScheduledTaskRegistrar . setFixedDelayTasksList ( java.util.List<org.springframework.scheduling.config.IntervalTask> ) ; java.util.List<org.springframework.scheduling.config.IntervalTask> < IntervalTask > java.util.List<org.springframework.scheduling.config.IntervalTask> = this . org.springframework.scheduling.config.ScheduledTaskRegistrar . getFixedDelayTaskList ( ) ; assertEquals ( NUMBER , java.util.List<org.springframework.scheduling.config.IntervalTask> . size ( ) ) ; assertEquals ( org.springframework.scheduling.config.IntervalTask , java.util.List<org.springframework.scheduling.config.IntervalTask> . get ( NUMBER ) ) ; }  <METHOD_END>
