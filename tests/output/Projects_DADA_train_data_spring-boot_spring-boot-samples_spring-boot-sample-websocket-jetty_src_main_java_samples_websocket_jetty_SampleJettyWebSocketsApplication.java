<METHOD_START> @ java.lang.Override public void void ( WebSocketHandlerRegistry samples.websocket.jetty.WebSocketHandlerRegistry ) { samples.websocket.jetty.WebSocketHandlerRegistry . addHandler ( samples.websocket.jetty.WebSocketHandler ( ) , STRING ) . withSockJS ( ) ; samples.websocket.jetty.WebSocketHandlerRegistry . addHandler ( samples.websocket.jetty.WebSocketHandler ( ) , STRING ) . withSockJS ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected samples.websocket.jetty.SpringApplicationBuilder samples.websocket.jetty.SpringApplicationBuilder ( SpringApplicationBuilder samples.websocket.jetty.SpringApplicationBuilder ) { return samples.websocket.jetty.SpringApplicationBuilder . sources ( samples.websocket.jetty.SampleJettyWebSocketsApplication .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public samples.websocket.jetty.EchoService samples.websocket.jetty.EchoService ( ) { return new DefaultEchoService ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean public samples.websocket.jetty.GreetingService samples.websocket.jetty.GreetingService ( ) { return new SimpleGreetingService ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public samples.websocket.jetty.WebSocketHandler samples.websocket.jetty.WebSocketHandler ( ) { return new EchoWebSocketHandler ( samples.websocket.jetty.EchoService ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public samples.websocket.jetty.WebSocketHandler samples.websocket.jetty.WebSocketHandler ( ) { return new PerConnectionWebSocketHandler ( SnakeWebSocketHandler .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public samples.websocket.jetty.ReverseWebSocketEndpoint samples.websocket.jetty.ReverseWebSocketEndpoint ( ) { return new ReverseWebSocketEndpoint ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public samples.websocket.jetty.ServerEndpointExporter samples.websocket.jetty.ServerEndpointExporter ( ) { return new ServerEndpointExporter ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String [] java.lang.String[] ) { SpringApplication . run ( samples.websocket.jetty.SampleJettyWebSocketsApplication .class , java.lang.String[] ) ; }  <METHOD_END>
