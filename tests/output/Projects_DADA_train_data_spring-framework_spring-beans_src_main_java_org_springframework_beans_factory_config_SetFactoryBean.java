<METHOD_START> public void void ( java.util.Set<?> < ? > java.util.Set<?> ) { this . java.util.Set<?> = java.util.Set<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( java.lang.Class<? extends java.util.Set> < ? extends java.util.Set > java.lang.Class<? extends java.util.Set> ) { if ( java.lang.Class<> == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! java.util.Set .class . boolean ( java.lang.Class<> ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . java.lang.Class<? extends java.util.Set> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.lang.Class<java.util.Set> < java.util.Set > java.lang.Class<java.util.Set> ( ) { return java.util.Set .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected java.util.Set<java.lang.Object> < java.lang.Object > java.util.Set<java.lang.Object> ( ) { if ( this . java.util.Set<> == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } java.util.Set<java.lang.Object> < java.lang.Object > java.util.Set<java.lang.Object> = null ; if ( this . java.lang.Class<> != null ) { java.util.Set<java.lang.Object> = BeanUtils . instantiateClass ( this . java.lang.Class<> ) ; } else { java.util.Set<java.lang.Object> = new java.util.LinkedHashSet<java.lang.Object> <> ( this . java.util.Set<> . int ( ) ) ; } java.lang.Class<?> < ? > java.lang.Class<?> = null ; if ( this . java.lang.Class<> != null ) { java.lang.Class<?> = ResolvableType . forClass ( this . java.lang.Class<> ) . asCollection ( ) . resolveGeneric ( ) ; } if ( java.lang.Class<> != null ) { TypeConverter org.springframework.beans.factory.config.TypeConverter = getBeanTypeConverter ( ) ; for ( java.lang.Object java.lang.Object : this . java.util.Set<> ) { java.util.Set<java.lang.Object> . boolean ( org.springframework.beans.factory.config.TypeConverter . convertIfNecessary ( java.lang.Object , java.lang.Class<> ) ) ; } } else { java.util.Set<java.lang.Object> . boolean ( this . java.util.Set<> ) ; } return java.util.Set<java.lang.Object> ; }  <METHOD_END>
