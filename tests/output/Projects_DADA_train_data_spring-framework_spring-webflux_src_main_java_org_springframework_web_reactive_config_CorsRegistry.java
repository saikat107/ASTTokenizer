<METHOD_START> public org.springframework.web.reactive.config.CorsRegistration org.springframework.web.reactive.config.CorsRegistration ( java.lang.String java.lang.String ) { CorsRegistration org.springframework.web.reactive.config.CorsRegistration = new CorsRegistration ( java.lang.String ) ; this . java.util.List<org.springframework.web.reactive.config.CorsRegistration> . add ( org.springframework.web.reactive.config.CorsRegistration ) ; return org.springframework.web.reactive.config.CorsRegistration ; }  <METHOD_END>
<METHOD_START> protected java.util.Map<java.lang.String,org.springframework.web.reactive.config.CorsConfiguration> < java.lang.String , CorsConfiguration > java.util.Map<java.lang.String,org.springframework.web.reactive.config.CorsConfiguration> ( ) { java.util.Map<java.lang.String,org.springframework.web.reactive.config.CorsConfiguration> < java.lang.String , CorsConfiguration > java.util.Map<java.lang.String,org.springframework.web.reactive.config.CorsConfiguration> = new java.util.LinkedHashMap <> ( this . java.util.List<org.springframework.web.reactive.config.CorsRegistration> . size ( ) ) ; for ( CorsRegistration org.springframework.web.reactive.config.CorsRegistration : this . java.util.List<org.springframework.web.reactive.config.CorsRegistration> ) { java.util.Map<java.lang.String,org.springframework.web.reactive.config.CorsConfiguration> . put ( org.springframework.web.reactive.config.CorsRegistration . getPathPattern ( ) , org.springframework.web.reactive.config.CorsRegistration . getCorsConfiguration ( ) ) ; } return java.util.Map<java.lang.String,org.springframework.web.reactive.config.CorsConfiguration> ; }  <METHOD_END>
