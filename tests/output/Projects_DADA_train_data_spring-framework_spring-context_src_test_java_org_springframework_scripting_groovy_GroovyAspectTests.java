<METHOD_START> @ Test public void void ( ) java.lang.Exception { TestService org.springframework.scripting.groovy.TestService = ( TestService ) org.springframework.scripting.groovy.GroovyScriptFactory . getScriptedObject ( new ResourceScriptSource ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectTests> ( ) ) ) ) ; void ( new DefaultPointcutAdvisor ( org.springframework.scripting.groovy.LogUserAdvice ) , org.springframework.scripting.groovy.LogUserAdvice , org.springframework.scripting.groovy.TestService , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { TestService org.springframework.scripting.groovy.TestService = ( TestService ) org.springframework.scripting.groovy.GroovyScriptFactory . getScriptedObject ( new ResourceScriptSource ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectTests> ( ) ) ) ) ; AspectJExpressionPointcut org.springframework.scripting.groovy.AspectJExpressionPointcut = new AspectJExpressionPointcut ( ) ; org.springframework.scripting.groovy.AspectJExpressionPointcut . setExpression ( java.lang.String . java.lang.String ( STRING , ClassUtils . getPackageName ( java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectTests> ( ) ) ) ) ; void ( new DefaultPointcutAdvisor ( org.springframework.scripting.groovy.AspectJExpressionPointcut , org.springframework.scripting.groovy.LogUserAdvice ) , org.springframework.scripting.groovy.LogUserAdvice , org.springframework.scripting.groovy.TestService , STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { TestService org.springframework.scripting.groovy.TestService = ( TestService ) org.springframework.scripting.groovy.GroovyScriptFactory . getScriptedObject ( new ResourceScriptSource ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectTests> ( ) ) ) ) ; AspectJExpressionPointcut org.springframework.scripting.groovy.AspectJExpressionPointcut = new AspectJExpressionPointcut ( ) ; org.springframework.scripting.groovy.AspectJExpressionPointcut . setExpression ( java.lang.String . java.lang.String ( STRING , ClassUtils . getPackageName ( java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectTests> ( ) ) ) ) ; void ( new DefaultPointcutAdvisor ( org.springframework.scripting.groovy.AspectJExpressionPointcut , org.springframework.scripting.groovy.LogUserAdvice ) , org.springframework.scripting.groovy.LogUserAdvice , org.springframework.scripting.groovy.TestService , STRING , false ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { TestService org.springframework.scripting.groovy.TestService = ( TestService ) org.springframework.scripting.groovy.GroovyScriptFactory . getScriptedObject ( new ResourceScriptSource ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectTests> ( ) ) ) ) ; AspectJExpressionPointcut org.springframework.scripting.groovy.AspectJExpressionPointcut = new AspectJExpressionPointcut ( ) ; org.springframework.scripting.groovy.AspectJExpressionPointcut . setExpression ( java.lang.String . java.lang.String ( STRING , ClassUtils . getPackageName ( java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectTests> ( ) ) ) ) ; void ( new DefaultPointcutAdvisor ( org.springframework.scripting.groovy.AspectJExpressionPointcut , org.springframework.scripting.groovy.LogUserAdvice ) , org.springframework.scripting.groovy.LogUserAdvice , org.springframework.scripting.groovy.TestService , STRING , true ) ; }  <METHOD_END>
<METHOD_START> private void void ( Advisor org.springframework.scripting.groovy.Advisor , LogUserAdvice org.springframework.scripting.groovy.LogUserAdvice , TestService org.springframework.scripting.groovy.TestService , java.lang.String java.lang.String )			throws java.lang.Exception { void ( org.springframework.scripting.groovy.Advisor , org.springframework.scripting.groovy.LogUserAdvice , org.springframework.scripting.groovy.TestService , java.lang.String , false ) ; }  <METHOD_END>
<METHOD_START> private void void ( Advisor org.springframework.scripting.groovy.Advisor , LogUserAdvice org.springframework.scripting.groovy.LogUserAdvice , TestService org.springframework.scripting.groovy.TestService , java.lang.String java.lang.String , boolean boolean ) throws java.lang.Exception { org.springframework.scripting.groovy.LogUserAdvice . reset ( ) ; ProxyFactory org.springframework.scripting.groovy.ProxyFactory = new ProxyFactory ( org.springframework.scripting.groovy.TestService ) ; org.springframework.scripting.groovy.ProxyFactory . setProxyTargetClass ( boolean ) ; org.springframework.scripting.groovy.ProxyFactory . addAdvisor ( org.springframework.scripting.groovy.Advisor ) ; TestService org.springframework.scripting.groovy.TestService = ( TestService ) org.springframework.scripting.groovy.ProxyFactory . getProxy ( ) ; assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountThrows ( ) ) ; try { org.springframework.scripting.groovy.TestService . sayHello ( ) ; fail ( STRING ) ; } catch ( TestException org.springframework.scripting.groovy.TestException ) { assertEquals ( java.lang.String , org.springframework.scripting.groovy.TestException . getMessage ( ) ) ; } assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountThrows ( ) ) ; }  <METHOD_END>
