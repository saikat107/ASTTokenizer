<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.mongodb.repository.support.MongoEntityInformation<T,ID> . getCollectionName ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.mongodb.repository.support.MongoEntityInformation<T,ID> . getIdAttribute ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public boolean boolean ( T T ) { if ( T instanceof Persistable ) { return ( ( Persistable < ID > ) T ) . isNew ( ) ; } return org.springframework.data.mongodb.repository.support.MongoEntityInformation<T,ID> . isNew ( T ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.util.Optional<ID> < ID > java.util.Optional<ID> ( T T ) { if ( T instanceof Persistable ) { return java.util.Optional . java.util.Optional ( ( ( Persistable < ID > ) T ) . getId ( ) ) ; } return org.springframework.data.mongodb.repository.support.MongoEntityInformation<T,ID> . getId ( T ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<ID> < ID > java.lang.Class<ID> ( ) { return org.springframework.data.mongodb.repository.support.MongoEntityInformation<T,ID> . getIdType ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<T> < T > java.lang.Class<T> ( ) { return org.springframework.data.mongodb.repository.support.MongoEntityInformation<T,ID> . getJavaType ( ) ; }  <METHOD_END>
