<METHOD_START> @ Test public void void ( ) { this . org.springframework.integration.config.xml.MessageChannel . send ( new GenericMessage < java.io.InputStream > ( new java.io.ByteArrayInputStream ( STRING . byte[] ( ) ) ) ) ; Message < ? > org.springframework.integration.config.xml.Message<?> = org.springframework.integration.config.xml.PollableChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.config.xml.Message<> ) ; assertArrayEquals ( STRING . byte[] ( ) , ( byte [] ) org.springframework.integration.config.xml.Message<> . getPayload ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.integration.config.xml.MessageChannel . send ( new GenericMessage < java.io.InputStream > ( new java.io.ByteArrayInputStream ( STRING . byte[] ( ) ) ) ) ; Message < ? > org.springframework.integration.config.xml.Message<?> = org.springframework.integration.config.xml.PollableChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.config.xml.Message<> ) ; assertArrayEquals ( STRING . byte[] ( ) , ( byte [] ) org.springframework.integration.config.xml.Message<> . getPayload ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.integration.config.xml.MessageChannel . send ( new GenericMessage < java.io.InputStream > ( new java.io.ByteArrayInputStream ( STRING . byte[] ( ) ) ) ) ; Message < ? > org.springframework.integration.config.xml.Message<?> = org.springframework.integration.config.xml.PollableChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.config.xml.Message<> ) ; assertEquals ( STRING , org.springframework.integration.config.xml.Message<> . getPayload ( ) ) ; }  <METHOD_END>
