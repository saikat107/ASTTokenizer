<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) . loadBeanDefinitions ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.beans.factory.xml.SimplePropertyNamespaceHandlerTests> ( ) ) ) ; ITestBean org.springframework.beans.factory.xml.ITestBean = ( TestBean ) org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING ) ; ITestBean org.springframework.beans.factory.xml.ITestBean = ( TestBean ) org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING ) ; assertEquals ( STRING , org.springframework.beans.factory.xml.ITestBean . getName ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.xml.ITestBean . getAge ( ) ) ; assertEquals ( org.springframework.beans.factory.xml.ITestBean . getSpouse ( ) , org.springframework.beans.factory.xml.ITestBean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) . loadBeanDefinitions ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.beans.factory.xml.SimplePropertyNamespaceHandlerTests> ( ) ) ) ; TestBean org.springframework.beans.factory.xml.TestBean = ( TestBean ) org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING ) ; ITestBean org.springframework.beans.factory.xml.ITestBean = org.springframework.beans.factory.xml.TestBean . getSpouse ( ) ; assertEquals ( STRING , org.springframework.beans.factory.xml.ITestBean . getName ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.xml.ITestBean . getAge ( ) ) ; assertEquals ( org.springframework.beans.factory.xml.ITestBean . getSpouse ( ) , org.springframework.beans.factory.xml.TestBean ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionStoreException .class ) public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) . loadBeanDefinitions ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.beans.factory.xml.SimplePropertyNamespaceHandlerTests> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) . loadBeanDefinitions ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.beans.factory.xml.SimplePropertyNamespaceHandlerTests> ( ) ) ) ; ITestBean org.springframework.beans.factory.xml.ITestBean = ( TestBean ) org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING ) ; assertEquals ( STRING , org.springframework.beans.factory.xml.ITestBean . getSpouse ( ) . getName ( ) ) ; }  <METHOD_END>
