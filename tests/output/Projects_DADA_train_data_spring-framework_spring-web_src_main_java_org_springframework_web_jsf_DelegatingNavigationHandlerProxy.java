<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( NavigationHandler org.springframework.web.jsf.NavigationHandler ) { this . org.springframework.web.jsf.NavigationHandler = org.springframework.web.jsf.NavigationHandler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( FacesContext org.springframework.web.jsf.FacesContext , java.lang.String java.lang.String , java.lang.String java.lang.String ) { NavigationHandler org.springframework.web.jsf.NavigationHandler = org.springframework.web.jsf.NavigationHandler ( org.springframework.web.jsf.FacesContext ) ; if ( org.springframework.web.jsf.NavigationHandler instanceof DecoratingNavigationHandler ) { ( ( DecoratingNavigationHandler ) org.springframework.web.jsf.NavigationHandler ) . handleNavigation ( org.springframework.web.jsf.FacesContext , java.lang.String , java.lang.String , this . org.springframework.web.jsf.NavigationHandler ) ; } else { org.springframework.web.jsf.NavigationHandler . handleNavigation ( org.springframework.web.jsf.FacesContext , java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.web.jsf.NavigationHandler org.springframework.web.jsf.NavigationHandler ( FacesContext org.springframework.web.jsf.FacesContext ) { java.lang.String java.lang.String = java.lang.String ( org.springframework.web.jsf.FacesContext ) ; return org.springframework.web.jsf.BeanFactory ( org.springframework.web.jsf.FacesContext ) . getBean ( java.lang.String , NavigationHandler .class ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( FacesContext org.springframework.web.jsf.FacesContext ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected org.springframework.web.jsf.BeanFactory org.springframework.web.jsf.BeanFactory ( FacesContext org.springframework.web.jsf.FacesContext ) { return org.springframework.web.jsf.WebApplicationContext ( org.springframework.web.jsf.FacesContext ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.web.jsf.WebApplicationContext org.springframework.web.jsf.WebApplicationContext ( FacesContext org.springframework.web.jsf.FacesContext ) { return FacesContextUtils . getRequiredWebApplicationContext ( org.springframework.web.jsf.FacesContext ) ; }  <METHOD_END>
