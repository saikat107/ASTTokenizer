<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = null ; }  <METHOD_END>
<METHOD_START> public void ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; this . java.lang.String = null ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( int int ) { return org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( ) . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( int ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( ) . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( ) . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( ) . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( ) . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray . org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray . org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray ( java.lang.Object java.lang.Object ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray . org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray.IndexOfArrayBuilder ( java.lang.String ) . org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray ( java.lang.Object ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray . org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray.IndexOfArrayBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) . indexOf ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory.ReduceInitialValueBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory.ReduceInitialValueBuilder ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory.ReduceInitialValueBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( java.lang.Object java.lang.Object ) { return ( boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) . withInitialValue ( java.lang.Object ) . reduce ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( java.lang.Object java.lang.Object ) { return ( boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) . withInitialValue ( java.lang.Object ) . reduce ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory.ReduceInitialValueBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory.ReduceInitialValueBuilder ( final org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ... org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory . org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayOperatorFactory.ReduceInitialValueBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( java.lang.Object java.lang.Object ) { return ( boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) . withInitialValue ( java.lang.Object ) . reduce ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( java.lang.Object java.lang.Object ) { return ( boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) . withInitialValue ( java.lang.Object ) . reduce ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip ( java.lang.Object ... java.lang.Object[] ) { return ( boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip.ZipBuilder ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip.ZipBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) . zip ( java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.In org.springframework.data.mongodb.core.aggregation.ArrayOperators.In ( java.lang.Object java.lang.Object ) { return ( boolean ( ) ? org.springframework.data.mongodb.core.aggregation.ArrayOperators.In . org.springframework.data.mongodb.core.aggregation.ArrayOperators.In.InBuilder ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.ArrayOperators.In . org.springframework.data.mongodb.core.aggregation.ArrayOperators.In.InBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) . containsValue ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return java.lang.String != null ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( int int ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( append ( int ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ArrayElemAt ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ConcatArrays ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> private void ( ) { }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( Field org.springframework.data.mongodb.core.aggregation.Field ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.FilterExpressionBuilder ( ) . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( org.springframework.data.mongodb.core.aggregation.Field ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( java.util.List<?> < ? > java.util.List<?> ) { Assert . notNull ( java.util.List<> , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.FilterExpressionBuilder ( ) . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( final AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return org.springframework.data.mongodb.core.aggregation.Document ( ExposedFields . from ( org.springframework.data.mongodb.core.aggregation.ExposedField ) , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields , AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; InheritingExposedFieldsAggregationOperationContext org.springframework.data.mongodb.core.aggregation.InheritingExposedFieldsAggregationOperationContext = new InheritingExposedFieldsAggregationOperationContext ( org.springframework.data.mongodb.core.aggregation.ExposedFields , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; org.springframework.data.mongodb.core.aggregation.Document . putAll ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getMappedObject ( new Document ( STRING , java.lang.Object ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ) ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , org.springframework.data.mongodb.core.aggregation.ExposedField . getTarget ( ) ) ; org.springframework.data.mongodb.core.aggregation.Document . putAll ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getMappedObject ( new Document ( STRING , java.lang.Object ( org.springframework.data.mongodb.core.aggregation.InheritingExposedFieldsAggregationOperationContext ) ) ) ) ; return new Document ( STRING , org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return java.lang.Object instanceof Field ? org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( ( Field ) java.lang.Object ) . toString ( ) : java.lang.Object ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { if ( ! ( java.lang.Object instanceof AggregationExpression ) ) { return java.lang.Object ; } NestedDelegatingExpressionAggregationOperationContext org.springframework.data.mongodb.core.aggregation.NestedDelegatingExpressionAggregationOperationContext = new NestedDelegatingExpressionAggregationOperationContext ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; return ( ( AggregationExpression ) java.lang.Object ) . toDocument ( org.springframework.data.mongodb.core.aggregation.NestedDelegatingExpressionAggregationOperationContext ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( java.util.List<?> < ? > java.util.List<?> );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( Field org.springframework.data.mongodb.core.aggregation.Field );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.ConditionBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.ConditionBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter ( Document org.springframework.data.mongodb.core.aggregation.Document );  <METHOD_END>
<METHOD_START> void ( ) { this . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter = new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.InputBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.InputBuilder ( ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.FilterExpressionBuilder ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( java.util.List<?> < ? > java.util.List<?> ) { Assert . notNull ( java.util.List<> , STRING ) ; org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter . java.lang.Object = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.util.List<> ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.AsBuilder ( Field org.springframework.data.mongodb.core.aggregation.Field ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter . java.lang.Object = org.springframework.data.mongodb.core.aggregation.Field ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.ConditionBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter.ConditionBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter . org.springframework.data.mongodb.core.aggregation.ExposedField = new ExposedField ( java.lang.String , true ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter . java.lang.Object = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; return org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter . java.lang.Object = java.lang.String ; return org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter ( Document org.springframework.data.mongodb.core.aggregation.Document ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter . java.lang.Object = org.springframework.data.mongodb.core.aggregation.Document ; return org.springframework.data.mongodb.core.aggregation.ArrayOperators.Filter ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.IsArray ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Size ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( int int ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( append ( int ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice.SliceElementsBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice.SliceElementsBuilder ( final int int ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice.SliceElementsBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( int int ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( append ( int ) ) . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( int ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( int int ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( append ( int ) ) . org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( int ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice org.springframework.data.mongodb.core.aggregation.ArrayOperators.Slice ( int int );  <METHOD_END>
<METHOD_START> private void ( java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ) { super( java.util.List<java.lang.Object> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray.IndexOfArrayBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray.IndexOfArrayBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray.IndexOfArrayBuilder ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray.IndexOfArrayBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray.IndexOfArrayBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray.IndexOfArrayBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray ( Range < java.lang.Long > org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> , STRING ) ; java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList<java.lang.Long> < java.lang.Long > ( NUMBER ) ; java.util.List<java.lang.Long> . boolean ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> . getLowerBound ( ) ) ; if ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> . getUpperBound ( ) != null ) { java.util.List<java.lang.Long> . boolean ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> . getUpperBound ( ) ) ; } return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray ( append ( java.util.List<java.lang.Long> ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.IndexOfArray ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object , java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ) { super( java.util.List<java.lang.Object> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator.RangeOperatorBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator.RangeOperatorBuilder ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator.RangeOperatorBuilder ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator.RangeOperatorBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator.RangeOperatorBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator.RangeOperatorBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator.RangeOperatorBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator.RangeOperatorBuilder ( long long ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator.RangeOperatorBuilder ( long ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator ( long long ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator ( append ( long ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator ( long long ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object , long ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator ( java.util.Arrays . java.util.List ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.RangeOperator ( java.util.Arrays . java.util.List ( java.lang.Object , Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.ReverseArray ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object , java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> < AggregationExpression > java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> ) { this . java.lang.Object = java.lang.Object ; this . java.lang.Object = java.lang.Object ; this . java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> = java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , java.lang.Object ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , java.lang.Object ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; if ( java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> . iterator ( ) . next ( ) instanceof org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; for ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression : java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> ) { org.springframework.data.mongodb.core.aggregation.Document . putAll ( org.springframework.data.mongodb.core.aggregation.AggregationExpression . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , org.springframework.data.mongodb.core.aggregation.Document ) ; } else { org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , ( java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> . iterator ( ) . next ( ) ) . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } return new Document ( STRING , org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { if ( java.lang.Object instanceof Document ) { return java.lang.Object ; } if ( java.lang.Object instanceof AggregationExpression ) { return ( ( AggregationExpression ) java.lang.Object ) . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; } else if ( java.lang.Object instanceof Field ) { return org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( ( ( Field ) java.lang.Object ) ) . toString ( ) ; } else { return org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getMappedObject ( new Document ( STRING , java.lang.Object ) ) . get ( STRING ) ; } }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( final java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder ( final java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( Fields . field ( java.lang.String ) , java.lang.Object , java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; } @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ... org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( Fields . field ( java.lang.String ) , java.lang.Object , java.util.Arrays .< AggregationExpression > java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) ) ; } } ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder ( final java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( Fields . field ( java.lang.String ) , java.lang.Object , java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; } @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ... org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( Fields . field ( java.lang.String ) , java.lang.Object , java.util.Arrays .< AggregationExpression > java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( Fields . field ( java.lang.String ) , java.lang.Object , java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ... org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( Fields . field ( java.lang.String ) , java.lang.Object , java.util.Arrays .< AggregationExpression > java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.InitialValueBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder ( final java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.Object , java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; } @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ... org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.Object , java.util.Arrays .< AggregationExpression > java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) ) ; } } ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder ( final java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.Object , java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; } @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ... org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.Object , java.util.Arrays .< AggregationExpression > java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.Object , java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ... org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.Object , java.util.Arrays .< AggregationExpression > java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationExpression> ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] ) ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.ReduceBuilder ( java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce ( org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ... org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression[] );  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String , AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression.AsBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression.AsBuilder ( final java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression.AsBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ( java.lang.String , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ( java.lang.String , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return new Document ( java.lang.String , org.springframework.data.mongodb.core.aggregation.AggregationExpression . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.PropertyExpression ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression );  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.Field org.springframework.data.mongodb.core.aggregation.Field ( final java.lang.String java.lang.String ) { return new Field ( ) { @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.Variable .this . getName ( ) + STRING + java.lang.String ; } @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.Variable .this . getTarget ( ) + STRING + java.lang.String ; } @ java.lang.Override public boolean boolean ( ) { return false ; } @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ( ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.Variable .this . getName ( ) + STRING + java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.mongodb.core.aggregation.ArrayOperators.Reduce.Variable .this . getTarget ( ) + STRING + java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> protected void ( java . util . java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { super( java.util.Map<java.lang.String,java.lang.Object> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip.ZipBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip.ZipBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip.ZipBuilder ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip.ZipBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip.ZipBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip.ZipBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip ( ) { return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip ( append ( STRING , true ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip ( append ( STRING , Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip ( append ( STRING , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip ( java.lang.Object [] java.lang.Object[] ) { Assert . notNull ( java.lang.Object[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip ( append ( STRING , java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { this . java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( ) ; this . java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip ( java.lang.Object ... java.lang.Object[] ) { Assert . notNull ( java.lang.Object[] , STRING ) ; for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { if ( java.lang.Object instanceof java.lang.String ) { java.util.List<java.lang.Object> . boolean ( Fields . field ( ( java.lang.String ) java.lang.Object ) ) ; } else { java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; } } return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.Zip ( java.util.Collections .< java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( STRING , java.util.List<java.lang.Object> ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ) { super( java.util.List<java.lang.Object> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.In.InBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.In.InBuilder ( final java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.In.InBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.In org.springframework.data.mongodb.core.aggregation.ArrayOperators.In ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.In ( java.util.Arrays . java.util.List ( java.lang.Object , Fields . field ( java.lang.String ) ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.In org.springframework.data.mongodb.core.aggregation.ArrayOperators.In ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.In ( java.util.Arrays . java.util.List ( java.lang.Object , Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.ArrayOperators.In.InBuilder org.springframework.data.mongodb.core.aggregation.ArrayOperators.In.InBuilder ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.In.InBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.In org.springframework.data.mongodb.core.aggregation.ArrayOperators.In ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.In ( java.util.Arrays . java.util.List ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ArrayOperators.In org.springframework.data.mongodb.core.aggregation.ArrayOperators.In ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.ArrayOperators.In ( java.util.Arrays . java.util.List ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ArrayOperators.In org.springframework.data.mongodb.core.aggregation.ArrayOperators.In ( java.lang.Object java.lang.Object );  <METHOD_END>
