<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService = new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestServiceImpl ( ) ; org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice = new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice ( ) ; void ( new DefaultPointcutAdvisor ( org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice ) , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService = new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestServiceImpl ( ) ; org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice = new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice ( ) ; AspectJExpressionPointcut org.springframework.aop.aspectj.AspectJExpressionPointcut = new AspectJExpressionPointcut ( ) ; org.springframework.aop.aspectj.AspectJExpressionPointcut . setExpression ( java.lang.String . java.lang.String ( STRING , java.lang.Class<? extends org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests> ( ) . java.lang.String ( ) ) ) ; void ( new DefaultPointcutAdvisor ( org.springframework.aop.aspectj.AspectJExpressionPointcut , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice ) , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService = new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestServiceImpl ( ) ; org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice = new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice ( ) ; AspectJExpressionPointcut org.springframework.aop.aspectj.AspectJExpressionPointcut = new AspectJExpressionPointcut ( ) ; org.springframework.aop.aspectj.AspectJExpressionPointcut . setExpression ( java.lang.String . java.lang.String ( STRING , java.lang.Class<? extends org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests> ( ) . java.lang.String ( ) ) ) ; void ( new DefaultPointcutAdvisor ( org.springframework.aop.aspectj.AspectJExpressionPointcut , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice ) , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService = new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestServiceImpl ( ) ; org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice = new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice ( ) ; AspectJExpressionPointcut org.springframework.aop.aspectj.AspectJExpressionPointcut = new AspectJExpressionPointcut ( ) ; org.springframework.aop.aspectj.AspectJExpressionPointcut . setExpression ( java.lang.String . java.lang.String ( STRING , java.lang.Class<? extends org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests> ( ) . java.lang.String ( ) ) ) ; void ( new DefaultPointcutAdvisor ( org.springframework.aop.aspectj.AspectJExpressionPointcut , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice ) , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService , STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice = new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice ( ) ; AspectJExpressionPointcut org.springframework.aop.aspectj.AspectJExpressionPointcut = new AspectJExpressionPointcut ( ) ; org.springframework.aop.aspectj.AspectJExpressionPointcut . setExpression ( java.lang.String . java.lang.String ( STRING , java.lang.Class<? extends org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests> ( ) . java.lang.String ( ) ) ) ; void ( new DefaultPointcutAdvisor ( org.springframework.aop.aspectj.AspectJExpressionPointcut , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice ) , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice , new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestServiceImpl ( ) , STRING ) ; org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.SimpleThrowawayClassLoader org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.SimpleThrowawayClassLoader = new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.SimpleThrowawayClassLoader ( new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestServiceImpl ( ) . java.lang.Class<? extends org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestServiceImpl> ( ) . java.lang.ClassLoader ( ) ) ; org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.SimpleThrowawayClassLoader . excludeClass ( org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService .class . java.lang.String ( ) ) ; org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.SimpleThrowawayClassLoader . excludeClass ( org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestException .class . java.lang.String ( ) ) ; org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService = ( org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService ) org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.SimpleThrowawayClassLoader . loadClass ( org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestServiceImpl .class . java.lang.String ( ) ) . newInstance ( ) ; void ( new DefaultPointcutAdvisor ( org.springframework.aop.aspectj.AspectJExpressionPointcut , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice ) , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService , STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( Advisor org.springframework.aop.aspectj.Advisor , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService , java.lang.String java.lang.String )			throws java.lang.Exception { void ( org.springframework.aop.aspectj.Advisor , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService , java.lang.String , false ) ; }  <METHOD_END>
<METHOD_START> private void void ( Advisor org.springframework.aop.aspectj.Advisor , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService , java.lang.String java.lang.String , boolean boolean ) throws java.lang.Exception { org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice . void ( ) ; ProxyFactory org.springframework.aop.aspectj.ProxyFactory = new ProxyFactory ( org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService ) ; org.springframework.aop.aspectj.ProxyFactory . setProxyTargetClass ( boolean ) ; org.springframework.aop.aspectj.ProxyFactory . addAdvisor ( org.springframework.aop.aspectj.Advisor ) ; org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService = ( org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService ) org.springframework.aop.aspectj.ProxyFactory . getProxy ( ) ; assertEquals ( NUMBER , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice . int ( ) ) ; try { org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestService . java.lang.String ( ) ; fail ( STRING ) ; } catch ( org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestException org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestException ) { assertEquals ( java.lang.String , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestException . java.lang.String ( ) ) ; } assertEquals ( NUMBER , org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.LogUserAdvice . int ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { super( java.lang.ClassLoader ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { throw new org.springframework.aop.aspectj.TrickyAspectJPointcutExpressionTests.TestException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] , java.lang.Object java.lang.Object ) throws java.lang.Throwable { int ++ ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Exception java.lang.Exception ) throws java.lang.Throwable { int ++ ; throw java.lang.Exception ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( ) { int = NUMBER ; int = NUMBER ; }  <METHOD_END>
