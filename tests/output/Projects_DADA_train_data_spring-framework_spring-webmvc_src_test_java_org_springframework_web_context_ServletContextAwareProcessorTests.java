<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = new MockServletContext ( ) ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( org.springframework.web.context.ServletContext ) ; ServletContextAwareBean org.springframework.web.context.ServletContextAwareBean = new ServletContextAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletContextAwareBean , STRING ) ; assertNotNull ( STRING , org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; assertEquals ( org.springframework.web.context.ServletContext , org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = new MockServletContext ( ) ; ServletConfig org.springframework.web.context.ServletConfig = new MockServletConfig ( org.springframework.web.context.ServletContext ) ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( org.springframework.web.context.ServletConfig ) ; ServletContextAwareBean org.springframework.web.context.ServletContextAwareBean = new ServletContextAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletContextAwareBean , STRING ) ; assertNotNull ( STRING , org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; assertEquals ( org.springframework.web.context.ServletContext , org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = new MockServletContext ( ) ; ServletConfig org.springframework.web.context.ServletConfig = new MockServletConfig ( org.springframework.web.context.ServletContext ) ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( org.springframework.web.context.ServletContext , org.springframework.web.context.ServletConfig ) ; ServletContextAwareBean org.springframework.web.context.ServletContextAwareBean = new ServletContextAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletContextAwareBean , STRING ) ; assertNotNull ( STRING , org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; assertEquals ( org.springframework.web.context.ServletContext , org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = new MockServletContext ( ) ; ServletConfig org.springframework.web.context.ServletConfig = new MockServletConfig ( org.springframework.web.context.ServletContext ) ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( null , org.springframework.web.context.ServletConfig ) ; ServletContextAwareBean org.springframework.web.context.ServletContextAwareBean = new ServletContextAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletContextAwareBean , STRING ) ; assertNotNull ( STRING , org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; assertEquals ( org.springframework.web.context.ServletContext , org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = new MockServletContext ( ) ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( org.springframework.web.context.ServletContext , null ) ; ServletContextAwareBean org.springframework.web.context.ServletContextAwareBean = new ServletContextAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletContextAwareBean , STRING ) ; assertNotNull ( STRING , org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; assertEquals ( org.springframework.web.context.ServletContext , org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = null ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( org.springframework.web.context.ServletContext ) ; ServletContextAwareBean org.springframework.web.context.ServletContextAwareBean = new ServletContextAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletContextAwareBean , STRING ) ; assertNull ( org.springframework.web.context.ServletContextAwareBean . getServletContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = new MockServletContext ( ) ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( org.springframework.web.context.ServletContext ) ; ServletConfigAwareBean org.springframework.web.context.ServletConfigAwareBean = new ServletConfigAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletConfigAwareBean , STRING ) ; assertNull ( org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = new MockServletContext ( ) ; ServletConfig org.springframework.web.context.ServletConfig = new MockServletConfig ( org.springframework.web.context.ServletContext ) ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( org.springframework.web.context.ServletConfig ) ; ServletConfigAwareBean org.springframework.web.context.ServletConfigAwareBean = new ServletConfigAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletConfigAwareBean , STRING ) ; assertNotNull ( STRING , org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; assertEquals ( org.springframework.web.context.ServletConfig , org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = new MockServletContext ( ) ; ServletConfig org.springframework.web.context.ServletConfig = new MockServletConfig ( org.springframework.web.context.ServletContext ) ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( org.springframework.web.context.ServletContext , org.springframework.web.context.ServletConfig ) ; ServletConfigAwareBean org.springframework.web.context.ServletConfigAwareBean = new ServletConfigAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletConfigAwareBean , STRING ) ; assertNotNull ( STRING , org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; assertEquals ( org.springframework.web.context.ServletConfig , org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = new MockServletContext ( ) ; ServletConfig org.springframework.web.context.ServletConfig = new MockServletConfig ( org.springframework.web.context.ServletContext ) ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( null , org.springframework.web.context.ServletConfig ) ; ServletConfigAwareBean org.springframework.web.context.ServletConfigAwareBean = new ServletConfigAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletConfigAwareBean , STRING ) ; assertNotNull ( STRING , org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; assertEquals ( org.springframework.web.context.ServletConfig , org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = new MockServletContext ( ) ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( org.springframework.web.context.ServletContext , null ) ; ServletConfigAwareBean org.springframework.web.context.ServletConfigAwareBean = new ServletConfigAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletConfigAwareBean , STRING ) ; assertNull ( org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ServletContext org.springframework.web.context.ServletContext = null ; ServletContextAwareProcessor org.springframework.web.context.ServletContextAwareProcessor = new ServletContextAwareProcessor ( org.springframework.web.context.ServletContext ) ; ServletConfigAwareBean org.springframework.web.context.ServletConfigAwareBean = new ServletConfigAwareBean ( ) ; assertNull ( org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; org.springframework.web.context.ServletContextAwareProcessor . postProcessBeforeInitialization ( org.springframework.web.context.ServletConfigAwareBean , STRING ) ; assertNull ( org.springframework.web.context.ServletConfigAwareBean . getServletConfig ( ) ) ; }  <METHOD_END>
