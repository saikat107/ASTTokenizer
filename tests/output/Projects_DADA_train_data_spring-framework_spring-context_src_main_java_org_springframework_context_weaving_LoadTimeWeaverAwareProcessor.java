<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( LoadTimeWeaver org.springframework.context.weaving.LoadTimeWeaver ) { this . org.springframework.context.weaving.LoadTimeWeaver = org.springframework.context.weaving.LoadTimeWeaver ; }  <METHOD_END>
<METHOD_START> public void ( BeanFactory org.springframework.context.weaving.BeanFactory ) { this . org.springframework.context.weaving.BeanFactory = org.springframework.context.weaving.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.context.weaving.BeanFactory ) { this . org.springframework.context.weaving.BeanFactory = org.springframework.context.weaving.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.context.weaving.BeansException { if ( java.lang.Object instanceof LoadTimeWeaverAware ) { LoadTimeWeaver org.springframework.context.weaving.LoadTimeWeaver = this . org.springframework.context.weaving.LoadTimeWeaver ; if ( org.springframework.context.weaving.LoadTimeWeaver == null ) { Assert . state ( this . org.springframework.context.weaving.BeanFactory != null , STRING ) ; org.springframework.context.weaving.LoadTimeWeaver = this . org.springframework.context.weaving.BeanFactory . getBean ( ConfigurableApplicationContext . LOAD_TIME_WEAVER_BEAN_NAME , LoadTimeWeaver .class ) ; } ( ( LoadTimeWeaverAware ) java.lang.Object ) . setLoadTimeWeaver ( org.springframework.context.weaving.LoadTimeWeaver ) ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return java.lang.Object ; }  <METHOD_END>
