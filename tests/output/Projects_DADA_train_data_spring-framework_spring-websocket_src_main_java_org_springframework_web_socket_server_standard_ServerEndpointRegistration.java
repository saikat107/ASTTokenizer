<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.Class<? extends org.springframework.web.socket.server.standard.Endpoint> < ? extends Endpoint > java.lang.Class<? extends org.springframework.web.socket.server.standard.Endpoint> ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.Class<> , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.web.socket.server.standard.BeanCreatingHandlerProvider<org.springframework.web.socket.server.standard.Endpoint> = new BeanCreatingHandlerProvider <> ( java.lang.Class<> ) ; this . org.springframework.web.socket.server.standard.Endpoint = null ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , Endpoint org.springframework.web.socket.server.standard.Endpoint ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.web.socket.server.standard.Endpoint , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.web.socket.server.standard.BeanCreatingHandlerProvider<org.springframework.web.socket.server.standard.Endpoint> = null ; this . org.springframework.web.socket.server.standard.Endpoint = org.springframework.web.socket.server.standard.Endpoint ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<? extends org.springframework.web.socket.server.standard.Endpoint> < ? extends Endpoint > java.lang.Class<? extends org.springframework.web.socket.server.standard.Endpoint> ( ) { return ( this . org.springframework.web.socket.server.standard.Endpoint != null ? this . org.springframework.web.socket.server.standard.Endpoint . getClass ( ) : this . org.springframework.web.socket.server.standard.BeanCreatingHandlerProvider<org.springframework.web.socket.server.standard.Endpoint> . getHandlerType ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.socket.server.standard.Endpoint org.springframework.web.socket.server.standard.Endpoint ( ) { return ( this . org.springframework.web.socket.server.standard.Endpoint != null ) ? this . org.springframework.web.socket.server.standard.Endpoint : this . org.springframework.web.socket.server.standard.BeanCreatingHandlerProvider<org.springframework.web.socket.server.standard.Endpoint> . getHandler ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return this . java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.web.socket.server.standard.Extension> < Extension > java.util.List<org.springframework.web.socket.server.standard.Extension> ) { this . java.util.List<org.springframework.web.socket.server.standard.Extension> = java.util.List<org.springframework.web.socket.server.standard.Extension> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.web.socket.server.standard.Extension> < Extension > java.util.List<org.springframework.web.socket.server.standard.Extension> ( ) { return this . java.util.List<org.springframework.web.socket.server.standard.Extension> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { this . java.util.Map<java.lang.String,java.lang.Object> . void ( ) ; this . java.util.Map<java.lang.String,java.lang.Object> . void ( java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { return this . java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Encoder>> < java.lang.Class<? extends org.springframework.web.socket.server.standard.Encoder> < ? extends Encoder > > java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Encoder>> ) { this . java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Encoder>> = java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Encoder>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Encoder>> < java.lang.Class<? extends org.springframework.web.socket.server.standard.Encoder> < ? extends Encoder > > java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Encoder>> ( ) { return this . java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Encoder>> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Decoder>> < java.lang.Class<? extends org.springframework.web.socket.server.standard.Decoder> < ? extends Decoder > > java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Decoder>> ) { this . java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Decoder>> = java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Decoder>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Decoder>> < java.lang.Class<? extends org.springframework.web.socket.server.standard.Decoder> < ? extends Decoder > > java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Decoder>> ( ) { return this . java.util.List<java.lang.Class<? extends org.springframework.web.socket.server.standard.Decoder>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.socket.server.standard.Configurator org.springframework.web.socket.server.standard.Configurator ( ) { return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.web.socket.server.standard.BeanFactory ) { if ( this . org.springframework.web.socket.server.standard.BeanCreatingHandlerProvider<org.springframework.web.socket.server.standard.Endpoint> != null ) { this . org.springframework.web.socket.server.standard.BeanCreatingHandlerProvider<org.springframework.web.socket.server.standard.Endpoint> . setBeanFactory ( org.springframework.web.socket.server.standard.BeanFactory ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public final < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) throws java.lang.InstantiationException { return ( T ) org.springframework.web.socket.server.standard.Endpoint ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServerEndpointConfig org.springframework.web.socket.server.standard.ServerEndpointConfig , HandshakeRequest org.springframework.web.socket.server.standard.HandshakeRequest , HandshakeResponse org.springframework.web.socket.server.standard.HandshakeResponse ) { super. modifyHandshake ( this , org.springframework.web.socket.server.standard.HandshakeRequest , org.springframework.web.socket.server.standard.HandshakeResponse ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return super. checkOrigin ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return super. getNegotiatedSubprotocol ( java.util.List<java.lang.String> , java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.web.socket.server.standard.Extension> < Extension > java.util.List<org.springframework.web.socket.server.standard.Extension> ( java.util.List<org.springframework.web.socket.server.standard.Extension> < Extension > java.util.List<org.springframework.web.socket.server.standard.Extension> , java.util.List<org.springframework.web.socket.server.standard.Extension> < Extension > java.util.List<org.springframework.web.socket.server.standard.Extension> ) { return super. getNegotiatedExtensions ( java.util.List<org.springframework.web.socket.server.standard.Extension> , java.util.List<org.springframework.web.socket.server.standard.Extension> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + java.lang.String ( ) + STRING + java.lang.Class<? extends org.springframework.web.socket.server.standard.Endpoint> ( ) ; }  <METHOD_END>
