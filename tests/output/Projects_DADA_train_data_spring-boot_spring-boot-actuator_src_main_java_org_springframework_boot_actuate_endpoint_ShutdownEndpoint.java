<METHOD_START> public void ( ) { super( STRING , true , false ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { if ( this . org.springframework.boot.actuate.endpoint.ConfigurableApplicationContext == null ) { return java.util.Map<java.lang.String,java.lang.Object> ; } try { return java.util.Map<java.lang.String,java.lang.Object> ; } finally { java.lang.Thread java.lang.Thread = new java.lang.Thread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { try { java.lang.Thread . void ( NUMBER ) ; } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { java.lang.Thread . java.lang.Thread ( ) . void ( ) ; } org.springframework.boot.actuate.endpoint.ShutdownEndpoint .this . org.springframework.boot.actuate.endpoint.ConfigurableApplicationContext . close ( ) ; } } ) ; java.lang.Thread . void ( java.lang.Class<? extends org.springframework.boot.actuate.endpoint.ShutdownEndpoint> ( ) . java.lang.ClassLoader ( ) ) ; java.lang.Thread . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { try { java.lang.Thread . void ( NUMBER ) ; } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { java.lang.Thread . java.lang.Thread ( ) . void ( ) ; } org.springframework.boot.actuate.endpoint.ShutdownEndpoint .this . org.springframework.boot.actuate.endpoint.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.boot.actuate.endpoint.ApplicationContext ) throws org.springframework.boot.actuate.endpoint.BeansException { if ( org.springframework.boot.actuate.endpoint.ApplicationContext instanceof ConfigurableApplicationContext ) { this . org.springframework.boot.actuate.endpoint.ConfigurableApplicationContext = ( ConfigurableApplicationContext ) org.springframework.boot.actuate.endpoint.ApplicationContext ; } }  <METHOD_END>
