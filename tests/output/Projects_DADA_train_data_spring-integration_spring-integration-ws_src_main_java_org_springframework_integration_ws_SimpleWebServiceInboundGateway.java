<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( MessageContext org.springframework.integration.ws.MessageContext ) throws java.lang.Exception { WebServiceMessage org.springframework.integration.ws.WebServiceMessage = org.springframework.integration.ws.MessageContext . getRequest ( ) ; Assert . notNull ( org.springframework.integration.ws.WebServiceMessage , STRING ) ; AbstractIntegrationMessageBuilder < ? > org.springframework.integration.ws.AbstractIntegrationMessageBuilder<?> = this . getMessageBuilderFactory ( ) . withPayload ( ( this . boolean ) ? org.springframework.integration.ws.WebServiceMessage . getPayloadSource ( ) : org.springframework.integration.ws.WebServiceMessage ) ; this . fromSoapHeaders ( org.springframework.integration.ws.MessageContext , org.springframework.integration.ws.AbstractIntegrationMessageBuilder<> ) ; Message < ? > org.springframework.integration.ws.Message<?> = this . sendAndReceiveMessage ( org.springframework.integration.ws.AbstractIntegrationMessageBuilder<> . build ( ) ) ; if ( org.springframework.integration.ws.Message<> != null ) { java.lang.Object java.lang.Object = org.springframework.integration.ws.Message<> . getPayload ( ) ; javax.xml.transform.Source javax.xml.transform.Source = null ; if ( java.lang.Object instanceof WebServiceMessage ) { org.springframework.integration.ws.MessageContext . setResponse ( ( WebServiceMessage ) java.lang.Object ) ; } else { if ( java.lang.Object instanceof javax.xml.transform.Source ) { javax.xml.transform.Source = ( javax.xml.transform.Source ) java.lang.Object ; } else if ( java.lang.Object instanceof org.w3c.dom.Document ) { javax.xml.transform.Source = new javax.xml.transform.dom.DOMSource ( ( org.w3c.dom.Document ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.String ) { javax.xml.transform.Source = new StringSource ( ( java.lang.String ) java.lang.Object ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + javax.xml.transform.Source .class . java.lang.String ( ) + STRING + org.w3c.dom.Document .class . java.lang.String ( ) + STRING + WebServiceMessage .class . java.lang.String ( ) + STRING + STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) + STRING ) ; } WebServiceMessage org.springframework.integration.ws.WebServiceMessage = org.springframework.integration.ws.MessageContext . getResponse ( ) ; this . org.springframework.integration.ws.SimpleWebServiceInboundGateway.TransformerSupportDelegate . void ( javax.xml.transform.Source , org.springframework.integration.ws.WebServiceMessage . getPayloadResult ( ) ) ; toSoapHeaders ( org.springframework.integration.ws.WebServiceMessage , org.springframework.integration.ws.Message<> ) ; } } }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> void void ( javax.xml.transform.Source javax.xml.transform.Source , javax.xml.transform.Result javax.xml.transform.Result ) throws javax.xml.transform.TransformerException { this . transform ( javax.xml.transform.Source , javax.xml.transform.Result ) ; }  <METHOD_END>
