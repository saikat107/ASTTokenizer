<METHOD_START> protected void ( java.lang.Class<? extends T> < ? extends T > java.lang.Class<? extends T> ) { super( java.lang.Class<> ); }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String == null ? TxUtils . DEFAULT_TRANSACTION_MANAGER : java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected final org.springframework.data.repository.core.support.RepositoryFactorySupport org.springframework.data.repository.core.support.RepositoryFactorySupport ( ) { RepositoryFactorySupport org.springframework.data.repository.core.support.RepositoryFactorySupport = org.springframework.data.repository.core.support.RepositoryFactorySupport ( ) ; org.springframework.data.repository.core.support.RepositoryFactorySupport . addRepositoryProxyPostProcessor ( org.springframework.data.repository.core.support.RepositoryProxyPostProcessor ) ; org.springframework.data.repository.core.support.RepositoryFactorySupport . addRepositoryProxyPostProcessor ( org.springframework.data.repository.core.support.RepositoryProxyPostProcessor ) ; return org.springframework.data.repository.core.support.RepositoryFactorySupport ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.data.repository.core.support.RepositoryFactorySupport org.springframework.data.repository.core.support.RepositoryFactorySupport ( )  <METHOD_END>
<METHOD_START> public void void ( BeanFactory org.springframework.data.repository.core.support.BeanFactory ) { Assert . isInstanceOf ( ListableBeanFactory .class , org.springframework.data.repository.core.support.BeanFactory ) ; super. setBeanFactory ( org.springframework.data.repository.core.support.BeanFactory ) ; ListableBeanFactory org.springframework.data.repository.core.support.ListableBeanFactory = ( ListableBeanFactory ) org.springframework.data.repository.core.support.BeanFactory ; this . org.springframework.data.repository.core.support.RepositoryProxyPostProcessor = new TransactionalRepositoryProxyPostProcessor ( org.springframework.data.repository.core.support.ListableBeanFactory , java.lang.String , boolean ) ; this . org.springframework.data.repository.core.support.RepositoryProxyPostProcessor = new PersistenceExceptionTranslationRepositoryProxyPostProcessor ( org.springframework.data.repository.core.support.ListableBeanFactory ) ; }  <METHOD_END>
