<METHOD_START> @ Test public void void ( ) java.lang.Exception { Resource org.springframework.scripting.support.Resource = mock ( Resource .class ) ; given ( org.springframework.scripting.support.Resource . lastModified ( ) ) . willThrow ( new java.io.IOException ( ) ) ; ResourceScriptSource org.springframework.scripting.support.ResourceScriptSource = new ResourceScriptSource ( org.springframework.scripting.support.Resource ) ; long long = org.springframework.scripting.support.ResourceScriptSource . retrieveLastModifiedTime ( ) ; assertEquals ( NUMBER , long ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Resource org.springframework.scripting.support.Resource = mock ( Resource .class ) ; ResourceScriptSource org.springframework.scripting.support.ResourceScriptSource = new ResourceScriptSource ( org.springframework.scripting.support.Resource ) ; assertTrue ( org.springframework.scripting.support.ResourceScriptSource . isModified ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Resource org.springframework.scripting.support.Resource = mock ( Resource .class ) ; given ( org.springframework.scripting.support.Resource . lastModified ( ) ) . willReturn ( NUMBER , NUMBER , NUMBER ) ; given ( org.springframework.scripting.support.Resource . getInputStream ( ) ) . willReturn ( StreamUtils . emptyInput ( ) ) ; ResourceScriptSource org.springframework.scripting.support.ResourceScriptSource = new ResourceScriptSource ( org.springframework.scripting.support.Resource ) ; assertTrue ( STRING , org.springframework.scripting.support.ResourceScriptSource . isModified ( ) ) ; org.springframework.scripting.support.ResourceScriptSource . getScriptAsString ( ) ; assertFalse ( STRING , org.springframework.scripting.support.ResourceScriptSource . isModified ( ) ) ; assertTrue ( STRING , org.springframework.scripting.support.ResourceScriptSource . isModified ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Resource org.springframework.scripting.support.Resource = new ByteArrayResource ( new byte [ NUMBER ] ) ; ResourceScriptSource org.springframework.scripting.support.ResourceScriptSource = new ResourceScriptSource ( org.springframework.scripting.support.Resource ) ; assertTrue ( STRING , org.springframework.scripting.support.ResourceScriptSource . isModified ( ) ) ; org.springframework.scripting.support.ResourceScriptSource . getScriptAsString ( ) ; assertFalse ( STRING , org.springframework.scripting.support.ResourceScriptSource . isModified ( ) ) ; assertFalse ( STRING , org.springframework.scripting.support.ResourceScriptSource . isModified ( ) ) ; }  <METHOD_END>
