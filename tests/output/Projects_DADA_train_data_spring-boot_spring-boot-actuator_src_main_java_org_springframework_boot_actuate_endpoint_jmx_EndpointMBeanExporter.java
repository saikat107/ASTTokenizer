<METHOD_START> public void ( ) { this( null ); }  <METHOD_END>
<METHOD_START> public void ( ObjectMapper org.springframework.boot.actuate.endpoint.jmx.ObjectMapper ) { this . org.springframework.boot.actuate.endpoint.jmx.ObjectMapper = ( org.springframework.boot.actuate.endpoint.jmx.ObjectMapper == null ? new ObjectMapper ( ) : org.springframework.boot.actuate.endpoint.jmx.ObjectMapper ) ; setAutodetect ( false ) ; setNamingStrategy ( this . org.springframework.boot.actuate.endpoint.jmx.MetadataNamingStrategy ) ; setAssembler ( this . org.springframework.boot.actuate.endpoint.jmx.MetadataMBeanInfoAssembler ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.boot.actuate.endpoint.jmx.ApplicationContext )			throws org.springframework.boot.actuate.endpoint.jmx.BeansException { this . org.springframework.boot.actuate.endpoint.jmx.ApplicationContext = org.springframework.boot.actuate.endpoint.jmx.ApplicationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.boot.actuate.endpoint.jmx.BeanFactory ) { super. setBeanFactory ( org.springframework.boot.actuate.endpoint.jmx.BeanFactory ) ; if ( org.springframework.boot.actuate.endpoint.jmx.BeanFactory instanceof ListableBeanFactory ) { this . org.springframework.boot.actuate.endpoint.jmx.ListableBeanFactory = ( ListableBeanFactory ) org.springframework.boot.actuate.endpoint.jmx.BeanFactory ; } else { org.springframework.boot.actuate.endpoint.jmx.Log . warn ( STRING + STRING ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { super. setEnsureUniqueRuntimeObjectNames ( boolean ) ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Properties java.util.Properties ) { this . java.util.Properties = java.util.Properties ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { void ( this . org.springframework.boot.actuate.endpoint.jmx.ListableBeanFactory . getBeansOfType ( JmxEndpoint .class ) ) ; void ( this . org.springframework.boot.actuate.endpoint.jmx.ListableBeanFactory . getBeansOfType ( Endpoint .class ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint> < java.lang.String , JmxEndpoint > java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint> ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint> < java.lang.String , JmxEndpoint > java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint> : java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint> . entrySet ( ) ) { java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint> . getKey ( ) ; JmxEndpoint org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint = java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint> . getValue ( ) ; java.lang.Class<?> < ? > java.lang.Class<?> = ( org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint . getEndpointType ( ) != null ? org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint . getEndpointType ( ) : org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint . getClass ( ) ) ; if ( ! this . java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) && org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint . isEnabled ( ) ) { try { registerBeanNameOrInstance ( org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint , java.lang.String ) ; } catch ( MBeanExportException org.springframework.boot.actuate.endpoint.jmx.MBeanExportException ) { org.springframework.boot.actuate.endpoint.jmx.Log . error ( STRING + java.lang.String + STRING , org.springframework.boot.actuate.endpoint.jmx.MBeanExportException ) ; } this . java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private void void ( java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.Endpoint> < java.lang.String , Endpoint > java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.Endpoint> ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.Endpoint> < java.lang.String , Endpoint > java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.Endpoint> : java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.Endpoint> . entrySet ( ) ) { java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.Endpoint> . getKey ( ) ; Endpoint org.springframework.boot.actuate.endpoint.jmx.Endpoint = java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.jmx.Endpoint> . getValue ( ) ; java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.boot.actuate.endpoint.jmx.Endpoint . getClass ( ) ; if ( ! this . java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) && org.springframework.boot.actuate.endpoint.jmx.Endpoint . isEnabled ( ) ) { void ( java.lang.String , org.springframework.boot.actuate.endpoint.jmx.Endpoint ) ; this . java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated protected void void ( java.lang.String java.lang.String , Endpoint < ? > org.springframework.boot.actuate.endpoint.jmx.Endpoint<?> ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.boot.actuate.endpoint.jmx.Endpoint<> . getClass ( ) ; if ( boolean ( java.lang.Class<> ) || ( java.lang.Class<> . boolean ( ) && boolean ( java.lang.Class<> . java.lang.Class<?> ( ) ) ) ) { return; } JmxEndpoint org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint = org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint ( java.lang.String , org.springframework.boot.actuate.endpoint.jmx.Endpoint<> ) ; try { registerBeanNameOrInstance ( org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint , java.lang.String ) ; } catch ( MBeanExportException org.springframework.boot.actuate.endpoint.jmx.MBeanExportException ) { org.springframework.boot.actuate.endpoint.jmx.Log . error ( STRING + java.lang.String + STRING , org.springframework.boot.actuate.endpoint.jmx.MBeanExportException ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return AnnotationUtils . findAnnotation ( java.lang.Class<> , ManagedResource .class ) != null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint ( java.lang.String java.lang.String , Endpoint < ? > org.springframework.boot.actuate.endpoint.jmx.Endpoint<?> ) { return org.springframework.boot.actuate.endpoint.jmx.EndpointMBean ( java.lang.String , org.springframework.boot.actuate.endpoint.jmx.Endpoint<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated protected org.springframework.boot.actuate.endpoint.jmx.EndpointMBean org.springframework.boot.actuate.endpoint.jmx.EndpointMBean ( java.lang.String java.lang.String , Endpoint < ? > org.springframework.boot.actuate.endpoint.jmx.Endpoint<?> ) { if ( org.springframework.boot.actuate.endpoint.jmx.Endpoint<> instanceof ShutdownEndpoint ) { return new ShutdownEndpointMBean ( java.lang.String , org.springframework.boot.actuate.endpoint.jmx.Endpoint<> , this . org.springframework.boot.actuate.endpoint.jmx.ObjectMapper ) ; } if ( org.springframework.boot.actuate.endpoint.jmx.Endpoint<> instanceof LoggersEndpoint ) { return new LoggersEndpointMBean ( java.lang.String , org.springframework.boot.actuate.endpoint.jmx.Endpoint<> , this . org.springframework.boot.actuate.endpoint.jmx.ObjectMapper ) ; } return new DataEndpointMBean ( java.lang.String , org.springframework.boot.actuate.endpoint.jmx.Endpoint<> , this . org.springframework.boot.actuate.endpoint.jmx.ObjectMapper ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected javax.management.ObjectName javax.management.ObjectName ( java.lang.Object java.lang.Object , java.lang.String java.lang.String )			throws javax.management.MalformedObjectNameException { if ( java.lang.Object instanceof SelfNaming ) { return ( ( SelfNaming ) java.lang.Object ) . getObjectName ( ) ; } if ( java.lang.Object instanceof JmxEndpoint ) { return javax.management.ObjectName ( ( JmxEndpoint ) java.lang.Object , java.lang.String ) ; } return this . org.springframework.boot.actuate.endpoint.jmx.MetadataNamingStrategy . getObjectName ( java.lang.Object , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private javax.management.ObjectName javax.management.ObjectName ( JmxEndpoint org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint , java.lang.String java.lang.String )			throws javax.management.MalformedObjectNameException { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( this . java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.lang.String ) ; if ( boolean ( this . org.springframework.boot.actuate.endpoint.jmx.ApplicationContext , java.lang.String ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING + ObjectUtils . getIdentityHexString ( this . org.springframework.boot.actuate.endpoint.jmx.ApplicationContext ) ) ; } if ( this . boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING + org.springframework.boot.actuate.endpoint.jmx.JmxEndpoint . getIdentity ( ) ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ( ) ) ; return ObjectNameManager . getInstance ( java.lang.StringBuilder . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ApplicationContext org.springframework.boot.actuate.endpoint.jmx.ApplicationContext , java.lang.String java.lang.String ) { if ( org.springframework.boot.actuate.endpoint.jmx.ApplicationContext . getParent ( ) != null ) { try { java.lang.Object java.lang.Object = this . org.springframework.boot.actuate.endpoint.jmx.ApplicationContext . getParent ( ) . getBean ( java.lang.String ) ; if ( java.lang.Object instanceof Endpoint || java.lang.Object instanceof JmxEndpoint ) { return true ; } } catch ( BeansException org.springframework.boot.actuate.endpoint.jmx.BeansException ) { } return boolean ( org.springframework.boot.actuate.endpoint.jmx.ApplicationContext . getParent ( ) , java.lang.String ) ; } return false ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) { if ( this . java.util.Properties . boolean ( ) ) { return STRING ; } java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( java.util.Map.Entry<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > java.util.Map.Entry<java.lang.Object,java.lang.Object> : this . java.util.Properties . java.util.Set<java.util.Map.Entry<java.lang.Object,java.lang.Object>> ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.util.Map.Entry<java.lang.Object,java.lang.Object> . java.lang.Object ( ) + STRING + java.util.Map.Entry<java.lang.Object,java.lang.Object> . java.lang.Object ( ) ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final boolean boolean ( ) { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; try { return this . boolean ; } finally { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( ) { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; try { if ( ! this . boolean ) { this . void ( ) ; this . boolean = true ; } } finally { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( ) { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; try { if ( this . boolean ) { this . boolean = false ; } } finally { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( java.lang.Runnable java.lang.Runnable ) { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; try { this . void ( ) ; java.lang.Runnable . void ( ) ; } finally { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org . springframework . org.springframework.jmx . org.springframework.jmx . org.springframework.jmx . org.springframework.jmx.export.metadata.ManagedResource org.springframework.jmx.export.metadata.ManagedResource ( java.lang.Class<?> < ? > java.lang.Class<?> ) throws org.springframework.boot.actuate.endpoint.jmx.InvalidMetadataException { Assert . state ( super. getManagedResource ( java.lang.Class<> ) == null , STRING + java.lang.Class<> ) ; return new org . springframework . org.springframework.jmx . org.springframework.jmx . org.springframework.jmx . org.springframework.jmx ( ) ; }  <METHOD_END>
