<METHOD_START> @ Before public void void ( ) { org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> = new FieldWithQueryParameters <> ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new FieldWithQueryParameters < QueryParameterImpl > ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new FieldWithQueryParameters < QueryParameterImpl > ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Assert . assertThat ( org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . getQueryParameters ( ) , IsEmptyCollection . empty ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Assert . assertFalse ( org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . hasQueryParameters ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Assert . assertNull ( org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . getQueryParameter ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Assert . assertThat ( org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> , IsEmptyIterable . emptyIterable ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . addQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl ) ; Assert . assertTrue ( org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . hasQueryParameters ( ) ) ; Assert . assertThat ( org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . getQueryParameters ( ) , IsNot . not ( IsEmptyCollection . empty ( ) ) ) ; Assert . assertThat ( org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> , IsNot . not ( IsEmptyIterable . emptyIterable ( ) ) ) ; Assert . assertEquals ( org.springframework.data.solr.core.query.QueryParameterImpl , org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . getQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl . getName ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . addQueryParameter ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . addQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl ) ; org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . addQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl ) ; org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . addQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl ) ; Assert . assertThat ( org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . getQueryParameters ( ) , Matchers . contains ( org.springframework.data.solr.core.query.QueryParameterImpl , org.springframework.data.solr.core.query.QueryParameterImpl , org.springframework.data.solr.core.query.QueryParameterImpl ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . addQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl ) ; org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . addQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl ) ; Assert . assertEquals ( org.springframework.data.solr.core.query.QueryParameterImpl , org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . getQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl . getName ( ) ) ) ; Assert . assertEquals ( org.springframework.data.solr.core.query.QueryParameterImpl , org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . getQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl . getName ( ) ) ) ; Assert . assertNull ( org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . getQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl . getName ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . addQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl ) ; org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . addQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl ) ; org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . addQueryParameter ( org.springframework.data.solr.core.query.QueryParameterImpl ) ; java.lang.String java.lang.String = org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . getQueryParameterValue ( org.springframework.data.solr.core.query.QueryParameterImpl . getName ( ) ) ; java.lang.Integer java.lang.Integer = org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . getQueryParameterValue ( org.springframework.data.solr.core.query.QueryParameterImpl . getName ( ) ) ; java.util.Date java.util.Date = org.springframework.data.solr.core.query.FieldWithQueryParameters<org.springframework.data.solr.core.query.QueryParameterImpl> . getQueryParameterValue ( org.springframework.data.solr.core.query.QueryParameterImpl . getName ( ) ) ; Assert . assertEquals ( org.springframework.data.solr.core.query.QueryParameterImpl . getValue ( ) , java.lang.String ) ; Assert . assertEquals ( org.springframework.data.solr.core.query.QueryParameterImpl . getValue ( ) , java.lang.Integer ) ; Assert . assertEquals ( org.springframework.data.solr.core.query.QueryParameterImpl . getValue ( ) , java.util.Date ) ; }  <METHOD_END>
