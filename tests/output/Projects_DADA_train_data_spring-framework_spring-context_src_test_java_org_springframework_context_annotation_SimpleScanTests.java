<METHOD_START> protected java.lang.String [] java.lang.String[] ( ) { return new java.lang.String [] { STRING } ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathXmlApplicationContext org.springframework.context.annotation.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( java.lang.String[] ( ) , java.lang.Class<? extends org.springframework.context.annotation.SimpleScanTests> ( ) ) ; FooService org.springframework.context.annotation.FooService = ( FooService ) org.springframework.context.annotation.ClassPathXmlApplicationContext . getBean ( STRING ) ; ServiceInvocationCounter org.springframework.context.annotation.ServiceInvocationCounter = ( ServiceInvocationCounter ) org.springframework.context.annotation.ClassPathXmlApplicationContext . getBean ( STRING ) ; assertEquals ( NUMBER , org.springframework.context.annotation.ServiceInvocationCounter . getCount ( ) ) ; assertTrue ( org.springframework.context.annotation.FooService . isInitCalled ( ) ) ; assertEquals ( NUMBER , org.springframework.context.annotation.ServiceInvocationCounter . getCount ( ) ) ; java.lang.String java.lang.String = org.springframework.context.annotation.FooService . foo ( NUMBER ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( NUMBER , org.springframework.context.annotation.ServiceInvocationCounter . getCount ( ) ) ; org.springframework.context.annotation.FooService . foo ( NUMBER ) ; assertEquals ( NUMBER , org.springframework.context.annotation.ServiceInvocationCounter . getCount ( ) ) ; }  <METHOD_END>
