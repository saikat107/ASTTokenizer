<METHOD_START> public org.springframework.integration.dsl.DirectChannelSpec org.springframework.integration.dsl.DirectChannelSpec ( ) { return MessageChannels . direct ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.DirectChannelSpec org.springframework.integration.dsl.DirectChannelSpec ( java.lang.String java.lang.String ) { return MessageChannels . direct ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.QueueChannelSpec org.springframework.integration.dsl.QueueChannelSpec ( ) { return MessageChannels . queue ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.QueueChannelSpec org.springframework.integration.dsl.QueueChannelSpec ( java.lang.String java.lang.String ) { return MessageChannels . queue ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.QueueChannelSpec org.springframework.integration.dsl.QueueChannelSpec ( java.lang.Integer java.lang.Integer ) { return MessageChannels . queue ( java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.QueueChannelSpec org.springframework.integration.dsl.QueueChannelSpec ( java.lang.String java.lang.String , java.lang.Integer java.lang.Integer ) { return MessageChannels . queue ( java.lang.String , java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.QueueChannelSpec org.springframework.integration.dsl.QueueChannelSpec ( java.util.Queue<org.springframework.integration.dsl.Message<?>> < Message < ? > > java.util.Queue<org.springframework.integration.dsl.Message<?>> ) { return MessageChannels . queue ( java.util.Queue<org.springframework.integration.dsl.Message<?>> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.QueueChannelSpec org.springframework.integration.dsl.QueueChannelSpec ( java.lang.String java.lang.String , java.util.Queue<org.springframework.integration.dsl.Message<?>> < Message < ? > > java.util.Queue<org.springframework.integration.dsl.Message<?>> ) { return MessageChannels . queue ( java.lang.String , java.util.Queue<org.springframework.integration.dsl.Message<?>> ) ; }  <METHOD_END>
<METHOD_START> public QueueChannelSpec . QueueChannelSpec.MessageStoreSpec QueueChannelSpec.MessageStoreSpec ( ChannelMessageStore org.springframework.integration.dsl.ChannelMessageStore , java.lang.Object java.lang.Object ) { return MessageChannels . queue ( org.springframework.integration.dsl.ChannelMessageStore , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public QueueChannelSpec . QueueChannelSpec.MessageStoreSpec QueueChannelSpec.MessageStoreSpec ( java.lang.String java.lang.String , ChannelMessageStore org.springframework.integration.dsl.ChannelMessageStore , java.lang.Object java.lang.Object ) { return MessageChannels . queue ( java.lang.String , org.springframework.integration.dsl.ChannelMessageStore , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.PriorityChannelSpec org.springframework.integration.dsl.PriorityChannelSpec ( ) { return MessageChannels . priority ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.PriorityChannelSpec org.springframework.integration.dsl.PriorityChannelSpec ( java.lang.String java.lang.String ) { return MessageChannels . priority ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.PriorityChannelSpec org.springframework.integration.dsl.PriorityChannelSpec ( java.lang.String java.lang.String , PriorityCapableChannelMessageStore org.springframework.integration.dsl.PriorityCapableChannelMessageStore , java.lang.Object java.lang.Object ) { return MessageChannels . priority ( java.lang.String , org.springframework.integration.dsl.PriorityCapableChannelMessageStore , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RendezvousChannelSpec org.springframework.integration.dsl.RendezvousChannelSpec ( ) { return MessageChannels . rendezvous ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.PriorityChannelSpec org.springframework.integration.dsl.PriorityChannelSpec ( PriorityCapableChannelMessageStore org.springframework.integration.dsl.PriorityCapableChannelMessageStore , java.lang.Object java.lang.Object ) { return MessageChannels . priority ( org.springframework.integration.dsl.PriorityCapableChannelMessageStore , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.RendezvousChannelSpec org.springframework.integration.dsl.RendezvousChannelSpec ( java.lang.String java.lang.String ) { return MessageChannels . rendezvous ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.PublishSubscribeChannelSpec<? extends org.springframework.integration.dsl.PublishSubscribeChannelSpec<?>> < ? extends PublishSubscribeChannelSpec < ? > > org.springframework.integration.dsl.PublishSubscribeChannelSpec<? extends org.springframework.integration.dsl.PublishSubscribeChannelSpec<?>> ( ) { return MessageChannels . publishSubscribe ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.PublishSubscribeChannelSpec<? extends org.springframework.integration.dsl.PublishSubscribeChannelSpec<?>> < ? extends PublishSubscribeChannelSpec < ? > > org.springframework.integration.dsl.PublishSubscribeChannelSpec<? extends org.springframework.integration.dsl.PublishSubscribeChannelSpec<?>> ( java.util.concurrent.Executor java.util.concurrent.Executor ) { return MessageChannels . publishSubscribe ( java.util.concurrent.Executor ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.PublishSubscribeChannelSpec<? extends org.springframework.integration.dsl.PublishSubscribeChannelSpec<?>> < ? extends PublishSubscribeChannelSpec < ? > > org.springframework.integration.dsl.PublishSubscribeChannelSpec<? extends org.springframework.integration.dsl.PublishSubscribeChannelSpec<?>> ( java.lang.String java.lang.String , java.util.concurrent.Executor java.util.concurrent.Executor ) { return MessageChannels . publishSubscribe ( java.lang.String , java.util.concurrent.Executor ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.PublishSubscribeChannelSpec<? extends org.springframework.integration.dsl.PublishSubscribeChannelSpec<?>> < ? extends PublishSubscribeChannelSpec < ? > > org.springframework.integration.dsl.PublishSubscribeChannelSpec<? extends org.springframework.integration.dsl.PublishSubscribeChannelSpec<?>> ( java.lang.String java.lang.String ) { return MessageChannels . publishSubscribe ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.ExecutorChannelSpec org.springframework.integration.dsl.ExecutorChannelSpec ( java.util.concurrent.Executor java.util.concurrent.Executor ) { return MessageChannels . executor ( java.util.concurrent.Executor ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.ExecutorChannelSpec org.springframework.integration.dsl.ExecutorChannelSpec ( java.lang.String java.lang.String , java.util.concurrent.Executor java.util.concurrent.Executor ) { return MessageChannels . executor ( java.lang.String , java.util.concurrent.Executor ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.ReactiveChannelSpec org.springframework.integration.dsl.ReactiveChannelSpec ( ) { return MessageChannels . reactive ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.ReactiveChannelSpec org.springframework.integration.dsl.ReactiveChannelSpec ( java.lang.String java.lang.String ) { return MessageChannels . reactive ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.ReactiveChannelSpec org.springframework.integration.dsl.ReactiveChannelSpec ( Processor < Message < ? > , Message < ? > > org.springframework.integration.dsl.Processor<org.springframework.integration.dsl.Message<?>,org.springframework.integration.dsl.Message<?>> ) { return MessageChannels . reactive ( org.springframework.integration.dsl.Processor<org.springframework.integration.dsl.Message<?>,org.springframework.integration.dsl.Message<?>> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.ReactiveChannelSpec org.springframework.integration.dsl.ReactiveChannelSpec ( java.lang.String java.lang.String , Processor < Message < ? > , Message < ? > > org.springframework.integration.dsl.Processor<org.springframework.integration.dsl.Message<?>,org.springframework.integration.dsl.Message<?>> ) { return MessageChannels . reactive ( java.lang.String , org.springframework.integration.dsl.Processor<org.springframework.integration.dsl.Message<?>,org.springframework.integration.dsl.Message<?>> ) ; }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
