<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ComponentScanAndImportAnnotationInteractionTests.Config1 .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ComponentScanAndImportAnnotationInteractionTests.Config2 .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( SimpleComponent .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.context.annotation.ComponentScanAndImportAnnotationInteractionTests.Config1 .class . java.lang.String ( ) ) ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.context.annotation.ComponentScanAndImportAnnotationInteractionTests.Config2 .class . java.lang.String ( ) ) ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( SimpleComponent .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ComponentScanAndImportAnnotationInteractionTests.Config3 .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( SimpleComponent .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.context.annotation.ComponentScanAndImportAnnotationInteractionTests.Config3 .class . java.lang.String ( ) ) ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( SimpleComponent .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . scan ( STRING ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( SimpleComponent .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( ImportingConfig .class . java.lang.String ( ) ) ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( SimpleComponent .class ) ; }  <METHOD_END>
