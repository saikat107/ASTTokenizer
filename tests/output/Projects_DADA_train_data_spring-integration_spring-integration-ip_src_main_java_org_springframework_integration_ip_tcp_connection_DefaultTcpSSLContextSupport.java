<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; PathMatchingResourcePatternResolver org.springframework.integration.ip.tcp.connection.PathMatchingResourcePatternResolver = new PathMatchingResourcePatternResolver ( ) ; this . org.springframework.integration.ip.tcp.connection.Resource = org.springframework.integration.ip.tcp.connection.PathMatchingResourcePatternResolver . getResource ( java.lang.String ) ; this . org.springframework.integration.ip.tcp.connection.Resource = org.springframework.integration.ip.tcp.connection.PathMatchingResourcePatternResolver . getResource ( java.lang.String ) ; this . char[] = java.lang.String . char[] ( ) ; this . char[] = java.lang.String . char[] ( ) ; }  <METHOD_END>
<METHOD_START> public javax.net.ssl.SSLContext javax.net.ssl.SSLContext ( ) java.security.GeneralSecurityException , java.io.IOException { java.security.KeyStore java.security.KeyStore = java.security.KeyStore . java.security.KeyStore ( STRING ) ; java.security.KeyStore java.security.KeyStore = java.security.KeyStore . java.security.KeyStore ( STRING ) ; java.security.KeyStore . void ( this . org.springframework.integration.ip.tcp.connection.Resource . getInputStream ( ) , this . char[] ) ; java.security.KeyStore . void ( this . org.springframework.integration.ip.tcp.connection.Resource . getInputStream ( ) , this . char[] ) ; javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory = javax.net.ssl.KeyManagerFactory . javax.net.ssl.KeyManagerFactory ( STRING ) ; javax.net.ssl.KeyManagerFactory . void ( java.security.KeyStore , this . char[] ) ; javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory = javax.net.ssl.TrustManagerFactory . javax.net.ssl.TrustManagerFactory ( STRING ) ; javax.net.ssl.TrustManagerFactory . void ( java.security.KeyStore ) ; javax.net.ssl.SSLContext javax.net.ssl.SSLContext = javax.net.ssl.SSLContext . javax.net.ssl.SSLContext ( this . java.lang.String ) ; javax.net.ssl.SSLContext . void ( javax.net.ssl.KeyManagerFactory . javax.net.ssl.KeyManager[] ( ) , javax.net.ssl.TrustManagerFactory . javax.net.ssl.TrustManager[] ( ) , null ) ; return javax.net.ssl.SSLContext ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
