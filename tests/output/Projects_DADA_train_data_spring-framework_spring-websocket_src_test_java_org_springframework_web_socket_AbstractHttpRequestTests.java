<METHOD_START> @ Before public void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . org.springframework.web.socket.MockHttpServletRequest . setMethod ( java.lang.String ) ; this . org.springframework.web.socket.MockHttpServletRequest . setRequestURI ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { void ( ) ; void ( ) ; this . org.springframework.web.socket.ServerHttpAsyncRequestControl = this . org.springframework.web.socket.ServerHttpRequest . getAsyncRequestControl ( this . org.springframework.web.socket.ServerHttpResponse ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { this . org.springframework.web.socket.MockHttpServletRequest = new MockHttpServletRequest ( ) ; this . org.springframework.web.socket.MockHttpServletRequest . setAsyncSupported ( true ) ; this . org.springframework.web.socket.ServerHttpRequest = new ServletServerHttpRequest ( this . org.springframework.web.socket.MockHttpServletRequest ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { this . org.springframework.web.socket.MockHttpServletResponse = new MockHttpServletResponse ( ) ; this . org.springframework.web.socket.ServerHttpResponse = new ServletServerHttpResponse ( this . org.springframework.web.socket.MockHttpServletResponse ) ; }  <METHOD_END>
