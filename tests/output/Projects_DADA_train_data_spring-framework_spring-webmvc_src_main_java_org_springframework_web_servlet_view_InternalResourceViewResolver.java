<METHOD_START> public void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<?> ( ) ; if ( InternalResourceView .class == java.lang.Class<> && boolean ) { java.lang.Class<?> = JstlView .class ; } setViewClass ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this(); setPrefix ( java.lang.String ) ; setSuffix ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return InternalResourceView .class ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . java.lang.Boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.view.AbstractUrlBasedView org.springframework.web.servlet.view.AbstractUrlBasedView ( java.lang.String java.lang.String ) throws java.lang.Exception { InternalResourceView org.springframework.web.servlet.view.InternalResourceView = ( InternalResourceView ) super. buildView ( java.lang.String ) ; if ( this . java.lang.Boolean != null ) { org.springframework.web.servlet.view.InternalResourceView . setAlwaysInclude ( this . java.lang.Boolean ) ; } org.springframework.web.servlet.view.InternalResourceView . setPreventDispatchLoop ( true ) ; return org.springframework.web.servlet.view.InternalResourceView ; }  <METHOD_END>
