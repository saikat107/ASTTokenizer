<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new PropertyMatch ( null , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertyMatch org.springframework.data.mapping.context.PropertyMatch = new PropertyMatch ( STRING , STRING ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.Object .class ) ) . isFalse ( ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.Object .class ) ) . isFalse ( ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.String .class ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertyMatch org.springframework.data.mapping.context.PropertyMatch = new PropertyMatch ( STRING , STRING ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.Object .class ) ) . isTrue ( ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.Object .class ) ) . isTrue ( ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.String .class ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertyMatch org.springframework.data.mapping.context.PropertyMatch = new PropertyMatch ( STRING , null ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.Object .class ) ) . isTrue ( ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.Object .class ) ) . isTrue ( ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.String .class ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertyMatch org.springframework.data.mapping.context.PropertyMatch = new PropertyMatch ( null , STRING ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.Object .class ) ) . isTrue ( ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.Object .class ) ) . isTrue ( ) ; assertThat ( org.springframework.data.mapping.context.PropertyMatch . matches ( STRING , java.lang.String .class ) ) . isFalse ( ) ; }  <METHOD_END>
