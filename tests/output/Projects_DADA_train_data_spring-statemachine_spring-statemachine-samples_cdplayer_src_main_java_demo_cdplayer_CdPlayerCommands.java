<METHOD_START> @ CliCommand ( value = STRING , help = STRING ) public java.lang.String java.lang.String ( ) { return demo.cdplayer.CdPlayer . getLdcStatus ( ) ; }  <METHOD_END>
<METHOD_START> @ CliCommand ( value = STRING , help = STRING ) public java.lang.String java.lang.String ( ) { java.text.SimpleDateFormat java.text.SimpleDateFormat = new java.text.SimpleDateFormat ( STRING ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; int int = NUMBER ; for ( Cd demo.cdplayer.Cd : demo.cdplayer.Library . getCollection ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( int ++ + STRING + demo.cdplayer.Cd . getName ( ) + STRING ) ; int int = NUMBER ; for ( Track demo.cdplayer.Track : demo.cdplayer.Cd . getTracks ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING + int ++ + STRING + demo.cdplayer.Track . getName ( ) + STRING + java.text.SimpleDateFormat . java.lang.String ( new java.util.Date ( demo.cdplayer.Track . getLength ( ) * NUMBER ) ) + STRING ) ; } } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ CliCommand ( value = STRING , help = STRING ) public java.lang.String java.lang.String ( @ CliOption ( key = { STRING , STRING } ) int int ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; try { Cd demo.cdplayer.Cd = demo.cdplayer.Library . getCollection ( ) . get ( int ) ; demo.cdplayer.CdPlayer . load ( demo.cdplayer.Cd ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + demo.cdplayer.Cd ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING + int + STRING ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ CliCommand ( value = STRING , help = STRING ) public void void ( ) { demo.cdplayer.CdPlayer . play ( ) ; }  <METHOD_END>
<METHOD_START> @ CliCommand ( value = STRING , help = STRING ) public void void ( ) { demo.cdplayer.CdPlayer . stop ( ) ; }  <METHOD_END>
<METHOD_START> @ CliCommand ( value = STRING , help = STRING ) public void void ( ) { demo.cdplayer.CdPlayer . pause ( ) ; }  <METHOD_END>
<METHOD_START> @ CliCommand ( value = STRING , help = STRING ) public void void ( ) { demo.cdplayer.CdPlayer . eject ( ) ; }  <METHOD_END>
<METHOD_START> @ CliCommand ( value = STRING , help = STRING ) public void void ( ) { demo.cdplayer.CdPlayer . forward ( ) ; }  <METHOD_END>
<METHOD_START> @ CliCommand ( value = STRING , help = STRING ) public void void ( ) { demo.cdplayer.CdPlayer . back ( ) ; }  <METHOD_END>
