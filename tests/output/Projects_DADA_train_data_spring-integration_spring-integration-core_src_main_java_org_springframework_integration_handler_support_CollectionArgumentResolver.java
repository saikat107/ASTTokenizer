<METHOD_START> public void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.integration.handler.support.MethodParameter ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.integration.handler.support.MethodParameter . getParameterType ( ) ; return java.util.Collection .class . boolean ( java.lang.Class<> ) || java.util.Iterator .class . boolean ( java.lang.Class<> ) || java.lang.Class<> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.lang.Object java.lang.Object ( MethodParameter org.springframework.integration.handler.support.MethodParameter , Message < ? > org.springframework.integration.handler.support.Message<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.integration.handler.support.Message<> . getPayload ( ) ; if ( this . boolean ) { Assert . state ( java.lang.Object instanceof java.util.Collection , STRING ) ; java.util.Collection<org.springframework.integration.handler.support.Message<?>> < Message < ? > > java.util.Collection<org.springframework.integration.handler.support.Message<?>> = ( java.util.Collection<org.springframework.integration.handler.support.Message<?>> < Message < ? > > ) java.lang.Object ; org.springframework.integration.handler.support.MethodParameter . increaseNestingLevel ( ) ; if ( Message .class . boolean ( org.springframework.integration.handler.support.MethodParameter . getNestedParameterType ( ) ) ) { java.lang.Object = java.util.Collection<org.springframework.integration.handler.support.Message<?>> ; } else { java.lang.Object = java.util.Collection<org.springframework.integration.handler.support.Message<?>> . stream ( ) . map ( Message :: getPayload ) . collect ( java.util.stream.Collectors . java.util.stream.Collector<java.lang.Object,?,java.util.List<java.lang.Object>> ( ) ) ; } org.springframework.integration.handler.support.MethodParameter . decreaseNestingLevel ( ) ; } if ( java.util.Iterator .class . boolean ( org.springframework.integration.handler.support.MethodParameter . getParameterType ( ) ) ) { if ( java.lang.Object instanceof java.lang.Iterable ) { return ( ( java.lang.Iterable ) java.lang.Object ) . java.util.Iterator ( ) ; } else { return java.util.Collections . java.util.Set<java.lang.Object> ( java.lang.Object ) . java.util.Iterator<java.lang.Object> ( ) ; } } else { return getEvaluationContext ( ) . getTypeConverter ( ) . convertValue ( java.lang.Object , TypeDescriptor . forObject ( java.lang.Object ) , TypeDescriptor . valueOf ( org.springframework.integration.handler.support.MethodParameter . getParameterType ( ) ) ) ; } }  <METHOD_END>
