<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; StaticWebApplicationContext org.springframework.web.context.request.StaticWebApplicationContext = new StaticWebApplicationContext ( ) ; RootBeanDefinition org.springframework.web.context.request.RootBeanDefinition = new RootBeanDefinition ( TestBean .class ) ; org.springframework.web.context.request.RootBeanDefinition . setScope ( WebApplicationContext . SCOPE_REQUEST ) ; org.springframework.web.context.request.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , STRING ) ; org.springframework.web.context.request.StaticWebApplicationContext . registerBeanDefinition ( java.lang.String , org.springframework.web.context.request.RootBeanDefinition ) ; org.springframework.web.context.request.StaticWebApplicationContext . refresh ( ) ; HttpServletRequest org.springframework.web.context.request.HttpServletRequest = new MockHttpServletRequest ( ) ; RequestContextHolder . setRequestAttributes ( new ServletRequestAttributes ( org.springframework.web.context.request.HttpServletRequest ) ) ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) org.springframework.web.context.request.StaticWebApplicationContext . getBean ( java.lang.String ) ; assertEquals ( STRING , org.springframework.web.context.request.TestBean . getName ( ) ) ; assertSame ( org.springframework.web.context.request.TestBean , org.springframework.web.context.request.HttpServletRequest . getAttribute ( java.lang.String ) ) ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) org.springframework.web.context.request.StaticWebApplicationContext . getBean ( java.lang.String ) ; assertEquals ( STRING , org.springframework.web.context.request.TestBean . getName ( ) ) ; assertSame ( org.springframework.web.context.request.TestBean , org.springframework.web.context.request.TestBean ) ; assertSame ( org.springframework.web.context.request.TestBean , org.springframework.web.context.request.HttpServletRequest . getAttribute ( java.lang.String ) ) ; org.springframework.web.context.request.HttpServletRequest = new MockHttpServletRequest ( ) ; RequestContextHolder . setRequestAttributes ( new ServletRequestAttributes ( org.springframework.web.context.request.HttpServletRequest ) ) ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) org.springframework.web.context.request.StaticWebApplicationContext . getBean ( java.lang.String ) ; assertEquals ( STRING , org.springframework.web.context.request.TestBean . getName ( ) ) ; assertSame ( org.springframework.web.context.request.TestBean , org.springframework.web.context.request.HttpServletRequest . getAttribute ( java.lang.String ) ) ; assertNotSame ( org.springframework.web.context.request.TestBean , org.springframework.web.context.request.TestBean ) ; RequestContextHolder . setRequestAttributes ( null ) ; try { org.springframework.web.context.request.StaticWebApplicationContext . getBean ( java.lang.String ) ; fail ( STRING ) ; } catch ( BeanCreationException org.springframework.web.context.request.BeanCreationException ) { } }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; HttpServletRequest org.springframework.web.context.request.HttpServletRequest = new MockHttpServletRequest ( ) ; RequestContextHolder . setRequestAttributes ( new ServletRequestAttributes ( org.springframework.web.context.request.HttpServletRequest ) ) ; StaticWebApplicationContext org.springframework.web.context.request.StaticWebApplicationContext = new StaticWebApplicationContext ( ) ; RootBeanDefinition org.springframework.web.context.request.RootBeanDefinition = new RootBeanDefinition ( TestBean .class ) ; org.springframework.web.context.request.RootBeanDefinition . setScope ( WebApplicationContext . SCOPE_SESSION ) ; org.springframework.web.context.request.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , STRING ) ; org.springframework.web.context.request.StaticWebApplicationContext . registerBeanDefinition ( java.lang.String , org.springframework.web.context.request.RootBeanDefinition ) ; org.springframework.web.context.request.StaticWebApplicationContext . refresh ( ) ; TestBean org.springframework.web.context.request.TestBean = ( TestBean ) org.springframework.web.context.request.StaticWebApplicationContext . getBean ( java.lang.String ) ; assertEquals ( STRING , org.springframework.web.context.request.TestBean . getName ( ) ) ; assertSame ( org.springframework.web.context.request.TestBean , org.springframework.web.context.request.HttpServletRequest . getSession ( ) . getAttribute ( java.lang.String ) ) ; RequestContextHolder . setRequestAttributes ( null ) ; try { org.springframework.web.context.request.StaticWebApplicationContext . getBean ( java.lang.String ) ; fail ( STRING ) ; } catch ( BeanCreationException org.springframework.web.context.request.BeanCreationException ) { } }  <METHOD_END>
