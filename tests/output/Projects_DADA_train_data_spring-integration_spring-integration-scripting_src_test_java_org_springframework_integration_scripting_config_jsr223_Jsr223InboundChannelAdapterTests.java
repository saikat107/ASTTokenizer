<METHOD_START> @ Test public void void ( ) java.lang.Exception { Message < ? > org.springframework.integration.scripting.config.jsr223.Message<?> = this . org.springframework.integration.scripting.config.jsr223.PollableChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.scripting.config.jsr223.Message<> ) ; java.lang.Object java.lang.Object = org.springframework.integration.scripting.config.jsr223.Message<> . getPayload ( ) ; java.lang.Thread . void ( NUMBER ) ; assertThat ( java.lang.Object , instanceOf ( java.util.Date .class ) ) ; assertTrue ( ( ( java.util.Date ) java.lang.Object ) . boolean ( new java.util.Date ( ) ) ) ; assertEquals ( STRING , org.springframework.integration.scripting.config.jsr223.Message<> . getHeaders ( ) . get ( STRING ) ) ; org.springframework.integration.scripting.config.jsr223.Message<?> = this . org.springframework.integration.scripting.config.jsr223.PollableChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.scripting.config.jsr223.Message<> ) ; }  <METHOD_END>
