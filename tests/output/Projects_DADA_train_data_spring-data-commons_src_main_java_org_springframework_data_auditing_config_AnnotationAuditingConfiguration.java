<METHOD_START> public void ( AnnotationMetadata org.springframework.data.auditing.config.AnnotationMetadata , java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ) { Assert . notNull ( org.springframework.data.auditing.config.AnnotationMetadata , STRING ) ; Assert . notNull ( java.lang.Class<> , STRING ) ; this . org.springframework.data.auditing.config.AnnotationAttributes = new AnnotationAttributes ( org.springframework.data.auditing.config.AnnotationMetadata . getAnnotationAttributes ( java.lang.Class<> . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.auditing.config.AnnotationAttributes . getString ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.auditing.config.AnnotationAttributes . getBoolean ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.auditing.config.AnnotationAttributes . getString ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.auditing.config.AnnotationAttributes . getBoolean ( STRING ) ; }  <METHOD_END>
