<METHOD_START> public void ( ObjectProvider < CounterService > org.springframework.statemachine.boot.autoconfigure.ObjectProvider<org.springframework.statemachine.boot.autoconfigure.CounterService> , ObjectProvider < GaugeService > org.springframework.statemachine.boot.autoconfigure.ObjectProvider<org.springframework.statemachine.boot.autoconfigure.GaugeService> , ObjectProvider < TraceRepository > org.springframework.statemachine.boot.autoconfigure.ObjectProvider<org.springframework.statemachine.boot.autoconfigure.TraceRepository> ) { this . org.springframework.statemachine.boot.autoconfigure.CounterService = org.springframework.statemachine.boot.autoconfigure.ObjectProvider<org.springframework.statemachine.boot.autoconfigure.CounterService> . getIfAvailable ( ) ; this . org.springframework.statemachine.boot.autoconfigure.GaugeService = org.springframework.statemachine.boot.autoconfigure.ObjectProvider<org.springframework.statemachine.boot.autoconfigure.GaugeService> . getIfAvailable ( ) ; this . org.springframework.statemachine.boot.autoconfigure.TraceRepository = org.springframework.statemachine.boot.autoconfigure.ObjectProvider<org.springframework.statemachine.boot.autoconfigure.TraceRepository> . getIfAvailable ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.boot.autoconfigure.BootStateMachineMonitor<?,?> < ? , ? > org.springframework.statemachine.boot.autoconfigure.BootStateMachineMonitor<?,?> ( ) { return new BootStateMachineMonitor <> ( org.springframework.statemachine.boot.autoconfigure.CounterService , org.springframework.statemachine.boot.autoconfigure.GaugeService , org.springframework.statemachine.boot.autoconfigure.TraceRepository ) ; }  <METHOD_END>
