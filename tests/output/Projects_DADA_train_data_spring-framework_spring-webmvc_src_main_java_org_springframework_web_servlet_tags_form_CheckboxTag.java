<METHOD_START> @ java.lang.Override protected int int ( TagWriter org.springframework.web.servlet.tags.form.TagWriter ) throws org.springframework.web.servlet.tags.form.JspException { super. writeTagContent ( org.springframework.web.servlet.tags.form.TagWriter ) ; if ( ! isDisabled ( ) ) { org.springframework.web.servlet.tags.form.TagWriter . startTag ( STRING ) ; org.springframework.web.servlet.tags.form.TagWriter . writeAttribute ( STRING , STRING ) ; java.lang.String java.lang.String = WebDataBinder . DEFAULT_FIELD_MARKER_PREFIX + getName ( ) ; org.springframework.web.servlet.tags.form.TagWriter . writeAttribute ( STRING , java.lang.String ) ; org.springframework.web.servlet.tags.form.TagWriter . writeAttribute ( STRING , processFieldValue ( java.lang.String , STRING , java.lang.String ( ) ) ) ; org.springframework.web.servlet.tags.form.TagWriter . endTag ( ) ; } return SKIP_BODY ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( TagWriter org.springframework.web.servlet.tags.form.TagWriter ) throws org.springframework.web.servlet.tags.form.JspException { org.springframework.web.servlet.tags.form.TagWriter . writeAttribute ( STRING , java.lang.String ( ) ) ; java.lang.Object java.lang.Object = getBoundValue ( ) ; java.lang.Class<?> < ? > java.lang.Class<?> = getBindStatus ( ) . getValueType ( ) ; if ( java.lang.Boolean .class == java.lang.Class<> || boolean .class == java.lang.Class<> ) { if ( java.lang.Object instanceof java.lang.String ) { java.lang.Object = java.lang.Boolean . java.lang.Boolean ( ( java.lang.String ) java.lang.Object ) ; } java.lang.Boolean java.lang.Boolean = ( java.lang.Object != null ? ( java.lang.Boolean ) java.lang.Object : java.lang.Boolean . java.lang.Boolean ) ; renderFromBoolean ( java.lang.Boolean , org.springframework.web.servlet.tags.form.TagWriter ) ; } else { java.lang.Object java.lang.Object = getValue ( ) ; if ( java.lang.Object == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } java.lang.Object java.lang.Object = ( java.lang.Object instanceof java.lang.String ? evaluate ( STRING , java.lang.Object ) : java.lang.Object ) ; renderFromValue ( java.lang.Object , org.springframework.web.servlet.tags.form.TagWriter ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
