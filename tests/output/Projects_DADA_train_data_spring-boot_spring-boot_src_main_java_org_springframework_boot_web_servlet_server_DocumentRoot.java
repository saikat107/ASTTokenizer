<METHOD_START> void ( Log org.springframework.boot.web.servlet.server.Log ) { this . org.springframework.boot.web.servlet.server.Log = org.springframework.boot.web.servlet.server.Log ; }  <METHOD_END>
<METHOD_START> public java.io.File java.io.File ( ) { return this . java.io.File ; }  <METHOD_END>
<METHOD_START> public void void ( java.io.File java.io.File ) { this . java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> public final java.io.File java.io.File ( ) { java.io.File java.io.File = this . java.io.File ; java.io.File = ( java.io.File != null ? java.io.File : java.io.File ( ) ) ; java.io.File = ( java.io.File != null ? java.io.File : java.io.File ( ) ) ; java.io.File = ( java.io.File != null ? java.io.File : java.io.File ( ) ) ; if ( java.io.File == null && this . org.springframework.boot.web.servlet.server.Log . isDebugEnabled ( ) ) { void ( ) ; } else if ( this . org.springframework.boot.web.servlet.server.Log . isDebugEnabled ( ) ) { this . org.springframework.boot.web.servlet.server.Log . debug ( STRING + java.io.File ) ; } return java.io.File ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( ) { return java.io.File ( STRING ) ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( java.lang.String java.lang.String ) { java.io.File java.io.File = java.io.File ( ) ; if ( this . org.springframework.boot.web.servlet.server.Log . isDebugEnabled ( ) ) { this . org.springframework.boot.web.servlet.server.Log . debug ( STRING + java.io.File ) ; } if ( java.io.File != null && java.io.File . boolean ( ) && ! java.io.File . boolean ( ) && java.io.File . java.lang.String ( ) . java.lang.String ( ) . boolean ( java.lang.String ) ) { return java.io.File . java.io.File ( ) ; } return null ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( ) { return java.io.File ( java.io.File ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( ) { try { java.security.CodeSource java.security.CodeSource = java.lang.Class<? extends org.springframework.boot.web.servlet.server.DocumentRoot> ( ) . java.security.ProtectionDomain ( ) . java.security.CodeSource ( ) ; java.net.URL java.net.URL = ( java.security.CodeSource == null ? null : java.security.CodeSource . java.net.URL ( ) ) ; if ( java.net.URL == null ) { return null ; } java.lang.String java.lang.String = java.net.URL . java.lang.String ( ) ; java.net.URLConnection java.net.URLConnection = java.net.URL . java.net.URLConnection ( ) ; if ( java.net.URLConnection instanceof java.net.JarURLConnection ) { java.lang.String = ( ( java.net.JarURLConnection ) java.net.URLConnection ) . java.util.jar.JarFile ( ) . java.lang.String ( ) ; } if ( java.lang.String . int ( STRING ) != - NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( STRING ) ) ; } return new java.io.File ( java.lang.String ) ; } catch ( java.io.IOException java.io.IOException ) { return null ; } }  <METHOD_END>
<METHOD_START> public final java.io.File java.io.File ( java.io.File java.io.File ) { if ( this . org.springframework.boot.web.servlet.server.Log . isDebugEnabled ( ) ) { this . org.springframework.boot.web.servlet.server.Log . debug ( STRING + java.io.File ) ; } if ( java.io.File != null && java.io.File . boolean ( ) ) { java.lang.String java.lang.String = java.io.File . java.lang.String ( ) ; int int = java.lang.String . int ( java.io.File . char + STRING + java.io.File . char ) ; if ( int >= NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) ; return new java.io.File ( java.lang.String ) ; } } return null ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { java.io.File java.io.File = new java.io.File ( java.lang.String ) ; if ( java.io.File . boolean ( ) && java.io.File . boolean ( ) ) { return java.io.File . java.io.File ( ) ; } } return null ; }  <METHOD_END>
<METHOD_START> private void void ( ) { this . org.springframework.boot.web.servlet.server.Log . debug ( STRING + java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) + STRING ) ; }  <METHOD_END>
