<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; assertEquals ( STRING , STRING , javax.management.modelmbean.ModelMBeanInfo . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.modelmbean.ModelMBeanAttributeInfo javax.management.modelmbean.ModelMBeanAttributeInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( AGE_ATTRIBUTE ) ; assertEquals ( STRING , STRING , javax.management.modelmbean.ModelMBeanAttributeInfo . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.modelmbean.ModelMBeanAttributeInfo javax.management.modelmbean.ModelMBeanAttributeInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( NAME_ATTRIBUTE ) ; assertEquals ( STRING , STRING , javax.management.modelmbean.ModelMBeanAttributeInfo . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.modelmbean.ModelMBeanAttributeInfo javax.management.modelmbean.ModelMBeanAttributeInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( AGE_ATTRIBUTE ) ; assertFalse ( STRING , javax.management.modelmbean.ModelMBeanAttributeInfo . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.modelmbean.ModelMBeanAttributeInfo javax.management.modelmbean.ModelMBeanAttributeInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( NAME_ATTRIBUTE ) ; assertTrue ( STRING , javax.management.modelmbean.ModelMBeanAttributeInfo . boolean ( ) ) ; assertTrue ( STRING , javax.management.modelmbean.ModelMBeanAttributeInfo . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.modelmbean.ModelMBeanAttributeInfo javax.management.modelmbean.ModelMBeanAttributeInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( STRING ) ; assertNotNull ( STRING , javax.management.modelmbean.ModelMBeanAttributeInfo ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.modelmbean.ModelMBeanAttributeInfo javax.management.modelmbean.ModelMBeanAttributeInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( STRING ) ; assertNotNull ( STRING , javax.management.modelmbean.ModelMBeanAttributeInfo ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.Descriptor javax.management.Descriptor = javax.management.modelmbean.ModelMBeanInfo . javax.management.Descriptor ( ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.Descriptor javax.management.Descriptor = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( NAME_ATTRIBUTE ) . getDescriptor ( ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.Descriptor javax.management.Descriptor = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanOperationInfo ( STRING ) . javax.management.Descriptor ( ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.modelmbean.ModelMBeanOperationInfo javax.management.modelmbean.ModelMBeanOperationInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanOperationInfo ( STRING ) ; javax.management.MBeanParameterInfo [] javax.management.MBeanParameterInfo[] = javax.management.modelmbean.ModelMBeanOperationInfo . javax.management.MBeanParameterInfo[] ( ) ; assertEquals ( STRING , NUMBER , javax.management.MBeanParameterInfo[] . int ) ; assertEquals ( STRING , STRING , javax.management.MBeanParameterInfo[] [ NUMBER ] . java.lang.String ( ) ) ; assertEquals ( STRING , int .class . java.lang.String ( ) , javax.management.MBeanParameterInfo[] [ NUMBER ] . java.lang.String ( ) ) ; assertEquals ( STRING , STRING , javax.management.MBeanParameterInfo[] [ NUMBER ] . java.lang.String ( ) ) ; assertEquals ( STRING , int .class . java.lang.String ( ) , javax.management.MBeanParameterInfo[] [ NUMBER ] . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { IJmxTestBean org.springframework.jmx.export.assembler.IJmxTestBean = org.springframework.jmx.export.assembler.IJmxTestBean ( ) ; ProxyFactory org.springframework.jmx.export.assembler.ProxyFactory = new ProxyFactory ( ) ; org.springframework.jmx.export.assembler.ProxyFactory . setTarget ( org.springframework.jmx.export.assembler.IJmxTestBean ) ; org.springframework.jmx.export.assembler.ProxyFactory . addAdvice ( new NopInterceptor ( ) ) ; java.lang.Object java.lang.Object = org.springframework.jmx.export.assembler.ProxyFactory . getProxy ( ) ; MetadataMBeanInfoAssembler org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler = ( MetadataMBeanInfoAssembler ) org.springframework.jmx.export.assembler.MBeanInfoAssembler ( ) ; MBeanExporter org.springframework.jmx.export.assembler.MBeanExporter = new MBeanExporter ( ) ; org.springframework.jmx.export.assembler.MBeanExporter . setBeanFactory ( getContext ( ) ) ; org.springframework.jmx.export.assembler.MBeanExporter . setAssembler ( org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler ) ; java.lang.String java.lang.String = STRING ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; org.springframework.jmx.export.assembler.MBeanExporter . setBeans ( java.util.Map<java.lang.String,java.lang.Object> ) ; start ( org.springframework.jmx.export.assembler.MBeanExporter ) ; javax.management.MBeanInfo javax.management.MBeanInfo = getServer ( ) . getMBeanInfo ( ObjectNameManager . getInstance ( java.lang.String ) ) ; assertEquals ( STRING , int ( ) , javax.management.MBeanInfo . javax.management.MBeanOperationInfo[] ( ) . int ) ; assertEquals ( STRING , int ( ) , javax.management.MBeanInfo . javax.management.MBeanAttributeInfo[] ( ) . int ) ; assertTrue ( STRING , org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler . includeBean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.modelmbean.ModelMBeanAttributeInfo javax.management.modelmbean.ModelMBeanAttributeInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( java.lang.String ) ; javax.management.modelmbean.ModelMBeanOperationInfo javax.management.modelmbean.ModelMBeanOperationInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanOperationInfo ( STRING ) ; assertEquals ( STRING , STRING , javax.management.modelmbean.ModelMBeanAttributeInfo . java.lang.String ( ) ) ; assertEquals ( STRING , STRING , javax.management.modelmbean.ModelMBeanOperationInfo . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.Descriptor javax.management.Descriptor = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( java.lang.String ) . javax.management.Descriptor ( ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.Descriptor javax.management.Descriptor = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( java.lang.String ) . javax.management.Descriptor ( ) ; assertNull ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertNull ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertNull ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertNull ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.lang.String , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertNull ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> protected org.springframework.jmx.export.assembler.IJmxTestBean org.springframework.jmx.export.assembler.IJmxTestBean ( ) { return new JmxTestBean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.jmx.export.assembler.MBeanInfoAssembler org.springframework.jmx.export.assembler.MBeanInfoAssembler ( ) { MetadataMBeanInfoAssembler org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler = new MetadataMBeanInfoAssembler ( ) ; org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler . setAttributeSource ( org.springframework.jmx.export.assembler.JmxAttributeSource ( ) ) ; return org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.jmx.export.assembler.JmxAttributeSource org.springframework.jmx.export.assembler.JmxAttributeSource ( )  <METHOD_END>
