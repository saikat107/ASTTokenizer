<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.aop.scope.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.aop.scope.DefaultListableBeanFactory ) . loadBeanDefinitions ( org.springframework.aop.scope.ClassPathResource ) ; java.lang.Object java.lang.Object = org.springframework.aop.scope.DefaultListableBeanFactory . getBean ( STRING ) ; assertTrue ( java.lang.Object instanceof java.util.Map ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.aop.scope.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.aop.scope.DefaultListableBeanFactory ) . loadBeanDefinitions ( org.springframework.aop.scope.ClassPathResource ) ; java.lang.Object java.lang.Object = org.springframework.aop.scope.DefaultListableBeanFactory . getBean ( STRING ) ; assertTrue ( java.lang.Object instanceof java.util.Map ) ; assertTrue ( java.lang.Object instanceof java.util.HashMap ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { GenericApplicationContext org.springframework.aop.scope.GenericApplicationContext = new GenericApplicationContext ( ) ; new XmlBeanDefinitionReader ( org.springframework.aop.scope.GenericApplicationContext ) . loadBeanDefinitions ( org.springframework.aop.scope.ClassPathResource ) ; SimpleMapScope org.springframework.aop.scope.SimpleMapScope = new SimpleMapScope ( ) ; org.springframework.aop.scope.GenericApplicationContext . getBeanFactory ( ) . registerScope ( STRING , org.springframework.aop.scope.SimpleMapScope ) ; org.springframework.aop.scope.GenericApplicationContext . refresh ( ) ; ITestBean org.springframework.aop.scope.ITestBean = ( ITestBean ) org.springframework.aop.scope.GenericApplicationContext . getBean ( STRING ) ; assertEquals ( STRING , org.springframework.aop.scope.ITestBean . getName ( ) ) ; assertEquals ( NUMBER , org.springframework.aop.scope.ITestBean . getAge ( ) ) ; assertTrue ( org.springframework.aop.scope.SimpleMapScope . getMap ( ) . containsKey ( STRING ) ) ; assertEquals ( TestBean .class , org.springframework.aop.scope.SimpleMapScope . getMap ( ) . get ( STRING ) . getClass ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.aop.scope.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.aop.scope.DefaultListableBeanFactory ) . loadBeanDefinitions ( org.springframework.aop.scope.ClassPathResource ) ; org.springframework.aop.scope.DefaultListableBeanFactory . setSerializationId ( STRING ) ; SimpleMapScope org.springframework.aop.scope.SimpleMapScope = new SimpleMapScope ( ) ; org.springframework.aop.scope.DefaultListableBeanFactory . registerScope ( STRING , org.springframework.aop.scope.SimpleMapScope ) ; ITestBean org.springframework.aop.scope.ITestBean = ( ITestBean ) org.springframework.aop.scope.DefaultListableBeanFactory . getBean ( STRING ) ; assertNotNull ( org.springframework.aop.scope.ITestBean ) ; assertTrue ( AopUtils . isJdkDynamicProxy ( org.springframework.aop.scope.ITestBean ) ) ; assertTrue ( org.springframework.aop.scope.ITestBean instanceof ScopedObject ) ; ScopedObject org.springframework.aop.scope.ScopedObject = ( ScopedObject ) org.springframework.aop.scope.ITestBean ; assertEquals ( TestBean .class , org.springframework.aop.scope.ScopedObject . getTargetObject ( ) . getClass ( ) ) ; org.springframework.aop.scope.ITestBean . setAge ( NUMBER ) ; assertTrue ( org.springframework.aop.scope.SimpleMapScope . getMap ( ) . containsKey ( STRING ) ) ; assertEquals ( TestBean .class , org.springframework.aop.scope.SimpleMapScope . getMap ( ) . get ( STRING ) . getClass ( ) ) ; ITestBean org.springframework.aop.scope.ITestBean = ( ITestBean ) SerializationTestUtils . serializeAndDeserialize ( org.springframework.aop.scope.ITestBean ) ; assertNotNull ( org.springframework.aop.scope.ITestBean ) ; assertTrue ( AopUtils . isJdkDynamicProxy ( org.springframework.aop.scope.ITestBean ) ) ; assertEquals ( NUMBER , org.springframework.aop.scope.ITestBean . getAge ( ) ) ; assertTrue ( org.springframework.aop.scope.ITestBean instanceof ScopedObject ) ; ScopedObject org.springframework.aop.scope.ScopedObject = ( ScopedObject ) org.springframework.aop.scope.ITestBean ; assertEquals ( TestBean .class , org.springframework.aop.scope.ScopedObject . getTargetObject ( ) . getClass ( ) ) ; org.springframework.aop.scope.DefaultListableBeanFactory . setSerializationId ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.aop.scope.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.aop.scope.DefaultListableBeanFactory ) . loadBeanDefinitions ( org.springframework.aop.scope.ClassPathResource ) ; org.springframework.aop.scope.DefaultListableBeanFactory . setSerializationId ( STRING ) ; SimpleMapScope org.springframework.aop.scope.SimpleMapScope = new SimpleMapScope ( ) ; org.springframework.aop.scope.DefaultListableBeanFactory . registerScope ( STRING , org.springframework.aop.scope.SimpleMapScope ) ; TestBean org.springframework.aop.scope.TestBean = ( TestBean ) org.springframework.aop.scope.DefaultListableBeanFactory . getBean ( STRING ) ; assertTrue ( AopUtils . isCglibProxy ( org.springframework.aop.scope.TestBean . getFriends ( ) ) ) ; assertTrue ( org.springframework.aop.scope.TestBean . getFriends ( ) instanceof ScopedObject ) ; ScopedObject org.springframework.aop.scope.ScopedObject = ( ScopedObject ) org.springframework.aop.scope.TestBean . getFriends ( ) ; assertEquals ( java.util.ArrayList .class , org.springframework.aop.scope.ScopedObject . getTargetObject ( ) . getClass ( ) ) ; org.springframework.aop.scope.TestBean . getFriends ( ) . add ( STRING ) ; assertTrue ( org.springframework.aop.scope.SimpleMapScope . getMap ( ) . containsKey ( STRING ) ) ; assertEquals ( java.util.ArrayList .class , org.springframework.aop.scope.SimpleMapScope . getMap ( ) . get ( STRING ) . getClass ( ) ) ; java.util.ArrayList<?> < ? > java.util.ArrayList<?> = ( java.util.ArrayList<?> < ? > ) SerializationTestUtils . serializeAndDeserialize ( org.springframework.aop.scope.TestBean . getFriends ( ) ) ; assertNotNull ( java.util.ArrayList<> ) ; assertTrue ( AopUtils . isCglibProxy ( java.util.ArrayList<> ) ) ; assertTrue ( java.util.ArrayList<> . boolean ( STRING ) ) ; assertTrue ( java.util.ArrayList<> instanceof ScopedObject ) ; ScopedObject org.springframework.aop.scope.ScopedObject = ( ScopedObject ) java.util.ArrayList<> ; assertEquals ( java.util.ArrayList .class , org.springframework.aop.scope.ScopedObject . getTargetObject ( ) . getClass ( ) ) ; org.springframework.aop.scope.DefaultListableBeanFactory . setSerializationId ( null ) ; }  <METHOD_END>
