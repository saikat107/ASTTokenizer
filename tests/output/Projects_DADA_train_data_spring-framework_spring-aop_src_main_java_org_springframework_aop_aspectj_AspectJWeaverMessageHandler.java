<METHOD_START> @ java.lang.Override public boolean boolean ( IMessage org.springframework.aop.aspectj.IMessage ) throws org.springframework.aop.aspectj.AbortException { Kind org.springframework.aop.aspectj.Kind = org.springframework.aop.aspectj.IMessage . getKind ( ) ; if ( org.springframework.aop.aspectj.Kind == IMessage . DEBUG ) { if ( org.springframework.aop.aspectj.Log . isDebugEnabled ( ) ) { org.springframework.aop.aspectj.Log . debug ( java.lang.String ( org.springframework.aop.aspectj.IMessage ) ) ; return true ; } } else if ( org.springframework.aop.aspectj.Kind == IMessage . INFO || org.springframework.aop.aspectj.Kind == IMessage . WEAVEINFO ) { if ( org.springframework.aop.aspectj.Log . isInfoEnabled ( ) ) { org.springframework.aop.aspectj.Log . info ( java.lang.String ( org.springframework.aop.aspectj.IMessage ) ) ; return true ; } } else if ( org.springframework.aop.aspectj.Kind == IMessage . WARNING ) { if ( org.springframework.aop.aspectj.Log . isWarnEnabled ( ) ) { org.springframework.aop.aspectj.Log . warn ( java.lang.String ( org.springframework.aop.aspectj.IMessage ) ) ; return true ; } } else if ( org.springframework.aop.aspectj.Kind == IMessage . ERROR ) { if ( org.springframework.aop.aspectj.Log . isErrorEnabled ( ) ) { org.springframework.aop.aspectj.Log . error ( java.lang.String ( org.springframework.aop.aspectj.IMessage ) ) ; return true ; } } else if ( org.springframework.aop.aspectj.Kind == IMessage . ABORT ) { if ( org.springframework.aop.aspectj.Log . isFatalEnabled ( ) ) { org.springframework.aop.aspectj.Log . fatal ( java.lang.String ( org.springframework.aop.aspectj.IMessage ) ) ; return true ; } } return false ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( IMessage org.springframework.aop.aspectj.IMessage ) { return java.lang.String + org.springframework.aop.aspectj.IMessage . getMessage ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Kind org.springframework.aop.aspectj.Kind ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Kind org.springframework.aop.aspectj.Kind ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Kind org.springframework.aop.aspectj.Kind ) { }  <METHOD_END>
