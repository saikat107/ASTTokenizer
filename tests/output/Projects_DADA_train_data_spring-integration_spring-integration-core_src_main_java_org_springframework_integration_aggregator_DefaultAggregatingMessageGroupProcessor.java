<METHOD_START> @ java.lang.Override protected final java.lang.Object java.lang.Object ( MessageGroup org.springframework.integration.aggregator.MessageGroup , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { java.util.Collection<org.springframework.integration.aggregator.Message<?>> < Message < ? > > java.util.Collection<org.springframework.integration.aggregator.Message<?>> = org.springframework.integration.aggregator.MessageGroup . getMessages ( ) ; Assert . notEmpty ( java.util.Collection<org.springframework.integration.aggregator.Message<?>> , this . java.lang.Class<? extends org.springframework.integration.aggregator.DefaultAggregatingMessageGroupProcessor> ( ) . java.lang.String ( ) + STRING ) ; java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.util.Collection<org.springframework.integration.aggregator.Message<?>> . size ( ) ) ; for ( Message < ? > org.springframework.integration.aggregator.Message<?> : java.util.Collection<org.springframework.integration.aggregator.Message<?>> ) { java.util.List<java.lang.Object> . boolean ( org.springframework.integration.aggregator.Message<> . getPayload ( ) ) ; } return java.util.List<java.lang.Object> ; }  <METHOD_END>
