<METHOD_START> public void ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ) { this( java.lang.Class<> , false ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , boolean boolean ) { Assert . notNull ( java.lang.Class<> , STRING ) ; this . java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.Class<> ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return ( this . boolean ? ( AnnotationUtils . findAnnotation ( java.lang.Class<> , this . java.lang.Class<> ) != null ) : java.lang.Class<> . boolean ( this . java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.aop.support.annotation.AnnotationClassFilter ) ) { return false ; } org.springframework.aop.support.annotation.AnnotationClassFilter org.springframework.aop.support.annotation.AnnotationClassFilter = ( org.springframework.aop.support.annotation.AnnotationClassFilter ) java.lang.Object ; return ( this . java.lang.Class<> . boolean ( org.springframework.aop.support.annotation.AnnotationClassFilter . java.lang.Class<> ) && this . boolean == org.springframework.aop.support.annotation.AnnotationClassFilter . boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.lang.Class<> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.Class<? extends org.springframework.aop.support.annotation.AnnotationClassFilter> ( ) . java.lang.String ( ) + STRING + this . java.lang.Class<> ; }  <METHOD_END>
