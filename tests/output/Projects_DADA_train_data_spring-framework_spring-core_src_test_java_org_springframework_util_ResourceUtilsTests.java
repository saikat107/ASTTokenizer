<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertTrue ( ResourceUtils . isJarURL ( new java.net.URL ( STRING ) ) ) ; assertTrue ( ResourceUtils . isJarURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertTrue ( ResourceUtils . isJarURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertTrue ( ResourceUtils . isJarURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertFalse ( ResourceUtils . isJarURL ( new java.net.URL ( STRING ) ) ) ; assertFalse ( ResourceUtils . isJarURL ( new java.net.URL ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractJarFileURL ( new java.net.URL ( STRING ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractJarFileURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractJarFileURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractJarFileURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractJarFileURL ( new java.net.URL ( STRING ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractJarFileURL ( new java.net.URL ( STRING ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractJarFileURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractJarFileURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractArchiveURL ( new java.net.URL ( STRING ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractArchiveURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractArchiveURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractArchiveURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractArchiveURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractArchiveURL ( new java.net.URL ( STRING ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractArchiveURL ( new java.net.URL ( STRING ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractArchiveURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractArchiveURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; assertEquals ( new java.net.URL ( STRING ) , ResourceUtils . extractArchiveURL ( new java.net.URL ( null , STRING , new org.springframework.util.ResourceUtilsTests.DummyURLStreamHandler ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.net.URLConnection java.net.URLConnection ( java.net.URL java.net.URL ) throws java.io.IOException { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
