<METHOD_START> public void ( PartTree org.springframework.data.neo4j.repository.query.derived.PartTree , java.lang.Class<?> < ? > java.lang.Class<?> ) { super( org.springframework.data.neo4j.repository.query.derived.PartTree ); this . java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder ( Part org.springframework.data.neo4j.repository.query.derived.Part , java.util.Iterator<java.lang.Object> < java.lang.Object > java.util.Iterator<java.lang.Object> ) { DerivedQueryBuilder org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder = new DerivedQueryBuilder ( java.lang.Class<> , org.springframework.data.neo4j.repository.query.derived.Part ) ; org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder . addPart ( org.springframework.data.neo4j.repository.query.derived.Part , BooleanOperator . NONE ) ; return org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder ( Part org.springframework.data.neo4j.repository.query.derived.Part , DerivedQueryBuilder org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder , java.util.Iterator<java.lang.Object> < java.lang.Object > java.util.Iterator<java.lang.Object> ) { org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder . addPart ( org.springframework.data.neo4j.repository.query.derived.Part , BooleanOperator . AND ) ; return org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder ( DerivedQueryBuilder org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder , DerivedQueryBuilder org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder ) { org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder . addPart ( org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder , BooleanOperator . OR ) ; return org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.neo4j.repository.query.derived.DerivedQueryDefinition org.springframework.data.neo4j.repository.query.derived.DerivedQueryDefinition ( DerivedQueryBuilder org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder , Sort org.springframework.data.neo4j.repository.query.derived.Sort ) { return org.springframework.data.neo4j.repository.query.derived.DerivedQueryBuilder . buildQuery ( ) ; }  <METHOD_END>
