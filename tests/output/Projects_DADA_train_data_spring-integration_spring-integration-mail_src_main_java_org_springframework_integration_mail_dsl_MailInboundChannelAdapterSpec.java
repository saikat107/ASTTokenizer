<METHOD_START> protected void ( R R ) { this( R , false ); }  <METHOD_END>
<METHOD_START> protected void ( R R , boolean boolean ) { this . R = R ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { void ( ) ; this . R . setSelectorExpression ( PARSER . parseExpression ( java.lang.String ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { Assert . state ( ! this . boolean , STRING + this . R + STRING ) ; }  <METHOD_END>
<METHOD_START> public S S ( Expression org.springframework.integration.mail.dsl.Expression ) { void ( ) ; this . R . setSelectorExpression ( org.springframework.integration.mail.dsl.Expression ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.util.function.Function<org.springframework.integration.mail.dsl.MimeMessage,java.lang.Boolean> < MimeMessage , java.lang.Boolean > java.util.function.Function<org.springframework.integration.mail.dsl.MimeMessage,java.lang.Boolean> ) { void ( ) ; this . R . setSelectorExpression ( new FunctionExpression < MimeMessage > ( java.util.function.Function<org.springframework.integration.mail.dsl.MimeMessage,java.lang.Boolean> ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( Session org.springframework.integration.mail.dsl.Session ) { void ( ) ; this . R . setSession ( org.springframework.integration.mail.dsl.Session ) ; this . boolean = true ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.util.Properties java.util.Properties ) { void ( ) ; void ( ) ; this . R . setJavaMailProperties ( java.util.Properties ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { Assert . state ( ! this . boolean , STRING + STRING ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.util.function.Consumer<org.springframework.integration.mail.dsl.PropertiesBuilder> < PropertiesBuilder > java.util.function.Consumer<org.springframework.integration.mail.dsl.PropertiesBuilder> ) { PropertiesBuilder org.springframework.integration.mail.dsl.PropertiesBuilder = new PropertiesBuilder ( ) ; java.util.function.Consumer<org.springframework.integration.mail.dsl.PropertiesBuilder> . accept ( org.springframework.integration.mail.dsl.PropertiesBuilder ) ; return S ( org.springframework.integration.mail.dsl.PropertiesBuilder . get ( ) ) ; }  <METHOD_END>
<METHOD_START> public S S ( Authenticator org.springframework.integration.mail.dsl.Authenticator ) { void ( ) ; void ( ) ; this . R . setJavaMailAuthenticator ( org.springframework.integration.mail.dsl.Authenticator ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( int int ) { void ( ) ; this . R . setMaxFetchSize ( int ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( boolean boolean ) { void ( ) ; this . R . setShouldDeleteMessages ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { void ( ) ; this . R . setUserFlag ( java.lang.String ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( HeaderMapper < MimeMessage > org.springframework.integration.mail.dsl.HeaderMapper<org.springframework.integration.mail.dsl.MimeMessage> ) { void ( ) ; this . R . setHeaderMapper ( org.springframework.integration.mail.dsl.HeaderMapper<org.springframework.integration.mail.dsl.MimeMessage> ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( boolean boolean ) { void ( ) ; this . R . setEmbeddedPartsAsBytes ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( boolean boolean ) { void ( ) ; this . R . setSimpleContent ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { return java.util.Collections .< java.lang.Object > java.util.List<java.lang.Object> ( this . R ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.mail.dsl.MailReceivingMessageSource org.springframework.integration.mail.dsl.MailReceivingMessageSource ( ) { return new MailReceivingMessageSource ( this . R ) ; }  <METHOD_END>
