<METHOD_START> public void ( CuratorFramework org.springframework.statemachine.cluster.CuratorFramework , java.lang.String java.lang.String ) { super( org.springframework.statemachine.cluster.CuratorFramework , java.lang.String ); this . org.springframework.statemachine.cluster.CuratorFramework = org.springframework.statemachine.cluster.CuratorFramework ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( CuratorFramework org.springframework.statemachine.cluster.CuratorFramework , java.lang.String java.lang.String , boolean boolean , int int ) { super( org.springframework.statemachine.cluster.CuratorFramework , java.lang.String , boolean , int ); this . org.springframework.statemachine.cluster.CuratorFramework = org.springframework.statemachine.cluster.CuratorFramework ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachine < S , E > org.springframework.statemachine.cluster.StateMachine<S,E> ) { super. join ( org.springframework.statemachine.cluster.StateMachine<S,E> ) ; org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.StateMachineCandidate org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.StateMachineCandidate = new org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.StateMachineCandidate ( org.springframework.statemachine.cluster.StateMachine<S,E> ) ; LeaderInitiator org.springframework.statemachine.cluster.LeaderInitiator = new LeaderInitiator ( org.springframework.statemachine.cluster.CuratorFramework , org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.StateMachineCandidate , java.lang.String + STRING ) ; org.springframework.statemachine.cluster.LeaderInitiator . start ( ) ; java.util.Map<org.springframework.statemachine.cluster.StateMachine<S,E>,org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.InitiatorHolder> . put ( org.springframework.statemachine.cluster.StateMachine<S,E> , new org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.InitiatorHolder ( org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.StateMachineCandidate , org.springframework.statemachine.cluster.LeaderInitiator ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachine < S , E > org.springframework.statemachine.cluster.StateMachine<S,E> ) { super. leave ( org.springframework.statemachine.cluster.StateMachine<S,E> ) ; org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.InitiatorHolder org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.InitiatorHolder = java.util.Map<org.springframework.statemachine.cluster.StateMachine<S,E>,org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.InitiatorHolder> . get ( org.springframework.statemachine.cluster.StateMachine<S,E> ) ; org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.InitiatorHolder . org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.StateMachineCandidate . yieldLeadership ( ) ; org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.InitiatorHolder . org.springframework.statemachine.cluster.LeaderInitiator . stop ( ) ; java.util.Map<org.springframework.statemachine.cluster.StateMachine<S,E>,org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.InitiatorHolder> . remove ( org.springframework.statemachine.cluster.StateMachine<S,E> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.cluster.StateMachine<S,E> < S , E > org.springframework.statemachine.cluster.StateMachine<S,E> ( ) { return org.springframework.statemachine.cluster.StateMachine<S,E> ; }  <METHOD_END>
<METHOD_START> public void ( org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.StateMachineCandidate org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.StateMachineCandidate , LeaderInitiator org.springframework.statemachine.cluster.LeaderInitiator ) { this . org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.StateMachineCandidate = org.springframework.statemachine.cluster.LeaderZookeeperStateMachineEnsemble<S,E>.StateMachineCandidate ; this . org.springframework.statemachine.cluster.LeaderInitiator = org.springframework.statemachine.cluster.LeaderInitiator ; }  <METHOD_END>
<METHOD_START> public void ( StateMachine < S , E > org.springframework.statemachine.cluster.StateMachine<S,E> ) { super(); this . org.springframework.statemachine.cluster.StateMachine<S,E> = org.springframework.statemachine.cluster.StateMachine<S,E> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context org.springframework.statemachine.cluster.Context ) { super. onGranted ( org.springframework.statemachine.cluster.Context ) ; org.springframework.statemachine.cluster.StateMachine<S,E> = org.springframework.statemachine.cluster.StateMachine<S,E> ; notifyGranted ( org.springframework.statemachine.cluster.StateMachine<S,E> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context org.springframework.statemachine.cluster.Context ) { super. onRevoked ( org.springframework.statemachine.cluster.Context ) ; org.springframework.statemachine.cluster.StateMachine<S,E> = null ; notifyRevoked ( org.springframework.statemachine.cluster.StateMachine<S,E> ) ; }  <METHOD_END>
