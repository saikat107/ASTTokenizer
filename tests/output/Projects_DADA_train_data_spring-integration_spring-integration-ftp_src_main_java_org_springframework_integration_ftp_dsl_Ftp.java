<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpInboundChannelAdapterSpec org.springframework.integration.ftp.dsl.FtpInboundChannelAdapterSpec ( SessionFactory < FTPFile > org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> ) { return org.springframework.integration.ftp.dsl.FtpInboundChannelAdapterSpec ( org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpInboundChannelAdapterSpec org.springframework.integration.ftp.dsl.FtpInboundChannelAdapterSpec ( SessionFactory < FTPFile > org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> , java.util.Comparator<java.io.File> < java.io.File > java.util.Comparator<java.io.File> ) { return new FtpInboundChannelAdapterSpec ( org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> , java.util.Comparator<java.io.File> ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpStreamingInboundChannelAdapterSpec org.springframework.integration.ftp.dsl.FtpStreamingInboundChannelAdapterSpec ( RemoteFileTemplate < FTPFile > org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> ) { return org.springframework.integration.ftp.dsl.FtpStreamingInboundChannelAdapterSpec ( org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpStreamingInboundChannelAdapterSpec org.springframework.integration.ftp.dsl.FtpStreamingInboundChannelAdapterSpec ( RemoteFileTemplate < FTPFile > org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> , java.util.Comparator<org.springframework.integration.ftp.dsl.AbstractFileInfo<org.springframework.integration.ftp.dsl.FTPFile>> < AbstractFileInfo < FTPFile > > java.util.Comparator<org.springframework.integration.ftp.dsl.AbstractFileInfo<org.springframework.integration.ftp.dsl.FTPFile>> ) { return new FtpStreamingInboundChannelAdapterSpec ( org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> , java.util.Comparator<org.springframework.integration.ftp.dsl.AbstractFileInfo<org.springframework.integration.ftp.dsl.FTPFile>> ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpMessageHandlerSpec org.springframework.integration.ftp.dsl.FtpMessageHandlerSpec ( SessionFactory < FTPFile > org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> ) { return new FtpMessageHandlerSpec ( org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpMessageHandlerSpec org.springframework.integration.ftp.dsl.FtpMessageHandlerSpec ( SessionFactory < FTPFile > org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> , FileExistsMode org.springframework.integration.ftp.dsl.FileExistsMode ) { return org.springframework.integration.ftp.dsl.FtpMessageHandlerSpec ( new FtpRemoteFileTemplate ( org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> ) , org.springframework.integration.ftp.dsl.FileExistsMode ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpMessageHandlerSpec org.springframework.integration.ftp.dsl.FtpMessageHandlerSpec ( RemoteFileTemplate < FTPFile > org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> ) { return new FtpMessageHandlerSpec ( org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpMessageHandlerSpec org.springframework.integration.ftp.dsl.FtpMessageHandlerSpec ( RemoteFileTemplate < FTPFile > org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> , FileExistsMode org.springframework.integration.ftp.dsl.FileExistsMode ) { return new FtpMessageHandlerSpec ( org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> , org.springframework.integration.ftp.dsl.FileExistsMode ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec ( SessionFactory < FTPFile > org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> , AbstractRemoteFileOutboundGateway . AbstractRemoteFileOutboundGateway AbstractRemoteFileOutboundGateway.Command , java.lang.String java.lang.String ) { return org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec ( org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> , AbstractRemoteFileOutboundGateway.Command . getCommand ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec ( SessionFactory < FTPFile > org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> , java.lang.String java.lang.String , java.lang.String java.lang.String ) { return new FtpOutboundGatewaySpec ( new FtpOutboundGateway ( org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> , java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec ( RemoteFileTemplate < FTPFile > org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> , AbstractRemoteFileOutboundGateway . AbstractRemoteFileOutboundGateway AbstractRemoteFileOutboundGateway.Command , java.lang.String java.lang.String ) { return org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec ( org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> , AbstractRemoteFileOutboundGateway.Command . getCommand ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec ( RemoteFileTemplate < FTPFile > org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> , java.lang.String java.lang.String , java.lang.String java.lang.String ) { return new FtpOutboundGatewaySpec ( new FtpOutboundGateway ( org.springframework.integration.ftp.dsl.RemoteFileTemplate<org.springframework.integration.ftp.dsl.FTPFile> , java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec org.springframework.integration.ftp.dsl.FtpOutboundGatewaySpec ( SessionFactory < FTPFile > org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> , MessageSessionCallback < FTPFile , ? > org.springframework.integration.ftp.dsl.MessageSessionCallback<org.springframework.integration.ftp.dsl.FTPFile,?> ) { return new FtpOutboundGatewaySpec ( new FtpOutboundGateway ( org.springframework.integration.ftp.dsl.SessionFactory<org.springframework.integration.ftp.dsl.FTPFile> , org.springframework.integration.ftp.dsl.MessageSessionCallback<org.springframework.integration.ftp.dsl.FTPFile,> ) ) ; }  <METHOD_END>
<METHOD_START> private void ( ) { super(); }  <METHOD_END>
