<METHOD_START> public void ( ) { super(); }  <METHOD_END>
<METHOD_START> public void ( ObjectPostProcessor < java.lang.Object > org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> , boolean boolean ) { super( org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> , boolean ); }  <METHOD_END>
<METHOD_START> public void ( ObjectPostProcessor < java.lang.Object > org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> ) { super( org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.config.builders.StatesData<S,E> < S , E > org.springframework.statemachine.config.builders.StatesData<S,E> ( ) java.lang.Exception { return new StatesData < S , E > ( java.util.Collection<org.springframework.statemachine.config.builders.StateData<S,E>> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.StateConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.StateConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultStateConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<org.springframework.statemachine.config.builders.StateData<S,E>> < StateData < S , E > > java.util.Collection<org.springframework.statemachine.config.builders.StateData<S,E>> ) { this . java.util.Collection<org.springframework.statemachine.config.builders.StateData<S,E>> . addAll ( java.util.Collection<org.springframework.statemachine.config.builders.StateData<S,E>> ) ; }  <METHOD_END>
