<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { Assert . notNull ( org.springframework.data.gemfire.RegionService , STRING ) ; org.springframework.data.gemfire.QueryService = org.springframework.data.gemfire.QueryService ( ) ; Assert . notNull ( org.springframework.data.gemfire.QueryService , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; if ( IndexType . isKey ( org.springframework.data.gemfire.IndexType ) ) { Assert . isNull ( java.lang.String , STRING ) ; } java.lang.String = ( StringUtils . hasText ( java.lang.String ) ? java.lang.String : java.lang.String ) ; Assert . hasText ( java.lang.String , STRING ) ; org.springframework.data.gemfire.Index = org.springframework.data.gemfire.Index ( org.springframework.data.gemfire.QueryService , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.QueryService org.springframework.data.gemfire.QueryService ( ) { return ( org.springframework.data.gemfire.QueryService != null ? org.springframework.data.gemfire.QueryService : ( org.springframework.data.gemfire.RegionService instanceof ClientCache ? ( ( ClientCache ) org.springframework.data.gemfire.RegionService ) . getLocalQueryService ( ) : org.springframework.data.gemfire.RegionService . getQueryService ( ) ) ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.QueryService org.springframework.data.gemfire.QueryService ( ) { if ( org.springframework.data.gemfire.BeanFactory ( ) . containsBean ( GemfireConstants . DEFAULT_GEMFIRE_INDEX_DEFINITION_QUERY_SERVICE ) ) { return org.springframework.data.gemfire.BeanFactory ( ) . getBean ( GemfireConstants . DEFAULT_GEMFIRE_INDEX_DEFINITION_QUERY_SERVICE , QueryService .class ) ; } else { return org.springframework.data.gemfire.QueryService ( org.springframework.data.gemfire.QueryService ( ) ) ; } }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.QueryService org.springframework.data.gemfire.QueryService ( QueryService org.springframework.data.gemfire.QueryService ) { if ( boolean ( ) ) { ( ( ConfigurableBeanFactory ) org.springframework.data.gemfire.BeanFactory ( ) ) . registerSingleton ( GemfireConstants . DEFAULT_GEMFIRE_INDEX_DEFINITION_QUERY_SERVICE , org.springframework.data.gemfire.QueryService ) ; } return org.springframework.data.gemfire.QueryService ; }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.Index org.springframework.data.gemfire.Index ( QueryService org.springframework.data.gemfire.QueryService , java.lang.String java.lang.String ) throws java.lang.Exception { Index org.springframework.data.gemfire.Index = org.springframework.data.gemfire.Index ( org.springframework.data.gemfire.QueryService , java.lang.String ) ; if ( org.springframework.data.gemfire.Index != null ) { if ( boolean ) { org.springframework.data.gemfire.QueryService . removeIndex ( org.springframework.data.gemfire.Index ) ; } else { return org.springframework.data.gemfire.Index ; } } try { if ( IndexType . isKey ( org.springframework.data.gemfire.IndexType ) ) { return org.springframework.data.gemfire.Index ( org.springframework.data.gemfire.QueryService , java.lang.String , java.lang.String , java.lang.String ) ; } else if ( IndexType . isHash ( org.springframework.data.gemfire.IndexType ) ) { return org.springframework.data.gemfire.Index ( org.springframework.data.gemfire.QueryService , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; } else { return org.springframework.data.gemfire.Index ( org.springframework.data.gemfire.QueryService , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; } } catch ( IndexExistsException org.springframework.data.gemfire.IndexExistsException ) { throw new GemfireIndexException ( java.lang.String . java.lang.String ( STRING , java.lang.String ) , org.springframework.data.gemfire.IndexExistsException ) ; } catch ( IndexNameConflictException org.springframework.data.gemfire.IndexNameConflictException ) { throw new GemfireIndexException ( java.lang.String . java.lang.String ( STRING , ( boolean ? STRING : STRING ) , java.lang.String ) , org.springframework.data.gemfire.IndexNameConflictException ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( org.springframework.data.gemfire.Index != null ) { java.util.Collection<org.springframework.data.gemfire.Index> < Index > java.util.Collection<org.springframework.data.gemfire.Index> = org.springframework.data.gemfire.QueryService . getIndexes ( ) ; if ( CollectionUtils . isEmpty ( java.util.Collection<org.springframework.data.gemfire.Index> ) || ! java.util.Collection<org.springframework.data.gemfire.Index> . contains ( org.springframework.data.gemfire.Index ) ) { org.springframework.data.gemfire.QueryService . getIndexes ( ) . add ( org.springframework.data.gemfire.Index ) ; return org.springframework.data.gemfire.Index ; } } throw java.lang.Exception ; } }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.Index org.springframework.data.gemfire.Index ( QueryService org.springframework.data.gemfire.QueryService , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.lang.Exception { if ( boolean ( ) ) { org.springframework.data.gemfire.QueryService . defineKeyIndex ( java.lang.String , java.lang.String , java.lang.String ) ; return new org.springframework.data.gemfire.IndexFactoryBean.IndexWrapper ( org.springframework.data.gemfire.QueryService , java.lang.String ) ; } else { return org.springframework.data.gemfire.QueryService . createKeyIndex ( java.lang.String , java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.Index org.springframework.data.gemfire.Index ( QueryService org.springframework.data.gemfire.QueryService , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.lang.Exception { boolean boolean = StringUtils . hasText ( java.lang.String ) ; if ( boolean ( ) ) { if ( boolean ) { org.springframework.data.gemfire.QueryService . defineHashIndex ( java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; } else { org.springframework.data.gemfire.QueryService . defineHashIndex ( java.lang.String , java.lang.String , java.lang.String ) ; } return new org.springframework.data.gemfire.IndexFactoryBean.IndexWrapper ( org.springframework.data.gemfire.QueryService , java.lang.String ) ; } else { if ( boolean ) { return org.springframework.data.gemfire.QueryService . createHashIndex ( java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; } else { return org.springframework.data.gemfire.QueryService . createHashIndex ( java.lang.String , java.lang.String , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.Index org.springframework.data.gemfire.Index ( QueryService org.springframework.data.gemfire.QueryService , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.lang.Exception { boolean boolean = StringUtils . hasText ( java.lang.String ) ; if ( boolean ( ) ) { if ( boolean ) { org.springframework.data.gemfire.QueryService . defineIndex ( java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; } else { org.springframework.data.gemfire.QueryService . defineIndex ( java.lang.String , java.lang.String , java.lang.String ) ; } return new org.springframework.data.gemfire.IndexFactoryBean.IndexWrapper ( org.springframework.data.gemfire.QueryService , java.lang.String ) ; } else { if ( boolean ) { return org.springframework.data.gemfire.QueryService . createIndex ( java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ; } else { return org.springframework.data.gemfire.QueryService . createIndex ( java.lang.String , java.lang.String , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.Index org.springframework.data.gemfire.Index ( QueryService org.springframework.data.gemfire.QueryService , java.lang.String java.lang.String ) { for ( Index org.springframework.data.gemfire.Index : CollectionUtils . nullSafeCollection ( org.springframework.data.gemfire.QueryService . getIndexes ( ) ) ) { if ( org.springframework.data.gemfire.Index . getName ( ) . equalsIgnoreCase ( java.lang.String ) ) { return org.springframework.data.gemfire.Index ; } } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.Index org.springframework.data.gemfire.Index ( ) { org.springframework.data.gemfire.Index = ( org.springframework.data.gemfire.Index != null ? org.springframework.data.gemfire.Index : org.springframework.data.gemfire.Index ( org.springframework.data.gemfire.QueryService , java.lang.String ) ) ; return org.springframework.data.gemfire.Index ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return ( org.springframework.data.gemfire.Index != null ? org.springframework.data.gemfire.Index . getClass ( ) : Index .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> public void void ( RegionService org.springframework.data.gemfire.RegionService ) { this . org.springframework.data.gemfire.RegionService = org.springframework.data.gemfire.RegionService ; }  <METHOD_END>
<METHOD_START> public void void ( QueryService org.springframework.data.gemfire.QueryService ) { this . org.springframework.data.gemfire.QueryService = org.springframework.data.gemfire.QueryService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.data.gemfire.BeanFactory ) throws org.springframework.data.gemfire.BeansException { this . org.springframework.data.gemfire.BeanFactory = org.springframework.data.gemfire.BeanFactory ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.BeanFactory org.springframework.data.gemfire.BeanFactory ( ) { Assert . state ( org.springframework.data.gemfire.BeanFactory != null , STRING ) ; return org.springframework.data.gemfire.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( IndexType . valueOfIgnoreCase ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( IndexType org.springframework.data.gemfire.IndexType ) { this . org.springframework.data.gemfire.IndexType = org.springframework.data.gemfire.IndexType ; }  <METHOD_END>
<METHOD_START> protected void ( QueryService org.springframework.data.gemfire.QueryService , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.data.gemfire.QueryService , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; this . org.springframework.data.gemfire.QueryService = org.springframework.data.gemfire.QueryService ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected synchronized org.springframework.data.gemfire.Index org.springframework.data.gemfire.Index ( ) { if ( this . org.springframework.data.gemfire.Index == null ) { java.lang.String java.lang.String = java.lang.String ( ) ; for ( Index org.springframework.data.gemfire.Index : org.springframework.data.gemfire.QueryService ( ) . getIndexes ( ) ) { if ( org.springframework.data.gemfire.Index . getName ( ) . equals ( java.lang.String ) ) { this . org.springframework.data.gemfire.Index = org.springframework.data.gemfire.Index ; break; } } if ( this . org.springframework.data.gemfire.Index == null ) { throw new GemfireIndexException ( new IndexInvalidException ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ) ; } } return org.springframework.data.gemfire.Index ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { Assert . state ( StringUtils . hasText ( java.lang.String ) , STRING ) ; return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.QueryService org.springframework.data.gemfire.QueryService ( ) { return org.springframework.data.gemfire.QueryService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.gemfire.Index ( ) . getName ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.gemfire.Index ( ) . getCanonicalizedFromClause ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.gemfire.Index ( ) . getCanonicalizedIndexedExpression ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.gemfire.Index ( ) . getCanonicalizedProjectionAttributes ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.gemfire.Index ( ) . getFromClause ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.gemfire.Index ( ) . getIndexedExpression ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.gemfire.Index ( ) . getProjectionAttributes ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.Region<?,?> < ? , ? > org.springframework.data.gemfire.Region<?,?> ( ) { return org.springframework.data.gemfire.Index ( ) . getRegion ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.IndexStatistics org.springframework.data.gemfire.IndexStatistics ( ) { return org.springframework.data.gemfire.Index ( ) . getStatistics ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public org . org.apache . org.apache . org.apache . org.apache . org.apache.geode.cache.query.IndexType org.apache.geode.cache.query.IndexType ( ) { return org.springframework.data.gemfire.Index ( ) . getType ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( java.lang.Object == this ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.data.gemfire.IndexFactoryBean.IndexWrapper || java.lang.Object instanceof Index ) ) { return false ; } if ( java.lang.Object instanceof org.springframework.data.gemfire.IndexFactoryBean.IndexWrapper ) { return ( java.lang.String ( ) . boolean ( ( ( org.springframework.data.gemfire.IndexFactoryBean.IndexWrapper ) java.lang.Object ) . java.lang.String ( ) ) ) ; } return org.springframework.data.gemfire.Index ( ) . equals ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( java.lang.String ( ) ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( org.springframework.data.gemfire.Index ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( org.springframework.data.gemfire.Index != null ? java.lang.String . java.lang.String ( org.springframework.data.gemfire.Index ) : java.lang.String ( ) ) ; }  <METHOD_END>
