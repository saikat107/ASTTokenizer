<METHOD_START> public void ( PartTree org.springframework.data.couchbase.repository.query.PartTree , ParameterAccessor org.springframework.data.couchbase.repository.query.ParameterAccessor , WherePath org.springframework.data.couchbase.repository.query.WherePath , CouchbaseConverter org.springframework.data.couchbase.repository.query.CouchbaseConverter , CouchbaseQueryMethod org.springframework.data.couchbase.repository.query.CouchbaseQueryMethod ) { super( org.springframework.data.couchbase.repository.query.PartTree , new org.springframework.data.couchbase.repository.query.N1qlCountQueryCreator.CountParameterAccessor ( org.springframework.data.couchbase.repository.query.ParameterAccessor ) , org.springframework.data.couchbase.repository.query.WherePath , org.springframework.data.couchbase.repository.query.CouchbaseConverter , org.springframework.data.couchbase.repository.query.CouchbaseQueryMethod ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.couchbase.repository.query.LimitPath org.springframework.data.couchbase.repository.query.LimitPath ( Expression org.springframework.data.couchbase.repository.query.Expression , Sort org.springframework.data.couchbase.repository.query.Sort ) { return super. complete ( org.springframework.data.couchbase.repository.query.Expression , Sort . unsorted ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ParameterAccessor org.springframework.data.couchbase.repository.query.ParameterAccessor ) { this . org.springframework.data.couchbase.repository.query.ParameterAccessor = org.springframework.data.couchbase.repository.query.ParameterAccessor ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.couchbase.repository.query.Pageable org.springframework.data.couchbase.repository.query.Pageable ( ) { return org.springframework.data.couchbase.repository.query.ParameterAccessor . getPageable ( ) . isPaged ( ) ? new org.springframework.data.couchbase.repository.query.N1qlCountQueryCreator.CountPageable ( org.springframework.data.couchbase.repository.query.ParameterAccessor . getPageable ( ) ) : Pageable . unpaged ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.couchbase.repository.query.Sort org.springframework.data.couchbase.repository.query.Sort ( ) { return Sort . unsorted ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Optional<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Optional<java.lang.Class<?>> ( ) { return org.springframework.data.couchbase.repository.query.ParameterAccessor . getDynamicProjection ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( int int ) { return org.springframework.data.couchbase.repository.query.ParameterAccessor . getBindableValue ( int ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.springframework.data.couchbase.repository.query.ParameterAccessor . hasBindableNullValue ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Iterator<java.lang.Object> < java.lang.Object > java.util.Iterator<java.lang.Object> ( ) { return org.springframework.data.couchbase.repository.query.ParameterAccessor . iterator ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Pageable org.springframework.data.couchbase.repository.query.Pageable ) { this . org.springframework.data.couchbase.repository.query.Pageable = org.springframework.data.couchbase.repository.query.Pageable ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return org.springframework.data.couchbase.repository.query.Pageable . getPageNumber ( ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return org.springframework.data.couchbase.repository.query.Pageable . getPageSize ( ) ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return org.springframework.data.couchbase.repository.query.Pageable . getOffset ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.couchbase.repository.query.Sort org.springframework.data.couchbase.repository.query.Sort ( ) { return Sort . unsorted ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.couchbase.repository.query.Pageable org.springframework.data.couchbase.repository.query.Pageable ( ) { return org.springframework.data.couchbase.repository.query.Pageable . next ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.couchbase.repository.query.Pageable org.springframework.data.couchbase.repository.query.Pageable ( ) { return org.springframework.data.couchbase.repository.query.Pageable . previousOrFirst ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.couchbase.repository.query.Pageable org.springframework.data.couchbase.repository.query.Pageable ( ) { return org.springframework.data.couchbase.repository.query.Pageable . first ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.springframework.data.couchbase.repository.query.Pageable . hasPrevious ( ) ; }  <METHOD_END>
