<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.json.Repositories org.springframework.data.rest.webmvc.json.Repositories ( ) { return new Repositories ( org.springframework.data.rest.webmvc.json.ApplicationContext ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.json.RepositoryRestConfiguration org.springframework.data.rest.webmvc.json.RepositoryRestConfiguration ( ) { RepositoryRestConfiguration org.springframework.data.rest.webmvc.json.RepositoryRestConfiguration = new RepositoryRestConfiguration ( new ProjectionDefinitionConfiguration ( ) , new MetadataConfiguration ( ) , mock ( EnumTranslationConfiguration .class ) ) ; org.springframework.data.rest.webmvc.json.RepositoryRestConfiguration . setResourceMappingForDomainType ( Person .class ) . setRel ( STRING ) ; org.springframework.data.rest.webmvc.json.RepositoryRestConfiguration . setResourceMappingForRepository ( PersonRepository .class ) . setRel ( STRING ) . setPath ( STRING ) . addResourceMappingFor ( STRING ) . setRel ( STRING ) . setPath ( STRING ) ; return org.springframework.data.rest.webmvc.json.RepositoryRestConfiguration ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.json.DefaultFormattingConversionService org.springframework.data.rest.webmvc.json.DefaultFormattingConversionService ( ) { DefaultFormattingConversionService org.springframework.data.rest.webmvc.json.DefaultFormattingConversionService = new DefaultFormattingConversionService ( ) ; DomainClassConverter < FormattingConversionService > org.springframework.data.rest.webmvc.json.DomainClassConverter<org.springframework.data.rest.webmvc.json.FormattingConversionService> = new DomainClassConverter < FormattingConversionService > ( org.springframework.data.rest.webmvc.json.DefaultFormattingConversionService ) ; org.springframework.data.rest.webmvc.json.DomainClassConverter<org.springframework.data.rest.webmvc.json.FormattingConversionService> . setApplicationContext ( org.springframework.data.rest.webmvc.json.ApplicationContext ) ; return org.springframework.data.rest.webmvc.json.DefaultFormattingConversionService ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.json.PersistentEntities org.springframework.data.rest.webmvc.json.PersistentEntities ( ) { return new PersistentEntities ( java.util.List<org.springframework.data.rest.webmvc.json.MappingContext<?,?>> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.json.Module org.springframework.data.rest.webmvc.json.Module ( ) { RepositoryResourceMappings org.springframework.data.rest.webmvc.json.RepositoryResourceMappings = new RepositoryResourceMappings ( org.springframework.data.rest.webmvc.json.Repositories ( ) , org.springframework.data.rest.webmvc.json.PersistentEntities ( ) , org.springframework.data.rest.webmvc.json.RepositoryRestConfiguration ( ) . getRepositoryDetectionStrategy ( ) ) ; EntityLinks org.springframework.data.rest.webmvc.json.EntityLinks = new RepositoryEntityLinks ( org.springframework.data.rest.webmvc.json.Repositories ( ) , org.springframework.data.rest.webmvc.json.RepositoryResourceMappings , org.springframework.data.rest.webmvc.json.RepositoryRestConfiguration ( ) , mock ( PagingAndSortingTemplateVariables .class ) , Java8PluginRegistry . of ( java.util.Arrays . java.util.List ( DefaultIdConverter . INSTANCE ) ) ) ; SelfLinkProvider org.springframework.data.rest.webmvc.json.SelfLinkProvider = new DefaultSelfLinkProvider ( org.springframework.data.rest.webmvc.json.PersistentEntities ( ) , org.springframework.data.rest.webmvc.json.EntityLinks , java.util.Collections .< EntityLookup < ? > > java.util.List<org.springframework.data.rest.webmvc.json.EntityLookup<?>> ( ) ) ; DefaultRepositoryInvokerFactory org.springframework.data.rest.webmvc.json.DefaultRepositoryInvokerFactory = new DefaultRepositoryInvokerFactory ( org.springframework.data.rest.webmvc.json.Repositories ( ) ) ; UriToEntityConverter org.springframework.data.rest.webmvc.json.UriToEntityConverter = new UriToEntityConverter ( org.springframework.data.rest.webmvc.json.PersistentEntities ( ) , org.springframework.data.rest.webmvc.json.DefaultRepositoryInvokerFactory , org.springframework.data.rest.webmvc.json.Repositories ( ) ) ; Associations org.springframework.data.rest.webmvc.json.Associations = new Associations ( org.springframework.data.rest.webmvc.json.RepositoryResourceMappings , org.springframework.data.rest.webmvc.json.RepositoryRestConfiguration ( ) ) ; LinkCollector org.springframework.data.rest.webmvc.json.LinkCollector = new LinkCollector ( org.springframework.data.rest.webmvc.json.PersistentEntities ( ) , org.springframework.data.rest.webmvc.json.SelfLinkProvider , org.springframework.data.rest.webmvc.json.Associations ) ; return new PersistentEntityJackson2Module ( org.springframework.data.rest.webmvc.json.Associations , org.springframework.data.rest.webmvc.json.PersistentEntities ( ) , org.springframework.data.rest.webmvc.json.UriToEntityConverter , org.springframework.data.rest.webmvc.json.LinkCollector , org.springframework.data.rest.webmvc.json.DefaultRepositoryInvokerFactory , mock ( LookupObjectSerializer .class ) , new ResourceProcessorInvoker ( java.util.Collections .< ResourceProcessor < ? > > java.util.List<org.springframework.data.rest.webmvc.json.ResourceProcessor<?>> ( ) ) , new EmbeddedResourcesAssembler ( org.springframework.data.rest.webmvc.json.PersistentEntities ( ) , org.springframework.data.rest.webmvc.json.Associations , mock ( ExcerptProjector .class ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.json.ObjectMapper org.springframework.data.rest.webmvc.json.ObjectMapper ( ) { RelProvider org.springframework.data.rest.webmvc.json.RelProvider = new EvoInflectorRelProvider ( ) ; ObjectMapper org.springframework.data.rest.webmvc.json.ObjectMapper = new ObjectMapper ( ) ; org.springframework.data.rest.webmvc.json.ObjectMapper . registerModule ( new Jackson2HalModule ( ) ) ; org.springframework.data.rest.webmvc.json.ObjectMapper . registerModule ( org.springframework.data.rest.webmvc.json.Module ( ) ) ; org.springframework.data.rest.webmvc.json.ObjectMapper . setHandlerInstantiator ( new Jackson2HalModule . Jackson2HalModule ( org.springframework.data.rest.webmvc.json.RelProvider , null , null ) ) ; org.springframework.data.rest.webmvc.json.ObjectMapper . configure ( DeserializationFeature . FAIL_ON_UNKNOWN_PROPERTIES , false ) ; org.springframework.data.rest.webmvc.json.ObjectMapper . setSerializationInclusion ( Include . NON_EMPTY ) ; return org.springframework.data.rest.webmvc.json.ObjectMapper ; }  <METHOD_END>
