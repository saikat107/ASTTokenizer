<METHOD_START> @ Test public void void ( ) { UserCredentials org.springframework.data.authentication.UserCredentials = new UserCredentials ( STRING , STRING ) ; assertThat ( org.springframework.data.authentication.UserCredentials . getUsername ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.authentication.UserCredentials . hasUsername ( ) ) . isFalse ( ) ; assertThat ( org.springframework.data.authentication.UserCredentials . getPassword ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.authentication.UserCredentials . hasPassword ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( UserCredentials . NO_CREDENTIALS . getUsername ( ) ) . isNull ( ) ; assertThat ( UserCredentials . NO_CREDENTIALS . getPassword ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { UserCredentials org.springframework.data.authentication.UserCredentials = new UserCredentials ( STRING , null ) ; assertThat ( org.springframework.data.authentication.UserCredentials . hasUsername ( ) ) . isTrue ( ) ; assertThat ( org.springframework.data.authentication.UserCredentials . getUsername ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.authentication.UserCredentials . hasPassword ( ) ) . isFalse ( ) ; assertThat ( org.springframework.data.authentication.UserCredentials . getPassword ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { UserCredentials org.springframework.data.authentication.UserCredentials = new UserCredentials ( null , STRING ) ; assertThat ( org.springframework.data.authentication.UserCredentials . hasUsername ( ) ) . isFalse ( ) ; assertThat ( org.springframework.data.authentication.UserCredentials . getUsername ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.authentication.UserCredentials . hasPassword ( ) ) . isTrue ( ) ; assertThat ( org.springframework.data.authentication.UserCredentials . getPassword ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( new UserCredentials ( null , null ) . getObfuscatedPassword ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( new UserCredentials ( null , STRING ) . getObfuscatedPassword ( ) ) . isEqualTo ( STRING ) ; assertThat ( new UserCredentials ( null , STRING ) . getObfuscatedPassword ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( new UserCredentials ( null , STRING ) . getObfuscatedPassword ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { UserCredentials org.springframework.data.authentication.UserCredentials = new UserCredentials ( null , STRING ) ; assertThat ( org.springframework.data.authentication.UserCredentials . toString ( ) ) . doesNotContain ( org.springframework.data.authentication.UserCredentials . getPassword ( ) ) ; assertThat ( org.springframework.data.authentication.UserCredentials . toString ( ) ) . contains ( org.springframework.data.authentication.UserCredentials . getObfuscatedPassword ( ) ) ; }  <METHOD_END>
