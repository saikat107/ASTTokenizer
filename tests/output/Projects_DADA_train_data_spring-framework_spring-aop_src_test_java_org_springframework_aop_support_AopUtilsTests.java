<METHOD_START> @ Test public void void ( ) { class TestPointcut extends StaticMethodMatcherPointcut { @ java.lang.Override public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> ) { return false ; } } Pointcut org.springframework.aop.support.Pointcut = new TestPointcut ( ) ; assertFalse ( AopUtils . canApply ( org.springframework.aop.support.Pointcut , java.lang.Object .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> ) { return false ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertTrue ( AopUtils . canApply ( new DefaultPointcutAdvisor ( new NopInterceptor ( ) ) , java.lang.Object .class ) ) ; assertTrue ( AopUtils . canApply ( new DefaultPointcutAdvisor ( new NopInterceptor ( ) ) , TestBean .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { class TestPointcut extends StaticMethodMatcherPointcut { @ java.lang.Override public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> ) { return java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) ; } } Pointcut org.springframework.aop.support.Pointcut = new TestPointcut ( ) ; assertTrue ( AopUtils . canApply ( org.springframework.aop.support.Pointcut , java.lang.Object .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> ) { return java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertSame ( MethodMatcher . TRUE , SerializationTestUtils . serializeAndDeserialize ( MethodMatcher . TRUE ) ) ; assertSame ( ClassFilter . TRUE , SerializationTestUtils . serializeAndDeserialize ( ClassFilter . TRUE ) ) ; assertSame ( Pointcut . TRUE , SerializationTestUtils . serializeAndDeserialize ( Pointcut . TRUE ) ) ; assertSame ( EmptyTargetSource . INSTANCE , SerializationTestUtils . serializeAndDeserialize ( EmptyTargetSource . INSTANCE ) ) ; assertSame ( Pointcuts . SETTERS , SerializationTestUtils . serializeAndDeserialize ( Pointcuts . SETTERS ) ) ; assertSame ( Pointcuts . GETTERS , SerializationTestUtils . serializeAndDeserialize ( Pointcuts . GETTERS ) ) ; assertSame ( ExposeInvocationInterceptor . INSTANCE , SerializationTestUtils . serializeAndDeserialize ( ExposeInvocationInterceptor . INSTANCE ) ) ; }  <METHOD_END>
