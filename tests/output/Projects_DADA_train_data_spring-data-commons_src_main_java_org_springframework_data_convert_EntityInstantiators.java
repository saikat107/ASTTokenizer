<METHOD_START> public void ( ) { this( java.util.Collections . java.util.Map<java.lang.Class<?>,org.springframework.data.convert.EntityInstantiator> ( ) ); }  <METHOD_END>
<METHOD_START> public void ( EntityInstantiator org.springframework.data.convert.EntityInstantiator ) { this( org.springframework.data.convert.EntityInstantiator , java.util.Collections . java.util.Map<java.lang.Object,java.lang.Object> ( ) ); }  <METHOD_END>
<METHOD_START> public void ( java.util.Map<java.lang.Class<?>,org.springframework.data.convert.EntityInstantiator> < java.lang.Class<?> < ? > , EntityInstantiator > java.util.Map<java.lang.Class<?>,org.springframework.data.convert.EntityInstantiator> ) { this( new ClassGeneratingEntityInstantiator ( ) , java.util.Map<java.lang.Class<?>,org.springframework.data.convert.EntityInstantiator> ); }  <METHOD_END>
<METHOD_START> public void ( EntityInstantiator org.springframework.data.convert.EntityInstantiator , java.util.Map<java.lang.Class<?>,org.springframework.data.convert.EntityInstantiator> < java.lang.Class<?> < ? > , EntityInstantiator > java.util.Map<java.lang.Class<?>,org.springframework.data.convert.EntityInstantiator> ) { Assert . notNull ( org.springframework.data.convert.EntityInstantiator , STRING ) ; Assert . notNull ( java.util.Map<java.lang.Class<?>,org.springframework.data.convert.EntityInstantiator> , STRING ) ; this . org.springframework.data.convert.EntityInstantiator = org.springframework.data.convert.EntityInstantiator ; this . java.util.Map<java.lang.Class<?>,org.springframework.data.convert.EntityInstantiator> = java.util.Map<java.lang.Class<?>,org.springframework.data.convert.EntityInstantiator> ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.convert.EntityInstantiator org.springframework.data.convert.EntityInstantiator ( PersistentEntity < ? , ? > org.springframework.data.convert.PersistentEntity<?,?> ) { Assert . notNull ( org.springframework.data.convert.PersistentEntity<,> , STRING ) ; java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.data.convert.PersistentEntity<,> . getType ( ) ; if ( ! java.util.Map<java.lang.Class<?>,org.springframework.data.convert.EntityInstantiator> . containsKey ( java.lang.Class<> ) ) { return org.springframework.data.convert.EntityInstantiator ; } EntityInstantiator org.springframework.data.convert.EntityInstantiator = java.util.Map<java.lang.Class<?>,org.springframework.data.convert.EntityInstantiator> . get ( org.springframework.data.convert.PersistentEntity<,> . getType ( ) ) ; return org.springframework.data.convert.EntityInstantiator == null ? org.springframework.data.convert.EntityInstantiator : org.springframework.data.convert.EntityInstantiator ; }  <METHOD_END>
