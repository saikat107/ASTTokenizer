<METHOD_START> @ Test public void void ( ) java.lang.Exception { ApplicationContext org.springframework.scripting.support.ApplicationContext = new ClassPathXmlApplicationContext ( STRING , java.lang.Class<? extends org.springframework.scripting.support.StandardScriptFactoryTests> ( ) ) ; assertTrue ( java.util.Arrays . java.util.List ( org.springframework.scripting.support.ApplicationContext . getBeanNamesForType ( Messenger .class ) ) . contains ( STRING ) ) ; Messenger org.springframework.scripting.support.Messenger = ( Messenger ) org.springframework.scripting.support.ApplicationContext . getBean ( STRING ) ; assertFalse ( AopUtils . isAopProxy ( org.springframework.scripting.support.Messenger ) ) ; assertEquals ( STRING , org.springframework.scripting.support.Messenger . getMessage ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ApplicationContext org.springframework.scripting.support.ApplicationContext = new ClassPathXmlApplicationContext ( STRING , java.lang.Class<? extends org.springframework.scripting.support.StandardScriptFactoryTests> ( ) ) ; assertTrue ( java.util.Arrays . java.util.List ( org.springframework.scripting.support.ApplicationContext . getBeanNamesForType ( Messenger .class ) ) . contains ( STRING ) ) ; Messenger org.springframework.scripting.support.Messenger = ( Messenger ) org.springframework.scripting.support.ApplicationContext . getBean ( STRING ) ; assertTrue ( AopUtils . isAopProxy ( org.springframework.scripting.support.Messenger ) ) ; assertTrue ( org.springframework.scripting.support.Messenger instanceof Refreshable ) ; assertEquals ( STRING , org.springframework.scripting.support.Messenger . getMessage ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ApplicationContext org.springframework.scripting.support.ApplicationContext = new ClassPathXmlApplicationContext ( STRING , java.lang.Class<? extends org.springframework.scripting.support.StandardScriptFactoryTests> ( ) ) ; assertTrue ( java.util.Arrays . java.util.List ( org.springframework.scripting.support.ApplicationContext . getBeanNamesForType ( Messenger .class ) ) . contains ( STRING ) ) ; Messenger org.springframework.scripting.support.Messenger = ( Messenger ) org.springframework.scripting.support.ApplicationContext . getBean ( STRING ) ; assertFalse ( AopUtils . isAopProxy ( org.springframework.scripting.support.Messenger ) ) ; assertEquals ( STRING , org.springframework.scripting.support.Messenger . getMessage ( ) ) ; }  <METHOD_END>
