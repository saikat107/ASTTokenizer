<METHOD_START> public void ( Marshaller org.springframework.oxm.support.Marshaller , java.lang.Object java.lang.Object ) { super( new org.springframework.oxm.support.MarshallingSource.MarshallingXMLReader ( org.springframework.oxm.support.Marshaller , java.lang.Object ) , new org.xml.sax.InputSource ( ) ); Assert . notNull ( org.springframework.oxm.support.Marshaller , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; this . org.springframework.oxm.support.Marshaller = org.springframework.oxm.support.Marshaller ; this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public org.springframework.oxm.support.Marshaller org.springframework.oxm.support.Marshaller ( ) { return this . org.springframework.oxm.support.Marshaller ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return this . java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.xml.sax.InputSource org.xml.sax.InputSource ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.xml.sax.XMLReader org.xml.sax.XMLReader ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> private void ( Marshaller org.springframework.oxm.support.Marshaller , java.lang.Object java.lang.Object ) { Assert . notNull ( org.springframework.oxm.support.Marshaller , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; this . org.springframework.oxm.support.Marshaller = org.springframework.oxm.support.Marshaller ; this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.xml.sax.ContentHandler org.xml.sax.ContentHandler ) { this . org.xml.sax.ContentHandler = org.xml.sax.ContentHandler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.xml.sax.ContentHandler org.xml.sax.ContentHandler ( ) { return this . org.xml.sax.ContentHandler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.xml.sax.DTDHandler org.xml.sax.DTDHandler ) { this . org.xml.sax.DTDHandler = org.xml.sax.DTDHandler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.xml.sax.DTDHandler org.xml.sax.DTDHandler ( ) { return this . org.xml.sax.DTDHandler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.xml.sax.EntityResolver org.xml.sax.EntityResolver ) { this . org.xml.sax.EntityResolver = org.xml.sax.EntityResolver ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.xml.sax.EntityResolver org.xml.sax.EntityResolver ( ) { return this . org.xml.sax.EntityResolver ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.xml.sax.ErrorHandler org.xml.sax.ErrorHandler ) { this . org.xml.sax.ErrorHandler = org.xml.sax.ErrorHandler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.xml.sax.ErrorHandler org.xml.sax.ErrorHandler ( ) { return this . org.xml.sax.ErrorHandler ; }  <METHOD_END>
<METHOD_START> protected org.xml.sax.ext.LexicalHandler org.xml.sax.ext.LexicalHandler ( ) { return this . org.xml.sax.ext.LexicalHandler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) throws org.xml.sax.SAXNotRecognizedException { throw new org.xml.sax.SAXNotRecognizedException ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , boolean boolean ) throws org.xml.sax.SAXNotRecognizedException { throw new org.xml.sax.SAXNotRecognizedException ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) throws org.xml.sax.SAXNotRecognizedException { if ( STRING . boolean ( java.lang.String ) ) { return org.xml.sax.ext.LexicalHandler ; } else { throw new org.xml.sax.SAXNotRecognizedException ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) throws org.xml.sax.SAXNotRecognizedException { if ( STRING . boolean ( java.lang.String ) ) { this . org.xml.sax.ext.LexicalHandler = ( org.xml.sax.ext.LexicalHandler ) java.lang.Object ; } else { throw new org.xml.sax.SAXNotRecognizedException ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.xml.sax.InputSource org.xml.sax.InputSource ) throws org.xml.sax.SAXException { void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.xml.sax.SAXException { void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) org.xml.sax.SAXException { javax.xml.transform.sax.SAXResult javax.xml.transform.sax.SAXResult = new javax.xml.transform.sax.SAXResult ( org.xml.sax.ContentHandler ( ) ) ; javax.xml.transform.sax.SAXResult . void ( org.xml.sax.ext.LexicalHandler ( ) ) ; try { this . org.springframework.oxm.support.Marshaller . marshal ( this . java.lang.Object , javax.xml.transform.sax.SAXResult ) ; } catch ( java.io.IOException java.io.IOException ) { org.xml.sax.SAXParseException org.xml.sax.SAXParseException = new org.xml.sax.SAXParseException ( java.io.IOException . java.lang.String ( ) , null , null , - NUMBER , - NUMBER , java.io.IOException ) ; org.xml.sax.ErrorHandler org.xml.sax.ErrorHandler = org.xml.sax.ErrorHandler ( ) ; if ( org.xml.sax.ErrorHandler != null ) { org.xml.sax.ErrorHandler . void ( org.xml.sax.SAXParseException ) ; } else { throw org.xml.sax.SAXParseException ; } } }  <METHOD_END>
