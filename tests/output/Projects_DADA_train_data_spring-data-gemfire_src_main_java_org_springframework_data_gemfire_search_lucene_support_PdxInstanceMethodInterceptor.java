<METHOD_START> public static org.springframework.data.gemfire.search.lucene.support.PdxInstanceMethodInterceptor org.springframework.data.gemfire.search.lucene.support.PdxInstanceMethodInterceptor ( java.lang.Object java.lang.Object ) { Assert . isInstanceOf ( PdxInstance .class , java.lang.Object , ( ) String . format ( STRING , ObjectUtils . nullSafeClassName ( source ) , PdxInstance .class . getName ( ) ) ) ; return org.springframework.data.gemfire.search.lucene.support.PdxInstanceMethodInterceptor ( ( PdxInstance ) java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.gemfire.search.lucene.support.PdxInstanceMethodInterceptor org.springframework.data.gemfire.search.lucene.support.PdxInstanceMethodInterceptor ( PdxInstance org.springframework.data.gemfire.search.lucene.support.PdxInstance ) { return new org.springframework.data.gemfire.search.lucene.support.PdxInstanceMethodInterceptor ( org.springframework.data.gemfire.search.lucene.support.PdxInstance ) ; }  <METHOD_END>
<METHOD_START> public void ( PdxInstance org.springframework.data.gemfire.search.lucene.support.PdxInstance ) { Assert . notNull ( org.springframework.data.gemfire.search.lucene.support.PdxInstance , STRING ) ; this . org.springframework.data.gemfire.search.lucene.support.PdxInstance = org.springframework.data.gemfire.search.lucene.support.PdxInstance ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.search.lucene.support.PdxInstance org.springframework.data.gemfire.search.lucene.support.PdxInstance ( ) { return this . org.springframework.data.gemfire.search.lucene.support.PdxInstance ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( MethodInvocation org.springframework.data.gemfire.search.lucene.support.MethodInvocation ) throws java.lang.Throwable { java.lang.reflect.Method java.lang.reflect.Method = org.springframework.data.gemfire.search.lucene.support.MethodInvocation . getMethod ( ) ; if ( ReflectionUtils . isObjectMethod ( java.lang.reflect.Method ) ) { return org.springframework.data.gemfire.search.lucene.support.MethodInvocation . proceed ( ) ; } else { Accessor org.springframework.data.gemfire.search.lucene.support.Accessor = new Accessor ( java.lang.reflect.Method ) ; PdxInstance org.springframework.data.gemfire.search.lucene.support.PdxInstance = org.springframework.data.gemfire.search.lucene.support.PdxInstance ( ) ; java.lang.String java.lang.String = org.springframework.data.gemfire.search.lucene.support.Accessor . getPropertyName ( ) ; Assert . state ( org.springframework.data.gemfire.search.lucene.support.PdxInstance . hasField ( java.lang.String ) , ( ) String . format ( STRING , pdxInstance , propertyName ) ) ; if ( org.springframework.data.gemfire.search.lucene.support.Accessor . isGetter ( ) ) { return org.springframework.data.gemfire.search.lucene.support.PdxInstance . getField ( java.lang.String ) ; } else { Assert . isTrue ( org.springframework.data.gemfire.search.lucene.support.MethodInvocation . getArguments ( ) . length == NUMBER , ( ) String . format ( STRING , method . getName ( ) , Arrays . toString ( invocation . getArguments ( ) ) ) ) ; java.lang.Object java.lang.Object = org.springframework.data.gemfire.search.lucene.support.MethodInvocation . getArguments ( ) [ NUMBER ] ; WritablePdxInstance org.springframework.data.gemfire.search.lucene.support.WritablePdxInstance = org.springframework.data.gemfire.search.lucene.support.PdxInstance . createWriter ( ) ; Assert . state ( org.springframework.data.gemfire.search.lucene.support.WritablePdxInstance != null , ( ) String . format ( STRING , pdxInstance , propertyName , value ) ) ; org.springframework.data.gemfire.search.lucene.support.WritablePdxInstance . setField ( java.lang.String , java.lang.Object ) ; this . org.springframework.data.gemfire.search.lucene.support.PdxInstance = org.springframework.data.gemfire.search.lucene.support.WritablePdxInstance ; return null ; } } }  <METHOD_END>
