<METHOD_START> @ java.lang.Override protected org.springframework.integration.ip.config.AbstractBeanDefinition org.springframework.integration.ip.config.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.ip.config.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.ip.config.BeanDefinitionBuilder = null ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( IpAdapterParserUtils . TCP_CONNECTION_TYPE ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.ip.config.ParserContext . getReaderContext ( ) . error ( IpAdapterParserUtils . TCP_CONNECTION_TYPE + STRING , org.w3c.dom.Element ) ; } else if ( ! STRING . boolean ( java.lang.String ) && ! STRING . boolean ( java.lang.String ) ) { org.springframework.integration.ip.config.ParserContext . getReaderContext ( ) . error ( IpAdapterParserUtils . TCP_CONNECTION_TYPE + STRING , org.w3c.dom.Element ) ; } org.springframework.integration.ip.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( TcpConnectionFactoryFactoryBean .class ) ; IpAdapterParserUtils . addConstructorValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . HOST ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . PORT ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . USING_NIO ) ; IpAdapterParserUtils . addCommonSocketOptions ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . RECEIVE_BUFFER_SIZE ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . USING_DIRECT_BUFFERS ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . SO_KEEP_ALIVE ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . SO_LINGER ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . SO_TCP_NODELAY ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . SO_TRAFFIC_CLASS ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . POOL_SIZE ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . BACKLOG ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . TASK_EXECUTOR ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . SERIALIZER ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . DESERIALIZER ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . SINGLE_USE ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . INTERCEPTOR_FACTORY_CHAIN ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . LOOKUP_HOST ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . APPLY_SEQUENCE ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . SSL_CONTEXT_SUPPORT ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . SOCKET_FACTORY_SUPPORT ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . SOCKET_SUPPORT ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . NIO_CONNECTION_SUPPORT ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . MAPPER ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . SSL_HANDSHAKE_TIMEOUT ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . READ_DELAY ) ; return org.springframework.integration.ip.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
