<METHOD_START> @ Bean @ ConditionalOnProperty ( prefix = STRING , name = STRING , havingValue = STRING , matchIfMissing = true ) public org.springframework.boot.autoconfigure.jms.activemq.ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.activemq.ActiveMQConnectionFactory ( ActiveMQProperties org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties ) { return new ActiveMQConnectionFactoryFactory ( org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties ) . createConnectionFactory ( ActiveMQConnectionFactory .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( destroyMethod = STRING ) @ ConditionalOnProperty ( prefix = STRING , name = STRING , havingValue = STRING , matchIfMissing = false ) @ ConfigurationProperties ( prefix = STRING ) public org.springframework.boot.autoconfigure.jms.activemq.PooledConnectionFactory org.springframework.boot.autoconfigure.jms.activemq.PooledConnectionFactory ( ActiveMQProperties org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties ) { PooledConnectionFactory org.springframework.boot.autoconfigure.jms.activemq.PooledConnectionFactory = new PooledConnectionFactory ( new ActiveMQConnectionFactoryFactory ( org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties ) . createConnectionFactory ( ActiveMQConnectionFactory .class ) ) ; ActiveMQProperties . ActiveMQProperties ActiveMQProperties.Pool = org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties . getPool ( ) ; org.springframework.boot.autoconfigure.jms.activemq.PooledConnectionFactory . setMaxConnections ( ActiveMQProperties.Pool . getMaxConnections ( ) ) ; org.springframework.boot.autoconfigure.jms.activemq.PooledConnectionFactory . setIdleTimeout ( ActiveMQProperties.Pool . getIdleTimeout ( ) ) ; org.springframework.boot.autoconfigure.jms.activemq.PooledConnectionFactory . setExpiryTimeout ( ActiveMQProperties.Pool . getExpiryTimeout ( ) ) ; return org.springframework.boot.autoconfigure.jms.activemq.PooledConnectionFactory ; }  <METHOD_END>
