<METHOD_START> @ Before public void void ( ) { FileSystemUtils . deleteRecursively ( new java.io.File ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.test.autoconfigure.restdocs.MockMvc . perform ( get ( STRING ) ) . andDo ( document ( STRING ) ) ; java.io.File java.io.File = new java.io.File ( STRING ) ; assertThat ( java.io.File ) . exists ( ) ; assertThat ( new java.io.File ( java.io.File , STRING ) ) . has ( org.springframework.boot.test.autoconfigure.restdocs.Condition<java.io.File> ( STRING ) ) ; assertThat ( new java.io.File ( java.io.File , STRING ) ) . has ( org.springframework.boot.test.autoconfigure.restdocs.Condition<java.io.File> ( STRING ) ) ; assertThat ( new java.io.File ( java.io.File , STRING ) ) . isFile ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.test.autoconfigure.restdocs.Condition<java.io.File> < java.io.File > org.springframework.boot.test.autoconfigure.restdocs.Condition<java.io.File> ( java.lang.String java.lang.String ) { return new ContentContainingCondition ( java.lang.String ) ; }  <METHOD_END>
