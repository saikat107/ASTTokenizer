<METHOD_START> @ BeforeClass public static void void ( ) java.lang.Exception { org.springframework.data.cassandra.mapping.PrimaryKeyColumn = org.springframework.data.cassandra.mapping.CassandraPrimaryKeyColumnAnnotationComparatorUnitTests.EntityOne .class . java.lang.reflect.Field ( STRING ) . T ( PrimaryKeyColumn .class ) ; org.springframework.data.cassandra.mapping.PrimaryKeyColumn = org.springframework.data.cassandra.mapping.CassandraPrimaryKeyColumnAnnotationComparatorUnitTests.EntityTwo .class . java.lang.reflect.Field ( STRING ) . T ( PrimaryKeyColumn .class ) ; org.springframework.data.cassandra.mapping.PrimaryKeyColumn = org.springframework.data.cassandra.mapping.CassandraPrimaryKeyColumnAnnotationComparatorUnitTests.EntityThree .class . java.lang.reflect.Field ( STRING ) . T ( PrimaryKeyColumn .class ) ; org.springframework.data.cassandra.mapping.PrimaryKeyColumn = org.springframework.data.cassandra.mapping.CassandraPrimaryKeyColumnAnnotationComparatorUnitTests.EntityFour .class . java.lang.reflect.Field ( STRING ) . T ( PrimaryKeyColumn .class ) ; org.springframework.data.cassandra.mapping.PrimaryKeyColumn = org.springframework.data.cassandra.mapping.CassandraPrimaryKeyColumnAnnotationComparatorUnitTests.EntityFive .class . java.lang.reflect.Field ( STRING ) . T ( PrimaryKeyColumn .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( NUMBER ) ; assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( NUMBER ) ; assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( - NUMBER ) ; assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( NUMBER ) ; assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( - NUMBER ) ; assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( NUMBER ) ; assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( - NUMBER ) ; assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( NUMBER ) ; assertThat ( INSTANCE . compare ( org.springframework.data.cassandra.mapping.PrimaryKeyColumn , org.springframework.data.cassandra.mapping.PrimaryKeyColumn ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
