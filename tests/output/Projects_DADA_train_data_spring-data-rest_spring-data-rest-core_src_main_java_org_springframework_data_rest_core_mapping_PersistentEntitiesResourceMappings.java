<METHOD_START> public void ( PersistentEntities org.springframework.data.rest.core.mapping.PersistentEntities ) { this . org.springframework.data.rest.core.mapping.PersistentEntities = org.springframework.data.rest.core.mapping.PersistentEntities ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; java.lang.Class<?> = ClassUtils . getUserClass ( java.lang.Class<> ) ; if ( java.util.Map<java.lang.Class<?>,org.springframework.data.rest.core.mapping.ResourceMetadata> . containsKey ( java.lang.Class<> ) ) { return java.util.Map<java.lang.Class<?>,org.springframework.data.rest.core.mapping.ResourceMetadata> . get ( java.lang.Class<> ) ; } MappingResourceMetadata org.springframework.data.rest.core.mapping.MappingResourceMetadata = org.springframework.data.rest.core.mapping.MappingResourceMetadata ( java.lang.Class<> ) ; java.util.Map<java.lang.Class<?>,org.springframework.data.rest.core.mapping.ResourceMetadata> . put ( java.lang.Class<> , org.springframework.data.rest.core.mapping.MappingResourceMetadata ) ; return org.springframework.data.rest.core.mapping.MappingResourceMetadata ; }  <METHOD_END>
<METHOD_START> org.springframework.data.rest.core.mapping.MappingResourceMetadata org.springframework.data.rest.core.mapping.MappingResourceMetadata ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . getUserClass ( java.lang.Class<> ) ; MappingResourceMetadata org.springframework.data.rest.core.mapping.MappingResourceMetadata = java.util.Map<java.lang.Class<?>,org.springframework.data.rest.core.mapping.MappingResourceMetadata> . get ( java.lang.Class<> ) ; if ( org.springframework.data.rest.core.mapping.MappingResourceMetadata != null ) { return org.springframework.data.rest.core.mapping.MappingResourceMetadata ; } java.util.Optional<org.springframework.data.rest.core.mapping.PersistentEntity<?,? extends org.springframework.data.rest.core.mapping.PersistentProperty<?>>> < PersistentEntity < ? , ? extends PersistentProperty < ? > > > java.util.Optional<org.springframework.data.rest.core.mapping.PersistentEntity<?,? extends org.springframework.data.rest.core.mapping.PersistentProperty<?>>> = org.springframework.data.rest.core.mapping.PersistentEntities . getPersistentEntity ( java.lang.Class<> ) ; return java.util.Optional<org.springframework.data.rest.core.mapping.PersistentEntity<?,? extends org.springframework.data.rest.core.mapping.PersistentProperty<?>>> . map ( it -> { MappingResourceMetadata metadata = new MappingResourceMetadata ( it , this ) ; mappingCache . put ( userType , metadata ) ; return metadata ; } ) . orElse ( null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.SearchResourceMappings org.springframework.data.rest.core.mapping.SearchResourceMappings ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.data.rest.core.mapping.SearchResourceMappings ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { if ( ! boolean ( java.lang.Class<> ) ) { return false ; } ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata = org.springframework.data.rest.core.mapping.ResourceMetadata ( java.lang.Class<> ) ; return org.springframework.data.rest.core.mapping.ResourceMetadata . isExported ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; for ( ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata : this ) { if ( org.springframework.data.rest.core.mapping.ResourceMetadata . getPath ( ) . matches ( java.lang.String ) ) { return org.springframework.data.rest.core.mapping.ResourceMetadata . isExported ( ) ; } } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { if ( java.util.Map<java.lang.Class<?>,org.springframework.data.rest.core.mapping.ResourceMetadata> . containsKey ( java.lang.Class<> ) ) { return true ; } return false ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.core.mapping.ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping ( PersistentProperty < ? > org.springframework.data.rest.core.mapping.PersistentProperty<?> ) { ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping = java.util.Map<org.springframework.data.rest.core.mapping.PersistentProperty<?>,org.springframework.data.rest.core.mapping.ResourceMapping> . get ( org.springframework.data.rest.core.mapping.PersistentProperty<> ) ; if ( org.springframework.data.rest.core.mapping.ResourceMapping != null ) { return org.springframework.data.rest.core.mapping.ResourceMapping ; } org.springframework.data.rest.core.mapping.ResourceMapping = new PersistentPropertyResourceMapping ( org.springframework.data.rest.core.mapping.PersistentProperty<> , this ) ; java.util.Map<org.springframework.data.rest.core.mapping.PersistentProperty<?>,org.springframework.data.rest.core.mapping.ResourceMapping> . put ( org.springframework.data.rest.core.mapping.PersistentProperty<> , org.springframework.data.rest.core.mapping.ResourceMapping ) ; return org.springframework.data.rest.core.mapping.ResourceMapping ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( PersistentProperty < ? > org.springframework.data.rest.core.mapping.PersistentProperty<?> ) { ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping = org.springframework.data.rest.core.mapping.ResourceMapping ( org.springframework.data.rest.core.mapping.PersistentProperty<> ) ; return org.springframework.data.rest.core.mapping.ResourceMapping != null && org.springframework.data.rest.core.mapping.ResourceMapping . isExported ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.data.rest.core.mapping.ResourceMetadata> < ResourceMetadata > java.util.Iterator<org.springframework.data.rest.core.mapping.ResourceMetadata> ( ) { java.util.Set<org.springframework.data.rest.core.mapping.ResourceMetadata> < ResourceMetadata > java.util.Set<org.springframework.data.rest.core.mapping.ResourceMetadata> = new java.util.HashSet<org.springframework.data.rest.core.mapping.ResourceMetadata> < ResourceMetadata > ( ) ; for ( ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata : java.util.Map<java.lang.Class<?>,org.springframework.data.rest.core.mapping.ResourceMetadata> . values ( ) ) { if ( org.springframework.data.rest.core.mapping.ResourceMetadata != null ) { java.util.Set<org.springframework.data.rest.core.mapping.ResourceMetadata> . add ( org.springframework.data.rest.core.mapping.ResourceMetadata ) ; } } return java.util.Set<org.springframework.data.rest.core.mapping.ResourceMetadata> . iterator ( ) ; }  <METHOD_END>
<METHOD_START> protected final void void ( java.lang.Class<?> < ? > java.lang.Class<?> , ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata ) { java.util.Map<java.lang.Class<?>,org.springframework.data.rest.core.mapping.ResourceMetadata> . put ( java.lang.Class<> , org.springframework.data.rest.core.mapping.ResourceMetadata ) ; }  <METHOD_END>
<METHOD_START> protected final boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return java.util.Map<java.lang.Class<?>,org.springframework.data.rest.core.mapping.ResourceMetadata> . containsKey ( java.lang.Class<> ) ; }  <METHOD_END>
