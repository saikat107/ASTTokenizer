<METHOD_START> boolean boolean ( ServerRequest org.springframework.web.reactive.function.server.ServerRequest );  <METHOD_END>
<METHOD_START> default org.springframework.web.reactive.function.server.RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate ( org.springframework.web.reactive.function.server.RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate ) { Assert . notNull ( org.springframework.web.reactive.function.server.RequestPredicate , STRING ) ; return new RequestPredicates . RequestPredicates ( this , org.springframework.web.reactive.function.server.RequestPredicate ) ; }  <METHOD_END>
<METHOD_START> default org.springframework.web.reactive.function.server.RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate ( ) { return ( org.springframework.web.reactive.function.server.ServerRequest ) -> ! boolean ( org.springframework.web.reactive.function.server.ServerRequest ) ; }  <METHOD_END>
<METHOD_START> default org.springframework.web.reactive.function.server.RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate ( org.springframework.web.reactive.function.server.RequestPredicate org.springframework.web.reactive.function.server.RequestPredicate ) { Assert . notNull ( org.springframework.web.reactive.function.server.RequestPredicate , STRING ) ; return new RequestPredicates . RequestPredicates ( this , org.springframework.web.reactive.function.server.RequestPredicate ) ; }  <METHOD_END>
<METHOD_START> default java.util.Optional<org.springframework.web.reactive.function.server.ServerRequest> < ServerRequest > java.util.Optional<org.springframework.web.reactive.function.server.ServerRequest> ( ServerRequest org.springframework.web.reactive.function.server.ServerRequest ) { return boolean ( org.springframework.web.reactive.function.server.ServerRequest ) ? java.util.Optional . java.util.Optional ( org.springframework.web.reactive.function.server.ServerRequest ) : java.util.Optional . java.util.Optional<org.springframework.web.reactive.function.server.ServerRequest> ( ) ; }  <METHOD_END>
