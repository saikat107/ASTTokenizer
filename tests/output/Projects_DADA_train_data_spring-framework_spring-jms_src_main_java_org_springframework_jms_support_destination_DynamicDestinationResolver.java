<METHOD_START> @ java.lang.Override public org.springframework.jms.support.destination.Destination org.springframework.jms.support.destination.Destination ( Session org.springframework.jms.support.destination.Session , java.lang.String java.lang.String , boolean boolean )			throws org.springframework.jms.support.destination.JMSException { Assert . notNull ( org.springframework.jms.support.destination.Session , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; if ( boolean ) { return org.springframework.jms.support.destination.Topic ( org.springframework.jms.support.destination.Session , java.lang.String ) ; } else { return org.springframework.jms.support.destination.Queue ( org.springframework.jms.support.destination.Session , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.jms.support.destination.Topic org.springframework.jms.support.destination.Topic ( Session org.springframework.jms.support.destination.Session , java.lang.String java.lang.String ) throws org.springframework.jms.support.destination.JMSException { return org.springframework.jms.support.destination.Session . createTopic ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.jms.support.destination.Queue org.springframework.jms.support.destination.Queue ( Session org.springframework.jms.support.destination.Session , java.lang.String java.lang.String ) throws org.springframework.jms.support.destination.JMSException { return org.springframework.jms.support.destination.Session . createQueue ( java.lang.String ) ; }  <METHOD_END>
