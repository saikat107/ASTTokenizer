<METHOD_START> public void ( MongoDbFactory org.springframework.data.mongodb.gridfs.MongoDbFactory , MongoConverter org.springframework.data.mongodb.gridfs.MongoConverter ) { this( org.springframework.data.mongodb.gridfs.MongoDbFactory , org.springframework.data.mongodb.gridfs.MongoConverter , null ); }  <METHOD_END>
<METHOD_START> public void ( MongoDbFactory org.springframework.data.mongodb.gridfs.MongoDbFactory , MongoConverter org.springframework.data.mongodb.gridfs.MongoConverter , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.data.mongodb.gridfs.MongoDbFactory , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.gridfs.MongoConverter , STRING ) ; this . org.springframework.data.mongodb.gridfs.MongoDbFactory = org.springframework.data.mongodb.gridfs.MongoDbFactory ; this . org.springframework.data.mongodb.gridfs.MongoConverter = org.springframework.data.mongodb.gridfs.MongoConverter ; this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.gridfs.QueryMapper = new QueryMapper ( org.springframework.data.mongodb.gridfs.MongoConverter ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.gridfs.ObjectId org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream java.io.InputStream , java.lang.String java.lang.String ) { return org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream , java.lang.String , ( java.lang.Object ) null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.gridfs.ObjectId org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream java.io.InputStream , java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream , null , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.gridfs.ObjectId org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream java.io.InputStream , Document org.springframework.data.mongodb.gridfs.Document ) { return org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream , null , org.springframework.data.mongodb.gridfs.Document ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.gridfs.ObjectId org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream java.io.InputStream , java.lang.String java.lang.String , java.lang.String java.lang.String ) { return org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream , java.lang.String , java.lang.String , ( java.lang.Object ) null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.gridfs.ObjectId org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream java.io.InputStream , java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream , java.lang.String , null , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.gridfs.ObjectId org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream java.io.InputStream , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Document org.springframework.data.mongodb.gridfs.Document = null ; if ( java.lang.Object != null ) { org.springframework.data.mongodb.gridfs.Document = new Document ( ) ; org.springframework.data.mongodb.gridfs.MongoConverter . write ( java.lang.Object , org.springframework.data.mongodb.gridfs.Document ) ; } return org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream , java.lang.String , java.lang.String , org.springframework.data.mongodb.gridfs.Document ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.gridfs.ObjectId org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream java.io.InputStream , java.lang.String java.lang.String , Document org.springframework.data.mongodb.gridfs.Document ) { return this . org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream , java.lang.String , null , org.springframework.data.mongodb.gridfs.Document ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.gridfs.ObjectId org.springframework.data.mongodb.gridfs.ObjectId ( java.io.InputStream java.io.InputStream , java.lang.String java.lang.String , java.lang.String java.lang.String , Document org.springframework.data.mongodb.gridfs.Document ) { Assert . notNull ( java.io.InputStream , STRING ) ; GridFSUploadOptions org.springframework.data.mongodb.gridfs.GridFSUploadOptions = new GridFSUploadOptions ( ) ; Document org.springframework.data.mongodb.gridfs.Document = new Document ( ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.mongodb.gridfs.Document . put ( STRING , java.lang.String ) ; } if ( org.springframework.data.mongodb.gridfs.Document != null ) { org.springframework.data.mongodb.gridfs.Document . putAll ( org.springframework.data.mongodb.gridfs.Document ) ; } org.springframework.data.mongodb.gridfs.GridFSUploadOptions . metadata ( org.springframework.data.mongodb.gridfs.Document ) ; return org.springframework.data.mongodb.gridfs.GridFSBucket ( ) . uploadFromStream ( java.lang.String , java.io.InputStream , org.springframework.data.mongodb.gridfs.GridFSUploadOptions ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.gridfs.GridFSFindIterable org.springframework.data.mongodb.gridfs.GridFSFindIterable ( Query org.springframework.data.mongodb.gridfs.Query ) { if ( org.springframework.data.mongodb.gridfs.Query == null ) { return org.springframework.data.mongodb.gridfs.GridFSBucket ( ) . find ( new Document ( ) ) ; } Document org.springframework.data.mongodb.gridfs.Document = org.springframework.data.mongodb.gridfs.Document ( org.springframework.data.mongodb.gridfs.Query . getQueryObject ( ) ) ; Document org.springframework.data.mongodb.gridfs.Document = org.springframework.data.mongodb.gridfs.Document ( org.springframework.data.mongodb.gridfs.Query . getSortObject ( ) ) ; return org.springframework.data.mongodb.gridfs.GridFSBucket ( ) . find ( org.springframework.data.mongodb.gridfs.Document ) . sort ( org.springframework.data.mongodb.gridfs.Document ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.gridfs.GridFSFile org.springframework.data.mongodb.gridfs.GridFSFile ( Query org.springframework.data.mongodb.gridfs.Query ) { return org.springframework.data.mongodb.gridfs.GridFSFindIterable ( org.springframework.data.mongodb.gridfs.Query ) . first ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( Query org.springframework.data.mongodb.gridfs.Query ) { for ( GridFSFile org.springframework.data.mongodb.gridfs.GridFSFile : org.springframework.data.mongodb.gridfs.GridFSFindIterable ( org.springframework.data.mongodb.gridfs.Query ) ) { org.springframework.data.mongodb.gridfs.GridFSBucket ( ) . delete ( ( ( BsonObjectId ) org.springframework.data.mongodb.gridfs.GridFSFile . getId ( ) ) . getValue ( ) ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.ClassLoader java.lang.ClassLoader ( ) { return org.springframework.data.mongodb.gridfs.MongoDbFactory . getClass ( ) . getClassLoader ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.gridfs.GridFsResource org.springframework.data.mongodb.gridfs.GridFsResource ( java.lang.String java.lang.String ) { GridFSFile org.springframework.data.mongodb.gridfs.GridFSFile = org.springframework.data.mongodb.gridfs.GridFSFile ( query ( whereFilename ( ) . is ( java.lang.String ) ) ) ; return org.springframework.data.mongodb.gridfs.GridFSFile != null ? new GridFsResource ( org.springframework.data.mongodb.gridfs.GridFSFile , org.springframework.data.mongodb.gridfs.GridFSBucket ( ) . openDownloadStreamByName ( java.lang.String ) ) : null ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.gridfs.GridFsResource [] org.springframework.data.mongodb.gridfs.GridFsResource[] ( java.lang.String java.lang.String ) { if ( ! StringUtils . hasText ( java.lang.String ) ) { return new GridFsResource [ NUMBER ] ; } AntPath org.springframework.data.mongodb.gridfs.AntPath = new AntPath ( java.lang.String ) ; if ( org.springframework.data.mongodb.gridfs.AntPath . isPattern ( ) ) { GridFSFindIterable org.springframework.data.mongodb.gridfs.GridFSFindIterable = org.springframework.data.mongodb.gridfs.GridFSFindIterable ( query ( whereFilename ( ) . regex ( org.springframework.data.mongodb.gridfs.AntPath . toRegex ( ) ) ) ) ; java.util.List<org.springframework.data.mongodb.gridfs.GridFsResource> < GridFsResource > java.util.List<org.springframework.data.mongodb.gridfs.GridFsResource> = new java.util.ArrayList<org.springframework.data.mongodb.gridfs.GridFsResource> < GridFsResource > ( ) ; for ( GridFSFile org.springframework.data.mongodb.gridfs.GridFSFile : org.springframework.data.mongodb.gridfs.GridFSFindIterable ) { java.util.List<org.springframework.data.mongodb.gridfs.GridFsResource> . add ( new GridFsResource ( org.springframework.data.mongodb.gridfs.GridFSFile , org.springframework.data.mongodb.gridfs.GridFSBucket ( ) . openDownloadStreamByName ( org.springframework.data.mongodb.gridfs.GridFSFile . getFilename ( ) ) ) ) ; } return java.util.List<org.springframework.data.mongodb.gridfs.GridFsResource> . toArray ( new GridFsResource [ java.util.List<org.springframework.data.mongodb.gridfs.GridFsResource> . size ( ) ] ) ; } return new GridFsResource [] { org.springframework.data.mongodb.gridfs.GridFsResource ( java.lang.String ) } ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.gridfs.Document org.springframework.data.mongodb.gridfs.Document ( Query org.springframework.data.mongodb.gridfs.Query ) { return org.springframework.data.mongodb.gridfs.Query == null ? new Query ( ) . getQueryObject ( ) : org.springframework.data.mongodb.gridfs.Document ( org.springframework.data.mongodb.gridfs.Query . getQueryObject ( ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.gridfs.Document org.springframework.data.mongodb.gridfs.Document ( Document org.springframework.data.mongodb.gridfs.Document ) { return org.springframework.data.mongodb.gridfs.Document == null ? null : org.springframework.data.mongodb.gridfs.QueryMapper . getMappedObject ( org.springframework.data.mongodb.gridfs.Document , java.util.Optional . java.util.Optional<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.gridfs.GridFSBucket org.springframework.data.mongodb.gridfs.GridFSBucket ( ) { MongoDatabase org.springframework.data.mongodb.gridfs.MongoDatabase = org.springframework.data.mongodb.gridfs.MongoDbFactory . getDb ( ) ; return java.lang.String == null ? GridFSBuckets . create ( org.springframework.data.mongodb.gridfs.MongoDatabase ) : GridFSBuckets . create ( org.springframework.data.mongodb.gridfs.MongoDatabase , java.lang.String ) ; }  <METHOD_END>
