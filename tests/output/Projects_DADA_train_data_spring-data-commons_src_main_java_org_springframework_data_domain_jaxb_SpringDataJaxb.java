<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static < T , S > java.util.List<T> < T > java.util.List<T> ( java.util.Collection<S> < S > java.util.Collection<S> , javax.xml.bind.annotation.adapters.XmlAdapter<S,T> < S , T > javax.xml.bind.annotation.adapters.XmlAdapter<S,T> ) { Assert . notNull ( javax.xml.bind.annotation.adapters.XmlAdapter<S,T> , STRING ) ; if ( java.util.Collection<S> == null || java.util.Collection<S> . boolean ( ) ) { return java.util.Collections . java.util.List<T> ( ) ; } java.util.List<T> < T > java.util.List<T> = new java.util.ArrayList<T> <> ( java.util.Collection<S> . int ( ) ) ; for ( S S : java.util.Collection<S> ) { try { java.util.List<T> . boolean ( javax.xml.bind.annotation.adapters.XmlAdapter<S,T> . T ( S ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.RuntimeException ( java.lang.Exception ) ; } } return java.util.List<T> ; }  <METHOD_END>
<METHOD_START> public static < T , S > java.util.List<S> < S > java.util.List<S> ( java.lang.Iterable<T> < T > java.lang.Iterable<T> , javax.xml.bind.annotation.adapters.XmlAdapter<S,T> < S , T > javax.xml.bind.annotation.adapters.XmlAdapter<S,T> ) { Assert . notNull ( javax.xml.bind.annotation.adapters.XmlAdapter<S,T> , STRING ) ; if ( java.lang.Iterable<T> == null ) { return java.util.Collections . java.util.List<S> ( ) ; } java.util.List<S> < S > java.util.List<S> = new java.util.ArrayList<S> <> ( ) ; for ( T T : java.lang.Iterable<T> ) { try { java.util.List<S> . boolean ( javax.xml.bind.annotation.adapters.XmlAdapter<S,T> . S ( T ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.RuntimeException ( java.lang.Exception ) ; } } return java.util.List<S> ; }  <METHOD_END>
