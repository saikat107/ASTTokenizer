<METHOD_START> void ( ) { super( WebServlet .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , ScannedGenericBeanDefinition org.springframework.boot.web.servlet.ScannedGenericBeanDefinition , BeanDefinitionRegistry org.springframework.boot.web.servlet.BeanDefinitionRegistry ) { BeanDefinitionBuilder org.springframework.boot.web.servlet.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( ServletRegistrationBean .class ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , extractInitParameters ( java.util.Map<java.lang.String,java.lang.Object> ) ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; java.lang.String java.lang.String = java.lang.String ( java.util.Map<java.lang.String,java.lang.Object> , org.springframework.boot.web.servlet.ScannedGenericBeanDefinition ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.boot.web.servlet.ScannedGenericBeanDefinition ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , extractUrlPatterns ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ) ; org.springframework.boot.web.servlet.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.boot.web.servlet.MultipartConfigElement ( org.springframework.boot.web.servlet.ScannedGenericBeanDefinition ) ) ; org.springframework.boot.web.servlet.BeanDefinitionRegistry . registerBeanDefinition ( java.lang.String , org.springframework.boot.web.servlet.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , BeanDefinition org.springframework.boot.web.servlet.BeanDefinition ) { return ( java.lang.String ) ( StringUtils . hasText ( ( java.lang.String ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ? java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) : org.springframework.boot.web.servlet.BeanDefinition . getBeanClassName ( ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.web.servlet.MultipartConfigElement org.springframework.boot.web.servlet.MultipartConfigElement ( ScannedGenericBeanDefinition org.springframework.boot.web.servlet.ScannedGenericBeanDefinition ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.boot.web.servlet.ScannedGenericBeanDefinition . getMetadata ( ) . getAnnotationAttributes ( MultipartConfig .class . java.lang.String ( ) ) ; if ( java.util.Map<java.lang.String,java.lang.Object> == null ) { return null ; } return new MultipartConfigElement ( ( java.lang.String ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) , ( java.lang.Long ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) , ( java.lang.Long ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) , ( java.lang.Integer ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
