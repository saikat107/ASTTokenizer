<METHOD_START> public void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { Assert . notEmpty ( java.util.Map<java.lang.String,java.lang.String> , STRING ) ; for ( java.lang.String java.lang.String : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.lang.String> ( ) ) { this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) ) ; } }  <METHOD_END>
<METHOD_START> @ ManagedOperation public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( ) { return java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.Object java.lang.Object ) { java.lang.String java.lang.String = java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) ; return this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) ; }  <METHOD_END>
