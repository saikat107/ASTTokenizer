<METHOD_START> public void ( PagedResourcesAssembler < java.lang.Object > org.springframework.data.rest.webmvc.PagedResourcesAssembler<java.lang.Object> ) { Assert . notNull ( org.springframework.data.rest.webmvc.PagedResourcesAssembler<java.lang.Object> , STRING ) ; this . org.springframework.data.rest.webmvc.PagedResourcesAssembler<java.lang.Object> = org.springframework.data.rest.webmvc.PagedResourcesAssembler<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.rest.webmvc.Link org.springframework.data.rest.webmvc.Link ( RootResourceInformation org.springframework.data.rest.webmvc.RootResourceInformation , Resource org.springframework.data.rest.webmvc.Resource ) { ResourceMetadata org.springframework.data.rest.webmvc.ResourceMetadata = org.springframework.data.rest.webmvc.RootResourceInformation . getResourceMetadata ( ) ; Link org.springframework.data.rest.webmvc.Link = org.springframework.data.rest.webmvc.Resource . getLink ( STRING ) ; java.lang.String java.lang.String = org.springframework.data.rest.webmvc.ResourceMetadata . getItemResourceRel ( ) ; return new Link ( org.springframework.data.rest.webmvc.Link . getHref ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING } ) protected org.springframework.data.rest.webmvc.Resources<?> < ? > org.springframework.data.rest.webmvc.Resources<?> ( java.lang.Iterable<?> < ? > java.lang.Iterable<?> , PersistentEntityResourceAssembler org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler , java.lang.Class<?> < ? > java.lang.Class<?> , Link org.springframework.data.rest.webmvc.Link ) { if ( java.lang.Iterable<> instanceof Page ) { Page < java.lang.Object > org.springframework.data.rest.webmvc.Page<java.lang.Object> = ( Page < java.lang.Object > ) java.lang.Iterable<> ; return org.springframework.data.rest.webmvc.Resources<?> ( org.springframework.data.rest.webmvc.Page<java.lang.Object> , org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler , java.lang.Class<> , org.springframework.data.rest.webmvc.Link ) ; } else if ( java.lang.Iterable<> instanceof java.lang.Iterable ) { return org.springframework.data.rest.webmvc.Resources<?> ( ( java.lang.Iterable<java.lang.Object> < java.lang.Object > ) java.lang.Iterable<> , org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler , java.lang.Class<> ) ; } else { return new Resources ( EMPTY_RESOURCE_LIST ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.data.rest.webmvc.Resources<?> < ? > org.springframework.data.rest.webmvc.Resources<?> ( Page < java.lang.Object > org.springframework.data.rest.webmvc.Page<java.lang.Object> , PersistentEntityResourceAssembler org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler , java.lang.Class<?> < ? > java.lang.Class<?> , Link org.springframework.data.rest.webmvc.Link ) { if ( org.springframework.data.rest.webmvc.Page<java.lang.Object> . getContent ( ) . isEmpty ( ) ) { return org.springframework.data.rest.webmvc.PagedResourcesAssembler<java.lang.Object> . toEmptyResource ( org.springframework.data.rest.webmvc.Page<java.lang.Object> , java.lang.Class<> , org.springframework.data.rest.webmvc.Link ) ; } return org.springframework.data.rest.webmvc.Link == null ? org.springframework.data.rest.webmvc.PagedResourcesAssembler<java.lang.Object> . toResource ( org.springframework.data.rest.webmvc.Page<java.lang.Object> , org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler ) : org.springframework.data.rest.webmvc.PagedResourcesAssembler<java.lang.Object> . toResource ( org.springframework.data.rest.webmvc.Page<java.lang.Object> , org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler , org.springframework.data.rest.webmvc.Link ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.rest.webmvc.Resources<?> < ? > org.springframework.data.rest.webmvc.Resources<?> ( java.lang.Iterable<java.lang.Object> < java.lang.Object > java.lang.Iterable<java.lang.Object> , PersistentEntityResourceAssembler org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler , java.lang.Class<?> < ? > java.lang.Class<?> ) { if ( ! java.lang.Iterable<java.lang.Object> . java.util.Iterator<java.lang.Object> ( ) . boolean ( ) ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = java.util.Arrays .< java.lang.Object > java.util.List<java.lang.Object> ( org.springframework.data.rest.webmvc.EmbeddedWrappers . emptyCollectionOf ( java.lang.Class<> ) ) ; return new Resources < java.lang.Object > ( java.util.List<java.lang.Object> , org.springframework.data.rest.webmvc.Link ( ) ) ; } java.util.List<org.springframework.data.rest.webmvc.Resource<java.lang.Object>> < Resource < java.lang.Object > > java.util.List<org.springframework.data.rest.webmvc.Resource<java.lang.Object>> = new java.util.ArrayList<org.springframework.data.rest.webmvc.Resource<java.lang.Object>> < Resource < java.lang.Object > > ( ) ; for ( java.lang.Object java.lang.Object : java.lang.Iterable<java.lang.Object> ) { java.util.List<org.springframework.data.rest.webmvc.Resource<java.lang.Object>> . add ( java.lang.Object == null ? null : org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler . toResource ( java.lang.Object ) ) ; } return new Resources < Resource < java.lang.Object > > ( java.util.List<org.springframework.data.rest.webmvc.Resource<java.lang.Object>> , org.springframework.data.rest.webmvc.Link ( ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.rest.webmvc.Link org.springframework.data.rest.webmvc.Link ( ) { return new Link ( ServletUriComponentsBuilder . fromCurrentRequest ( ) . build ( ) . toUriString ( ) ) ; }  <METHOD_END>
