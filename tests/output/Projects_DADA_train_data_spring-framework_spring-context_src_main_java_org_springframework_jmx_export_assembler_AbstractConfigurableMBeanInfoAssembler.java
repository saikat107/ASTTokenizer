<METHOD_START> public void void ( ManagedNotification [] org.springframework.jmx.export.assembler.ManagedNotification[] ) { javax.management.modelmbean.ModelMBeanNotificationInfo [] javax.management.modelmbean.ModelMBeanNotificationInfo[] = new javax.management.modelmbean.ModelMBeanNotificationInfo [ notificationInfos . length ] ; for ( int int = NUMBER ; int < notificationInfos . length ; int ++ ) { ManagedNotification org.springframework.jmx.export.assembler.ManagedNotification = org.springframework.jmx.export.assembler.ManagedNotification[] [ int ] ; javax.management.modelmbean.ModelMBeanNotificationInfo[] [ int ] = JmxMetadataUtils . convertToModelMBeanNotificationInfo ( org.springframework.jmx.export.assembler.ManagedNotification ) ; } this . javax.management.modelmbean.ModelMBeanNotificationInfo[] = javax.management.modelmbean.ModelMBeanNotificationInfo[] ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { this . java.util.Map<java.lang.String,javax.management.modelmbean.ModelMBeanNotificationInfo[]> . javax.management.modelmbean.ModelMBeanNotificationInfo[] ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) , javax.management.modelmbean.ModelMBeanNotificationInfo[] ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected javax.management.modelmbean.ModelMBeanNotificationInfo [] javax.management.modelmbean.ModelMBeanNotificationInfo[] ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { javax.management.modelmbean.ModelMBeanNotificationInfo [] javax.management.modelmbean.ModelMBeanNotificationInfo[] = null ; if ( StringUtils . hasText ( java.lang.String ) ) { javax.management.modelmbean.ModelMBeanNotificationInfo[] = this . java.util.Map<java.lang.String,javax.management.modelmbean.ModelMBeanNotificationInfo[]> . javax.management.modelmbean.ModelMBeanNotificationInfo[] ( java.lang.String ) ; } if ( javax.management.modelmbean.ModelMBeanNotificationInfo[] == null ) { javax.management.modelmbean.ModelMBeanNotificationInfo[] = this . javax.management.modelmbean.ModelMBeanNotificationInfo[] ; } return ( javax.management.modelmbean.ModelMBeanNotificationInfo[] != null ? javax.management.modelmbean.ModelMBeanNotificationInfo[] : new javax.management.modelmbean.ModelMBeanNotificationInfo [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> private javax.management.modelmbean.ModelMBeanNotificationInfo [] javax.management.modelmbean.ModelMBeanNotificationInfo[] ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof ManagedNotification ) { ManagedNotification org.springframework.jmx.export.assembler.ManagedNotification = ( ManagedNotification ) java.lang.Object ; return new javax.management.modelmbean.ModelMBeanNotificationInfo [] { JmxMetadataUtils . convertToModelMBeanNotificationInfo ( org.springframework.jmx.export.assembler.ManagedNotification ) } ; } else if ( java.lang.Object instanceof java.util.Collection ) { java.util.Collection<?> < ? > java.util.Collection<?> = ( java.util.Collection<?> < ? > ) java.lang.Object ; java.util.List<javax.management.modelmbean.ModelMBeanNotificationInfo> < javax.management.modelmbean.ModelMBeanNotificationInfo > java.util.List<javax.management.modelmbean.ModelMBeanNotificationInfo> = new java.util.ArrayList<javax.management.modelmbean.ModelMBeanNotificationInfo> <> ( ) ; for ( java.lang.Object java.lang.Object : java.util.Collection<> ) { if ( ! ( java.lang.Object instanceof ManagedNotification ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } ManagedNotification org.springframework.jmx.export.assembler.ManagedNotification = ( ManagedNotification ) java.lang.Object ; java.util.List<javax.management.modelmbean.ModelMBeanNotificationInfo> . boolean ( JmxMetadataUtils . convertToModelMBeanNotificationInfo ( org.springframework.jmx.export.assembler.ManagedNotification ) ) ; } return java.util.List<javax.management.modelmbean.ModelMBeanNotificationInfo> . javax.management.modelmbean.ModelMBeanNotificationInfo[] ( new javax.management.modelmbean.ModelMBeanNotificationInfo [ java.util.List<javax.management.modelmbean.ModelMBeanNotificationInfo> . int ( ) ] ) ; } else { throw new java.lang.IllegalArgumentException ( STRING ) ; } }  <METHOD_END>
