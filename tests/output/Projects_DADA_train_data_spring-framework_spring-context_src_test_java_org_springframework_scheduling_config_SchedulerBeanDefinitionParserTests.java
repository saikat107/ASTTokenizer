<METHOD_START> @ Before public void void ( ) { this . org.springframework.scheduling.config.ApplicationContext = new ClassPathXmlApplicationContext ( STRING , org.springframework.scheduling.config.SchedulerBeanDefinitionParserTests .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ThreadPoolTaskScheduler org.springframework.scheduling.config.ThreadPoolTaskScheduler = ( ThreadPoolTaskScheduler ) this . org.springframework.scheduling.config.ApplicationContext . getBean ( STRING ) ; java.lang.Integer java.lang.Integer = ( java.lang.Integer ) new DirectFieldAccessor ( org.springframework.scheduling.config.ThreadPoolTaskScheduler ) . getPropertyValue ( STRING ) ; assertEquals ( new java.lang.Integer ( NUMBER ) , java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ThreadPoolTaskScheduler org.springframework.scheduling.config.ThreadPoolTaskScheduler = ( ThreadPoolTaskScheduler ) this . org.springframework.scheduling.config.ApplicationContext . getBean ( STRING ) ; java.lang.Integer java.lang.Integer = ( java.lang.Integer ) new DirectFieldAccessor ( org.springframework.scheduling.config.ThreadPoolTaskScheduler ) . getPropertyValue ( STRING ) ; assertEquals ( new java.lang.Integer ( NUMBER ) , java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ThreadPoolTaskScheduler org.springframework.scheduling.config.ThreadPoolTaskScheduler = ( ThreadPoolTaskScheduler ) this . org.springframework.scheduling.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( STRING , org.springframework.scheduling.config.ThreadPoolTaskScheduler . getThreadNamePrefix ( ) ) ; }  <METHOD_END>
