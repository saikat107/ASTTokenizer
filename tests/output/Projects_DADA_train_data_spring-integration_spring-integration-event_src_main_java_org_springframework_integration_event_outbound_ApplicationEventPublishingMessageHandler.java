<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( ApplicationEventPublisher org.springframework.integration.event.outbound.ApplicationEventPublisher ) { this . org.springframework.integration.event.outbound.ApplicationEventPublisher = org.springframework.integration.event.outbound.ApplicationEventPublisher ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Message < ? > org.springframework.integration.event.outbound.Message<?> ) { Assert . notNull ( this . org.springframework.integration.event.outbound.ApplicationEventPublisher , STRING ) ; if ( org.springframework.integration.event.outbound.Message<> . getPayload ( ) instanceof ApplicationEvent ) { this . org.springframework.integration.event.outbound.ApplicationEventPublisher . publishEvent ( ( ApplicationEvent ) org.springframework.integration.event.outbound.Message<> . getPayload ( ) ) ; } else if ( this . boolean ) { this . org.springframework.integration.event.outbound.ApplicationEventPublisher . publishEvent ( org.springframework.integration.event.outbound.Message<> . getPayload ( ) ) ; } else { this . org.springframework.integration.event.outbound.ApplicationEventPublisher . publishEvent ( new MessagingEvent ( org.springframework.integration.event.outbound.Message<> ) ) ; } }  <METHOD_END>
