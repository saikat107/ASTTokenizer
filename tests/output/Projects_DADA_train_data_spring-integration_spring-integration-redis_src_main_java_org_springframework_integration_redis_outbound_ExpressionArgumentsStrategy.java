<METHOD_START> public void ( java.lang.String [] java.lang.String[] ) { this( java.lang.String[] , false ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String [] java.lang.String[] , boolean boolean ) { Assert . notNull ( java.lang.String[] , STRING ) ; Assert . noNullElements ( java.lang.String[] , STRING ) ; java.util.List<org.springframework.integration.redis.outbound.Expression> < Expression > java.util.List<org.springframework.integration.redis.outbound.Expression> = new java.util.LinkedList<org.springframework.integration.redis.outbound.Expression> < Expression > ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { java.util.List<org.springframework.integration.redis.outbound.Expression> . add ( org.springframework.integration.redis.outbound.SpelExpressionParser . parseExpression ( java.lang.String ) ) ; } this . org.springframework.integration.redis.outbound.Expression[] = java.util.List<org.springframework.integration.redis.outbound.Expression> . toArray ( new Expression [ java.util.List<org.springframework.integration.redis.outbound.Expression> . size ( ) ] ) ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( EvaluationContext org.springframework.integration.redis.outbound.EvaluationContext ) { this . org.springframework.integration.redis.outbound.EvaluationContext = org.springframework.integration.redis.outbound.EvaluationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.redis.outbound.BeanFactory ) throws org.springframework.integration.redis.outbound.BeansException { this . org.springframework.integration.redis.outbound.BeanFactory = org.springframework.integration.redis.outbound.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( this . org.springframework.integration.redis.outbound.EvaluationContext == null ) { this . org.springframework.integration.redis.outbound.EvaluationContext = ExpressionUtils . createStandardEvaluationContext ( this . org.springframework.integration.redis.outbound.BeanFactory ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object [] java.lang.Object[] ( java.lang.String java.lang.String , Message < ? > org.springframework.integration.redis.outbound.Message<?> ) { EvaluationContext org.springframework.integration.redis.outbound.EvaluationContext = this . org.springframework.integration.redis.outbound.EvaluationContext ; if ( this . boolean ) { org.springframework.integration.redis.outbound.EvaluationContext = IntegrationContextUtils . getEvaluationContext ( this . org.springframework.integration.redis.outbound.BeanFactory ) ; org.springframework.integration.redis.outbound.EvaluationContext . setVariable ( STRING , java.lang.String ) ; } java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( ) ; for ( Expression org.springframework.integration.redis.outbound.Expression : this . org.springframework.integration.redis.outbound.Expression[] ) { java.lang.Object java.lang.Object = org.springframework.integration.redis.outbound.Expression . getValue ( org.springframework.integration.redis.outbound.EvaluationContext , org.springframework.integration.redis.outbound.Message<> ) ; if ( java.lang.Object != null ) { java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; } } return java.util.List<java.lang.Object> . java.lang.Object[] ( ) ; }  <METHOD_END>
