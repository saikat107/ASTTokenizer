<METHOD_START> public void ( ConsistencyLevel org.springframework.cassandra.core.ConsistencyLevel , com . com.datastax . com.datastax . com.datastax . com.datastax com.datastax.driver.core.ConsistencyLevel ) { this . org.springframework.cassandra.core.ConsistencyLevel = org.springframework.cassandra.core.ConsistencyLevel ; this . com.datastax.driver.core.ConsistencyLevel = com.datastax.driver.core.ConsistencyLevel ; }  <METHOD_END>
<METHOD_START> @ Parameters ( name = STRING ) public static java.util.List<java.lang.Object[]> < java.lang.Object [] > java.util.List<java.lang.Object[]> ( ) { java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> < ConsistencyLevel , com . com.datastax . com.datastax . com.datastax . com.datastax > java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> = new java.util.LinkedHashMap<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> <> ( ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . ALL , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . ALL ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . ANY , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . ANY ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . QUOROM , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . QUORUM ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . QUORUM , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . QUORUM ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . LOCAL_QUOROM , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . LOCAL_QUORUM ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . LOCAL_QUORUM , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . LOCAL_QUORUM ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . EACH_QUOROM , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . EACH_QUORUM ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . EACH_QUORUM , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . EACH_QUORUM ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . LOCAL_ONE , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . LOCAL_ONE ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . LOCAL_SERIAL , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . LOCAL_SERIAL ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . SERIAL , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . SERIAL ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . ONE , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . ONE ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . TWO , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . TWO ) ; java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . put ( ConsistencyLevel . THREE , com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . THREE ) ; java.util.List<java.lang.Object[]> < java.lang.Object [] > java.util.List<java.lang.Object[]> = new java.util.ArrayList<java.lang.Object[]> <> ( ) ; for ( java.util.Map.Entry<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> < ConsistencyLevel , com . com.datastax . com.datastax . com.datastax . com.datastax > java.util.Map.Entry<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> : java.util.Map<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . entrySet ( ) ) { java.util.List<java.lang.Object[]> . boolean ( new java.lang.Object [] { java.util.Map.Entry<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . getKey ( ) , java.util.Map.Entry<org.springframework.cassandra.core.ConsistencyLevel,com.datastax.driver.core.ConsistencyLevel> . getValue ( ) } ) ; } return java.util.List<java.lang.Object[]> ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( ConsistencyLevelResolver . resolve ( org.springframework.cassandra.core.ConsistencyLevel ) ) . isEqualTo ( com.datastax.driver.core.ConsistencyLevel ) ; }  <METHOD_END>
