<METHOD_START> public void ( java.lang.String java.lang.String , AbstractMessageListenerContainer org.springframework.integration.amqp.channel.AbstractMessageListenerContainer , AmqpTemplate org.springframework.integration.amqp.channel.AmqpTemplate ) { super( java.lang.String , org.springframework.integration.amqp.channel.AbstractMessageListenerContainer , org.springframework.integration.amqp.channel.AmqpTemplate ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , AbstractMessageListenerContainer org.springframework.integration.amqp.channel.AbstractMessageListenerContainer , AmqpTemplate org.springframework.integration.amqp.channel.AmqpTemplate , AmqpHeaderMapper org.springframework.integration.amqp.channel.AmqpHeaderMapper , AmqpHeaderMapper org.springframework.integration.amqp.channel.AmqpHeaderMapper ) { super( java.lang.String , org.springframework.integration.amqp.channel.AbstractMessageListenerContainer , org.springframework.integration.amqp.channel.AmqpTemplate , org.springframework.integration.amqp.channel.AmqpHeaderMapper , org.springframework.integration.amqp.channel.AmqpHeaderMapper ); }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( AmqpAdmin org.springframework.integration.amqp.channel.AmqpAdmin , java.lang.String java.lang.String ) { if ( this . java.lang.String == null ) { this . java.lang.String = java.lang.String ; } if ( org.springframework.integration.amqp.channel.AmqpAdmin . getQueueProperties ( this . java.lang.String ) == null ) { org.springframework.integration.amqp.channel.AmqpAdmin . declareQueue ( new Queue ( this . java.lang.String ) ) ; } return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.amqp.channel.AbstractDispatcher org.springframework.integration.amqp.channel.AbstractDispatcher ( ) { UnicastingDispatcher org.springframework.integration.amqp.channel.UnicastingDispatcher = new UnicastingDispatcher ( ) ; org.springframework.integration.amqp.channel.UnicastingDispatcher . setLoadBalancingStrategy ( new RoundRobinLoadBalancingStrategy ( ) ) ; return org.springframework.integration.amqp.channel.UnicastingDispatcher ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
