<METHOD_START> private void ( ) { }  <METHOD_END>
<METHOD_START> public static < S , E > org.springframework.statemachine.action.Action<S,E> < S , E > org.springframework.statemachine.action.Action<S,E> ( ) { return new Action < S , E > ( ) { @ java.lang.Override public void void ( final StateContext < S , E > org.springframework.statemachine.action.StateContext<S,E> ) { } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final StateContext < S , E > org.springframework.statemachine.action.StateContext<S,E> ) { }  <METHOD_END>
<METHOD_START> public static < S , E > org.springframework.statemachine.action.Action<S,E> < S , E > org.springframework.statemachine.action.Action<S,E> ( final Action < S , E > org.springframework.statemachine.action.Action<S,E> , final Action < S , E > org.springframework.statemachine.action.Action<S,E> ) { return new Action < S , E > ( ) { @ java.lang.Override public void void ( final StateContext < S , E > org.springframework.statemachine.action.StateContext<S,E> ) { try { org.springframework.statemachine.action.Action<S,E> . execute ( org.springframework.statemachine.action.StateContext<S,E> ) ; } catch ( java.lang.Exception java.lang.Exception ) { try { org.springframework.statemachine.action.Action<S,E> . execute ( new DefaultStateContext <> ( org.springframework.statemachine.action.StateContext<S,E> . getStage ( ) , org.springframework.statemachine.action.StateContext<S,E> . getMessage ( ) , org.springframework.statemachine.action.StateContext<S,E> . getMessageHeaders ( ) , org.springframework.statemachine.action.StateContext<S,E> . getExtendedState ( ) , org.springframework.statemachine.action.StateContext<S,E> . getTransition ( ) , org.springframework.statemachine.action.StateContext<S,E> . getStateMachine ( ) , org.springframework.statemachine.action.StateContext<S,E> . getSource ( ) , org.springframework.statemachine.action.StateContext<S,E> . getTarget ( ) , org.springframework.statemachine.action.StateContext<S,E> . getSources ( ) , org.springframework.statemachine.action.StateContext<S,E> . getTargets ( ) , java.lang.Exception ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { } throw java.lang.Exception ; } } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final StateContext < S , E > org.springframework.statemachine.action.StateContext<S,E> ) { try { org.springframework.statemachine.action.Action<S,E> . execute ( org.springframework.statemachine.action.StateContext<S,E> ) ; } catch ( java.lang.Exception java.lang.Exception ) { try { org.springframework.statemachine.action.Action<S,E> . execute ( new DefaultStateContext <> ( org.springframework.statemachine.action.StateContext<S,E> . getStage ( ) , org.springframework.statemachine.action.StateContext<S,E> . getMessage ( ) , org.springframework.statemachine.action.StateContext<S,E> . getMessageHeaders ( ) , org.springframework.statemachine.action.StateContext<S,E> . getExtendedState ( ) , org.springframework.statemachine.action.StateContext<S,E> . getTransition ( ) , org.springframework.statemachine.action.StateContext<S,E> . getStateMachine ( ) , org.springframework.statemachine.action.StateContext<S,E> . getSource ( ) , org.springframework.statemachine.action.StateContext<S,E> . getTarget ( ) , org.springframework.statemachine.action.StateContext<S,E> . getSources ( ) , org.springframework.statemachine.action.StateContext<S,E> . getTargets ( ) , java.lang.Exception ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { } throw java.lang.Exception ; } }  <METHOD_END>
