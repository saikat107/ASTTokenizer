<METHOD_START> public void ( java.net.URL java.net.URL , java.lang.String java.lang.String ) { Assert . notNull ( java.net.URL , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; this . java.net.URL = java.net.URL ; this . java.lang.String = java.lang.String + STRING + java.net.URL ; this . org.springframework.integration.feed.inbound.Resource = null ; }  <METHOD_END>
<METHOD_START> public void ( Resource org.springframework.integration.feed.inbound.Resource , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.integration.feed.inbound.Resource , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; this . org.springframework.integration.feed.inbound.Resource = org.springframework.integration.feed.inbound.Resource ; this . java.lang.String = java.lang.String ; this . java.net.URL = null ; }  <METHOD_END>
<METHOD_START> public void void ( MetadataStore org.springframework.integration.feed.inbound.MetadataStore ) { Assert . notNull ( org.springframework.integration.feed.inbound.MetadataStore , STRING ) ; this . org.springframework.integration.feed.inbound.MetadataStore = org.springframework.integration.feed.inbound.MetadataStore ; }  <METHOD_END>
<METHOD_START> public void void ( SyndFeedInput org.springframework.integration.feed.inbound.SyndFeedInput ) { Assert . notNull ( org.springframework.integration.feed.inbound.SyndFeedInput , STRING ) ; this . org.springframework.integration.feed.inbound.SyndFeedInput = org.springframework.integration.feed.inbound.SyndFeedInput ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { Assert . isTrue ( ! this . boolean , STRING + this . org.springframework.integration.feed.inbound.SyndFeedInput + STRING ) ; this . org.springframework.integration.feed.inbound.SyndFeedInput . setPreserveWireFeed ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.feed.inbound.Message<org.springframework.integration.feed.inbound.SyndEntry> < SyndEntry > org.springframework.integration.feed.inbound.Message<org.springframework.integration.feed.inbound.SyndEntry> ( ) { Assert . isTrue ( this . boolean , STRING ) ; SyndEntry org.springframework.integration.feed.inbound.SyndEntry = org.springframework.integration.feed.inbound.SyndEntry ( ) ; if ( org.springframework.integration.feed.inbound.SyndEntry == null ) { return null ; } return this . getMessageBuilderFactory ( ) . withPayload ( org.springframework.integration.feed.inbound.SyndEntry ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { if ( this . org.springframework.integration.feed.inbound.MetadataStore == null ) { BeanFactory org.springframework.integration.feed.inbound.BeanFactory = this . getBeanFactory ( ) ; if ( org.springframework.integration.feed.inbound.BeanFactory != null ) { this . org.springframework.integration.feed.inbound.MetadataStore = IntegrationContextUtils . getMetadataStore ( org.springframework.integration.feed.inbound.BeanFactory ) ; } if ( this . org.springframework.integration.feed.inbound.MetadataStore == null ) { this . org.springframework.integration.feed.inbound.MetadataStore = new SimpleMetadataStore ( ) ; } } java.lang.String java.lang.String = this . org.springframework.integration.feed.inbound.MetadataStore . get ( this . java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { this . long = java.lang.Long . long ( java.lang.String ) ; } this . boolean = true ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.feed.inbound.SyndEntry org.springframework.integration.feed.inbound.SyndEntry ( ) { SyndEntry org.springframework.integration.feed.inbound.SyndEntry = null ; synchronized ( this . java.lang.Object ) { org.springframework.integration.feed.inbound.SyndEntry = org.springframework.integration.feed.inbound.SyndEntry ( ) ; if ( org.springframework.integration.feed.inbound.SyndEntry == null ) { this . void ( ) ; org.springframework.integration.feed.inbound.SyndEntry = org.springframework.integration.feed.inbound.SyndEntry ( ) ; } } return org.springframework.integration.feed.inbound.SyndEntry ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.feed.inbound.SyndEntry org.springframework.integration.feed.inbound.SyndEntry ( ) { SyndEntry org.springframework.integration.feed.inbound.SyndEntry = this . java.util.Queue<org.springframework.integration.feed.inbound.SyndEntry> . poll ( ) ; if ( org.springframework.integration.feed.inbound.SyndEntry == null ) { return null ; } java.util.Date java.util.Date = org.springframework.integration.feed.inbound.FeedEntryMessageSource . java.util.Date ( org.springframework.integration.feed.inbound.SyndEntry ) ; if ( java.util.Date != null ) { this . long = java.util.Date . long ( ) ; } else { this . long += NUMBER ; } this . org.springframework.integration.feed.inbound.MetadataStore . put ( this . java.lang.String , this . long + STRING ) ; return org.springframework.integration.feed.inbound.SyndEntry ; }  <METHOD_END>
<METHOD_START> private void void ( ) { SyndFeed org.springframework.integration.feed.inbound.SyndFeed = this . org.springframework.integration.feed.inbound.SyndFeed ( ) ; if ( org.springframework.integration.feed.inbound.SyndFeed != null ) { java.util.List<org.springframework.integration.feed.inbound.SyndEntry> < SyndEntry > java.util.List<org.springframework.integration.feed.inbound.SyndEntry> = org.springframework.integration.feed.inbound.SyndFeed . getEntries ( ) ; if ( ! CollectionUtils . isEmpty ( java.util.List<org.springframework.integration.feed.inbound.SyndEntry> ) ) { boolean boolean = false ; java.util.Collections . void ( java.util.List<org.springframework.integration.feed.inbound.SyndEntry> , this . java.util.Comparator<org.springframework.integration.feed.inbound.SyndEntry> ) ; for ( SyndEntry org.springframework.integration.feed.inbound.SyndEntry : java.util.List<org.springframework.integration.feed.inbound.SyndEntry> ) { java.util.Date java.util.Date = java.util.Date ( org.springframework.integration.feed.inbound.SyndEntry ) ; if ( ( java.util.Date != null && java.util.Date . long ( ) > this . long ) || ( java.util.Date == null && boolean ) ) { this . java.util.Queue<org.springframework.integration.feed.inbound.SyndEntry> . add ( org.springframework.integration.feed.inbound.SyndEntry ) ; boolean = true ; } } } } }  <METHOD_END>
<METHOD_START> private org.springframework.integration.feed.inbound.SyndFeed org.springframework.integration.feed.inbound.SyndFeed ( ) { try { synchronized ( this . java.lang.Object ) { java.io.Reader java.io.Reader = this . java.net.URL != null ? new XmlReader ( this . java.net.URL ) : new XmlReader ( this . org.springframework.integration.feed.inbound.Resource . getInputStream ( ) ) ; SyndFeed org.springframework.integration.feed.inbound.SyndFeed = this . org.springframework.integration.feed.inbound.SyndFeedInput . build ( java.io.Reader ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + this + STRING ) ; } if ( org.springframework.integration.feed.inbound.SyndFeed == null ) { if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + this + STRING ) ; } } return org.springframework.integration.feed.inbound.SyndFeed ; } } catch ( java.lang.Exception java.lang.Exception ) { throw new MessagingException ( STRING + this + STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + this . java.net.URL + STRING + this . org.springframework.integration.feed.inbound.Resource + STRING + this . java.lang.String + '\'' + STRING + this . long + '}' ; }  <METHOD_END>
<METHOD_START> private static java.util.Date java.util.Date ( SyndEntry org.springframework.integration.feed.inbound.SyndEntry ) { return ( org.springframework.integration.feed.inbound.SyndEntry . getUpdatedDate ( ) != null ) ? org.springframework.integration.feed.inbound.SyndEntry . getUpdatedDate ( ) : org.springframework.integration.feed.inbound.SyndEntry . getPublishedDate ( ) ; }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( SyndEntry org.springframework.integration.feed.inbound.SyndEntry , SyndEntry org.springframework.integration.feed.inbound.SyndEntry ) { java.util.Date java.util.Date = java.util.Date ( org.springframework.integration.feed.inbound.SyndEntry ) ; java.util.Date java.util.Date = java.util.Date ( org.springframework.integration.feed.inbound.SyndEntry ) ; if ( java.util.Date != null && java.util.Date != null ) { return java.util.Date . int ( java.util.Date ) ; } if ( java.util.Date == null && java.util.Date == null ) { return NUMBER ; } return ( java.util.Date == null ) ? NUMBER : NUMBER ; }  <METHOD_END>
