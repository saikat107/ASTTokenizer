<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; return java.util.regex.Matcher . boolean ( ) ? java.util.regex.Matcher . java.lang.String ( NUMBER ) : null ; }  <METHOD_END>
<METHOD_START> public static < T > org.springframework.integration.jpa.support.Query org.springframework.integration.jpa.support.Query ( java.lang.String java.lang.String , java.lang.Iterable<T> < T > java.lang.Iterable<T> , EntityManager org.springframework.integration.jpa.support.EntityManager ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.Iterable<T> , STRING ) ; Assert . notNull ( org.springframework.integration.jpa.support.EntityManager , STRING ) ; java.util.Iterator<T> < T > java.util.Iterator<T> = java.lang.Iterable<T> . java.util.Iterator<T> ( ) ; if ( ! java.util.Iterator<T> . boolean ( ) ) { return org.springframework.integration.jpa.support.EntityManager . createQuery ( java.lang.String ) ; } java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; int int = NUMBER ; while ( java.util.Iterator<T> . boolean ( ) ) { java.util.Iterator<T> . T ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String . java.lang.String ( STRING , java.lang.String , ++ int ) ) ; if ( java.util.Iterator<T> . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } } Query org.springframework.integration.jpa.support.Query = org.springframework.integration.jpa.support.EntityManager . createQuery ( java.lang.StringBuilder . java.lang.String ( ) ) ; java.util.Iterator<T> = java.lang.Iterable<T> . java.util.Iterator<T> ( ) ; int = NUMBER ; while ( java.util.Iterator<T> . boolean ( ) ) { org.springframework.integration.jpa.support.Query . setParameter ( ++ int , java.util.Iterator<T> . T ( ) ) ; } return org.springframework.integration.jpa.support.Query ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return java.lang.String . java.lang.String ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( EntityManager org.springframework.integration.jpa.support.EntityManager , java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.integration.jpa.support.EntityManager . getMetamodel ( ) . entity ( java.lang.Class<> ) . getName ( ) ; }  <METHOD_END>
