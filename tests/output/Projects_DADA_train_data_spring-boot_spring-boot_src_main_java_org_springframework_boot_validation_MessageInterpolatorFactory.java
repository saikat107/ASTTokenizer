<METHOD_START> @ java.lang.Override public org.springframework.boot.validation.MessageInterpolator org.springframework.boot.validation.MessageInterpolator ( ) org.springframework.boot.validation.BeansException { try { return Validation . byDefaultProvider ( ) . configure ( ) . getDefaultMessageInterpolator ( ) ; } catch ( ValidationException org.springframework.boot.validation.ValidationException ) { MessageInterpolator org.springframework.boot.validation.MessageInterpolator = org.springframework.boot.validation.MessageInterpolator ( ) ; if ( org.springframework.boot.validation.MessageInterpolator != null ) { return org.springframework.boot.validation.MessageInterpolator ; } throw org.springframework.boot.validation.ValidationException ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.validation.MessageInterpolator org.springframework.boot.validation.MessageInterpolator ( ) { for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ) { try { return org.springframework.boot.validation.MessageInterpolator ( java.lang.String ) ; } catch ( java.lang.Exception java.lang.Exception ) { } } return null ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.validation.MessageInterpolator org.springframework.boot.validation.MessageInterpolator ( java.lang.String java.lang.String ) { java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . resolveClassName ( java.lang.String , null ) ; java.lang.Object java.lang.Object = BeanUtils . instantiateClass ( java.lang.Class<> ) ; return ( MessageInterpolator ) java.lang.Object ; }  <METHOD_END>
