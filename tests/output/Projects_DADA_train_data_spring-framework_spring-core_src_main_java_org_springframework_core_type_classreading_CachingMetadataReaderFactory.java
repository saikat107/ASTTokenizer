<METHOD_START> public void ( ) { super(); void ( int ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { super( java.lang.ClassLoader ); void ( int ) ; }  <METHOD_END>
<METHOD_START> public void ( ResourceLoader org.springframework.core.type.classreading.ResourceLoader ) { super( org.springframework.core.type.classreading.ResourceLoader ); if ( org.springframework.core.type.classreading.ResourceLoader instanceof DefaultResourceLoader ) { this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> = ( ( DefaultResourceLoader ) org.springframework.core.type.classreading.ResourceLoader ) . getResourceCache ( MetadataReader .class ) ; } else { void ( int ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int ) { if ( int <= NUMBER ) { this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> = null ; } else if ( this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> instanceof org.springframework.core.type.classreading.CachingMetadataReaderFactory.LocalResourceCache ) { ( ( org.springframework.core.type.classreading.CachingMetadataReaderFactory.LocalResourceCache ) this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> ) . void ( int ) ; } else { this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> = new org.springframework.core.type.classreading.CachingMetadataReaderFactory.LocalResourceCache ( int ) ; } }  <METHOD_END>
<METHOD_START> public int int ( ) { if ( this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> instanceof org.springframework.core.type.classreading.CachingMetadataReaderFactory.LocalResourceCache ) { return ( ( org.springframework.core.type.classreading.CachingMetadataReaderFactory.LocalResourceCache ) this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> ) . int ( ) ; } else { return ( this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> != null ? java.lang.Integer . int : NUMBER ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.core.type.classreading.MetadataReader org.springframework.core.type.classreading.MetadataReader ( Resource org.springframework.core.type.classreading.Resource ) throws java.io.IOException { if ( this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> instanceof java.util.concurrent.ConcurrentMap ) { MetadataReader org.springframework.core.type.classreading.MetadataReader = this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> . get ( org.springframework.core.type.classreading.Resource ) ; if ( org.springframework.core.type.classreading.MetadataReader == null ) { org.springframework.core.type.classreading.MetadataReader = super. getMetadataReader ( org.springframework.core.type.classreading.Resource ) ; this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> . put ( org.springframework.core.type.classreading.Resource , org.springframework.core.type.classreading.MetadataReader ) ; } return org.springframework.core.type.classreading.MetadataReader ; } else if ( this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> != null ) { synchronized ( this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> ) { MetadataReader org.springframework.core.type.classreading.MetadataReader = this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> . get ( org.springframework.core.type.classreading.Resource ) ; if ( org.springframework.core.type.classreading.MetadataReader == null ) { org.springframework.core.type.classreading.MetadataReader = super. getMetadataReader ( org.springframework.core.type.classreading.Resource ) ; this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> . put ( org.springframework.core.type.classreading.Resource , org.springframework.core.type.classreading.MetadataReader ) ; } return org.springframework.core.type.classreading.MetadataReader ; } } else { return super. getMetadataReader ( org.springframework.core.type.classreading.Resource ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> instanceof org.springframework.core.type.classreading.CachingMetadataReaderFactory.LocalResourceCache ) { synchronized ( this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> ) { this . java.util.Map<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> . clear ( ) ; } } }  <METHOD_END>
<METHOD_START> public void ( int int ) { super( int , NUMBER , true ); }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( java.util.Map . java.util.Map.Entry<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> < Resource , MetadataReader > java.util.Map.Entry<org.springframework.core.type.classreading.Resource,org.springframework.core.type.classreading.MetadataReader> ) { return int ( ) > this . int ; }  <METHOD_END>
