<METHOD_START> void ( ) { this( STRING , STRING , STRING , STRING , STRING , STRING ); }  <METHOD_END>
<METHOD_START> void ( java.lang.String ... java.lang.String[] ) { void ( java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { Assert . notNull ( java.lang.String[] , STRING ) ; this . java.util.regex.Pattern[] = new java.util.regex.Pattern [ java.lang.String[] . int ] ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { this . java.util.regex.Pattern[] [ int ] = java.util.regex.Pattern ( java.lang.String[] [ int ] ) ; } }  <METHOD_END>
<METHOD_START> private java.util.regex.Pattern java.util.regex.Pattern ( java.lang.String java.lang.String ) { if ( boolean ( java.lang.String ) ) { return java.util.regex.Pattern . java.util.regex.Pattern ( java.lang.String , java.util.regex.Pattern . int ) ; } return java.util.regex.Pattern . java.util.regex.Pattern ( STRING + java.lang.String + STRING , java.util.regex.Pattern . int ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.String java.lang.String ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { for ( java.util.regex.Pattern java.util.regex.Pattern : this . java.util.regex.Pattern[] ) { if ( java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) . boolean ( ) ) { return ( java.lang.Object == null ? null : STRING ) ; } } return java.lang.Object ; }  <METHOD_END>
