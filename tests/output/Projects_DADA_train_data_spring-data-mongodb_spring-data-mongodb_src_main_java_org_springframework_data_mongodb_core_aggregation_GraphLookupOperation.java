<METHOD_START> private void ( java.lang.String java.lang.String , java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> , Field org.springframework.data.mongodb.core.aggregation.Field , Field org.springframework.data.mongodb.core.aggregation.Field , Field org.springframework.data.mongodb.core.aggregation.Field , java.lang.Long java.lang.Long , Field org.springframework.data.mongodb.core.aggregation.Field , CriteriaDefinition org.springframework.data.mongodb.core.aggregation.CriteriaDefinition ) { this . java.lang.String = java.lang.String ; this . java.util.List<java.lang.Object> = java.util.List<java.lang.Object> ; this . org.springframework.data.mongodb.core.aggregation.Field = org.springframework.data.mongodb.core.aggregation.Field ; this . org.springframework.data.mongodb.core.aggregation.Field = org.springframework.data.mongodb.core.aggregation.Field ; this . org.springframework.data.mongodb.core.aggregation.Field = org.springframework.data.mongodb.core.aggregation.Field ; this . java.lang.Long = java.lang.Long ; this . org.springframework.data.mongodb.core.aggregation.Field = org.springframework.data.mongodb.core.aggregation.Field ; this . org.springframework.data.mongodb.core.aggregation.CriteriaDefinition = org.springframework.data.mongodb.core.aggregation.CriteriaDefinition ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.FromBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.FromBuilder ( ) { return new org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationFromBuilder ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , java.lang.String ) ; java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.util.List<java.lang.Object> . int ( ) ) ; for ( java.lang.Object java.lang.Object : java.util.List<java.lang.Object> ) { if ( java.lang.Object instanceof AggregationExpression ) { java.util.List<java.lang.Object> . boolean ( ( ( AggregationExpression ) java.lang.Object ) . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } else if ( java.lang.Object instanceof Field ) { java.util.List<java.lang.Object> . boolean ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( ( Field ) java.lang.Object ) . toString ( ) ) ; } else { java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; } } org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , java.util.List<java.lang.Object> . int ( ) == NUMBER ? java.util.List<java.lang.Object> . java.util.Iterator<java.lang.Object> ( ) . java.lang.Object ( ) : java.util.List<java.lang.Object> ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , org.springframework.data.mongodb.core.aggregation.Field . getName ( ) ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , org.springframework.data.mongodb.core.aggregation.Field . getName ( ) ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , org.springframework.data.mongodb.core.aggregation.Field . getName ( ) ) ; if ( java.lang.Long != null ) { org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , java.lang.Long ) ; } if ( org.springframework.data.mongodb.core.aggregation.Field != null ) { org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , org.springframework.data.mongodb.core.aggregation.Field . getName ( ) ) ; } if ( org.springframework.data.mongodb.core.aggregation.CriteriaDefinition != null ) { org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getMappedObject ( org.springframework.data.mongodb.core.aggregation.CriteriaDefinition . getCriteriaObject ( ) ) ) ; } return new Document ( STRING , org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields ( ) { return ExposedFields . from ( new ExposedField ( org.springframework.data.mongodb.core.aggregation.Field , true ) ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.StartWithBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.StartWithBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder ( java.lang.String ... java.lang.String[] );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder ( AggregationExpression ... org.springframework.data.mongodb.core.aggregation.AggregationExpression[] );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder ( java.lang.Object ... java.lang.Object[] );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectToBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectToBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.StartWithBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.StartWithBuilder ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder ( java.lang.String ... java.lang.String[] ) { Assert . notNull ( java.lang.String[] , STRING ) ; Assert . noNullElements ( java.lang.String[] , STRING ) ; java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.lang.String[] . int ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { java.util.List<java.lang.Object> . boolean ( Fields . field ( java.lang.String ) ) ; } this . java.util.List<? extends java.lang.Object> = java.util.List<java.lang.Object> ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder ( AggregationExpression ... org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] , STRING ) ; Assert . noNullElements ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] , STRING ) ; this . java.util.List<? extends java.lang.Object> = java.util.Arrays . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectFromBuilder ( java.lang.Object ... java.lang.Object[] ) { Assert . notNull ( java.lang.Object[] , STRING ) ; Assert . noNullElements ( java.lang.Object[] , STRING ) ; this . java.util.List<? extends java.lang.Object> = java.util.List<java.lang.Object> ( java.lang.Object[] ) ; return this ; }  <METHOD_END>
<METHOD_START> private java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( java.lang.Object ... java.lang.Object[] ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.lang.Object[] . int ) ; for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { void ( java.lang.Object ) ; if ( java.lang.Object instanceof java.lang.String ) { java.util.List<java.lang.Object> . boolean ( Fields . field ( ( java.lang.String ) java.lang.Object ) ) ; } else { java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; } } return java.util.List<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Object java.lang.Object ) { for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.util.Set<java.lang.Class<?>> ) { if ( ClassUtils . isAssignable ( java.lang.Class<> , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { return; } } throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , java.util.Set<java.lang.Class<?>> , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectToBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.ConnectToBuilder ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationBuilder ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationBuilder ( java.lang.String , java.util.List<> , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String , java.util.List<? extends java.lang.Object> < ? extends java.lang.Object > java.util.List<? extends java.lang.Object> , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.util.List<> ) ; this . org.springframework.data.mongodb.core.aggregation.Field = Fields . field ( java.lang.String ) ; this . org.springframework.data.mongodb.core.aggregation.Field = Fields . field ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationBuilder ( long long ) { Assert . isTrue ( long >= NUMBER , STRING ) ; this . java.lang.Long = long ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationBuilder ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.Field = Fields . field ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationBuilder org.springframework.data.mongodb.core.aggregation.GraphLookupOperation.GraphLookupOperationBuilder ( CriteriaDefinition org.springframework.data.mongodb.core.aggregation.CriteriaDefinition ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.CriteriaDefinition , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.CriteriaDefinition = org.springframework.data.mongodb.core.aggregation.CriteriaDefinition ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.GraphLookupOperation org.springframework.data.mongodb.core.aggregation.GraphLookupOperation ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.GraphLookupOperation ( java.lang.String , java.util.List<java.lang.Object> , org.springframework.data.mongodb.core.aggregation.Field , org.springframework.data.mongodb.core.aggregation.Field , Fields . field ( java.lang.String ) , java.lang.Long , org.springframework.data.mongodb.core.aggregation.Field , org.springframework.data.mongodb.core.aggregation.CriteriaDefinition ) ; }  <METHOD_END>
