<METHOD_START> @ Test public void void ( ) java.lang.Exception { ConfigurableApplicationContext org.springframework.jmx.export.annotation.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING ) ; try { javax.management.MBeanServer javax.management.MBeanServer = ( javax.management.MBeanServer ) org.springframework.jmx.export.annotation.ConfigurableApplicationContext . getBean ( STRING ) ; javax.management.ObjectName javax.management.ObjectName = ObjectNameManager . getInstance ( STRING ) ; assertNotNull ( javax.management.MBeanServer . javax.management.ObjectInstance ( javax.management.ObjectName ) ) ; java.lang.String java.lang.String = ( java.lang.String ) javax.management.MBeanServer . java.lang.Object ( javax.management.ObjectName , STRING ) ; assertEquals ( STRING , STRING , java.lang.String ) ; } finally { org.springframework.jmx.export.annotation.ConfigurableApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.System . java.lang.String ( STRING , STRING ) ; ConfigurableApplicationContext org.springframework.jmx.export.annotation.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING ) ; try { javax.management.MBeanServer javax.management.MBeanServer = ( javax.management.MBeanServer ) org.springframework.jmx.export.annotation.ConfigurableApplicationContext . getBean ( STRING ) ; javax.management.ObjectName javax.management.ObjectName = ObjectNameManager . getInstance ( STRING ) ; assertNotNull ( javax.management.MBeanServer . javax.management.ObjectInstance ( javax.management.ObjectName ) ) ; java.lang.String java.lang.String = ( java.lang.String ) javax.management.MBeanServer . java.lang.Object ( javax.management.ObjectName , STRING ) ; assertEquals ( STRING , STRING , java.lang.String ) ; javax.management.ObjectName = ObjectNameManager . getInstance ( STRING ) ; assertNotNull ( javax.management.MBeanServer . javax.management.ObjectInstance ( javax.management.ObjectName ) ) ; java.lang.String = ( java.lang.String ) javax.management.MBeanServer . java.lang.Object ( javax.management.ObjectName , STRING ) ; assertEquals ( STRING , STRING , java.lang.String ) ; javax.management.ObjectName = ObjectNameManager . getInstance ( STRING ) ; assertNotNull ( javax.management.MBeanServer . javax.management.ObjectInstance ( javax.management.ObjectName ) ) ; java.lang.String = ( java.lang.String ) javax.management.MBeanServer . java.lang.Object ( javax.management.ObjectName , STRING ) ; assertEquals ( STRING , STRING , java.lang.String ) ; javax.management.ObjectName = ObjectNameManager . getInstance ( STRING ) ; assertNotNull ( javax.management.MBeanServer . javax.management.ObjectInstance ( javax.management.ObjectName ) ) ; java.lang.String = ( java.lang.String ) javax.management.MBeanServer . java.lang.Object ( javax.management.ObjectName , STRING ) ; assertEquals ( STRING , STRING , java.lang.String ) ; } finally { java.lang.System . java.lang.String ( STRING ) ; org.springframework.jmx.export.annotation.ConfigurableApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ConfigurableApplicationContext org.springframework.jmx.export.annotation.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING ) ; try { javax.management.MBeanServer javax.management.MBeanServer = ( javax.management.MBeanServer ) org.springframework.jmx.export.annotation.ConfigurableApplicationContext . getBean ( STRING ) ; javax.management.ObjectName javax.management.ObjectName = ObjectNameManager . getInstance ( STRING ) ; assertNotNull ( javax.management.MBeanServer . javax.management.ObjectInstance ( javax.management.ObjectName ) ) ; java.lang.String java.lang.String = ( java.lang.String ) javax.management.MBeanServer . java.lang.Object ( javax.management.ObjectName , STRING ) ; assertNull ( java.lang.String ) ; } finally { org.springframework.jmx.export.annotation.ConfigurableApplicationContext . close ( ) ; } }  <METHOD_END>
