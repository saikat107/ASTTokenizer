<METHOD_START> @ java.lang.Override public void void ( final BeanFactory org.springframework.integration.util.BeanFactory ) { if ( org.springframework.integration.util.BeanFactory != null ) { this . org.springframework.integration.util.BeanFactory = org.springframework.integration.util.BeanFactory ; this . org.springframework.integration.util.BeanFactoryTypeConverter . setBeanFactory ( org.springframework.integration.util.BeanFactory ) ; if ( this . org.springframework.integration.util.StandardEvaluationContext != null && this . org.springframework.integration.util.StandardEvaluationContext . getBeanResolver ( ) == null ) { this . org.springframework.integration.util.StandardEvaluationContext . setBeanResolver ( new BeanFactoryResolver ( org.springframework.integration.util.BeanFactory ) ) ; } } }  <METHOD_END>
<METHOD_START> protected org.springframework.integration.util.BeanFactory org.springframework.integration.util.BeanFactory ( ) { return this . org.springframework.integration.util.BeanFactory ; }  <METHOD_END>
<METHOD_START> public void void ( ConversionService org.springframework.integration.util.ConversionService ) { if ( org.springframework.integration.util.ConversionService != null ) { this . org.springframework.integration.util.BeanFactoryTypeConverter . setConversionService ( org.springframework.integration.util.ConversionService ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.integration.util.MessageBuilderFactory org.springframework.integration.util.MessageBuilderFactory ( ) { return this . org.springframework.integration.util.MessageBuilderFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { org.springframework.integration.util.StandardEvaluationContext ( ) ; if ( this . org.springframework.integration.util.BeanFactory != null ) { this . org.springframework.integration.util.MessageBuilderFactory = IntegrationUtils . getMessageBuilderFactory ( this . org.springframework.integration.util.BeanFactory ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.integration.util.StandardEvaluationContext org.springframework.integration.util.StandardEvaluationContext ( ) { return this . org.springframework.integration.util.StandardEvaluationContext ( true ) ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.integration.util.StandardEvaluationContext org.springframework.integration.util.StandardEvaluationContext ( boolean boolean ) { if ( this . org.springframework.integration.util.StandardEvaluationContext == null ) { if ( this . org.springframework.integration.util.BeanFactory == null && ! boolean ) { this . org.springframework.integration.util.StandardEvaluationContext = ExpressionUtils . createStandardEvaluationContext ( ) ; } else { this . org.springframework.integration.util.StandardEvaluationContext = ExpressionUtils . createStandardEvaluationContext ( this . org.springframework.integration.util.BeanFactory ) ; } this . org.springframework.integration.util.StandardEvaluationContext . setTypeConverter ( this . org.springframework.integration.util.BeanFactoryTypeConverter ) ; if ( this . org.springframework.integration.util.BeanFactory != null ) { ConversionService org.springframework.integration.util.ConversionService = IntegrationUtils . getConversionService ( this . org.springframework.integration.util.BeanFactory ) ; if ( org.springframework.integration.util.ConversionService != null ) { this . org.springframework.integration.util.BeanFactoryTypeConverter . setConversionService ( org.springframework.integration.util.ConversionService ) ; } } } return this . org.springframework.integration.util.StandardEvaluationContext ; }  <METHOD_END>
<METHOD_START> protected < T > T T ( Expression org.springframework.integration.util.Expression , Message < ? > org.springframework.integration.util.Message<?> , java.lang.Class<T> < T > java.lang.Class<T> ) { try { return java.lang.Object ( org.springframework.integration.util.Expression , ( java.lang.Object ) org.springframework.integration.util.Message<> , java.lang.Class<T> ) ; } catch ( EvaluationException org.springframework.integration.util.EvaluationException ) { java.lang.Throwable java.lang.Throwable = org.springframework.integration.util.EvaluationException . getCause ( ) ; if ( this . org.springframework.integration.util.Log . isDebugEnabled ( ) ) { this . org.springframework.integration.util.Log . debug ( STRING , org.springframework.integration.util.EvaluationException ) ; } throw new MessageHandlingException ( org.springframework.integration.util.Message<> , STRING + org.springframework.integration.util.Expression . getExpressionString ( ) , java.lang.Throwable == null ? org.springframework.integration.util.EvaluationException : java.lang.Throwable ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( this . org.springframework.integration.util.Log . isDebugEnabled ( ) ) { this . org.springframework.integration.util.Log . debug ( STRING + java.lang.Exception ) ; } throw new MessageHandlingException ( org.springframework.integration.util.Message<> , STRING + org.springframework.integration.util.Expression . getExpressionString ( ) , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { return this . java.lang.Object ( java.lang.String , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> protected < T > T T ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> ) { return org.springframework.integration.util.ExpressionParser . parseExpression ( java.lang.String ) . getValue ( this . org.springframework.integration.util.StandardEvaluationContext ( ) , java.lang.Object , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( Expression org.springframework.integration.util.Expression , java.lang.Object java.lang.Object ) { return this . java.lang.Object ( org.springframework.integration.util.Expression , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> protected < T > T T ( Expression org.springframework.integration.util.Expression , java.lang.Class<T> < T > java.lang.Class<T> ) { return org.springframework.integration.util.Expression . getValue ( this . org.springframework.integration.util.StandardEvaluationContext ( ) , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( Expression org.springframework.integration.util.Expression ) { return org.springframework.integration.util.Expression . getValue ( this . org.springframework.integration.util.StandardEvaluationContext ( ) ) ; }  <METHOD_END>
<METHOD_START> protected < T > T T ( Expression org.springframework.integration.util.Expression , java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> ) { return org.springframework.integration.util.Expression . getValue ( this . org.springframework.integration.util.StandardEvaluationContext ( ) , java.lang.Object , java.lang.Class<T> ) ; }  <METHOD_END>
