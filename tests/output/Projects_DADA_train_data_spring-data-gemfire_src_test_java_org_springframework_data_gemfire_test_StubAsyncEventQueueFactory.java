<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.AsyncEventQueue org.springframework.data.gemfire.test.AsyncEventQueue ( final java.lang.String java.lang.String , final AsyncEventListener org.springframework.data.gemfire.test.AsyncEventListener ) { when ( org.springframework.data.gemfire.test.AsyncEventQueue . getAsyncEventListener ( ) ) . thenReturn ( org.springframework.data.gemfire.test.AsyncEventListener ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . getBatchSize ( ) ) . thenReturn ( this . int ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . getDiskStoreName ( ) ) . thenReturn ( this . java.lang.String ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . isPersistent ( ) ) . thenReturn ( this . boolean ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . getId ( ) ) . thenReturn ( java.lang.String ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . getMaximumQueueMemory ( ) ) . thenReturn ( this . int ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . isParallel ( ) ) . thenReturn ( this . boolean ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . isBatchConflationEnabled ( ) ) . thenReturn ( this . boolean ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . isDiskSynchronous ( ) ) . thenReturn ( this . boolean ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . getBatchTimeInterval ( ) ) . thenReturn ( this . int ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . getOrderPolicy ( ) ) . thenReturn ( this . org.springframework.data.gemfire.test.OrderPolicy ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . getDispatcherThreads ( ) ) . thenReturn ( this . int ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . getGatewayEventSubstitutionFilter ( ) ) . thenReturn ( this . org.springframework.data.gemfire.test.GatewayEventSubstitutionFilter<,> ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . getGatewayEventFilters ( ) ) . thenReturn ( java.util.Collections . java.util.List<org.springframework.data.gemfire.test.GatewayEventFilter> ( java.util.List<org.springframework.data.gemfire.test.GatewayEventFilter> ) ) ; when ( org.springframework.data.gemfire.test.AsyncEventQueue . isForwardExpirationDestroy ( ) ) . thenReturn ( this . boolean ) ; return this . org.springframework.data.gemfire.test.AsyncEventQueue ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( OrderPolicy org.springframework.data.gemfire.test.OrderPolicy ) { this . org.springframework.data.gemfire.test.OrderPolicy = org.springframework.data.gemfire.test.OrderPolicy ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( final GatewayEventFilter org.springframework.data.gemfire.test.GatewayEventFilter ) { java.util.List<org.springframework.data.gemfire.test.GatewayEventFilter> . add ( org.springframework.data.gemfire.test.GatewayEventFilter ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( final GatewayEventFilter org.springframework.data.gemfire.test.GatewayEventFilter ) { java.util.List<org.springframework.data.gemfire.test.GatewayEventFilter> . remove ( org.springframework.data.gemfire.test.GatewayEventFilter ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( final GatewayEventSubstitutionFilter org.springframework.data.gemfire.test.GatewayEventSubstitutionFilter ) { this . org.springframework.data.gemfire.test.GatewayEventSubstitutionFilter<?,?> = org.springframework.data.gemfire.test.GatewayEventSubstitutionFilter ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.AsyncEventQueueFactory org.springframework.data.gemfire.test.AsyncEventQueueFactory ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
