<METHOD_START> @ Test public void void ( ) org.springframework.jms.support.JMSException { Destination org.springframework.jms.support.Destination = new Destination ( ) {} ; Destination org.springframework.jms.support.Destination = new Destination ( ) {} ; StubTextMessage org.springframework.jms.support.StubTextMessage = new StubTextMessage ( STRING ) ; org.springframework.jms.support.StubTextMessage . setJMSCorrelationID ( STRING ) ; org.springframework.jms.support.StubTextMessage . setJMSPriority ( NUMBER ) ; org.springframework.jms.support.StubTextMessage . setJMSDestination ( org.springframework.jms.support.Destination ) ; org.springframework.jms.support.StubTextMessage . setJMSDeliveryMode ( NUMBER ) ; org.springframework.jms.support.StubTextMessage . setJMSExpiration ( NUMBER ) ; org.springframework.jms.support.StubTextMessage . setJMSMessageID ( STRING ) ; org.springframework.jms.support.StubTextMessage . setJMSPriority ( NUMBER ) ; org.springframework.jms.support.StubTextMessage . setJMSReplyTo ( org.springframework.jms.support.Destination ) ; org.springframework.jms.support.StubTextMessage . setJMSRedelivered ( true ) ; org.springframework.jms.support.StubTextMessage . setJMSType ( STRING ) ; org.springframework.jms.support.StubTextMessage . setJMSTimestamp ( NUMBER ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new SimpleJmsHeaderMapper ( ) . toHeaders ( org.springframework.jms.support.StubTextMessage ) ; Message < java.lang.String > org.springframework.jms.support.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . copyHeaders ( java.util.Map<java.lang.String,java.lang.Object> ) . build ( ) ; JmsMessageHeaderAccessor org.springframework.jms.support.JmsMessageHeaderAccessor = JmsMessageHeaderAccessor . wrap ( org.springframework.jms.support.Message<java.lang.String> ) ; assertEquals ( STRING , org.springframework.jms.support.JmsMessageHeaderAccessor . getCorrelationId ( ) ) ; assertEquals ( org.springframework.jms.support.Destination , org.springframework.jms.support.JmsMessageHeaderAccessor . getDestination ( ) ) ; assertEquals ( java.lang.Integer . java.lang.Integer ( NUMBER ) , org.springframework.jms.support.JmsMessageHeaderAccessor . getDeliveryMode ( ) ) ; assertEquals ( NUMBER , org.springframework.jms.support.JmsMessageHeaderAccessor . getExpiration ( ) , NUMBER ) ; assertEquals ( STRING , org.springframework.jms.support.JmsMessageHeaderAccessor . getMessageId ( ) ) ; assertEquals ( java.lang.Integer . java.lang.Integer ( NUMBER ) , org.springframework.jms.support.JmsMessageHeaderAccessor . getPriority ( ) ) ; assertEquals ( org.springframework.jms.support.Destination , org.springframework.jms.support.JmsMessageHeaderAccessor . getReplyTo ( ) ) ; assertEquals ( true , org.springframework.jms.support.JmsMessageHeaderAccessor . getRedelivered ( ) ) ; assertEquals ( STRING , org.springframework.jms.support.JmsMessageHeaderAccessor . getType ( ) ) ; assertEquals ( NUMBER , org.springframework.jms.support.JmsMessageHeaderAccessor . getTimestamp ( ) , NUMBER ) ; assertNull ( org.springframework.jms.support.JmsMessageHeaderAccessor . getReplyChannel ( ) ) ; }  <METHOD_END>
