<METHOD_START> @ Before @ java.lang.SuppressWarnings ( STRING ) public void void ( ) java.net.URISyntaxException { MockitoAnnotations . initMocks ( this ) ; this . java.net.URI = new java.net.URI ( STRING ) ; this . org.springframework.boot.web.client.UriTemplateHandler = new RootUriTemplateHandler ( STRING , this . org.springframework.boot.web.client.UriTemplateHandler ) ; given ( this . org.springframework.boot.web.client.UriTemplateHandler . expand ( anyString ( ) , any ( java.util.Map .class ) ) ) . willReturn ( this . java.net.URI ) ; given ( this . org.springframework.boot.web.client.UriTemplateHandler . expand ( anyString ( ) , ( java.lang.Object [] ) any ( ) ) ) . willReturn ( this . java.net.URI ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.web.client.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.web.client.ExpectedException . expectMessage ( STRING ) ; new RootUriTemplateHandler ( ( java.lang.String ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.web.client.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.web.client.ExpectedException . expectMessage ( STRING ) ; new RootUriTemplateHandler ( STRING , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.HashMap<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.net.URI java.net.URI = this . org.springframework.boot.web.client.UriTemplateHandler . expand ( STRING , java.util.HashMap<java.lang.String,java.lang.Object> ) ; verify ( this . org.springframework.boot.web.client.UriTemplateHandler ) . expand ( STRING , java.util.HashMap<java.lang.String,java.lang.Object> ) ; assertThat ( java.net.URI ) . isEqualTo ( this . java.net.URI ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.HashMap<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.net.URI java.net.URI = this . org.springframework.boot.web.client.UriTemplateHandler . expand ( STRING , java.util.HashMap<java.lang.String,java.lang.Object> ) ; verify ( this . org.springframework.boot.web.client.UriTemplateHandler ) . expand ( STRING , java.util.HashMap<java.lang.String,java.lang.Object> ) ; assertThat ( java.net.URI ) . isEqualTo ( this . java.net.URI ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Object [] java.lang.Object[] = new java.lang.Object [ NUMBER ] ; java.net.URI java.net.URI = this . org.springframework.boot.web.client.UriTemplateHandler . expand ( STRING , java.lang.Object[] ) ; verify ( this . org.springframework.boot.web.client.UriTemplateHandler ) . expand ( STRING , java.lang.Object[] ) ; assertThat ( java.net.URI ) . isEqualTo ( this . java.net.URI ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Object [] java.lang.Object[] = new java.lang.Object [ NUMBER ] ; java.net.URI java.net.URI = this . org.springframework.boot.web.client.UriTemplateHandler . expand ( STRING , java.lang.Object[] ) ; verify ( this . org.springframework.boot.web.client.UriTemplateHandler ) . expand ( STRING , java.lang.Object[] ) ; assertThat ( java.net.URI ) . isEqualTo ( this . java.net.URI ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RestTemplate org.springframework.boot.web.client.RestTemplate = new RestTemplate ( ) ; org.springframework.boot.web.client.RestTemplate . setUriTemplateHandler ( this . org.springframework.boot.web.client.UriTemplateHandler ) ; this . org.springframework.boot.web.client.UriTemplateHandler = RootUriTemplateHandler . addTo ( org.springframework.boot.web.client.RestTemplate , STRING ) ; java.lang.Object [] java.lang.Object[] = new java.lang.Object [ NUMBER ] ; java.net.URI java.net.URI = this . org.springframework.boot.web.client.UriTemplateHandler . expand ( STRING , java.lang.Object[] ) ; verify ( this . org.springframework.boot.web.client.UriTemplateHandler ) . expand ( STRING , java.lang.Object[] ) ; assertThat ( java.net.URI ) . isEqualTo ( this . java.net.URI ) ; }  <METHOD_END>
