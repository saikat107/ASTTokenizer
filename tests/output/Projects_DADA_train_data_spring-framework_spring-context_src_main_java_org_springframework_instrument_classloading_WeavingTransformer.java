<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { if ( java.lang.ClassLoader == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . java.lang.ClassLoader = java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.instrument.ClassFileTransformer java.lang.instrument.ClassFileTransformer ) { if ( java.lang.instrument.ClassFileTransformer == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . java.util.List<java.lang.instrument.ClassFileTransformer> . boolean ( java.lang.instrument.ClassFileTransformer ) ; }  <METHOD_END>
<METHOD_START> public byte [] byte[] ( java.lang.String java.lang.String , byte [] byte[] ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; return byte[] ( java.lang.String , java.lang.String , byte[] , null ) ; }  <METHOD_END>
<METHOD_START> public byte [] byte[] ( java.lang.String java.lang.String , java.lang.String java.lang.String , byte [] byte[] , java.security.ProtectionDomain java.security.ProtectionDomain ) { byte [] byte[] = byte[] ; for ( java.lang.instrument.ClassFileTransformer java.lang.instrument.ClassFileTransformer : this . java.util.List<java.lang.instrument.ClassFileTransformer> ) { try { byte [] byte[] = java.lang.instrument.ClassFileTransformer . byte[] ( this . java.lang.ClassLoader , java.lang.String , null , java.security.ProtectionDomain , byte[] ) ; if ( byte[] != null ) { byte[] = byte[] ; } } catch ( java.lang.instrument.IllegalClassFormatException java.lang.instrument.IllegalClassFormatException ) { throw new java.lang.IllegalStateException ( STRING , java.lang.instrument.IllegalClassFormatException ) ; } } return byte[] ; }  <METHOD_END>
