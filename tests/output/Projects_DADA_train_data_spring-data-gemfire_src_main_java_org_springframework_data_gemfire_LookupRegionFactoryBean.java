<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { super. afterPropertiesSet ( ) ; AttributesMutator < K , V > org.springframework.data.gemfire.AttributesMutator<K,V> = getRegion ( ) . getAttributesMutator ( ) ; if ( ! ObjectUtils . isEmpty ( org.springframework.data.gemfire.AsyncEventQueue[] ) ) { for ( AsyncEventQueue org.springframework.data.gemfire.AsyncEventQueue : org.springframework.data.gemfire.AsyncEventQueue[] ) { org.springframework.data.gemfire.AttributesMutator<K,V> . addAsyncEventQueueId ( org.springframework.data.gemfire.AsyncEventQueue . getId ( ) ) ; } } if ( ! ObjectUtils . isEmpty ( org.springframework.data.gemfire.CacheListener<K,V>[] ) ) { for ( CacheListener < K , V > org.springframework.data.gemfire.CacheListener<K,V> : org.springframework.data.gemfire.CacheListener<K,V>[] ) { org.springframework.data.gemfire.AttributesMutator<K,V> . addCacheListener ( org.springframework.data.gemfire.CacheListener<K,V> ) ; } } if ( org.springframework.data.gemfire.CacheLoader<K,V> != null ) { org.springframework.data.gemfire.AttributesMutator<K,V> . setCacheLoader ( org.springframework.data.gemfire.CacheLoader<K,V> ) ; } if ( org.springframework.data.gemfire.CacheWriter<K,V> != null ) { org.springframework.data.gemfire.AttributesMutator<K,V> . setCacheWriter ( org.springframework.data.gemfire.CacheWriter<K,V> ) ; } if ( java.lang.Boolean != null ) { org.springframework.data.gemfire.AttributesMutator<K,V> . setCloningEnabled ( java.lang.Boolean ) ; } if ( boolean ( ) ) { void ( ) ; if ( org.springframework.data.gemfire.CustomExpiry<K,V> != null ) { org.springframework.data.gemfire.AttributesMutator<K,V> . setCustomEntryIdleTimeout ( org.springframework.data.gemfire.CustomExpiry<K,V> ) ; } if ( org.springframework.data.gemfire.CustomExpiry<K,V> != null ) { org.springframework.data.gemfire.AttributesMutator<K,V> . setCustomEntryTimeToLive ( org.springframework.data.gemfire.CustomExpiry<K,V> ) ; } if ( org.springframework.data.gemfire.ExpirationAttributes != null ) { org.springframework.data.gemfire.AttributesMutator<K,V> . setEntryIdleTimeout ( org.springframework.data.gemfire.ExpirationAttributes ) ; } if ( org.springframework.data.gemfire.ExpirationAttributes != null ) { org.springframework.data.gemfire.AttributesMutator<K,V> . setEntryTimeToLive ( org.springframework.data.gemfire.ExpirationAttributes ) ; } if ( org.springframework.data.gemfire.ExpirationAttributes != null ) { org.springframework.data.gemfire.AttributesMutator<K,V> . setRegionIdleTimeout ( org.springframework.data.gemfire.ExpirationAttributes ) ; } if ( org.springframework.data.gemfire.ExpirationAttributes != null ) { org.springframework.data.gemfire.AttributesMutator<K,V> . setRegionTimeToLive ( org.springframework.data.gemfire.ExpirationAttributes ) ; } } if ( java.lang.Integer != null ) { EvictionAttributesMutator org.springframework.data.gemfire.EvictionAttributesMutator = org.springframework.data.gemfire.AttributesMutator<K,V> . getEvictionAttributesMutator ( ) ; org.springframework.data.gemfire.EvictionAttributesMutator . setMaximum ( java.lang.Integer ) ; } if ( ! ObjectUtils . isEmpty ( org.springframework.data.gemfire.GatewaySender[] ) ) { for ( GatewaySender org.springframework.data.gemfire.GatewaySender : org.springframework.data.gemfire.GatewaySender[] ) { org.springframework.data.gemfire.AttributesMutator<K,V> . addGatewaySenderId ( org.springframework.data.gemfire.GatewaySender . getId ( ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override final boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> public void void ( AsyncEventQueue [] org.springframework.data.gemfire.AsyncEventQueue[] ) { this . org.springframework.data.gemfire.AsyncEventQueue[] = org.springframework.data.gemfire.AsyncEventQueue[] ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.data.gemfire.CacheListener<K,V> < K , V > [] org.springframework.data.gemfire.CacheListener<K,V>[] ) { this . org.springframework.data.gemfire.CacheListener<K,V>[] = org.springframework.data.gemfire.CacheListener<K,V>[] ; }  <METHOD_END>
<METHOD_START> public void void ( CacheLoader < K , V > org.springframework.data.gemfire.CacheLoader<K,V> ) { this . org.springframework.data.gemfire.CacheLoader<K,V> = org.springframework.data.gemfire.CacheLoader<K,V> ; }  <METHOD_END>
<METHOD_START> public void void ( CacheWriter < K , V > org.springframework.data.gemfire.CacheWriter<K,V> ) { this . org.springframework.data.gemfire.CacheWriter<K,V> = org.springframework.data.gemfire.CacheWriter<K,V> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( CustomExpiry < K , V > org.springframework.data.gemfire.CustomExpiry<K,V> ) { void ( org.springframework.data.gemfire.CustomExpiry<K,V> != null ) ; this . org.springframework.data.gemfire.CustomExpiry<K,V> = org.springframework.data.gemfire.CustomExpiry<K,V> ; }  <METHOD_END>
<METHOD_START> public void void ( CustomExpiry < K , V > org.springframework.data.gemfire.CustomExpiry<K,V> ) { void ( org.springframework.data.gemfire.CustomExpiry<K,V> != null ) ; this . org.springframework.data.gemfire.CustomExpiry<K,V> = org.springframework.data.gemfire.CustomExpiry<K,V> ; }  <METHOD_END>
<METHOD_START> public void void ( ExpirationAttributes org.springframework.data.gemfire.ExpirationAttributes ) { void ( org.springframework.data.gemfire.ExpirationAttributes != null ) ; this . org.springframework.data.gemfire.ExpirationAttributes = org.springframework.data.gemfire.ExpirationAttributes ; }  <METHOD_END>
<METHOD_START> public void void ( ExpirationAttributes org.springframework.data.gemfire.ExpirationAttributes ) { void ( org.springframework.data.gemfire.ExpirationAttributes != null ) ; this . org.springframework.data.gemfire.ExpirationAttributes = org.springframework.data.gemfire.ExpirationAttributes ; }  <METHOD_END>
<METHOD_START> public void void ( final java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( GatewaySender [] org.springframework.data.gemfire.GatewaySender[] ) { this . org.springframework.data.gemfire.GatewaySender[] = org.springframework.data.gemfire.GatewaySender[] ; }  <METHOD_END>
<METHOD_START> public void void ( ExpirationAttributes org.springframework.data.gemfire.ExpirationAttributes ) { void ( org.springframework.data.gemfire.ExpirationAttributes != null ) ; this . org.springframework.data.gemfire.ExpirationAttributes = org.springframework.data.gemfire.ExpirationAttributes ; }  <METHOD_END>
<METHOD_START> public void void ( ExpirationAttributes org.springframework.data.gemfire.ExpirationAttributes ) { void ( org.springframework.data.gemfire.ExpirationAttributes != null ) ; this . org.springframework.data.gemfire.ExpirationAttributes = org.springframework.data.gemfire.ExpirationAttributes ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return java.lang.Boolean . java.lang.Boolean . boolean ( this . java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { Region org.springframework.data.gemfire.Region = getRegion ( ) ; Assert . state ( org.springframework.data.gemfire.Region . getAttributes ( ) . getStatisticsEnabled ( ) , java.lang.String . java.lang.String ( STRING , org.springframework.data.gemfire.Region . getFullPath ( ) ) ) ; }  <METHOD_END>
