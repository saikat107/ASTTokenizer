<METHOD_START> @ java.lang.Override public org.springframework.boot.actuate.cache.CacheStatistics org.springframework.boot.actuate.cache.CacheStatistics ( CacheManager org.springframework.boot.actuate.cache.CacheManager , C C ) { try { javax.management.ObjectName javax.management.ObjectName = javax.management.ObjectName ( C ) ; return ( javax.management.ObjectName == null ? null : org.springframework.boot.actuate.cache.CacheStatistics ( javax.management.ObjectName ) ) ; } catch ( javax.management.MalformedObjectNameException javax.management.MalformedObjectNameException ) { throw new java.lang.IllegalStateException ( javax.management.MalformedObjectNameException ) ; } }  <METHOD_END>
<METHOD_START> protected abstract javax.management.ObjectName javax.management.ObjectName ( C C )			throws javax.management.MalformedObjectNameException ;  <METHOD_END>
<METHOD_START> protected abstract org.springframework.boot.actuate.cache.CacheStatistics org.springframework.boot.actuate.cache.CacheStatistics ( javax.management.ObjectName javax.management.ObjectName );  <METHOD_END>
<METHOD_START> private javax.management.ObjectName javax.management.ObjectName ( C C )			throws javax.management.MalformedObjectNameException { java.lang.String java.lang.String = C . getName ( ) ; org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.ObjectNameWrapper org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.ObjectNameWrapper = this . java.util.Map<java.lang.String,org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.ObjectNameWrapper> . org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.ObjectNameWrapper ( java.lang.String ) ; if ( org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.ObjectNameWrapper != null ) { return org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.ObjectNameWrapper . javax.management.ObjectName ; } javax.management.ObjectName javax.management.ObjectName = javax.management.ObjectName ( C ) ; this . java.util.Map<java.lang.String,org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.ObjectNameWrapper> . org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.ObjectNameWrapper ( java.lang.String , new org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.ObjectNameWrapper ( javax.management.ObjectName ) ) ; return javax.management.ObjectName ; }  <METHOD_END>
<METHOD_START> protected javax.management.MBeanServer javax.management.MBeanServer ( ) { if ( this . javax.management.MBeanServer == null ) { this . javax.management.MBeanServer = java.lang.management.ManagementFactory . javax.management.MBeanServer ( ) ; } return this . javax.management.MBeanServer ; }  <METHOD_END>
<METHOD_START> protected < T > T T ( javax.management.ObjectName javax.management.ObjectName , java.lang.String java.lang.String , java.lang.Class<T> < T > java.lang.Class<T> ) { try { java.lang.Object java.lang.Object = javax.management.MBeanServer ( ) . java.lang.Object ( javax.management.ObjectName , java.lang.String ) ; return java.lang.Class<T> . T ( java.lang.Object ) ; } catch ( javax.management.MBeanException javax.management.MBeanException ) { throw new java.lang.IllegalStateException ( javax.management.MBeanException ) ; } catch ( javax.management.AttributeNotFoundException javax.management.AttributeNotFoundException ) { throw new java.lang.IllegalStateException ( STRING + javax.management.ObjectName + STRING + STRING + java.lang.String , javax.management.AttributeNotFoundException ) ; } catch ( javax.management.ReflectionException javax.management.ReflectionException ) { throw new java.lang.IllegalStateException ( javax.management.ReflectionException ) ; } catch ( javax.management.InstanceNotFoundException javax.management.InstanceNotFoundException ) { org.springframework.boot.actuate.cache.Logger . warn ( STRING , javax.management.InstanceNotFoundException ) ; return null ; } }  <METHOD_END>
<METHOD_START> void ( javax.management.ObjectName javax.management.ObjectName ) { this . javax.management.ObjectName = javax.management.ObjectName ; }  <METHOD_END>
