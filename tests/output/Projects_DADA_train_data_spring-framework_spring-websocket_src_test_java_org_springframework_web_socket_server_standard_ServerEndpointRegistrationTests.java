<METHOD_START> @ Test public void void ( ) java.lang.Exception { @ java.lang.SuppressWarnings ( STRING ) ConfigurableApplicationContext org.springframework.web.socket.server.standard.ConfigurableApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.Config .class ) ; ServerEndpointRegistration org.springframework.web.socket.server.standard.ServerEndpointRegistration = new ServerEndpointRegistration ( STRING , org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint .class ) ; org.springframework.web.socket.server.standard.ServerEndpointRegistration . setBeanFactory ( org.springframework.web.socket.server.standard.ConfigurableApplicationContext . getBeanFactory ( ) ) ; org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint = org.springframework.web.socket.server.standard.ServerEndpointRegistration . getConfigurator ( ) . getEndpointInstance ( org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint .class ) ; assertNotNull ( org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint = new org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint ( new org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoService ( ) ) ; ServerEndpointRegistration org.springframework.web.socket.server.standard.ServerEndpointRegistration = new ServerEndpointRegistration ( STRING , org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint ) ; org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint = org.springframework.web.socket.server.standard.ServerEndpointRegistration . getConfigurator ( ) . getEndpointInstance ( org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint .class ) ; assertSame ( org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint , org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoEndpoint ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoService org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoService ( ) { return new org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoService ( ) ; }  <METHOD_END>
<METHOD_START> @ Autowired public void ( org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoService org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoService ) { this . org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoService = org.springframework.web.socket.server.standard.ServerEndpointRegistrationTests.EchoService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Session org.springframework.web.socket.server.standard.Session , EndpointConfig org.springframework.web.socket.server.standard.EndpointConfig ) {		}  <METHOD_END>
