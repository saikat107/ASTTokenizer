<METHOD_START> protected void ( ) {	}  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final Matcher < ? super java.lang.String > org.springframework.test.web.servlet.result.Matcher<? super java.lang.String> ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { ModelAndView org.springframework.test.web.servlet.result.ModelAndView = org.springframework.test.web.servlet.result.MvcResult . getModelAndView ( ) ; assertTrue ( STRING , org.springframework.test.web.servlet.result.ModelAndView != null ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.ModelAndView . getViewName ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { ModelAndView org.springframework.test.web.servlet.result.ModelAndView = org.springframework.test.web.servlet.result.MvcResult . getModelAndView ( ) ; assertTrue ( STRING , org.springframework.test.web.servlet.result.ModelAndView != null ) ; assertThat ( STRING , org.springframework.test.web.servlet.result.ModelAndView . getViewName ( ) , org.springframework.test.web.servlet.result.Matcher<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { ModelAndView org.springframework.test.web.servlet.result.ModelAndView = org.springframework.test.web.servlet.result.MvcResult . getModelAndView ( ) ; assertTrue ( STRING , org.springframework.test.web.servlet.result.ModelAndView != null ) ; assertEquals ( STRING , java.lang.String , org.springframework.test.web.servlet.result.ModelAndView . getViewName ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { ModelAndView org.springframework.test.web.servlet.result.ModelAndView = org.springframework.test.web.servlet.result.MvcResult . getModelAndView ( ) ; assertTrue ( STRING , org.springframework.test.web.servlet.result.ModelAndView != null ) ; assertEquals ( STRING , java.lang.String , org.springframework.test.web.servlet.result.ModelAndView . getViewName ( ) ) ; }  <METHOD_END>
