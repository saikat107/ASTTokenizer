<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new Point ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( new Point ( NUMBER , NUMBER ) ) . isEqualTo ( new Point ( NUMBER , NUMBER ) ) ; assertThat ( new Point ( NUMBER , NUMBER ) ) . isNotEqualTo ( new Point ( NUMBER , NUMBER ) ) ; assertThat ( new Point ( NUMBER , NUMBER ) ) . isNotEqualTo ( new Point ( NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( new Point ( NUMBER , NUMBER ) . toString ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Point org.springframework.data.geo.Point = new Point ( NUMBER , NUMBER ) ; Point org.springframework.data.geo.Point = ( Point ) SerializationUtils . deserialize ( SerializationUtils . serialize ( org.springframework.data.geo.Point ) ) ; assertThat ( org.springframework.data.geo.Point ) . isEqualTo ( org.springframework.data.geo.Point ) ; }  <METHOD_END>
