<METHOD_START> public void ( ObjectFactory < RepositoryRestConfiguration > org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration> ) { Assert . notNull ( org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration> , STRING ) ; this . org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration> = org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.data.rest.webmvc.config.BeansException { if ( ! ( java.lang.Object instanceof ResourceMappings ) ) { return java.lang.Object ; } ResourceMappings org.springframework.data.rest.webmvc.config.ResourceMappings = ( ResourceMappings ) java.lang.Object ; for ( ResourceMetadata org.springframework.data.rest.webmvc.config.ResourceMetadata : org.springframework.data.rest.webmvc.config.ResourceMappings ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.data.rest.webmvc.config.ResourceMetadata . getExcerptProjection ( ) ; if ( java.lang.Class<> != null ) { Projection org.springframework.data.rest.webmvc.config.Projection = AnnotationUtils . findAnnotation ( java.lang.Class<> , Projection .class ) ; java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.data.rest.webmvc.config.Projection == null ? new java.lang.Class [] { org.springframework.data.rest.webmvc.config.ResourceMetadata . getDomainType ( ) } : org.springframework.data.rest.webmvc.config.Projection . types ( ) ; org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration> . getObject ( ) . getProjectionConfiguration ( ) . addProjection ( java.lang.Class<> , java.lang.Class<?>[] ) ; } } return java.lang.Object ; }  <METHOD_END>
