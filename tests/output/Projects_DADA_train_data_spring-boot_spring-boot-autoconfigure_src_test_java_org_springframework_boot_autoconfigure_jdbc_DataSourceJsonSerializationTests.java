<METHOD_START> @ Test public void void ( ) java.lang.Exception { DataSource org.springframework.boot.autoconfigure.jdbc.DataSource = new DataSource ( ) ; SerializerFactory org.springframework.boot.autoconfigure.jdbc.SerializerFactory = BeanSerializerFactory . instance . withSerializerModifier ( new org.springframework.boot.autoconfigure.jdbc.DataSourceJsonSerializationTests.GenericSerializerModifier ( ) ) ; ObjectMapper org.springframework.boot.autoconfigure.jdbc.ObjectMapper = new ObjectMapper ( ) ; org.springframework.boot.autoconfigure.jdbc.ObjectMapper . setSerializerFactory ( org.springframework.boot.autoconfigure.jdbc.SerializerFactory ) ; java.lang.String java.lang.String = org.springframework.boot.autoconfigure.jdbc.ObjectMapper . writeValueAsString ( org.springframework.boot.autoconfigure.jdbc.DataSource ) ; assertThat ( java.lang.String . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DataSource org.springframework.boot.autoconfigure.jdbc.DataSource = new DataSource ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jdbc.ObjectMapper = new ObjectMapper ( ) ; org.springframework.boot.autoconfigure.jdbc.ObjectMapper . addMixIn ( DataSource .class , org.springframework.boot.autoconfigure.jdbc.DataSourceJsonSerializationTests.DataSourceJson .class ) ; java.lang.String java.lang.String = org.springframework.boot.autoconfigure.jdbc.ObjectMapper . writeValueAsString ( org.springframework.boot.autoconfigure.jdbc.DataSource ) ; assertThat ( java.lang.String . boolean ( STRING ) ) . isTrue ( ) ; assertThat ( StringUtils . countOccurrencesOf ( java.lang.String , STRING ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DataSource org.springframework.boot.autoconfigure.jdbc.DataSource , JsonGenerator org.springframework.boot.autoconfigure.jdbc.JsonGenerator , SerializerProvider org.springframework.boot.autoconfigure.jdbc.SerializerProvider ) throws java.io.IOException , org.springframework.boot.autoconfigure.jdbc.JsonProcessingException { org.springframework.boot.autoconfigure.jdbc.JsonGenerator . writeStartObject ( ) ; for ( java.beans.PropertyDescriptor java.beans.PropertyDescriptor : BeanUtils . getPropertyDescriptors ( DataSource .class ) ) { java.lang.reflect.Method java.lang.reflect.Method = java.beans.PropertyDescriptor . java.lang.reflect.Method ( ) ; if ( java.lang.reflect.Method != null && java.beans.PropertyDescriptor . java.lang.reflect.Method ( ) != null && this . org.springframework.boot.autoconfigure.jdbc.ConversionService . canConvert ( java.lang.String .class , java.beans.PropertyDescriptor . java.lang.Class<?> ( ) ) ) { org.springframework.boot.autoconfigure.jdbc.JsonGenerator . writeObjectField ( java.beans.PropertyDescriptor . java.lang.String ( ) , ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.boot.autoconfigure.jdbc.DataSource ) ) ; } } org.springframework.boot.autoconfigure.jdbc.JsonGenerator . writeEndObject ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter> < BeanPropertyWriter > java.util.List<org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter> ( SerializationConfig org.springframework.boot.autoconfigure.jdbc.SerializationConfig , BeanDescription org.springframework.boot.autoconfigure.jdbc.BeanDescription , java.util.List<org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter> < BeanPropertyWriter > java.util.List<org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter> ) { java.util.List<org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter> < BeanPropertyWriter > java.util.List<org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter> = new java.util.ArrayList<org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter> <> ( ) ; for ( BeanPropertyWriter org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter : java.util.List<org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter> ) { AnnotatedMethod org.springframework.boot.autoconfigure.jdbc.AnnotatedMethod = org.springframework.boot.autoconfigure.jdbc.BeanDescription . findMethod ( STRING + StringUtils . capitalize ( org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter . getName ( ) ) , new java.lang.Class<?> < ? > [] { org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter . getType ( ) . getRawClass ( ) } ) ; if ( org.springframework.boot.autoconfigure.jdbc.AnnotatedMethod != null && this . org.springframework.boot.autoconfigure.jdbc.ConversionService . canConvert ( java.lang.String .class , org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter . getType ( ) . getRawClass ( ) ) ) { java.util.List<org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter> . add ( org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter ) ; } } return java.util.List<org.springframework.boot.autoconfigure.jdbc.BeanPropertyWriter> ; }  <METHOD_END>
