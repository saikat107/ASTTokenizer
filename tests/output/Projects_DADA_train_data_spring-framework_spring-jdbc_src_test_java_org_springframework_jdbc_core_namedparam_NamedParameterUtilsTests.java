<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( STRING , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getTotalParameterCount ( ) ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getNamedParameterCount ( ) ) ; java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( STRING , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getTotalParameterCount ( ) ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getNamedParameterCount ( ) ) ; java.lang.String java.lang.String = STRING + '\t' + STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MapSqlParameterSource org.springframework.jdbc.core.namedparam.MapSqlParameterSource = new MapSqlParameterSource ( ) ; org.springframework.jdbc.core.namedparam.MapSqlParameterSource . addValue ( STRING , STRING ) . addValue ( STRING , STRING ) . addValue ( STRING , STRING ) ; assertEquals ( STRING , NamedParameterUtils . substituteNamedParameters ( STRING , org.springframework.jdbc.core.namedparam.MapSqlParameterSource ) ) ; assertEquals ( STRING , NamedParameterUtils . substituteNamedParameters ( STRING , org.springframework.jdbc.core.namedparam.MapSqlParameterSource ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; assertSame ( NUMBER , NamedParameterUtils . buildValueArray ( STRING , java.util.Map<java.lang.String,java.lang.String> ) . length ) ; assertSame ( NUMBER , NamedParameterUtils . buildValueArray ( STRING , java.util.Map<java.lang.String,java.lang.String> ) . length ) ; assertSame ( NUMBER , NamedParameterUtils . buildValueArray ( STRING , java.util.Map<java.lang.String,java.lang.String> ) . length ) ; assertEquals ( STRING , NamedParameterUtils . buildValueArray ( STRING , java.util.Map<java.lang.String,java.lang.String> ) [ NUMBER ] ) ; try { NamedParameterUtils . buildValueArray ( STRING , java.util.Map<java.lang.String,java.lang.String> ) ; fail ( STRING ) ; } catch ( InvalidDataAccessApiUsageException org.springframework.jdbc.core.namedparam.InvalidDataAccessApiUsageException ) {		} }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MapSqlParameterSource org.springframework.jdbc.core.namedparam.MapSqlParameterSource = new MapSqlParameterSource ( ) ; org.springframework.jdbc.core.namedparam.MapSqlParameterSource . addValue ( STRING , STRING , NUMBER ) . addValue ( STRING , STRING , NUMBER ) . addValue ( STRING , STRING , NUMBER ) ; assertSame ( NUMBER , NamedParameterUtils . buildSqlTypeArray ( NamedParameterUtils . parseSqlStatement ( STRING ) , org.springframework.jdbc.core.namedparam.MapSqlParameterSource ) . length ) ; assertSame ( NUMBER , NamedParameterUtils . buildSqlTypeArray ( NamedParameterUtils . parseSqlStatement ( STRING ) , org.springframework.jdbc.core.namedparam.MapSqlParameterSource ) . length ) ; assertSame ( NUMBER , NamedParameterUtils . buildSqlTypeArray ( NamedParameterUtils . parseSqlStatement ( STRING ) , org.springframework.jdbc.core.namedparam.MapSqlParameterSource ) . length ) ; assertEquals ( NUMBER , NamedParameterUtils . buildSqlTypeArray ( NamedParameterUtils . parseSqlStatement ( STRING ) , org.springframework.jdbc.core.namedparam.MapSqlParameterSource ) [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MapSqlParameterSource org.springframework.jdbc.core.namedparam.MapSqlParameterSource = new MapSqlParameterSource ( ) ; org.springframework.jdbc.core.namedparam.MapSqlParameterSource . addValue ( STRING , STRING , NUMBER ) . addValue ( STRING , STRING , NUMBER ) . addValue ( STRING , STRING , NUMBER , STRING ) ; assertSame ( NUMBER , NamedParameterUtils . buildSqlParameterList ( NamedParameterUtils . parseSqlStatement ( STRING ) , org.springframework.jdbc.core.namedparam.MapSqlParameterSource ) . size ( ) ) ; assertSame ( NUMBER , NamedParameterUtils . buildSqlParameterList ( NamedParameterUtils . parseSqlStatement ( STRING ) , org.springframework.jdbc.core.namedparam.MapSqlParameterSource ) . size ( ) ) ; assertSame ( NUMBER , NamedParameterUtils . buildSqlParameterList ( NamedParameterUtils . parseSqlStatement ( STRING ) , org.springframework.jdbc.core.namedparam.MapSqlParameterSource ) . size ( ) ) ; assertEquals ( NUMBER , NamedParameterUtils . buildSqlParameterList ( NamedParameterUtils . parseSqlStatement ( STRING ) , org.springframework.jdbc.core.namedparam.MapSqlParameterSource ) . get ( NUMBER ) . getSqlType ( ) ) ; assertEquals ( STRING , NamedParameterUtils . buildSqlParameterList ( NamedParameterUtils . parseSqlStatement ( STRING ) , org.springframework.jdbc.core.namedparam.MapSqlParameterSource ) . get ( NUMBER ) . getTypeName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = InvalidDataAccessApiUsageException .class ) public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; NamedParameterUtils . buildValueArray ( java.lang.String , java.util.Collections .< java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = NamedParameterUtils . substituteNamedParameters ( java.lang.String , new MapSqlParameterSource ( ) ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( java.lang.String , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING STRING STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( STRING STRING STRING , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ) ; MapSqlParameterSource org.springframework.jdbc.core.namedparam.MapSqlParameterSource = new MapSqlParameterSource ( ) ; org.springframework.jdbc.core.namedparam.MapSqlParameterSource . addValue ( STRING , STRING ) ; org.springframework.jdbc.core.namedparam.MapSqlParameterSource . addValue ( STRING , STRING ) ; org.springframework.jdbc.core.namedparam.MapSqlParameterSource . addValue ( STRING , STRING ) ; java.lang.Object [] java.lang.Object[] = NamedParameterUtils . buildValueArray ( org.springframework.jdbc.core.namedparam.ParsedSql , org.springframework.jdbc.core.namedparam.MapSqlParameterSource , null ) ; assertEquals ( NUMBER , java.lang.Object[] . int ) ; assertEquals ( STRING , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( STRING , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( STRING , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( STRING , java.lang.Object[] [ NUMBER ] ) ; java.lang.String java.lang.String = STRING STRING STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( STRING STRING STRING , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ) ; java.lang.String java.lang.String = STRING STRING STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( STRING STRING STRING , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ) ; java.lang.String java.lang.String = STRING STRING STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , STRING ) ; assertEquals ( STRING STRING STRING , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , new MapSqlParameterSource ( java.util.Map<java.lang.String,java.lang.String> ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( java.lang.String , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getTotalParameterCount ( ) ) ; assertEquals ( java.lang.String , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getTotalParameterCount ( ) ) ; assertEquals ( java.lang.String , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getTotalParameterCount ( ) ) ; assertEquals ( java.lang.String , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . size ( ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; java.lang.String java.lang.String = NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . size ( ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; java.lang.String java.lang.String = NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . size ( ) ) ; java.lang.String java.lang.String = NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ; assertEquals ( java.lang.String , java.lang.String ) ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . size ( ) ) ; java.lang.String java.lang.String = NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( java.lang.String , NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = NamedParameterUtils . substituteNamedParameters ( java.lang.String , new MapSqlParameterSource ( ) ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = NamedParameterUtils . substituteNamedParameters ( java.lang.String , new MapSqlParameterSource ( ) ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getTotalParameterCount ( ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getTotalParameterCount ( ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING STRING ; ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql = NamedParameterUtils . parseSqlStatement ( java.lang.String ) ; assertEquals ( NUMBER , org.springframework.jdbc.core.namedparam.ParsedSql . getTotalParameterCount ( ) ) ; assertEquals ( STRING , org.springframework.jdbc.core.namedparam.ParsedSql . getParameterNames ( ) . get ( NUMBER ) ) ; }  <METHOD_END>
