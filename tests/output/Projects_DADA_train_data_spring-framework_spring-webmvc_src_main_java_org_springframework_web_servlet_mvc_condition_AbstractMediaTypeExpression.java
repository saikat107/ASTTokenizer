<METHOD_START> void ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( STRING ) ) { this . boolean = true ; java.lang.String = java.lang.String . java.lang.String ( NUMBER ) ; } else { this . boolean = false ; } this . org.springframework.web.servlet.mvc.condition.MediaType = MediaType . parseMediaType ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> void ( MediaType org.springframework.web.servlet.mvc.condition.MediaType , boolean boolean ) { this . org.springframework.web.servlet.mvc.condition.MediaType = org.springframework.web.servlet.mvc.condition.MediaType ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.condition.MediaType org.springframework.web.servlet.mvc.condition.MediaType ( ) { return this . org.springframework.web.servlet.mvc.condition.MediaType ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression ) { return MediaType . SPECIFICITY_COMPARATOR . compare ( this . org.springframework.web.servlet.mvc.condition.MediaType ( ) , org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression . org.springframework.web.servlet.mvc.condition.MediaType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object != null && java.lang.Class<? extends org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression> ( ) == java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) { org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression = ( org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression ) java.lang.Object ; return ( this . org.springframework.web.servlet.mvc.condition.MediaType . equals ( org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression . org.springframework.web.servlet.mvc.condition.MediaType ) && this . boolean == org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression . boolean ) ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.web.servlet.mvc.condition.MediaType . hashCode ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; if ( this . boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( '!' ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( this . org.springframework.web.servlet.mvc.condition.MediaType . toString ( ) ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
