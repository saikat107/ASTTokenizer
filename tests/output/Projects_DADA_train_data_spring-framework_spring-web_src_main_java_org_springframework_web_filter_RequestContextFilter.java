<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( HttpServletRequest org.springframework.web.filter.HttpServletRequest , HttpServletResponse org.springframework.web.filter.HttpServletResponse , FilterChain org.springframework.web.filter.FilterChain )			throws org.springframework.web.filter.ServletException , java.io.IOException { ServletRequestAttributes org.springframework.web.filter.ServletRequestAttributes = new ServletRequestAttributes ( org.springframework.web.filter.HttpServletRequest , org.springframework.web.filter.HttpServletResponse ) ; void ( org.springframework.web.filter.HttpServletRequest , org.springframework.web.filter.ServletRequestAttributes ) ; try { org.springframework.web.filter.FilterChain . doFilter ( org.springframework.web.filter.HttpServletRequest , org.springframework.web.filter.HttpServletResponse ) ; } finally { void ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + org.springframework.web.filter.HttpServletRequest ) ; } org.springframework.web.filter.ServletRequestAttributes . requestCompleted ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( HttpServletRequest org.springframework.web.filter.HttpServletRequest , ServletRequestAttributes org.springframework.web.filter.ServletRequestAttributes ) { LocaleContextHolder . setLocale ( org.springframework.web.filter.HttpServletRequest . getLocale ( ) , this . boolean ) ; RequestContextHolder . setRequestAttributes ( org.springframework.web.filter.ServletRequestAttributes , this . boolean ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + org.springframework.web.filter.HttpServletRequest ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { LocaleContextHolder . resetLocaleContext ( ) ; RequestContextHolder . resetRequestAttributes ( ) ; }  <METHOD_END>
