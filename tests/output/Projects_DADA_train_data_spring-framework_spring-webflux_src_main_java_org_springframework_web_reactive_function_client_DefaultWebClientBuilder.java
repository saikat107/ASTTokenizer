<METHOD_START> @ java.lang.Override public WebClient . WebClient.Builder WebClient.Builder ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public WebClient . WebClient.Builder WebClient.Builder ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { this . java.util.Map<java.lang.String,?> = java.util.Map<java.lang.String,> ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public WebClient . WebClient.Builder WebClient.Builder ( UriBuilderFactory org.springframework.web.reactive.function.client.UriBuilderFactory ) { this . org.springframework.web.reactive.function.client.UriBuilderFactory = org.springframework.web.reactive.function.client.UriBuilderFactory ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public WebClient . WebClient.Builder WebClient.Builder ( java.lang.String java.lang.String , java.lang.String ... java.lang.String[] ) { if ( this . org.springframework.web.reactive.function.client.HttpHeaders == null ) { this . org.springframework.web.reactive.function.client.HttpHeaders = new HttpHeaders ( ) ; } for ( java.lang.String java.lang.String : java.lang.String[] ) { this . org.springframework.web.reactive.function.client.HttpHeaders . add ( java.lang.String , java.lang.String ) ; } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public WebClient . WebClient.Builder WebClient.Builder ( java.lang.String java.lang.String , java.lang.String ... java.lang.String[] ) { if ( this . org.springframework.web.reactive.function.client.MultiValueMap<java.lang.String,java.lang.String> == null ) { this . org.springframework.web.reactive.function.client.MultiValueMap<java.lang.String,java.lang.String> = new LinkedMultiValueMap <> ( NUMBER ) ; } this . org.springframework.web.reactive.function.client.MultiValueMap<java.lang.String,java.lang.String> . addAll ( java.lang.String , java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public WebClient . WebClient.Builder WebClient.Builder ( ClientHttpConnector org.springframework.web.reactive.function.client.ClientHttpConnector ) { this . org.springframework.web.reactive.function.client.ClientHttpConnector = org.springframework.web.reactive.function.client.ClientHttpConnector ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public WebClient . WebClient.Builder WebClient.Builder ( ExchangeStrategies org.springframework.web.reactive.function.client.ExchangeStrategies ) { Assert . notNull ( org.springframework.web.reactive.function.client.ExchangeStrategies , STRING ) ; this . org.springframework.web.reactive.function.client.ExchangeStrategies = org.springframework.web.reactive.function.client.ExchangeStrategies ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public WebClient . WebClient.Builder WebClient.Builder ( ExchangeFunction org.springframework.web.reactive.function.client.ExchangeFunction ) { this . org.springframework.web.reactive.function.client.ExchangeFunction = org.springframework.web.reactive.function.client.ExchangeFunction ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.reactive.function.client.WebClient org.springframework.web.reactive.function.client.WebClient ( ) { return new DefaultWebClient ( org.springframework.web.reactive.function.client.ExchangeFunction ( ) , org.springframework.web.reactive.function.client.UriBuilderFactory ( ) , this . org.springframework.web.reactive.function.client.HttpHeaders , this . org.springframework.web.reactive.function.client.MultiValueMap<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.reactive.function.client.UriBuilderFactory org.springframework.web.reactive.function.client.UriBuilderFactory ( ) { if ( this . org.springframework.web.reactive.function.client.UriBuilderFactory != null ) { return this . org.springframework.web.reactive.function.client.UriBuilderFactory ; } DefaultUriBuilderFactory org.springframework.web.reactive.function.client.DefaultUriBuilderFactory = this . java.lang.String != null ? new DefaultUriBuilderFactory ( this . java.lang.String ) : new DefaultUriBuilderFactory ( ) ; org.springframework.web.reactive.function.client.DefaultUriBuilderFactory . setDefaultUriVariables ( this . java.util.Map<java.lang.String,> ) ; return org.springframework.web.reactive.function.client.DefaultUriBuilderFactory ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.reactive.function.client.ExchangeFunction org.springframework.web.reactive.function.client.ExchangeFunction ( ) { if ( this . org.springframework.web.reactive.function.client.ExchangeFunction != null ) { return this . org.springframework.web.reactive.function.client.ExchangeFunction ; } else if ( this . org.springframework.web.reactive.function.client.ClientHttpConnector != null ) { return ExchangeFunctions . create ( this . org.springframework.web.reactive.function.client.ClientHttpConnector , this . org.springframework.web.reactive.function.client.ExchangeStrategies ) ; } else { return ExchangeFunctions . create ( new ReactorClientHttpConnector ( ) , this . org.springframework.web.reactive.function.client.ExchangeStrategies ) ; } }  <METHOD_END>
