<METHOD_START> void ( java.lang.String java.lang.String , MvcEndpoints org.springframework.boot.actuate.autoconfigure.MvcEndpoints ) { this . java.lang.String = java.lang.String ; this . org.springframework.boot.actuate.autoconfigure.MvcEndpoints = org.springframework.boot.actuate.autoconfigure.MvcEndpoints ; }  <METHOD_END>
<METHOD_START> public void void ( ResourceSupport org.springframework.boot.actuate.autoconfigure.ResourceSupport , java.lang.String java.lang.String ) { if ( ! org.springframework.boot.actuate.autoconfigure.ResourceSupport . hasLink ( STRING ) ) { org.springframework.boot.actuate.autoconfigure.ResourceSupport . add ( linkTo ( org.springframework.boot.actuate.autoconfigure.LinksEnhancer .class ) . slash ( this . java.lang.String + java.lang.String ) . withSelfRel ( ) ) ; } MultiValueMap < java.lang.String , java.lang.String > org.springframework.boot.actuate.autoconfigure.MultiValueMap<java.lang.String,java.lang.String> = new LinkedMultiValueMap <> ( ) ; for ( MvcEndpoint org.springframework.boot.actuate.autoconfigure.MvcEndpoint : this . org.springframework.boot.actuate.autoconfigure.MvcEndpoints . getEndpoints ( ) ) { if ( ! org.springframework.boot.actuate.autoconfigure.MvcEndpoint . getPath ( ) . equals ( java.lang.String ) ) { java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.actuate.autoconfigure.MvcEndpoint ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = org.springframework.boot.actuate.autoconfigure.MultiValueMap<java.lang.String,java.lang.String> . get ( java.lang.String ) ; if ( java.util.List<java.lang.String> == null || ! java.util.List<java.lang.String> . boolean ( org.springframework.boot.actuate.autoconfigure.MvcEndpoint . getPath ( ) ) ) { void ( org.springframework.boot.actuate.autoconfigure.ResourceSupport , org.springframework.boot.actuate.autoconfigure.MvcEndpoint , java.lang.String ) ; org.springframework.boot.actuate.autoconfigure.MultiValueMap<java.lang.String,java.lang.String> . add ( java.lang.String , org.springframework.boot.actuate.autoconfigure.MvcEndpoint . getPath ( ) ) ; } } } }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( MvcEndpoint org.springframework.boot.actuate.autoconfigure.MvcEndpoint ) { if ( org.springframework.boot.actuate.autoconfigure.MvcEndpoint instanceof NamedMvcEndpoint ) { return ( ( NamedMvcEndpoint ) org.springframework.boot.actuate.autoconfigure.MvcEndpoint ) . getName ( ) ; } java.lang.String java.lang.String = org.springframework.boot.actuate.autoconfigure.MvcEndpoint . getPath ( ) ; return ( java.lang.String . boolean ( STRING ) ? java.lang.String . java.lang.String ( NUMBER ) : java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( ResourceSupport org.springframework.boot.actuate.autoconfigure.ResourceSupport , MvcEndpoint org.springframework.boot.actuate.autoconfigure.MvcEndpoint , java.lang.String java.lang.String ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.boot.actuate.autoconfigure.MvcEndpoint . getEndpointType ( ) ; java.lang.Class<?> = ( java.lang.Class<> == null ? java.lang.Object .class : java.lang.Class<> ) ; if ( StringUtils . hasText ( java.lang.String ) ) { java.lang.String java.lang.String = this . java.lang.String + org.springframework.boot.actuate.autoconfigure.MvcEndpoint . getPath ( ) ; org.springframework.boot.actuate.autoconfigure.ResourceSupport . add ( linkTo ( java.lang.Class<> ) . slash ( java.lang.String ) . withRel ( java.lang.String ) ) ; } }  <METHOD_END>
