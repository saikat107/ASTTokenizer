<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.integration.store.MessageGroupStore . addMessageToGroup ( STRING , new GenericMessage < java.lang.String > ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageGroupStore . getMessageGroup ( STRING ) . size ( ) ) ; int int = NUMBER ; while ( int ++ < NUMBER & org.springframework.integration.store.MessageGroupStore . getMessageGroup ( STRING ) . size ( ) > NUMBER ) { java.lang.Thread . void ( NUMBER ) ; } assertEquals ( NUMBER , org.springframework.integration.store.MessageGroupStore . getMessageGroup ( STRING ) . size ( ) ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageStoreReaperTests.ExpiryCallback . java.util.List<org.springframework.integration.store.MessageGroup> . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { GenericMessage < java.lang.String > org.springframework.integration.store.GenericMessage<java.lang.String> = new GenericMessage < java.lang.String > ( STRING ) ; org.springframework.integration.store.MessageGroupStore . addMessageToGroup ( STRING , org.springframework.integration.store.GenericMessage<java.lang.String> ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageGroupStore . getMessageGroup ( STRING ) . size ( ) ) ; org.springframework.integration.store.MessageGroupStoreReaper . setExpireOnDestroy ( true ) ; org.springframework.integration.store.MessageGroupStoreReaper . setTimeout ( NUMBER ) ; if ( ! org.springframework.integration.store.MessageGroupStoreReaper . isAutoStartup ( ) ) { org.springframework.integration.store.MessageGroupStoreReaper . start ( ) ; } assertTrue ( org.springframework.integration.store.MessageGroupStoreReaper . isRunning ( ) ) ; java.lang.Thread . void ( NUMBER ) ; org.springframework.integration.store.MessageGroupStoreReaper . stop ( ) ; assertTrue ( ! org.springframework.integration.store.MessageGroupStoreReaper . isRunning ( ) ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageGroupStore . getMessageGroup ( STRING ) . size ( ) ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageStoreReaperTests.ExpiryCallback . java.util.List<org.springframework.integration.store.MessageGroup> . size ( ) ) ; org.springframework.integration.store.MessageGroupStore . addMessageToGroup ( STRING , org.springframework.integration.store.GenericMessage<java.lang.String> ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageGroupStore . getMessageGroup ( STRING ) . size ( ) ) ; org.springframework.integration.store.MessageGroupStoreReaper . run ( ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageGroupStore . getMessageGroup ( STRING ) . size ( ) ) ; org.springframework.integration.store.MessageGroupStoreReaper . stop ( ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageGroupStore . getMessageGroup ( STRING ) . size ( ) ) ; org.springframework.integration.store.MessageGroupStoreReaper . start ( ) ; org.springframework.integration.store.MessageGroupStoreReaper . run ( ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageGroupStore . getMessageGroup ( STRING ) . size ( ) ) ; assertEquals ( NUMBER , org.springframework.integration.store.MessageStoreReaperTests.ExpiryCallback . java.util.List<org.springframework.integration.store.MessageGroup> . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.integration.store.MessageChannel . send ( MessageBuilder . withPayload ( STRING ) . setCorrelationId ( STRING ) . setSequenceSize ( NUMBER ) . setSequenceNumber ( NUMBER ) . build ( ) ) ; Message < ? > org.springframework.integration.store.Message<?> = this . org.springframework.integration.store.PollableChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.store.Message<> ) ; assertEquals ( STRING , org.springframework.integration.store.Message<> . getPayload ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MessageGroupStore org.springframework.integration.store.MessageGroupStore , MessageGroup org.springframework.integration.store.MessageGroup ) { java.util.List<org.springframework.integration.store.MessageGroup> . add ( org.springframework.integration.store.MessageGroup ) ; org.springframework.integration.store.MessageGroupStore . removeMessageGroup ( org.springframework.integration.store.MessageGroup . getGroupId ( ) ) ; }  <METHOD_END>
