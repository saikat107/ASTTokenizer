<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager = org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( STRING ) ; void ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ) ; void ( ) ; assertThat ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ) . matches ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager :: boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( STRING ) ) ; assertThatExceptionOfType ( HeuristicCompletionException .class ) . isThrownBy ( this :: void ) . matches ( e -> e . getOutcomeState ( ) == HeuristicCompletionException . STATE_ROLLED_BACK ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager = org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( STRING ) ; org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager = org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( STRING ) ; void ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager , org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ) ; void ( ) ; assertThat ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ) . matches ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager :: boolean ) ; assertThat ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ) . matches ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager :: boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager = org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( STRING ) ; org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager = org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( STRING ) ; void ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager , org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ) ; void ( ) ; assertThat ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager . java.lang.Long ( ) ) . isLessThanOrEqualTo ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager . java.lang.Long ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager . org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( STRING ) , org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( STRING ) ) ; assertThatExceptionOfType ( HeuristicCompletionException .class ) . isThrownBy ( this :: void ) . matches ( e -> e . getOutcomeState ( ) == HeuristicCompletionException . STATE_MIXED ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager = org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( STRING ) ; org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager = org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( STRING ) ; void ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager , org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ) ; void ( ) ; assertThat ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ) . matches ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager :: boolean ) ; assertThat ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ) . matches ( org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager :: boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = UnexpectedRollbackException .class ) public void void ( ) java.lang.Exception { PlatformTransactionManager org.springframework.data.transaction.PlatformTransactionManager = org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( STRING ) ; void ( org.springframework.data.transaction.PlatformTransactionManager ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( PlatformTransactionManager ... org.springframework.data.transaction.PlatformTransactionManager[] ) { org.springframework.data.transaction.ChainedTransactionManager = new ChainedTransactionManager ( new org.springframework.data.transaction.ChainedTransactionManagerTests.TestSynchronizationManager ( ) , org.springframework.data.transaction.PlatformTransactionManager[] ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { MultiTransactionStatus org.springframework.data.transaction.MultiTransactionStatus = org.springframework.data.transaction.ChainedTransactionManager . getTransaction ( new DefaultTransactionDefinition ( ) ) ; org.springframework.data.transaction.ChainedTransactionManager . rollback ( org.springframework.data.transaction.MultiTransactionStatus ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { MultiTransactionStatus org.springframework.data.transaction.MultiTransactionStatus = org.springframework.data.transaction.ChainedTransactionManager . getTransaction ( new DefaultTransactionDefinition ( ) ) ; org.springframework.data.transaction.ChainedTransactionManager . commit ( org.springframework.data.transaction.MultiTransactionStatus ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { boolean = true ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( ) { boolean = false ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Factory static org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( java.lang.String java.lang.String ) { return new org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( java.lang.String + STRING ) { @ java.lang.Override public void void ( TransactionStatus org.springframework.data.transaction.TransactionStatus ) throws org.springframework.data.transaction.TransactionException { throw new java.lang.RuntimeException ( ) ; } @ java.lang.Override public void void ( TransactionStatus org.springframework.data.transaction.TransactionStatus ) throws org.springframework.data.transaction.TransactionException { throw new java.lang.RuntimeException ( ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TransactionStatus org.springframework.data.transaction.TransactionStatus ) throws org.springframework.data.transaction.TransactionException { throw new java.lang.RuntimeException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TransactionStatus org.springframework.data.transaction.TransactionStatus ) throws org.springframework.data.transaction.TransactionException { throw new java.lang.RuntimeException ( ) ; }  <METHOD_END>
<METHOD_START> @ Factory static org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( java.lang.String java.lang.String ) { return new org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager ( java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String + ( boolean ( ) ? STRING : STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.transaction.TransactionStatus org.springframework.data.transaction.TransactionStatus ( TransactionDefinition org.springframework.data.transaction.TransactionDefinition ) throws org.springframework.data.transaction.TransactionException { return new org.springframework.data.transaction.ChainedTransactionManagerTests.TestPlatformTransactionManager.TestTransactionStatus ( org.springframework.data.transaction.TransactionDefinition ) ; }  <METHOD_END>
<METHOD_START> public void void ( TransactionStatus org.springframework.data.transaction.TransactionStatus ) throws org.springframework.data.transaction.TransactionException { java.lang.Long = java.lang.System . long ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( TransactionStatus org.springframework.data.transaction.TransactionStatus ) throws org.springframework.data.transaction.TransactionException { java.lang.Long = java.lang.System . long ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return java.lang.Long != null ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return java.lang.Long != null ; }  <METHOD_END>
<METHOD_START> public java.lang.Long java.lang.Long ( ) { return java.lang.Long ; }  <METHOD_END>
<METHOD_START> public void ( TransactionDefinition org.springframework.data.transaction.TransactionDefinition ) {}  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> public void void ( ) {			}  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> public void void ( ) {			}  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) org.springframework.data.transaction.TransactionException { return null ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) throws org.springframework.data.transaction.TransactionException {			}  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) throws org.springframework.data.transaction.TransactionException {			}  <METHOD_END>
