<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertNotNull ( org.springframework.statemachine.config.common.annotation.ApplicationContext ) ; assertTrue ( org.springframework.statemachine.config.common.annotation.ApplicationContext . containsBean ( STRING ) ) ; SimpleTestConfig org.springframework.statemachine.config.common.annotation.SimpleTestConfig = org.springframework.statemachine.config.common.annotation.ApplicationContext . getBean ( STRING , SimpleTestConfig .class ) ; assertThat ( simpleConfig . simpleData , notNullValue ( ) ) ; assertThat ( simpleConfig . simpleData , is ( STRING ) ) ; assertThat ( simpleConfig . simpleProperties , notNullValue ( ) ) ; assertThat ( simpleConfig . simpleProperties . getProperty ( STRING ) , notNullValue ( ) ) ; assertThat ( simpleConfig . simpleProperties . getProperty ( STRING ) , is ( STRING ) ) ; assertTrue ( org.springframework.statemachine.config.common.annotation.ApplicationContext . containsBean ( STRING ) ) ; ComplexTestConfig org.springframework.statemachine.config.common.annotation.ComplexTestConfig = org.springframework.statemachine.config.common.annotation.ApplicationContext . getBean ( STRING , ComplexTestConfig .class ) ; assertThat ( complexConfig . complexData , notNullValue ( ) ) ; assertThat ( complexConfig . complexData , is ( STRING ) ) ; assertThat ( complexConfig . complexProperties , notNullValue ( ) ) ; assertThat ( complexConfig . complexProperties . getProperty ( STRING ) , notNullValue ( ) ) ; assertThat ( complexConfig . complexProperties . getProperty ( STRING ) , is ( STRING ) ) ; assertThat ( complexConfig . simpleTestConfig , notNullValue ( ) ) ; assertThat ( complexConfig . simpleTestConfig . simpleData , notNullValue ( ) ) ; assertThat ( complexConfig . simpleTestConfig . simpleData , is ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SimpleTestConfigBuilder org.springframework.statemachine.config.common.annotation.SimpleTestConfigBuilder ) throws java.lang.Exception { org.springframework.statemachine.config.common.annotation.SimpleTestConfigBuilder . withProperties ( ) . property ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ComplexTestConfigBuilder org.springframework.statemachine.config.common.annotation.ComplexTestConfigBuilder ) throws java.lang.Exception { org.springframework.statemachine.config.common.annotation.ComplexTestConfigBuilder . withProperties ( ) . property ( STRING , STRING ) ; }  <METHOD_END>
