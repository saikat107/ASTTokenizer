<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( MetricsDropwizardAutoConfiguration .class ) ; DropwizardMetricServices org.springframework.boot.actuate.autoconfigure.DropwizardMetricServices = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( DropwizardMetricServices .class ) ; ReservoirFactory org.springframework.boot.actuate.autoconfigure.ReservoirFactory = ( ReservoirFactory ) ReflectionTestUtils . getField ( org.springframework.boot.actuate.autoconfigure.DropwizardMetricServices , STRING ) ; assertThat ( org.springframework.boot.actuate.autoconfigure.ReservoirFactory . getReservoir ( STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( MetricsDropwizardAutoConfiguration .class , org.springframework.boot.actuate.autoconfigure.MetricsDropwizardAutoConfigurationTests.Config .class ) ; DropwizardMetricServices org.springframework.boot.actuate.autoconfigure.DropwizardMetricServices = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( DropwizardMetricServices .class ) ; ReservoirFactory org.springframework.boot.actuate.autoconfigure.ReservoirFactory = ( ReservoirFactory ) ReflectionTestUtils . getField ( org.springframework.boot.actuate.autoconfigure.DropwizardMetricServices , STRING ) ; assertThat ( org.springframework.boot.actuate.autoconfigure.ReservoirFactory . getReservoir ( STRING ) ) . isInstanceOf ( UniformReservoir .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.ReservoirFactory org.springframework.boot.actuate.autoconfigure.ReservoirFactory ( ) { return new org.springframework.boot.actuate.autoconfigure.MetricsDropwizardAutoConfigurationTests.UniformReservoirFactory ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.actuate.autoconfigure.Reservoir org.springframework.boot.actuate.autoconfigure.Reservoir ( java.lang.String java.lang.String ) { return new UniformReservoir ( ) ; }  <METHOD_END>
