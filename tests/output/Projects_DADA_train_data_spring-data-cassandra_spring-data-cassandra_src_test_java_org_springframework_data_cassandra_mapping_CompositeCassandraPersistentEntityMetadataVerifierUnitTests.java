<METHOD_START> @ Before public void void ( ) java.lang.Exception { org.springframework.data.cassandra.mapping.BasicCassandraMappingContext . setVerifier ( org.springframework.data.cassandra.mapping.CompositeCassandraPersistentEntityMetadataVerifier ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.cassandra.mapping.CompositeCassandraPersistentEntityMetadataVerifier . verify ( org.springframework.data.cassandra.mapping.BasicCassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.CompositeCassandraPersistentEntityMetadataVerifierUnitTests.MyInterface .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.cassandra.mapping.CompositeCassandraPersistentEntityMetadataVerifier . verify ( org.springframework.data.cassandra.mapping.BasicCassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.CompositeCassandraPersistentEntityMetadataVerifierUnitTests.Animal .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.cassandra.mapping.CompositeCassandraPersistentEntityMetadataVerifier . verify ( org.springframework.data.cassandra.mapping.BasicCassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.CompositeCassandraPersistentEntityMetadataVerifierUnitTests.Person .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.cassandra.mapping.CompositeCassandraPersistentEntityMetadataVerifier . verify ( org.springframework.data.cassandra.mapping.BasicCassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.CompositeCassandraPersistentEntityMetadataVerifierUnitTests.NonPersistentClass .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { try { org.springframework.data.cassandra.mapping.CompositeCassandraPersistentEntityMetadataVerifier . verify ( org.springframework.data.cassandra.mapping.BasicCassandraMappingContext . getRequiredPersistentEntity ( org.springframework.data.cassandra.mapping.CompositeCassandraPersistentEntityMetadataVerifierUnitTests.TooManyAnnotations .class ) ) ; fail ( STRING ) ; } catch ( MappingException org.springframework.data.cassandra.mapping.MappingException ) { assertThat ( org.springframework.data.cassandra.mapping.MappingException ) . hasMessageContaining ( STRING ) ; } }  <METHOD_END>
