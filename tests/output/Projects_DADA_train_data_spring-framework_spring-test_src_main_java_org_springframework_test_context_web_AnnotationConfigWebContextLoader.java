<METHOD_START> @ java.lang.Override public void void ( ContextConfigurationAttributes org.springframework.test.context.web.ContextConfigurationAttributes ) { if ( ! org.springframework.test.context.web.ContextConfigurationAttributes . hasClasses ( ) && isGenerateDefaultLocations ( ) ) { org.springframework.test.context.web.ContextConfigurationAttributes . setClasses ( java.lang.Class<?>[] ( org.springframework.test.context.web.ContextConfigurationAttributes . getDeclaringClass ( ) ) ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return AnnotationConfigContextLoaderUtils . detectDefaultConfigurationClasses ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String [] java.lang.String[] ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String ... java.lang.String[] ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String [] java.lang.String[] ( java.lang.Class<?> < ? > java.lang.Class<?> ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( GenericWebApplicationContext org.springframework.test.context.web.GenericWebApplicationContext , WebMergedContextConfiguration org.springframework.test.context.web.WebMergedContextConfiguration ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.test.context.web.WebMergedContextConfiguration . getClasses ( ) ; if ( org.springframework.test.context.web.Log . isDebugEnabled ( ) ) { org.springframework.test.context.web.Log . debug ( STRING + ObjectUtils . nullSafeToString ( java.lang.Class<?>[] ) ) ; } new AnnotatedBeanDefinitionReader ( org.springframework.test.context.web.GenericWebApplicationContext ) . register ( java.lang.Class<?>[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( WebMergedContextConfiguration org.springframework.test.context.web.WebMergedContextConfiguration ) { if ( org.springframework.test.context.web.WebMergedContextConfiguration . hasLocations ( ) ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( STRING + STRING , org.springframework.test.context.web.WebMergedContextConfiguration . getTestClass ( ) . getName ( ) , ObjectUtils . nullSafeToString ( org.springframework.test.context.web.WebMergedContextConfiguration . getLocations ( ) ) , java.lang.Class<? extends org.springframework.test.context.web.AnnotationConfigWebContextLoader> ( ) . java.lang.String ( ) ) ; org.springframework.test.context.web.Log . error ( java.lang.String ) ; throw new java.lang.IllegalStateException ( java.lang.String ) ; } }  <METHOD_END>
