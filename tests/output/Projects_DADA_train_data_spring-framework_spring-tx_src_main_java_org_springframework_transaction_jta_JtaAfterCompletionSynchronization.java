<METHOD_START> public void ( java.util.List<org.springframework.transaction.jta.TransactionSynchronization> < TransactionSynchronization > java.util.List<org.springframework.transaction.jta.TransactionSynchronization> ) { this . java.util.List<org.springframework.transaction.jta.TransactionSynchronization> = java.util.List<org.springframework.transaction.jta.TransactionSynchronization> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { switch ( int ) { case Status . STATUS_COMMITTED : try { TransactionSynchronizationUtils . invokeAfterCommit ( this . java.util.List<org.springframework.transaction.jta.TransactionSynchronization> ) ; } finally { TransactionSynchronizationUtils . invokeAfterCompletion ( this . java.util.List<org.springframework.transaction.jta.TransactionSynchronization> , TransactionSynchronization . STATUS_COMMITTED ) ; } break; case Status . STATUS_ROLLEDBACK : TransactionSynchronizationUtils . invokeAfterCompletion ( this . java.util.List<org.springframework.transaction.jta.TransactionSynchronization> , TransactionSynchronization . STATUS_ROLLED_BACK ) ; break; default: TransactionSynchronizationUtils . invokeAfterCompletion ( this . java.util.List<org.springframework.transaction.jta.TransactionSynchronization> , TransactionSynchronization . STATUS_UNKNOWN ) ; } }  <METHOD_END>
