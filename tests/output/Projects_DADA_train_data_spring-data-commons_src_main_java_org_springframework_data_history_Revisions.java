<METHOD_START> private void ( java.util.List<? extends org.springframework.data.history.Revision<N,T>> < ? extends Revision < N , T > > java.util.List<? extends org.springframework.data.history.Revision<N,T>> ) { this( java.util.List<> , true ); }  <METHOD_END>
<METHOD_START> private void ( java.util.List<? extends org.springframework.data.history.Revision<N,T>> < ? extends Revision < N , T > > java.util.List<? extends org.springframework.data.history.Revision<N,T>> , boolean boolean ) { Assert . notNull ( java.util.List<> , STRING ) ; this . java.util.List<org.springframework.data.history.Revision<N,T>> = java.util.List<> . java.util.stream.Stream<> ( ) . java.util.stream.Stream<> ( boolean ? java.util.Comparator<org.springframework.data.history.Revision<N,T>> : java.util.Comparator<org.springframework.data.history.Revision<N,T>> . reversed ( ) ) . collect ( StreamUtils . toUnmodifiableList ( ) ) ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public static < N extends java.lang.Number & java.lang.Comparable<N> < N > , T > org.springframework.data.history.Revisions<N,T> < N , T > org.springframework.data.history.Revisions<N,T> ( java.util.List<? extends org.springframework.data.history.Revision<N,T>> < ? extends Revision < N , T > > java.util.List<? extends org.springframework.data.history.Revision<N,T>> ) { return new org.springframework.data.history.Revisions <> ( java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> public static < N extends java.lang.Number & java.lang.Comparable<N> < N > , T > org.springframework.data.history.Revisions<N,T> < N , T > org.springframework.data.history.Revisions<N,T> ( ) { return new org.springframework.data.history.Revisions<N,T> <> ( java.util.Collections . java.util.List<org.springframework.data.history.Revision<N,T>> ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.history.Revision<N,T> < N , T > org.springframework.data.history.Revision<N,T> ( ) { int int = boolean ? java.util.List<org.springframework.data.history.Revision<N,T>> . size ( ) - NUMBER : NUMBER ; return java.util.List<org.springframework.data.history.Revision<N,T>> . get ( int ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.history.Revisions<N,T> < N , T > org.springframework.data.history.Revisions<N,T> ( ) { return new org.springframework.data.history.Revisions <> ( java.util.List<org.springframework.data.history.Revision<N,T>> , ! boolean ) ; }  <METHOD_END>
<METHOD_START> public java.util.Iterator<org.springframework.data.history.Revision<N,T>> < Revision < N , T > > java.util.Iterator<org.springframework.data.history.Revision<N,T>> ( ) { return java.util.List<org.springframework.data.history.Revision<N,T>> . iterator ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.data.history.Revision<N,T>> < Revision < N , T > > java.util.List<org.springframework.data.history.Revision<N,T>> ( ) { return java.util.Collections . java.util.List<org.springframework.data.history.Revision<N,T>> ( java.util.List<org.springframework.data.history.Revision<N,T>> ) ; }  <METHOD_END>
