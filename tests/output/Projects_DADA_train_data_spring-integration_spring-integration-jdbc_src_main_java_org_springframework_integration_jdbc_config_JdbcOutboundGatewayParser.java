<METHOD_START> @ java.lang.Override protected org.springframework.integration.jdbc.config.BeanDefinitionBuilder org.springframework.integration.jdbc.config.BeanDefinitionBuilder ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.jdbc.config.ParserContext ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; if ( ( boolean && boolean ) || ( ! boolean && ! boolean ) ) { org.springframework.integration.jdbc.config.ParserContext . getReaderContext ( ) . error ( STRING + STRING , org.w3c.dom.Element ) ; } java.lang.String java.lang.String = IntegrationNamespaceUtils . getTextFromAttributeOrNestedElement ( org.w3c.dom.Element , STRING , org.springframework.integration.jdbc.config.ParserContext ) ; java.lang.String java.lang.String = IntegrationNamespaceUtils . getTextFromAttributeOrNestedElement ( org.w3c.dom.Element , STRING , org.springframework.integration.jdbc.config.ParserContext ) ; BeanDefinitionBuilder org.springframework.integration.jdbc.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( JdbcOutboundGateway .class ) ; if ( boolean ) { org.springframework.integration.jdbc.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } else { org.springframework.integration.jdbc.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } org.springframework.integration.jdbc.config.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; org.springframework.integration.jdbc.config.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.jdbc.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.jdbc.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.jdbc.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.jdbc.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.jdbc.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.jdbc.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.jdbc.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.jdbc.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.jdbc.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } return org.springframework.integration.jdbc.config.BeanDefinitionBuilder ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
