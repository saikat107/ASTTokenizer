<METHOD_START> @ Test public void void ( ) { QueueChannel org.springframework.integration.scripting.config.jsr223.QueueChannel = new QueueChannel ( ) ; org.springframework.integration.scripting.config.jsr223.QueueChannel . setBeanName ( STRING ) ; Message < ? > org.springframework.integration.scripting.config.jsr223.Message<?> = MessageBuilder . withPayload ( STRING ) . setReplyChannel ( org.springframework.integration.scripting.config.jsr223.QueueChannel ) . setHeader ( STRING , STRING ) . build ( ) ; Message < ? > org.springframework.integration.scripting.config.jsr223.Message<?> = MessageBuilder . withPayload ( STRING ) . setReplyChannel ( org.springframework.integration.scripting.config.jsr223.QueueChannel ) . setHeader ( STRING , STRING ) . build ( ) ; this . org.springframework.integration.scripting.config.jsr223.MessageChannel . send ( org.springframework.integration.scripting.config.jsr223.Message<> ) ; this . org.springframework.integration.scripting.config.jsr223.MessageChannel . send ( org.springframework.integration.scripting.config.jsr223.Message<> ) ; assertEquals ( STRING , org.springframework.integration.scripting.config.jsr223.QueueChannel . receive ( NUMBER ) . getPayload ( ) ) ; assertNull ( org.springframework.integration.scripting.config.jsr223.QueueChannel . receive ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { QueueChannel org.springframework.integration.scripting.config.jsr223.QueueChannel = new QueueChannel ( ) ; org.springframework.integration.scripting.config.jsr223.QueueChannel . setBeanName ( STRING ) ; Message < ? > org.springframework.integration.scripting.config.jsr223.Message<?> = MessageBuilder . withPayload ( STRING ) . setReplyChannel ( org.springframework.integration.scripting.config.jsr223.QueueChannel ) . build ( ) ; Message < ? > org.springframework.integration.scripting.config.jsr223.Message<?> = MessageBuilder . withPayload ( STRING ) . setReplyChannel ( org.springframework.integration.scripting.config.jsr223.QueueChannel ) . build ( ) ; this . org.springframework.integration.scripting.config.jsr223.MessageChannel . send ( org.springframework.integration.scripting.config.jsr223.Message<> ) ; this . org.springframework.integration.scripting.config.jsr223.MessageChannel . send ( org.springframework.integration.scripting.config.jsr223.Message<> ) ; Message < ? > org.springframework.integration.scripting.config.jsr223.Message<?> = org.springframework.integration.scripting.config.jsr223.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.scripting.config.jsr223.Message<> ) ; assertEquals ( STRING , org.springframework.integration.scripting.config.jsr223.Message<> . getPayload ( ) ) ; assertEquals ( org.springframework.integration.scripting.config.jsr223.Message<> , org.springframework.integration.scripting.config.jsr223.Message<> ) ; assertNull ( org.springframework.integration.scripting.config.jsr223.QueueChannel . receive ( NUMBER ) ) ; }  <METHOD_END>
