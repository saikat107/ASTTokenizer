<METHOD_START> public void ( java.util.concurrent.Executor java.util.concurrent.Executor , ErrorHandler org.springframework.integration.util.ErrorHandler ) { Assert . notNull ( java.util.concurrent.Executor , STRING ) ; Assert . notNull ( org.springframework.integration.util.ErrorHandler , STRING ) ; this . java.util.concurrent.Executor = java.util.concurrent.Executor ; this . org.springframework.integration.util.ErrorHandler = org.springframework.integration.util.ErrorHandler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Runnable java.lang.Runnable ) { this . java.util.concurrent.Executor . void ( ( ) { try { java.lang.Runnable . void ( ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { org.springframework.integration.util.ErrorHandlingTaskExecutor .this . org.springframework.integration.util.ErrorHandler . handleError ( java.lang.Throwable ) ; } } ) ; }  <METHOD_END>
