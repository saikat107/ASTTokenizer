<METHOD_START> public void void ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ) { this . java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ) { this . java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { if ( java.lang.Class<> != null ) { org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata = org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( java.lang.Class<> ) ; org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata . void ( org.springframework.beans.factory.annotation.RootBeanDefinition ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.beans.factory.annotation.BeansException { org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata = org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; try { org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata . void ( java.lang.Object , java.lang.String ) ; } catch ( java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException ) { throw new BeanCreationException ( java.lang.String , STRING , java.lang.reflect.InvocationTargetException . java.lang.Throwable ( ) ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { throw new BeanCreationException ( java.lang.String , STRING , java.lang.Throwable ) ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.beans.factory.annotation.BeansException { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.beans.factory.annotation.BeansException { org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata = org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; try { org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata . void ( java.lang.Object , java.lang.String ) ; } catch ( java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException ) { java.lang.String java.lang.String = STRING + java.lang.String + STRING ; if ( org.springframework.beans.factory.annotation.Log . isDebugEnabled ( ) ) { org.springframework.beans.factory.annotation.Log . warn ( java.lang.String , java.lang.reflect.InvocationTargetException . java.lang.Throwable ( ) ) ; } else { org.springframework.beans.factory.annotation.Log . warn ( java.lang.String + STRING + java.lang.reflect.InvocationTargetException . java.lang.Throwable ( ) ) ; } } catch ( java.lang.Throwable java.lang.Throwable ) { org.springframework.beans.factory.annotation.Log . error ( STRING + java.lang.String + STRING , java.lang.Throwable ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) . boolean ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( java.lang.Class<?> < ? > java.lang.Class<?> ) { if ( this . java.util.Map<java.lang.Class<?>,org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata> == null ) { return org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( java.lang.Class<> ) ; } org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata = this . java.util.Map<java.lang.Class<?>,org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata> . org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( java.lang.Class<> ) ; if ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata == null ) { synchronized ( this . java.util.Map<java.lang.Class<?>,org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata> ) { org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata = this . java.util.Map<java.lang.Class<?>,org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata> . org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( java.lang.Class<> ) ; if ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata == null ) { org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata = org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( java.lang.Class<> ) ; this . java.util.Map<java.lang.Class<?>,org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata> . org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( java.lang.Class<> , org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ) ; } return org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ; } } return org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ; }  <METHOD_END>
<METHOD_START> private org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( final java.lang.Class<?> < ? > java.lang.Class<?> ) { final boolean boolean = org.springframework.beans.factory.annotation.Log . isDebugEnabled ( ) ; java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> < org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement > java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = new java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> <> ( ) ; java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> < org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement > java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = new java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> <> ( ) ; java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<> ; do { final java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> < org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement > java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = new java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> <> ( ) ; final java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> < org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement > java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = new java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> <> ( ) ; ReflectionUtils . doWithLocalMethods ( java.lang.Class<> , new ReflectionUtils . ReflectionUtils ( ) { @ java.lang.Override public void void ( java.lang.reflect.Method java.lang.reflect.Method ) throws java.lang.IllegalArgumentException , java.lang.IllegalAccessException { if ( java.lang.Class<> != null ) { if ( java.lang.reflect.Method . getAnnotation ( java.lang.Class<> ) != null ) { org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement = new org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ( java.lang.reflect.Method ) ; java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . boolean ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ) ; if ( boolean ) { org.springframework.beans.factory.annotation.Log . debug ( STRING + java.lang.Class<> . java.lang.String ( ) + STRING + java.lang.reflect.Method ) ; } } } if ( java.lang.Class<> != null ) { if ( java.lang.reflect.Method . getAnnotation ( java.lang.Class<> ) != null ) { java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . boolean ( new org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ( java.lang.reflect.Method ) ) ; if ( boolean ) { org.springframework.beans.factory.annotation.Log . debug ( STRING + java.lang.Class<> . java.lang.String ( ) + STRING + java.lang.reflect.Method ) ; } } } } } ) ; java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . boolean ( NUMBER , java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ) ; java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . boolean ( java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ) ; java.lang.Class<?> = java.lang.Class<> . java.lang.Class<? super > ( ) ; } while ( java.lang.Class<> != null && java.lang.Class<> != java.lang.Object .class ); return new org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata ( java.lang.Class<> , java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> , java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.reflect.Method java.lang.reflect.Method ) throws java.lang.IllegalArgumentException , java.lang.IllegalAccessException { if ( java.lang.Class<> != null ) { if ( java.lang.reflect.Method . getAnnotation ( java.lang.Class<> ) != null ) { org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement = new org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ( java.lang.reflect.Method ) ; java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . boolean ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ) ; if ( boolean ) { org.springframework.beans.factory.annotation.Log . debug ( STRING + java.lang.Class<> . java.lang.String ( ) + STRING + java.lang.reflect.Method ) ; } } } if ( java.lang.Class<> != null ) { if ( java.lang.reflect.Method . getAnnotation ( java.lang.Class<> ) != null ) { java.util.LinkedList<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . boolean ( new org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ( java.lang.reflect.Method ) ) ; if ( boolean ) { org.springframework.beans.factory.annotation.Log . debug ( STRING + java.lang.Class<> . java.lang.String ( ) + STRING + java.lang.reflect.Method ) ; } } } }  <METHOD_END>
<METHOD_START> private void void ( java.io.ObjectInputStream java.io.ObjectInputStream ) throws java.io.IOException , java.lang.ClassNotFoundException { java.io.ObjectInputStream . void ( ) ; this . org.springframework.beans.factory.annotation.Log = LogFactory . getLog ( java.lang.Class<? extends org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor> ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> < org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement > java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> , java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> < org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement > java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ) { this . java.lang.Class<?> = java.lang.Class<> ; this . java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ; this . java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ; }  <METHOD_END>
<METHOD_START> public void void ( RootBeanDefinition org.springframework.beans.factory.annotation.RootBeanDefinition ) { java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> < org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement > java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = new java.util.LinkedHashSet<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> <> ( this . java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . int ( ) ) ; for ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement : this . java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ) { java.lang.String java.lang.String = org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement . java.lang.String ( ) ; if ( ! org.springframework.beans.factory.annotation.RootBeanDefinition . isExternallyManagedInitMethod ( java.lang.String ) ) { org.springframework.beans.factory.annotation.RootBeanDefinition . registerExternallyManagedInitMethod ( java.lang.String ) ; java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . boolean ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ) ; if ( org.springframework.beans.factory.annotation.Log . isDebugEnabled ( ) ) { org.springframework.beans.factory.annotation.Log . debug ( STRING + this . java.lang.Class<> . java.lang.String ( ) + STRING + org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ) ; } } } java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> < org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement > java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = new java.util.LinkedHashSet<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> <> ( this . java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . int ( ) ) ; for ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement : this . java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ) { java.lang.String java.lang.String = org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement . java.lang.String ( ) ; if ( ! org.springframework.beans.factory.annotation.RootBeanDefinition . isExternallyManagedDestroyMethod ( java.lang.String ) ) { org.springframework.beans.factory.annotation.RootBeanDefinition . registerExternallyManagedDestroyMethod ( java.lang.String ) ; java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . boolean ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ) ; if ( org.springframework.beans.factory.annotation.Log . isDebugEnabled ( ) ) { org.springframework.beans.factory.annotation.Log . debug ( STRING + this . java.lang.Class<> . java.lang.String ( ) + STRING + org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ) ; } } } this . java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ; this . java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws java.lang.Throwable { java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> < org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement > java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = ( this . java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> != null ? this . java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> : this . java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ) ; if ( ! java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . boolean ( ) ) { boolean boolean = org.springframework.beans.factory.annotation.Log . isDebugEnabled ( ) ; for ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement : java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ) { if ( boolean ) { org.springframework.beans.factory.annotation.Log . debug ( STRING + java.lang.String + STRING + org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement . java.lang.reflect.Method ( ) ) ; } org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement . void ( java.lang.Object ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws java.lang.Throwable { java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> < org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement > java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = ( this . java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> != null ? this . java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> : this . java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ) ; if ( ! java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . boolean ( ) ) { boolean boolean = org.springframework.beans.factory.annotation.Log . isDebugEnabled ( ) ; for ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement : java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ) { if ( boolean ) { org.springframework.beans.factory.annotation.Log . debug ( STRING + java.lang.String + STRING + org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement . java.lang.reflect.Method ( ) ) ; } org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement . void ( java.lang.Object ) ; } } }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> < org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement > java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> = ( this . java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> != null ? this . java.util.Set<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> : this . java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> ) ; return ! java.util.Collection<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.reflect.Method java.lang.reflect.Method ) { if ( java.lang.reflect.Method . int ( ) != NUMBER ) { throw new java.lang.IllegalStateException ( STRING + java.lang.reflect.Method ) ; } this . java.lang.reflect.Method = java.lang.reflect.Method ; this . java.lang.String = ( java.lang.reflect.Modifier . boolean ( java.lang.reflect.Method . int ( ) ) ? ClassUtils . getQualifiedMethodName ( java.lang.reflect.Method ) : java.lang.reflect.Method . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.reflect.Method java.lang.reflect.Method ( ) { return this . java.lang.reflect.Method ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) throws java.lang.Throwable { ReflectionUtils . makeAccessible ( this . java.lang.reflect.Method ) ; this . java.lang.reflect.Method . java.lang.Object ( java.lang.Object , ( java.lang.Object [] ) null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ) ) { return false ; } org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement = ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement ) java.lang.Object ; return ( this . java.lang.String . boolean ( org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleElement . java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.lang.String . int ( ) ; }  <METHOD_END>
