<METHOD_START> void ( DefaultRepositorySystemSession org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession , java.io.PrintStream java.io.PrintStream ) { this . java.io.PrintStream = java.io.PrintStream ; org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession . setTransferListener ( new AbstractTransferListener ( ) { @ java.lang.Override public void void ( TransferEvent org.springframework.boot.cli.compiler.grape.TransferEvent )					throws org.springframework.boot.cli.compiler.grape.TransferCancelledException { void ( ) ; } @ java.lang.Override public void void ( TransferEvent org.springframework.boot.cli.compiler.grape.TransferEvent )					throws org.springframework.boot.cli.compiler.grape.TransferCancelledException { void ( ) ; } } ) ; org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession . setRepositoryListener ( new AbstractRepositoryListener ( ) { @ java.lang.Override public void void ( RepositoryEvent org.springframework.boot.cli.compiler.grape.RepositoryEvent ) { void ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TransferEvent org.springframework.boot.cli.compiler.grape.TransferEvent )					throws org.springframework.boot.cli.compiler.grape.TransferCancelledException { void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TransferEvent org.springframework.boot.cli.compiler.grape.TransferEvent )					throws org.springframework.boot.cli.compiler.grape.TransferCancelledException { void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( RepositoryEvent org.springframework.boot.cli.compiler.grape.RepositoryEvent ) { void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( ! this . boolean && java.lang.System . long ( ) - this . long > long ) { if ( ! this . boolean ) { this . boolean = true ; this . java.io.PrintStream . void ( STRING ) ; this . long = java.lang.System . long ( ) ; } else if ( java.lang.System . long ( ) - this . long > long ) { this . java.io.PrintStream . void ( STRING ) ; this . long = java.lang.System . long ( ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . boolean && ! this . boolean ) { this . boolean = true ; java.lang.System . java.io.PrintStream . void ( STRING ) ; } }  <METHOD_END>
