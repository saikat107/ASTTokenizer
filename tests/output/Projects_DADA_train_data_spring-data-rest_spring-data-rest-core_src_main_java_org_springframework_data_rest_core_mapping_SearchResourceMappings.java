<METHOD_START> public void ( java.util.List<org.springframework.data.rest.core.mapping.MethodResourceMapping> < MethodResourceMapping > java.util.List<org.springframework.data.rest.core.mapping.MethodResourceMapping> ) { Assert . notNull ( java.util.List<org.springframework.data.rest.core.mapping.MethodResourceMapping> , STRING ) ; this . java.util.Map<org.springframework.data.rest.core.mapping.Path,org.springframework.data.rest.core.mapping.MethodResourceMapping> = new java.util.HashMap<org.springframework.data.rest.core.mapping.Path,org.springframework.data.rest.core.mapping.MethodResourceMapping> < Path , MethodResourceMapping > ( java.util.List<org.springframework.data.rest.core.mapping.MethodResourceMapping> . size ( ) ) ; for ( MethodResourceMapping org.springframework.data.rest.core.mapping.MethodResourceMapping : java.util.List<org.springframework.data.rest.core.mapping.MethodResourceMapping> ) { MethodResourceMapping org.springframework.data.rest.core.mapping.MethodResourceMapping = this . java.util.Map<org.springframework.data.rest.core.mapping.Path,org.springframework.data.rest.core.mapping.MethodResourceMapping> . get ( org.springframework.data.rest.core.mapping.MethodResourceMapping . getPath ( ) ) ; if ( org.springframework.data.rest.core.mapping.MethodResourceMapping != null ) { throw new java.lang.IllegalStateException ( java.lang.String . java.lang.String ( java.lang.String , org.springframework.data.rest.core.mapping.MethodResourceMapping . getMethod ( ) , org.springframework.data.rest.core.mapping.MethodResourceMapping . getMethod ( ) , org.springframework.data.rest.core.mapping.MethodResourceMapping . getPath ( ) ) ) ; } this . java.util.Map<org.springframework.data.rest.core.mapping.Path,org.springframework.data.rest.core.mapping.MethodResourceMapping> . put ( org.springframework.data.rest.core.mapping.MethodResourceMapping . getPath ( ) , org.springframework.data.rest.core.mapping.MethodResourceMapping ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.reflect.Method java.lang.reflect.Method ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; MethodResourceMapping org.springframework.data.rest.core.mapping.MethodResourceMapping = java.util.Map<org.springframework.data.rest.core.mapping.Path,org.springframework.data.rest.core.mapping.MethodResourceMapping> . get ( new Path ( java.lang.String ) ) ; return org.springframework.data.rest.core.mapping.MethodResourceMapping == null ? null : org.springframework.data.rest.core.mapping.MethodResourceMapping . getMethod ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Iterable<org.springframework.data.rest.core.mapping.MethodResourceMapping> < MethodResourceMapping > java.lang.Iterable<org.springframework.data.rest.core.mapping.MethodResourceMapping> ( ) { java.util.Set<org.springframework.data.rest.core.mapping.MethodResourceMapping> < MethodResourceMapping > java.util.Set<org.springframework.data.rest.core.mapping.MethodResourceMapping> = new java.util.HashSet<org.springframework.data.rest.core.mapping.MethodResourceMapping> < MethodResourceMapping > ( java.util.Map<org.springframework.data.rest.core.mapping.Path,org.springframework.data.rest.core.mapping.MethodResourceMapping> . values ( ) . size ( ) ) ; for ( MethodResourceMapping org.springframework.data.rest.core.mapping.MethodResourceMapping : this ) { if ( org.springframework.data.rest.core.mapping.MethodResourceMapping . isExported ( ) ) { java.util.Set<org.springframework.data.rest.core.mapping.MethodResourceMapping> . add ( org.springframework.data.rest.core.mapping.MethodResourceMapping ) ; } } return java.util.Set<org.springframework.data.rest.core.mapping.MethodResourceMapping> ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.core.mapping.MethodResourceMapping org.springframework.data.rest.core.mapping.MethodResourceMapping ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; for ( MethodResourceMapping org.springframework.data.rest.core.mapping.MethodResourceMapping : this ) { if ( org.springframework.data.rest.core.mapping.MethodResourceMapping . isExported ( ) && org.springframework.data.rest.core.mapping.MethodResourceMapping . getRel ( ) . equals ( java.lang.String ) ) { return org.springframework.data.rest.core.mapping.MethodResourceMapping ; } } return null ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.core.mapping.MethodResourceMapping org.springframework.data.rest.core.mapping.MethodResourceMapping ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; for ( MethodResourceMapping org.springframework.data.rest.core.mapping.MethodResourceMapping : this ) { if ( org.springframework.data.rest.core.mapping.MethodResourceMapping . isExported ( ) && org.springframework.data.rest.core.mapping.MethodResourceMapping . getPath ( ) . matches ( java.lang.String ) ) { return org.springframework.data.rest.core.mapping.MethodResourceMapping ; } } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.Path org.springframework.data.rest.core.mapping.Path ( ) { return org.springframework.data.rest.core.mapping.Path ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ! java.util.Map<org.springframework.data.rest.core.mapping.Path,org.springframework.data.rest.core.mapping.MethodResourceMapping> . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.ResourceDescription org.springframework.data.rest.core.mapping.ResourceDescription ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.data.rest.core.mapping.MethodResourceMapping> < MethodResourceMapping > java.util.Iterator<org.springframework.data.rest.core.mapping.MethodResourceMapping> ( ) { return java.util.Map<org.springframework.data.rest.core.mapping.Path,org.springframework.data.rest.core.mapping.MethodResourceMapping> . values ( ) . iterator ( ) ; }  <METHOD_END>
