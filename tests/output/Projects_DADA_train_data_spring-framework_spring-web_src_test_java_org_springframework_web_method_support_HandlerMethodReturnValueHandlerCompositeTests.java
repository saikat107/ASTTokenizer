<METHOD_START> @ Before public void void ( ) java.lang.Exception { this . org.springframework.web.method.support.MethodParameter = new MethodParameter ( java.lang.Class<? extends org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests> ( ) . java.lang.reflect.Method ( STRING ) , - NUMBER ) ; this . org.springframework.web.method.support.MethodParameter = new MethodParameter ( java.lang.Class<? extends org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests> ( ) . java.lang.reflect.Method ( STRING ) , - NUMBER ) ; this . org.springframework.web.method.support.HandlerMethodReturnValueHandler = mock ( HandlerMethodReturnValueHandler .class ) ; when ( this . org.springframework.web.method.support.HandlerMethodReturnValueHandler . supportsReturnType ( this . org.springframework.web.method.support.MethodParameter ) ) . thenReturn ( true ) ; this . org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite = new HandlerMethodReturnValueHandlerComposite ( ) ; this . org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite . addHandler ( this . org.springframework.web.method.support.HandlerMethodReturnValueHandler ) ; org.springframework.web.method.support.ModelAndViewContainer = new ModelAndViewContainer ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertTrue ( this . org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite . supportsReturnType ( this . org.springframework.web.method.support.MethodParameter ) ) ; assertFalse ( this . org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite . supportsReturnType ( this . org.springframework.web.method.support.MethodParameter ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite . handleReturnValue ( NUMBER , this . org.springframework.web.method.support.MethodParameter , this . org.springframework.web.method.support.ModelAndViewContainer , null ) ; verify ( this . org.springframework.web.method.support.HandlerMethodReturnValueHandler ) . handleReturnValue ( NUMBER , this . org.springframework.web.method.support.MethodParameter , this . org.springframework.web.method.support.ModelAndViewContainer , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { HandlerMethodReturnValueHandler org.springframework.web.method.support.HandlerMethodReturnValueHandler = mock ( HandlerMethodReturnValueHandler .class ) ; when ( org.springframework.web.method.support.HandlerMethodReturnValueHandler . supportsReturnType ( this . org.springframework.web.method.support.MethodParameter ) ) . thenReturn ( true ) ; this . org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite . handleReturnValue ( NUMBER , this . org.springframework.web.method.support.MethodParameter , this . org.springframework.web.method.support.ModelAndViewContainer , null ) ; verify ( this . org.springframework.web.method.support.HandlerMethodReturnValueHandler ) . handleReturnValue ( NUMBER , this . org.springframework.web.method.support.MethodParameter , this . org.springframework.web.method.support.ModelAndViewContainer , null ) ; verifyNoMoreInteractions ( org.springframework.web.method.support.HandlerMethodReturnValueHandler ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests.Promise<java.lang.Integer> < java.lang.Integer > org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests.Promise<java.lang.Integer> = new org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests.Promise<java.lang.Integer> <> ( ) ; MethodParameter org.springframework.web.method.support.MethodParameter = new MethodParameter ( java.lang.Class<? extends org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests> ( ) . java.lang.reflect.Method ( STRING ) , - NUMBER ) ; HandlerMethodReturnValueHandler org.springframework.web.method.support.HandlerMethodReturnValueHandler = mock ( HandlerMethodReturnValueHandler .class ) ; when ( org.springframework.web.method.support.HandlerMethodReturnValueHandler . supportsReturnType ( org.springframework.web.method.support.MethodParameter ) ) . thenReturn ( true ) ; this . org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite . addHandler ( org.springframework.web.method.support.HandlerMethodReturnValueHandler ) ; AsyncHandlerMethodReturnValueHandler org.springframework.web.method.support.AsyncHandlerMethodReturnValueHandler = mock ( AsyncHandlerMethodReturnValueHandler .class ) ; when ( org.springframework.web.method.support.AsyncHandlerMethodReturnValueHandler . supportsReturnType ( org.springframework.web.method.support.MethodParameter ) ) . thenReturn ( true ) ; when ( org.springframework.web.method.support.AsyncHandlerMethodReturnValueHandler . isAsyncReturnValue ( org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests.Promise<java.lang.Integer> , org.springframework.web.method.support.MethodParameter ) ) . thenReturn ( true ) ; this . org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite . addHandler ( org.springframework.web.method.support.AsyncHandlerMethodReturnValueHandler ) ; this . org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite . handleReturnValue ( org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests.Promise<java.lang.Integer> , org.springframework.web.method.support.MethodParameter , this . org.springframework.web.method.support.ModelAndViewContainer , null ) ; verify ( org.springframework.web.method.support.AsyncHandlerMethodReturnValueHandler ) . isAsyncReturnValue ( org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests.Promise<java.lang.Integer> , org.springframework.web.method.support.MethodParameter ) ; verify ( org.springframework.web.method.support.AsyncHandlerMethodReturnValueHandler ) . supportsReturnType ( org.springframework.web.method.support.MethodParameter ) ; verify ( org.springframework.web.method.support.AsyncHandlerMethodReturnValueHandler ) . handleReturnValue ( org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests.Promise<java.lang.Integer> , org.springframework.web.method.support.MethodParameter , this . org.springframework.web.method.support.ModelAndViewContainer , null ) ; verifyNoMoreInteractions ( org.springframework.web.method.support.AsyncHandlerMethodReturnValueHandler ) ; verifyNoMoreInteractions ( org.springframework.web.method.support.HandlerMethodReturnValueHandler ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { this . org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite . handleReturnValue ( STRING , this . org.springframework.web.method.support.MethodParameter , null , null ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Integer java.lang.Integer ( ) { return null ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests.Promise<java.lang.Integer> < java.lang.Integer > org.springframework.web.method.support.HandlerMethodReturnValueHandlerCompositeTests.Promise<java.lang.Integer> ( ) { return null ; }  <METHOD_END>
