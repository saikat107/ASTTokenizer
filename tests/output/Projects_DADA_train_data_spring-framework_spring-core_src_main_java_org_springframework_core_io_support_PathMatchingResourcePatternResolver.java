<METHOD_START> public void ( ) { this . org.springframework.core.io.support.ResourceLoader = new DefaultResourceLoader ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ResourceLoader org.springframework.core.io.support.ResourceLoader ) { Assert . notNull ( org.springframework.core.io.support.ResourceLoader , STRING ) ; this . org.springframework.core.io.support.ResourceLoader = org.springframework.core.io.support.ResourceLoader ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . org.springframework.core.io.support.ResourceLoader = new DefaultResourceLoader ( java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.core.io.support.ResourceLoader org.springframework.core.io.support.ResourceLoader ( ) { return this . org.springframework.core.io.support.ResourceLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.ClassLoader java.lang.ClassLoader ( ) { return org.springframework.core.io.support.ResourceLoader ( ) . getClassLoader ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( PathMatcher org.springframework.core.io.support.PathMatcher ) { Assert . notNull ( org.springframework.core.io.support.PathMatcher , STRING ) ; this . org.springframework.core.io.support.PathMatcher = org.springframework.core.io.support.PathMatcher ; }  <METHOD_END>
<METHOD_START> public org.springframework.core.io.support.PathMatcher org.springframework.core.io.support.PathMatcher ( ) { return this . org.springframework.core.io.support.PathMatcher ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.core.io.support.Resource org.springframework.core.io.support.Resource ( java.lang.String java.lang.String ) { return org.springframework.core.io.support.ResourceLoader ( ) . getResource ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.core.io.support.Resource [] org.springframework.core.io.support.Resource[] ( java.lang.String java.lang.String ) throws java.io.IOException { Assert . notNull ( java.lang.String , STRING ) ; if ( java.lang.String . boolean ( CLASSPATH_ALL_URL_PREFIX ) ) { if ( org.springframework.core.io.support.PathMatcher ( ) . isPattern ( java.lang.String . java.lang.String ( CLASSPATH_ALL_URL_PREFIX . length ( ) ) ) ) { return org.springframework.core.io.support.Resource[] ( java.lang.String ) ; } else { return org.springframework.core.io.support.Resource[] ( java.lang.String . java.lang.String ( CLASSPATH_ALL_URL_PREFIX . length ( ) ) ) ; } } else { int int = ( java.lang.String . boolean ( STRING ) ? java.lang.String . int ( STRING ) + NUMBER : java.lang.String . int ( STRING ) + NUMBER ) ; if ( org.springframework.core.io.support.PathMatcher ( ) . isPattern ( java.lang.String . java.lang.String ( int ) ) ) { return org.springframework.core.io.support.Resource[] ( java.lang.String ) ; } else { return new Resource [] { org.springframework.core.io.support.ResourceLoader ( ) . getResource ( java.lang.String ) } ; } } }  <METHOD_END>
<METHOD_START> protected org.springframework.core.io.support.Resource [] org.springframework.core.io.support.Resource[] ( java.lang.String java.lang.String ) throws java.io.IOException { java.lang.String java.lang.String = java.lang.String ; if ( java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER ) ; } java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> = java.util.Set<org.springframework.core.io.support.Resource> ( java.lang.String ) ; if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.lang.String + STRING + java.util.Set<org.springframework.core.io.support.Resource> ) ; } return java.util.Set<org.springframework.core.io.support.Resource> . toArray ( new Resource [ java.util.Set<org.springframework.core.io.support.Resource> . size ( ) ] ) ; }  <METHOD_END>
<METHOD_START> protected java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> ( java.lang.String java.lang.String ) throws java.io.IOException { java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> = new java.util.LinkedHashSet<org.springframework.core.io.support.Resource> <> ( NUMBER ) ; java.lang.ClassLoader java.lang.ClassLoader = java.lang.ClassLoader ( ) ; java.util.Enumeration<java.net.URL> < java.net.URL > java.util.Enumeration<java.net.URL> = ( java.lang.ClassLoader != null ? java.lang.ClassLoader . java.util.Enumeration<java.net.URL> ( java.lang.String ) : java.lang.ClassLoader . java.util.Enumeration<java.net.URL> ( java.lang.String ) ) ; while ( java.util.Enumeration<java.net.URL> . boolean ( ) ) { java.net.URL java.net.URL = java.util.Enumeration<java.net.URL> . java.net.URL ( ) ; java.util.Set<org.springframework.core.io.support.Resource> . add ( org.springframework.core.io.support.Resource ( java.net.URL ) ) ; } if ( STRING . boolean ( java.lang.String ) ) { void ( java.lang.ClassLoader , java.util.Set<org.springframework.core.io.support.Resource> ) ; } return java.util.Set<org.springframework.core.io.support.Resource> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.core.io.support.Resource org.springframework.core.io.support.Resource ( java.net.URL java.net.URL ) { return new UrlResource ( java.net.URL ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.ClassLoader java.lang.ClassLoader , java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> ) { if ( java.lang.ClassLoader instanceof java.net.URLClassLoader ) { try { for ( java.net.URL java.net.URL : ( ( java.net.URLClassLoader ) java.lang.ClassLoader ) . java.net.URL[] ( ) ) { try { UrlResource org.springframework.core.io.support.UrlResource = new UrlResource ( ResourceUtils . JAR_URL_PREFIX + java.net.URL . java.lang.String ( ) + ResourceUtils . JAR_URL_SEPARATOR ) ; if ( org.springframework.core.io.support.UrlResource . exists ( ) ) { java.util.Set<org.springframework.core.io.support.Resource> . add ( org.springframework.core.io.support.UrlResource ) ; } } catch ( java.net.MalformedURLException java.net.MalformedURLException ) { if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.net.URL + STRING + java.net.MalformedURLException . java.lang.String ( ) ) ; } } } } catch ( java.lang.Exception java.lang.Exception ) { if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.lang.ClassLoader + STRING + java.lang.Exception ) ; } } } if ( java.lang.ClassLoader == java.lang.ClassLoader . java.lang.ClassLoader ( ) ) { void ( java.util.Set<org.springframework.core.io.support.Resource> ) ; } if ( java.lang.ClassLoader != null ) { try { void ( java.lang.ClassLoader . java.lang.ClassLoader ( ) , java.util.Set<org.springframework.core.io.support.Resource> ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.lang.ClassLoader + STRING + java.lang.Exception ) ; } } } }  <METHOD_END>
<METHOD_START> protected void void ( java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> ) { try { java.lang.String java.lang.String = java.lang.System . java.lang.String ( STRING ) ; for ( java.lang.String java.lang.String : StringUtils . delimitedListToStringArray ( java.lang.String , java.lang.System . java.lang.String ( STRING ) ) ) { try { java.io.File java.io.File = new java.io.File ( java.lang.String ) ; UrlResource org.springframework.core.io.support.UrlResource = new UrlResource ( ResourceUtils . JAR_URL_PREFIX + ResourceUtils . FILE_URL_PREFIX + java.io.File . java.lang.String ( ) + ResourceUtils . JAR_URL_SEPARATOR ) ; if ( org.springframework.core.io.support.UrlResource . exists ( ) ) { java.util.Set<org.springframework.core.io.support.Resource> . add ( org.springframework.core.io.support.UrlResource ) ; } } catch ( java.net.MalformedURLException java.net.MalformedURLException ) { if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.lang.String + STRING + java.net.MalformedURLException . java.lang.String ( ) ) ; } } } } catch ( java.lang.Exception java.lang.Exception ) { if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.lang.Exception ) ; } } }  <METHOD_END>
<METHOD_START> protected org.springframework.core.io.support.Resource [] org.springframework.core.io.support.Resource[] ( java.lang.String java.lang.String ) throws java.io.IOException { java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String . java.lang.String ( java.lang.String . int ( ) ) ; Resource [] org.springframework.core.io.support.Resource[] = org.springframework.core.io.support.Resource[] ( java.lang.String ) ; java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> = new java.util.LinkedHashSet<org.springframework.core.io.support.Resource> <> ( NUMBER ) ; for ( Resource org.springframework.core.io.support.Resource : org.springframework.core.io.support.Resource[] ) { org.springframework.core.io.support.Resource = org.springframework.core.io.support.Resource ( org.springframework.core.io.support.Resource ) ; java.net.URL java.net.URL = org.springframework.core.io.support.Resource . getURL ( ) ; if ( java.lang.reflect.Method != null ) { if ( java.net.URL . java.lang.String ( ) . boolean ( STRING ) ) { java.net.URL = ( java.net.URL ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , null , java.net.URL ) ; org.springframework.core.io.support.Resource = new UrlResource ( java.net.URL ) ; } } if ( java.net.URL . java.lang.String ( ) . boolean ( ResourceUtils . URL_PROTOCOL_VFS ) ) { java.util.Set<org.springframework.core.io.support.Resource> . addAll ( org.springframework.core.io.support.PathMatchingResourcePatternResolver.VfsResourceMatchingDelegate . java.util.Set<org.springframework.core.io.support.Resource> ( java.net.URL , java.lang.String , org.springframework.core.io.support.PathMatcher ( ) ) ) ; } else if ( ResourceUtils . isJarURL ( java.net.URL ) || boolean ( org.springframework.core.io.support.Resource ) ) { java.util.Set<org.springframework.core.io.support.Resource> . addAll ( java.util.Set<org.springframework.core.io.support.Resource> ( org.springframework.core.io.support.Resource , java.net.URL , java.lang.String ) ) ; } else { java.util.Set<org.springframework.core.io.support.Resource> . addAll ( java.util.Set<org.springframework.core.io.support.Resource> ( org.springframework.core.io.support.Resource , java.lang.String ) ) ; } } if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.lang.String + STRING + java.util.Set<org.springframework.core.io.support.Resource> ) ; } return java.util.Set<org.springframework.core.io.support.Resource> . toArray ( new Resource [ java.util.Set<org.springframework.core.io.support.Resource> . size ( ) ] ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String ) { int int = java.lang.String . int ( STRING ) + NUMBER ; int int = java.lang.String . int ( ) ; while ( int > int && org.springframework.core.io.support.PathMatcher ( ) . isPattern ( java.lang.String . java.lang.String ( int , int ) ) ) { int = java.lang.String . int ( '/' , int - NUMBER ) + NUMBER ; } if ( int == NUMBER ) { int = int ; } return java.lang.String . java.lang.String ( NUMBER , int ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.core.io.support.Resource org.springframework.core.io.support.Resource ( Resource org.springframework.core.io.support.Resource ) throws java.io.IOException { return org.springframework.core.io.support.Resource ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( Resource org.springframework.core.io.support.Resource ) throws java.io.IOException { return false ; }  <METHOD_END>
<METHOD_START> protected java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> ( Resource org.springframework.core.io.support.Resource , java.net.URL java.net.URL , java.lang.String java.lang.String )			throws java.io.IOException { java.net.URLConnection java.net.URLConnection = java.net.URL . java.net.URLConnection ( ) ; java.util.jar.JarFile java.util.jar.JarFile ; java.lang.String java.lang.String ; java.lang.String java.lang.String ; boolean boolean ; if ( java.net.URLConnection instanceof java.net.JarURLConnection ) { java.net.JarURLConnection java.net.JarURLConnection = ( java.net.JarURLConnection ) java.net.URLConnection ; ResourceUtils . useCachesIfNecessary ( java.net.JarURLConnection ) ; java.util.jar.JarFile = java.net.JarURLConnection . java.util.jar.JarFile ( ) ; java.lang.String = java.net.JarURLConnection . java.net.URL ( ) . java.lang.String ( ) ; java.util.jar.JarEntry java.util.jar.JarEntry = java.net.JarURLConnection . java.util.jar.JarEntry ( ) ; java.lang.String = ( java.util.jar.JarEntry != null ? java.util.jar.JarEntry . java.lang.String ( ) : STRING ) ; boolean = ! java.net.JarURLConnection . boolean ( ) ; } else { java.lang.String java.lang.String = java.net.URL . java.lang.String ( ) ; try { int int = java.lang.String . int ( ResourceUtils . JAR_URL_SEPARATOR ) ; if ( int != - NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) ; java.lang.String = java.lang.String . java.lang.String ( int + ResourceUtils . JAR_URL_SEPARATOR . length ( ) ) ; java.util.jar.JarFile = java.util.jar.JarFile ( java.lang.String ) ; } else { java.util.jar.JarFile = new java.util.jar.JarFile ( java.lang.String ) ; java.lang.String = java.lang.String ; java.lang.String = STRING ; } boolean = true ; } catch ( java.util.zip.ZipException java.util.zip.ZipException ) { if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.lang.String + STRING ) ; } return java.util.Collections . java.util.Set<org.springframework.core.io.support.Resource> ( ) ; } } try { if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.lang.String + STRING ) ; } if ( ! STRING . boolean ( java.lang.String ) && ! java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String + STRING ; } java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> = new java.util.LinkedHashSet<org.springframework.core.io.support.Resource> <> ( NUMBER ) ; for ( java.util.Enumeration<java.util.jar.JarEntry> < java.util.jar.JarEntry > java.util.Enumeration<java.util.jar.JarEntry> = java.util.jar.JarFile . java.util.Enumeration<java.util.jar.JarEntry> ( ) ; java.util.Enumeration<java.util.jar.JarEntry> . boolean ( ) ;) { java.util.jar.JarEntry java.util.jar.JarEntry = java.util.Enumeration<java.util.jar.JarEntry> . java.util.jar.JarEntry ( ) ; java.lang.String java.lang.String = java.util.jar.JarEntry . java.lang.String ( ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( java.lang.String . int ( ) ) ; if ( org.springframework.core.io.support.PathMatcher ( ) . match ( java.lang.String , java.lang.String ) ) { java.util.Set<org.springframework.core.io.support.Resource> . add ( org.springframework.core.io.support.Resource . createRelative ( java.lang.String ) ) ; } } } return java.util.Set<org.springframework.core.io.support.Resource> ; } finally { if ( boolean ) { java.util.jar.JarFile . void ( ) ; } } }  <METHOD_END>
<METHOD_START> protected java.util.jar.JarFile java.util.jar.JarFile ( java.lang.String java.lang.String ) throws java.io.IOException { if ( java.lang.String . boolean ( ResourceUtils . FILE_URL_PREFIX ) ) { try { return new java.util.jar.JarFile ( ResourceUtils . toURI ( java.lang.String ) . getSchemeSpecificPart ( ) ) ; } catch ( java.net.URISyntaxException java.net.URISyntaxException ) { return new java.util.jar.JarFile ( java.lang.String . java.lang.String ( ResourceUtils . FILE_URL_PREFIX . length ( ) ) ) ; } } else { return new java.util.jar.JarFile ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> protected java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> ( Resource org.springframework.core.io.support.Resource , java.lang.String java.lang.String )			throws java.io.IOException { java.io.File java.io.File ; try { java.io.File = org.springframework.core.io.support.Resource . getFile ( ) . getAbsoluteFile ( ) ; } catch ( java.io.IOException java.io.IOException ) { if ( org.springframework.core.io.support.Log . isWarnEnabled ( ) ) { org.springframework.core.io.support.Log . warn ( STRING + org.springframework.core.io.support.Resource + STRING , java.io.IOException ) ; } return java.util.Collections . java.util.Set<org.springframework.core.io.support.Resource> ( ) ; } return java.util.Set<org.springframework.core.io.support.Resource> ( java.io.File , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> ( java.io.File java.io.File , java.lang.String java.lang.String ) throws java.io.IOException { if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.io.File . java.lang.String ( ) + STRING ) ; } java.util.Set<java.io.File> < java.io.File > java.util.Set<java.io.File> = java.util.Set<java.io.File> ( java.io.File , java.lang.String ) ; java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> = new java.util.LinkedHashSet<org.springframework.core.io.support.Resource> <> ( java.util.Set<java.io.File> . int ( ) ) ; for ( java.io.File java.io.File : java.util.Set<java.io.File> ) { java.util.Set<org.springframework.core.io.support.Resource> . add ( new FileSystemResource ( java.io.File ) ) ; } return java.util.Set<org.springframework.core.io.support.Resource> ; }  <METHOD_END>
<METHOD_START> protected java.util.Set<java.io.File> < java.io.File > java.util.Set<java.io.File> ( java.io.File java.io.File , java.lang.String java.lang.String ) throws java.io.IOException { if ( ! java.io.File . boolean ( ) ) { if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.io.File . java.lang.String ( ) + STRING ) ; } return java.util.Collections . java.util.Set<java.io.File> ( ) ; } if ( ! java.io.File . boolean ( ) ) { if ( org.springframework.core.io.support.Log . isWarnEnabled ( ) ) { org.springframework.core.io.support.Log . warn ( STRING + java.io.File . java.lang.String ( ) + STRING ) ; } return java.util.Collections . java.util.Set<java.io.File> ( ) ; } if ( ! java.io.File . boolean ( ) ) { if ( org.springframework.core.io.support.Log . isWarnEnabled ( ) ) { org.springframework.core.io.support.Log . warn ( STRING + java.io.File . java.lang.String ( ) + STRING ) ; } return java.util.Collections . java.util.Set<java.io.File> ( ) ; } java.lang.String java.lang.String = StringUtils . replace ( java.io.File . java.lang.String ( ) , java.io.File . java.lang.String , STRING ) ; if ( ! java.lang.String . boolean ( STRING ) ) { java.lang.String += STRING ; } java.lang.String = java.lang.String + StringUtils . replace ( java.lang.String , java.io.File . java.lang.String , STRING ) ; java.util.Set<java.io.File> < java.io.File > java.util.Set<java.io.File> = new java.util.LinkedHashSet<java.io.File> <> ( NUMBER ) ; void ( java.lang.String , java.io.File , java.util.Set<java.io.File> ) ; return java.util.Set<java.io.File> ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , java.io.File java.io.File , java.util.Set<java.io.File> < java.io.File > java.util.Set<java.io.File> ) throws java.io.IOException { if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.io.File . java.lang.String ( ) + STRING + java.lang.String + STRING ) ; } java.io.File [] java.io.File[] = java.io.File . java.io.File[] ( ) ; if ( java.io.File[] == null ) { if ( org.springframework.core.io.support.Log . isWarnEnabled ( ) ) { org.springframework.core.io.support.Log . warn ( STRING + java.io.File . java.lang.String ( ) + STRING ) ; } return; } java.util.Arrays . void ( java.io.File[] ) ; for ( java.io.File java.io.File : java.io.File[] ) { java.lang.String java.lang.String = StringUtils . replace ( java.io.File . java.lang.String ( ) , java.io.File . java.lang.String , STRING ) ; if ( java.io.File . boolean ( ) && org.springframework.core.io.support.PathMatcher ( ) . matchStart ( java.lang.String , java.lang.String + STRING ) ) { if ( ! java.io.File . boolean ( ) ) { if ( org.springframework.core.io.support.Log . isDebugEnabled ( ) ) { org.springframework.core.io.support.Log . debug ( STRING + java.io.File . java.lang.String ( ) + STRING ) ; } } else { void ( java.lang.String , java.io.File , java.util.Set<java.io.File> ) ; } } if ( org.springframework.core.io.support.PathMatcher ( ) . match ( java.lang.String , java.lang.String ) ) { java.util.Set<java.io.File> . boolean ( java.io.File ) ; } } }  <METHOD_END>
<METHOD_START> public static java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> ( java.net.URL java.net.URL , java.lang.String java.lang.String , PathMatcher org.springframework.core.io.support.PathMatcher ) throws java.io.IOException { java.lang.Object java.lang.Object = VfsPatternUtils . findRoot ( java.net.URL ) ; org.springframework.core.io.support.PathMatchingResourcePatternResolver.PatternVirtualFileVisitor org.springframework.core.io.support.PathMatchingResourcePatternResolver.PatternVirtualFileVisitor = new org.springframework.core.io.support.PathMatchingResourcePatternResolver.PatternVirtualFileVisitor ( VfsPatternUtils . getPath ( java.lang.Object ) , java.lang.String , org.springframework.core.io.support.PathMatcher ) ; VfsPatternUtils . visit ( java.lang.Object , org.springframework.core.io.support.PathMatchingResourcePatternResolver.PatternVirtualFileVisitor ) ; return org.springframework.core.io.support.PathMatchingResourcePatternResolver.PatternVirtualFileVisitor . java.util.Set<org.springframework.core.io.support.Resource> ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , PathMatcher org.springframework.core.io.support.PathMatcher ) { this . java.lang.String = java.lang.String ; this . org.springframework.core.io.support.PathMatcher = org.springframework.core.io.support.PathMatcher ; this . java.lang.String = ( java.lang.String . boolean ( ) || java.lang.String . boolean ( STRING ) ? java.lang.String : java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] ) throws java.lang.Throwable { java.lang.String java.lang.String = java.lang.reflect.Method . java.lang.String ( ) ; if ( java.lang.Object .class == java.lang.reflect.Method . java.lang.Class<?> ( ) ) { if ( java.lang.String . boolean ( STRING ) ) { return ( java.lang.Object == java.lang.Object[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( STRING ) ) { return java.lang.System . int ( java.lang.Object ) ; } } else if ( STRING . boolean ( java.lang.String ) ) { return java.lang.Object ( ) ; } else if ( STRING . boolean ( java.lang.String ) ) { void ( java.lang.Object[] [ NUMBER ] ) ; return null ; } else if ( STRING . boolean ( java.lang.String ) ) { return java.lang.String ( ) ; } throw new java.lang.IllegalStateException ( STRING + java.lang.reflect.Method ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { if ( this . org.springframework.core.io.support.PathMatcher . match ( this . java.lang.String , VfsPatternUtils . getPath ( java.lang.Object ) . substring ( this . java.lang.String . int ( ) ) ) ) { this . java.util.Set<org.springframework.core.io.support.Resource> . add ( new VfsResource ( java.lang.Object ) ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return VfsPatternUtils . getVisitorAttribute ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Set<org.springframework.core.io.support.Resource> < Resource > java.util.Set<org.springframework.core.io.support.Resource> ( ) { return this . java.util.Set<org.springframework.core.io.support.Resource> ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . java.util.Set<org.springframework.core.io.support.Resource> . size ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String + STRING + this . java.util.Set<org.springframework.core.io.support.Resource> ; }  <METHOD_END>
