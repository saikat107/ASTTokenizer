<METHOD_START> @ Test public void void ( ) java.lang.Exception { MatchAlwaysTransactionAttributeSource org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource = new MatchAlwaysTransactionAttributeSource ( ) ; TransactionAttribute org.springframework.transaction.interceptor.TransactionAttribute = org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource . getTransactionAttribute ( java.lang.Object .class . java.lang.reflect.Method ( STRING , ( java.lang.Class [] ) null ) , null ) ; assertNotNull ( org.springframework.transaction.interceptor.TransactionAttribute ) ; assertTrue ( TransactionDefinition . PROPAGATION_REQUIRED == org.springframework.transaction.interceptor.TransactionAttribute . getPropagationBehavior ( ) ) ; org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource . setTransactionAttribute ( new DefaultTransactionAttribute ( TransactionDefinition . PROPAGATION_SUPPORTS ) ) ; org.springframework.transaction.interceptor.TransactionAttribute = org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource . getTransactionAttribute ( java.io.IOException .class . java.lang.reflect.Method ( STRING , ( java.lang.Class [] ) null ) , java.io.IOException .class ) ; assertNotNull ( org.springframework.transaction.interceptor.TransactionAttribute ) ; assertTrue ( TransactionDefinition . PROPAGATION_SUPPORTS == org.springframework.transaction.interceptor.TransactionAttribute . getPropagationBehavior ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MatchAlwaysTransactionAttributeSource org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource = new MatchAlwaysTransactionAttributeSource ( ) ; TransactionDefinition org.springframework.transaction.interceptor.TransactionDefinition = org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource . getTransactionAttribute ( null , null ) ; assertEquals ( TransactionDefinition . PROPAGATION_REQUIRED , org.springframework.transaction.interceptor.TransactionDefinition . getPropagationBehavior ( ) ) ; assertEquals ( TransactionDefinition . ISOLATION_DEFAULT , org.springframework.transaction.interceptor.TransactionDefinition . getIsolationLevel ( ) ) ; assertEquals ( TransactionDefinition . TIMEOUT_DEFAULT , org.springframework.transaction.interceptor.TransactionDefinition . getTimeout ( ) ) ; assertFalse ( org.springframework.transaction.interceptor.TransactionDefinition . isReadOnly ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.NoSuchMethodException { NameMatchTransactionAttributeSource org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource = new NameMatchTransactionAttributeSource ( ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource . setProperties ( java.util.Properties ) ; TransactionAttribute org.springframework.transaction.interceptor.TransactionAttribute = org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource . getTransactionAttribute ( java.lang.Object .class . java.lang.reflect.Method ( STRING , ( java.lang.Class [] ) null ) , null ) ; assertNotNull ( org.springframework.transaction.interceptor.TransactionAttribute ) ; assertEquals ( TransactionDefinition . PROPAGATION_REQUIRED , org.springframework.transaction.interceptor.TransactionAttribute . getPropagationBehavior ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.NoSuchMethodException { NameMatchTransactionAttributeSource org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource = new NameMatchTransactionAttributeSource ( ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource . setProperties ( java.util.Properties ) ; TransactionAttribute org.springframework.transaction.interceptor.TransactionAttribute = org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource . getTransactionAttribute ( java.lang.Object .class . java.lang.reflect.Method ( STRING , ( java.lang.Class [] ) null ) , null ) ; assertNotNull ( org.springframework.transaction.interceptor.TransactionAttribute ) ; assertEquals ( TransactionDefinition . PROPAGATION_REQUIRED , org.springframework.transaction.interceptor.TransactionAttribute . getPropagationBehavior ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.NoSuchMethodException { NameMatchTransactionAttributeSource org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource = new NameMatchTransactionAttributeSource ( ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource . setProperties ( java.util.Properties ) ; TransactionAttribute org.springframework.transaction.interceptor.TransactionAttribute = org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource . getTransactionAttribute ( java.lang.Object .class . java.lang.reflect.Method ( STRING , ( java.lang.Class [] ) null ) , null ) ; assertNotNull ( org.springframework.transaction.interceptor.TransactionAttribute ) ; assertEquals ( TransactionDefinition . PROPAGATION_MANDATORY , org.springframework.transaction.interceptor.TransactionAttribute . getPropagationBehavior ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.NoSuchMethodException { NameMatchTransactionAttributeSource org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource = new NameMatchTransactionAttributeSource ( ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource . setProperties ( java.util.Properties ) ; TransactionAttribute org.springframework.transaction.interceptor.TransactionAttribute = org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource . getTransactionAttribute ( java.lang.Object .class . java.lang.reflect.Method ( STRING , ( java.lang.Class [] ) null ) , null ) ; assertNull ( org.springframework.transaction.interceptor.TransactionAttribute ) ; }  <METHOD_END>
