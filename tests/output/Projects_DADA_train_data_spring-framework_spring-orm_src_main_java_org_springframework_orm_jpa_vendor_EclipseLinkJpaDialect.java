<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( EntityManager org.springframework.orm.jpa.vendor.EntityManager , TransactionDefinition org.springframework.orm.jpa.vendor.TransactionDefinition )			throws org.springframework.orm.jpa.vendor.PersistenceException , java.sql.SQLException , org.springframework.orm.jpa.vendor.TransactionException { if ( org.springframework.orm.jpa.vendor.TransactionDefinition . getIsolationLevel ( ) != TransactionDefinition . ISOLATION_DEFAULT ) { UnitOfWork org.springframework.orm.jpa.vendor.UnitOfWork = org.springframework.orm.jpa.vendor.EntityManager . unwrap ( UnitOfWork .class ) ; org.springframework.orm.jpa.vendor.UnitOfWork . getLogin ( ) . setTransactionIsolation ( org.springframework.orm.jpa.vendor.TransactionDefinition . getIsolationLevel ( ) ) ; } org.springframework.orm.jpa.vendor.EntityManager . getTransaction ( ) . begin ( ) ; if ( ! org.springframework.orm.jpa.vendor.TransactionDefinition . isReadOnly ( ) && ! this . boolean ) { org.springframework.orm.jpa.vendor.EntityManager . unwrap ( UnitOfWork .class ) . beginEarlyTransaction ( ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.orm.jpa.vendor.ConnectionHandle org.springframework.orm.jpa.vendor.ConnectionHandle ( EntityManager org.springframework.orm.jpa.vendor.EntityManager , boolean boolean )			throws org.springframework.orm.jpa.vendor.PersistenceException , java.sql.SQLException { return new org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect.EclipseLinkConnectionHandle ( org.springframework.orm.jpa.vendor.EntityManager ) ; }  <METHOD_END>
<METHOD_START> public void ( EntityManager org.springframework.orm.jpa.vendor.EntityManager ) { this . org.springframework.orm.jpa.vendor.EntityManager = org.springframework.orm.jpa.vendor.EntityManager ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.sql.Connection java.sql.Connection ( ) { if ( this . java.sql.Connection == null ) { this . java.sql.Connection = this . org.springframework.orm.jpa.vendor.EntityManager . unwrap ( java.sql.Connection .class ) ; } return this . java.sql.Connection ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.sql.Connection java.sql.Connection ) {		}  <METHOD_END>
