<METHOD_START> @ Test @ Sql ( scripts = STRING , config = @ SqlConfig ( transactionManager = STRING ) ) public void void ( ) { assertInTransaction ( false ) ; void ( new JdbcTemplate ( javax.sql.DataSource ) , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test @ Sql ( scripts = STRING , config = @ SqlConfig ( transactionManager = STRING ) ) public void void ( ) { assertInTransaction ( false ) ; void ( new JdbcTemplate ( javax.sql.DataSource ) , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( JdbcTemplate org.springframework.test.context.jdbc.JdbcTemplate , java.lang.String ... java.lang.String[] ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ; java.util.Collections . void ( java.util.List<java.lang.String> ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = org.springframework.test.context.jdbc.JdbcTemplate . queryForList ( STRING , java.lang.String .class ) ; java.util.Collections . void ( java.util.List<java.lang.String> ) ; assertEquals ( STRING , java.util.List<java.lang.String> , java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.test.context.jdbc.PlatformTransactionManager org.springframework.test.context.jdbc.PlatformTransactionManager ( ) { return new DataSourceTransactionManager ( javax.sql.DataSource ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.test.context.jdbc.PlatformTransactionManager org.springframework.test.context.jdbc.PlatformTransactionManager ( ) { return new DataSourceTransactionManager ( javax.sql.DataSource ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public javax.sql.DataSource javax.sql.DataSource ( ) { return new EmbeddedDatabaseBuilder ( ) . setName ( STRING ) . addScript ( STRING ) . addScript ( STRING ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public javax.sql.DataSource javax.sql.DataSource ( ) { return new EmbeddedDatabaseBuilder ( ) . setName ( STRING ) . addScript ( STRING ) . addScript ( STRING ) . build ( ) ; }  <METHOD_END>
