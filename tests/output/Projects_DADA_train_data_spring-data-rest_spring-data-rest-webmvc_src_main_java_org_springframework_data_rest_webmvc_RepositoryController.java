<METHOD_START> @ Autowired public void ( PagedResourcesAssembler < java.lang.Object > org.springframework.data.rest.webmvc.PagedResourcesAssembler<java.lang.Object> , Repositories org.springframework.data.rest.webmvc.Repositories , EntityLinks org.springframework.data.rest.webmvc.EntityLinks , ResourceMappings org.springframework.data.rest.webmvc.ResourceMappings ) { super( org.springframework.data.rest.webmvc.PagedResourcesAssembler<java.lang.Object> ); Assert . notNull ( org.springframework.data.rest.webmvc.Repositories , STRING ) ; Assert . notNull ( org.springframework.data.rest.webmvc.EntityLinks , STRING ) ; Assert . notNull ( org.springframework.data.rest.webmvc.ResourceMappings , STRING ) ; this . org.springframework.data.rest.webmvc.Repositories = org.springframework.data.rest.webmvc.Repositories ; this . org.springframework.data.rest.webmvc.EntityLinks = org.springframework.data.rest.webmvc.EntityLinks ; this . org.springframework.data.rest.webmvc.ResourceMappings = org.springframework.data.rest.webmvc.ResourceMappings ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( value = { STRING , STRING } , method = RequestMethod . OPTIONS ) public org.springframework.data.rest.webmvc.HttpEntity<?> < ? > org.springframework.data.rest.webmvc.HttpEntity<?> ( ) { HttpHeaders org.springframework.data.rest.webmvc.HttpHeaders = new HttpHeaders ( ) ; org.springframework.data.rest.webmvc.HttpHeaders . setAllow ( java.util.Collections . java.util.Set ( HttpMethod . GET ) ) ; return new ResponseEntity < java.lang.Object > ( org.springframework.data.rest.webmvc.HttpHeaders , HttpStatus . OK ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( value = { STRING , STRING } , method = RequestMethod . HEAD ) public org.springframework.data.rest.webmvc.ResponseEntity<?> < ? > org.springframework.data.rest.webmvc.ResponseEntity<?> ( ) { return new ResponseEntity < java.lang.Object > ( HttpStatus . NO_CONTENT ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( value = { STRING , STRING } , method = RequestMethod . GET ) public org.springframework.data.rest.webmvc.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> < RepositoryLinksResource > org.springframework.data.rest.webmvc.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> ( ) { RepositoryLinksResource org.springframework.data.rest.webmvc.RepositoryLinksResource = new RepositoryLinksResource ( ) ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : org.springframework.data.rest.webmvc.Repositories ) { ResourceMetadata org.springframework.data.rest.webmvc.ResourceMetadata = org.springframework.data.rest.webmvc.ResourceMappings . getMetadataFor ( java.lang.Class<> ) ; if ( org.springframework.data.rest.webmvc.ResourceMetadata . isExported ( ) ) { org.springframework.data.rest.webmvc.RepositoryLinksResource . add ( org.springframework.data.rest.webmvc.EntityLinks . linkToCollectionResource ( java.lang.Class<> ) ) ; } } return new ResponseEntity < RepositoryLinksResource > ( org.springframework.data.rest.webmvc.RepositoryLinksResource , HttpStatus . OK ) ; }  <METHOD_END>
