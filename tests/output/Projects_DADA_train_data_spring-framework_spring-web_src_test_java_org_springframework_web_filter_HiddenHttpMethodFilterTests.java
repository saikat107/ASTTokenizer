<METHOD_START> @ Test public void void ( ) java.io.IOException , org.springframework.web.filter.ServletException { MockHttpServletRequest org.springframework.web.filter.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.filter.MockHttpServletRequest . addParameter ( STRING , STRING ) ; MockHttpServletResponse org.springframework.web.filter.MockHttpServletResponse = new MockHttpServletResponse ( ) ; FilterChain org.springframework.web.filter.FilterChain = new FilterChain ( ) { @ java.lang.Override public void void ( ServletRequest org.springframework.web.filter.ServletRequest , ServletResponse org.springframework.web.filter.ServletResponse ) throws java.io.IOException , org.springframework.web.filter.ServletException { assertEquals ( STRING , STRING , ( ( HttpServletRequest ) org.springframework.web.filter.ServletRequest ) . getMethod ( ) ) ; } } ; org.springframework.web.filter.HiddenHttpMethodFilter . doFilter ( org.springframework.web.filter.MockHttpServletRequest , org.springframework.web.filter.MockHttpServletResponse , org.springframework.web.filter.FilterChain ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletRequest org.springframework.web.filter.ServletRequest , ServletResponse org.springframework.web.filter.ServletResponse ) throws java.io.IOException , org.springframework.web.filter.ServletException { assertEquals ( STRING , STRING , ( ( HttpServletRequest ) org.springframework.web.filter.ServletRequest ) . getMethod ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException , org.springframework.web.filter.ServletException { MockHttpServletRequest org.springframework.web.filter.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; MockHttpServletResponse org.springframework.web.filter.MockHttpServletResponse = new MockHttpServletResponse ( ) ; FilterChain org.springframework.web.filter.FilterChain = new FilterChain ( ) { @ java.lang.Override public void void ( ServletRequest org.springframework.web.filter.ServletRequest , ServletResponse org.springframework.web.filter.ServletResponse ) throws java.io.IOException , org.springframework.web.filter.ServletException { assertEquals ( STRING , STRING , ( ( HttpServletRequest ) org.springframework.web.filter.ServletRequest ) . getMethod ( ) ) ; } } ; org.springframework.web.filter.HiddenHttpMethodFilter . doFilter ( org.springframework.web.filter.MockHttpServletRequest , org.springframework.web.filter.MockHttpServletResponse , org.springframework.web.filter.FilterChain ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletRequest org.springframework.web.filter.ServletRequest , ServletResponse org.springframework.web.filter.ServletResponse ) throws java.io.IOException , org.springframework.web.filter.ServletException { assertEquals ( STRING , STRING , ( ( HttpServletRequest ) org.springframework.web.filter.ServletRequest ) . getMethod ( ) ) ; }  <METHOD_END>
