<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( UrlPathHelper org.springframework.web.servlet.support.UrlPathHelper ) { Assert . notNull ( org.springframework.web.servlet.support.UrlPathHelper , STRING ) ; this . org.springframework.web.servlet.support.UrlPathHelper = org.springframework.web.servlet.support.UrlPathHelper ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.support.UrlPathHelper org.springframework.web.servlet.support.UrlPathHelper ( ) { return this . org.springframework.web.servlet.support.UrlPathHelper ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final org.springframework.web.servlet.support.FlashMap org.springframework.web.servlet.support.FlashMap ( HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.support.HttpServletResponse ) { java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> = java.util.List<org.springframework.web.servlet.support.FlashMap> ( org.springframework.web.servlet.support.HttpServletRequest ) ; if ( CollectionUtils . isEmpty ( java.util.List<org.springframework.web.servlet.support.FlashMap> ) ) { return null ; } if ( org.springframework.web.servlet.support.Log . isDebugEnabled ( ) ) { org.springframework.web.servlet.support.Log . debug ( STRING + java.util.List<org.springframework.web.servlet.support.FlashMap> ) ; } java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> = java.util.List<org.springframework.web.servlet.support.FlashMap> ( java.util.List<org.springframework.web.servlet.support.FlashMap> ) ; FlashMap org.springframework.web.servlet.support.FlashMap = org.springframework.web.servlet.support.FlashMap ( java.util.List<org.springframework.web.servlet.support.FlashMap> , org.springframework.web.servlet.support.HttpServletRequest ) ; if ( org.springframework.web.servlet.support.FlashMap != null ) { java.util.List<org.springframework.web.servlet.support.FlashMap> . add ( org.springframework.web.servlet.support.FlashMap ) ; } if ( ! java.util.List<org.springframework.web.servlet.support.FlashMap> . isEmpty ( ) ) { if ( org.springframework.web.servlet.support.Log . isDebugEnabled ( ) ) { org.springframework.web.servlet.support.Log . debug ( STRING + java.util.List<org.springframework.web.servlet.support.FlashMap> ) ; } java.lang.Object java.lang.Object = java.lang.Object ( org.springframework.web.servlet.support.HttpServletRequest ) ; if ( java.lang.Object != null ) { synchronized ( java.lang.Object ) { java.util.List<org.springframework.web.servlet.support.FlashMap> = java.util.List<org.springframework.web.servlet.support.FlashMap> ( org.springframework.web.servlet.support.HttpServletRequest ) ; if ( java.util.List<org.springframework.web.servlet.support.FlashMap> != null ) { java.util.List<org.springframework.web.servlet.support.FlashMap> . removeAll ( java.util.List<org.springframework.web.servlet.support.FlashMap> ) ; void ( java.util.List<org.springframework.web.servlet.support.FlashMap> , org.springframework.web.servlet.support.HttpServletRequest , org.springframework.web.servlet.support.HttpServletResponse ) ; } } } else { java.util.List<org.springframework.web.servlet.support.FlashMap> . removeAll ( java.util.List<org.springframework.web.servlet.support.FlashMap> ) ; void ( java.util.List<org.springframework.web.servlet.support.FlashMap> , org.springframework.web.servlet.support.HttpServletRequest , org.springframework.web.servlet.support.HttpServletResponse ) ; } } return org.springframework.web.servlet.support.FlashMap ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> ( java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> ) { java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> = new java.util.LinkedList<org.springframework.web.servlet.support.FlashMap> <> ( ) ; for ( FlashMap org.springframework.web.servlet.support.FlashMap : java.util.List<org.springframework.web.servlet.support.FlashMap> ) { if ( org.springframework.web.servlet.support.FlashMap . isExpired ( ) ) { java.util.List<org.springframework.web.servlet.support.FlashMap> . add ( org.springframework.web.servlet.support.FlashMap ) ; } } return java.util.List<org.springframework.web.servlet.support.FlashMap> ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.servlet.support.FlashMap org.springframework.web.servlet.support.FlashMap ( java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> , HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest ) { java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> = new java.util.LinkedList<org.springframework.web.servlet.support.FlashMap> <> ( ) ; for ( FlashMap org.springframework.web.servlet.support.FlashMap : java.util.List<org.springframework.web.servlet.support.FlashMap> ) { if ( boolean ( org.springframework.web.servlet.support.FlashMap , org.springframework.web.servlet.support.HttpServletRequest ) ) { java.util.List<org.springframework.web.servlet.support.FlashMap> . add ( org.springframework.web.servlet.support.FlashMap ) ; } } if ( ! java.util.List<org.springframework.web.servlet.support.FlashMap> . isEmpty ( ) ) { java.util.Collections . void ( java.util.List<org.springframework.web.servlet.support.FlashMap> ) ; if ( org.springframework.web.servlet.support.Log . isDebugEnabled ( ) ) { org.springframework.web.servlet.support.Log . debug ( STRING + java.util.List<org.springframework.web.servlet.support.FlashMap> ) ; } return java.util.List<org.springframework.web.servlet.support.FlashMap> . get ( NUMBER ) ; } return null ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( FlashMap org.springframework.web.servlet.support.FlashMap , HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest ) { java.lang.String java.lang.String = org.springframework.web.servlet.support.FlashMap . getTargetRequestPath ( ) ; if ( java.lang.String != null ) { java.lang.String java.lang.String = org.springframework.web.servlet.support.UrlPathHelper ( ) . getOriginatingRequestUri ( org.springframework.web.servlet.support.HttpServletRequest ) ; if ( ! java.lang.String . boolean ( java.lang.String ) && ! java.lang.String . boolean ( java.lang.String + STRING ) ) { return false ; } } UriComponents org.springframework.web.servlet.support.UriComponents = ServletUriComponentsBuilder . fromRequest ( org.springframework.web.servlet.support.HttpServletRequest ) . build ( ) ; MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.servlet.support.MultiValueMap<java.lang.String,java.lang.String> = org.springframework.web.servlet.support.UriComponents . getQueryParams ( ) ; MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.servlet.support.MultiValueMap<java.lang.String,java.lang.String> = org.springframework.web.servlet.support.FlashMap . getTargetRequestParams ( ) ; for ( java.lang.String java.lang.String : org.springframework.web.servlet.support.MultiValueMap<java.lang.String,java.lang.String> . keySet ( ) ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = org.springframework.web.servlet.support.MultiValueMap<java.lang.String,java.lang.String> . get ( java.lang.String ) ; if ( java.util.List<java.lang.String> == null ) { return false ; } for ( java.lang.String java.lang.String : org.springframework.web.servlet.support.MultiValueMap<java.lang.String,java.lang.String> . get ( java.lang.String ) ) { if ( ! java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { return false ; } } } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( FlashMap org.springframework.web.servlet.support.FlashMap , HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.support.HttpServletResponse ) { if ( CollectionUtils . isEmpty ( org.springframework.web.servlet.support.FlashMap ) ) { return; } java.lang.String java.lang.String = java.lang.String ( org.springframework.web.servlet.support.FlashMap . getTargetRequestPath ( ) , org.springframework.web.servlet.support.HttpServletRequest ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( java.lang.String ) ; if ( org.springframework.web.servlet.support.Log . isDebugEnabled ( ) ) { org.springframework.web.servlet.support.Log . debug ( STRING + org.springframework.web.servlet.support.FlashMap ) ; } org.springframework.web.servlet.support.FlashMap . startExpirationPeriod ( int ( ) ) ; java.lang.Object java.lang.Object = java.lang.Object ( org.springframework.web.servlet.support.HttpServletRequest ) ; if ( java.lang.Object != null ) { synchronized ( java.lang.Object ) { java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> = java.util.List<org.springframework.web.servlet.support.FlashMap> ( org.springframework.web.servlet.support.HttpServletRequest ) ; java.util.List<org.springframework.web.servlet.support.FlashMap> = ( java.util.List<org.springframework.web.servlet.support.FlashMap> != null ? java.util.List<org.springframework.web.servlet.support.FlashMap> : new java.util.concurrent.CopyOnWriteArrayList <> ( ) ) ; java.util.List<org.springframework.web.servlet.support.FlashMap> . add ( org.springframework.web.servlet.support.FlashMap ) ; void ( java.util.List<org.springframework.web.servlet.support.FlashMap> , org.springframework.web.servlet.support.HttpServletRequest , org.springframework.web.servlet.support.HttpServletResponse ) ; } } else { java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> = java.util.List<org.springframework.web.servlet.support.FlashMap> ( org.springframework.web.servlet.support.HttpServletRequest ) ; java.util.List<org.springframework.web.servlet.support.FlashMap> = ( java.util.List<org.springframework.web.servlet.support.FlashMap> != null ? java.util.List<org.springframework.web.servlet.support.FlashMap> : new java.util.LinkedList <> ( ) ) ; java.util.List<org.springframework.web.servlet.support.FlashMap> . add ( org.springframework.web.servlet.support.FlashMap ) ; void ( java.util.List<org.springframework.web.servlet.support.FlashMap> , org.springframework.web.servlet.support.HttpServletRequest , org.springframework.web.servlet.support.HttpServletResponse ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String , HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest ) { if ( java.lang.String != null ) { java.lang.String = org.springframework.web.servlet.support.UrlPathHelper ( ) . decodeRequestString ( org.springframework.web.servlet.support.HttpServletRequest , java.lang.String ) ; if ( java.lang.String . char ( NUMBER ) != '/' ) { java.lang.String java.lang.String = org.springframework.web.servlet.support.UrlPathHelper ( ) . getRequestUri ( org.springframework.web.servlet.support.HttpServletRequest ) ; java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( '/' ) + NUMBER ) + java.lang.String ; java.lang.String = StringUtils . cleanPath ( java.lang.String ) ; } } return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected abstract java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> ( HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest );  <METHOD_END>
<METHOD_START> protected abstract void void ( java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> , HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.support.HttpServletResponse );  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest ) { return java.lang.Object ; }  <METHOD_END>
