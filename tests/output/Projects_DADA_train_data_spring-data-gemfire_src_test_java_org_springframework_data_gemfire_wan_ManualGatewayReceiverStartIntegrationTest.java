<METHOD_START> protected void void ( final java.lang.String java.lang.String , final int int , final int int , final int int ) { assertTrue ( java.lang.String , int >= int && int <= int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNotNull ( STRING , org.springframework.data.gemfire.wan.GatewayReceiver ) ; assertTrue ( org.springframework.data.gemfire.wan.GatewayReceiver . isRunning ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.wan.GatewayReceiver . getStartPort ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.wan.GatewayReceiver . getEndPort ( ) ) ; final int int = org.springframework.data.gemfire.wan.GatewayReceiver . getPort ( ) ; void ( java.lang.String . java.lang.String ( STRING , int , org.springframework.data.gemfire.wan.GatewayReceiver . getStartPort ( ) , org.springframework.data.gemfire.wan.GatewayReceiver . getEndPort ( ) ) , int , org.springframework.data.gemfire.wan.GatewayReceiver . getStartPort ( ) , org.springframework.data.gemfire.wan.GatewayReceiver . getEndPort ( ) ) ; org.springframework.data.gemfire.wan.GatewayReceiver . stop ( ) ; assertFalse ( org.springframework.data.gemfire.wan.GatewayReceiver . isRunning ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { assertNotNull ( STRING , org.springframework.data.gemfire.wan.GatewayReceiver ) ; assertFalse ( org.springframework.data.gemfire.wan.GatewayReceiver . isRunning ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.wan.GatewayReceiver . getStartPort ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.wan.GatewayReceiver . getEndPort ( ) ) ; org.springframework.data.gemfire.wan.GatewayReceiver . start ( ) ; assertTrue ( org.springframework.data.gemfire.wan.GatewayReceiver . isRunning ( ) ) ; final int int = org.springframework.data.gemfire.wan.GatewayReceiver . getPort ( ) ; void ( java.lang.String . java.lang.String ( STRING , int , org.springframework.data.gemfire.wan.GatewayReceiver . getStartPort ( ) , org.springframework.data.gemfire.wan.GatewayReceiver . getEndPort ( ) ) , int , org.springframework.data.gemfire.wan.GatewayReceiver . getStartPort ( ) , org.springframework.data.gemfire.wan.GatewayReceiver . getEndPort ( ) ) ; org.springframework.data.gemfire.wan.GatewayReceiver . stop ( ) ; assertFalse ( org.springframework.data.gemfire.wan.GatewayReceiver . isRunning ( ) ) ; }  <METHOD_END>
