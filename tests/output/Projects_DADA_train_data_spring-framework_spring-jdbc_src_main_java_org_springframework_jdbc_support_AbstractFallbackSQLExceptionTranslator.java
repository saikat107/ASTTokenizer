<METHOD_START> public void void ( SQLExceptionTranslator org.springframework.jdbc.support.SQLExceptionTranslator ) { this . org.springframework.jdbc.support.SQLExceptionTranslator = org.springframework.jdbc.support.SQLExceptionTranslator ; }  <METHOD_END>
<METHOD_START> public org.springframework.jdbc.support.SQLExceptionTranslator org.springframework.jdbc.support.SQLExceptionTranslator ( ) { return this . org.springframework.jdbc.support.SQLExceptionTranslator ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jdbc.support.DataAccessException org.springframework.jdbc.support.DataAccessException ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.sql.SQLException java.sql.SQLException ) { Assert . notNull ( java.sql.SQLException , STRING ) ; if ( java.lang.String == null ) { java.lang.String = STRING ; } if ( java.lang.String == null ) { java.lang.String = STRING ; } DataAccessException org.springframework.jdbc.support.DataAccessException = org.springframework.jdbc.support.DataAccessException ( java.lang.String , java.lang.String , java.sql.SQLException ) ; if ( org.springframework.jdbc.support.DataAccessException != null ) { return org.springframework.jdbc.support.DataAccessException ; } SQLExceptionTranslator org.springframework.jdbc.support.SQLExceptionTranslator = org.springframework.jdbc.support.SQLExceptionTranslator ( ) ; if ( org.springframework.jdbc.support.SQLExceptionTranslator != null ) { return org.springframework.jdbc.support.SQLExceptionTranslator . translate ( java.lang.String , java.lang.String , java.sql.SQLException ) ; } return new UncategorizedSQLException ( java.lang.String , java.lang.String , java.sql.SQLException ) ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.jdbc.support.DataAccessException org.springframework.jdbc.support.DataAccessException ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.sql.SQLException java.sql.SQLException );  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.sql.SQLException java.sql.SQLException ) { return java.lang.String + STRING + java.lang.String + STRING + java.sql.SQLException . java.lang.String ( ) ; }  <METHOD_END>
