<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected final int int ( ) org.springframework.web.servlet.tags.ServletException , org.springframework.web.servlet.tags.JspException { this . org.springframework.web.servlet.tags.Errors = getRequestContext ( ) . getErrors ( this . java.lang.String , isHtmlEscape ( ) ) ; if ( this . org.springframework.web.servlet.tags.Errors != null && this . org.springframework.web.servlet.tags.Errors . hasErrors ( ) ) { this . pageContext . setAttribute ( java.lang.String , this . org.springframework.web.servlet.tags.Errors , PageContext . REQUEST_SCOPE ) ; return EVAL_BODY_INCLUDE ; } else { return SKIP_BODY ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { this . pageContext . removeAttribute ( java.lang.String , PageContext . REQUEST_SCOPE ) ; return EVAL_PAGE ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.servlet.tags.Errors org.springframework.web.servlet.tags.Errors ( ) { return this . org.springframework.web.servlet.tags.Errors ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. doFinally ( ) ; this . org.springframework.web.servlet.tags.Errors = null ; }  <METHOD_END>
