<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( TemplateLoader org.springframework.boot.autoconfigure.mustache.TemplateLoader ) { this . org.springframework.boot.autoconfigure.mustache.TemplateLoader = org.springframework.boot.autoconfigure.mustache.TemplateLoader ; }  <METHOD_END>
<METHOD_START> public void void ( Formatter org.springframework.boot.autoconfigure.mustache.Formatter ) { this . org.springframework.boot.autoconfigure.mustache.Formatter = org.springframework.boot.autoconfigure.mustache.Formatter ; }  <METHOD_END>
<METHOD_START> public void void ( Escaper org.springframework.boot.autoconfigure.mustache.Escaper ) { this . org.springframework.boot.autoconfigure.mustache.Escaper = org.springframework.boot.autoconfigure.mustache.Escaper ; }  <METHOD_END>
<METHOD_START> public void void ( Collector org.springframework.boot.autoconfigure.mustache.Collector ) { this . org.springframework.boot.autoconfigure.mustache.Collector = org.springframework.boot.autoconfigure.mustache.Collector ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public Mustache . Mustache.Compiler Mustache.Compiler ( ) java.lang.Exception { this . java.lang.Compiler = Mustache . compiler ( ) ; if ( this . java.lang.String != null ) { this . java.lang.Compiler = this . java.lang.Compiler . withDelims ( this . java.lang.String ) ; } if ( this . org.springframework.boot.autoconfigure.mustache.TemplateLoader != null ) { this . java.lang.Compiler = this . java.lang.Compiler . withLoader ( this . org.springframework.boot.autoconfigure.mustache.TemplateLoader ) ; } if ( this . org.springframework.boot.autoconfigure.mustache.Formatter != null ) { this . java.lang.Compiler = this . java.lang.Compiler . withFormatter ( this . org.springframework.boot.autoconfigure.mustache.Formatter ) ; } if ( this . org.springframework.boot.autoconfigure.mustache.Escaper != null ) { this . java.lang.Compiler = this . java.lang.Compiler . withEscaper ( this . org.springframework.boot.autoconfigure.mustache.Escaper ) ; } if ( this . org.springframework.boot.autoconfigure.mustache.Collector != null ) { this . java.lang.Compiler = this . java.lang.Compiler . withCollector ( this . org.springframework.boot.autoconfigure.mustache.Collector ) ; } if ( this . java.lang.String != null ) { this . java.lang.Compiler = this . java.lang.Compiler . defaultValue ( this . java.lang.String ) ; } if ( this . java.lang.Boolean != null ) { this . java.lang.Compiler = this . java.lang.Compiler . emptyStringIsFalse ( this . java.lang.Boolean ) ; } return this . java.lang.Compiler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return Mustache . Mustache .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
