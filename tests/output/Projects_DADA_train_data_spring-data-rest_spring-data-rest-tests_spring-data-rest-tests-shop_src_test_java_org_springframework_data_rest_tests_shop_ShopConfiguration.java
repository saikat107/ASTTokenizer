<METHOD_START> @ Bean public org.springframework.data.rest.tests.shop.ResourceProcessor<org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem>> < Resource < LineItem > > org.springframework.data.rest.tests.shop.ResourceProcessor<org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem>> ( ) { return new ResourceProcessor < Resource < LineItem > > ( ) { @ java.lang.Override public org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem> < LineItem > org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem> ( Resource < LineItem > org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem> ) { org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem> . add ( new Link ( STRING , STRING ) ) ; return org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem> ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem> < LineItem > org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem> ( Resource < LineItem > org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem> ) { org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem> . add ( new Link ( STRING , STRING ) ) ; return org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.LineItem> ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.tests.shop.ResourceProcessor<org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.ProductNameOnlyProjection>> < Resource < ProductNameOnlyProjection > > org.springframework.data.rest.tests.shop.ResourceProcessor<org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.ProductNameOnlyProjection>> ( ) { return new ResourceProcessor < Resource < ProductNameOnlyProjection > > ( ) { @ java.lang.Override public org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.ProductNameOnlyProjection> < ProductNameOnlyProjection > org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.ProductNameOnlyProjection> ( Resource < Product . Product > org.springframework.data.rest.tests.shop.Resource<Product.ProductNameOnlyProjection> ) { org.springframework.data.rest.tests.shop.Resource<Product.ProductNameOnlyProjection> . add ( new Link ( STRING , STRING ) ) ; return org.springframework.data.rest.tests.shop.Resource<Product.ProductNameOnlyProjection> ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.ProductNameOnlyProjection> < ProductNameOnlyProjection > org.springframework.data.rest.tests.shop.Resource<org.springframework.data.rest.tests.shop.ProductNameOnlyProjection> ( Resource < Product . Product > org.springframework.data.rest.tests.shop.Resource<Product.ProductNameOnlyProjection> ) { org.springframework.data.rest.tests.shop.Resource<Product.ProductNameOnlyProjection> . add ( new Link ( STRING , STRING ) ) ; return org.springframework.data.rest.tests.shop.Resource<Product.ProductNameOnlyProjection> ; }  <METHOD_END>
<METHOD_START> @ javax.annotation.PostConstruct public void void ( ) { LineItemType org.springframework.data.rest.tests.shop.LineItemType = org.springframework.data.rest.tests.shop.LineItemTypeRepository . save ( new LineItemType ( STRING ) ) ; Product org.springframework.data.rest.tests.shop.Product = org.springframework.data.rest.tests.shop.ProductRepository . save ( new Product ( STRING , new java.math.BigDecimal ( NUMBER ) ) ) ; Product org.springframework.data.rest.tests.shop.Product = org.springframework.data.rest.tests.shop.ProductRepository . save ( new Product ( STRING , new java.math.BigDecimal ( NUMBER ) ) ) ; Customer org.springframework.data.rest.tests.shop.Customer = org.springframework.data.rest.tests.shop.CustomerRepository . save ( new Customer ( STRING , STRING , Gender . MALE , new Address ( STRING , STRING , STRING , STRING ) ) ) ; Order org.springframework.data.rest.tests.shop.Order = new Order ( org.springframework.data.rest.tests.shop.Customer ) ; org.springframework.data.rest.tests.shop.Order . add ( new LineItem ( org.springframework.data.rest.tests.shop.Product , org.springframework.data.rest.tests.shop.LineItemType ) ) ; org.springframework.data.rest.tests.shop.Order . add ( new LineItem ( org.springframework.data.rest.tests.shop.Product , org.springframework.data.rest.tests.shop.LineItemType ) ) ; org.springframework.data.rest.tests.shop.OrderRepository . save ( org.springframework.data.rest.tests.shop.Order ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( RepositoryRestConfiguration org.springframework.data.rest.tests.shop.RepositoryRestConfiguration ) { org.springframework.data.rest.tests.shop.RepositoryRestConfiguration . withEntityLookup ( ) . forRepository ( ProductRepository .class , Product :: getName , ProductRepository :: findByName ) ; org.springframework.data.rest.tests.shop.RepositoryRestConfiguration . withEntityLookup ( ) . forValueRepository ( LineItemTypeRepository .class , LineItemType :: getName , LineItemTypeRepository :: findByName ) ; }  <METHOD_END>
