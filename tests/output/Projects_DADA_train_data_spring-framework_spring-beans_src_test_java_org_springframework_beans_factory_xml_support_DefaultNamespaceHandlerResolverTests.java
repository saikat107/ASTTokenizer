<METHOD_START> @ Test public void void ( ) { DefaultNamespaceHandlerResolver org.springframework.beans.factory.xml.support.DefaultNamespaceHandlerResolver = new DefaultNamespaceHandlerResolver ( java.lang.Class<? extends org.springframework.beans.factory.xml.support.DefaultNamespaceHandlerResolverTests> ( ) . java.lang.ClassLoader ( ) ) ; NamespaceHandler org.springframework.beans.factory.xml.support.NamespaceHandler = org.springframework.beans.factory.xml.support.DefaultNamespaceHandlerResolver . resolve ( STRING ) ; assertNotNull ( STRING , org.springframework.beans.factory.xml.support.NamespaceHandler ) ; assertEquals ( STRING , UtilNamespaceHandler .class , org.springframework.beans.factory.xml.support.NamespaceHandler . getClass ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultNamespaceHandlerResolver org.springframework.beans.factory.xml.support.DefaultNamespaceHandlerResolver = new DefaultNamespaceHandlerResolver ( ) ; NamespaceHandler org.springframework.beans.factory.xml.support.NamespaceHandler = org.springframework.beans.factory.xml.support.DefaultNamespaceHandlerResolver . resolve ( STRING ) ; assertNotNull ( STRING , org.springframework.beans.factory.xml.support.NamespaceHandler ) ; assertEquals ( STRING , UtilNamespaceHandler .class , org.springframework.beans.factory.xml.support.NamespaceHandler . getClass ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; try { new DefaultNamespaceHandlerResolver ( java.lang.Class<? extends org.springframework.beans.factory.xml.support.DefaultNamespaceHandlerResolverTests> ( ) . java.lang.ClassLoader ( ) , java.lang.String ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { fail ( STRING + java.lang.Throwable ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; try { new DefaultNamespaceHandlerResolver ( java.lang.Class<? extends org.springframework.beans.factory.xml.support.DefaultNamespaceHandlerResolverTests> ( ) . java.lang.ClassLoader ( ) , java.lang.String ) ; fail ( STRING ) ; } catch ( java.lang.Throwable java.lang.Throwable ) {		} }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new DefaultNamespaceHandlerResolver ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { new DefaultNamespaceHandlerResolver ( null , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new DefaultNamespaceHandlerResolver ( null , STRING ) ; }  <METHOD_END>
