<METHOD_START> public void ( ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields , AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ExposedFields , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.ExposedFields = org.springframework.data.mongodb.core.aggregation.ExposedFields ; this . org.springframework.data.mongodb.core.aggregation.AggregationOperationContext = org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( Document org.springframework.data.mongodb.core.aggregation.Document ) { return org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getMappedObject ( org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.FieldReference org.springframework.data.mongodb.core.aggregation.FieldReference ( Field org.springframework.data.mongodb.core.aggregation.Field ) { return org.springframework.data.mongodb.core.aggregation.FieldReference ( org.springframework.data.mongodb.core.aggregation.Field , org.springframework.data.mongodb.core.aggregation.Field . getTarget ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.FieldReference org.springframework.data.mongodb.core.aggregation.FieldReference ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.FieldReference ( null , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.FieldReference org.springframework.data.mongodb.core.aggregation.FieldReference ( Field org.springframework.data.mongodb.core.aggregation.Field , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; FieldReference org.springframework.data.mongodb.core.aggregation.FieldReference = org.springframework.data.mongodb.core.aggregation.FieldReference ( org.springframework.data.mongodb.core.aggregation.Field , java.lang.String ) ; if ( org.springframework.data.mongodb.core.aggregation.FieldReference != null ) { return org.springframework.data.mongodb.core.aggregation.FieldReference ; } throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.mongodb.core.aggregation.FieldReference org.springframework.data.mongodb.core.aggregation.FieldReference ( Field org.springframework.data.mongodb.core.aggregation.Field , java.lang.String java.lang.String ) { ExposedField org.springframework.data.mongodb.core.aggregation.ExposedField = org.springframework.data.mongodb.core.aggregation.ExposedFields . getField ( java.lang.String ) ; if ( org.springframework.data.mongodb.core.aggregation.ExposedField != null ) { if ( org.springframework.data.mongodb.core.aggregation.Field != null ) { return new DirectFieldReference ( new ExposedField ( org.springframework.data.mongodb.core.aggregation.Field , org.springframework.data.mongodb.core.aggregation.ExposedField . isSynthetic ( ) ) ) ; } return new DirectFieldReference ( org.springframework.data.mongodb.core.aggregation.ExposedField ) ; } if ( java.lang.String . boolean ( STRING ) ) { ExposedField org.springframework.data.mongodb.core.aggregation.ExposedField = org.springframework.data.mongodb.core.aggregation.ExposedFields . getField ( java.lang.String . java.lang.String[] ( STRING ) [ NUMBER ] ) ; if ( org.springframework.data.mongodb.core.aggregation.ExposedField != null ) { return new DirectFieldReference ( new ExposedField ( java.lang.String , true ) ) ; } } return null ; }  <METHOD_END>
