<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.web.servlet.ServletComponentScanRegistrarTests.ValuePackages .class ) ; ServletComponentRegisteringPostProcessor org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor = this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext . getBean ( ServletComponentRegisteringPostProcessor .class ) ; assertThat ( org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor . getPackagesToScan ( ) ) . contains ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.boot.web.servlet.ServletComponentScanRegistrarTests.ValuePackages .class . java.lang.String ( ) ) ) ; this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext . refresh ( ) ; ServletComponentRegisteringPostProcessor org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor = this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext . getBean ( ServletComponentRegisteringPostProcessor .class ) ; assertThat ( org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor . getPackagesToScan ( ) ) . contains ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.web.servlet.ServletComponentScanRegistrarTests.BasePackages .class ) ; ServletComponentRegisteringPostProcessor org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor = this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext . getBean ( ServletComponentRegisteringPostProcessor .class ) ; assertThat ( org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor . getPackagesToScan ( ) ) . contains ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.web.servlet.ServletComponentScanRegistrarTests.BasePackageClasses .class ) ; ServletComponentRegisteringPostProcessor org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor = this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext . getBean ( ServletComponentRegisteringPostProcessor .class ) ; assertThat ( org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor . getPackagesToScan ( ) ) . contains ( java.lang.Class<? extends org.springframework.boot.web.servlet.ServletComponentScanRegistrarTests> ( ) . java.lang.Package ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.web.servlet.ExpectedException . expect ( AnnotationConfigurationException .class ) ; this . org.springframework.boot.web.servlet.ExpectedException . expectMessage ( allOf ( containsString ( STRING ) , containsString ( STRING ) , containsString ( STRING ) , containsString ( STRING ) ) ) ; this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.web.servlet.ServletComponentScanRegistrarTests.ValueAndBasePackages .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.web.servlet.ServletComponentScanRegistrarTests.BasePackages .class , org.springframework.boot.web.servlet.ServletComponentScanRegistrarTests.AdditionalPackages .class ) ; ServletComponentRegisteringPostProcessor org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor = this . org.springframework.boot.web.servlet.AnnotationConfigApplicationContext . getBean ( ServletComponentRegisteringPostProcessor .class ) ; assertThat ( org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor . getPackagesToScan ( ) ) . contains ( STRING , STRING , STRING ) ; }  <METHOD_END>
