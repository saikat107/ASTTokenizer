<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; XmlBeanDefinitionReader org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) ; try { org.springframework.beans.factory.xml.XmlBeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( STRING , this . java.lang.Class<? extends org.springframework.beans.factory.xml.DuplicateBeanIdTests> ( ) ) ) ; fail ( STRING ) ; } catch ( java.lang.Exception java.lang.Exception ) { } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; XmlBeanDefinitionReader org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( STRING , this . java.lang.Class<? extends org.springframework.beans.factory.xml.DuplicateBeanIdTests> ( ) ) ) ; TestBean org.springframework.beans.factory.xml.TestBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( TestBean .class ) ; assertThat ( org.springframework.beans.factory.xml.TestBean . getName ( ) , equalTo ( STRING ) ) ; }  <METHOD_END>
