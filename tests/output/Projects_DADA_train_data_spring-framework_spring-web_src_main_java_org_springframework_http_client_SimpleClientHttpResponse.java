<METHOD_START> void ( java.net.HttpURLConnection java.net.HttpURLConnection ) { this . java.net.HttpURLConnection = java.net.HttpURLConnection ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) java.io.IOException { return this . java.net.HttpURLConnection . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) java.io.IOException { return this . java.net.HttpURLConnection . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.client.HttpHeaders org.springframework.http.client.HttpHeaders ( ) { if ( this . org.springframework.http.client.HttpHeaders == null ) { this . org.springframework.http.client.HttpHeaders = new HttpHeaders ( ) ; java.lang.String java.lang.String = this . java.net.HttpURLConnection . java.lang.String ( NUMBER ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { this . org.springframework.http.client.HttpHeaders . add ( java.lang.String , this . java.net.HttpURLConnection . java.lang.String ( NUMBER ) ) ; } int int = NUMBER ; while ( true ) { java.lang.String = this . java.net.HttpURLConnection . java.lang.String ( int ) ; if ( ! StringUtils . hasLength ( java.lang.String ) ) { break; } this . org.springframework.http.client.HttpHeaders . add ( java.lang.String , this . java.net.HttpURLConnection . java.lang.String ( int ) ) ; int ++ ; } } return this . org.springframework.http.client.HttpHeaders ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.InputStream java.io.InputStream ( ) java.io.IOException { java.io.InputStream java.io.InputStream = this . java.net.HttpURLConnection . java.io.InputStream ( ) ; this . java.io.InputStream = ( java.io.InputStream != null ? java.io.InputStream : this . java.net.HttpURLConnection . java.io.InputStream ( ) ) ; return this . java.io.InputStream ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . java.io.InputStream != null ) { try { StreamUtils . drain ( this . java.io.InputStream ) ; this . java.io.InputStream . void ( ) ; } catch ( java.io.IOException java.io.IOException ) { } } }  <METHOD_END>
