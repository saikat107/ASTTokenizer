<METHOD_START> @ Test public void void ( ) { EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory = mock ( EntityManagerFactory .class , withSettings ( ) . extraInterfaces ( EntityManagerFactoryInfo .class ) ) ; assertThat ( SharedEntityManagerCreator . createSharedEntityManager ( org.springframework.orm.jpa.EntityManagerFactory ) , is ( notNullValue ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = TransactionRequiredException .class ) public void void ( ) { EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory = mock ( EntityManagerFactory .class ) ; EntityManager org.springframework.orm.jpa.EntityManager = SharedEntityManagerCreator . createSharedEntityManager ( org.springframework.orm.jpa.EntityManagerFactory ) ; org.springframework.orm.jpa.EntityManager . joinTransaction ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = TransactionRequiredException .class ) public void void ( ) { EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory = mock ( EntityManagerFactory .class ) ; EntityManager org.springframework.orm.jpa.EntityManager = SharedEntityManagerCreator . createSharedEntityManager ( org.springframework.orm.jpa.EntityManagerFactory ) ; org.springframework.orm.jpa.EntityManager . flush ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = TransactionRequiredException .class ) public void void ( ) { EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory = mock ( EntityManagerFactory .class ) ; EntityManager org.springframework.orm.jpa.EntityManager = SharedEntityManagerCreator . createSharedEntityManager ( org.springframework.orm.jpa.EntityManagerFactory ) ; org.springframework.orm.jpa.EntityManager . persist ( new java.lang.Object ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = TransactionRequiredException .class ) public void void ( ) { EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory = mock ( EntityManagerFactory .class ) ; EntityManager org.springframework.orm.jpa.EntityManager = SharedEntityManagerCreator . createSharedEntityManager ( org.springframework.orm.jpa.EntityManagerFactory ) ; org.springframework.orm.jpa.EntityManager . merge ( new java.lang.Object ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = TransactionRequiredException .class ) public void void ( ) { EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory = mock ( EntityManagerFactory .class ) ; EntityManager org.springframework.orm.jpa.EntityManager = SharedEntityManagerCreator . createSharedEntityManager ( org.springframework.orm.jpa.EntityManagerFactory ) ; org.springframework.orm.jpa.EntityManager . remove ( new java.lang.Object ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = TransactionRequiredException .class ) public void void ( ) { EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory = mock ( EntityManagerFactory .class ) ; EntityManager org.springframework.orm.jpa.EntityManager = SharedEntityManagerCreator . createSharedEntityManager ( org.springframework.orm.jpa.EntityManagerFactory ) ; org.springframework.orm.jpa.EntityManager . refresh ( new java.lang.Object ( ) ) ; }  <METHOD_END>
