<METHOD_START> public void ( ) { super( Jackson2ObjectMapperBuilder . xml ( ) . build ( ) , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( XmlMapper org.springframework.web.servlet.view.xml.XmlMapper ) { super( org.springframework.web.servlet.view.xml.XmlMapper , java.lang.String ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { java.lang.Object java.lang.Object = null ; if ( this . java.lang.String != null ) { java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( this . java.lang.String ) ; if ( java.lang.Object == null ) { throw new java.lang.IllegalStateException ( STRING + this . java.lang.String + STRING ) ; } } else { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { if ( ! ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) instanceof BindingResult ) && ! java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) . boolean ( JsonView .class . java.lang.String ( ) ) ) { if ( java.lang.Object != null ) { throw new java.lang.IllegalStateException ( STRING ) ; } java.lang.Object = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ; } } } return java.lang.Object ; }  <METHOD_END>
