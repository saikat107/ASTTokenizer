<METHOD_START> protected void ( A A ) { super( A , org.springframework.boot.test.json.ObjectContentAssert .class ); }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.AbstractObjectArrayAssert<?,java.lang.Object> < ? , java.lang.Object > org.springframework.boot.test.json.AbstractObjectArrayAssert<?,java.lang.Object> ( ) { Objects . instance ( ) . assertIsInstanceOf ( this . info , this . actual , java.lang.Object [] .class ) ; return Assertions . assertThat ( ( java.lang.Object [] ) this . actual ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public org.springframework.boot.test.json.AbstractMapAssert<?,?,java.lang.Object,java.lang.Object> < ? , ? , java.lang.Object , java.lang.Object > org.springframework.boot.test.json.AbstractMapAssert<?,?,java.lang.Object,java.lang.Object> ( ) { Objects . instance ( ) . assertIsInstanceOf ( this . info , this . actual , java.util.Map .class ) ; return Assertions . assertThat ( ( java.util.Map<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > ) this . actual ) ; }  <METHOD_END>
