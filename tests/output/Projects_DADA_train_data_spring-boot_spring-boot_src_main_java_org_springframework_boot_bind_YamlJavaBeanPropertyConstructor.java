<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { super( java.lang.Class<> ); this . yamlClassConstructors . put ( NodeId . mapping , new org.springframework.boot.bind.YamlJavaBeanPropertyConstructor.CustomPropertyConstructMapping ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.util.Map<java.lang.Class<?>,java.util.Map<java.lang.String,java.lang.String>> < java.lang.Class<?> < ? > , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > > java.util.Map<java.lang.Class<?>,java.util.Map<java.lang.String,java.lang.String>> ) { this( java.lang.Class<> ); for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.util.Map<java.lang.Class<?>,java.util.Map<java.lang.String,java.lang.String>> . java.util.Set<java.lang.Class<?>> ( ) ) { java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.Class<?>,java.util.Map<java.lang.String,java.lang.String>> . java.util.Map<java.lang.String,java.lang.String> ( java.lang.Class<> ) ; if ( java.util.Map<java.lang.String,java.lang.String> != null ) { for ( java.lang.String java.lang.String : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.lang.String> ( ) ) { void ( java.lang.String , java.lang.Class<> , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) ) ; } } } }  <METHOD_END>
<METHOD_START> protected final void void ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { java.util.Map<java.lang.String,org.springframework.boot.bind.Property> < java.lang.String , Property > java.util.Map<java.lang.String,org.springframework.boot.bind.Property> = this . java.util.Map<java.lang.Class<?>,java.util.Map<java.lang.String,org.springframework.boot.bind.Property>> . get ( java.lang.Class<> ) ; if ( java.util.Map<java.lang.String,org.springframework.boot.bind.Property> == null ) { java.util.Map<java.lang.String,org.springframework.boot.bind.Property> = new java.util.HashMap <> ( ) ; this . java.util.Map<java.lang.Class<?>,java.util.Map<java.lang.String,org.springframework.boot.bind.Property>> . put ( java.lang.Class<> , java.util.Map<java.lang.String,org.springframework.boot.bind.Property> ) ; } try { java.util.Map<java.lang.String,org.springframework.boot.bind.Property> . put ( java.lang.String , this . org.springframework.boot.bind.PropertyUtils . getProperty ( java.lang.Class<> , java.lang.String ) ) ; } catch ( java.beans.IntrospectionException java.beans.IntrospectionException ) { throw new java.lang.RuntimeException ( java.beans.IntrospectionException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.bind.Property org.springframework.boot.bind.Property ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String )				throws java.beans.IntrospectionException { java.util.Map<java.lang.String,org.springframework.boot.bind.Property> < java.lang.String , Property > java.util.Map<java.lang.String,org.springframework.boot.bind.Property> = org.springframework.boot.bind.YamlJavaBeanPropertyConstructor .this . java.util.Map<java.lang.Class<?>,java.util.Map<java.lang.String,org.springframework.boot.bind.Property>> . get ( java.lang.Class<> ) ; Property org.springframework.boot.bind.Property = ( java.util.Map<java.lang.String,org.springframework.boot.bind.Property> == null ? null : java.util.Map<java.lang.String,org.springframework.boot.bind.Property> . get ( java.lang.String ) ) ; return ( org.springframework.boot.bind.Property == null ? super. getProperty ( java.lang.Class<> , java.lang.String ) : org.springframework.boot.bind.Property ) ; }  <METHOD_END>
