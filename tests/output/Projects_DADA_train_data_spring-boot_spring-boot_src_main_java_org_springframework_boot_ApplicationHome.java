<METHOD_START> public void ( ) { this( null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . java.io.File = java.io.File ( java.lang.Class<> == null ? java.lang.Class<?> ( ) : java.lang.Class<> ) ; this . java.io.File = java.io.File ( this . java.io.File ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Class<?> < ? > java.lang.Class<?> ( ) { try { java.lang.ClassLoader java.lang.ClassLoader = java.lang.Class<? extends org.springframework.boot.ApplicationHome> ( ) . java.lang.ClassLoader ( ) ; return java.lang.Class<?> ( java.lang.ClassLoader . java.util.Enumeration<java.net.URL> ( STRING ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> private java.lang.Class<?> < ? > java.lang.Class<?> ( java.util.Enumeration<java.net.URL> < java.net.URL > java.util.Enumeration<java.net.URL> ) { while ( java.util.Enumeration<java.net.URL> . boolean ( ) ) { try { java.io.InputStream java.io.InputStream = java.util.Enumeration<java.net.URL> . java.net.URL ( ) . java.io.InputStream ( ) ; try { java.util.jar.Manifest java.util.jar.Manifest = new java.util.jar.Manifest ( java.io.InputStream ) ; java.lang.String java.lang.String = java.util.jar.Manifest . java.util.jar.Attributes ( ) . java.lang.String ( STRING ) ; if ( java.lang.String != null ) { return ClassUtils . forName ( java.lang.String , java.lang.Class<? extends org.springframework.boot.ApplicationHome> ( ) . java.lang.ClassLoader ( ) ) ; } } finally { java.io.InputStream . void ( ) ; } } catch ( java.lang.Exception java.lang.Exception ) {			} } return null ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( java.lang.Class<?> < ? > java.lang.Class<?> ) { try { java.security.ProtectionDomain java.security.ProtectionDomain = ( java.lang.Class<> == null ? null : java.lang.Class<> . java.security.ProtectionDomain ( ) ) ; java.security.CodeSource java.security.CodeSource = ( java.security.ProtectionDomain == null ? null : java.security.ProtectionDomain . java.security.CodeSource ( ) ) ; java.net.URL java.net.URL = ( java.security.CodeSource == null ? null : java.security.CodeSource . java.net.URL ( ) ) ; java.io.File java.io.File = ( java.net.URL == null ? null : java.io.File ( java.net.URL ) ) ; if ( java.io.File != null && java.io.File . boolean ( ) && ! boolean ( ) ) { return java.io.File . java.io.File ( ) ; } return null ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { try { for ( java.lang.StackTraceElement java.lang.StackTraceElement : java.lang.Thread . java.lang.Thread ( ) . java.lang.StackTraceElement[] ( ) ) { if ( java.lang.StackTraceElement . java.lang.String ( ) . boolean ( STRING ) ) { return true ; } } } catch ( java.lang.Exception java.lang.Exception ) {		} return false ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( java.net.URL java.net.URL ) throws java.io.IOException { java.net.URLConnection java.net.URLConnection = java.net.URL . java.net.URLConnection ( ) ; if ( java.net.URLConnection instanceof java.net.JarURLConnection ) { return java.io.File ( ( ( java.net.JarURLConnection ) java.net.URLConnection ) . java.util.jar.JarFile ( ) ) ; } return new java.io.File ( java.net.URL . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( java.util.jar.JarFile java.util.jar.JarFile ) { java.lang.String java.lang.String = java.util.jar.JarFile . java.lang.String ( ) ; int int = java.lang.String . int ( STRING ) ; if ( int > NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) ; } return new java.io.File ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( java.io.File java.io.File ) { java.io.File java.io.File = java.io.File ; java.io.File = ( java.io.File == null ? java.io.File ( ) : java.io.File ) ; if ( java.io.File . boolean ( ) ) { java.io.File = java.io.File . java.io.File ( ) ; } java.io.File = ( java.io.File . boolean ( ) ? java.io.File : new java.io.File ( STRING ) ) ; return java.io.File . java.io.File ( ) ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( ) { java.lang.String java.lang.String = java.lang.System . java.lang.String ( STRING ) ; return new java.io.File ( StringUtils . hasLength ( java.lang.String ) ? java.lang.String : STRING ) ; }  <METHOD_END>
<METHOD_START> public java.io.File java.io.File ( ) { return this . java.io.File ; }  <METHOD_END>
<METHOD_START> public java.io.File java.io.File ( ) { return this . java.io.File ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.io.File ( ) . java.lang.String ( ) ; }  <METHOD_END>
