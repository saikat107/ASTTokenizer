<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MessageListenerContainer org.springframework.jms.config.MessageListenerContainer ) { if ( org.springframework.jms.config.MessageListenerContainer instanceof AbstractMessageListenerContainer ) { void ( ( AbstractMessageListenerContainer ) org.springframework.jms.config.MessageListenerContainer ) ; } else { new org.springframework.jms.config.AbstractJmsListenerEndpoint.JcaEndpointConfigurer ( ) . void ( org.springframework.jms.config.MessageListenerContainer ) ; } }  <METHOD_END>
<METHOD_START> private void void ( AbstractMessageListenerContainer org.springframework.jms.config.AbstractMessageListenerContainer ) { if ( java.lang.String ( ) != null ) { org.springframework.jms.config.AbstractMessageListenerContainer . setDestinationName ( java.lang.String ( ) ) ; } if ( java.lang.String ( ) != null ) { org.springframework.jms.config.AbstractMessageListenerContainer . setSubscriptionName ( java.lang.String ( ) ) ; } if ( java.lang.String ( ) != null ) { org.springframework.jms.config.AbstractMessageListenerContainer . setMessageSelector ( java.lang.String ( ) ) ; } if ( java.lang.String ( ) != null ) { org.springframework.jms.config.AbstractMessageListenerContainer . setConcurrency ( java.lang.String ( ) ) ; } void ( org.springframework.jms.config.AbstractMessageListenerContainer ) ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.jms.config.MessageListener org.springframework.jms.config.MessageListener ( MessageListenerContainer org.springframework.jms.config.MessageListenerContainer );  <METHOD_END>
<METHOD_START> private void void ( MessageListenerContainer org.springframework.jms.config.MessageListenerContainer ) { MessageListener org.springframework.jms.config.MessageListener = org.springframework.jms.config.MessageListener ( org.springframework.jms.config.MessageListenerContainer ) ; if ( org.springframework.jms.config.MessageListener == null ) { throw new java.lang.IllegalStateException ( STRING + this + STRING ) ; } org.springframework.jms.config.MessageListenerContainer . setupMessageListener ( org.springframework.jms.config.MessageListener ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.StringBuilder java.lang.StringBuilder ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; return java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.Class<? extends org.springframework.jms.config.AbstractJmsListenerEndpoint> ( ) . java.lang.String ( ) ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) . java.lang.StringBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.StringBuilder ( ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof JmsMessageEndpointManager ) { void ( ( JmsMessageEndpointManager ) java.lang.Object ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Object + STRING + AbstractMessageListenerContainer .class . java.lang.String ( ) + STRING + JmsMessageEndpointManager .class . java.lang.String ( ) + STRING ) ; } }  <METHOD_END>
<METHOD_START> private void void ( JmsMessageEndpointManager org.springframework.jms.config.JmsMessageEndpointManager ) { JmsActivationSpecConfig org.springframework.jms.config.JmsActivationSpecConfig = org.springframework.jms.config.JmsMessageEndpointManager . getActivationSpecConfig ( ) ; if ( org.springframework.jms.config.JmsActivationSpecConfig == null ) { org.springframework.jms.config.JmsActivationSpecConfig = new JmsActivationSpecConfig ( ) ; org.springframework.jms.config.JmsMessageEndpointManager . setActivationSpecConfig ( org.springframework.jms.config.JmsActivationSpecConfig ) ; } if ( java.lang.String ( ) != null ) { org.springframework.jms.config.JmsActivationSpecConfig . setDestinationName ( java.lang.String ( ) ) ; } if ( java.lang.String ( ) != null ) { org.springframework.jms.config.JmsActivationSpecConfig . setSubscriptionName ( java.lang.String ( ) ) ; } if ( java.lang.String ( ) != null ) { org.springframework.jms.config.JmsActivationSpecConfig . setMessageSelector ( java.lang.String ( ) ) ; } if ( java.lang.String ( ) != null ) { org.springframework.jms.config.JmsActivationSpecConfig . setConcurrency ( java.lang.String ( ) ) ; } void ( org.springframework.jms.config.JmsMessageEndpointManager ) ; }  <METHOD_END>
