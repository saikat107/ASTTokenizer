<METHOD_START> public void ( Field org.springframework.data.mongodb.core.aggregation.Field , Field org.springframework.data.mongodb.core.aggregation.Field , Field org.springframework.data.mongodb.core.aggregation.Field , Field org.springframework.data.mongodb.core.aggregation.Field ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.Field = org.springframework.data.mongodb.core.aggregation.Field ; this . org.springframework.data.mongodb.core.aggregation.Field = org.springframework.data.mongodb.core.aggregation.Field ; this . org.springframework.data.mongodb.core.aggregation.Field = org.springframework.data.mongodb.core.aggregation.Field ; this . org.springframework.data.mongodb.core.aggregation.ExposedField = new ExposedField ( org.springframework.data.mongodb.core.aggregation.Field , true ) ; }  <METHOD_END>
<METHOD_START> private void ( ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields ( ) { return ExposedFields . from ( org.springframework.data.mongodb.core.aggregation.ExposedField ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; org.springframework.data.mongodb.core.aggregation.Document . append ( STRING , org.springframework.data.mongodb.core.aggregation.Field . getTarget ( ) ) ; org.springframework.data.mongodb.core.aggregation.Document . append ( STRING , org.springframework.data.mongodb.core.aggregation.Field . getTarget ( ) ) ; org.springframework.data.mongodb.core.aggregation.Document . append ( STRING , org.springframework.data.mongodb.core.aggregation.Field . getTarget ( ) ) ; org.springframework.data.mongodb.core.aggregation.Document . append ( STRING , org.springframework.data.mongodb.core.aggregation.ExposedField . getTarget ( ) ) ; return new Document ( STRING , org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.LookupOperation.FromBuilder org.springframework.data.mongodb.core.aggregation.LookupOperation.FromBuilder ( ) { return new org.springframework.data.mongodb.core.aggregation.LookupOperation.LookupOperationBuilder ( ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.LookupOperation.LocalFieldBuilder org.springframework.data.mongodb.core.aggregation.LookupOperation.LocalFieldBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.LookupOperation.ForeignFieldBuilder org.springframework.data.mongodb.core.aggregation.LookupOperation.ForeignFieldBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.LookupOperation.AsBuilder org.springframework.data.mongodb.core.aggregation.LookupOperation.AsBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.LookupOperation org.springframework.data.mongodb.core.aggregation.LookupOperation ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> private void ( ) { this . org.springframework.data.mongodb.core.aggregation.LookupOperation = new org.springframework.data.mongodb.core.aggregation.LookupOperation ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.LookupOperation.FromBuilder org.springframework.data.mongodb.core.aggregation.LookupOperation.FromBuilder ( ) { return new org.springframework.data.mongodb.core.aggregation.LookupOperation.LookupOperationBuilder ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.LookupOperation.LocalFieldBuilder org.springframework.data.mongodb.core.aggregation.LookupOperation.LocalFieldBuilder ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; org.springframework.data.mongodb.core.aggregation.LookupOperation . org.springframework.data.mongodb.core.aggregation.Field = Fields . field ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.LookupOperation org.springframework.data.mongodb.core.aggregation.LookupOperation ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; org.springframework.data.mongodb.core.aggregation.LookupOperation . org.springframework.data.mongodb.core.aggregation.ExposedField = new ExposedField ( Fields . field ( java.lang.String ) , true ) ; return new org.springframework.data.mongodb.core.aggregation.LookupOperation ( org.springframework.data.mongodb.core.aggregation.LookupOperation . org.springframework.data.mongodb.core.aggregation.Field , org.springframework.data.mongodb.core.aggregation.LookupOperation . org.springframework.data.mongodb.core.aggregation.Field , org.springframework.data.mongodb.core.aggregation.LookupOperation . org.springframework.data.mongodb.core.aggregation.Field , org.springframework.data.mongodb.core.aggregation.LookupOperation . org.springframework.data.mongodb.core.aggregation.ExposedField ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.LookupOperation.AsBuilder org.springframework.data.mongodb.core.aggregation.LookupOperation.AsBuilder ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; org.springframework.data.mongodb.core.aggregation.LookupOperation . org.springframework.data.mongodb.core.aggregation.Field = Fields . field ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.LookupOperation.ForeignFieldBuilder org.springframework.data.mongodb.core.aggregation.LookupOperation.ForeignFieldBuilder ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; org.springframework.data.mongodb.core.aggregation.LookupOperation . org.springframework.data.mongodb.core.aggregation.Field = Fields . field ( java.lang.String ) ; return this ; }  <METHOD_END>
