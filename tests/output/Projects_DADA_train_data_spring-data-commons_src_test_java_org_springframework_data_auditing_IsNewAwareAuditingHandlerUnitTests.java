<METHOD_START> @ Before public void void ( ) { this . org.springframework.data.auditing.SampleMappingContext = new SampleMappingContext ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.auditing.IsNewAwareAuditingHandler org.springframework.data.auditing.IsNewAwareAuditingHandler ( ) { return new IsNewAwareAuditingHandler ( mock ( PersistentEntities .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AuditedUser org.springframework.data.auditing.AuditedUser = new AuditedUser ( ) ; org.springframework.data.auditing.IsNewAwareAuditingHandler ( ) . markAudited ( org.springframework.data.auditing.AuditedUser ) ; assertThat ( user . createdDate ) . isNotNull ( ) ; assertThat ( user . modifiedDate ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AuditedUser org.springframework.data.auditing.AuditedUser = new AuditedUser ( ) ; user . id = NUMBER ; org.springframework.data.auditing.IsNewAwareAuditingHandler ( ) . markAudited ( org.springframework.data.auditing.AuditedUser ) ; assertThat ( user . createdDate ) . isNull ( ) ; assertThat ( user . modifiedDate ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new IsNewAwareAuditingHandler ( ( PersistentEntities ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { new IsNewAwareAuditingHandler ( new PersistentEntities ( java.util.Collections . java.util.Set<java.lang.Object> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { IsNewAwareAuditingHandler org.springframework.data.auditing.IsNewAwareAuditingHandler = org.springframework.data.auditing.IsNewAwareAuditingHandler ( ) ; org.springframework.data.auditing.IsNewAwareAuditingHandler . markAudited ( java.util.Optional . java.util.Optional<java.lang.Object> ( ) ) ; org.springframework.data.auditing.IsNewAwareAuditingHandler . markCreated ( java.util.Optional . java.util.Optional<java.lang.Object> ( ) ) ; org.springframework.data.auditing.IsNewAwareAuditingHandler . markModified ( java.util.Optional . java.util.Optional<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.auditing.IsNewAwareAuditingHandler ( ) . markAudited ( java.util.Optional . java.util.Optional<org.springframework.data.auditing.IsNewAwareAuditingHandlerUnitTests.EntityWithoutId> ( new org.springframework.data.auditing.IsNewAwareAuditingHandlerUnitTests.EntityWithoutId ( ) ) ) ; }  <METHOD_END>
