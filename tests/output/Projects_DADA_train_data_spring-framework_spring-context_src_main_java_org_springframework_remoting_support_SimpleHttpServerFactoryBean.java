<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.concurrent.Executor java.util.concurrent.Executor ) { this . java.util.concurrent.Executor = java.util.concurrent.Executor ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,com.sun.net.httpserver.HttpHandler> < java.lang.String , com.sun.net.httpserver.HttpHandler > java.util.Map<java.lang.String,com.sun.net.httpserver.HttpHandler> ) { this . java.util.Map<java.lang.String,com.sun.net.httpserver.HttpHandler> = java.util.Map<java.lang.String,com.sun.net.httpserver.HttpHandler> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<com.sun.net.httpserver.Filter> < com.sun.net.httpserver.Filter > java.util.List<com.sun.net.httpserver.Filter> ) { this . java.util.List<com.sun.net.httpserver.Filter> = java.util.List<com.sun.net.httpserver.Filter> ; }  <METHOD_END>
<METHOD_START> public void void ( com.sun.net.httpserver.Authenticator com.sun.net.httpserver.Authenticator ) { this . com.sun.net.httpserver.Authenticator = com.sun.net.httpserver.Authenticator ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.io.IOException { java.net.InetSocketAddress java.net.InetSocketAddress = ( this . java.lang.String != null ? new java.net.InetSocketAddress ( this . java.lang.String , this . int ) : new java.net.InetSocketAddress ( this . int ) ) ; this . com.sun.net.httpserver.HttpServer = com.sun.net.httpserver.HttpServer . com.sun.net.httpserver.HttpServer ( java.net.InetSocketAddress , this . int ) ; if ( this . java.util.concurrent.Executor != null ) { this . com.sun.net.httpserver.HttpServer . void ( this . java.util.concurrent.Executor ) ; } if ( this . java.util.Map<java.lang.String,com.sun.net.httpserver.HttpHandler> != null ) { for ( java.lang.String java.lang.String : this . java.util.Map<java.lang.String,com.sun.net.httpserver.HttpHandler> . java.util.Set<java.lang.String> ( ) ) { com.sun.net.httpserver.HttpContext com.sun.net.httpserver.HttpContext = this . com.sun.net.httpserver.HttpServer . com.sun.net.httpserver.HttpContext ( java.lang.String , this . java.util.Map<java.lang.String,com.sun.net.httpserver.HttpHandler> . com.sun.net.httpserver.HttpHandler ( java.lang.String ) ) ; if ( this . java.util.List<com.sun.net.httpserver.Filter> != null ) { com.sun.net.httpserver.HttpContext . java.util.List<com.sun.net.httpserver.Filter> ( ) . boolean ( this . java.util.List<com.sun.net.httpserver.Filter> ) ; } if ( this . com.sun.net.httpserver.Authenticator != null ) { com.sun.net.httpserver.HttpContext . com.sun.net.httpserver.Authenticator ( this . com.sun.net.httpserver.Authenticator ) ; } } } if ( this . org.springframework.remoting.support.Log . isInfoEnabled ( ) ) { this . org.springframework.remoting.support.Log . info ( STRING + java.net.InetSocketAddress ) ; } this . com.sun.net.httpserver.HttpServer . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.sun.net.httpserver.HttpServer com.sun.net.httpserver.HttpServer ( ) { return this . com.sun.net.httpserver.HttpServer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<? extends com.sun.net.httpserver.HttpServer> < ? extends com.sun.net.httpserver.HttpServer > java.lang.Class<? extends com.sun.net.httpserver.HttpServer> ( ) { return ( this . com.sun.net.httpserver.HttpServer != null ? this . com.sun.net.httpserver.HttpServer . java.lang.Class<? extends com.sun.net.httpserver.HttpServer> ( ) : com.sun.net.httpserver.HttpServer .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.springframework.remoting.support.Log . info ( STRING ) ; this . com.sun.net.httpserver.HttpServer . void ( this . int ) ; }  <METHOD_END>
