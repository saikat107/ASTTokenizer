<METHOD_START> public void ( DeviceDelegatingViewResolverProperties org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverProperties ) { this . org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverProperties = org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverProperties ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver ( ViewResolver org.springframework.boot.autoconfigure.mobile.ViewResolver , int int ) { LiteDeviceDelegatingViewResolver org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver = new LiteDeviceDelegatingViewResolver ( org.springframework.boot.autoconfigure.mobile.ViewResolver ) ; org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver . setEnableFallback ( this . org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverProperties . isEnableFallback ( ) ) ; org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver . setNormalPrefix ( this . org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverProperties . getNormalPrefix ( ) ) ; org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver . setNormalSuffix ( this . org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverProperties . getNormalSuffix ( ) ) ; org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver . setMobilePrefix ( this . org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverProperties . getMobilePrefix ( ) ) ; org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver . setMobileSuffix ( this . org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverProperties . getMobileSuffix ( ) ) ; org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver . setTabletPrefix ( this . org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverProperties . getTabletPrefix ( ) ) ; org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver . setTabletSuffix ( this . org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverProperties . getTabletSuffix ( ) ) ; org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver . setOrder ( int ) ; return org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver ( ViewResolver org.springframework.boot.autoconfigure.mobile.ViewResolver ) { if ( ! ( org.springframework.boot.autoconfigure.mobile.ViewResolver instanceof Ordered ) ) { throw new java.lang.IllegalStateException ( STRING + org.springframework.boot.autoconfigure.mobile.ViewResolver + STRING + Ordered .class . java.lang.String ( ) ) ; } int int = ( ( Ordered ) org.springframework.boot.autoconfigure.mobile.ViewResolver ) . getOrder ( ) ; return org.springframework.boot.autoconfigure.mobile.LiteDeviceDelegatingViewResolver ( org.springframework.boot.autoconfigure.mobile.ViewResolver , int ( int ) ) ; }  <METHOD_END>
<METHOD_START> private int int ( int int ) { if ( int == Ordered . HIGHEST_PRECEDENCE ) { return Ordered . HIGHEST_PRECEDENCE ; } return int - NUMBER ; }  <METHOD_END>
