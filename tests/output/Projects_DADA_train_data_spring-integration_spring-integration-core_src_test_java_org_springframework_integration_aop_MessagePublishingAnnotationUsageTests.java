<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = org.springframework.integration.aop.MessagePublishingAnnotationUsageTests.TestBean . java.lang.String ( STRING , STRING ) ; assertNotNull ( java.lang.String ) ; Message < ? > org.springframework.integration.aop.Message<?> = org.springframework.integration.aop.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.aop.Message<> ) ; assertEquals ( STRING , org.springframework.integration.aop.Message<> . getPayload ( ) ) ; assertEquals ( STRING , org.springframework.integration.aop.Message<> . getHeaders ( ) . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = org.springframework.integration.aop.MessagePublishingAnnotationUsageTests.TestBean . java.lang.String ( STRING , STRING ) ; assertNotNull ( java.lang.String ) ; Message < ? > org.springframework.integration.aop.Message<?> = org.springframework.integration.aop.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.aop.Message<> ) ; assertEquals ( STRING , org.springframework.integration.aop.Message<> . getPayload ( ) ) ; assertEquals ( STRING , org.springframework.integration.aop.Message<> . getHeaders ( ) . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = org.springframework.integration.aop.MessagePublishingAnnotationUsageTests.TestBean . java.lang.String ( STRING , STRING ) ; assertNotNull ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; Message < ? > org.springframework.integration.aop.Message<?> = org.springframework.integration.aop.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.aop.Message<> ) ; assertEquals ( STRING , org.springframework.integration.aop.Message<> . getPayload ( ) ) ; assertEquals ( STRING , org.springframework.integration.aop.Message<> . getHeaders ( ) . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Publisher ( channel = STRING ) public java.lang.String java.lang.String ( java.lang.String java.lang.String , @ Header ( STRING ) java.lang.String java.lang.String ) { return java.lang.String + STRING + java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Publisher ( channel = STRING ) @ Payload public java.lang.String java.lang.String ( java.lang.String java.lang.String , @ Header java.lang.String java.lang.String ) { return java.lang.String + STRING + java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Publisher ( channel = STRING ) public java.lang.String java.lang.String ( @ Payload java.lang.String java.lang.String , @ Header java.lang.String java.lang.String ) { return java.lang.String + STRING + java.lang.String ; }  <METHOD_END>
