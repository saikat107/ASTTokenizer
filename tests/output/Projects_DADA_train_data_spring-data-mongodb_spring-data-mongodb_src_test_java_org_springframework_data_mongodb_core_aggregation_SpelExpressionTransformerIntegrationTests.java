<METHOD_START> @ Before public void void ( ) { this . org.springframework.data.mongodb.core.aggregation.SpelExpressionTransformer = new SpelExpressionTransformer ( ) ; this . org.springframework.data.mongodb.core.aggregation.DbRefResolver = new DefaultDbRefResolver ( org.springframework.data.mongodb.core.aggregation.MongoDbFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MappingMongoConverter org.springframework.data.mongodb.core.aggregation.MappingMongoConverter = new MappingMongoConverter ( org.springframework.data.mongodb.core.aggregation.DbRefResolver , new MongoMappingContext ( ) ) ; TypeBasedAggregationOperationContext org.springframework.data.mongodb.core.aggregation.TypeBasedAggregationOperationContext = new TypeBasedAggregationOperationContext ( Data .class , new MongoMappingContext ( ) , new QueryMapper ( org.springframework.data.mongodb.core.aggregation.MappingMongoConverter ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.SpelExpressionTransformer . transform ( STRING , org.springframework.data.mongodb.core.aggregation.TypeBasedAggregationOperationContext , new java.lang.Object [ NUMBER ] ) . toString ( ) , is ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.core.aggregation.ExpectedException . expect ( MappingException .class ) ; org.springframework.data.mongodb.core.aggregation.ExpectedException . expectMessage ( STRING ) ; MappingMongoConverter org.springframework.data.mongodb.core.aggregation.MappingMongoConverter = new MappingMongoConverter ( org.springframework.data.mongodb.core.aggregation.DbRefResolver , new MongoMappingContext ( ) ) ; TypeBasedAggregationOperationContext org.springframework.data.mongodb.core.aggregation.TypeBasedAggregationOperationContext = new TypeBasedAggregationOperationContext ( Data .class , new MongoMappingContext ( ) , new QueryMapper ( org.springframework.data.mongodb.core.aggregation.MappingMongoConverter ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.SpelExpressionTransformer . transform ( STRING , org.springframework.data.mongodb.core.aggregation.TypeBasedAggregationOperationContext , new java.lang.Object [ NUMBER ] ) . toString ( ) , is ( STRING ) ) ; }  <METHOD_END>
