<METHOD_START> @ java.lang.Override public void void ( WebSocketSession org.springframework.web.socket.handler.WebSocketSession ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( WebSocketSession org.springframework.web.socket.handler.WebSocketSession , WebSocketMessage < ? > org.springframework.web.socket.handler.WebSocketMessage<?> ) throws java.lang.Exception { if ( org.springframework.web.socket.handler.WebSocketMessage<> instanceof TextMessage ) { void ( org.springframework.web.socket.handler.WebSocketSession , ( TextMessage ) org.springframework.web.socket.handler.WebSocketMessage<> ) ; } else if ( org.springframework.web.socket.handler.WebSocketMessage<> instanceof BinaryMessage ) { void ( org.springframework.web.socket.handler.WebSocketSession , ( BinaryMessage ) org.springframework.web.socket.handler.WebSocketMessage<> ) ; } else if ( org.springframework.web.socket.handler.WebSocketMessage<> instanceof PongMessage ) { void ( org.springframework.web.socket.handler.WebSocketSession , ( PongMessage ) org.springframework.web.socket.handler.WebSocketMessage<> ) ; } else { throw new java.lang.IllegalStateException ( STRING + org.springframework.web.socket.handler.WebSocketMessage<> ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( WebSocketSession org.springframework.web.socket.handler.WebSocketSession , TextMessage org.springframework.web.socket.handler.TextMessage ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> protected void void ( WebSocketSession org.springframework.web.socket.handler.WebSocketSession , BinaryMessage org.springframework.web.socket.handler.BinaryMessage ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> protected void void ( WebSocketSession org.springframework.web.socket.handler.WebSocketSession , PongMessage org.springframework.web.socket.handler.PongMessage ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( WebSocketSession org.springframework.web.socket.handler.WebSocketSession , java.lang.Throwable java.lang.Throwable ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( WebSocketSession org.springframework.web.socket.handler.WebSocketSession , CloseStatus org.springframework.web.socket.handler.CloseStatus ) throws java.lang.Exception {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
