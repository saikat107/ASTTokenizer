<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> < java.lang.String , MediaType > java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> = java.util.Collections . java.util.Map ( STRING , MediaType . APPLICATION_JSON ) ; org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy = new org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy ( STRING , java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) ; java.util.List<org.springframework.web.accept.MediaType> < MediaType > java.util.List<org.springframework.web.accept.MediaType> = org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy . resolveMediaTypes ( null ) ; assertEquals ( NUMBER , java.util.List<org.springframework.web.accept.MediaType> . size ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.web.accept.MediaType> . get ( NUMBER ) . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> < java.lang.String , MediaType > java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> = null ; org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy = new org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy ( STRING , java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) ; java.util.List<org.springframework.web.accept.MediaType> < MediaType > java.util.List<org.springframework.web.accept.MediaType> = org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy . resolveMediaTypes ( null ) ; assertEquals ( NUMBER , java.util.List<org.springframework.web.accept.MediaType> . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> < java.lang.String , MediaType > java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> = java.util.Collections . java.util.Map ( STRING , MediaType . APPLICATION_JSON ) ; org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy = new org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy ( null , java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) ; java.util.List<org.springframework.web.accept.MediaType> < MediaType > java.util.List<org.springframework.web.accept.MediaType> = org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy . resolveMediaTypes ( null ) ; assertEquals ( NUMBER , java.util.List<org.springframework.web.accept.MediaType> . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> < java.lang.String , MediaType > java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> = null ; org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy = new org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy ( STRING , java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) ; java.util.List<org.springframework.web.accept.MediaType> < MediaType > java.util.List<org.springframework.web.accept.MediaType> = org.springframework.web.accept.MappingContentNegotiationStrategyTests.TestMappingContentNegotiationStrategy . resolveMediaTypes ( null ) ; assertEquals ( NUMBER , java.util.List<org.springframework.web.accept.MediaType> . size ( ) ) ; assertEquals ( STRING , java.util.List<org.springframework.web.accept.MediaType> . get ( NUMBER ) . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> < java.lang.String , MediaType > java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) { super( java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ); this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( NativeWebRequest org.springframework.web.accept.NativeWebRequest ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.accept.MediaType org.springframework.web.accept.MediaType ( NativeWebRequest org.springframework.web.accept.NativeWebRequest , java.lang.String java.lang.String ) { return STRING . boolean ( java.lang.String ) ? MediaType . APPLICATION_XML : null ; }  <METHOD_END>
