<METHOD_START> public void ( SessionFactory < F > org.springframework.integration.file.remote.handler.SessionFactory<F> ) { Assert . notNull ( org.springframework.integration.file.remote.handler.SessionFactory<F> , STRING ) ; this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> = new RemoteFileTemplate < F > ( org.springframework.integration.file.remote.handler.SessionFactory<F> ) ; this . org.springframework.integration.file.remote.handler.FileExistsMode = FileExistsMode . REPLACE ; }  <METHOD_END>
<METHOD_START> public void ( RemoteFileTemplate < F > org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> ) { this( org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> , FileExistsMode . REPLACE ); }  <METHOD_END>
<METHOD_START> public void ( RemoteFileTemplate < F > org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> , FileExistsMode org.springframework.integration.file.remote.handler.FileExistsMode ) { Assert . notNull ( org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> , STRING ) ; this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> = org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> ; this . org.springframework.integration.file.remote.handler.FileExistsMode = org.springframework.integration.file.remote.handler.FileExistsMode ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . setAutoCreateDirectory ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . setRemoteFileSeparator ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( Expression org.springframework.integration.file.remote.handler.Expression ) { this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . setRemoteDirectoryExpression ( org.springframework.integration.file.remote.handler.Expression ) ; }  <METHOD_END>
<METHOD_START> public void void ( Expression org.springframework.integration.file.remote.handler.Expression ) { this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . setTemporaryRemoteDirectoryExpression ( org.springframework.integration.file.remote.handler.Expression ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . getTemporaryFileSuffix ( ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . isUseTemporaryFileName ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . setUseTemporaryFileName ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( FileNameGenerator org.springframework.integration.file.remote.handler.FileNameGenerator ) { this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . setFileNameGenerator ( org.springframework.integration.file.remote.handler.FileNameGenerator ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . setCharset ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . setTemporaryFileSuffix ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; void ( java.lang.Integer . int ( java.lang.String , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { Assert . isTrue ( boolean ( ) , STRING ) ; this . java.lang.Integer = int ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . setBeanFactory ( this . getBeanFactory ( ) ) ; this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Message < ? > org.springframework.integration.file.remote.handler.Message<?> ) throws java.lang.Exception { java.lang.String java.lang.String = this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> . send ( org.springframework.integration.file.remote.handler.Message<> , this . org.springframework.integration.file.remote.handler.FileExistsMode ) ; if ( this . java.lang.Integer != null && boolean ( ) ) { void ( this . org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> , java.lang.String , this . java.lang.Integer ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( RemoteFileTemplate < F > org.springframework.integration.file.remote.handler.RemoteFileTemplate<F> , java.lang.String java.lang.String , int int ) { }  <METHOD_END>
