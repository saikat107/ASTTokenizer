<METHOD_START> @ Produces public org.springframework.data.solr.repository.cdi.SolrOperations org.springframework.data.solr.repository.cdi.SolrOperations ( ) java.io.IOException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { EmbeddedSolrServerFactory org.springframework.data.solr.repository.cdi.EmbeddedSolrServerFactory = new EmbeddedSolrServerFactory ( ResourceUtils . getURL ( STRING ) . getPath ( ) ) ; SolrTemplate org.springframework.data.solr.repository.cdi.SolrTemplate = new SolrTemplate ( org.springframework.data.solr.repository.cdi.EmbeddedSolrServerFactory ) ; org.springframework.data.solr.repository.cdi.SolrTemplate . afterPropertiesSet ( ) ; return org.springframework.data.solr.repository.cdi.SolrTemplate ; }  <METHOD_END>
<METHOD_START> @ javax.annotation.PreDestroy public void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { SolrOperations org.springframework.data.solr.repository.cdi.SolrOperations ; try { org.springframework.data.solr.repository.cdi.SolrOperations = org.springframework.data.solr.repository.cdi.SolrOperations ( ) ; org.springframework.data.solr.repository.cdi.SolrOperations . delete ( new SimpleQuery ( new SimpleStringCriteria ( STRING ) ) ) ; org.springframework.data.solr.repository.cdi.SolrOperations . commit ( ) ; } catch ( java.io.IOException | org.xml.sax.SAXException | javax.xml.parsers.ParserConfigurationException java.lang.Exception ) { throw new java.lang.RuntimeException ( java.lang.Exception ) ; } }  <METHOD_END>
