<METHOD_START> @ Autowired public void ( RepositoryRestConfiguration org.springframework.data.rest.webmvc.RepositoryRestConfiguration , RepositoryResourceMappings org.springframework.data.rest.webmvc.RepositoryResourceMappings , Repositories org.springframework.data.rest.webmvc.Repositories ) { Assert . notNull ( org.springframework.data.rest.webmvc.RepositoryRestConfiguration , STRING ) ; Assert . notNull ( org.springframework.data.rest.webmvc.RepositoryResourceMappings , STRING ) ; Assert . notNull ( org.springframework.data.rest.webmvc.Repositories , STRING ) ; this . org.springframework.data.rest.webmvc.RepositoryRestConfiguration = org.springframework.data.rest.webmvc.RepositoryRestConfiguration ; this . org.springframework.data.rest.webmvc.RepositoryResourceMappings = org.springframework.data.rest.webmvc.RepositoryResourceMappings ; this . org.springframework.data.rest.webmvc.Repositories = org.springframework.data.rest.webmvc.Repositories ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( value = java.lang.String , method = RequestMethod . OPTIONS ) public org.springframework.data.rest.webmvc.HttpEntity<?> < ? > org.springframework.data.rest.webmvc.HttpEntity<?> ( ) { HttpHeaders org.springframework.data.rest.webmvc.HttpHeaders = new HttpHeaders ( ) ; org.springframework.data.rest.webmvc.HttpHeaders . setAllow ( java.util.Collections . java.util.Set ( HttpMethod . GET ) ) ; return new ResponseEntity < java.lang.Object > ( org.springframework.data.rest.webmvc.HttpHeaders , HttpStatus . OK ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( value = java.lang.String , method = GET ) org.springframework.data.rest.webmvc.HttpEntity<org.springframework.data.rest.webmvc.ResourceSupport> < ResourceSupport > org.springframework.data.rest.webmvc.HttpEntity<org.springframework.data.rest.webmvc.ResourceSupport> ( ) { ResourceSupport org.springframework.data.rest.webmvc.ResourceSupport = new ResourceSupport ( ) ; org.springframework.data.rest.webmvc.ResourceSupport . add ( new Link ( java.lang.String ( this . org.springframework.data.rest.webmvc.RepositoryRestConfiguration ) ) . withSelfRel ( ) ) ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : this . org.springframework.data.rest.webmvc.Repositories ) { ResourceMetadata org.springframework.data.rest.webmvc.ResourceMetadata = this . org.springframework.data.rest.webmvc.RepositoryResourceMappings . getMetadataFor ( java.lang.Class<> ) ; if ( org.springframework.data.rest.webmvc.ResourceMetadata . isExported ( ) ) { org.springframework.data.rest.webmvc.ResourceSupport . add ( new Link ( java.lang.String ( this . org.springframework.data.rest.webmvc.RepositoryRestConfiguration , org.springframework.data.rest.webmvc.ResourceMetadata ) , org.springframework.data.rest.webmvc.ResourceMetadata . getRel ( ) ) ) ; } } return new ResponseEntity < ResourceSupport > ( org.springframework.data.rest.webmvc.ResourceSupport , HttpStatus . OK ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( RepositoryRestConfiguration org.springframework.data.rest.webmvc.RepositoryRestConfiguration ) { BaseUri org.springframework.data.rest.webmvc.BaseUri = new BaseUri ( org.springframework.data.rest.webmvc.RepositoryRestConfiguration . getBaseUri ( ) ) ; return org.springframework.data.rest.webmvc.BaseUri . getUriComponentsBuilder ( ) . path ( org.springframework.data.rest.webmvc.ProfileController . java.lang.String ) . build ( ) . toString ( ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( RepositoryRestConfiguration org.springframework.data.rest.webmvc.RepositoryRestConfiguration , ResourceMapping org.springframework.data.rest.webmvc.ResourceMapping ) { java.lang.String java.lang.String = java.lang.String ( org.springframework.data.rest.webmvc.RepositoryRestConfiguration ) ; return org.springframework.data.rest.webmvc.ResourceMapping == null ? java.lang.String : java.lang.String + org.springframework.data.rest.webmvc.ResourceMapping . getPath ( ) ; }  <METHOD_END>
