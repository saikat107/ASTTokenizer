<METHOD_START> @ Before public void void ( ) java.lang.Exception { java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests> ( ) . java.lang.reflect.Method ( STRING , HttpEntity .class , HttpEntity .class ) ; org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new MethodParameter ( java.lang.reflect.Method , NUMBER ) ; org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new MethodParameter ( java.lang.reflect.Method , NUMBER ) ; org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer = new ModelAndViewContainer ( ) ; org.springframework.web.servlet.mvc.method.annotation.WebDataBinderFactory = new org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ValidatingBinderFactory ( ) ; org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest = new MockHttpServletRequest ( ) ; org.springframework.web.servlet.mvc.method.annotation.MockHttpServletResponse = new MockHttpServletResponse ( ) ; org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setMethod ( STRING ) ; org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest = new ServletWebRequest ( org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest , org.springframework.web.servlet.mvc.method.annotation.MockHttpServletResponse ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setContent ( java.lang.String . byte[] ( STRING ) ) ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setContentType ( STRING ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> = new java.util.ArrayList<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> <> ( ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> . add ( new MappingJackson2HttpMessageConverter ( ) ) ; HttpEntityMethodProcessor org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor = new HttpEntityMethodProcessor ( java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> ) ; @ java.lang.SuppressWarnings ( STRING ) HttpEntity < org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean > org.springframework.web.servlet.mvc.method.annotation.HttpEntity<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean> = ( HttpEntity < org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean > ) org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor . resolveArgument ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter , org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , org.springframework.web.servlet.mvc.method.annotation.WebDataBinderFactory ) ; assertNotNull ( org.springframework.web.servlet.mvc.method.annotation.HttpEntity<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean> ) ; assertEquals ( STRING , org.springframework.web.servlet.mvc.method.annotation.HttpEntity<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean> . getBody ( ) . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setContent ( new byte [ NUMBER ] ) ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setContentType ( STRING ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> = new java.util.ArrayList<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> <> ( ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> . add ( new MappingJackson2HttpMessageConverter ( ) ) ; HttpEntityMethodProcessor org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor = new HttpEntityMethodProcessor ( java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> ) ; HttpEntity < ? > org.springframework.web.servlet.mvc.method.annotation.HttpEntity<?> = ( HttpEntity < ? > ) org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor . resolveArgument ( this . org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , this . org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , this . org.springframework.web.servlet.mvc.method.annotation.WebDataBinderFactory ) ; assertNotNull ( org.springframework.web.servlet.mvc.method.annotation.HttpEntity<> ) ; assertNull ( org.springframework.web.servlet.mvc.method.annotation.HttpEntity<> . getBody ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setContent ( java.lang.String . byte[] ( STRING ) ) ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setContentType ( STRING ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> = new java.util.ArrayList<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> <> ( ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> . add ( new MappingJackson2HttpMessageConverter ( ) ) ; HttpEntityMethodProcessor org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor = new HttpEntityMethodProcessor ( java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> ) ; @ java.lang.SuppressWarnings ( STRING ) HttpEntity < java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean> < org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean > > org.springframework.web.servlet.mvc.method.annotation.HttpEntity<java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean>> = ( HttpEntity < java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean> < org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean > > ) org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor . resolveArgument ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter , org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , org.springframework.web.servlet.mvc.method.annotation.WebDataBinderFactory ) ; assertNotNull ( org.springframework.web.servlet.mvc.method.annotation.HttpEntity<java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean>> ) ; assertEquals ( STRING , org.springframework.web.servlet.mvc.method.annotation.HttpEntity<java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean>> . getBody ( ) . get ( NUMBER ) . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.mvc.method.annotation.HttpEntity<java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean>> . getBody ( ) . get ( NUMBER ) . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.reflect.Method java.lang.reflect.Method = org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.MySimpleParameterizedController .class . java.lang.reflect.Method ( STRING , HttpEntity .class ) ; HandlerMethod org.springframework.web.servlet.mvc.method.annotation.HandlerMethod = new HandlerMethod ( new org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.MySimpleParameterizedController ( ) , java.lang.reflect.Method ) ; MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter = org.springframework.web.servlet.mvc.method.annotation.HandlerMethod . getMethodParameters ( ) [ NUMBER ] ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setContent ( java.lang.String . byte[] ( STRING ) ) ; this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setContentType ( MediaType . APPLICATION_JSON_VALUE ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> = new java.util.ArrayList<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> <> ( ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> . add ( new MappingJackson2HttpMessageConverter ( ) ) ; HttpEntityMethodProcessor org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor = new HttpEntityMethodProcessor ( java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> ) ; @ java.lang.SuppressWarnings ( STRING ) HttpEntity < org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean > org.springframework.web.servlet.mvc.method.annotation.HttpEntity<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean> = ( HttpEntity < org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean > ) org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor . resolveArgument ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter , org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , org.springframework.web.servlet.mvc.method.annotation.WebDataBinderFactory ) ; assertNotNull ( org.springframework.web.servlet.mvc.method.annotation.HttpEntity<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean> ) ; assertEquals ( STRING , org.springframework.web.servlet.mvc.method.annotation.HttpEntity<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean> . getBody ( ) . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.reflect.Method java.lang.reflect.Method = org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.JacksonController .class . java.lang.reflect.Method ( STRING ) ; HandlerMethod org.springframework.web.servlet.mvc.method.annotation.HandlerMethod = new HandlerMethod ( new org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.JacksonController ( ) , java.lang.reflect.Method ) ; MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter = org.springframework.web.servlet.mvc.method.annotation.HandlerMethod . getReturnType ( ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> = new java.util.ArrayList<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> <> ( ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> . add ( new MappingJackson2HttpMessageConverter ( ) ) ; HttpEntityMethodProcessor org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor = new HttpEntityMethodProcessor ( java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> ) ; java.lang.Object java.lang.Object = new org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.JacksonController ( ) . org.springframework.web.servlet.mvc.method.annotation.HttpEntity<java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass>> ( ) ; org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor . handleReturnValue ( java.lang.Object , org.springframework.web.servlet.mvc.method.annotation.MethodParameter , this . org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , this . org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest ) ; java.lang.String java.lang.String = this . org.springframework.web.servlet.mvc.method.annotation.MockHttpServletResponse . getContentAsString ( ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> = new java.util.ArrayList<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> <> ( ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> . add ( new ByteArrayHttpMessageConverter ( ) ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> . add ( new StringHttpMessageConverter ( ) ) ; java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests> ( ) . java.lang.reflect.Method ( STRING ) ; MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new MethodParameter ( java.lang.reflect.Method , - NUMBER ) ; ResponseEntity < java.lang.StringBuilder > org.springframework.web.servlet.mvc.method.annotation.ResponseEntity<java.lang.StringBuilder> = ResponseEntity . ok ( new java.lang.StringBuilder ( STRING ) ) ; HttpEntityMethodProcessor org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor = new HttpEntityMethodProcessor ( java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> ) ; org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor . handleReturnValue ( org.springframework.web.servlet.mvc.method.annotation.ResponseEntity<java.lang.StringBuilder> , org.springframework.web.servlet.mvc.method.annotation.MethodParameter , org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest ) ; assertEquals ( STRING , org.springframework.web.servlet.mvc.method.annotation.MockHttpServletResponse . getHeader ( STRING ) ) ; assertEquals ( STRING , org.springframework.web.servlet.mvc.method.annotation.MockHttpServletResponse . getContentAsString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private void void ( HttpEntity < java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean> < org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean > > org.springframework.web.servlet.mvc.method.annotation.HttpEntity<java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean>> , HttpEntity < org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean > org.springframework.web.servlet.mvc.method.annotation.HttpEntity<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.SimpleBean> ) {	}  <METHOD_END>
<METHOD_START> private org.springframework.web.servlet.mvc.method.annotation.ResponseEntity<java.lang.CharSequence> < java.lang.CharSequence > org.springframework.web.servlet.mvc.method.annotation.ResponseEntity<java.lang.CharSequence> ( ) { return null ; }  <METHOD_END>
<METHOD_START> public void void ( HttpEntity < DTO > org.springframework.web.servlet.mvc.method.annotation.HttpEntity<DTO> ) {		}  <METHOD_END>
<METHOD_START> java.lang.Long java.lang.Long ( )  <METHOD_END>
<METHOD_START> void void ( java.lang.Long java.lang.Long );  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Long java.lang.Long ( ) { return java.lang.Long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Long java.lang.Long ) { this . java.lang.Long = java.lang.Long ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.method.annotation.WebDataBinder org.springframework.web.servlet.mvc.method.annotation.WebDataBinder ( NativeWebRequest org.springframework.web.servlet.mvc.method.annotation.NativeWebRequest , java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { LocalValidatorFactoryBean org.springframework.web.servlet.mvc.method.annotation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.web.servlet.mvc.method.annotation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; WebDataBinder org.springframework.web.servlet.mvc.method.annotation.WebDataBinder = new WebDataBinder ( java.lang.Object , java.lang.String ) ; org.springframework.web.servlet.mvc.method.annotation.WebDataBinder . setValidator ( org.springframework.web.servlet.mvc.method.annotation.LocalValidatorFactoryBean ) ; return org.springframework.web.servlet.mvc.method.annotation.WebDataBinder ; }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> @ RequestMapping @ ResponseBody public org.springframework.web.servlet.mvc.method.annotation.HttpEntity<java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass>> < java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass> < org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass > > org.springframework.web.servlet.mvc.method.annotation.HttpEntity<java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass>> ( ) { java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass> < org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass > java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass> = new java.util.ArrayList<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass> <> ( ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass> . boolean ( new org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.Foo ( STRING ) ) ; java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass> . boolean ( new org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.Bar ( STRING ) ) ; return new HttpEntity <> ( java.util.List<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests.ParentClass> ) ; }  <METHOD_END>
