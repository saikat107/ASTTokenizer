<METHOD_START> protected abstract org.springframework.boot.json.JsonParser org.springframework.boot.json.JsonParser ( )  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.json.JsonParser . parseMap ( STRING ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> ) . hasSize ( NUMBER ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( ( ( java.lang.Number ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . long ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.json.JsonParser . parseMap ( STRING ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> ) . hasSize ( NUMBER ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.json.JsonParser . parseMap ( STRING ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = this . org.springframework.boot.json.JsonParser . parseList ( STRING ) ; assertThat ( java.util.List<java.lang.Object> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = this . org.springframework.boot.json.JsonParser . parseList ( STRING ) ; assertThat ( java.util.List<java.lang.Object> ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = this . org.springframework.boot.json.JsonParser . parseList ( STRING ) ; assertThat ( java.util.List<java.lang.Object> ) . hasSize ( NUMBER ) ; assertThat ( ( ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) ) . hasSize ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.json.JsonParser . parseMap ( STRING ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> ) . hasSize ( NUMBER ) ; assertThat ( ( ( java.util.List<java.lang.Object> < java.lang.Object > ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ) . hasSize ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.json.ExpectedException . expect ( java.lang.RuntimeException .class ) ; this . org.springframework.boot.json.JsonParser . parseMap ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.json.ExpectedException . expect ( java.lang.RuntimeException .class ) ; this . org.springframework.boot.json.JsonParser . parseList ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.json.ExpectedException . expect ( java.lang.RuntimeException .class ) ; this . org.springframework.boot.json.JsonParser . parseMap ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.json.ExpectedException . expect ( java.lang.RuntimeException .class ) ; this . org.springframework.boot.json.JsonParser . parseList ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.json.ExpectedException . expect ( java.lang.RuntimeException .class ) ; this . org.springframework.boot.json.JsonParser . parseMap ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.json.ExpectedException . expect ( java.lang.RuntimeException .class ) ; this . org.springframework.boot.json.JsonParser . parseList ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = this . org.springframework.boot.json.JsonParser . parseList ( STRING ) ; assertThat ( java.util.List<java.lang.Object> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.json.JsonParser . parseMap ( STRING ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> ) . hasSize ( NUMBER ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.json.ExpectedException . expect ( java.lang.RuntimeException .class ) ; this . org.springframework.boot.json.JsonParser . parseMap ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.json.ExpectedException . expect ( java.lang.RuntimeException .class ) ; this . org.springframework.boot.json.JsonParser . parseList ( STRING ) ; }  <METHOD_END>
