<METHOD_START> public void ( BeanDefinition org.springframework.beans.factory.parsing.BeanDefinition , java.lang.String java.lang.String ) { super( org.springframework.beans.factory.parsing.BeanDefinition , java.lang.String ); void ( org.springframework.beans.factory.parsing.BeanDefinition ) ; }  <METHOD_END>
<METHOD_START> public void ( BeanDefinition org.springframework.beans.factory.parsing.BeanDefinition , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { super( org.springframework.beans.factory.parsing.BeanDefinition , java.lang.String , java.lang.String[] ); void ( org.springframework.beans.factory.parsing.BeanDefinition ) ; }  <METHOD_END>
<METHOD_START> public void ( BeanDefinitionHolder org.springframework.beans.factory.parsing.BeanDefinitionHolder ) { super( org.springframework.beans.factory.parsing.BeanDefinitionHolder ); void ( org.springframework.beans.factory.parsing.BeanDefinitionHolder . getBeanDefinition ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( BeanDefinition org.springframework.beans.factory.parsing.BeanDefinition ) { java.util.List<org.springframework.beans.factory.parsing.BeanDefinition> < BeanDefinition > java.util.List<org.springframework.beans.factory.parsing.BeanDefinition> = new java.util.ArrayList<org.springframework.beans.factory.parsing.BeanDefinition> <> ( ) ; java.util.List<org.springframework.beans.factory.parsing.BeanReference> < BeanReference > java.util.List<org.springframework.beans.factory.parsing.BeanReference> = new java.util.ArrayList<org.springframework.beans.factory.parsing.BeanReference> <> ( ) ; PropertyValues org.springframework.beans.factory.parsing.PropertyValues = org.springframework.beans.factory.parsing.BeanDefinition . getPropertyValues ( ) ; for ( int int = NUMBER ; int < org.springframework.beans.factory.parsing.PropertyValues . getPropertyValues ( ) . length ; int ++ ) { PropertyValue org.springframework.beans.factory.parsing.PropertyValue = org.springframework.beans.factory.parsing.PropertyValues . getPropertyValues ( ) [ int ] ; java.lang.Object java.lang.Object = org.springframework.beans.factory.parsing.PropertyValue . getValue ( ) ; if ( java.lang.Object instanceof BeanDefinitionHolder ) { java.util.List<org.springframework.beans.factory.parsing.BeanDefinition> . add ( ( ( BeanDefinitionHolder ) java.lang.Object ) . getBeanDefinition ( ) ) ; } else if ( java.lang.Object instanceof BeanDefinition ) { java.util.List<org.springframework.beans.factory.parsing.BeanDefinition> . add ( ( BeanDefinition ) java.lang.Object ) ; } else if ( java.lang.Object instanceof BeanReference ) { java.util.List<org.springframework.beans.factory.parsing.BeanReference> . add ( ( BeanReference ) java.lang.Object ) ; } } this . org.springframework.beans.factory.parsing.BeanDefinition[] = java.util.List<org.springframework.beans.factory.parsing.BeanDefinition> . toArray ( new BeanDefinition [ java.util.List<org.springframework.beans.factory.parsing.BeanDefinition> . size ( ) ] ) ; this . org.springframework.beans.factory.parsing.BeanReference[] = java.util.List<org.springframework.beans.factory.parsing.BeanReference> . toArray ( new BeanReference [ java.util.List<org.springframework.beans.factory.parsing.BeanReference> . size ( ) ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return getBeanName ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return getShortDescription ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.beans.factory.parsing.BeanDefinition [] org.springframework.beans.factory.parsing.BeanDefinition[] ( ) { return new BeanDefinition [] { getBeanDefinition ( ) } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.beans.factory.parsing.BeanDefinition [] org.springframework.beans.factory.parsing.BeanDefinition[] ( ) { return this . org.springframework.beans.factory.parsing.BeanDefinition[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.beans.factory.parsing.BeanReference [] org.springframework.beans.factory.parsing.BeanReference[] ( ) { return this . org.springframework.beans.factory.parsing.BeanReference[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( this == java.lang.Object || ( java.lang.Object instanceof org.springframework.beans.factory.parsing.BeanComponentDefinition && super. boolean ( java.lang.Object ) ) ) ; }  <METHOD_END>
