<METHOD_START> public void ( ManagementServletContext org.springframework.boot.actuate.endpoint.mvc.ManagementServletContext ) { super( org.springframework.boot.actuate.endpoint.mvc.ManagementServletContext ); }  <METHOD_END>
<METHOD_START> @ RequestMapping ( produces = MediaType . TEXT_HTML_VALUE ) public java.lang.String java.lang.String ( HttpServletRequest org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest ) { ServletUriComponentsBuilder org.springframework.boot.actuate.endpoint.mvc.ServletUriComponentsBuilder = ServletUriComponentsBuilder . fromRequest ( org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest ) ; java.lang.String java.lang.String = org.springframework.boot.actuate.endpoint.mvc.ServletUriComponentsBuilder . build ( ) . toUriString ( ) ; return STRING + java.lang.String + ( java.lang.String . boolean ( STRING ) ? STRING : STRING ) + this . org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ResourceLoader org.springframework.boot.actuate.endpoint.mvc.ResourceLoader ) { this . org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation = org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation ( org.springframework.boot.actuate.endpoint.mvc.ResourceLoader ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ResourceHandlerRegistry org.springframework.boot.actuate.endpoint.mvc.ResourceHandlerRegistry ) { if ( this . org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation != null ) { java.lang.String java.lang.String = getManagementServletContext ( ) . getContextPath ( ) + getPath ( ) ; org.springframework.boot.actuate.endpoint.mvc.ResourceHandlerRegistry . addResourceHandler ( java.lang.String + STRING , java.lang.String + STRING ) . addResourceLocations ( this . org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation . java.lang.String ( ) ) . setCachePeriod ( NUMBER ) . resourceChain ( true ) . addTransformer ( new org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.InitialUrlTransformer ( ) ) ; } }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation ( ResourceLoader org.springframework.boot.actuate.endpoint.mvc.ResourceLoader ) { for ( org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation : org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation[] ) { try { Resource org.springframework.boot.actuate.endpoint.mvc.Resource = org.springframework.boot.actuate.endpoint.mvc.ResourceLoader . getResource ( org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation . java.lang.String ( ) ) ; if ( org.springframework.boot.actuate.endpoint.mvc.Resource != null && org.springframework.boot.actuate.endpoint.mvc.Resource . exists ( ) ) { return org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation ; } } catch ( java.lang.Exception java.lang.Exception ) { } } return null ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String + this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.actuate.endpoint.mvc.Resource org.springframework.boot.actuate.endpoint.mvc.Resource ( HttpServletRequest org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , Resource org.springframework.boot.actuate.endpoint.mvc.Resource , ResourceTransformerChain org.springframework.boot.actuate.endpoint.mvc.ResourceTransformerChain ) throws java.io.IOException { org.springframework.boot.actuate.endpoint.mvc.Resource = org.springframework.boot.actuate.endpoint.mvc.ResourceTransformerChain . transform ( org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , org.springframework.boot.actuate.endpoint.mvc.Resource ) ; if ( org.springframework.boot.actuate.endpoint.mvc.Resource . getFilename ( ) . equalsIgnoreCase ( org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint .this . org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint.HalBrowserLocation . java.lang.String ( ) ) ) { return org.springframework.boot.actuate.endpoint.mvc.Resource ( org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , org.springframework.boot.actuate.endpoint.mvc.Resource ) ; } return org.springframework.boot.actuate.endpoint.mvc.Resource ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.endpoint.mvc.Resource org.springframework.boot.actuate.endpoint.mvc.Resource ( HttpServletRequest org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , Resource org.springframework.boot.actuate.endpoint.mvc.Resource )				throws java.io.IOException { byte [] byte[] = FileCopyUtils . copyToByteArray ( org.springframework.boot.actuate.endpoint.mvc.Resource . getInputStream ( ) ) ; java.lang.String java.lang.String = new java.lang.String ( byte[] , java.nio.charset.Charset ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList <> ( ServletUriComponentsBuilder . fromRequest ( org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest ) . build ( ) . getPathSegments ( ) ) ; java.util.List<java.lang.String> . java.lang.String ( java.util.List<java.lang.String> . int ( ) - NUMBER ) ; java.lang.String java.lang.String = STRING + StringUtils . collectionToDelimitedString ( java.util.List<java.lang.String> , STRING ) ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING + java.lang.String + STRING ) ; return new TransformedResource ( org.springframework.boot.actuate.endpoint.mvc.Resource , java.lang.String . byte[] ( java.nio.charset.Charset ) ) ; }  <METHOD_END>
