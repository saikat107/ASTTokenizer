<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config1 .class , org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config2 .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; void ( org.springframework.context.annotation.AnnotationConfigApplicationContext ) ; org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config2 org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config2 = org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config2 .class ) ; assertThat ( org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config2 . org.springframework.context.annotation.TestBean , is ( org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( TestBean .class ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config2 .class , org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config1 .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; void ( org.springframework.context.annotation.AnnotationConfigApplicationContext ) ; }  <METHOD_END>
<METHOD_START> private void void ( AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext ) { org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config1 org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config1 = org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config1 .class ) ; TestBean org.springframework.context.annotation.TestBean = org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( TestBean .class ) ; assertThat ( org.springframework.context.annotation.ConfigurationClassPostConstructAndAutowiringTests.Config1 . int , is ( NUMBER ) ) ; assertThat ( org.springframework.context.annotation.TestBean . getAge ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ javax.annotation.PostConstruct public void void ( ) { org.springframework.context.annotation.TestBean ( ) . setAge ( org.springframework.context.annotation.TestBean ( ) . getAge ( ) + NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.TestBean org.springframework.context.annotation.TestBean ( ) { int ++ ; TestBean org.springframework.context.annotation.TestBean = new TestBean ( ) ; org.springframework.context.annotation.TestBean . setAge ( NUMBER ) ; return org.springframework.context.annotation.TestBean ; }  <METHOD_END>
<METHOD_START> @ Autowired void void ( TestBean org.springframework.context.annotation.TestBean ) { this . org.springframework.context.annotation.TestBean = org.springframework.context.annotation.TestBean ; }  <METHOD_END>
