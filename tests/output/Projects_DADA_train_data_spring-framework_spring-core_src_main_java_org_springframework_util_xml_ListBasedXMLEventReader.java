<METHOD_START> public void ( java.util.List<javax.xml.stream.events.XMLEvent> < javax.xml.stream.events.XMLEvent > java.util.List<javax.xml.stream.events.XMLEvent> ) { Assert . notNull ( java.util.List<javax.xml.stream.events.XMLEvent> , STRING ) ; this . java.util.List<javax.xml.stream.events.XMLEvent> = java.util.Collections . java.util.List<javax.xml.stream.events.XMLEvent> ( java.util.List<javax.xml.stream.events.XMLEvent> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ( this . int != this . java.util.List<javax.xml.stream.events.XMLEvent> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.xml.stream.events.XMLEvent javax.xml.stream.events.XMLEvent ( ) { if ( this . int < this . java.util.List<javax.xml.stream.events.XMLEvent> . int ( ) ) { return this . java.util.List<javax.xml.stream.events.XMLEvent> . javax.xml.stream.events.XMLEvent ( this . int ++ ) ; } else { throw new java.util.NoSuchElementException ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.xml.stream.events.XMLEvent javax.xml.stream.events.XMLEvent ( ) { if ( this . int < this . java.util.List<javax.xml.stream.events.XMLEvent> . int ( ) ) { return this . java.util.List<javax.xml.stream.events.XMLEvent> . javax.xml.stream.events.XMLEvent ( this . int ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. close ( ) ; this . java.util.List<javax.xml.stream.events.XMLEvent> . void ( ) ; }  <METHOD_END>
