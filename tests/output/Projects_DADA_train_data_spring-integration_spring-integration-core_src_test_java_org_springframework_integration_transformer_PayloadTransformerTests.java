<METHOD_START> @ Test public void void ( ) { org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer = new org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer ( ) ; Message < ? > org.springframework.integration.transformer.Message<?> = new GenericMessage < java.lang.String > ( STRING ) ; Message < ? > org.springframework.integration.transformer.Message<?> = org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer . transform ( org.springframework.integration.transformer.Message<> ) ; assertEquals ( NUMBER , org.springframework.integration.transformer.Message<> . getPayload ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = MessagingException .class ) public void void ( ) { org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer = new org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer ( ) ; Message < ? > org.springframework.integration.transformer.Message<?> = new GenericMessage < java.lang.String > ( STRING ) ; org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer . transform ( org.springframework.integration.transformer.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = MessagingException .class ) public void void ( ) { org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer = new org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer ( ) ; Message < ? > org.springframework.integration.transformer.Message<?> = new GenericMessage < java.util.Date > ( new java.util.Date ( ) ) ; org.springframework.integration.transformer.PayloadTransformerTests.TestPayloadTransformer . transform ( org.springframework.integration.transformer.Message<> ) ; }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Integer java.lang.Integer ( java.lang.String java.lang.String ) throws java.lang.Exception { if ( java.lang.String . boolean ( STRING ) ) { throw new java.lang.Exception ( STRING ) ; } return java.lang.String . int ( ) ; }  <METHOD_END>
