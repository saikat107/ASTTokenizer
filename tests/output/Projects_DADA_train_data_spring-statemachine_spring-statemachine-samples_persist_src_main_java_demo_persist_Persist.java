<METHOD_START> public void ( PersistStateMachineHandler demo.persist.PersistStateMachineHandler ) { this . demo.persist.PersistStateMachineHandler = demo.persist.PersistStateMachineHandler ; this . demo.persist.PersistStateMachineHandler . addPersistStateChangeListener ( demo.persist.PersistStateChangeListener ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { java.util.List<demo.persist.Order> < Order > java.util.List<demo.persist.Order> = demo.persist.JdbcTemplate . query ( STRING , new RowMapper < Order > ( ) { public demo.persist.Order demo.persist.Order ( java.sql.ResultSet java.sql.ResultSet , int int ) throws java.sql.SQLException { return new Order ( java.sql.ResultSet . int ( STRING ) , java.sql.ResultSet . java.lang.String ( STRING ) ) ; } } ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( Order demo.persist.Order : java.util.List<demo.persist.Order> ) { java.lang.StringBuilder . java.lang.StringBuilder ( demo.persist.Order ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public demo.persist.Order demo.persist.Order ( java.sql.ResultSet java.sql.ResultSet , int int ) throws java.sql.SQLException { return new Order ( java.sql.ResultSet . int ( STRING ) , java.sql.ResultSet . java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int , java.lang.String java.lang.String ) { Order demo.persist.Order = demo.persist.JdbcTemplate . queryForObject ( STRING , new java.lang.Object [] { int } , new RowMapper < Order > ( ) { public demo.persist.Order demo.persist.Order ( java.sql.ResultSet java.sql.ResultSet , int int ) throws java.sql.SQLException { return new Order ( java.sql.ResultSet . int ( STRING ) , java.sql.ResultSet . java.lang.String ( STRING ) ) ; } } ) ; demo.persist.PersistStateMachineHandler . handleEventWithState ( MessageBuilder . withPayload ( java.lang.String ) . setHeader ( STRING , int ) . build ( ) , o . state ) ; }  <METHOD_END>
<METHOD_START> public demo.persist.Order demo.persist.Order ( java.sql.ResultSet java.sql.ResultSet , int int ) throws java.sql.SQLException { return new Order ( java.sql.ResultSet . int ( STRING ) , java.sql.ResultSet . java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( State < java.lang.String , java.lang.String > demo.persist.State<java.lang.String,java.lang.String> , Message < java.lang.String > demo.persist.Message<java.lang.String> , Transition < java.lang.String , java.lang.String > demo.persist.Transition<java.lang.String,java.lang.String> , StateMachine < java.lang.String , java.lang.String > demo.persist.StateMachine<java.lang.String,java.lang.String> ) { if ( demo.persist.Message<java.lang.String> != null && demo.persist.Message<java.lang.String> . getHeaders ( ) . containsKey ( STRING ) ) { java.lang.Integer java.lang.Integer = demo.persist.Message<java.lang.String> . getHeaders ( ) . get ( STRING , java.lang.Integer .class ) ; demo.persist.JdbcTemplate . update ( STRING , demo.persist.State<java.lang.String,java.lang.String> . getId ( ) , java.lang.Integer ) ; } }  <METHOD_END>
