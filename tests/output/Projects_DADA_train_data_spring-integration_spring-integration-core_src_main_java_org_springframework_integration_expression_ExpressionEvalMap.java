<METHOD_START> private void ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> , org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback ) { this . java.util.Map<java.lang.String,?> = java.util.Map<java.lang.String,> ; this . org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback = org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { java.lang.Object java.lang.Object = this . java.util.Map<java.lang.String,> . get ( java.lang.Object ) ; if ( java.lang.Object != null ) { Expression org.springframework.integration.expression.Expression ; if ( java.lang.Object instanceof Expression ) { org.springframework.integration.expression.Expression = ( Expression ) java.lang.Object ; } else if ( java.lang.Object instanceof java.lang.String ) { org.springframework.integration.expression.Expression = new LiteralExpression ( ( java.lang.String ) java.lang.Object ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + STRING + java.lang.Object + STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; } return this . org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback . java.lang.Object ( org.springframework.integration.expression.Expression ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return this . java.util.Map<java.lang.String,> . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return this . java.util.Map<java.lang.String,> . java.util.Set<java.lang.String> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . java.util.Map<java.lang.String,> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.Map<java.lang.String,> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return this . java.util.Map<java.lang.String,> . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.Map<java.lang.String,> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> < java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Map<? extends java.lang.String,?> < ? extends java.lang.String , ? > java.util.Map<? extends java.lang.String,?> ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.util.Map<java.lang.String,> . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { Assert . notNull ( java.util.Map<java.lang.String,> , STRING ) ; return new org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder ( java.util.Map<java.lang.String,> ) ; }  <METHOD_END>
<METHOD_START> java.lang.Object java.lang.Object ( Expression org.springframework.integration.expression.Expression );  <METHOD_END>
<METHOD_START> public void ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object , java.lang.Class<?> < ? > java.lang.Class<?> ) { this . org.springframework.integration.expression.EvaluationContext = org.springframework.integration.expression.EvaluationContext ; this . java.lang.Object = java.lang.Object ; this . java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Expression org.springframework.integration.expression.Expression ) { if ( this . org.springframework.integration.expression.EvaluationContext != null ) { return org.springframework.integration.expression.Expression . getValue ( this . org.springframework.integration.expression.EvaluationContext , this . java.lang.Object , this . java.lang.Class<> ) ; } return org.springframework.integration.expression.Expression . getValue ( this . java.lang.Object , this . java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { this . java.util.Map<java.lang.String,?> = java.util.Map<java.lang.String,> ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapFinalBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapFinalBuilder ( org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback ) { this . org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback = org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback ; return this . org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapFinalBuilder ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapFinalBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapFinalBuilder ( ) { return this . org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapFinalBuilder ( org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( EvaluationContext org.springframework.integration.expression.EvaluationContext ) { this . org.springframework.integration.expression.EvaluationContext = org.springframework.integration.expression.EvaluationContext ; return this . org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; return this . org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . java.lang.Class<?> = java.lang.Class<> ; return this . org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.ExpressionEvalMap org.springframework.integration.expression.ExpressionEvalMap ( ) { if ( org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder .this . org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback != null ) { return new org.springframework.integration.expression.ExpressionEvalMap ( org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder .this . java.util.Map<java.lang.String,> , org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder .this . org.springframework.integration.expression.ExpressionEvalMap.EvaluationCallback ) ; } org.springframework.integration.expression.ExpressionEvalMap.ComponentsEvaluationCallback org.springframework.integration.expression.ExpressionEvalMap.ComponentsEvaluationCallback = new org.springframework.integration.expression.ExpressionEvalMap.ComponentsEvaluationCallback ( org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder .this . org.springframework.integration.expression.EvaluationContext , org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder .this . java.lang.Object , org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder .this . java.lang.Class<> ) ; return new org.springframework.integration.expression.ExpressionEvalMap ( org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder .this . java.util.Map<java.lang.String,> , org.springframework.integration.expression.ExpressionEvalMap.ComponentsEvaluationCallback ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( EvaluationContext org.springframework.integration.expression.EvaluationContext ) { return org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder .this . org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( org.springframework.integration.expression.EvaluationContext ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( java.lang.Object java.lang.Object ) { return org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder .this . org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapBuilder .this . org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> org.springframework.integration.expression.ExpressionEvalMap org.springframework.integration.expression.ExpressionEvalMap ( )  <METHOD_END>
<METHOD_START> org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( EvaluationContext org.springframework.integration.expression.EvaluationContext );  <METHOD_END>
<METHOD_START> org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder org.springframework.integration.expression.ExpressionEvalMap.ExpressionEvalMapComponentsBuilder ( java.lang.Class<?> < ? > java.lang.Class<?> );  <METHOD_END>
