<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.StringOperatorFactory org.springframework.data.mongodb.core.aggregation.StringOperators.StringOperatorFactory ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.StringOperatorFactory ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.StringOperatorFactory org.springframework.data.mongodb.core.aggregation.StringOperators.StringOperatorFactory ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.StringOperatorFactory ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = null ; }  <METHOD_END>
<METHOD_START> public void ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; this . java.lang.String = null ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Concat org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Concat org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Concat org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.StringOperators.Concat org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.StringOperators.Concat . org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.StringOperators.Concat . org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Substr org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( int int ) { return org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( int , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Substr org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( int int , int int ) { return org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( int , int ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.StringOperators.Substr org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.StringOperators.Substr . org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.StringOperators.Substr . org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower . org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower . org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper . org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper . org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp . org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp . org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( Field org.springframework.data.mongodb.core.aggregation.Field ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( org.springframework.data.mongodb.core.aggregation.Field ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( Field org.springframework.data.mongodb.core.aggregation.Field ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( org.springframework.data.mongodb.core.aggregation.Field ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP . org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Split org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Split org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( Field org.springframework.data.mongodb.core.aggregation.Field ) { return org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( org.springframework.data.mongodb.core.aggregation.Field ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Split org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.StringOperators.Split org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.StringOperators.Split . org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.StringOperators.Split . org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes . org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes . org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP . org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP . org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( int int ) { return org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( int , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( int int , int int ) { return org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( ) . org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( int , int ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( ) { return java.lang.String != null ? org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP . org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP . org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.Concat org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.Concat org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.Concat org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( java.util.Collections . java.util.List<java.lang.String> ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Concat org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Concat org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Concat org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.Concat ( append ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.Substr org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.Substr org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Substr org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( int int ) { return org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( int , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Substr org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( int int , int int ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.Substr ( append ( java.util.Arrays . java.util.List<java.lang.Integer> ( int , int ) ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.ToLower ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.ToUpper ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( java.util.Collections . java.util.List<java.lang.String> ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( append ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.StrCaseCmp ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes.SubstringBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( Range < java.lang.Long > org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> , STRING ) ; java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList<java.lang.Long> < java.lang.Long > ( NUMBER ) ; java.util.List<java.lang.Long> . boolean ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> . getLowerBound ( ) ) ; if ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> . getUpperBound ( ) != null ) { java.util.List<java.lang.Long> . boolean ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> . getUpperBound ( ) ) ; } return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( append ( java.util.List<java.lang.Long> ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( java.util.Arrays . java.util.List ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( Field org.springframework.data.mongodb.core.aggregation.Field ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfBytes ( java.util.Arrays . java.util.List ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.Field ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP.SubstringBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( Range < java.lang.Long > org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> , STRING ) ; java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList<java.lang.Long> < java.lang.Long > ( NUMBER ) ; java.util.List<java.lang.Long> . boolean ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> . getLowerBound ( ) ) ; if ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> . getUpperBound ( ) != null ) { java.util.List<java.lang.Long> . boolean ( org.springframework.data.mongodb.core.aggregation.Range<java.lang.Long> . getUpperBound ( ) ) ; } return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( append ( java.util.List<java.lang.Long> ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( java.util.Arrays . java.util.List ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( Field org.springframework.data.mongodb.core.aggregation.Field ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.IndexOfCP ( java.util.Arrays . java.util.List ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.Field ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.Split org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.Split org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Split org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( append ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Split org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( Field org.springframework.data.mongodb.core.aggregation.Field ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( append ( org.springframework.data.mongodb.core.aggregation.Field ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.Split org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.Split ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenBytes ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP ( Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.StrLenCP ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( int int ) { return org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( int , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( int int , int int ) { return new org.springframework.data.mongodb.core.aggregation.StringOperators.SubstrCP ( append ( java.util.Arrays . java.util.List<java.lang.Integer> ( int , int ) ) ) ; }  <METHOD_END>
