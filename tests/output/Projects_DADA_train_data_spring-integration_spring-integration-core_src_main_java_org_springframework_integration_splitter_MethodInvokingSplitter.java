<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method ) { super( new MethodInvokingMessageProcessor < java.util.Collection<?> < ? > > ( java.lang.Object , java.lang.reflect.Method ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { super( new MethodInvokingMessageProcessor < java.util.Collection<?> < ? > > ( java.lang.Object , java.lang.String ) ); }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( java.lang.Object java.lang.Object ) { super( java.lang.Object instanceof MessageProcessor < ? > ? ( MessageProcessor < java.util.Collection<?> < ? > > ) java.lang.Object : new MethodInvokingMessageProcessor < java.util.Collection<?> < ? > > ( java.lang.Object , Splitter .class ) ); }  <METHOD_END>
