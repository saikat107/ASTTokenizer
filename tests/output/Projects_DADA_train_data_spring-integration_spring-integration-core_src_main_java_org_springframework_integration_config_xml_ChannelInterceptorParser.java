<METHOD_START> public void ( ) { this . java.util.Map<java.lang.String,org.springframework.integration.config.xml.BeanDefinitionRegisteringParser> = new java.util.HashMap<java.lang.String,org.springframework.integration.config.xml.BeanDefinitionRegisteringParser> < java.lang.String , BeanDefinitionRegisteringParser > ( ) ; this . java.util.Map<java.lang.String,org.springframework.integration.config.xml.BeanDefinitionRegisteringParser> . put ( STRING , new WireTapParser ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) public org.springframework.integration.config.xml.ManagedList org.springframework.integration.config.xml.ManagedList ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { ManagedList org.springframework.integration.config.xml.ManagedList = new ManagedList ( ) ; org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( org.w3c.dom.Node . short ( ) == org.w3c.dom.Node . short ) { org.w3c.dom.Element org.w3c.dom.Element = ( org.w3c.dom.Element ) org.w3c.dom.Node ; java.lang.String java.lang.String = org.w3c.dom.Node . java.lang.String ( ) ; if ( STRING . boolean ( java.lang.String ) ) { BeanDefinitionParserDelegate org.springframework.integration.config.xml.BeanDefinitionParserDelegate = org.springframework.integration.config.xml.ParserContext . getDelegate ( ) ; BeanDefinitionHolder org.springframework.integration.config.xml.BeanDefinitionHolder = org.springframework.integration.config.xml.BeanDefinitionParserDelegate . parseBeanDefinitionElement ( org.w3c.dom.Element ) ; org.springframework.integration.config.xml.BeanDefinitionHolder = org.springframework.integration.config.xml.BeanDefinitionParserDelegate . decorateBeanDefinitionIfRequired ( org.w3c.dom.Element , org.springframework.integration.config.xml.BeanDefinitionHolder ) ; org.springframework.integration.config.xml.ParserContext . registerBeanComponent ( new BeanComponentDefinition ( org.springframework.integration.config.xml.BeanDefinitionHolder ) ) ; org.springframework.integration.config.xml.ManagedList . add ( new RuntimeBeanReference ( org.springframework.integration.config.xml.BeanDefinitionHolder . getBeanName ( ) ) ) ; } else if ( STRING . boolean ( java.lang.String ) ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; org.springframework.integration.config.xml.ManagedList . add ( new RuntimeBeanReference ( java.lang.String ) ) ; } else { BeanDefinitionRegisteringParser org.springframework.integration.config.xml.BeanDefinitionRegisteringParser = this . java.util.Map<java.lang.String,org.springframework.integration.config.xml.BeanDefinitionRegisteringParser> . get ( java.lang.String ) ; if ( org.springframework.integration.config.xml.BeanDefinitionRegisteringParser == null ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + java.lang.String + STRING , org.w3c.dom.Element ) ; } java.lang.String java.lang.String = org.springframework.integration.config.xml.BeanDefinitionRegisteringParser . parse ( org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; org.springframework.integration.config.xml.ManagedList . add ( new RuntimeBeanReference ( java.lang.String ) ) ; } } } return org.springframework.integration.config.xml.ManagedList ; }  <METHOD_END>
