<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.keyvalue.core.KeyValuePersistenceExceptionTranslator . translateExceptionIfPossible ( new DataRetrievalFailureException ( STRING ) ) , instanceOf ( DataRetrievalFailureException .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.keyvalue.core.KeyValuePersistenceExceptionTranslator . translateExceptionIfPossible ( null ) , nullValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.keyvalue.core.KeyValuePersistenceExceptionTranslator . translateExceptionIfPossible ( new java.util.NoSuchElementException ( STRING ) ) , instanceOf ( DataRetrievalFailureException .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.keyvalue.core.KeyValuePersistenceExceptionTranslator . translateExceptionIfPossible ( new java.lang.IndexOutOfBoundsException ( STRING ) ) , instanceOf ( DataRetrievalFailureException .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.keyvalue.core.KeyValuePersistenceExceptionTranslator . translateExceptionIfPossible ( new java.lang.IllegalStateException ( STRING ) ) , instanceOf ( DataRetrievalFailureException .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.keyvalue.core.KeyValuePersistenceExceptionTranslator . translateExceptionIfPossible ( new java.lang.UnsupportedOperationException ( STRING ) ) , instanceOf ( UncategorizedKeyValueException .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.keyvalue.core.KeyValuePersistenceExceptionTranslator . translateExceptionIfPossible ( new NoSuchBeanDefinitionException ( STRING ) ) , nullValue ( ) ) ; }  <METHOD_END>
