<METHOD_START> @ Test public void void ( ) java.lang.Exception { CloudPlatform org.springframework.boot.cloud.CloudPlatform = CloudPlatform . getActive ( null ) ; assertThat ( org.springframework.boot.cloud.CloudPlatform ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Environment org.springframework.boot.cloud.Environment = new MockEnvironment ( ) ; CloudPlatform org.springframework.boot.cloud.CloudPlatform = CloudPlatform . getActive ( org.springframework.boot.cloud.Environment ) ; assertThat ( org.springframework.boot.cloud.CloudPlatform ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Environment org.springframework.boot.cloud.Environment = new MockEnvironment ( ) . withProperty ( STRING , STRING ) ; CloudPlatform org.springframework.boot.cloud.CloudPlatform = CloudPlatform . getActive ( org.springframework.boot.cloud.Environment ) ; assertThat ( org.springframework.boot.cloud.CloudPlatform ) . isEqualTo ( CloudPlatform . CLOUD_FOUNDRY ) ; assertThat ( org.springframework.boot.cloud.CloudPlatform . isActive ( org.springframework.boot.cloud.Environment ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Environment org.springframework.boot.cloud.Environment = new MockEnvironment ( ) . withProperty ( STRING , STRING ) ; CloudPlatform org.springframework.boot.cloud.CloudPlatform = CloudPlatform . getActive ( org.springframework.boot.cloud.Environment ) ; assertThat ( org.springframework.boot.cloud.CloudPlatform ) . isEqualTo ( CloudPlatform . CLOUD_FOUNDRY ) ; assertThat ( org.springframework.boot.cloud.CloudPlatform . isActive ( org.springframework.boot.cloud.Environment ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Environment org.springframework.boot.cloud.Environment = new MockEnvironment ( ) . withProperty ( STRING , STRING ) ; CloudPlatform org.springframework.boot.cloud.CloudPlatform = CloudPlatform . getActive ( org.springframework.boot.cloud.Environment ) ; assertThat ( org.springframework.boot.cloud.CloudPlatform ) . isEqualTo ( CloudPlatform . HEROKU ) ; assertThat ( org.springframework.boot.cloud.CloudPlatform . isActive ( org.springframework.boot.cloud.Environment ) ) . isTrue ( ) ; }  <METHOD_END>
