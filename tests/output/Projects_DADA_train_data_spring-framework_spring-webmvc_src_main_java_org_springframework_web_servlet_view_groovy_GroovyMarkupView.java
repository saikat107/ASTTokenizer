<METHOD_START> public void void ( MarkupTemplateEngine org.springframework.web.servlet.view.groovy.MarkupTemplateEngine ) { this . org.springframework.web.servlet.view.groovy.MarkupTemplateEngine = org.springframework.web.servlet.view.groovy.MarkupTemplateEngine ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ApplicationContext org.springframework.web.servlet.view.groovy.ApplicationContext ) { super. initApplicationContext ( ) ; if ( this . org.springframework.web.servlet.view.groovy.MarkupTemplateEngine == null ) { void ( org.springframework.web.servlet.view.groovy.MarkupTemplateEngine ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.web.servlet.view.groovy.MarkupTemplateEngine org.springframework.web.servlet.view.groovy.MarkupTemplateEngine ( ) org.springframework.web.servlet.view.groovy.BeansException { try { return BeanFactoryUtils . beanOfTypeIncludingAncestors ( getApplicationContext ( ) , GroovyMarkupConfig .class , true , false ) . getTemplateEngine ( ) ; } catch ( NoSuchBeanDefinitionException org.springframework.web.servlet.view.groovy.NoSuchBeanDefinitionException ) { throw new ApplicationContextException ( STRING + STRING + STRING , org.springframework.web.servlet.view.groovy.NoSuchBeanDefinitionException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Locale java.util.Locale ) throws java.lang.Exception { try { this . org.springframework.web.servlet.view.groovy.MarkupTemplateEngine . resolveTemplate ( getUrl ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { return false ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , HttpServletRequest org.springframework.web.servlet.view.groovy.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.view.groovy.HttpServletResponse ) throws java.lang.Exception { Template org.springframework.web.servlet.view.groovy.Template = org.springframework.web.servlet.view.groovy.Template ( getUrl ( ) ) ; org.springframework.web.servlet.view.groovy.Template . make ( java.util.Map<java.lang.String,java.lang.Object> ) . writeTo ( new java.io.BufferedWriter ( org.springframework.web.servlet.view.groovy.HttpServletResponse . getWriter ( ) ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.web.servlet.view.groovy.Template org.springframework.web.servlet.view.groovy.Template ( java.lang.String java.lang.String ) throws java.lang.Exception { try { return this . org.springframework.web.servlet.view.groovy.MarkupTemplateEngine . createTemplateByPath ( java.lang.String ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { java.lang.Throwable java.lang.Throwable = ( java.lang.ClassNotFoundException . java.lang.Throwable ( ) != null ? java.lang.ClassNotFoundException . java.lang.Throwable ( ) : java.lang.ClassNotFoundException ) ; throw new NestedServletException ( STRING + getUrl ( ) + STRING + java.lang.ClassNotFoundException . java.lang.String ( ) + STRING , java.lang.Throwable ) ; } }  <METHOD_END>
