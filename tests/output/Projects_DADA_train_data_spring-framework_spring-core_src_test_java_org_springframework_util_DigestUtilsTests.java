<METHOD_START> @ Before public void void ( ) java.io.UnsupportedEncodingException { byte[] = STRING . byte[] ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { byte [] byte[] = new byte [] { - NUMBER , NUMBER , - NUMBER , - NUMBER , NUMBER , - NUMBER , NUMBER , NUMBER , NUMBER , - NUMBER , - NUMBER , - NUMBER , - NUMBER , NUMBER , NUMBER , - NUMBER } ; byte [] byte[] = DigestUtils . md5Digest ( byte[] ) ; assertArrayEquals ( STRING , byte[] , byte[] ) ; byte[] = DigestUtils . md5Digest ( new java.io.ByteArrayInputStream ( byte[] ) ) ; assertArrayEquals ( STRING , byte[] , byte[] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = DigestUtils . md5DigestAsHex ( byte[] ) ; assertEquals ( STRING , java.lang.String , java.lang.String ) ; java.lang.String = DigestUtils . md5DigestAsHex ( new java.io.ByteArrayInputStream ( byte[] ) ) ; assertEquals ( STRING , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { java.lang.String java.lang.String = STRING ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; DigestUtils . appendMd5DigestAsHex ( byte[] , java.lang.StringBuilder ) ; assertEquals ( STRING , java.lang.String , java.lang.StringBuilder . java.lang.String ( ) ) ; java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; DigestUtils . appendMd5DigestAsHex ( new java.io.ByteArrayInputStream ( byte[] ) , java.lang.StringBuilder ) ; assertEquals ( STRING , java.lang.String , java.lang.StringBuilder . java.lang.String ( ) ) ; }  <METHOD_END>
