<METHOD_START> public void ( MessageRepository sample.web.ui.mvc.MessageRepository ) { this . sample.web.ui.mvc.MessageRepository = sample.web.ui.mvc.MessageRepository ; }  <METHOD_END>
<METHOD_START> @ GetMapping public sample.web.ui.mvc.ModelAndView sample.web.ui.mvc.ModelAndView ( ) { java.lang.Iterable<sample.web.ui.mvc.Message> < Message > java.lang.Iterable<sample.web.ui.mvc.Message> = this . sample.web.ui.mvc.MessageRepository . findAll ( ) ; return new ModelAndView ( STRING , STRING , java.lang.Iterable<sample.web.ui.mvc.Message> ) ; }  <METHOD_END>
<METHOD_START> @ GetMapping ( STRING ) public sample.web.ui.mvc.ModelAndView sample.web.ui.mvc.ModelAndView ( @ PathVariable ( STRING ) Message sample.web.ui.mvc.Message ) { return new ModelAndView ( STRING , STRING , sample.web.ui.mvc.Message ) ; }  <METHOD_END>
<METHOD_START> @ GetMapping ( params = STRING ) public java.lang.String java.lang.String ( @ ModelAttribute Message sample.web.ui.mvc.Message ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ PostMapping public sample.web.ui.mvc.ModelAndView sample.web.ui.mvc.ModelAndView ( @ Valid Message sample.web.ui.mvc.Message , BindingResult sample.web.ui.mvc.BindingResult , RedirectAttributes sample.web.ui.mvc.RedirectAttributes ) { if ( sample.web.ui.mvc.BindingResult . hasErrors ( ) ) { return new ModelAndView ( STRING , STRING , sample.web.ui.mvc.BindingResult . getAllErrors ( ) ) ; } sample.web.ui.mvc.Message = this . sample.web.ui.mvc.MessageRepository . save ( sample.web.ui.mvc.Message ) ; sample.web.ui.mvc.RedirectAttributes . addFlashAttribute ( STRING , STRING ) ; return new ModelAndView ( STRING , STRING , sample.web.ui.mvc.Message . getId ( ) ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( STRING ) public java.lang.String java.lang.String ( ) { throw new java.lang.RuntimeException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ GetMapping ( value = STRING ) public sample.web.ui.mvc.ModelAndView sample.web.ui.mvc.ModelAndView ( @ PathVariable ( STRING ) java.lang.Long java.lang.Long ) { this . sample.web.ui.mvc.MessageRepository . deleteMessage ( java.lang.Long ) ; java.lang.Iterable<sample.web.ui.mvc.Message> < Message > java.lang.Iterable<sample.web.ui.mvc.Message> = this . sample.web.ui.mvc.MessageRepository . findAll ( ) ; return new ModelAndView ( STRING , STRING , java.lang.Iterable<sample.web.ui.mvc.Message> ) ; }  <METHOD_END>
<METHOD_START> @ GetMapping ( value = STRING ) public sample.web.ui.mvc.ModelAndView sample.web.ui.mvc.ModelAndView ( @ PathVariable ( STRING ) Message sample.web.ui.mvc.Message ) { return new ModelAndView ( STRING , STRING , sample.web.ui.mvc.Message ) ; }  <METHOD_END>
