<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new DefaultContextCache ( - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new DefaultContextCache ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultContextCache org.springframework.test.context.cache.DefaultContextCache = new DefaultContextCache ( NUMBER ) ; assertEquals ( NUMBER , org.springframework.test.context.cache.DefaultContextCache . size ( ) ) ; assertEquals ( NUMBER , org.springframework.test.context.cache.DefaultContextCache . getMaxSize ( ) ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultContextCache org.springframework.test.context.cache.DefaultContextCache = new DefaultContextCache ( NUMBER ) ; assertEquals ( NUMBER , org.springframework.test.context.cache.DefaultContextCache . size ( ) ) ; assertEquals ( NUMBER , org.springframework.test.context.cache.DefaultContextCache . getMaxSize ( ) ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING , STRING , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultContextCache org.springframework.test.context.cache.DefaultContextCache = new DefaultContextCache ( NUMBER ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING , STRING , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . get ( org.springframework.test.context.cache.MergedContextConfiguration ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING , STRING , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . get ( org.springframework.test.context.cache.MergedContextConfiguration ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING , STRING , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . get ( org.springframework.test.context.cache.MergedContextConfiguration ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING , STRING , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . get ( org.springframework.test.context.cache.MergedContextConfiguration ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultContextCache org.springframework.test.context.cache.DefaultContextCache = new DefaultContextCache ( NUMBER ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING , STRING ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING , STRING ) ; verify ( org.springframework.test.context.cache.ConfigurableApplicationContext , times ( NUMBER ) ) . close ( ) ; org.springframework.test.context.cache.DefaultContextCache . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ConfigurableApplicationContext ) ; void ( org.springframework.test.context.cache.DefaultContextCache , STRING , STRING ) ; verify ( org.springframework.test.context.cache.ConfigurableApplicationContext , times ( NUMBER ) ) . close ( ) ; verify ( org.springframework.test.context.cache.ConfigurableApplicationContext , never ( ) ) . close ( ) ; verify ( org.springframework.test.context.cache.ConfigurableApplicationContext , never ( ) ) . close ( ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.test.context.cache.MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return new MergedContextConfiguration ( null , null , new java.lang.Class<?> < ? > [] { java.lang.Class<> } , null , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private static void void ( DefaultContextCache org.springframework.test.context.cache.DefaultContextCache , java.lang.String ... java.lang.String[] ) { java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> < MergedContextConfiguration , ApplicationContext > java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> = ( java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> < MergedContextConfiguration , ApplicationContext > ) ReflectionTestUtils . getField ( org.springframework.test.context.cache.DefaultContextCache , STRING ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> . keySet ( ) . stream ( ) . map ( cfg -> cfg . getClasses ( ) [ NUMBER ] ) . map ( java.lang.Class :: getSimpleName ) . collect ( java.util.stream.Collector<java.lang.Object,?,java.util.List<java.lang.Object>> ( ) ) ; assertEquals ( java.util.List<java.lang.String> ( java.lang.String[] ) , java.util.List<java.lang.String> ) ; }  <METHOD_END>
