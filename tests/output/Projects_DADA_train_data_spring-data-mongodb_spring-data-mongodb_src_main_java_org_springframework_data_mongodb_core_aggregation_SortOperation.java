<METHOD_START> public void ( Sort org.springframework.data.mongodb.core.aggregation.Sort ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Sort , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.Sort = org.springframework.data.mongodb.core.aggregation.Sort ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SortOperation org.springframework.data.mongodb.core.aggregation.SortOperation ( Direction org.springframework.data.mongodb.core.aggregation.Direction , java.lang.String ... java.lang.String[] ) { return org.springframework.data.mongodb.core.aggregation.SortOperation ( new Sort ( org.springframework.data.mongodb.core.aggregation.Direction , java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SortOperation org.springframework.data.mongodb.core.aggregation.SortOperation ( Sort org.springframework.data.mongodb.core.aggregation.Sort ) { return new org.springframework.data.mongodb.core.aggregation.SortOperation ( this . org.springframework.data.mongodb.core.aggregation.Sort . and ( org.springframework.data.mongodb.core.aggregation.Sort ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; for ( Order org.springframework.data.mongodb.core.aggregation.Order : org.springframework.data.mongodb.core.aggregation.Sort ) { FieldReference org.springframework.data.mongodb.core.aggregation.FieldReference = org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( org.springframework.data.mongodb.core.aggregation.Order . getProperty ( ) ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( org.springframework.data.mongodb.core.aggregation.FieldReference . getRaw ( ) , org.springframework.data.mongodb.core.aggregation.Order . isAscending ( ) ? NUMBER : - NUMBER ) ; } return new Document ( STRING , org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
