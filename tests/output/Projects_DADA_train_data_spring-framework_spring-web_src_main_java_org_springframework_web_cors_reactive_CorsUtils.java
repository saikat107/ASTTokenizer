<METHOD_START> public static boolean boolean ( ServerHttpRequest org.springframework.web.cors.reactive.ServerHttpRequest ) { return ( org.springframework.web.cors.reactive.ServerHttpRequest . getHeaders ( ) . get ( HttpHeaders . ORIGIN ) != null ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ServerHttpRequest org.springframework.web.cors.reactive.ServerHttpRequest ) { return ( boolean ( org.springframework.web.cors.reactive.ServerHttpRequest ) && HttpMethod . OPTIONS == org.springframework.web.cors.reactive.ServerHttpRequest . getMethod ( ) && org.springframework.web.cors.reactive.ServerHttpRequest . getHeaders ( ) . get ( HttpHeaders . ACCESS_CONTROL_REQUEST_METHOD ) != null ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ServerHttpRequest org.springframework.web.cors.reactive.ServerHttpRequest ) { java.lang.String java.lang.String = org.springframework.web.cors.reactive.ServerHttpRequest . getHeaders ( ) . getOrigin ( ) ; if ( java.lang.String == null ) { return true ; } UriComponentsBuilder org.springframework.web.cors.reactive.UriComponentsBuilder = UriComponentsBuilder . fromHttpRequest ( org.springframework.web.cors.reactive.ServerHttpRequest ) ; UriComponents org.springframework.web.cors.reactive.UriComponents = org.springframework.web.cors.reactive.UriComponentsBuilder . build ( ) ; java.lang.String java.lang.String = org.springframework.web.cors.reactive.UriComponents . getHost ( ) ; int int = int ( org.springframework.web.cors.reactive.UriComponents ) ; Assert . notNull ( java.lang.String , STRING ) ; Assert . isTrue ( int != - NUMBER , STRING ) ; UriComponents org.springframework.web.cors.reactive.UriComponents = UriComponentsBuilder . fromOriginHeader ( java.lang.String ) . build ( ) ; return ( java.lang.String . boolean ( org.springframework.web.cors.reactive.UriComponents . getHost ( ) ) && int == int ( org.springframework.web.cors.reactive.UriComponents ) ) ; }  <METHOD_END>
<METHOD_START> private static int int ( UriComponents org.springframework.web.cors.reactive.UriComponents ) { int int = org.springframework.web.cors.reactive.UriComponents . getPort ( ) ; if ( int == - NUMBER ) { if ( STRING . boolean ( org.springframework.web.cors.reactive.UriComponents . getScheme ( ) ) || STRING . boolean ( org.springframework.web.cors.reactive.UriComponents . getScheme ( ) ) ) { int = NUMBER ; } else if ( STRING . boolean ( org.springframework.web.cors.reactive.UriComponents . getScheme ( ) ) || STRING . boolean ( org.springframework.web.cors.reactive.UriComponents . getScheme ( ) ) ) { int = NUMBER ; } } return int ; }  <METHOD_END>
