<METHOD_START> @ Before public void void ( ) { Restarter . initialize ( new java.lang.String [] {} , false , new org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.MockInitializer ( ) , false ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.devtools.env.ConfigurableApplicationContext != null ) { this . org.springframework.boot.devtools.env.ConfigurableApplicationContext . close ( ) ; } Restarter . clearInstance ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SpringApplication org.springframework.boot.devtools.env.SpringApplication = new SpringApplication ( org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.ClassConditionConfiguration .class ) ; org.springframework.boot.devtools.env.SpringApplication . setWebApplicationType ( WebApplicationType . NONE ) ; this . org.springframework.boot.devtools.env.ConfigurableApplicationContext = org.springframework.boot.devtools.env.SpringApplication . run ( ) ; this . org.springframework.boot.devtools.env.ConfigurableApplicationContext . getBean ( org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.ClassConditionConfiguration .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SpringApplication org.springframework.boot.devtools.env.SpringApplication = new SpringApplication ( org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.BeanConditionConfiguration .class ) ; org.springframework.boot.devtools.env.SpringApplication . setWebApplicationType ( WebApplicationType . NONE ) ; this . org.springframework.boot.devtools.env.ConfigurableApplicationContext = org.springframework.boot.devtools.env.SpringApplication . run ( ) ; this . org.springframework.boot.devtools.env.ConfigurableApplicationContext . getBean ( org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.MyBean .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Restarter . clearInstance ( ) ; Restarter . disable ( ) ; SpringApplication org.springframework.boot.devtools.env.SpringApplication = new SpringApplication ( org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.BeanConditionConfiguration .class ) ; org.springframework.boot.devtools.env.SpringApplication . setWebApplicationType ( WebApplicationType . NONE ) ; this . org.springframework.boot.devtools.env.ConfigurableApplicationContext = org.springframework.boot.devtools.env.SpringApplication . run ( ) ; this . org.springframework.boot.devtools.env.ExpectedException . expect ( NoSuchBeanDefinitionException .class ) ; this . org.springframework.boot.devtools.env.ConfigurableApplicationContext . getBean ( org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.MyBean .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Restarter . clearInstance ( ) ; Restarter . disable ( ) ; SpringApplication org.springframework.boot.devtools.env.SpringApplication = new SpringApplication ( org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.BeanConditionConfiguration .class ) ; org.springframework.boot.devtools.env.SpringApplication . setWebApplicationType ( WebApplicationType . NONE ) ; org.springframework.boot.devtools.env.SpringApplication . setDefaultProperties ( java.util.Collections .< java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( STRING , STRING ) ) ; this . org.springframework.boot.devtools.env.ConfigurableApplicationContext = org.springframework.boot.devtools.env.SpringApplication . run ( ) ; this . org.springframework.boot.devtools.env.ConfigurableApplicationContext . getBean ( org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.MyBean .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnProperty ( STRING ) public org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.MyBean org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.MyBean ( ) { return new org.springframework.boot.devtools.env.DevToolPropertiesIntegrationTests.MyBean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URL [] java.net.URL[] ( java.lang.Thread java.lang.Thread ) { return new java.net.URL [] {} ; }  <METHOD_END>
