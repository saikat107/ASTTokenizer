<METHOD_START> public java.util.List<java.lang.reflect.Method> < java.lang.reflect.Method > java.util.List<java.lang.reflect.Method> ( java.util.List<java.lang.reflect.Method> < java.lang.reflect.Method > java.util.List<java.lang.reflect.Method> ) { java.util.List<java.lang.reflect.Method> < java.lang.reflect.Method > java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method> < java.lang.reflect.Method > ( ) ; for ( java.lang.reflect.Method java.lang.reflect.Method : java.util.List<java.lang.reflect.Method> ) { if ( this . boolean ( java.lang.reflect.Method ) ) { java.util.List<java.lang.reflect.Method> . boolean ( java.lang.reflect.Method ) ; } } return java.util.List<java.lang.reflect.Method> ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.reflect.Method . java.lang.Class<?> ( ) ; if ( Lifecycle .class . boolean ( java.lang.Class<> ) && ReflectionUtils . findMethod ( Lifecycle .class , java.lang.reflect.Method . java.lang.String ( ) , java.lang.reflect.Method . java.lang.Class<?>[] ( ) ) != null ) { return true ; } if ( CustomizableThreadCreator .class . boolean ( java.lang.Class<> ) && ( java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) || java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) || java.lang.reflect.Method . java.lang.String ( ) . boolean ( STRING ) ) ) { return true ; } if ( this . boolean ( java.lang.reflect.Method , ManagedAttribute .class ) || this . boolean ( java.lang.reflect.Method , ManagedOperation .class ) ) { return true ; } return false ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ) { return AnnotationUtils . findAnnotation ( java.lang.reflect.Method , java.lang.Class<> ) != null ; }  <METHOD_END>
