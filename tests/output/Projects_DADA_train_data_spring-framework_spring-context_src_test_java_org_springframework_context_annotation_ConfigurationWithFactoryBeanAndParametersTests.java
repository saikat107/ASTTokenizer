<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Config .class , org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Bar .class ) ; assertNotNull ( org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Bar .class ) . foo ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo> < org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo > org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo> ( @ Value ( STRING ) java.lang.String java.lang.String ) { return new org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.FooFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Autowired public void ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo ) { this . org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo = org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo ( ) { return new org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo> < org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo > java.lang.Class<org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo> ( ) { return org.springframework.context.annotation.ConfigurationWithFactoryBeanAndParametersTests.Foo .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
