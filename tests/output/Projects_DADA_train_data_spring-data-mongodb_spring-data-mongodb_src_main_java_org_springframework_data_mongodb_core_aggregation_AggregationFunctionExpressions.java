<METHOD_START> public org.springframework.data.mongodb.core.aggregation.AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ( java.lang.Object ... java.lang.Object[] ) { Assert . notNull ( java.lang.Object[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.AggregationFunctionExpressions.FunctionExpression ( java.lang.String ( ) . java.lang.String ( ) , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.Object[] , STRING ) ; this . java.lang.String = java.lang.String ; this . java.util.List<java.lang.Object> = java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.util.List<java.lang.Object> . int ( ) ) ; for ( java.lang.Object java.lang.Object : java.util.List<java.lang.Object> ) { java.util.List<java.lang.Object> . boolean ( java.lang.Object ( java.lang.Object , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } return new Document ( STRING + java.lang.String , java.util.List<java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { if ( java.lang.Object instanceof AggregationExpression ) { return ( ( AggregationExpression ) java.lang.Object ) . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; } if ( java.lang.Object instanceof Field ) { return org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( ( Field ) java.lang.Object ) . toString ( ) ; } return java.lang.Object ; }  <METHOD_END>
