<METHOD_START> public void ( ) { super( org.springframework.boot.actuate.endpoint.InfoEndpointTests.Config .class , InfoEndpoint .class , STRING , false , STRING ); }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = getEndpointBean ( ) . invoke ( ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.endpoint.InfoContributor org.springframework.boot.actuate.endpoint.InfoContributor ( ) { return new InfoContributor ( ) { @ java.lang.Override public void void ( Info . Info Info.Builder ) { Info.Builder . withDetail ( STRING , STRING ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Info . Info Info.Builder ) { Info.Builder . withDetail ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.endpoint.InfoEndpoint org.springframework.boot.actuate.endpoint.InfoEndpoint ( java.util.List<org.springframework.boot.actuate.endpoint.InfoContributor> < InfoContributor > java.util.List<org.springframework.boot.actuate.endpoint.InfoContributor> ) { return new InfoEndpoint ( java.util.List<org.springframework.boot.actuate.endpoint.InfoContributor> ) ; }  <METHOD_END>
