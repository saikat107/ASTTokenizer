<METHOD_START> @ java.lang.Override public void void ( MessageHeaders org.springframework.jms.support.MessageHeaders , javax . javax.jms . javax.jms javax.jms.Message ) { try { java.lang.Object java.lang.Object = org.springframework.jms.support.MessageHeaders . get ( JmsHeaders . CORRELATION_ID ) ; if ( java.lang.Object instanceof java.lang.Number ) { java.lang.Object = java.lang.Object . java.lang.String ( ) ; } if ( java.lang.Object instanceof java.lang.String ) { try { javax.jms.Message . setJMSCorrelationID ( ( java.lang.String ) java.lang.Object ) ; } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } } Destination org.springframework.jms.support.Destination = getHeaderIfAvailable ( org.springframework.jms.support.MessageHeaders , JmsHeaders . REPLY_TO , Destination .class ) ; if ( org.springframework.jms.support.Destination != null ) { try { javax.jms.Message . setJMSReplyTo ( org.springframework.jms.support.Destination ) ; } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } } java.lang.String java.lang.String = getHeaderIfAvailable ( org.springframework.jms.support.MessageHeaders , JmsHeaders . TYPE , java.lang.String .class ) ; if ( java.lang.String != null ) { try { javax.jms.Message . setJMSType ( java.lang.String ) ; } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } } java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = org.springframework.jms.support.MessageHeaders . keySet ( ) ; for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ) { if ( StringUtils . hasText ( java.lang.String ) && ! java.lang.String . boolean ( JmsHeaders . PREFIX ) ) { java.lang.Object java.lang.Object = org.springframework.jms.support.MessageHeaders . get ( java.lang.String ) ; if ( java.lang.Object != null && java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { try { java.lang.String java.lang.String = this . java.lang.String ( java.lang.String ) ; javax.jms.Message . setObjectProperty ( java.lang.String , java.lang.Object ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( java.lang.String . boolean ( STRING ) ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( STRING + java.lang.String + STRING ) ; } } else if ( logger . isWarnEnabled ( ) ) { logger . warn ( STRING + java.lang.String + STRING , java.lang.Exception ) ; } } } } } } catch ( java.lang.Exception java.lang.Exception ) { if ( logger . isWarnEnabled ( ) ) { logger . warn ( STRING , java.lang.Exception ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jms.support.MessageHeaders org.springframework.jms.support.MessageHeaders ( javax . javax.jms . javax.jms javax.jms.Message ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; try { try { java.lang.String java.lang.String = javax.jms.Message . getJMSCorrelationID ( ) ; if ( java.lang.String != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . CORRELATION_ID , java.lang.String ) ; } } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } try { Destination org.springframework.jms.support.Destination = javax.jms.Message . getJMSDestination ( ) ; if ( org.springframework.jms.support.Destination != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . DESTINATION , org.springframework.jms.support.Destination ) ; } } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } try { int int = javax.jms.Message . getJMSDeliveryMode ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . DELIVERY_MODE , int ) ; } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } try { long long = javax.jms.Message . getJMSExpiration ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . EXPIRATION , long ) ; } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } try { java.lang.String java.lang.String = javax.jms.Message . getJMSMessageID ( ) ; if ( java.lang.String != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . MESSAGE_ID , java.lang.String ) ; } } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } try { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . PRIORITY , javax.jms.Message . getJMSPriority ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } try { Destination org.springframework.jms.support.Destination = javax.jms.Message . getJMSReplyTo ( ) ; if ( org.springframework.jms.support.Destination != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . REPLY_TO , org.springframework.jms.support.Destination ) ; } } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } try { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . REDELIVERED , javax.jms.Message . getJMSRedelivered ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } try { java.lang.String java.lang.String = javax.jms.Message . getJMSType ( ) ; if ( java.lang.String != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . TYPE , java.lang.String ) ; } } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } try { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . TIMESTAMP , javax.jms.Message . getJMSTimestamp ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { logger . info ( STRING , java.lang.Exception ) ; } java.util.Enumeration<?> < ? > java.util.Enumeration<?> = javax.jms.Message . getPropertyNames ( ) ; if ( java.util.Enumeration<> != null ) { while ( java.util.Enumeration<> . boolean ( ) ) { java.lang.String java.lang.String = java.util.Enumeration<> . nextElement ( ) . java.lang.String ( ) ; try { java.lang.String java.lang.String = this . java.lang.String ( java.lang.String ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , javax.jms.Message . getObjectProperty ( java.lang.String ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( logger . isWarnEnabled ( ) ) { logger . warn ( STRING + java.lang.String + STRING , java.lang.Exception ) ; } } } } } catch ( JMSException org.springframework.jms.support.JMSException ) { if ( logger . isWarnEnabled ( ) ) { logger . warn ( STRING , org.springframework.jms.support.JMSException ) ; } } return new MessageHeaders ( java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( MessageHeaders . CONTENT_TYPE . equals ( java.lang.String ) ) { return CONTENT_TYPE_PROPERTY ; } return super. fromHeaderName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( CONTENT_TYPE_PROPERTY . equals ( java.lang.String ) ) { return MessageHeaders . CONTENT_TYPE ; } return super. toHeaderName ( java.lang.String ) ; }  <METHOD_END>
