<METHOD_START> public void ( ) { this . javax.xml.transform.TransformerFactory = javax.xml.transform.TransformerFactory . javax.xml.transform.TransformerFactory ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Properties java.util.Properties ) { this . java.util.Properties = java.util.Properties ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( javax.xml.transform.Result javax.xml.transform.Result ) { java.lang.String java.lang.String = null ; if ( javax.xml.transform.Result instanceof StringResult ) { java.lang.String = ( ( StringResult ) javax.xml.transform.Result ) . java.lang.String ( ) ; } else if ( javax.xml.transform.Result instanceof javax.xml.transform.dom.DOMResult ) { try { StringResult org.springframework.integration.xml.transformer.StringResult = new StringResult ( ) ; this . javax.xml.transform.Transformer ( ) . void ( new javax.xml.transform.dom.DOMSource ( ( ( javax.xml.transform.dom.DOMResult ) javax.xml.transform.Result ) . org.w3c.dom.Node ( ) ) , org.springframework.integration.xml.transformer.StringResult ) ; java.lang.String = org.springframework.integration.xml.transformer.StringResult . toString ( ) ; } catch ( javax.xml.transform.TransformerException javax.xml.transform.TransformerException ) { throw new MessagingException ( STRING , javax.xml.transform.TransformerException ) ; } } if ( java.lang.String == null ) { throw new MessagingException ( STRING + javax.xml.transform.Result . java.lang.Class<? extends javax.xml.transform.Result> ( ) . java.lang.String ( ) + STRING ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> private javax.xml.transform.Transformer javax.xml.transform.Transformer ( ) javax.xml.transform.TransformerConfigurationException { javax.xml.transform.Transformer javax.xml.transform.Transformer = null ; synchronized ( this . javax.xml.transform.TransformerFactory ) { javax.xml.transform.Transformer = this . javax.xml.transform.TransformerFactory . javax.xml.transform.Transformer ( ) ; } if ( this . java.util.Properties != null ) { javax.xml.transform.Transformer . void ( this . java.util.Properties ) ; } return javax.xml.transform.Transformer ; }  <METHOD_END>
