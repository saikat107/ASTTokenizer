<METHOD_START> @ Test public void void ( ) java.lang.Exception { GroovyMarkupViewResolver org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver = new GroovyMarkupViewResolver ( ) ; Assert . assertEquals ( GroovyMarkupView .class , org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver . requiredViewClass ( ) ) ; DirectFieldAccessor org.springframework.web.servlet.view.groovy.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver ) ; java.lang.Class java.lang.Class = ( java.lang.Class ) org.springframework.web.servlet.view.groovy.DirectFieldAccessor . getPropertyValue ( STRING ) ; Assert . assertEquals ( GroovyMarkupView .class , java.lang.Class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { GroovyMarkupViewResolver org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver = new GroovyMarkupViewResolver ( ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver . getCacheKey ( STRING , java.util.Locale . java.util.Locale ) ; Assert . assertNotNull ( java.lang.String ) ; Assert . assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
