<METHOD_START> public void void ( javax.sql.DataSource javax.sql.DataSource ) { this . javax.sql.DataSource = javax.sql.DataSource ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . javax.sql.DataSource == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( this . java.lang.String == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } try { boolean boolean = false ; long long = java.lang.System . long ( ) ; long long = long + this . int * NUMBER ; java.sql.SQLException java.sql.SQLException = null ; while ( ! boolean && java.lang.System . long ( ) < long ) { java.sql.Connection java.sql.Connection = null ; java.sql.Statement java.sql.Statement = null ; try { java.sql.Connection = this . javax.sql.DataSource . java.sql.Connection ( ) ; java.sql.Statement = java.sql.Connection . java.sql.Statement ( ) ; java.sql.Statement . boolean ( this . java.lang.String ) ; boolean = true ; } catch ( java.sql.SQLException java.sql.SQLException ) { java.sql.SQLException = java.sql.SQLException ; org.springframework.jdbc.support.Log . debug ( STRING + this . java.lang.String + STRING , java.sql.SQLException ) ; float float = ( ( float ) ( long - java.lang.System . long ( ) ) ) / NUMBER ; if ( float > this . int ) { org.springframework.jdbc.support.Log . warn ( STRING + this . int + STRING + float + STRING ) ; } } finally { JdbcUtils . closeStatement ( java.sql.Statement ) ; JdbcUtils . closeConnection ( java.sql.Connection ) ; } if ( ! boolean ) { java.lang.Thread . void ( this . int * NUMBER ) ; } } if ( ! boolean ) { throw new CannotGetJdbcConnectionException ( STRING + this . int + STRING , java.sql.SQLException ) ; } float float = ( java.lang.System . long ( ) - long ) / NUMBER ; if ( org.springframework.jdbc.support.Log . isInfoEnabled ( ) ) { org.springframework.jdbc.support.Log . info ( STRING + float + STRING ) ; } } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { java.lang.Thread . java.lang.Thread ( ) . void ( ) ; } }  <METHOD_END>
