<METHOD_START> public void ( HttpMethod org.springframework.web.server.HttpMethod , java.util.Collection<org.springframework.web.server.HttpMethod> < HttpMethod > java.util.Collection<org.springframework.web.server.HttpMethod> ) { this( org.springframework.web.server.HttpMethod . name ( ) , java.util.Collection<org.springframework.web.server.HttpMethod> ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.util.Collection<org.springframework.web.server.HttpMethod> < HttpMethod > java.util.Collection<org.springframework.web.server.HttpMethod> ) { super( HttpStatus . METHOD_NOT_ALLOWED , STRING + java.lang.String + STRING ); Assert . notNull ( java.lang.String , STRING ) ; if ( java.util.Collection<org.springframework.web.server.HttpMethod> == null ) { java.util.Collection<org.springframework.web.server.HttpMethod> = java.util.Collections . java.util.Set<java.lang.Object> ( ) ; } this . java.lang.String = java.lang.String ; this . java.util.Set<org.springframework.web.server.HttpMethod> = java.util.Collections . java.util.Set<java.lang.Object> ( new java.util.HashSet <> ( java.util.Collection<org.springframework.web.server.HttpMethod> ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.util.Set<org.springframework.web.server.HttpMethod> < HttpMethod > java.util.Set<org.springframework.web.server.HttpMethod> ( ) { return java.util.Set<org.springframework.web.server.HttpMethod> ; }  <METHOD_END>
