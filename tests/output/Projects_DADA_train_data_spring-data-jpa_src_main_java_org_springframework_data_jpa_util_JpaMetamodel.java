<METHOD_START> public void ( Metamodel org.springframework.data.jpa.util.Metamodel ) { Assert . notNull ( org.springframework.data.jpa.util.Metamodel , STRING ) ; this . org.springframework.data.jpa.util.Metamodel = org.springframework.data.jpa.util.Metamodel ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; return java.util.Collection<java.lang.Class<?>> ( ) . boolean ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> private java.util.Collection<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Collection<java.lang.Class<?>> ( ) { if ( java.util.Collection<java.lang.Class<?>> != null ) { return java.util.Collection<java.lang.Class<?>> ; } java.util.Set<org.springframework.data.jpa.util.ManagedType<?>> < ManagedType < ? > > java.util.Set<org.springframework.data.jpa.util.ManagedType<?>> = org.springframework.data.jpa.util.Metamodel . getManagedTypes ( ) ; java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> = new java.util.HashSet<java.lang.Class<?>> < java.lang.Class<?> < ? > > ( java.util.Set<org.springframework.data.jpa.util.ManagedType<?>> . size ( ) ) ; for ( ManagedType < ? > org.springframework.data.jpa.util.ManagedType<?> : org.springframework.data.jpa.util.Metamodel . getManagedTypes ( ) ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.data.jpa.util.ManagedType<> . getJavaType ( ) ; if ( java.lang.Class<> != null ) { java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ; } } this . java.util.Collection<java.lang.Class<?>> = java.util.Collections . java.util.Set<java.lang.Class<?>> ( java.util.Set<java.lang.Class<?>> ) ; return this . java.util.Collection<java.lang.Class<?>> ; }  <METHOD_END>
