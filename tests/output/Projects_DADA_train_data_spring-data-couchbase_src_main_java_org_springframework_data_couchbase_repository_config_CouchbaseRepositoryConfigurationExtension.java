<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return CouchbaseRepositoryFactoryBean .class . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final BeanDefinitionBuilder org.springframework.data.couchbase.repository.config.BeanDefinitionBuilder , final XmlRepositoryConfigurationSource org.springframework.data.couchbase.repository.config.XmlRepositoryConfigurationSource ) { org.w3c.dom.Element org.w3c.dom.Element = org.springframework.data.couchbase.repository.config.XmlRepositoryConfigurationSource . getElement ( ) ; ParsingUtils . setPropertyReference ( org.springframework.data.couchbase.repository.config.BeanDefinitionBuilder , org.w3c.dom.Element , java.lang.String , STRING ) ; ParsingUtils . setPropertyReference ( org.springframework.data.couchbase.repository.config.BeanDefinitionBuilder , org.w3c.dom.Element , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final BeanDefinitionBuilder org.springframework.data.couchbase.repository.config.BeanDefinitionBuilder , final AnnotationRepositoryConfigurationSource org.springframework.data.couchbase.repository.config.AnnotationRepositoryConfigurationSource ) { org.springframework.data.couchbase.repository.config.BeanDefinitionBuilder . addDependsOn ( BeanNames . COUCHBASE_OPERATIONS_MAPPING ) ; org.springframework.data.couchbase.repository.config.BeanDefinitionBuilder . addDependsOn ( BeanNames . COUCHBASE_INDEX_MANAGER ) ; org.springframework.data.couchbase.repository.config.BeanDefinitionBuilder . addPropertyReference ( STRING , BeanNames . COUCHBASE_OPERATIONS_MAPPING ) ; org.springframework.data.couchbase.repository.config.BeanDefinitionBuilder . addPropertyReference ( STRING , BeanNames . COUCHBASE_INDEX_MANAGER ) ; }  <METHOD_END>
