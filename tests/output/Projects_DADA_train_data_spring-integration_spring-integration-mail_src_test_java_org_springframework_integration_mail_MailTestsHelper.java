<METHOD_START> private void ( ) { super(); }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.mail.SimpleMailMessage org.springframework.integration.mail.SimpleMailMessage ( ) { SimpleMailMessage org.springframework.integration.mail.SimpleMailMessage = new SimpleMailMessage ( ) ; org.springframework.integration.mail.SimpleMailMessage . setBcc ( java.lang.String[] ) ; org.springframework.integration.mail.SimpleMailMessage . setCc ( java.lang.String[] ) ; org.springframework.integration.mail.SimpleMailMessage . setTo ( java.lang.String[] ) ; org.springframework.integration.mail.SimpleMailMessage . setSubject ( java.lang.String ) ; org.springframework.integration.mail.SimpleMailMessage . setReplyTo ( java.lang.String ) ; org.springframework.integration.mail.SimpleMailMessage . setFrom ( java.lang.String ) ; org.springframework.integration.mail.SimpleMailMessage . setText ( java.lang.String ) ; return org.springframework.integration.mail.SimpleMailMessage ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.mail.Message<java.lang.String> < java.lang.String > org.springframework.integration.mail.Message<java.lang.String> ( ) { return MessageBuilder . withPayload ( org.springframework.integration.mail.MailTestsHelper . java.lang.String ) . setHeader ( MailHeaders . SUBJECT , org.springframework.integration.mail.MailTestsHelper . java.lang.String ) . setHeader ( MailHeaders . TO , org.springframework.integration.mail.MailTestsHelper . java.lang.String[] ) . setHeader ( MailHeaders . CC , org.springframework.integration.mail.MailTestsHelper . java.lang.String[] ) . setHeader ( MailHeaders . BCC , org.springframework.integration.mail.MailTestsHelper . java.lang.String[] ) . setHeader ( MailHeaders . FROM , org.springframework.integration.mail.MailTestsHelper . java.lang.String ) . setHeader ( MailHeaders . REPLY_TO , org.springframework.integration.mail.MailTestsHelper . java.lang.String ) . build ( ) ; }  <METHOD_END>
