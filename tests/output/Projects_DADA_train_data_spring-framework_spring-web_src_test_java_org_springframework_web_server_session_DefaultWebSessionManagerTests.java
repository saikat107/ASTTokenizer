<METHOD_START> @ Before public void void ( ) java.lang.Exception { this . org.springframework.web.server.session.DefaultWebSessionManager = new DefaultWebSessionManager ( ) ; this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver = new org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver ( ) ; this . org.springframework.web.server.session.DefaultWebSessionManager . setSessionIdResolver ( this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver ) ; MockServerHttpRequest org.springframework.web.server.session.MockServerHttpRequest = MockServerHttpRequest . get ( STRING ) . build ( ) ; MockServerHttpResponse org.springframework.web.server.session.MockServerHttpResponse = new MockServerHttpResponse ( ) ; this . org.springframework.web.server.session.ServerWebExchange = new DefaultServerWebExchange ( org.springframework.web.server.session.MockServerHttpRequest , org.springframework.web.server.session.MockServerHttpResponse , this . org.springframework.web.server.session.DefaultWebSessionManager ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver . void ( java.util.Collections . java.util.List<java.lang.String> ( ) ) ; WebSession org.springframework.web.server.session.WebSession = this . org.springframework.web.server.session.DefaultWebSessionManager . getSession ( this . org.springframework.web.server.session.ServerWebExchange ) . block ( ) ; org.springframework.web.server.session.WebSession . save ( ) ; assertFalse ( org.springframework.web.server.session.WebSession . isStarted ( ) ) ; assertFalse ( org.springframework.web.server.session.WebSession . isExpired ( ) ) ; assertNull ( this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver . java.lang.String ( ) ) ; assertNull ( this . org.springframework.web.server.session.DefaultWebSessionManager . getSessionStore ( ) . retrieveSession ( org.springframework.web.server.session.WebSession . getId ( ) ) . block ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver . void ( java.util.Collections . java.util.List<java.lang.String> ( ) ) ; WebSession org.springframework.web.server.session.WebSession = this . org.springframework.web.server.session.DefaultWebSessionManager . getSession ( this . org.springframework.web.server.session.ServerWebExchange ) . block ( ) ; org.springframework.web.server.session.WebSession . start ( ) ; org.springframework.web.server.session.WebSession . save ( ) ; java.lang.String java.lang.String = org.springframework.web.server.session.WebSession . getId ( ) ; assertNotNull ( this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver . java.lang.String ( ) ) ; assertEquals ( java.lang.String , this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver . java.lang.String ( ) ) ; assertSame ( org.springframework.web.server.session.WebSession , this . org.springframework.web.server.session.DefaultWebSessionManager . getSessionStore ( ) . retrieveSession ( java.lang.String ) . block ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver . void ( java.util.Collections . java.util.List<java.lang.String> ( ) ) ; WebSession org.springframework.web.server.session.WebSession = this . org.springframework.web.server.session.DefaultWebSessionManager . getSession ( this . org.springframework.web.server.session.ServerWebExchange ) . block ( ) ; org.springframework.web.server.session.WebSession . getAttributes ( ) . put ( STRING , STRING ) ; org.springframework.web.server.session.WebSession . save ( ) ; assertNotNull ( this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultWebSession org.springframework.web.server.session.DefaultWebSession = new DefaultWebSession ( STRING , java.time.Clock . java.time.Clock ( ) ) ; this . org.springframework.web.server.session.DefaultWebSessionManager . getSessionStore ( ) . storeSession ( org.springframework.web.server.session.DefaultWebSession ) ; this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver . void ( java.util.Collections . java.util.List<java.lang.String> ( STRING ) ) ; WebSession org.springframework.web.server.session.WebSession = this . org.springframework.web.server.session.DefaultWebSessionManager . getSession ( this . org.springframework.web.server.session.ServerWebExchange ) . block ( ) ; assertSame ( org.springframework.web.server.session.DefaultWebSession , org.springframework.web.server.session.WebSession ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.time.Clock java.time.Clock = java.time.Clock . java.time.Clock ( ) ; DefaultWebSession org.springframework.web.server.session.DefaultWebSession = new DefaultWebSession ( STRING , java.time.Clock ) ; org.springframework.web.server.session.DefaultWebSession . start ( ) ; org.springframework.web.server.session.DefaultWebSession . setLastAccessTime ( java.time.Instant . java.time.Instant ( java.time.Clock ) . java.time.Instant ( java.time.Duration . java.time.Duration ( NUMBER ) ) ) ; this . org.springframework.web.server.session.DefaultWebSessionManager . getSessionStore ( ) . storeSession ( org.springframework.web.server.session.DefaultWebSession ) ; this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver . void ( java.util.Collections . java.util.List<java.lang.String> ( STRING ) ) ; WebSession org.springframework.web.server.session.WebSession = this . org.springframework.web.server.session.DefaultWebSessionManager . getSession ( this . org.springframework.web.server.session.ServerWebExchange ) . block ( ) ; assertNotSame ( org.springframework.web.server.session.DefaultWebSession , org.springframework.web.server.session.WebSession ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultWebSession org.springframework.web.server.session.DefaultWebSession = new DefaultWebSession ( STRING , java.time.Clock . java.time.Clock ( ) ) ; this . org.springframework.web.server.session.DefaultWebSessionManager . getSessionStore ( ) . storeSession ( org.springframework.web.server.session.DefaultWebSession ) ; this . org.springframework.web.server.session.DefaultWebSessionManagerTests.TestWebSessionIdResolver . void ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING ) ) ; WebSession org.springframework.web.server.session.WebSession = this . org.springframework.web.server.session.DefaultWebSessionManager . getSession ( this . org.springframework.web.server.session.ServerWebExchange ) . block ( ) ; assertSame ( org.springframework.web.server.session.DefaultWebSession , org.springframework.web.server.session.WebSession ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ServerWebExchange org.springframework.web.server.session.ServerWebExchange ) { return this . java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServerWebExchange org.springframework.web.server.session.ServerWebExchange , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
