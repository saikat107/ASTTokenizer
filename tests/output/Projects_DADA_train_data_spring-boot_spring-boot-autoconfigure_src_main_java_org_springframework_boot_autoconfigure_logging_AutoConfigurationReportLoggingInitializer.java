<METHOD_START> @ java.lang.Override public void void ( ConfigurableApplicationContext org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext ) { this . org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext = org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext ; org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext . addApplicationListener ( new org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.AutoConfigurationReportListener ( ) ) ; if ( org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext instanceof GenericApplicationContext ) { this . org.springframework.boot.autoconfigure.logging.ConditionEvaluationReport = ConditionEvaluationReport . get ( this . org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext . getBeanFactory ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( ApplicationEvent org.springframework.boot.autoconfigure.logging.ApplicationEvent ) { ConfigurableApplicationContext org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext = org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer .this . org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext ; if ( org.springframework.boot.autoconfigure.logging.ApplicationEvent instanceof ContextRefreshedEvent ) { if ( ( ( ApplicationContextEvent ) org.springframework.boot.autoconfigure.logging.ApplicationEvent ) . getApplicationContext ( ) == org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext ) { void ( ) ; } } else if ( org.springframework.boot.autoconfigure.logging.ApplicationEvent instanceof ApplicationFailedEvent ) { if ( ( ( ApplicationFailedEvent ) org.springframework.boot.autoconfigure.logging.ApplicationEvent ) . getApplicationContext ( ) == org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext ) { void ( true ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ) { void ( ! this . org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext . isActive ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { if ( this . org.springframework.boot.autoconfigure.logging.ConditionEvaluationReport == null ) { if ( this . org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext == null ) { this . org.springframework.boot.autoconfigure.logging.Log . info ( STRING + STRING ) ; return; } this . org.springframework.boot.autoconfigure.logging.ConditionEvaluationReport = ConditionEvaluationReport . get ( this . org.springframework.boot.autoconfigure.logging.ConfigurableApplicationContext . getBeanFactory ( ) ) ; } if ( ! this . org.springframework.boot.autoconfigure.logging.ConditionEvaluationReport . getConditionAndOutcomesBySource ( ) . isEmpty ( ) ) { if ( boolean && this . org.springframework.boot.autoconfigure.logging.Log . isInfoEnabled ( ) && ! this . org.springframework.boot.autoconfigure.logging.Log . isDebugEnabled ( ) ) { this . org.springframework.boot.autoconfigure.logging.Log . info ( java.lang.String . java.lang.String ( STRING + STRING + STRING ) ) ; } if ( this . org.springframework.boot.autoconfigure.logging.Log . isDebugEnabled ( ) ) { this . org.springframework.boot.autoconfigure.logging.Log . debug ( new ConditionEvaluationReportMessage ( this . org.springframework.boot.autoconfigure.logging.ConditionEvaluationReport ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return Ordered . LOWEST_PRECEDENCE ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ResolvableType org.springframework.boot.autoconfigure.logging.ResolvableType ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.boot.autoconfigure.logging.ResolvableType . getRawClass ( ) ; if ( java.lang.Class<> == null ) { return false ; } return ContextRefreshedEvent .class . boolean ( java.lang.Class<> ) || ApplicationFailedEvent .class . boolean ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationEvent org.springframework.boot.autoconfigure.logging.ApplicationEvent ) { org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer .this . void ( org.springframework.boot.autoconfigure.logging.ApplicationEvent ) ; }  <METHOD_END>
