<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( EntityManager org.springframework.orm.jpa.EntityManager , TransactionDefinition org.springframework.orm.jpa.TransactionDefinition )			throws org.springframework.orm.jpa.PersistenceException , java.sql.SQLException , org.springframework.orm.jpa.TransactionException { if ( org.springframework.orm.jpa.TransactionDefinition . getIsolationLevel ( ) != TransactionDefinition . ISOLATION_DEFAULT ) { throw new InvalidIsolationLevelException ( java.lang.Class<? extends org.springframework.orm.jpa.DefaultJpaDialect> ( ) . java.lang.String ( ) + STRING + STRING ) ; } org.springframework.orm.jpa.EntityManager . getTransaction ( ) . begin ( ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( EntityManager org.springframework.orm.jpa.EntityManager , boolean boolean , java.lang.String java.lang.String )			throws org.springframework.orm.jpa.PersistenceException { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.orm.jpa.ConnectionHandle org.springframework.orm.jpa.ConnectionHandle ( EntityManager org.springframework.orm.jpa.EntityManager , boolean boolean )			throws org.springframework.orm.jpa.PersistenceException , java.sql.SQLException { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConnectionHandle org.springframework.orm.jpa.ConnectionHandle , EntityManager org.springframework.orm.jpa.EntityManager )			throws org.springframework.orm.jpa.PersistenceException , java.sql.SQLException {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.orm.jpa.DataAccessException org.springframework.orm.jpa.DataAccessException ( java.lang.RuntimeException java.lang.RuntimeException ) { return EntityManagerFactoryUtils . convertJpaAccessExceptionIfPossible ( java.lang.RuntimeException ) ; }  <METHOD_END>
