<METHOD_START> protected org.springframework.integration.redis.rules.RedisConnectionFactory org.springframework.integration.redis.rules.RedisConnectionFactory ( ) { if ( this . org.springframework.integration.redis.rules.RedisConnectionFactory != null ) { return this . org.springframework.integration.redis.rules.RedisConnectionFactory ; } RedisConnectionFactory org.springframework.integration.redis.rules.RedisConnectionFactory = RedisAvailableRule . connectionFactoryResource . get ( ) ; this . org.springframework.integration.redis.rules.RedisConnectionFactory = org.springframework.integration.redis.rules.RedisConnectionFactory ; return org.springframework.integration.redis.rules.RedisConnectionFactory ; }  <METHOD_END>
<METHOD_START> protected void void ( RedisMessageListenerContainer org.springframework.integration.redis.rules.RedisMessageListenerContainer ) throws java.lang.Exception { void ( org.springframework.integration.redis.rules.RedisMessageListenerContainer ) ; java.lang.Thread . void ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> private void void ( RedisMessageListenerContainer org.springframework.integration.redis.rules.RedisMessageListenerContainer ) throws java.lang.InterruptedException { RedisConnection org.springframework.integration.redis.rules.RedisConnection = null ; int int = NUMBER ; while ( int ++ < NUMBER && ( org.springframework.integration.redis.rules.RedisConnection = TestUtils . getPropertyValue ( org.springframework.integration.redis.rules.RedisMessageListenerContainer , STRING , RedisConnection .class ) ) == null ) { java.lang.Thread . void ( NUMBER ) ; } assertNotNull ( STRING , org.springframework.integration.redis.rules.RedisConnection ) ; int = NUMBER ; while ( int ++ < NUMBER && ! org.springframework.integration.redis.rules.RedisConnection . isSubscribed ( ) ) { java.lang.Thread . void ( NUMBER ) ; } assertTrue ( STRING , int < NUMBER ) ; }  <METHOD_END>
<METHOD_START> protected void void ( RedisMessageListenerContainer org.springframework.integration.redis.rules.RedisMessageListenerContainer ) throws java.lang.Exception { this . void ( org.springframework.integration.redis.rules.RedisMessageListenerContainer ) ; RedisConnection org.springframework.integration.redis.rules.RedisConnection = TestUtils . getPropertyValue ( org.springframework.integration.redis.rules.RedisMessageListenerContainer , STRING , RedisConnection .class ) ; int int = NUMBER ; while ( int ++ < NUMBER && org.springframework.integration.redis.rules.RedisConnection . getSubscription ( ) . getPatterns ( ) . size ( ) == NUMBER ) { java.lang.Thread . void ( NUMBER ) ; } assertTrue ( STRING , int < NUMBER ) ; java.lang.Thread . void ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> protected void void ( RedisMessageListenerContainer org.springframework.integration.redis.rules.RedisMessageListenerContainer , RedisTemplate < ? , ? > org.springframework.integration.redis.rules.RedisTemplate<?,?> , java.lang.String java.lang.String , QueueChannel org.springframework.integration.redis.rules.QueueChannel , java.lang.Object java.lang.Object ) throws java.lang.Exception { void ( org.springframework.integration.redis.rules.RedisMessageListenerContainer ) ; void ( org.springframework.integration.redis.rules.QueueChannel ) ; long long = java.lang.System . long ( ) ; Message < ? > org.springframework.integration.redis.rules.Message<?> = null ; while ( org.springframework.integration.redis.rules.Message<> == null && java.lang.System . long ( ) - long < NUMBER ) { org.springframework.integration.redis.rules.RedisTemplate<,> . convertAndSend ( java.lang.String , java.lang.Object ) ; org.springframework.integration.redis.rules.Message<?> = org.springframework.integration.redis.rules.QueueChannel . receive ( NUMBER ) ; } void ( org.springframework.integration.redis.rules.QueueChannel ) ; assertNotNull ( STRING , org.springframework.integration.redis.rules.Message<> ) ; }  <METHOD_END>
<METHOD_START> private void void ( QueueChannel org.springframework.integration.redis.rules.QueueChannel ) { while ( org.springframework.integration.redis.rules.QueueChannel . receive ( NUMBER ) != null ) { } }  <METHOD_END>
<METHOD_START> protected void void ( RedisConnectionFactory org.springframework.integration.redis.rules.RedisConnectionFactory ) { StringRedisTemplate org.springframework.integration.redis.rules.StringRedisTemplate = org.springframework.integration.redis.rules.StringRedisTemplate ( org.springframework.integration.redis.rules.RedisConnectionFactory ) ; org.springframework.integration.redis.rules.StringRedisTemplate . delete ( STRING ) ; BoundListOperations < java.lang.String , java.lang.String > org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> = org.springframework.integration.redis.rules.StringRedisTemplate . boundListOps ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; org.springframework.integration.redis.rules.BoundListOperations<java.lang.String,java.lang.String> . rightPush ( STRING ) ; }  <METHOD_END>
<METHOD_START> protected void void ( RedisConnectionFactory org.springframework.integration.redis.rules.RedisConnectionFactory ) { StringRedisTemplate org.springframework.integration.redis.rules.StringRedisTemplate = org.springframework.integration.redis.rules.StringRedisTemplate ( org.springframework.integration.redis.rules.RedisConnectionFactory ) ; org.springframework.integration.redis.rules.StringRedisTemplate . delete ( STRING ) ; BoundZSetOperations < java.lang.String , java.lang.String > org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> = org.springframework.integration.redis.rules.StringRedisTemplate . boundZSetOps ( STRING ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; org.springframework.integration.redis.rules.BoundZSetOperations<java.lang.String,java.lang.String> . add ( STRING , NUMBER ) ; }  <METHOD_END>
<METHOD_START> protected void void ( RedisConnectionFactory org.springframework.integration.redis.rules.RedisConnectionFactory ) { this . void ( org.springframework.integration.redis.rules.RedisConnectionFactory , STRING ) ; }  <METHOD_END>
<METHOD_START> protected void void ( RedisConnectionFactory org.springframework.integration.redis.rules.RedisConnectionFactory , java.lang.String java.lang.String ) { StringRedisTemplate org.springframework.integration.redis.rules.StringRedisTemplate = org.springframework.integration.redis.rules.StringRedisTemplate ( org.springframework.integration.redis.rules.RedisConnectionFactory ) ; org.springframework.integration.redis.rules.StringRedisTemplate . delete ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.integration.redis.rules.StringRedisTemplate org.springframework.integration.redis.rules.StringRedisTemplate ( RedisConnectionFactory org.springframework.integration.redis.rules.RedisConnectionFactory ) { StringRedisTemplate org.springframework.integration.redis.rules.StringRedisTemplate = new StringRedisTemplate ( ) ; org.springframework.integration.redis.rules.StringRedisTemplate . setConnectionFactory ( org.springframework.integration.redis.rules.RedisConnectionFactory ) ; org.springframework.integration.redis.rules.StringRedisTemplate . afterPropertiesSet ( ) ; return org.springframework.integration.redis.rules.StringRedisTemplate ; }  <METHOD_END>
