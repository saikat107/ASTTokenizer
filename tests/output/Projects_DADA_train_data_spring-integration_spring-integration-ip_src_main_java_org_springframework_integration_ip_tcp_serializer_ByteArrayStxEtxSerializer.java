<METHOD_START> @ java.lang.Override public byte [] byte[] ( java.io.InputStream java.io.InputStream , byte [] byte[] ) throws java.io.IOException { int int = java.io.InputStream . int ( ) ; if ( int < NUMBER ) { throw new SoftEndOfStreamException ( STRING ) ; } int int = NUMBER ; try { if ( int != int ) { throw new MessageMappingException ( STRING ) ; } while ( ( int = java.io.InputStream . int ( ) ) != int ) { checkClosure ( int ) ; byte[] [ int ++ ] = ( byte ) int ; if ( int >= this . maxMessageSize ) { throw new java.io.IOException ( STRING + this . maxMessageSize ) ; } } return copyToSizedArray ( byte[] , int ) ; } catch ( java.io.IOException java.io.IOException ) { publishEvent ( java.io.IOException , byte[] , int ) ; throw java.io.IOException ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { publishEvent ( java.lang.RuntimeException , byte[] , int ) ; throw java.lang.RuntimeException ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( byte [] byte[] , java.io.OutputStream java.io.OutputStream ) throws java.io.IOException { java.io.OutputStream . void ( int ) ; java.io.OutputStream . void ( byte[] ) ; java.io.OutputStream . void ( int ) ; }  <METHOD_END>
