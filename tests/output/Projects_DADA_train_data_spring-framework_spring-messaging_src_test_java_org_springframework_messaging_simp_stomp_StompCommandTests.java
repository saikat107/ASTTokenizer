<METHOD_START> @ Test public void void ( ) java.lang.Exception { for ( StompCommand org.springframework.messaging.simp.stomp.StompCommand : StompCommand . values ( ) ) { SimpMessageType org.springframework.messaging.simp.stomp.SimpMessageType = java.util.Map<org.springframework.messaging.simp.stomp.StompCommand,org.springframework.messaging.simp.stomp.SimpMessageType> . get ( org.springframework.messaging.simp.stomp.StompCommand ) ; if ( org.springframework.messaging.simp.stomp.SimpMessageType == null ) { org.springframework.messaging.simp.stomp.SimpMessageType = SimpMessageType . OTHER ; } assertSame ( org.springframework.messaging.simp.stomp.SimpMessageType , org.springframework.messaging.simp.stomp.StompCommand . getMessageType ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { for ( StompCommand org.springframework.messaging.simp.stomp.StompCommand : StompCommand . values ( ) ) { assertEquals ( java.util.Collection<org.springframework.messaging.simp.stomp.StompCommand> . contains ( org.springframework.messaging.simp.stomp.StompCommand ) , org.springframework.messaging.simp.stomp.StompCommand . requiresDestination ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { for ( StompCommand org.springframework.messaging.simp.stomp.StompCommand : StompCommand . values ( ) ) { assertEquals ( java.util.Collection<org.springframework.messaging.simp.stomp.StompCommand> . contains ( org.springframework.messaging.simp.stomp.StompCommand ) , org.springframework.messaging.simp.stomp.StompCommand . requiresSubscriptionId ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { for ( StompCommand org.springframework.messaging.simp.stomp.StompCommand : StompCommand . values ( ) ) { assertEquals ( java.util.Collection<org.springframework.messaging.simp.stomp.StompCommand> . contains ( org.springframework.messaging.simp.stomp.StompCommand ) , org.springframework.messaging.simp.stomp.StompCommand . requiresContentLength ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { for ( StompCommand org.springframework.messaging.simp.stomp.StompCommand : StompCommand . values ( ) ) { assertEquals ( java.util.Collection<org.springframework.messaging.simp.stomp.StompCommand> . contains ( org.springframework.messaging.simp.stomp.StompCommand ) , org.springframework.messaging.simp.stomp.StompCommand . isBodyAllowed ( ) ) ; } }  <METHOD_END>
