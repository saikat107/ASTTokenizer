<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.LiteralOperators.LiteralOperatorFactory org.springframework.data.mongodb.core.aggregation.LiteralOperators.LiteralOperatorFactory ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.LiteralOperators.LiteralOperatorFactory ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.LiteralOperators.Literal org.springframework.data.mongodb.core.aggregation.LiteralOperators.Literal ( ) { return org.springframework.data.mongodb.core.aggregation.LiteralOperators.Literal . org.springframework.data.mongodb.core.aggregation.LiteralOperators.Literal ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.LiteralOperators.Literal org.springframework.data.mongodb.core.aggregation.LiteralOperators.Literal ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.LiteralOperators.Literal ( java.lang.Object ) ; }  <METHOD_END>
