<METHOD_START> public void ( MessageChannel org.springframework.integration.dsl.channel.MessageChannel ) { Assert . notNull ( org.springframework.integration.dsl.channel.MessageChannel , STRING ) ; this . org.springframework.integration.dsl.channel.MessageChannel = org.springframework.integration.dsl.channel.MessageChannel ; this . java.lang.String = null ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.integration.dsl.channel.MessageChannel = null ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.channel.WireTapSpec org.springframework.integration.dsl.channel.WireTapSpec ( java.lang.String java.lang.String ) { return org.springframework.integration.dsl.channel.WireTapSpec ( new ExpressionEvaluatingSelector ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.channel.WireTapSpec org.springframework.integration.dsl.channel.WireTapSpec ( Expression org.springframework.integration.dsl.channel.Expression ) { return org.springframework.integration.dsl.channel.WireTapSpec ( new ExpressionEvaluatingSelector ( org.springframework.integration.dsl.channel.Expression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.channel.WireTapSpec org.springframework.integration.dsl.channel.WireTapSpec ( MessageSelector org.springframework.integration.dsl.channel.MessageSelector ) { this . org.springframework.integration.dsl.channel.MessageSelector = org.springframework.integration.dsl.channel.MessageSelector ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.channel.WireTapSpec org.springframework.integration.dsl.channel.WireTapSpec ( long long ) { this . java.lang.Long = long ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.dsl.channel.WireTap org.springframework.integration.dsl.channel.WireTap ( ) { WireTap org.springframework.integration.dsl.channel.WireTap ; if ( this . org.springframework.integration.dsl.channel.MessageChannel != null ) { org.springframework.integration.dsl.channel.WireTap = new WireTap ( this . org.springframework.integration.dsl.channel.MessageChannel , this . org.springframework.integration.dsl.channel.MessageSelector ) ; } else { org.springframework.integration.dsl.channel.WireTap = new WireTap ( this . java.lang.String , this . org.springframework.integration.dsl.channel.MessageSelector ) ; } if ( this . java.lang.Long != null ) { org.springframework.integration.dsl.channel.WireTap . setTimeout ( this . java.lang.Long ) ; } return org.springframework.integration.dsl.channel.WireTap ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { if ( this . org.springframework.integration.dsl.channel.MessageSelector != null ) { return java.util.Collections . java.util.Set ( this . org.springframework.integration.dsl.channel.MessageSelector ) ; } else { return null ; } }  <METHOD_END>
