<METHOD_START> public void ( T T ) { this . T = T ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.event.test.ResolvableType org.springframework.context.event.test.ResolvableType ( ) { return ResolvableType . forClassWithGenerics ( java.lang.Class<? extends org.springframework.context.event.test.GenericEventPojo> ( ) , ResolvableType . forInstance ( this . T ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( java.lang.Object == null || java.lang.Class<? extends org.springframework.context.event.test.GenericEventPojo> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) return false ; org.springframework.context.event.test.GenericEventPojo<?> < ? > org.springframework.context.event.test.GenericEventPojo<?> = ( org.springframework.context.event.test.GenericEventPojo<?> < ? > ) java.lang.Object ; return this . T . boolean ( org.springframework.context.event.test.GenericEventPojo<> . value ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . T . int ( ) ; }  <METHOD_END>
