<METHOD_START> public void ( java.lang.String java.lang.String , EncodedResource org.springframework.core.io.support.EncodedResource ) throws java.io.IOException { super( java.lang.String , PropertiesLoaderUtils . loadProperties ( org.springframework.core.io.support.EncodedResource ) ); this . java.lang.String = java.lang.String ( org.springframework.core.io.support.EncodedResource . getResource ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( EncodedResource org.springframework.core.io.support.EncodedResource ) throws java.io.IOException { super( java.lang.String ( org.springframework.core.io.support.EncodedResource . getResource ( ) ) , PropertiesLoaderUtils . loadProperties ( org.springframework.core.io.support.EncodedResource ) ); this . java.lang.String = null ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , Resource org.springframework.core.io.support.Resource ) throws java.io.IOException { super( java.lang.String , PropertiesLoaderUtils . loadProperties ( new EncodedResource ( org.springframework.core.io.support.Resource ) ) ); this . java.lang.String = java.lang.String ( org.springframework.core.io.support.Resource ) ; }  <METHOD_END>
<METHOD_START> public void ( Resource org.springframework.core.io.support.Resource ) throws java.io.IOException { super( java.lang.String ( org.springframework.core.io.support.Resource ) , PropertiesLoaderUtils . loadProperties ( new EncodedResource ( org.springframework.core.io.support.Resource ) ) ); this . java.lang.String = null ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.ClassLoader java.lang.ClassLoader ) throws java.io.IOException { this( java.lang.String , new DefaultResourceLoader ( java.lang.ClassLoader ) . getResource ( java.lang.String ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.ClassLoader java.lang.ClassLoader ) throws java.io.IOException { this( new DefaultResourceLoader ( java.lang.ClassLoader ) . getResource ( java.lang.String ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.io.IOException { this( java.lang.String , new DefaultResourceLoader ( ) . getResource ( java.lang.String ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) throws java.io.IOException { this( new DefaultResourceLoader ( ) . getResource ( java.lang.String ) ); }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { super( java.lang.String , java.util.Map<java.lang.String,java.lang.Object> ); this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.core.io.support.ResourcePropertySource org.springframework.core.io.support.ResourcePropertySource ( java.lang.String java.lang.String ) { if ( this . name . equals ( java.lang.String ) ) { return this ; } if ( this . java.lang.String != null ) { if ( this . java.lang.String . boolean ( java.lang.String ) ) { return new org.springframework.core.io.support.ResourcePropertySource ( this . java.lang.String , null , this . source ) ; } else { return new org.springframework.core.io.support.ResourcePropertySource ( java.lang.String , this . java.lang.String , this . source ) ; } } else { return new org.springframework.core.io.support.ResourcePropertySource ( java.lang.String , this . name , this . source ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.core.io.support.ResourcePropertySource org.springframework.core.io.support.ResourcePropertySource ( ) { if ( this . java.lang.String == null ) { return this ; } return new org.springframework.core.io.support.ResourcePropertySource ( this . java.lang.String , null , this . source ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( Resource org.springframework.core.io.support.Resource ) { java.lang.String java.lang.String = org.springframework.core.io.support.Resource . getDescription ( ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { java.lang.String = org.springframework.core.io.support.Resource . getClass ( ) . getSimpleName ( ) + STRING + java.lang.System . int ( org.springframework.core.io.support.Resource ) ; } return java.lang.String ; }  <METHOD_END>
