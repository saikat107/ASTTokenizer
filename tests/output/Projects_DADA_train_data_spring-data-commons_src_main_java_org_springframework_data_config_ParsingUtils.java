<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> public static void void ( BeanDefinitionBuilder org.springframework.data.config.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.data.config.BeanDefinitionBuilder , STRING ) ; Assert . notNull ( org.w3c.dom.Element , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.config.BeanDefinitionBuilder . addPropertyValue ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( BeanDefinitionBuilder org.springframework.data.config.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String ) { void ( org.springframework.data.config.BeanDefinitionBuilder , org.w3c.dom.Element , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static void void ( BeanDefinitionBuilder org.springframework.data.config.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.data.config.BeanDefinitionBuilder , STRING ) ; Assert . notNull ( org.w3c.dom.Element , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.config.BeanDefinitionBuilder . addPropertyReference ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public static org.springframework.data.config.AbstractBeanDefinition org.springframework.data.config.AbstractBeanDefinition ( BeanDefinitionBuilder org.springframework.data.config.BeanDefinitionBuilder , ParserContext org.springframework.data.config.ParserContext , org.w3c.dom.Element org.w3c.dom.Element ) { Assert . notNull ( org.w3c.dom.Element , STRING ) ; Assert . notNull ( org.springframework.data.config.ParserContext , STRING ) ; return org.springframework.data.config.AbstractBeanDefinition ( org.springframework.data.config.BeanDefinitionBuilder , org.springframework.data.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.config.AbstractBeanDefinition org.springframework.data.config.AbstractBeanDefinition ( BeanDefinitionBuilder org.springframework.data.config.BeanDefinitionBuilder , java.lang.Object java.lang.Object ) { Assert . notNull ( org.springframework.data.config.BeanDefinitionBuilder , STRING ) ; AbstractBeanDefinition org.springframework.data.config.AbstractBeanDefinition = org.springframework.data.config.BeanDefinitionBuilder . getRawBeanDefinition ( ) ; org.springframework.data.config.AbstractBeanDefinition . setSource ( java.lang.Object ) ; return org.springframework.data.config.AbstractBeanDefinition ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.config.AbstractBeanDefinition org.springframework.data.config.AbstractBeanDefinition ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Assert . hasText ( java.lang.String , STRING ) ; BeanDefinitionBuilder org.springframework.data.config.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( ObjectFactoryCreatingFactoryBean .class ) ; org.springframework.data.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; org.springframework.data.config.BeanDefinitionBuilder . setRole ( AbstractBeanDefinition . ROLE_INFRASTRUCTURE ) ; return org.springframework.data.config.AbstractBeanDefinition ( org.springframework.data.config.BeanDefinitionBuilder , java.lang.Object ) ; }  <METHOD_END>
