<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < demo.showcase.Application.States , demo.showcase.Application.Events > demo.showcase.StateMachineStateConfigurer<demo.showcase.Application.States,demo.showcase.Application.Events> )				throws java.lang.Exception { demo.showcase.StateMachineStateConfigurer<demo.showcase.Application.States,demo.showcase.Application.Events> . withStates ( ) . initial ( demo.showcase.Application.States . demo.showcase.Application.States , demo.showcase.Application.FooAction ( ) ) . state ( demo.showcase.Application.States . demo.showcase.Application.States ) . and ( ) . withStates ( ) . parent ( demo.showcase.Application.States . demo.showcase.Application.States ) . initial ( demo.showcase.Application.States . demo.showcase.Application.States ) . state ( demo.showcase.Application.States . demo.showcase.Application.States ) . and ( ) . withStates ( ) . parent ( demo.showcase.Application.States . demo.showcase.Application.States ) . initial ( demo.showcase.Application.States . demo.showcase.Application.States ) . state ( demo.showcase.Application.States . demo.showcase.Application.States ) . state ( demo.showcase.Application.States . demo.showcase.Application.States ) . and ( ) . withStates ( ) . parent ( demo.showcase.Application.States . demo.showcase.Application.States ) . state ( demo.showcase.Application.States . demo.showcase.Application.States ) . and ( ) . withStates ( ) . parent ( demo.showcase.Application.States . demo.showcase.Application.States ) . initial ( demo.showcase.Application.States . demo.showcase.Application.States ) . state ( demo.showcase.Application.States . demo.showcase.Application.States ) . and ( ) . withStates ( ) . parent ( demo.showcase.Application.States . demo.showcase.Application.States ) . initial ( demo.showcase.Application.States . demo.showcase.Application.States ) . state ( demo.showcase.Application.States . demo.showcase.Application.States ) . state ( demo.showcase.Application.States . demo.showcase.Application.States ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < demo.showcase.Application.States , demo.showcase.Application.Events > demo.showcase.StateMachineTransitionConfigurer<demo.showcase.Application.States,demo.showcase.Application.Events> )				throws java.lang.Exception { demo.showcase.StateMachineTransitionConfigurer<demo.showcase.Application.States,demo.showcase.Application.Events> . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . guard ( demo.showcase.Application.FooGuard ( ) ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withInternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . guard ( demo.showcase.Application.FooGuard ( ) ) . action ( demo.showcase.Application.FooAction ( ) ) . and ( ) . withInternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . guard ( demo.showcase.Application.FooGuard ( ) ) . action ( demo.showcase.Application.FooAction ( ) ) . and ( ) . withInternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) . and ( ) . withExternal ( ) . source ( demo.showcase.Application.States . demo.showcase.Application.States ) . target ( demo.showcase.Application.States . demo.showcase.Application.States ) . event ( demo.showcase.Application.Events . demo.showcase.Application.Events ) ; }  <METHOD_END>
<METHOD_START> @ Bean public demo.showcase.Application.FooGuard demo.showcase.Application.FooGuard ( ) { return new demo.showcase.Application.FooGuard ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Bean public demo.showcase.Application.FooGuard demo.showcase.Application.FooGuard ( ) { return new demo.showcase.Application.FooGuard ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Bean public demo.showcase.Application.FooAction demo.showcase.Application.FooAction ( ) { return new demo.showcase.Application.FooAction ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < demo.showcase.Application.States , demo.showcase.Application.Events > demo.showcase.StateContext<demo.showcase.Application.States,demo.showcase.Application.Events> ) { java.util.Map<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > java.util.Map<java.lang.Object,java.lang.Object> = demo.showcase.StateContext<demo.showcase.Application.States,demo.showcase.Application.Events> . getExtendedState ( ) . getVariables ( ) ; java.lang.Integer java.lang.Integer = demo.showcase.StateContext<demo.showcase.Application.States,demo.showcase.Application.Events> . getExtendedState ( ) . get ( STRING , java.lang.Integer .class ) ; if ( java.lang.Integer == null ) { demo.showcase.Log . info ( STRING ) ; java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; } else if ( java.lang.Integer == NUMBER ) { demo.showcase.Log . info ( STRING ) ; java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; } else if ( java.lang.Integer == NUMBER ) { demo.showcase.Log . info ( STRING ) ; java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; } }  <METHOD_END>
<METHOD_START> public void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( StateContext < demo.showcase.Application.States , demo.showcase.Application.Events > demo.showcase.StateContext<demo.showcase.Application.States,demo.showcase.Application.Events> ) { java.lang.Object java.lang.Object = demo.showcase.StateContext<demo.showcase.Application.States,demo.showcase.Application.Events> . getExtendedState ( ) . getVariables ( ) . get ( STRING ) ; return ! ( java.lang.Object == null || ! java.lang.Object . boolean ( int ) ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String [] java.lang.String[] ) throws java.lang.Exception { Bootstrap . main ( java.lang.String[] ) ; }  <METHOD_END>
