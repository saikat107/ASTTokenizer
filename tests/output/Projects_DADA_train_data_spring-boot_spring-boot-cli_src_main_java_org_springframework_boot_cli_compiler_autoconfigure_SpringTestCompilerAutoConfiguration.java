<METHOD_START> @ java.lang.Override public boolean boolean ( ClassNode org.springframework.boot.cli.compiler.autoconfigure.ClassNode ) { return AstUtils . hasAtLeastOneAnnotation ( org.springframework.boot.cli.compiler.autoconfigure.ClassNode , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DependencyCustomizer org.springframework.boot.cli.compiler.autoconfigure.DependencyCustomizer ) { org.springframework.boot.cli.compiler.autoconfigure.DependencyCustomizer . ifAnyMissingClasses ( STRING ) . add ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( GroovyClassLoader org.springframework.boot.cli.compiler.autoconfigure.GroovyClassLoader , GroovyCompilerConfiguration org.springframework.boot.cli.compiler.autoconfigure.GroovyCompilerConfiguration , GeneratorContext org.springframework.boot.cli.compiler.autoconfigure.GeneratorContext , SourceUnit org.springframework.boot.cli.compiler.autoconfigure.SourceUnit , ClassNode org.springframework.boot.cli.compiler.autoconfigure.ClassNode )					throws org.springframework.boot.cli.compiler.autoconfigure.CompilationFailedException { if ( ! AstUtils . hasAtLeastOneAnnotation ( org.springframework.boot.cli.compiler.autoconfigure.ClassNode , STRING ) ) { AnnotationNode org.springframework.boot.cli.compiler.autoconfigure.AnnotationNode = new AnnotationNode ( ClassHelper . make ( STRING ) ) ; org.springframework.boot.cli.compiler.autoconfigure.AnnotationNode . addMember ( STRING , new ClassExpression ( ClassHelper . make ( STRING ) ) ) ; org.springframework.boot.cli.compiler.autoconfigure.ClassNode . addAnnotation ( org.springframework.boot.cli.compiler.autoconfigure.AnnotationNode ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ImportCustomizer org.springframework.boot.cli.compiler.autoconfigure.ImportCustomizer ) throws org.springframework.boot.cli.compiler.autoconfigure.CompilationFailedException { org.springframework.boot.cli.compiler.autoconfigure.ImportCustomizer . addStarImports ( STRING , STRING , STRING , STRING , STRING , STRING , STRING ) . addImports ( STRING , STRING ) ; }  <METHOD_END>
