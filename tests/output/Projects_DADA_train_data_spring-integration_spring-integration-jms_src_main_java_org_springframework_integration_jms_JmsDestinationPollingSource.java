<METHOD_START> public void ( JmsTemplate org.springframework.integration.jms.JmsTemplate ) { this . org.springframework.integration.jms.JmsTemplate = org.springframework.integration.jms.JmsTemplate ; }  <METHOD_END>
<METHOD_START> public void void ( Destination org.springframework.integration.jms.Destination ) { Assert . isNull ( this . java.lang.String , STRING ) ; this . org.springframework.integration.jms.Destination = org.springframework.integration.jms.Destination ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . isNull ( this . org.springframework.integration.jms.Destination , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( JmsHeaderMapper org.springframework.integration.jms.JmsHeaderMapper ) { this . org.springframework.integration.jms.JmsHeaderMapper = org.springframework.integration.jms.JmsHeaderMapper ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public org.springframework.integration.jms.Message<java.lang.Object> < java.lang.Object > org.springframework.integration.jms.Message<java.lang.Object> ( ) { javax . javax.jms . javax.jms javax.jms.Message = javax.jms.Message ( ) ; if ( javax.jms.Message == null ) { return null ; } try { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.integration.jms.JmsHeaderMapper . toHeaders ( javax.jms.Message ) ; java.lang.Object java.lang.Object = javax.jms.Message ; if ( this . boolean ) { java.lang.Object = this . org.springframework.integration.jms.JmsTemplate . getMessageConverter ( ) . fromMessage ( javax.jms.Message ) ; } AbstractIntegrationMessageBuilder < java.lang.Object > org.springframework.integration.jms.AbstractIntegrationMessageBuilder<java.lang.Object> = ( java.lang.Object instanceof Message ) ? getMessageBuilderFactory ( ) . fromMessage ( ( Message < java.lang.Object > ) java.lang.Object ) : getMessageBuilderFactory ( ) . withPayload ( java.lang.Object ) ; return org.springframework.integration.jms.AbstractIntegrationMessageBuilder<java.lang.Object> . copyHeadersIfAbsent ( java.util.Map<java.lang.String,java.lang.Object> ) . build ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new MessagingException ( java.lang.Exception . java.lang.String ( ) , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private javax . javax.jms . javax.jms.Message javax.jms.Message ( ) { javax . javax.jms . javax.jms javax.jms.Message = null ; if ( this . org.springframework.integration.jms.Destination != null ) { javax.jms.Message = this . org.springframework.integration.jms.JmsTemplate . receiveSelected ( this . org.springframework.integration.jms.Destination , this . java.lang.String ) ; } else if ( this . java.lang.String != null ) { javax.jms.Message = this . org.springframework.integration.jms.JmsTemplate . receiveSelected ( this . java.lang.String , this . java.lang.String ) ; } else { javax.jms.Message = this . org.springframework.integration.jms.JmsTemplate . receiveSelected ( this . java.lang.String ) ; } return javax.jms.Message ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { if ( this . java.lang.String != null ) { java.lang.Integer java.lang.Integer = JmsAdapterUtils . parseAcknowledgeMode ( this . java.lang.String ) ; if ( java.lang.Integer != null ) { if ( JmsAdapterUtils . SESSION_TRANSACTED == java.lang.Integer ) { this . org.springframework.integration.jms.JmsTemplate . setSessionTransacted ( true ) ; } else { this . org.springframework.integration.jms.JmsTemplate . setSessionAcknowledgeMode ( java.lang.Integer ) ; } } } }  <METHOD_END>
