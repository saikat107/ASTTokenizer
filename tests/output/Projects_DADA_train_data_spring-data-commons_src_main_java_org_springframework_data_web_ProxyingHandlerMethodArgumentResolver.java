<METHOD_START> public void ( ConversionService org.springframework.data.web.ConversionService ) { super( true ); this . org.springframework.data.web.SpelAwareProxyProjectionFactory = new SpelAwareProxyProjectionFactory ( ) ; this . org.springframework.data.web.ConversionService = org.springframework.data.web.ConversionService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.data.web.BeanFactory ) throws org.springframework.data.web.BeansException { this . org.springframework.data.web.SpelAwareProxyProjectionFactory . setBeanFactory ( org.springframework.data.web.BeanFactory ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.Deprecated public void void ( ResourceLoader org.springframework.data.web.ResourceLoader ) { this . org.springframework.data.web.SpelAwareProxyProjectionFactory . setResourceLoader ( org.springframework.data.web.ResourceLoader ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . org.springframework.data.web.SpelAwareProxyProjectionFactory . setBeanClassLoader ( java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.data.web.MethodParameter ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.data.web.MethodParameter . getParameterType ( ) ; if ( ! java.lang.Class<> . boolean ( ) ) { return false ; } if ( org.springframework.data.web.MethodParameter . getParameterAnnotation ( ProjectedPayload .class ) != null ) { return true ; } if ( AnnotatedElementUtils . findMergedAnnotation ( java.lang.Class<> , ProjectedPayload .class ) != null ) { return true ; } for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { if ( ClassUtils . getPackageName ( java.lang.Class<> ) . startsWith ( java.lang.String ) ) { return false ; } } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.String java.lang.String , MethodParameter org.springframework.data.web.MethodParameter , WebDataBinderFactory org.springframework.data.web.WebDataBinderFactory , NativeWebRequest org.springframework.data.web.NativeWebRequest ) throws java.lang.Exception { MapDataBinder org.springframework.data.web.MapDataBinder = new MapDataBinder ( org.springframework.data.web.MethodParameter . getParameterType ( ) , org.springframework.data.web.ConversionService ) ; org.springframework.data.web.MapDataBinder . bind ( new MutablePropertyValues ( org.springframework.data.web.NativeWebRequest . getParameterMap ( ) ) ) ; return org.springframework.data.web.SpelAwareProxyProjectionFactory . createProjection ( org.springframework.data.web.MethodParameter . getParameterType ( ) , org.springframework.data.web.MapDataBinder . getTarget ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( WebDataBinder org.springframework.data.web.WebDataBinder , NativeWebRequest org.springframework.data.web.NativeWebRequest ) {}  <METHOD_END>
