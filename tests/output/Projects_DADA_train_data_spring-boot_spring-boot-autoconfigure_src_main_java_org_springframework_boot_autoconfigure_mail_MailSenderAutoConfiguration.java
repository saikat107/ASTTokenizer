<METHOD_START> public void ( MailProperties org.springframework.boot.autoconfigure.mail.MailProperties , ObjectProvider < Session > org.springframework.boot.autoconfigure.mail.ObjectProvider<org.springframework.boot.autoconfigure.mail.Session> ) { this . org.springframework.boot.autoconfigure.mail.MailProperties = org.springframework.boot.autoconfigure.mail.MailProperties ; this . org.springframework.boot.autoconfigure.mail.Session = org.springframework.boot.autoconfigure.mail.ObjectProvider<org.springframework.boot.autoconfigure.mail.Session> . getIfAvailable ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl ( ) { JavaMailSenderImpl org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl = new JavaMailSenderImpl ( ) ; if ( this . org.springframework.boot.autoconfigure.mail.Session != null ) { org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl . setSession ( this . org.springframework.boot.autoconfigure.mail.Session ) ; } else { void ( org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl ) ; } return org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl ; }  <METHOD_END>
<METHOD_START> private void void ( JavaMailSenderImpl org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl ) { org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl . setHost ( this . org.springframework.boot.autoconfigure.mail.MailProperties . getHost ( ) ) ; if ( this . org.springframework.boot.autoconfigure.mail.MailProperties . getPort ( ) != null ) { org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl . setPort ( this . org.springframework.boot.autoconfigure.mail.MailProperties . getPort ( ) ) ; } org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl . setUsername ( this . org.springframework.boot.autoconfigure.mail.MailProperties . getUsername ( ) ) ; org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl . setPassword ( this . org.springframework.boot.autoconfigure.mail.MailProperties . getPassword ( ) ) ; org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl . setProtocol ( this . org.springframework.boot.autoconfigure.mail.MailProperties . getProtocol ( ) ) ; if ( this . org.springframework.boot.autoconfigure.mail.MailProperties . getDefaultEncoding ( ) != null ) { org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl . setDefaultEncoding ( this . org.springframework.boot.autoconfigure.mail.MailProperties . getDefaultEncoding ( ) . name ( ) ) ; } if ( ! this . org.springframework.boot.autoconfigure.mail.MailProperties . getProperties ( ) . isEmpty ( ) ) { org.springframework.boot.autoconfigure.mail.JavaMailSenderImpl . setJavaMailProperties ( java.util.Properties ( this . org.springframework.boot.autoconfigure.mail.MailProperties . getProperties ( ) ) ) ; } }  <METHOD_END>
<METHOD_START> private java.util.Properties java.util.Properties ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . void ( java.util.Map<java.lang.String,java.lang.String> ) ; return java.util.Properties ; }  <METHOD_END>
<METHOD_START> void ( ) { super( ConfigurationPhase . PARSE_CONFIGURATION ); }  <METHOD_END>
