<METHOD_START> @ Test public void void ( ) java.io.IOException { Message < java.lang.String > org.springframework.integration.groovy.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . build ( ) ; this . org.springframework.integration.groovy.MessageChannel . send ( org.springframework.integration.groovy.Message<java.lang.String> ) ; this . org.springframework.integration.groovy.MessageChannel . send ( org.springframework.integration.groovy.Message<java.lang.String> ) ; this . org.springframework.integration.groovy.ThreadPoolTaskScheduler . destroy ( ) ; assertNull ( this . org.springframework.integration.groovy.PollableChannel . receive ( NUMBER ) ) ; this . org.springframework.integration.groovy.ThreadPoolTaskScheduler . afterPropertiesSet ( ) ; Resource org.springframework.integration.groovy.Resource = new ClassPathResource ( STRING , this . java.lang.Class<? extends org.springframework.integration.groovy.GroovyControlBusIntegrationTests> ( ) ) ; ScriptSource org.springframework.integration.groovy.ScriptSource = new ResourceScriptSource ( org.springframework.integration.groovy.Resource ) ; Message < ? > org.springframework.integration.groovy.Message<?> = MessageBuilder . withPayload ( org.springframework.integration.groovy.ScriptSource . getScriptAsString ( ) ) . build ( ) ; this . org.springframework.integration.groovy.MessageChannel . send ( org.springframework.integration.groovy.Message<> ) ; assertNotNull ( this . org.springframework.integration.groovy.PollableChannel . receive ( NUMBER ) ) ; assertNotNull ( this . org.springframework.integration.groovy.PollableChannel . receive ( NUMBER ) ) ; }  <METHOD_END>
