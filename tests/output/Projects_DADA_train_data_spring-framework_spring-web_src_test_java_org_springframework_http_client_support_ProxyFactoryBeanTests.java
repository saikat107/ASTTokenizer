<METHOD_START> @ Before public void void ( ) { org.springframework.http.client.support.ProxyFactoryBean = new ProxyFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.http.client.support.ProxyFactoryBean . setType ( null ) ; org.springframework.http.client.support.ProxyFactoryBean . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.http.client.support.ProxyFactoryBean . setHostname ( STRING ) ; org.springframework.http.client.support.ProxyFactoryBean . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.http.client.support.ProxyFactoryBean . setHostname ( STRING ) ; org.springframework.http.client.support.ProxyFactoryBean . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.net.Proxy . java.net.Proxy.Type java.net.Proxy.Type = java.net.Proxy . java.net.Proxy.Type . java.net.Proxy.Type ; org.springframework.http.client.support.ProxyFactoryBean . setType ( java.net.Proxy.Type ) ; java.lang.String java.lang.String = STRING ; org.springframework.http.client.support.ProxyFactoryBean . setHostname ( java.lang.String ) ; int int = NUMBER ; org.springframework.http.client.support.ProxyFactoryBean . setPort ( int ) ; org.springframework.http.client.support.ProxyFactoryBean . afterPropertiesSet ( ) ; java.net.Proxy java.net.Proxy = org.springframework.http.client.support.ProxyFactoryBean . getObject ( ) ; assertEquals ( java.net.Proxy.Type , java.net.Proxy . java.net.Proxy.Type ( ) ) ; java.net.InetSocketAddress java.net.InetSocketAddress = ( java.net.InetSocketAddress ) java.net.Proxy . java.net.SocketAddress ( ) ; assertEquals ( java.lang.String , java.net.InetSocketAddress . java.lang.String ( ) ) ; assertEquals ( int , java.net.InetSocketAddress . int ( ) ) ; }  <METHOD_END>
