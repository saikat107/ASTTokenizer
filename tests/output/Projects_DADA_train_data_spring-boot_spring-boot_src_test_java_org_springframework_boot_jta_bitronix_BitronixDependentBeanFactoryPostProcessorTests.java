<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.boot.jta.bitronix.DefaultListableBeanFactory = spy ( new DefaultListableBeanFactory ( ) ) ; this . org.springframework.boot.jta.bitronix.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.jta.bitronix.DefaultListableBeanFactory ) ; this . org.springframework.boot.jta.bitronix.AnnotationConfigApplicationContext . register ( org.springframework.boot.jta.bitronix.BitronixDependentBeanFactoryPostProcessorTests.Config .class ) ; this . org.springframework.boot.jta.bitronix.AnnotationConfigApplicationContext . refresh ( ) ; java.lang.String java.lang.String = STRING ; verify ( org.springframework.boot.jta.bitronix.DefaultListableBeanFactory ) . registerDependentBean ( java.lang.String , STRING ) ; verify ( org.springframework.boot.jta.bitronix.DefaultListableBeanFactory ) . registerDependentBean ( java.lang.String , STRING ) ; this . org.springframework.boot.jta.bitronix.AnnotationConfigApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public javax.sql.DataSource javax.sql.DataSource ( ) { return mock ( javax.sql.DataSource .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.jta.bitronix.ConnectionFactory org.springframework.boot.jta.bitronix.ConnectionFactory ( ) { return mock ( ConnectionFactory .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.jta.bitronix.BitronixTransactionManager org.springframework.boot.jta.bitronix.BitronixTransactionManager ( ) { return mock ( BitronixTransactionManager .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public static org.springframework.boot.jta.bitronix.BitronixDependentBeanFactoryPostProcessor org.springframework.boot.jta.bitronix.BitronixDependentBeanFactoryPostProcessor ( ) { return new BitronixDependentBeanFactoryPostProcessor ( ) ; }  <METHOD_END>
