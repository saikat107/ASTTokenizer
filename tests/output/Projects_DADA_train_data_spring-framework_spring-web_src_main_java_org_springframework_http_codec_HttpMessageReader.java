<METHOD_START> java.util.List<org.springframework.http.codec.MediaType> < MediaType > java.util.List<org.springframework.http.codec.MediaType> ( )  <METHOD_END>
<METHOD_START> boolean boolean ( ResolvableType org.springframework.http.codec.ResolvableType , MediaType org.springframework.http.codec.MediaType );  <METHOD_END>
<METHOD_START> org.springframework.http.codec.Flux<T> < T > org.springframework.http.codec.Flux<T> ( ResolvableType org.springframework.http.codec.ResolvableType , ReactiveHttpInputMessage org.springframework.http.codec.ReactiveHttpInputMessage , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> );  <METHOD_END>
<METHOD_START> org.springframework.http.codec.Mono<T> < T > org.springframework.http.codec.Mono<T> ( ResolvableType org.springframework.http.codec.ResolvableType , ReactiveHttpInputMessage org.springframework.http.codec.ReactiveHttpInputMessage , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> );  <METHOD_END>
<METHOD_START> default org.springframework.http.codec.Flux<T> < T > org.springframework.http.codec.Flux<T> ( ResolvableType org.springframework.http.codec.ResolvableType , ResolvableType org.springframework.http.codec.ResolvableType , ServerHttpRequest org.springframework.http.codec.ServerHttpRequest , ServerHttpResponse org.springframework.http.codec.ServerHttpResponse , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { return org.springframework.http.codec.Flux<T> ( org.springframework.http.codec.ResolvableType , org.springframework.http.codec.ServerHttpRequest , java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> default org.springframework.http.codec.Mono<T> < T > org.springframework.http.codec.Mono<T> ( ResolvableType org.springframework.http.codec.ResolvableType , ResolvableType org.springframework.http.codec.ResolvableType , ServerHttpRequest org.springframework.http.codec.ServerHttpRequest , ServerHttpResponse org.springframework.http.codec.ServerHttpResponse , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { return org.springframework.http.codec.Mono<T> ( org.springframework.http.codec.ResolvableType , org.springframework.http.codec.ServerHttpRequest , java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
