<METHOD_START> public void ( java.lang.String java.lang.String , RedisConnectionFactory org.springframework.integration.redis.outbound.RedisConnectionFactory ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.integration.redis.outbound.RedisConnectionFactory , STRING ) ; this . org.springframework.integration.redis.outbound.RedisTemplate<java.lang.String,java.lang.Object> = new RedisTemplate < java.lang.String , java.lang.Object > ( ) ; this . org.springframework.integration.redis.outbound.RedisTemplate<java.lang.String,java.lang.Object> . setConnectionFactory ( org.springframework.integration.redis.outbound.RedisConnectionFactory ) ; this . org.springframework.integration.redis.outbound.RedisTemplate<java.lang.String,java.lang.Object> . setEnableDefaultSerializer ( false ) ; this . org.springframework.integration.redis.outbound.RedisTemplate<java.lang.String,java.lang.Object> . setKeySerializer ( new StringRedisSerializer ( ) ) ; this . org.springframework.integration.redis.outbound.RedisTemplate<java.lang.String,java.lang.Object> . afterPropertiesSet ( ) ; this . org.springframework.integration.redis.outbound.BoundListOperations<java.lang.String,java.lang.Object> = this . org.springframework.integration.redis.outbound.RedisTemplate<java.lang.String,java.lang.Object> . boundListOps ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( RedisSerializer < ? > org.springframework.integration.redis.outbound.RedisSerializer<?> ) { Assert . notNull ( org.springframework.integration.redis.outbound.RedisSerializer<> , STRING ) ; this . org.springframework.integration.redis.outbound.RedisSerializer<?> = org.springframework.integration.redis.outbound.RedisSerializer<> ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.redis.outbound.Message<?> ) { java.lang.Object java.lang.Object = org.springframework.integration.redis.outbound.Message<> ; if ( this . boolean ) { java.lang.Object = org.springframework.integration.redis.outbound.Message<> . getPayload ( ) ; } if ( ! ( java.lang.Object instanceof byte [] ) ) { if ( java.lang.Object instanceof java.lang.String && ! this . boolean ) { java.lang.Object = org.springframework.integration.redis.outbound.RedisSerializer<java.lang.String> . serialize ( ( java.lang.String ) java.lang.Object ) ; } else { java.lang.Object = ( ( RedisSerializer < java.lang.Object > ) this . org.springframework.integration.redis.outbound.RedisSerializer<> ) . serialize ( java.lang.Object ) ; } } java.lang.String java.lang.String = org.springframework.integration.redis.outbound.IdGenerator . generateId ( ) . toString ( ) ; byte [] byte[] = java.lang.String . byte[] ( ) ; this . org.springframework.integration.redis.outbound.BoundListOperations<java.lang.String,java.lang.Object> . leftPush ( byte[] ) ; this . org.springframework.integration.redis.outbound.RedisTemplate<java.lang.String,java.lang.Object> . boundListOps ( java.lang.String ) . leftPush ( java.lang.Object ) ; BoundListOperations < java.lang.String , java.lang.Object > org.springframework.integration.redis.outbound.BoundListOperations<java.lang.String,java.lang.Object> = this . org.springframework.integration.redis.outbound.RedisTemplate<java.lang.String,java.lang.Object> . boundListOps ( java.lang.String + java.lang.String ) ; byte [] byte[] = ( byte [] ) org.springframework.integration.redis.outbound.BoundListOperations<java.lang.String,java.lang.Object> . rightPop ( this . int , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) ; if ( byte[] != null && byte[] . int > NUMBER ) { java.lang.Object java.lang.Object = this . org.springframework.integration.redis.outbound.RedisSerializer<> . deserialize ( byte[] ) ; if ( java.lang.Object == null ) { return null ; } if ( this . boolean ) { return getMessageBuilderFactory ( ) . withPayload ( java.lang.Object ) ; } else { return java.lang.Object ; } } return null ; }  <METHOD_END>
