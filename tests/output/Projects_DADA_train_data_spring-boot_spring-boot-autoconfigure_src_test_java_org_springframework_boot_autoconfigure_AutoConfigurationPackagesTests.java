<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.AutoConfigurationPackagesTests.ConfigWithRegistrar .class ) ; assertThat ( AutoConfigurationPackages . get ( org.springframework.boot.autoconfigure.AnnotationConfigApplicationContext . getBeanFactory ( ) ) ) . containsExactly ( java.lang.Class<? extends org.springframework.boot.autoconfigure.AutoConfigurationPackagesTests> ( ) . java.lang.Package ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.AutoConfigurationPackagesTests.EmptyConfig .class ) ; this . org.springframework.boot.autoconfigure.ExpectedException . expect ( java.lang.IllegalStateException .class ) ; this . org.springframework.boot.autoconfigure.ExpectedException . expectMessage ( STRING ) ; AutoConfigurationPackages . get ( org.springframework.boot.autoconfigure.AnnotationConfigApplicationContext . getBeanFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( FirstConfiguration .class , SecondConfiguration .class ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = AutoConfigurationPackages . get ( org.springframework.boot.autoconfigure.AnnotationConfigApplicationContext . getBeanFactory ( ) ) ; java.lang.Package java.lang.Package = FirstConfiguration .class . java.lang.Package ( ) ; java.lang.Package java.lang.Package = SecondConfiguration .class . java.lang.Package ( ) ; assertThat ( java.util.List<java.lang.String> ) . containsOnly ( java.lang.Package . java.lang.String ( ) , java.lang.Package . java.lang.String ( ) ) ; }  <METHOD_END>
