<METHOD_START> @ Before public void void ( ) { this . org.springframework.web.reactive.result.view.GenericApplicationContext = new GenericApplicationContext ( ) ; this . org.springframework.web.reactive.result.view.GenericApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RequestContext org.springframework.web.reactive.result.view.RequestContext = new RequestContext ( this . org.springframework.web.reactive.result.view.MockServerWebExchange , this . java.util.Map<java.lang.String,java.lang.Object> , this . org.springframework.web.reactive.result.view.GenericApplicationContext ) ; assertEquals ( STRING , org.springframework.web.reactive.result.view.RequestContext . getContextUrl ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RequestContext org.springframework.web.reactive.result.view.RequestContext = new RequestContext ( this . org.springframework.web.reactive.result.view.MockServerWebExchange , this . java.util.Map<java.lang.String,java.lang.Object> , this . org.springframework.web.reactive.result.view.GenericApplicationContext ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.web.reactive.result.view.RequestContext . getContextUrl ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RequestContext org.springframework.web.reactive.result.view.RequestContext = new RequestContext ( this . org.springframework.web.reactive.result.view.MockServerWebExchange , this . java.util.Map<java.lang.String,java.lang.Object> , this . org.springframework.web.reactive.result.view.GenericApplicationContext ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.web.reactive.result.view.RequestContext . getContextUrl ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ) ; }  <METHOD_END>
