<METHOD_START> @ java.lang.Override public void void ( ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.beans.factory.xml.BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.beans.factory.xml.ParserContext ) { org.springframework.beans.factory.xml.ParserContext . getReaderContext ( ) . error ( STRING + java.lang.Class<? extends org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler> ( ) . java.lang.String ( ) + STRING , org.w3c.dom.Element ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.beans.factory.xml.BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Node org.w3c.dom.Node , BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder , ParserContext org.springframework.beans.factory.xml.ParserContext ) { if ( org.w3c.dom.Node instanceof org.w3c.dom.Attr ) { org.w3c.dom.Attr org.w3c.dom.Attr = ( org.w3c.dom.Attr ) org.w3c.dom.Node ; java.lang.String java.lang.String = org.springframework.beans.factory.xml.ParserContext . getDelegate ( ) . getLocalName ( org.w3c.dom.Attr ) ; java.lang.String java.lang.String = org.w3c.dom.Attr . java.lang.String ( ) ; MutablePropertyValues org.springframework.beans.factory.xml.MutablePropertyValues = org.springframework.beans.factory.xml.BeanDefinitionHolder . getBeanDefinition ( ) . getPropertyValues ( ) ; if ( org.springframework.beans.factory.xml.MutablePropertyValues . contains ( java.lang.String ) ) { org.springframework.beans.factory.xml.ParserContext . getReaderContext ( ) . error ( STRING + java.lang.String + STRING + STRING , org.w3c.dom.Attr ) ; } if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - java.lang.String . int ( ) ) ; org.springframework.beans.factory.xml.MutablePropertyValues . add ( Conventions . attributeNameToPropertyName ( java.lang.String ) , new RuntimeBeanReference ( java.lang.String ) ) ; } else { org.springframework.beans.factory.xml.MutablePropertyValues . add ( Conventions . attributeNameToPropertyName ( java.lang.String ) , java.lang.String ) ; } } return org.springframework.beans.factory.xml.BeanDefinitionHolder ; }  <METHOD_END>
