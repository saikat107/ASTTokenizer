<METHOD_START> @ Test public void void ( ) { RepositoryMetadata org.springframework.data.repository.config.RepositoryMetadata = AbstractRepositoryMetadata . getMetadata ( org.springframework.data.repository.config.RepositoryConfigurationExtensionSupportUnitTests.PlainTypeRepository .class ) ; assertThat ( org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport . isStrictRepositoryCandidate ( org.springframework.data.repository.config.RepositoryMetadata ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryMetadata org.springframework.data.repository.config.RepositoryMetadata = AbstractRepositoryMetadata . getMetadata ( org.springframework.data.repository.config.RepositoryConfigurationExtensionSupportUnitTests.AnnotatedTypeRepository .class ) ; assertThat ( org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport . isStrictRepositoryCandidate ( org.springframework.data.repository.config.RepositoryMetadata ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryMetadata org.springframework.data.repository.config.RepositoryMetadata = AbstractRepositoryMetadata . getMetadata ( org.springframework.data.repository.config.RepositoryConfigurationExtensionSupportUnitTests.ExtendingInterface .class ) ; assertThat ( org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport . isStrictRepositoryCandidate ( org.springframework.data.repository.config.RepositoryMetadata ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return RepositoryFactorySupport .class . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>> < java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > > java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>> ( ) { return java.util.Collections . java.util.Set<java.lang.Class<org.springframework.data.repository.config.Primary>> ( Primary .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Collection<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Collection<java.lang.Class<?>> ( ) { return java.util.Collections . java.util.Set<java.lang.Class<?>> ( org.springframework.data.repository.config.RepositoryConfigurationExtensionSupportUnitTests.StoreInterface .class ) ; }  <METHOD_END>
