<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.config.AnnotationConfigApplicationContext org.springframework.statemachine.config.AnnotationConfigApplicationContext ( ) { return new AnnotationConfigApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.config.MachineTypedTests.Config1 .class , org.springframework.statemachine.config.MachineTypedTests.Config2 .class , org.springframework.statemachine.config.MachineTypedTests.MyBean1Config .class ) ; context . refresh ( ) ; org.springframework.statemachine.config.MachineTypedTests.MyBean1 org.springframework.statemachine.config.MachineTypedTests.MyBean1 = context . getBean ( org.springframework.statemachine.config.MachineTypedTests.MyBean1 .class ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean1 . org.springframework.statemachine.config.StateMachine<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> , notNullValue ( ) ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean1 . org.springframework.statemachine.config.StateMachine<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> , notNullValue ( ) ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean1 . org.springframework.statemachine.config.StateMachine<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> , not ( sameInstance ( org.springframework.statemachine.config.MachineTypedTests.MyBean1 . org.springframework.statemachine.config.StateMachine<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.config.MachineTypedTests.Config1 .class , org.springframework.statemachine.config.MachineTypedTests.Config2 .class , org.springframework.statemachine.config.MachineTypedTests.MyBean2Config .class ) ; context . refresh ( ) ; org.springframework.statemachine.config.MachineTypedTests.MyBean2 org.springframework.statemachine.config.MachineTypedTests.MyBean2 = context . getBean ( org.springframework.statemachine.config.MachineTypedTests.MyBean2 .class ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean2 . org.springframework.statemachine.config.StateMachine<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> , notNullValue ( ) ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean2 . org.springframework.statemachine.config.StateMachine<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> , notNullValue ( ) ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean2 . org.springframework.statemachine.config.StateMachine<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> , not ( sameInstance ( org.springframework.statemachine.config.MachineTypedTests.MyBean2 . org.springframework.statemachine.config.StateMachine<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.config.MachineTypedTests.Config3 .class , org.springframework.statemachine.config.MachineTypedTests.Config4 .class , org.springframework.statemachine.config.MachineTypedTests.MyBean3Config .class ) ; context . refresh ( ) ; org.springframework.statemachine.config.MachineTypedTests.MyBean3 org.springframework.statemachine.config.MachineTypedTests.MyBean3 = context . getBean ( org.springframework.statemachine.config.MachineTypedTests.MyBean3 .class ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean3 . org.springframework.statemachine.config.StateMachineFactory<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> , notNullValue ( ) ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean3 . org.springframework.statemachine.config.StateMachineFactory<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> , notNullValue ( ) ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean3 . org.springframework.statemachine.config.StateMachineFactory<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> , not ( sameInstance ( org.springframework.statemachine.config.MachineTypedTests.MyBean3 . org.springframework.statemachine.config.StateMachineFactory<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.config.MachineTypedTests.Config3 .class , org.springframework.statemachine.config.MachineTypedTests.Config4 .class , org.springframework.statemachine.config.MachineTypedTests.MyBean4Config .class ) ; context . refresh ( ) ; org.springframework.statemachine.config.MachineTypedTests.MyBean4 org.springframework.statemachine.config.MachineTypedTests.MyBean4 = context . getBean ( org.springframework.statemachine.config.MachineTypedTests.MyBean4 .class ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean4 . org.springframework.statemachine.config.StateMachineFactory<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> , notNullValue ( ) ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean4 . org.springframework.statemachine.config.StateMachineFactory<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> , notNullValue ( ) ) ; assertThat ( org.springframework.statemachine.config.MachineTypedTests.MyBean4 . org.springframework.statemachine.config.StateMachineFactory<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> , not ( sameInstance ( org.springframework.statemachine.config.MachineTypedTests.MyBean4 . org.springframework.statemachine.config.StateMachineFactory<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.config.MachineTypedTests.MyBean1 org.springframework.statemachine.config.MachineTypedTests.MyBean1 ( ) { return new org.springframework.statemachine.config.MachineTypedTests.MyBean1 ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.config.MachineTypedTests.MyBean2 org.springframework.statemachine.config.MachineTypedTests.MyBean2 ( ) { return new org.springframework.statemachine.config.MachineTypedTests.MyBean2 ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.config.MachineTypedTests.MyBean3 org.springframework.statemachine.config.MachineTypedTests.MyBean3 ( ) { return new org.springframework.statemachine.config.MachineTypedTests.MyBean3 ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.config.MachineTypedTests.MyBean4 org.springframework.statemachine.config.MachineTypedTests.MyBean4 ( ) { return new org.springframework.statemachine.config.MachineTypedTests.MyBean4 ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 , org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1 > org.springframework.statemachine.config.StateMachineStateConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> ) throws java.lang.Exception { org.springframework.statemachine.config.StateMachineStateConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> . withStates ( ) . initial ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 ) . state ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 , org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1 > org.springframework.statemachine.config.StateMachineTransitionConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> ) throws java.lang.Exception { org.springframework.statemachine.config.StateMachineTransitionConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> . withExternal ( ) . source ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 ) . target ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 ) . event ( org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1 . org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1 ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 , org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2 > org.springframework.statemachine.config.StateMachineStateConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> ) throws java.lang.Exception { org.springframework.statemachine.config.StateMachineStateConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> . withStates ( ) . initial ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 ) . state ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 , org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2 > org.springframework.statemachine.config.StateMachineTransitionConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> ) throws java.lang.Exception { org.springframework.statemachine.config.StateMachineTransitionConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> . withExternal ( ) . source ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 ) . target ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 ) . event ( org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2 . org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2 ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 , org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1 > org.springframework.statemachine.config.StateMachineStateConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> ) throws java.lang.Exception { org.springframework.statemachine.config.StateMachineStateConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> . withStates ( ) . initial ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 ) . state ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 , org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1 > org.springframework.statemachine.config.StateMachineTransitionConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> ) throws java.lang.Exception { org.springframework.statemachine.config.StateMachineTransitionConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates1,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1> . withExternal ( ) . source ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 ) . target ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates1 ) . event ( org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1 . org.springframework.statemachine.config.MachineTypedTests.MyTestEvents1 ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 , org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2 > org.springframework.statemachine.config.StateMachineStateConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> ) throws java.lang.Exception { org.springframework.statemachine.config.StateMachineStateConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> . withStates ( ) . initial ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 ) . state ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 , org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2 > org.springframework.statemachine.config.StateMachineTransitionConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> ) throws java.lang.Exception { org.springframework.statemachine.config.StateMachineTransitionConfigurer<org.springframework.statemachine.config.MachineTypedTests.MyTestStates2,org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2> . withExternal ( ) . source ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 ) . target ( org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 . org.springframework.statemachine.config.MachineTypedTests.MyTestStates2 ) . event ( org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2 . org.springframework.statemachine.config.MachineTypedTests.MyTestEvents2 ) ; }  <METHOD_END>
