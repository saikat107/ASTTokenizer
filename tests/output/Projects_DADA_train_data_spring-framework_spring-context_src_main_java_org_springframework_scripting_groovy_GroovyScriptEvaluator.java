<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> public void void ( CompilerConfiguration org.springframework.scripting.groovy.CompilerConfiguration ) { this . org.springframework.scripting.groovy.CompilerConfiguration = ( org.springframework.scripting.groovy.CompilerConfiguration != null ? org.springframework.scripting.groovy.CompilerConfiguration : new CompilerConfiguration ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.scripting.groovy.CompilerConfiguration org.springframework.scripting.groovy.CompilerConfiguration ( ) { return this . org.springframework.scripting.groovy.CompilerConfiguration ; }  <METHOD_END>
<METHOD_START> public void void ( CompilationCustomizer ... org.springframework.scripting.groovy.CompilationCustomizer[] ) { this . org.springframework.scripting.groovy.CompilerConfiguration . addCompilationCustomizers ( org.springframework.scripting.groovy.CompilationCustomizer[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ScriptSource org.springframework.scripting.groovy.ScriptSource ) { return java.lang.Object ( org.springframework.scripting.groovy.ScriptSource , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ScriptSource org.springframework.scripting.groovy.ScriptSource , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { GroovyShell org.springframework.scripting.groovy.GroovyShell = new GroovyShell ( this . java.lang.ClassLoader , new Binding ( java.util.Map<java.lang.String,java.lang.Object> ) , this . org.springframework.scripting.groovy.CompilerConfiguration ) ; try { java.lang.String java.lang.String = ( org.springframework.scripting.groovy.ScriptSource instanceof ResourceScriptSource ? ( ( ResourceScriptSource ) org.springframework.scripting.groovy.ScriptSource ) . getResource ( ) . getFilename ( ) : null ) ; if ( java.lang.String != null ) { return org.springframework.scripting.groovy.GroovyShell . evaluate ( org.springframework.scripting.groovy.ScriptSource . getScriptAsString ( ) , java.lang.String ) ; } else { return org.springframework.scripting.groovy.GroovyShell . evaluate ( org.springframework.scripting.groovy.ScriptSource . getScriptAsString ( ) ) ; } } catch ( java.io.IOException java.io.IOException ) { throw new ScriptCompilationException ( org.springframework.scripting.groovy.ScriptSource , STRING , java.io.IOException ) ; } catch ( GroovyRuntimeException org.springframework.scripting.groovy.GroovyRuntimeException ) { throw new ScriptCompilationException ( org.springframework.scripting.groovy.ScriptSource , org.springframework.scripting.groovy.GroovyRuntimeException ) ; } }  <METHOD_END>
