<METHOD_START> public void ( WorkManager org.springframework.jca.support.WorkManager ) { this . org.springframework.jca.support.WorkManager = org.springframework.jca.support.WorkManager ; }  <METHOD_END>
<METHOD_START> public void ( WorkManager org.springframework.jca.support.WorkManager , XATerminator org.springframework.jca.support.XATerminator ) { this . org.springframework.jca.support.WorkManager = org.springframework.jca.support.WorkManager ; this . org.springframework.jca.support.XATerminator = org.springframework.jca.support.XATerminator ; }  <METHOD_END>
<METHOD_START> public void ( WorkManager org.springframework.jca.support.WorkManager , XATerminator org.springframework.jca.support.XATerminator , TransactionSynchronizationRegistry org.springframework.jca.support.TransactionSynchronizationRegistry ) { this . org.springframework.jca.support.WorkManager = org.springframework.jca.support.WorkManager ; this . org.springframework.jca.support.XATerminator = org.springframework.jca.support.XATerminator ; this . org.springframework.jca.support.TransactionSynchronizationRegistry = org.springframework.jca.support.TransactionSynchronizationRegistry ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jca.support.WorkManager org.springframework.jca.support.WorkManager ( ) { if ( this . org.springframework.jca.support.WorkManager == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } return this . org.springframework.jca.support.WorkManager ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jca.support.XATerminator org.springframework.jca.support.XATerminator ( ) { return this . org.springframework.jca.support.XATerminator ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Timer java.util.Timer ( ) org.springframework.jca.support.UnavailableException { return new java.util.Timer ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<? extends org.springframework.jca.support.WorkContext> < ? extends WorkContext > java.lang.Class<? extends org.springframework.jca.support.WorkContext> ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jca.support.TransactionSynchronizationRegistry org.springframework.jca.support.TransactionSynchronizationRegistry ( ) { return this . org.springframework.jca.support.TransactionSynchronizationRegistry ; }  <METHOD_END>
