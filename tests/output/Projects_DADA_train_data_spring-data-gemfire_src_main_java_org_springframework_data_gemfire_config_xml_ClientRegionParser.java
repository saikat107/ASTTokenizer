<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return ClientRegionFactoryBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , boolean boolean ) { validateDataPolicyShortcutAttributesMutualExclusion ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext ) ; java.lang.String java.lang.String = ParsingUtils . resolveCacheReference ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ; if ( ! boolean ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; } ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; void ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( RegionAttributesFactoryBean .class ) ; mergeRegionTemplateAttributes ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . parseOptionalRegionAttributes ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . parseStatistics ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . parseExpiration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . parseEviction ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . parseCompressor ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElements ( org.w3c.dom.Element ) ; ManagedList < java.lang.Object > org.springframework.data.gemfire.config.xml.ManagedList<java.lang.Object> = new ManagedList < java.lang.Object > ( ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( ) ; if ( STRING . boolean ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , ParsingUtils . parseRefOrNestedBeanDeclaration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ) ; } else if ( STRING . boolean ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , ParsingUtils . parseRefOrNestedBeanDeclaration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ) ; } else if ( STRING . boolean ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , ParsingUtils . parseRefOrNestedBeanDeclaration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ) ; } else if ( STRING . boolean ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.ManagedList<java.lang.Object> . add ( java.lang.Object ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext ) ) ; } else if ( STRING . boolean ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.ManagedList<java.lang.Object> . add ( java.lang.Object ( org.w3c.dom.Element ) ) ; } } if ( ! org.springframework.data.gemfire.config.xml.ManagedList<java.lang.Object> . isEmpty ( ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.data.gemfire.config.xml.ManagedList<java.lang.Object> ) ; } if ( ! boolean ) { parseSubRegions ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addDependsOn ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) { ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext ) { BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( KeyInterest .class ) ; org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( ParsingUtils . parseRefOrNestedBeanDeclaration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ) ; void ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; return org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element ) { BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( RegexInterest .class ) ; org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ; void ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; return org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
