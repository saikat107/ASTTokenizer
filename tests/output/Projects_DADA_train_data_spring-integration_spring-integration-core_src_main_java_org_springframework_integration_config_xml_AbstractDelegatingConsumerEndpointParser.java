<METHOD_START> @ java.lang.Override protected final org.springframework.integration.config.xml.BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ParserContext . extractSource ( org.w3c.dom.Element ) ; BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( this . java.lang.String ( ) ) ; BeanComponentDefinition org.springframework.integration.config.xml.BeanComponentDefinition = IntegrationNamespaceUtils . parseInnerHandlerDefinition ( org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( REF_ATTRIBUTE ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( EXPRESSION_ATTRIBUTE ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; if ( org.springframework.integration.config.xml.BeanComponentDefinition != null ) { if ( boolean || boolean || org.w3c.dom.Element != null ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + IntegrationNamespaceUtils . createElementDescription ( org.w3c.dom.Element ) + STRING , java.lang.Object ) ; return null ; } org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.config.xml.BeanComponentDefinition ) ; } else if ( org.w3c.dom.Element != null ) { if ( boolean || boolean || org.w3c.dom.Element != null ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + IntegrationNamespaceUtils . createElementDescription ( org.w3c.dom.Element ) + STRING , java.lang.Object ) ; return null ; } BeanDefinition org.springframework.integration.config.xml.BeanDefinition = org.springframework.integration.config.xml.ParserContext . getDelegate ( ) . parseCustomElement ( org.w3c.dom.Element , org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.config.xml.BeanDefinition ) ; } else if ( org.w3c.dom.Element != null ) { if ( boolean || boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + IntegrationNamespaceUtils . createElementDescription ( org.w3c.dom.Element ) + STRING , java.lang.Object ) ; return null ; } BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( DynamicExpression .class ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; } else if ( boolean && boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + IntegrationNamespaceUtils . createElementDescription ( org.w3c.dom.Element ) + STRING , java.lang.Object ) ; return null ; } else if ( boolean ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } else if ( boolean ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } else if ( ! this . boolean ( ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + STRING + IntegrationNamespaceUtils . createElementDescription ( org.w3c.dom.Element ) + STRING , java.lang.Object ) ; return null ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( METHOD_ATTRIBUTE ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( boolean || org.w3c.dom.Element != null ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + IntegrationNamespaceUtils . createElementDescription ( org.w3c.dom.Element ) + STRING , java.lang.Object ) ; } if ( boolean || org.springframework.integration.config.xml.BeanComponentDefinition != null ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } else { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + STRING + IntegrationNamespaceUtils . createElementDescription ( org.w3c.dom.Element ) + STRING , java.lang.Object ) ; } } IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; this . void ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; return org.springframework.integration.config.xml.BeanDefinitionBuilder ; }  <METHOD_END>
<METHOD_START> void void ( BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) {	}  <METHOD_END>
<METHOD_START> abstract boolean boolean ( )  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
