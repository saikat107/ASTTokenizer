<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected void void ( ) { this . org.springframework.web.servlet.tags.form.OptionTag = new OptionTag ( ) { @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; } } ; this . org.springframework.web.servlet.tags.form.SelectTag = new SelectTag ( ) { @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } } ; this . org.springframework.web.servlet.tags.form.OptionTag . setParent ( this . org.springframework.web.servlet.tags.form.SelectTag ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setPageContext ( getPageContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , new BindStatus ( getRequestContext ( ) , java.lang.String , false ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( STRING ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setLabel ( STRING ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setDisabled ( true ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , new BindStatus ( getRequestContext ( ) , java.lang.String , false ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( STRING ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setLabel ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , new BindStatus ( getRequestContext ( ) , java.lang.String , false ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( STRING ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setLabel ( STRING ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , java.lang.String , java.lang.String ) ; assertContainsAttribute ( java.lang.String , java.lang.String , java.lang.String ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , new BindStatus ( getRequestContext ( ) , java.lang.String , false ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setId ( STRING ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( STRING ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setLabel ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , new BindStatus ( getRequestContext ( ) , java.lang.String , false ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( STRING ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setCssClass ( STRING ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setOnclick ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.OptionTag . setParent ( null ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( STRING ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setLabel ( STRING ) ; try { org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; fail ( STRING ) ; } catch ( java.lang.IllegalStateException java.lang.IllegalStateException ) { } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; BindStatus org.springframework.web.servlet.tags.form.BindStatus = new BindStatus ( getRequestContext ( ) , java.lang.String , false ) { @ java.lang.Override public java.beans.PropertyEditor java.beans.PropertyEditor ( ) { return new StringArrayPropertyEditor ( ) ; } } ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , org.springframework.web.servlet.tags.form.BindStatus ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setLabel ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.beans.PropertyEditor java.beans.PropertyEditor ( ) { return new StringArrayPropertyEditor ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.beans.PropertyEditor java.beans.PropertyEditor = new org.springframework.web.servlet.tags.form.OptionTagTests.TestBeanPropertyEditor ( ) ; java.beans.PropertyEditor . void ( new TestBean ( STRING ) ) ; java.lang.String java.lang.String = STRING ; BindStatus org.springframework.web.servlet.tags.form.BindStatus = new BindStatus ( getRequestContext ( ) , java.lang.String , false ) { @ java.lang.Override public java.beans.PropertyEditor java.beans.PropertyEditor ( ) { return java.beans.PropertyEditor ; } } ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , org.springframework.web.servlet.tags.form.BindStatus ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.beans.PropertyEditor java.beans.PropertyEditor ( ) { return java.beans.PropertyEditor ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , new BindStatus ( getRequestContext ( ) , java.lang.String , false ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( new java.lang.Float ( NUMBER ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setLabel ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , new BindStatus ( getRequestContext ( ) , java.lang.String , false ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( new java.lang.Float ( NUMBER ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setLabel ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.beans.PropertyEditor java.beans.PropertyEditor = new SimpleFloatEditor ( ) ; java.beans.PropertyEditor . void ( new java.lang.Float ( STRING ) ) ; java.lang.String java.lang.String = STRING ; BindStatus org.springframework.web.servlet.tags.form.BindStatus = new BindStatus ( getRequestContext ( ) , java.lang.String , false ) { @ java.lang.Override public java.beans.PropertyEditor java.beans.PropertyEditor ( ) { return java.beans.PropertyEditor ; } } ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , org.springframework.web.servlet.tags.form.BindStatus ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( new java.lang.Float ( NUMBER ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setLabel ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.beans.PropertyEditor java.beans.PropertyEditor ( ) { return java.beans.PropertyEditor ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.beans.PropertyEditor java.beans.PropertyEditor = new SimpleFloatEditor ( ) ; java.lang.String java.lang.String = STRING ; BindStatus org.springframework.web.servlet.tags.form.BindStatus = new BindStatus ( getRequestContext ( ) , java.lang.String , false ) { @ java.lang.Override public java.beans.PropertyEditor java.beans.PropertyEditor ( ) { return java.beans.PropertyEditor ; } } ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , org.springframework.web.servlet.tags.form.BindStatus ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( new java.lang.Float ( NUMBER ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setLabel ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; assertBlockTagContains ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.beans.PropertyEditor java.beans.PropertyEditor ( ) { return java.beans.PropertyEditor ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; BindStatus org.springframework.web.servlet.tags.form.BindStatus = new BindStatus ( getRequestContext ( ) , java.lang.String , false ) ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , org.springframework.web.servlet.tags.form.BindStatus ) ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setBodyContent ( new MockBodyContent ( java.lang.String , getWriter ( ) ) ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertBlockTagContains ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; BindStatus org.springframework.web.servlet.tags.form.BindStatus = new BindStatus ( getRequestContext ( ) , java.lang.String , false ) ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , org.springframework.web.servlet.tags.form.BindStatus ) ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setBodyContent ( new MockBodyContent ( java.lang.String , getWriter ( ) ) ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertBlockTagContains ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; BindStatus org.springframework.web.servlet.tags.form.BindStatus = new BindStatus ( getRequestContext ( ) , java.lang.String , false ) ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , org.springframework.web.servlet.tags.form.BindStatus ) ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( java.lang.String ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setBodyContent ( new MockBodyContent ( java.lang.String , getWriter ( ) ) ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertBlockTagContains ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; BindStatus org.springframework.web.servlet.tags.form.BindStatus = new BindStatus ( getRequestContext ( ) , java.lang.String , false ) { @ java.lang.Override public java.beans.PropertyEditor java.beans.PropertyEditor ( ) { return new org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariantEditor ( ) ; } } ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , org.springframework.web.servlet.tags.form.BindStatus ) ; org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant = new org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant ( STRING , STRING ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant ) ; int int = this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; assertEquals ( BodyTag . EVAL_BODY_BUFFERED , int ) ; assertEquals ( org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant , getPageContext ( ) . getAttribute ( STRING ) ) ; assertEquals ( org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant . java.lang.String ( ) , getPageContext ( ) . getAttribute ( STRING ) ) ; int = this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.beans.PropertyEditor java.beans.PropertyEditor ( ) { return new org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariantEditor ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanPropertyBindingResult org.springframework.web.servlet.tags.form.BeanPropertyBindingResult = new BeanPropertyBindingResult ( new TestBean ( ) , STRING ) ; org.springframework.web.servlet.tags.form.BeanPropertyBindingResult . getPropertyAccessor ( ) . registerCustomEditor ( TestBean .class , STRING , new org.springframework.web.servlet.tags.form.OptionTagTests.FriendEditor ( ) ) ; exposeBindingResult ( org.springframework.web.servlet.tags.form.BeanPropertyBindingResult ) ; BindStatus org.springframework.web.servlet.tags.form.BindStatus = new BindStatus ( getRequestContext ( ) , STRING , false ) ; getPageContext ( ) . setAttribute ( SelectTag . LIST_VALUE_PAGE_ATTRIBUTE , org.springframework.web.servlet.tags.form.BindStatus ) ; this . org.springframework.web.servlet.tags.form.OptionTag . setValue ( new TestBean ( STRING ) ) ; this . org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; this . org.springframework.web.servlet.tags.form.OptionTag . doEndTag ( ) ; assertEquals ( STRING , getOutput ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { try { org.springframework.web.servlet.tags.form.OptionTag . setParent ( null ) ; org.springframework.web.servlet.tags.form.OptionTag . setValue ( STRING ) ; org.springframework.web.servlet.tags.form.OptionTag . doStartTag ( ) ; fail ( STRING ) ; } catch ( java.lang.IllegalStateException java.lang.IllegalStateException ) { } }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( MockHttpServletRequest org.springframework.web.servlet.tags.form.MockHttpServletRequest ) { TestBean org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; org.springframework.web.servlet.tags.form.TestBean . setFavouriteColour ( Colour . GREEN ) ; org.springframework.web.servlet.tags.form.TestBean . setStringArray ( java.lang.String[] ) ; org.springframework.web.servlet.tags.form.TestBean . setSpouse ( new TestBean ( STRING ) ) ; org.springframework.web.servlet.tags.form.TestBean . setSomeNumber ( new java.lang.Float ( STRING ) ) ; java.util.List java.util.List = new java.util.ArrayList ( ) ; java.util.List . boolean ( new TestBean ( STRING ) ) ; java.util.List . boolean ( new TestBean ( STRING ) ) ; org.springframework.web.servlet.tags.form.TestBean . setFriends ( java.util.List ) ; org.springframework.web.servlet.tags.form.MockHttpServletRequest . setAttribute ( STRING , org.springframework.web.servlet.tags.form.TestBean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { void ( new TestBean ( java.lang.String + STRING , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( ( TestBean ) java.lang.Object ( ) ) . getName ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . void ( java.lang.String ) ; this . void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { if ( this . java.lang.String != null ) { return this . java.lang.String + STRING + this . java.lang.String ; } else { return java.lang.String ; } }  <METHOD_END>
<METHOD_START> public static org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant ( java.lang.String java.lang.String ) { java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING , NUMBER ) ; java.lang.String java.lang.String = java.lang.String[] [ NUMBER ] ; java.lang.String java.lang.String = java.lang.String[] . int > NUMBER ? java.lang.String[] [ NUMBER ] : null ; return new org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant ) { org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant = ( org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant ) java.lang.Object ; return this . java.lang.String ( ) . boolean ( org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant . java.lang.String ( ) ) ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.lang.String ( ) . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { void ( org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant . org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant = ( org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant ) java.lang.Object ( ) ; return org.springframework.web.servlet.tags.form.OptionTagTests.RulesVariant . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { void ( new TestBean ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( ( TestBean ) java.lang.Object ( ) ) . getName ( ) ; }  <METHOD_END>
