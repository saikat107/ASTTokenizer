<METHOD_START> protected void void ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) { void ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) ; }  <METHOD_END>
<METHOD_START> protected void void ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ... org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person[] ) { java.util.List<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> < org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > java.util.List<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> = org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PeopleService . java.util.List<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) ; assertThat ( java.util.List<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ) . isNotNull ( ) ; assertThat ( java.util.List<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> . int ( ) ) . isEqualTo ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person[] . int ) ; assertThat ( java.util.List<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ) . contains ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person[] ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( java.lang.String java.lang.String , java.lang.String java.lang.String , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) { return org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( IdentifierSequence . nextId ( ) , java.lang.String , java.lang.String , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( java.lang.Long java.lang.Long , java.lang.String java.lang.String , java.lang.String java.lang.String , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) { org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person = org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person . newPerson ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department , java.lang.String , java.lang.String ) ; org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person . setId ( java.lang.Long ) ; return org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ) { peopleRegion . put ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person . getId ( ) , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ) ; return org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) { org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person = org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( STRING , STRING , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department . org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) ) ; org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person = org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( STRING , STRING , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department . org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) ) ; assertThat ( peopleRegion . containsValue ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ) ) . isTrue ( ) ; assertThat ( peopleRegion . containsValue ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department . org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) ; assertThat ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PeopleService . boolean ( ) ) . isTrue ( ) ; org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person . setDepartment ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department . org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) ; org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PeopleService . org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ) ; void ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department . org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ) ; assertThat ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PeopleService . boolean ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person . setDepartment ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department . org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) ; org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PeopleService . org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ) ; void ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department . org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ) ; assertThat ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PeopleService . boolean ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.data.gemfire.cache.GemfireCacheManager org.springframework.data.gemfire.cache.GemfireCacheManager ( GemFireCache org.springframework.data.gemfire.cache.GemFireCache ) { GemfireCacheManager org.springframework.data.gemfire.cache.GemfireCacheManager = new GemfireCacheManager ( ) { @ java.lang.Override protected org . springframework . org.springframework.cache . org.springframework.cache.Cache org.springframework.cache.Cache ( org . springframework . org.springframework.cache . org.springframework.cache org.springframework.cache.Cache ) { return new GemfireCache ( ( org . org.apache . org.apache . org.apache . org.apache < ? , ? > ) org.springframework.cache.Cache . getNativeCache ( ) ) { @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { getNativeCache ( ) . remove ( java.lang.Object ) ; } } ; } } ; org.springframework.data.gemfire.cache.GemfireCacheManager . setCache ( org.springframework.data.gemfire.cache.GemFireCache ) ; return org.springframework.data.gemfire.cache.GemfireCacheManager ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org . springframework . org.springframework.cache . org.springframework.cache.Cache org.springframework.cache.Cache ( org . springframework . org.springframework.cache . org.springframework.cache org.springframework.cache.Cache ) { return new GemfireCache ( ( org . org.apache . org.apache . org.apache . org.apache < ? , ? > ) org.springframework.cache.Cache . getNativeCache ( ) ) { @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { getNativeCache ( ) . remove ( java.lang.Object ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { getNativeCache ( ) . remove ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.data.gemfire.cache.GemfireCacheManager org.springframework.data.gemfire.cache.GemfireCacheManager ( GemFireCache org.springframework.data.gemfire.cache.GemFireCache ) { GemfireCacheManager org.springframework.data.gemfire.cache.GemfireCacheManager = new GemfireCacheManager ( ) ; org.springframework.data.gemfire.cache.GemfireCacheManager . setCache ( org.springframework.data.gemfire.cache.GemFireCache ) ; return org.springframework.data.gemfire.cache.GemfireCacheManager ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.data.gemfire.cache.GemfireRepositoryFactoryBean<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person,java.lang.Long> < org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person , java.lang.Long > org.springframework.data.gemfire.cache.GemfireRepositoryFactoryBean<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person,java.lang.Long> ( ) { GemfireRepositoryFactoryBean < org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person , java.lang.Long > org.springframework.data.gemfire.cache.GemfireRepositoryFactoryBean<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person,java.lang.Long> = new GemfireRepositoryFactoryBean < org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person , java.lang.Long > ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository .class ) ; org.springframework.data.gemfire.cache.GemfireRepositoryFactoryBean<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person,java.lang.Long> . setGemfireMappingContext ( new GemfireMappingContext ( ) ) ; return org.springframework.data.gemfire.cache.GemfireRepositoryFactoryBean<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person,java.lang.Long> ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PeopleService org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PeopleService ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository ) { return new org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PeopleService ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository ) ; }  <METHOD_END>
<METHOD_START> java.util.Properties java.util.Properties ( ) { java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , java.lang.String ( ) ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties . java.lang.Object ( STRING , java.lang.String ( ) ) ; return java.util.Properties ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests .class . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return java.lang.System . java.lang.String ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.data.gemfire.cache.CacheFactoryBean org.springframework.data.gemfire.cache.CacheFactoryBean ( ) { CacheFactoryBean org.springframework.data.gemfire.cache.CacheFactoryBean = new CacheFactoryBean ( ) ; org.springframework.data.gemfire.cache.CacheFactoryBean . setClose ( true ) ; org.springframework.data.gemfire.cache.CacheFactoryBean . setProperties ( java.util.Properties ( ) ) ; return org.springframework.data.gemfire.cache.CacheFactoryBean ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> < java.lang.Long , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ( GemFireCache org.springframework.data.gemfire.cache.GemFireCache ) { LocalRegionFactoryBean < java.lang.Long , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> = new LocalRegionFactoryBean < java.lang.Long , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > ( ) ; org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> . setCache ( org.springframework.data.gemfire.cache.GemFireCache ) ; org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> . setClose ( false ) ; org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> . setPersistent ( false ) ; return org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> < java.lang.Long , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ( GemFireCache org.springframework.data.gemfire.cache.GemFireCache ) { LocalRegionFactoryBean < java.lang.Long , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> = new LocalRegionFactoryBean < java.lang.Long , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > ( ) ; org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> . setCache ( org.springframework.data.gemfire.cache.GemFireCache ) ; org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> . setClose ( false ) ; org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> . setPersistent ( false ) ; return org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> < java.lang.Long , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ( GemFireCache org.springframework.data.gemfire.cache.GemFireCache ) { LocalRegionFactoryBean < java.lang.Long , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> = new LocalRegionFactoryBean < java.lang.Long , org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > ( ) ; org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> . setCache ( org.springframework.data.gemfire.cache.GemFireCache ) ; org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> . setClose ( false ) ; org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> . setPersistent ( false ) ; return org.springframework.data.gemfire.cache.LocalRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ; }  <METHOD_END>
<METHOD_START> public void ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository ) { this . org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository = org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository ; }  <METHOD_END>
<METHOD_START> @ Cacheable ( STRING ) public java.util.List<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> < org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > java.util.List<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) { void ( ) ; return org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository . java.util.List<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department ) ; }  <METHOD_END>
<METHOD_START> @ Cacheable ( STRING ) public org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( java.lang.String java.lang.String ) { void ( ) ; return org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository . org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Caching ( evict = @ CacheEvict ( value = STRING , key = STRING ) , put = @ CachePut ( value = STRING , key = STRING ) ) public org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ) { return org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.PersonRepository . save ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return java.util.concurrent.atomic.AtomicBoolean . boolean ( true , false ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! boolean ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { this . java.util.concurrent.atomic.AtomicBoolean . void ( true ) ; }  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> < org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person > java.util.List<org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person> ( org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Department );  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person org.springframework.data.gemfire.cache.CompoundCachePutCacheEvictIntegrationTests.Person ( java.lang.String java.lang.String );  <METHOD_END>
