<METHOD_START> public void ( MessageProducer org.springframework.jms.connection.MessageProducer ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer = org.springframework.jms.connection.MessageProducer ; this . int = org.springframework.jms.connection.MessageProducer . getDeliveryMode ( ) ; this . int = org.springframework.jms.connection.MessageProducer . getPriority ( ) ; this . long = org.springframework.jms.connection.MessageProducer . getTimeToLive ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) throws org.springframework.jms.connection.JMSException { if ( this . java.lang.Boolean == null ) { this . java.lang.Boolean = this . org.springframework.jms.connection.MessageProducer . getDisableMessageID ( ) ; } this . org.springframework.jms.connection.MessageProducer . setDisableMessageID ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) org.springframework.jms.connection.JMSException { return this . org.springframework.jms.connection.MessageProducer . getDisableMessageID ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) throws org.springframework.jms.connection.JMSException { if ( this . java.lang.Boolean == null ) { this . java.lang.Boolean = this . org.springframework.jms.connection.MessageProducer . getDisableMessageTimestamp ( ) ; } this . org.springframework.jms.connection.MessageProducer . setDisableMessageTimestamp ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) org.springframework.jms.connection.JMSException { return this . org.springframework.jms.connection.MessageProducer . getDisableMessageTimestamp ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) throws org.springframework.jms.connection.JMSException { if ( this . java.lang.Long == null ) { this . java.lang.Long = this . org.springframework.jms.connection.MessageProducer . getDeliveryDelay ( ) ; } this . org.springframework.jms.connection.MessageProducer . setDeliveryDelay ( long ) ; }  <METHOD_END>
<METHOD_START> public long long ( ) org.springframework.jms.connection.JMSException { return this . org.springframework.jms.connection.MessageProducer . getDeliveryDelay ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jms.connection.Destination org.springframework.jms.connection.Destination ( ) org.springframework.jms.connection.JMSException { return this . org.springframework.jms.connection.MessageProducer . getDestination ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jms.connection.Queue org.springframework.jms.connection.Queue ( ) org.springframework.jms.connection.JMSException { return ( Queue ) this . org.springframework.jms.connection.MessageProducer . getDestination ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jms.connection.Topic org.springframework.jms.connection.Topic ( ) org.springframework.jms.connection.JMSException { return ( Topic ) this . org.springframework.jms.connection.MessageProducer . getDestination ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message org.springframework.jms.connection.Message ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Message , this . int , this . int , this . long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message org.springframework.jms.connection.Message , int int , int int , long long ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Message , int , int , long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Destination org.springframework.jms.connection.Destination , Message org.springframework.jms.connection.Message ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Destination , org.springframework.jms.connection.Message , this . int , this . int , this . long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Destination org.springframework.jms.connection.Destination , Message org.springframework.jms.connection.Message , int int , int int , long long ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Destination , org.springframework.jms.connection.Message , int , int , long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message org.springframework.jms.connection.Message , CompletionListener org.springframework.jms.connection.CompletionListener ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Message , this . int , this . int , this . long , org.springframework.jms.connection.CompletionListener ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message org.springframework.jms.connection.Message , int int , int int , long long , CompletionListener org.springframework.jms.connection.CompletionListener ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Message , int , int , long , org.springframework.jms.connection.CompletionListener ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Destination org.springframework.jms.connection.Destination , Message org.springframework.jms.connection.Message , CompletionListener org.springframework.jms.connection.CompletionListener ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Destination , org.springframework.jms.connection.Message , this . int , this . int , this . long , org.springframework.jms.connection.CompletionListener ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Destination org.springframework.jms.connection.Destination , Message org.springframework.jms.connection.Message , int int , int int , long long , CompletionListener org.springframework.jms.connection.CompletionListener ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Destination , org.springframework.jms.connection.Message , int , int , long , org.springframework.jms.connection.CompletionListener ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Queue org.springframework.jms.connection.Queue , Message org.springframework.jms.connection.Message ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Queue , org.springframework.jms.connection.Message , this . int , this . int , this . long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Queue org.springframework.jms.connection.Queue , Message org.springframework.jms.connection.Message , int int , int int , long long ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Queue , org.springframework.jms.connection.Message , int , int , long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message org.springframework.jms.connection.Message ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Message , this . int , this . int , this . long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message org.springframework.jms.connection.Message , int int , int int , long long ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Message , int , int , long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Topic org.springframework.jms.connection.Topic , Message org.springframework.jms.connection.Message ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Topic , org.springframework.jms.connection.Message , this . int , this . int , this . long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Topic org.springframework.jms.connection.Topic , Message org.springframework.jms.connection.Message , int int , int int , long long ) throws org.springframework.jms.connection.JMSException { this . org.springframework.jms.connection.MessageProducer . send ( org.springframework.jms.connection.Topic , org.springframework.jms.connection.Message , int , int , long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.jms.connection.JMSException { if ( this . java.lang.Boolean != null ) { this . org.springframework.jms.connection.MessageProducer . setDisableMessageID ( this . java.lang.Boolean ) ; this . java.lang.Boolean = null ; } if ( this . java.lang.Boolean != null ) { this . org.springframework.jms.connection.MessageProducer . setDisableMessageTimestamp ( this . java.lang.Boolean ) ; this . java.lang.Boolean = null ; } if ( this . java.lang.Long != null ) { this . org.springframework.jms.connection.MessageProducer . setDeliveryDelay ( this . java.lang.Long ) ; this . java.lang.Long = null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . org.springframework.jms.connection.MessageProducer ; }  <METHOD_END>
