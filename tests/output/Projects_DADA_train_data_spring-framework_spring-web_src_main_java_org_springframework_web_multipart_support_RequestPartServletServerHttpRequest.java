<METHOD_START> public void ( HttpServletRequest org.springframework.web.multipart.support.HttpServletRequest , java.lang.String java.lang.String )			throws org.springframework.web.multipart.support.MissingServletRequestPartException { super( org.springframework.web.multipart.support.HttpServletRequest ); this . org.springframework.web.multipart.support.MultipartHttpServletRequest = MultipartResolutionDelegate . asMultipartHttpServletRequest ( org.springframework.web.multipart.support.HttpServletRequest ) ; this . java.lang.String = java.lang.String ; this . org.springframework.web.multipart.support.HttpHeaders = this . org.springframework.web.multipart.support.MultipartHttpServletRequest . getMultipartHeaders ( this . java.lang.String ) ; if ( this . org.springframework.web.multipart.support.HttpHeaders == null ) { throw new MissingServletRequestPartException ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.multipart.support.HttpHeaders org.springframework.web.multipart.support.HttpHeaders ( ) { return this . org.springframework.web.multipart.support.HttpHeaders ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.InputStream java.io.InputStream ( ) java.io.IOException { if ( this . org.springframework.web.multipart.support.MultipartHttpServletRequest instanceof StandardMultipartHttpServletRequest ) { try { return this . org.springframework.web.multipart.support.MultipartHttpServletRequest . getPart ( this . java.lang.String ) . getInputStream ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new MultipartException ( STRING , java.lang.Exception ) ; } } else { MultipartFile org.springframework.web.multipart.support.MultipartFile = this . org.springframework.web.multipart.support.MultipartHttpServletRequest . getFile ( this . java.lang.String ) ; if ( org.springframework.web.multipart.support.MultipartFile != null ) { return org.springframework.web.multipart.support.MultipartFile . getInputStream ( ) ; } else { java.lang.String java.lang.String = this . org.springframework.web.multipart.support.MultipartHttpServletRequest . getParameter ( this . java.lang.String ) ; return new java.io.ByteArrayInputStream ( java.lang.String . byte[] ( java.nio.charset.Charset ( ) ) ) ; } } }  <METHOD_END>
<METHOD_START> private java.nio.charset.Charset java.nio.charset.Charset ( ) { MediaType org.springframework.web.multipart.support.MediaType = org.springframework.web.multipart.support.HttpHeaders ( ) . getContentType ( ) ; if ( org.springframework.web.multipart.support.MediaType != null ) { java.nio.charset.Charset java.nio.charset.Charset = org.springframework.web.multipart.support.MediaType . getCharset ( ) ; if ( java.nio.charset.Charset != null ) { return java.nio.charset.Charset ; } } java.lang.String java.lang.String = this . org.springframework.web.multipart.support.MultipartHttpServletRequest . getCharacterEncoding ( ) ; return ( java.lang.String != null ? java.nio.charset.Charset . java.nio.charset.Charset ( java.lang.String ) : FORM_CHARSET ) ; }  <METHOD_END>
