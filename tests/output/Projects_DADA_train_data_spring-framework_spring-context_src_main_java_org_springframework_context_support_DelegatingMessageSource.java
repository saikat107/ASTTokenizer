<METHOD_START> @ java.lang.Override public void void ( MessageSource org.springframework.context.support.MessageSource ) { this . org.springframework.context.support.MessageSource = org.springframework.context.support.MessageSource ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.support.MessageSource org.springframework.context.support.MessageSource ( ) { return this . org.springframework.context.support.MessageSource ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] , java.lang.String java.lang.String , java.util.Locale java.util.Locale ) { if ( this . org.springframework.context.support.MessageSource != null ) { return this . org.springframework.context.support.MessageSource . getMessage ( java.lang.String , java.lang.Object[] , java.lang.String , java.util.Locale ) ; } else { return renderDefaultMessage ( java.lang.String , java.lang.Object[] , java.util.Locale ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] , java.util.Locale java.util.Locale ) throws org.springframework.context.support.NoSuchMessageException { if ( this . org.springframework.context.support.MessageSource != null ) { return this . org.springframework.context.support.MessageSource . getMessage ( java.lang.String , java.lang.Object[] , java.util.Locale ) ; } else { throw new NoSuchMessageException ( java.lang.String , java.util.Locale ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( MessageSourceResolvable org.springframework.context.support.MessageSourceResolvable , java.util.Locale java.util.Locale ) throws org.springframework.context.support.NoSuchMessageException { if ( this . org.springframework.context.support.MessageSource != null ) { return this . org.springframework.context.support.MessageSource . getMessage ( org.springframework.context.support.MessageSourceResolvable , java.util.Locale ) ; } else { if ( org.springframework.context.support.MessageSourceResolvable . getDefaultMessage ( ) != null ) { return renderDefaultMessage ( org.springframework.context.support.MessageSourceResolvable . getDefaultMessage ( ) , org.springframework.context.support.MessageSourceResolvable . getArguments ( ) , java.util.Locale ) ; } java.lang.String [] java.lang.String[] = org.springframework.context.support.MessageSourceResolvable . getCodes ( ) ; java.lang.String java.lang.String = ( java.lang.String[] != null && java.lang.String[] . int > NUMBER ? java.lang.String[] [ NUMBER ] : null ) ; throw new NoSuchMessageException ( java.lang.String , java.util.Locale ) ; } }  <METHOD_END>
