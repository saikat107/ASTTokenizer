<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { new CustomCollectionEditor ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) @ java.lang.SuppressWarnings ( STRING ) public void void ( ) java.lang.Exception { new CustomCollectionEditor ( ( java.lang.Class ) java.lang.String .class ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { CustomCollectionEditor org.springframework.beans.propertyeditors.CustomCollectionEditor = new CustomCollectionEditor ( org.springframework.beans.propertyeditors.CustomCollectionEditorTests.CollectionTypeWithNoNoArgCtor .class ) ; org.springframework.beans.propertyeditors.CustomCollectionEditor . setValue ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { CustomCollectionEditor org.springframework.beans.propertyeditors.CustomCollectionEditor = new CustomCollectionEditor ( java.util.ArrayList .class ) ; org.springframework.beans.propertyeditors.CustomCollectionEditor . setValue ( new int [] { NUMBER , NUMBER , NUMBER } ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.CustomCollectionEditor . getValue ( ) ; assertNotNull ( java.lang.Object ) ; assertTrue ( java.lang.Object instanceof java.util.ArrayList ) ; java.util.List<?> < ? > java.util.List<?> = ( java.util.List<?> < ? > ) java.lang.Object ; assertEquals ( STRING , NUMBER , java.util.List<> . int ( ) ) ; assertEquals ( new java.lang.Integer ( NUMBER ) , java.util.List<> . get ( NUMBER ) ) ; assertEquals ( new java.lang.Integer ( NUMBER ) , java.util.List<> . get ( NUMBER ) ) ; assertEquals ( new java.lang.Integer ( NUMBER ) , java.util.List<> . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { CustomCollectionEditor org.springframework.beans.propertyeditors.CustomCollectionEditor = new CustomCollectionEditor ( java.util.Collection .class ) ; org.springframework.beans.propertyeditors.CustomCollectionEditor . setValue ( STRING ) ; java.util.Collection<?> < ? > java.util.Collection<?> = ( java.util.Collection<?> < ? > ) org.springframework.beans.propertyeditors.CustomCollectionEditor . getValue ( ) ; assertNotNull ( java.util.Collection<> ) ; assertEquals ( STRING , NUMBER , java.util.Collection<> . int ( ) ) ; assertEquals ( STRING , java.util.Collection<> . java.util.Iterator<> ( ) . next ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { CustomCollectionEditor org.springframework.beans.propertyeditors.CustomCollectionEditor = new CustomCollectionEditor ( java.util.ArrayList .class ) ; org.springframework.beans.propertyeditors.CustomCollectionEditor . setValue ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.CustomCollectionEditor . getValue ( ) ; assertNotNull ( java.lang.Object ) ; assertTrue ( java.lang.Object instanceof java.util.ArrayList ) ; java.util.List<?> < ? > java.util.List<?> = ( java.util.List<?> < ? > ) java.lang.Object ; assertEquals ( STRING , NUMBER , java.util.List<> . int ( ) ) ; assertEquals ( STRING , java.util.List<> . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) {		}  <METHOD_END>
