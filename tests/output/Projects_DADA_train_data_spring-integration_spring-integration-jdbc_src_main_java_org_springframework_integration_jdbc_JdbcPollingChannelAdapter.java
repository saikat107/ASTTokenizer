<METHOD_START> public void ( javax.sql.DataSource javax.sql.DataSource , java.lang.String java.lang.String ) { this . org.springframework.integration.jdbc.NamedParameterJdbcOperations = new NamedParameterJdbcTemplate ( javax.sql.DataSource ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( JdbcOperations org.springframework.integration.jdbc.JdbcOperations , java.lang.String java.lang.String ) { this . org.springframework.integration.jdbc.NamedParameterJdbcOperations = new NamedParameterJdbcTemplate ( org.springframework.integration.jdbc.JdbcOperations ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( RowMapper < ? > org.springframework.integration.jdbc.RowMapper<?> ) { this . org.springframework.integration.jdbc.RowMapper<?> = org.springframework.integration.jdbc.RowMapper<> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( SqlParameterSourceFactory org.springframework.integration.jdbc.SqlParameterSourceFactory ) { this . org.springframework.integration.jdbc.SqlParameterSourceFactory = org.springframework.integration.jdbc.SqlParameterSourceFactory ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> public void void ( SqlParameterSource org.springframework.integration.jdbc.SqlParameterSource ) { this . org.springframework.integration.jdbc.SqlParameterSource = org.springframework.integration.jdbc.SqlParameterSource ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { super. onInit ( ) ; if ( ! this . boolean && this . getBeanFactory ( ) != null ) { ( ( ExpressionEvaluatingSqlParameterSourceFactory ) this . org.springframework.integration.jdbc.SqlParameterSourceFactory ) . setBeanFactory ( this . getBeanFactory ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.jdbc.Message<java.lang.Object> < java.lang.Object > org.springframework.integration.jdbc.Message<java.lang.Object> ( ) { java.lang.Object java.lang.Object = java.lang.Object ( ) ; if ( java.lang.Object == null ) { return null ; } return this . getMessageBuilderFactory ( ) . withPayload ( java.lang.Object ) . build ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( ) { java.util.List<?> < ? > java.util.List<?> = java.util.List<?> ( this . org.springframework.integration.jdbc.SqlParameterSource ) ; if ( java.util.List<> . int ( ) < NUMBER ) { java.util.List<?> = null ; } if ( java.util.List<> != null && this . java.lang.String != null ) { if ( this . boolean ) { for ( java.lang.Object java.lang.Object : java.util.List<> ) { void ( java.lang.Object ) ; } } else { void ( java.util.List<> ) ; } } return java.util.List<> ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Object java.lang.Object ) { SqlParameterSource org.springframework.integration.jdbc.SqlParameterSource = this . org.springframework.integration.jdbc.SqlParameterSourceFactory . createParameterSource ( java.lang.Object ) ; this . org.springframework.integration.jdbc.NamedParameterJdbcOperations . update ( this . java.lang.String , org.springframework.integration.jdbc.SqlParameterSource ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<?> < ? > java.util.List<?> ( SqlParameterSource org.springframework.integration.jdbc.SqlParameterSource ) { final RowMapper < ? > org.springframework.integration.jdbc.RowMapper<?> = this . org.springframework.integration.jdbc.RowMapper<> == null ? new ColumnMapRowMapper ( ) : this . org.springframework.integration.jdbc.RowMapper<> ; ResultSetExtractor < java.util.List<java.lang.Object> < java.lang.Object > > org.springframework.integration.jdbc.ResultSetExtractor<java.util.List<java.lang.Object>> ; if ( this . int > NUMBER ) { org.springframework.integration.jdbc.ResultSetExtractor<java.util.List<java.lang.Object>> = rs -> { List < Object > results = new ArrayList < Object > ( JdbcPollingChannelAdapter .this . maxRowsPerPoll ) ; int rowNum = NUMBER ; while ( rs . next ( ) && rowNum < JdbcPollingChannelAdapter .this . maxRowsPerPoll ) { results . add ( rowMapper . mapRow ( rs , rowNum ++ ) ) ; } return results ; } ; } else { @ java.lang.SuppressWarnings ( STRING ) ResultSetExtractor < java.util.List<java.lang.Object> < java.lang.Object > > org.springframework.integration.jdbc.ResultSetExtractor<java.util.List<java.lang.Object>> = new RowMapperResultSetExtractor < java.lang.Object > ( ( RowMapper < java.lang.Object > ) org.springframework.integration.jdbc.RowMapper<> ) ; org.springframework.integration.jdbc.ResultSetExtractor<java.util.List<java.lang.Object>> = org.springframework.integration.jdbc.ResultSetExtractor<java.util.List<java.lang.Object>> ; } if ( org.springframework.integration.jdbc.SqlParameterSource != null ) { return this . org.springframework.integration.jdbc.NamedParameterJdbcOperations . query ( this . java.lang.String , org.springframework.integration.jdbc.SqlParameterSource , org.springframework.integration.jdbc.ResultSetExtractor<java.util.List<java.lang.Object>> ) ; } else { return this . org.springframework.integration.jdbc.NamedParameterJdbcOperations . getJdbcOperations ( ) . query ( this . java.lang.String , org.springframework.integration.jdbc.ResultSetExtractor<java.util.List<java.lang.Object>> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
