<METHOD_START> void ( MetaData org.springframework.data.neo4j.repository.query.MetaData , java.lang.Class<?> < ? > java.lang.Class<?> ) { this . org.springframework.data.neo4j.repository.query.MetaData = org.springframework.data.neo4j.repository.query.MetaData ; this . java.lang.Class = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { if ( java.lang.Class . java.lang.annotation.Annotation ( QueryResult .class ) == null ) { return java.lang.Object ; } SingleUseEntityMapper org.springframework.data.neo4j.repository.query.SingleUseEntityMapper = new SingleUseEntityMapper ( org.springframework.data.neo4j.repository.query.MetaData , new EntityFactory ( org.springframework.data.neo4j.repository.query.MetaData ) ) ; if ( java.lang.Class . boolean ( ) ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = new java.lang.Class<?> < ? > [] { java.lang.Class } ; return java.lang.Object ( java.lang.Class . java.lang.ClassLoader ( ) , java.lang.Class<?>[] , new QueryResultProxy ( ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.lang.Object ) ) ; } return org.springframework.data.neo4j.repository.query.SingleUseEntityMapper . map ( java.lang.Class , ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.lang.Object ) ; }  <METHOD_END>
