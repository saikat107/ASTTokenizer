<METHOD_START> @ java.lang.Override protected java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ( ) { return EnableCouchbaseAuditing .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return BeanNames . COUCHBASE_AUDITING_HANDLER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AnnotationMetadata org.springframework.data.couchbase.repository.auditing.AnnotationMetadata , BeanDefinitionRegistry org.springframework.data.couchbase.repository.auditing.BeanDefinitionRegistry ) { Assert . notNull ( org.springframework.data.couchbase.repository.auditing.AnnotationMetadata , STRING ) ; Assert . notNull ( org.springframework.data.couchbase.repository.auditing.BeanDefinitionRegistry , STRING ) ; void ( org.springframework.data.couchbase.repository.auditing.BeanDefinitionRegistry , org.springframework.data.couchbase.repository.auditing.AnnotationMetadata ) ; super. registerBeanDefinitions ( org.springframework.data.couchbase.repository.auditing.AnnotationMetadata , org.springframework.data.couchbase.repository.auditing.BeanDefinitionRegistry ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.couchbase.repository.auditing.BeanDefinitionBuilder org.springframework.data.couchbase.repository.auditing.BeanDefinitionBuilder ( AuditingConfiguration org.springframework.data.couchbase.repository.auditing.AuditingConfiguration ) { Assert . notNull ( org.springframework.data.couchbase.repository.auditing.AuditingConfiguration , STRING ) ; BeanDefinitionBuilder org.springframework.data.couchbase.repository.auditing.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( IsNewAwareAuditingHandler .class ) ; org.springframework.data.couchbase.repository.auditing.BeanDefinitionBuilder . addConstructorArgReference ( BeanNames . COUCHBASE_MAPPING_CONTEXT ) ; return configureDefaultAuditHandlerAttributes ( org.springframework.data.couchbase.repository.auditing.AuditingConfiguration , org.springframework.data.couchbase.repository.auditing.BeanDefinitionBuilder ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( BeanDefinition org.springframework.data.couchbase.repository.auditing.BeanDefinition , BeanDefinitionRegistry org.springframework.data.couchbase.repository.auditing.BeanDefinitionRegistry ) { Assert . notNull ( org.springframework.data.couchbase.repository.auditing.BeanDefinition , STRING ) ; Assert . notNull ( org.springframework.data.couchbase.repository.auditing.BeanDefinitionRegistry , STRING ) ; BeanDefinitionBuilder org.springframework.data.couchbase.repository.auditing.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( AuditingEventListener .class ) ; org.springframework.data.couchbase.repository.auditing.BeanDefinitionBuilder . addConstructorArgValue ( ParsingUtils . getObjectFactoryBeanDefinition ( java.lang.String ( ) , org.springframework.data.couchbase.repository.auditing.BeanDefinitionRegistry ) ) ; registerInfrastructureBeanWithId ( org.springframework.data.couchbase.repository.auditing.BeanDefinitionBuilder . getBeanDefinition ( ) , AuditingEventListener .class . java.lang.String ( ) , org.springframework.data.couchbase.repository.auditing.BeanDefinitionRegistry ) ; }  <METHOD_END>
<METHOD_START> private void void ( BeanDefinitionRegistry org.springframework.data.couchbase.repository.auditing.BeanDefinitionRegistry , java.lang.Object java.lang.Object ) { if ( ! org.springframework.data.couchbase.repository.auditing.BeanDefinitionRegistry . containsBeanDefinition ( BeanNames . COUCHBASE_MAPPING_CONTEXT ) ) { RootBeanDefinition org.springframework.data.couchbase.repository.auditing.RootBeanDefinition = new RootBeanDefinition ( CouchbaseMappingContext .class ) ; org.springframework.data.couchbase.repository.auditing.RootBeanDefinition . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) ; org.springframework.data.couchbase.repository.auditing.RootBeanDefinition . setSource ( java.lang.Object ) ; org.springframework.data.couchbase.repository.auditing.BeanDefinitionRegistry . registerBeanDefinition ( BeanNames . COUCHBASE_MAPPING_CONTEXT , org.springframework.data.couchbase.repository.auditing.RootBeanDefinition ) ; } }  <METHOD_END>
