<METHOD_START> public void ( java.util.Collection<? extends E> < ? extends E > java.util.Collection<? extends E> ) { this( java.util.Collection<> , null ); }  <METHOD_END>
<METHOD_START> public void ( java.util.Collection<? extends E> < ? extends E > java.util.Collection<? extends E> , CorsConfiguration org.springframework.boot.actuate.endpoint.mvc.CorsConfiguration ) { this . java.util.Set<E> = new java.util.HashSet<E> <> ( java.util.Collection<> ) ; void ( this . java.util.Set<E> ) ; this . org.springframework.boot.actuate.endpoint.mvc.CorsConfiguration = org.springframework.boot.actuate.endpoint.mvc.CorsConfiguration ; setOrder ( - NUMBER ) ; setUseSuffixPatternMatch ( false ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.util.Set<E> < E > java.util.Set<E> ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. afterPropertiesSet ( ) ; if ( ! this . boolean ) { for ( MvcEndpoint org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint : this . java.util.Set<E> ) { detectHandlerMethods ( org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.Deprecated protected void void ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , RequestMappingInfo org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo ) { if ( org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo == null ) { return; } java.lang.String [] java.lang.String[] = java.lang.String[] ( java.lang.Object , org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo ) ; if ( ! ObjectUtils . isEmpty ( java.lang.String[] ) ) { super. registerHandlerMethod ( java.lang.Object , java.lang.reflect.Method , org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo ( org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo , java.lang.String[] ) ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.String [] java.lang.String[] ( java.lang.Object java.lang.Object , RequestMappingInfo org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo ) { if ( java.lang.Object instanceof java.lang.String ) { java.lang.Object = getApplicationContext ( ) . getBean ( ( java.lang.String ) java.lang.Object ) ; } Assert . state ( java.lang.Object instanceof MvcEndpoint , STRING ) ; java.lang.String java.lang.String = java.lang.String ( ( MvcEndpoint ) java.lang.Object ) ; return ( java.lang.String == null ? null : java.lang.String[] ( java.lang.String , org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo ) ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( MvcEndpoint org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint ) { return org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint . getPath ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String [] java.lang.String[] ( java.lang.String java.lang.String , RequestMappingInfo org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo ) { java.lang.String java.lang.String = StringUtils . hasText ( this . java.lang.String ) ? this . java.lang.String + java.lang.String : java.lang.String ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo . getPatternsCondition ( ) . getPatterns ( ) ; if ( java.util.Set<java.lang.String> . boolean ( ) ) { return new java.lang.String [] { java.lang.String , java.lang.String + STRING } ; } java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( java.util.Set<java.lang.String> ) ; for ( int int = NUMBER ; int < java.util.List<java.lang.String> . int ( ) ; int ++ ) { java.util.List<java.lang.String> . java.lang.String ( int , java.lang.String + java.util.List<java.lang.String> . java.lang.String ( int ) ) ; } return java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo ( RequestMappingInfo org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo , java.lang.String [] java.lang.String[] ) { PatternsRequestCondition org.springframework.boot.actuate.endpoint.mvc.PatternsRequestCondition = new PatternsRequestCondition ( java.lang.String[] , null , null , useSuffixPatternMatch ( ) , useTrailingSlashMatch ( ) , null ) ; return new RequestMappingInfo ( org.springframework.boot.actuate.endpoint.mvc.PatternsRequestCondition , org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo . getMethodsCondition ( ) , org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo . getParamsCondition ( ) , org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo . getHeadersCondition ( ) , org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo . getConsumesCondition ( ) , org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo . getProducesCondition ( ) , org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo . getCustomCondition ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain ( java.lang.Object java.lang.Object , HttpServletRequest org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest ) { HandlerExecutionChain org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain = super. getHandlerExecutionChain ( java.lang.Object , org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest ) ; if ( this . org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor == null || CorsUtils . isCorsRequest ( org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest ) ) { return org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain ; } return org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain ( org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain ( HttpServletRequest org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , HandlerExecutionChain org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain , CorsConfiguration org.springframework.boot.actuate.endpoint.mvc.CorsConfiguration ) { org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain = super. getCorsHandlerExecutionChain ( org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain , org.springframework.boot.actuate.endpoint.mvc.CorsConfiguration ) ; if ( this . org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor == null ) { return org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain ; } return org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain ( org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain ( HandlerExecutionChain org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain ) { java.util.List<org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor> < HandlerInterceptor > java.util.List<org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor> = new java.util.ArrayList<org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor> <> ( ) ; if ( org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain . getInterceptors ( ) != null ) { java.util.List<org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor> . addAll ( java.util.Arrays . java.util.List ( org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain . getInterceptors ( ) ) ) ; } java.util.List<org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor> . add ( this . org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor ) ; return new HandlerExecutionChain ( org.springframework.boot.actuate.endpoint.mvc.HandlerExecutionChain . getHandler ( ) , java.util.List<org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor> . toArray ( new HandlerInterceptor [ java.util.List<org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor> . size ( ) ] ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( HandlerInterceptor org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor ) { this . org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor = org.springframework.boot.actuate.endpoint.mvc.HandlerInterceptor ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . isTrue ( STRING . boolean ( java.lang.String ) || StringUtils . startsWithIgnoreCase ( java.lang.String , STRING ) , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return this . java.lang.String + java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public java.util.Set<E> < E > java.util.Set<E> ( ) { return java.util.Collections . java.util.Set<E> ( this . java.util.Set<E> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.actuate.endpoint.mvc.CorsConfiguration org.springframework.boot.actuate.endpoint.mvc.CorsConfiguration ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , RequestMappingInfo org.springframework.boot.actuate.endpoint.mvc.RequestMappingInfo ) { return this . org.springframework.boot.actuate.endpoint.mvc.CorsConfiguration ; }  <METHOD_END>
