<METHOD_START> void ( E E , java.lang.String ... java.lang.String[] ) { super( E ); this . org.springframework.integration.http.dsl.RequestMapping . setPathPatterns ( java.lang.String[] ) ; this . target . setRequestMapping ( this . org.springframework.integration.http.dsl.RequestMapping ) ; this . target . setHeaderExpressions ( this . java.util.Map<java.lang.String,org.springframework.integration.http.dsl.Expression> ) ; this . target . setHeaderMapper ( this . org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.util.function.Consumer<org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec> < org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec > java.util.function.Consumer<org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec> ) { java.util.function.Consumer<org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec> . void ( new org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec ( this . org.springframework.integration.http.dsl.RequestMapping ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.util.function.Consumer<org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec> < org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec > java.util.function.Consumer<org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec> ) { org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec = new org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec ( ) ; java.util.function.Consumer<org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec> . void ( org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec ) ; this . target . setCrossOrigin ( org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec . org.springframework.integration.http.dsl.CrossOrigin ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { return S ( PARSER . parseExpression ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public S S ( Expression org.springframework.integration.http.dsl.Expression ) { this . target . setPayloadExpression ( org.springframework.integration.http.dsl.Expression ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public < P > S S ( java.util.function.Function<org.springframework.integration.http.dsl.HttpEntity<P>,?> < HttpEntity < P > , ? > java.util.function.Function<org.springframework.integration.http.dsl.HttpEntity<P>,?> ) { return S ( new FunctionExpression <> ( java.util.function.Function<org.springframework.integration.http.dsl.HttpEntity<P>,> ) ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.util.Map<java.lang.String,org.springframework.integration.http.dsl.Expression> < java.lang.String , Expression > java.util.Map<java.lang.String,org.springframework.integration.http.dsl.Expression> ) { Assert . notNull ( java.util.Map<java.lang.String,org.springframework.integration.http.dsl.Expression> , STRING ) ; this . java.util.Map<java.lang.String,org.springframework.integration.http.dsl.Expression> . clear ( ) ; this . java.util.Map<java.lang.String,org.springframework.integration.http.dsl.Expression> . putAll ( java.util.Map<java.lang.String,org.springframework.integration.http.dsl.Expression> ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return S ( java.lang.String , PARSER . parseExpression ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String , Expression org.springframework.integration.http.dsl.Expression ) { this . java.util.Map<java.lang.String,org.springframework.integration.http.dsl.Expression> . put ( java.lang.String , org.springframework.integration.http.dsl.Expression ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public < P > S S ( java.lang.String java.lang.String , java.util.function.Function<org.springframework.integration.http.dsl.HttpEntity<P>,?> < HttpEntity < P > , ? > java.util.function.Function<org.springframework.integration.http.dsl.HttpEntity<P>,?> ) { return S ( java.lang.String , new FunctionExpression <> ( java.util.function.Function<org.springframework.integration.http.dsl.HttpEntity<P>,> ) ) ; }  <METHOD_END>
<METHOD_START> public S S ( org.springframework.integration.http.dsl.HttpMessageConverter<?> < ? > ... org.springframework.integration.http.dsl.HttpMessageConverter<?>[] ) { this . target . setMessageConverters ( java.util.Arrays . java.util.List ( org.springframework.integration.http.dsl.HttpMessageConverter<?>[] ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( boolean boolean ) { this . target . setMergeWithDefaultConverters ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( HeaderMapper < HttpHeaders > org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> ) { this . target . setHeaderMapper ( org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> ) ; this . org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> = org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String ... java.lang.String[] ) { Assert . isNull ( this . org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> , STRING + this . org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> ) ; ( ( DefaultHttpHeaderMapper ) this . org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> ) . setInboundHeaderNames ( java.lang.String[] ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String ... java.lang.String[] ) { Assert . isNull ( this . org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> , STRING + this . org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> ) ; ( ( DefaultHttpHeaderMapper ) this . org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> ) . setOutboundHeaderNames ( java.lang.String[] ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . target . setRequestPayloadType ( java.lang.Class<> ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( boolean boolean ) { this . target . setExtractReplyPayload ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( MultipartResolver org.springframework.integration.http.dsl.MultipartResolver ) { this . target . setMultipartResolver ( org.springframework.integration.http.dsl.MultipartResolver ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { this . target . setStatusCodeExpressionString ( java.lang.String ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( Expression org.springframework.integration.http.dsl.Expression ) { this . target . setStatusCodeExpression ( org.springframework.integration.http.dsl.Expression ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.util.function.Function<java.lang.Void,?> < java.lang.Void , ? > java.util.function.Function<java.lang.Void,?> ) { return S ( new FunctionExpression <> ( java.util.function.Function<java.lang.Void,> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { HeaderMapper < HttpHeaders > org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> = ( this . org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> != null ? this . org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> : this . org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> ) ; return java.util.Collections . java.util.List ( org.springframework.integration.http.dsl.HeaderMapper<org.springframework.integration.http.dsl.HttpHeaders> ) ; }  <METHOD_END>
<METHOD_START> void ( RequestMapping org.springframework.integration.http.dsl.RequestMapping ) { this . org.springframework.integration.http.dsl.RequestMapping = org.springframework.integration.http.dsl.RequestMapping ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec ( HttpMethod ... org.springframework.integration.http.dsl.HttpMethod[] ) { this . org.springframework.integration.http.dsl.RequestMapping . setMethods ( org.springframework.integration.http.dsl.HttpMethod[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec ( java.lang.String ... java.lang.String[] ) { this . org.springframework.integration.http.dsl.RequestMapping . setParams ( java.lang.String[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec ( java.lang.String ... java.lang.String[] ) { this . org.springframework.integration.http.dsl.RequestMapping . setHeaders ( java.lang.String[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec ( java.lang.String ... java.lang.String[] ) { this . org.springframework.integration.http.dsl.RequestMapping . setConsumes ( java.lang.String[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.RequestMappingSpec ( java.lang.String ... java.lang.String[] ) { this . org.springframework.integration.http.dsl.RequestMapping . setProduces ( java.lang.String[] ) ; return this ; }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec ( java.lang.String ... java.lang.String[] ) { this . org.springframework.integration.http.dsl.CrossOrigin . setOrigin ( java.lang.String[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec ( java.lang.String ... java.lang.String[] ) { this . org.springframework.integration.http.dsl.CrossOrigin . setAllowedHeaders ( java.lang.String[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec ( java.lang.String ... java.lang.String[] ) { this . org.springframework.integration.http.dsl.CrossOrigin . setExposedHeaders ( java.lang.String[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec ( RequestMethod ... org.springframework.integration.http.dsl.RequestMethod[] ) { this . org.springframework.integration.http.dsl.CrossOrigin . setMethod ( org.springframework.integration.http.dsl.RequestMethod[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec ( java.lang.Boolean java.lang.Boolean ) { this . org.springframework.integration.http.dsl.CrossOrigin . setAllowCredentials ( java.lang.Boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec org.springframework.integration.http.dsl.BaseHttpInboundEndpointSpec.CrossOriginSpec ( long long ) { this . org.springframework.integration.http.dsl.CrossOrigin . setMaxAge ( long ) ; return this ; }  <METHOD_END>
