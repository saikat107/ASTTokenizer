<METHOD_START> @ java.lang.Override protected void void ( java.util.Properties java.util.Properties ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected < T extends org.springframework.data.gemfire.client.GemFireCache > T T ( ) { ClientCache org.springframework.data.gemfire.client.ClientCache = getCache ( ) ; return ( T ) ( org.springframework.data.gemfire.client.ClientCache != null ? org.springframework.data.gemfire.client.ClientCache : ClientCacheFactory . getAnyInstance ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Properties java.util.Properties ( ) { java.util.Properties java.util.Properties = super. resolveProperties ( ) ; DistributedSystem org.springframework.data.gemfire.client.DistributedSystem = org.springframework.data.gemfire.client.DistributedSystem ( ) ; if ( GemfireUtils . isConnected ( org.springframework.data.gemfire.client.DistributedSystem ) ) { java.util.Properties java.util.Properties = ( java.util.Properties ) org.springframework.data.gemfire.client.DistributedSystem . getProperties ( ) . clone ( ) ; java.util.Properties . void ( java.util.Properties ) ; java.util.Properties = java.util.Properties ; } GemfireUtils . configureDurableClient ( java.util.Properties , java.lang.String , java.lang.Integer ) ; return java.util.Properties ; }  <METHOD_END>
<METHOD_START> < T extends org.springframework.data.gemfire.client.DistributedSystem > T T ( ) { return GemfireUtils . getDistributedSystem ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.util.Properties java.util.Properties ) { return new ClientCacheFactory ( java.util.Properties ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( final java.lang.Object java.lang.Object ) { return org.springframework.data.gemfire.client.ClientCacheFactory ( org.springframework.data.gemfire.client.ClientCacheFactory ( ( ClientCacheFactory ) java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.client.ClientCacheFactory org.springframework.data.gemfire.client.ClientCacheFactory ( ClientCacheFactory org.springframework.data.gemfire.client.ClientCacheFactory ) { if ( isPdxOptionsSpecified ( ) ) { if ( getPdxSerializer ( ) != null ) { Assert . isInstanceOf ( PdxSerializer .class , getPdxSerializer ( ) , java.lang.String . java.lang.String ( STRING , getPdxSerializer ( ) , ObjectUtils . nullSafeClassName ( getPdxSerializer ( ) ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPdxSerializer ( ( PdxSerializer ) getPdxSerializer ( ) ) ; } if ( getPdxDiskStoreName ( ) != null ) { org.springframework.data.gemfire.client.ClientCacheFactory . setPdxDiskStore ( getPdxDiskStoreName ( ) ) ; } if ( getPdxIgnoreUnreadFields ( ) != null ) { org.springframework.data.gemfire.client.ClientCacheFactory . setPdxIgnoreUnreadFields ( getPdxIgnoreUnreadFields ( ) ) ; } if ( getPdxPersistent ( ) != null ) { org.springframework.data.gemfire.client.ClientCacheFactory . setPdxPersistent ( getPdxPersistent ( ) ) ; } if ( getPdxReadSerialized ( ) != null ) { org.springframework.data.gemfire.client.ClientCacheFactory . setPdxReadSerialized ( getPdxReadSerialized ( ) ) ; } } return org.springframework.data.gemfire.client.ClientCacheFactory ; }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.client.ClientCacheFactory org.springframework.data.gemfire.client.ClientCacheFactory ( ClientCacheFactory org.springframework.data.gemfire.client.ClientCacheFactory ) { DefaultableDelegatingPoolAdapter org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter = DefaultableDelegatingPoolAdapter . from ( DelegatingPoolAdapter . from ( org.springframework.data.gemfire.client.Pool ( ) ) ) . preferDefault ( ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolFreeConnectionTimeout ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getFreeConnectionTimeout ( java.lang.Integer ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolIdleTimeout ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getIdleTimeout ( java.lang.Long ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolLoadConditioningInterval ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getLoadConditioningInterval ( java.lang.Integer ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolMaxConnections ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getMaxConnections ( java.lang.Integer ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolMinConnections ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getMinConnections ( java.lang.Integer ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolMultiuserAuthentication ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getMultiuserAuthentication ( java.lang.Boolean ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolPRSingleHopEnabled ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getPRSingleHopEnabled ( java.lang.Boolean ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolPingInterval ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getPingInterval ( java.lang.Long ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolReadTimeout ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getReadTimeout ( java.lang.Integer ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolRetryAttempts ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getRetryAttempts ( java.lang.Integer ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolServerGroup ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getServerGroup ( java.lang.String ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolSocketBufferSize ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getSocketBufferSize ( java.lang.Integer ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolStatisticInterval ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getStatisticInterval ( java.lang.Integer ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolSubscriptionAckInterval ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getSubscriptionAckInterval ( java.lang.Integer ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolSubscriptionEnabled ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getSubscriptionEnabled ( java.lang.Boolean ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolSubscriptionMessageTrackingTimeout ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getSubscriptionMessageTrackingTimeout ( java.lang.Integer ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolSubscriptionRedundancy ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getSubscriptionRedundancy ( java.lang.Integer ( ) ) ) ; org.springframework.data.gemfire.client.ClientCacheFactory . setPoolThreadLocalConnections ( org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getThreadLocalConnections ( java.lang.Boolean ( ) ) ) ; boolean boolean = org.springframework.data.gemfire.client.ConnectionEndpointList ( ) . isEmpty ( ) ; boolean boolean = ! boolean ; boolean boolean = org.springframework.data.gemfire.client.ConnectionEndpointList ( ) . isEmpty ( ) ; boolean boolean = ! boolean ; if ( boolean || boolean ) { java.lang.Iterable<java.net.InetSocketAddress> < java.net.InetSocketAddress > java.lang.Iterable<java.net.InetSocketAddress> = org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getServers ( org.springframework.data.gemfire.client.ConnectionEndpointList ( ) . toInetSocketAddresses ( ) ) ; for ( java.net.InetSocketAddress java.net.InetSocketAddress : java.lang.Iterable<java.net.InetSocketAddress> ) { org.springframework.data.gemfire.client.ClientCacheFactory . addPoolServer ( java.net.InetSocketAddress . java.lang.String ( ) , java.net.InetSocketAddress . int ( ) ) ; boolean = false ; } } if ( boolean || boolean ) { java.lang.Iterable<java.net.InetSocketAddress> < java.net.InetSocketAddress > java.lang.Iterable<java.net.InetSocketAddress> = org.springframework.data.gemfire.client.DefaultableDelegatingPoolAdapter . getLocators ( org.springframework.data.gemfire.client.ConnectionEndpointList ( ) . toInetSocketAddresses ( ) ) ; for ( java.net.InetSocketAddress java.net.InetSocketAddress : java.lang.Iterable<java.net.InetSocketAddress> ) { org.springframework.data.gemfire.client.ClientCacheFactory . addPoolLocator ( java.net.InetSocketAddress . java.lang.String ( ) , java.net.InetSocketAddress . int ( ) ) ; } } return org.springframework.data.gemfire.client.ClientCacheFactory ; }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.client.Pool org.springframework.data.gemfire.client.Pool ( ) { Pool org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.Pool ( ) ; if ( org.springframework.data.gemfire.client.Pool == null ) { java.lang.String java.lang.String = SpringUtils . defaultIfNull ( java.lang.String ( ) , GemfireConstants . DEFAULT_GEMFIRE_POOL_NAME ) ; org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.Pool ( java.lang.String ) ; if ( org.springframework.data.gemfire.client.Pool == null ) { BeanFactory org.springframework.data.gemfire.client.BeanFactory = getBeanFactory ( ) ; if ( org.springframework.data.gemfire.client.BeanFactory instanceof ListableBeanFactory ) { try { java.util.Map<java.lang.String,org.springframework.data.gemfire.client.PoolFactoryBean> < java.lang.String , PoolFactoryBean > java.util.Map<java.lang.String,org.springframework.data.gemfire.client.PoolFactoryBean> = ( ( ListableBeanFactory ) org.springframework.data.gemfire.client.BeanFactory ) . getBeansOfType ( PoolFactoryBean .class , false , false ) ; java.lang.String java.lang.String = SpringUtils . dereferenceBean ( java.lang.String ) ; if ( java.util.Map<java.lang.String,org.springframework.data.gemfire.client.PoolFactoryBean> . containsKey ( java.lang.String ) ) { return java.util.Map<java.lang.String,org.springframework.data.gemfire.client.PoolFactoryBean> . get ( java.lang.String ) . getPool ( ) ; } } catch ( BeansException org.springframework.data.gemfire.client.BeansException ) { log . info ( java.lang.String . java.lang.String ( STRING , PoolFactoryBean .class . java.lang.String ( ) , java.lang.String ) ) ; } } } } return org.springframework.data.gemfire.client.Pool ; }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.client.Pool org.springframework.data.gemfire.client.Pool ( java.lang.String java.lang.String ) { return PoolManager . find ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected < T extends org.springframework.data.gemfire.client.GemFireCache > T T ( java.lang.Object java.lang.Object ) { return ( T ) ( ( ClientCacheFactory ) java.lang.Object ) . create ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final ContextRefreshedEvent org.springframework.data.gemfire.client.ContextRefreshedEvent ) { if ( boolean ( ) ) { try { ( ( ClientCache ) org.springframework.data.gemfire.client.GemFireCache ( ) ) . readyForEvents ( ) ; } catch ( java.lang.IllegalStateException | CacheClosedException java.lang.Object ) { } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( GemFireCache org.springframework.data.gemfire.client.GemFireCache ) { ( ( ClientCache ) org.springframework.data.gemfire.client.GemFireCache ) . close ( boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<? extends org.springframework.data.gemfire.client.GemFireCache> < ? extends GemFireCache > java.lang.Class<? extends org.springframework.data.gemfire.client.GemFireCache> ( ) { ClientCache org.springframework.data.gemfire.client.ClientCache = getCache ( ) ; return ( org.springframework.data.gemfire.client.ClientCache != null ? org.springframework.data.gemfire.client.ClientCache . getClass ( ) : ClientCache .class ) ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionEndpoint ... org.springframework.data.gemfire.client.ConnectionEndpoint[] ) { this . org.springframework.data.gemfire.client.ConnectionEndpointList . add ( org.springframework.data.gemfire.client.ConnectionEndpoint[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> < ConnectionEndpoint > java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) { this . org.springframework.data.gemfire.client.ConnectionEndpointList . add ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionEndpoint ... org.springframework.data.gemfire.client.ConnectionEndpoint[] ) { this . org.springframework.data.gemfire.client.ConnectionEndpointList . add ( org.springframework.data.gemfire.client.ConnectionEndpoint[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> < ConnectionEndpoint > java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) { this . org.springframework.data.gemfire.client.ConnectionEndpointList . add ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( final java.lang.Boolean java.lang.Boolean ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean . java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Long java.lang.Long ) { this . java.lang.Long = java.lang.Long ; }  <METHOD_END>
<METHOD_START> public java.lang.Long java.lang.Long ( ) { return java.lang.Long ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.Boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionEndpoint [] org.springframework.data.gemfire.client.ConnectionEndpoint[] ) { void ( ConnectionEndpointList . from ( org.springframework.data.gemfire.client.ConnectionEndpoint[] ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> < ConnectionEndpoint > java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) { org.springframework.data.gemfire.client.ConnectionEndpointList ( ) . clear ( ) ; void ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.client.ConnectionEndpointList org.springframework.data.gemfire.client.ConnectionEndpointList ( ) { return org.springframework.data.gemfire.client.ConnectionEndpointList ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( Pool org.springframework.data.gemfire.client.Pool ) { this . org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.Pool ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.client.Pool org.springframework.data.gemfire.client.Pool ( ) { return org.springframework.data.gemfire.client.Pool ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Long java.lang.Long ) { this . java.lang.Long = java.lang.Long ; }  <METHOD_END>
<METHOD_START> public java.lang.Long java.lang.Long ( ) { return java.lang.Long ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { java.lang.Boolean java.lang.Boolean = java.lang.Boolean ( ) ; if ( java.lang.Boolean != null ) { return java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.Boolean ) ; } else { try { return GemfireUtils . isDurable ( ( ClientCache ) org.springframework.data.gemfire.client.GemFireCache ( ) ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { return false ; } } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionEndpoint [] org.springframework.data.gemfire.client.ConnectionEndpoint[] ) { void ( ConnectionEndpointList . from ( org.springframework.data.gemfire.client.ConnectionEndpoint[] ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> < ConnectionEndpoint > java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) { org.springframework.data.gemfire.client.ConnectionEndpointList ( ) . clear ( ) ; void ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.client.ConnectionEndpointList org.springframework.data.gemfire.client.ConnectionEndpointList ( ) { return org.springframework.data.gemfire.client.ConnectionEndpointList ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( java.lang.Boolean java.lang.Boolean ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean . java.lang.Boolean ; }  <METHOD_END>
