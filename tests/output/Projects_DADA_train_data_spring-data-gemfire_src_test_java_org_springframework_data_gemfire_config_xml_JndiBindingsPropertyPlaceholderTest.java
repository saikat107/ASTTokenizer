<METHOD_START> protected void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> < ConfigProperty > java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> ) { for ( ConfigProperty org.springframework.data.gemfire.config.xml.ConfigProperty : java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> ) { if ( java.lang.String . boolean ( org.springframework.data.gemfire.config.xml.ConfigProperty . getName ( ) ) ) { assertEquals ( java.lang.String , org.springframework.data.gemfire.config.xml.ConfigProperty . getValue ( ) ) ; assertEquals ( java.lang.String .class . java.lang.String ( ) , org.springframework.data.gemfire.config.xml.ConfigProperty . getType ( ) ) ; return; } } fail ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CacheFactoryBean org.springframework.data.gemfire.config.xml.CacheFactoryBean = org.springframework.data.gemfire.config.xml.ApplicationContext . getBean ( STRING , CacheFactoryBean .class ) ; java.util.List<CacheFactoryBean.JndiDataSource> < CacheFactoryBean . CacheFactoryBean > java.util.List<CacheFactoryBean.JndiDataSource> = org.springframework.data.gemfire.config.xml.CacheFactoryBean . getJndiDataSources ( ) ; assertNotNull ( java.util.List<CacheFactoryBean.JndiDataSource> ) ; assertEquals ( NUMBER , java.util.List<CacheFactoryBean.JndiDataSource> . size ( ) ) ; CacheFactoryBean . CacheFactoryBean CacheFactoryBean.JndiDataSource = java.util.List<CacheFactoryBean.JndiDataSource> . get ( NUMBER ) ; assertNotNull ( CacheFactoryBean.JndiDataSource ) ; java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = CacheFactoryBean.JndiDataSource . getAttributes ( ) ; assertNotNull ( java.util.Map<java.lang.String,java.lang.String> ) ; assertFalse ( java.util.Map<java.lang.String,java.lang.String> . boolean ( ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> < ConfigProperty > java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> = CacheFactoryBean.JndiDataSource . getProps ( ) ; assertNotNull ( java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> ) ; assertFalse ( java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> . isEmpty ( ) ) ; void ( STRING , STRING , java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> ) ; void ( STRING , STRING , java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> ) ; void ( STRING , STRING , java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> ) ; void ( STRING , STRING , java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> ) ; void ( STRING , STRING , java.util.List<org.springframework.data.gemfire.config.xml.ConfigProperty> ) ; }  <METHOD_END>
