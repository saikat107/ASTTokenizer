<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override protected org.springframework.statemachine.zookeeper.Kryo org.springframework.statemachine.zookeeper.Kryo ( ) { Kryo org.springframework.statemachine.zookeeper.Kryo = new Kryo ( ) ; org.springframework.statemachine.zookeeper.Kryo . addDefaultSerializer ( StateMachineContext .class , new StateMachineContextSerializer ( ) ) ; org.springframework.statemachine.zookeeper.Kryo . addDefaultSerializer ( MessageHeaders .class , new MessageHeadersSerializer ( ) ) ; org.springframework.statemachine.zookeeper.Kryo . addDefaultSerializer ( java.util.UUID .class , new UUIDSerializer ( ) ) ; return org.springframework.statemachine.zookeeper.Kryo ; }  <METHOD_END>
<METHOD_START> public void ( CuratorFramework org.springframework.statemachine.zookeeper.CuratorFramework , java.lang.String java.lang.String ) { this( org.springframework.statemachine.zookeeper.CuratorFramework , java.lang.String , null , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( CuratorFramework org.springframework.statemachine.zookeeper.CuratorFramework , java.lang.String java.lang.String , java.lang.String java.lang.String , int int ) { if ( java.lang.String != null ) { Assert . state ( int > NUMBER && ( ( int & - int ) == int ) , STRING ) ; } this . org.springframework.statemachine.zookeeper.CuratorFramework = org.springframework.statemachine.zookeeper.CuratorFramework ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineContext < S , E > org.springframework.statemachine.zookeeper.StateMachineContext<S,E> , Stat org.springframework.statemachine.zookeeper.Stat ) { byte [] byte[] = byte[] ( org.springframework.statemachine.zookeeper.StateMachineContext<S,E> ) ; CuratorTransaction org.springframework.statemachine.zookeeper.CuratorTransaction = org.springframework.statemachine.zookeeper.CuratorFramework . inTransaction ( ) ; try { CuratorTransactionFinal org.springframework.statemachine.zookeeper.CuratorTransactionFinal = org.springframework.statemachine.zookeeper.CuratorTransaction . setData ( ) . withVersion ( org.springframework.statemachine.zookeeper.Stat . getVersion ( ) ) . forPath ( java.lang.String , byte[] ) . and ( ) ; if ( java.lang.String != null ) { org.springframework.statemachine.zookeeper.CuratorTransactionFinal = org.springframework.statemachine.zookeeper.CuratorTransactionFinal . setData ( ) . forPath ( java.lang.String + STRING + org.springframework.statemachine.zookeeper.Stat . getVersion ( ) % int , byte[] ) . and ( ) ; } java.util.Collection<org.springframework.statemachine.zookeeper.CuratorTransactionResult> < CuratorTransactionResult > java.util.Collection<org.springframework.statemachine.zookeeper.CuratorTransactionResult> = org.springframework.statemachine.zookeeper.CuratorTransactionFinal . commit ( ) ; int int = java.util.Collection<org.springframework.statemachine.zookeeper.CuratorTransactionResult> . iterator ( ) . next ( ) . getResultStat ( ) . getVersion ( ) ; org.springframework.statemachine.zookeeper.Stat . setVersion ( int ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new StateMachineException ( STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.zookeeper.StateMachineContext<S,E> < S , E > org.springframework.statemachine.zookeeper.StateMachineContext<S,E> ( Stat org.springframework.statemachine.zookeeper.Stat ) throws java.lang.Exception { return org.springframework.statemachine.zookeeper.StateMachineContext<S,E> ( org.springframework.statemachine.zookeeper.CuratorFramework . getData ( ) . storingStatIn ( org.springframework.statemachine.zookeeper.Stat ) . forPath ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.statemachine.zookeeper.StateMachineContext<S,E> < S , E > org.springframework.statemachine.zookeeper.StateMachineContext<S,E> ( int int , Stat org.springframework.statemachine.zookeeper.Stat ) throws java.lang.Exception { return org.springframework.statemachine.zookeeper.StateMachineContext<S,E> ( org.springframework.statemachine.zookeeper.CuratorFramework . getData ( ) . storingStatIn ( org.springframework.statemachine.zookeeper.Stat ) . forPath ( java.lang.String + STRING + int ) ) ; }  <METHOD_END>
<METHOD_START> private byte [] byte[] ( StateMachineContext < S , E > org.springframework.statemachine.zookeeper.StateMachineContext<S,E> ) { Kryo org.springframework.statemachine.zookeeper.Kryo = java.lang.ThreadLocal<org.springframework.statemachine.zookeeper.Kryo> . get ( ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; Output org.springframework.statemachine.zookeeper.Output = new Output ( java.io.ByteArrayOutputStream ) ; org.springframework.statemachine.zookeeper.Kryo . writeObject ( org.springframework.statemachine.zookeeper.Output , org.springframework.statemachine.zookeeper.StateMachineContext<S,E> ) ; org.springframework.statemachine.zookeeper.Output . close ( ) ; return java.io.ByteArrayOutputStream . byte[] ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private org.springframework.statemachine.zookeeper.StateMachineContext<S,E> < S , E > org.springframework.statemachine.zookeeper.StateMachineContext<S,E> ( byte [] byte[] ) { if ( byte[] == null || byte[] . int == NUMBER ) { return null ; } Kryo org.springframework.statemachine.zookeeper.Kryo = java.lang.ThreadLocal<org.springframework.statemachine.zookeeper.Kryo> . get ( ) ; java.io.ByteArrayInputStream java.io.ByteArrayInputStream = new java.io.ByteArrayInputStream ( byte[] ) ; Input org.springframework.statemachine.zookeeper.Input = new Input ( java.io.ByteArrayInputStream ) ; return org.springframework.statemachine.zookeeper.Kryo . readObject ( org.springframework.statemachine.zookeeper.Input , StateMachineContext .class ) ; }  <METHOD_END>
