<METHOD_START> private void ( Matcher < ? extends T > org.springframework.boot.testutil.Matcher<? extends T> ) { Assert . notNull ( org.springframework.boot.testutil.Matcher<> , STRING ) ; this . org.springframework.boot.testutil.Matcher<? extends T> = org.springframework.boot.testutil.Matcher<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final T T ) { if ( this . org.springframework.boot.testutil.Matcher<> . matches ( T ) ) { return true ; } StringDescription org.springframework.boot.testutil.StringDescription = new StringDescription ( ) ; this . org.springframework.boot.testutil.Matcher<> . describeTo ( org.springframework.boot.testutil.StringDescription ) ; describedAs ( org.springframework.boot.testutil.StringDescription . toString ( ) ) ; return false ; }  <METHOD_END>
<METHOD_START> public static < T > org.springframework.boot.testutil.Condition<T> < T > org.springframework.boot.testutil.Condition<T> ( Matcher < ? extends T > org.springframework.boot.testutil.Matcher<? extends T> ) { return org.springframework.boot.testutil.Condition ( org.springframework.boot.testutil.Matcher<> ) ; }  <METHOD_END>
<METHOD_START> public static < T > org.springframework.boot.testutil.Condition<T> < T > org.springframework.boot.testutil.Condition<T> ( Matcher < ? extends T > org.springframework.boot.testutil.Matcher<? extends T> ) { return new org.springframework.boot.testutil.Matched <> ( org.springframework.boot.testutil.Matcher<> ) ; }  <METHOD_END>
