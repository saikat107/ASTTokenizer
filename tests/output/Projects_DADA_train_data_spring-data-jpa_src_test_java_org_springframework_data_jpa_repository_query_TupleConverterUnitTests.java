<METHOD_START> @ Before public void void ( ) java.lang.Exception { RepositoryMetadata org.springframework.data.jpa.repository.query.RepositoryMetadata = new DefaultRepositoryMetadata ( org.springframework.data.jpa.repository.query.TupleConverterUnitTests.SampleRepository .class ) ; QueryMethod org.springframework.data.jpa.repository.query.QueryMethod = new QueryMethod ( org.springframework.data.jpa.repository.query.TupleConverterUnitTests.SampleRepository .class . java.lang.reflect.Method ( STRING ) , org.springframework.data.jpa.repository.query.RepositoryMetadata , org.springframework.data.jpa.repository.query.ProjectionFactory ) ; this . org.springframework.data.jpa.repository.query.ReturnedType = org.springframework.data.jpa.repository.query.QueryMethod . getResultProcessor ( ) . getReturnedType ( ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) java.lang.Exception { doReturn ( java.util.Arrays . java.util.List ( org.springframework.data.jpa.repository.query.TupleElement<java.lang.String> ) ) . when ( org.springframework.data.jpa.repository.query.Tuple ) . getElements ( ) ; doReturn ( STRING ) . when ( org.springframework.data.jpa.repository.query.Tuple ) . get ( org.springframework.data.jpa.repository.query.TupleElement<java.lang.String> ) ; TupleConverter org.springframework.data.jpa.repository.query.TupleConverter = new TupleConverter ( org.springframework.data.jpa.repository.query.ReturnedType ) ; assertThat ( org.springframework.data.jpa.repository.query.TupleConverter . convert ( org.springframework.data.jpa.repository.query.Tuple ) , is ( ( java.lang.Object ) STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) java.lang.Exception { doReturn ( java.util.Arrays . java.util.List ( org.springframework.data.jpa.repository.query.TupleElement<java.lang.String> ) ) . when ( org.springframework.data.jpa.repository.query.Tuple ) . getElements ( ) ; doReturn ( null ) . when ( org.springframework.data.jpa.repository.query.Tuple ) . get ( org.springframework.data.jpa.repository.query.TupleElement<java.lang.String> ) ; TupleConverter org.springframework.data.jpa.repository.query.TupleConverter = new TupleConverter ( org.springframework.data.jpa.repository.query.ReturnedType ) ; assertThat ( org.springframework.data.jpa.repository.query.TupleConverter . convert ( org.springframework.data.jpa.repository.query.Tuple ) , is ( nullValue ( ) ) ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( )  <METHOD_END>
