<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfigurationTests.HazelcastConfiguration .class ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.hazelcast.EntityManagerFactoryDependsOnPostProcessor> ( ) ) . containsKey ( STRING ) ; assertThat ( java.util.List<java.lang.String> ( ) ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfigurationTests.HazelcastCustomNameConfiguration .class ) ; assertThat ( java.util.List<java.lang.String> ( ) ) . doesNotContain ( STRING ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.hazelcast.EntityManagerFactoryDependsOnPostProcessor> ( ) ) . doesNotContainKey ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( null ) ; assertThat ( java.util.List<java.lang.String> ( ) ) . doesNotContain ( STRING ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.hazelcast.EntityManagerFactoryDependsOnPostProcessor> ( ) ) . doesNotContainKey ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext . register ( org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfigurationTests.HazelcastConfiguration .class , HazelcastJpaDependencyAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext . refresh ( ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.hazelcast.EntityManagerFactoryDependsOnPostProcessor> ( ) ) . doesNotContainKey ( STRING ) ; }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.hazelcast.EntityManagerFactoryDependsOnPostProcessor> < java.lang.String , EntityManagerFactoryDependsOnPostProcessor > java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.hazelcast.EntityManagerFactoryDependsOnPostProcessor> ( ) { return this . org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext . getBeansOfType ( EntityManagerFactoryDependsOnPostProcessor .class ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { java.lang.String [] java.lang.String[] = this . org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext . getBeanDefinition ( STRING ) . getDependsOn ( ) ; return java.lang.String[] != null ? java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) : java.util.Collections .< java.lang.String > java.util.List<java.lang.String> ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; if ( java.lang.Class<> != null ) { org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext . register ( java.lang.Class<> ) ; } org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext . register ( EmbeddedDataSourceConfiguration .class , DataSourceAutoConfiguration .class , HibernateJpaAutoConfiguration .class ) ; org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext . register ( HazelcastJpaDependencyAutoConfiguration .class ) ; org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext . refresh ( ) ; this . org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.hazelcast.AnnotationConfigApplicationContext ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.hazelcast.HazelcastInstance org.springframework.boot.autoconfigure.hazelcast.HazelcastInstance ( ) { return mock ( HazelcastInstance .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.hazelcast.HazelcastInstance org.springframework.boot.autoconfigure.hazelcast.HazelcastInstance ( ) { return mock ( HazelcastInstance .class ) ; }  <METHOD_END>
