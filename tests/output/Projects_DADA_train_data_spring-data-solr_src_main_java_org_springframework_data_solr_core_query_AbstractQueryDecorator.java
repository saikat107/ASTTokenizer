<METHOD_START> public void ( Query org.springframework.data.solr.core.query.Query ) { Assert . notNull ( org.springframework.data.solr.core.query.Query , STRING ) ; this . org.springframework.data.solr.core.query.Query = org.springframework.data.solr.core.query.Query ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.SolrDataQuery > T T ( Criteria org.springframework.data.solr.core.query.Criteria ) { return this . org.springframework.data.solr.core.query.Query . addCriteria ( org.springframework.data.solr.core.query.Criteria ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.Criteria org.springframework.data.solr.core.query.Criteria ( ) { return this . org.springframework.data.solr.core.query.Query . getCriteria ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Join org.springframework.data.solr.core.query.Join ) { this . org.springframework.data.solr.core.query.Query . setJoin ( org.springframework.data.solr.core.query.Join ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.Join org.springframework.data.solr.core.query.Join ( ) { return this . org.springframework.data.solr.core.query.Query . getJoin ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( Field org.springframework.data.solr.core.query.Field ) { return this . org.springframework.data.solr.core.query.Query . addProjectionOnField ( org.springframework.data.solr.core.query.Field ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( Pageable org.springframework.data.solr.core.query.Pageable ) { return this . org.springframework.data.solr.core.query.Query . setPageRequest ( org.springframework.data.solr.core.query.Pageable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( Field org.springframework.data.solr.core.query.Field ) { return this . org.springframework.data.solr.core.query.Query . addGroupByField ( org.springframework.data.solr.core.query.Field ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( FilterQuery org.springframework.data.solr.core.query.FilterQuery ) { return this . org.springframework.data.solr.core.query.Query . addFilterQuery ( org.springframework.data.solr.core.query.FilterQuery ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( java.lang.Integer java.lang.Integer ) { return this . org.springframework.data.solr.core.query.Query . setTimeAllowed ( java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.data.solr.core.query.FilterQuery> < FilterQuery > java.util.List<org.springframework.data.solr.core.query.FilterQuery> ( ) { return this . org.springframework.data.solr.core.query.Query . getFilterQueries ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated @ java.lang.Override public org.springframework.data.solr.core.query.Pageable org.springframework.data.solr.core.query.Pageable ( ) { return this . org.springframework.data.solr.core.query.Query . getPageRequest ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.data.solr.core.query.Field> < Field > java.util.List<org.springframework.data.solr.core.query.Field> ( ) { return this . org.springframework.data.solr.core.query.Query . getGroupByFields ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.data.solr.core.query.Field> < Field > java.util.List<org.springframework.data.solr.core.query.Field> ( ) { return this . org.springframework.data.solr.core.query.Query . getProjectionOnFields ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( Sort org.springframework.data.solr.core.query.Sort ) { return this . org.springframework.data.solr.core.query.Query . addSort ( org.springframework.data.solr.core.query.Sort ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.Sort org.springframework.data.solr.core.query.Sort ( ) { return this . org.springframework.data.solr.core.query.Query . getSort ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return this . org.springframework.data.solr.core.query.Query . getTimeAllowed ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Operator org.springframework.data.solr.core.query.Operator ) { this . org.springframework.data.solr.core.query.Query . setDefaultOperator ( org.springframework.data.solr.core.query.Operator ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.Operator org.springframework.data.solr.core.query.Operator ( ) { return this . org.springframework.data.solr.core.query.Query . getDefaultOperator ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.data.solr.core.query.Query . getDefType ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . org.springframework.data.solr.core.query.Query . setDefType ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.data.solr.core.query.Query . getRequestHandler ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . org.springframework.data.solr.core.query.Query . setRequestHandler ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( java.lang.Long java.lang.Long ) { return this . org.springframework.data.solr.core.query.Query . setOffset ( java.lang.Long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( java.lang.Integer java.lang.Integer ) { return this . org.springframework.data.solr.core.query.Query . setRows ( java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Long java.lang.Long ( ) { return this . org.springframework.data.solr.core.query.Query . getOffset ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return this . org.springframework.data.solr.core.query.Query . getRows ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( GroupOptions org.springframework.data.solr.core.query.GroupOptions ) { return org.springframework.data.solr.core.query.Query . setGroupOptions ( org.springframework.data.solr.core.query.GroupOptions ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( ) { return org.springframework.data.solr.core.query.Query . getGroupOptions ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( StatsOptions org.springframework.data.solr.core.query.StatsOptions ) { return org.springframework.data.solr.core.query.Query . setStatsOptions ( org.springframework.data.solr.core.query.StatsOptions ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.StatsOptions org.springframework.data.solr.core.query.StatsOptions ( ) { return org.springframework.data.solr.core.query.Query . getStatsOptions ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends org.springframework.data.solr.core.query.Query > T T ( SpellcheckOptions org.springframework.data.solr.core.query.SpellcheckOptions ) { return org.springframework.data.solr.core.query.Query . setSpellcheckOptions ( org.springframework.data.solr.core.query.SpellcheckOptions ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.query.SpellcheckOptions org.springframework.data.solr.core.query.SpellcheckOptions ( ) { return org.springframework.data.solr.core.query.Query . getSpellcheckOptions ( ) ; }  <METHOD_END>
