<METHOD_START> @ Before public void void ( ) { org.springframework.data.mongodb.config.ServerAddressPropertyEditor = new ServerAddressPropertyEditor ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; void ( java.lang.String , java.lang.String ) ; org.springframework.data.mongodb.config.ServerAddressPropertyEditor . setAsText ( java.lang.String + STRING + java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.UnknownHostException { org.springframework.data.mongodb.config.ServerAddressPropertyEditor . setAsText ( STRING ) ; void ( org.springframework.data.mongodb.config.ServerAddressPropertyEditor . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.UnknownHostException { org.springframework.data.mongodb.config.ServerAddressPropertyEditor . setAsText ( STRING ) ; void ( org.springframework.data.mongodb.config.ServerAddressPropertyEditor . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.config.ServerAddressPropertyEditor . setAsText ( STRING ) ; assertNull ( org.springframework.data.mongodb.config.ServerAddressPropertyEditor . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.UnknownHostException { java.lang.String java.lang.String = STRING ; org.springframework.data.mongodb.config.ServerAddressPropertyEditor . setAsText ( java.lang.String ) ; void ( java.lang.String , null , org.springframework.data.mongodb.config.ServerAddressPropertyEditor . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.UnknownHostException { java.lang.String java.lang.String = STRING ; int int = NUMBER ; org.springframework.data.mongodb.config.ServerAddressPropertyEditor . setAsText ( java.lang.String + STRING + int ) ; void ( java.lang.String , int , org.springframework.data.mongodb.config.ServerAddressPropertyEditor . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.UnknownHostException { java.lang.String java.lang.String = STRING ; org.springframework.data.mongodb.config.ServerAddressPropertyEditor . setAsText ( java.lang.String ) ; void ( java.lang.String , null , org.springframework.data.mongodb.config.ServerAddressPropertyEditor . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.UnknownHostException { java.lang.String java.lang.String = STRING ; org.springframework.data.mongodb.config.ServerAddressPropertyEditor . setAsText ( java.lang.String ) ; void ( java.lang.String , null , org.springframework.data.mongodb.config.ServerAddressPropertyEditor . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.UnknownHostException { org.springframework.data.mongodb.config.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; java.lang.String java.lang.String = STRING ; org.springframework.data.mongodb.config.ServerAddressPropertyEditor . setAsText ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.UnknownHostException { java.lang.String java.lang.String = STRING ; int int = NUMBER ; org.springframework.data.mongodb.config.ServerAddressPropertyEditor . setAsText ( java.lang.String + STRING + int ) ; void ( java.lang.String , int , org.springframework.data.mongodb.config.ServerAddressPropertyEditor . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.UnknownHostException { java.lang.String java.lang.String = STRING ; int int = NUMBER ; org.springframework.data.mongodb.config.ServerAddressPropertyEditor . setAsText ( java.lang.String + STRING + int ) ; void ( java.lang.String , int , org.springframework.data.mongodb.config.ServerAddressPropertyEditor . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.Object java.lang.Object ) throws java.net.UnknownHostException { void ( STRING , null , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.String java.lang.String , java.lang.Integer java.lang.Integer , java.lang.Object java.lang.Object )			throws java.net.UnknownHostException { assertThat ( java.lang.Object , is ( instanceOf ( ServerAddress [] .class ) ) ) ; java.util.Collection<org.springframework.data.mongodb.config.ServerAddress> < ServerAddress > java.util.Collection<org.springframework.data.mongodb.config.ServerAddress> = java.util.Arrays . java.util.List<T> ( ( ServerAddress [] ) java.lang.Object ) ; assertThat ( java.util.Collection<org.springframework.data.mongodb.config.ServerAddress> , hasSize ( NUMBER ) ) ; if ( java.lang.Integer == null ) { assertThat ( java.util.Collection<org.springframework.data.mongodb.config.ServerAddress> , hasItem ( new ServerAddress ( java.net.InetAddress . java.net.InetAddress ( java.lang.String ) ) ) ) ; } else { assertThat ( java.util.Collection<org.springframework.data.mongodb.config.ServerAddress> , hasItem ( new ServerAddress ( java.net.InetAddress . java.net.InetAddress ( java.lang.String ) , java.lang.Integer ) ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String ... java.lang.String[] ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { try { java.net.InetAddress . java.net.InetAddress ( java.lang.String ) ; Assert . fail ( STRING + java.lang.String + STRING ) ; } catch ( java.net.UnknownHostException java.net.UnknownHostException ) { } } }  <METHOD_END>
