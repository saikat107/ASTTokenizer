<METHOD_START> @ Before public void void ( ) { this . org.springframework.data.mongodb.config.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; this . org.springframework.data.mongodb.config.BeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.data.mongodb.config.DefaultListableBeanFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.config.BeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( STRING ) ) ; BeanDefinition org.springframework.data.mongodb.config.BeanDefinition = org.springframework.data.mongodb.config.DefaultListableBeanFactory . getBeanDefinition ( STRING ) ; java.util.List<org.springframework.data.mongodb.config.PropertyValue> < PropertyValue > java.util.List<org.springframework.data.mongodb.config.PropertyValue> = org.springframework.data.mongodb.config.BeanDefinition . getPropertyValues ( ) . getPropertyValueList ( ) ; assertThat ( java.util.List<org.springframework.data.mongodb.config.PropertyValue> . get ( NUMBER ) . getValue ( ) , instanceOf ( BeanDefinition .class ) ) ; BeanDefinition org.springframework.data.mongodb.config.BeanDefinition = ( BeanDefinition ) java.util.List<org.springframework.data.mongodb.config.PropertyValue> . get ( NUMBER ) . getValue ( ) ; assertThat ( org.springframework.data.mongodb.config.BeanDefinition . getPropertyValues ( ) . getPropertyValueList ( ) , hasItem ( new PropertyValue ( STRING , STRING ) ) ) ; org.springframework.data.mongodb.config.DefaultListableBeanFactory . getBean ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.config.BeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( STRING ) ) ; AbstractApplicationContext org.springframework.data.mongodb.config.AbstractApplicationContext = new GenericApplicationContext ( org.springframework.data.mongodb.config.DefaultListableBeanFactory ) ; org.springframework.data.mongodb.config.AbstractApplicationContext . refresh ( ) ; assertThat ( org.springframework.data.mongodb.config.AbstractApplicationContext . getBean ( STRING , Mongo .class ) , is ( notNullValue ( ) ) ) ; org.springframework.data.mongodb.config.AbstractApplicationContext . close ( ) ; }  <METHOD_END>
