<METHOD_START> @ java.lang.Override public synchronized java.lang.String java.lang.String ( java.util.logging.LogRecord java.util.logging.LogRecord ) { this . java.util.Date . void ( java.util.logging.LogRecord . long ( ) ) ; java.lang.String java.lang.String = java.util.logging.LogRecord . java.lang.String ( ) ; java.lang.String java.lang.String = java.lang.String ( java.util.logging.LogRecord ) ; java.lang.String java.lang.String = java.lang.String ( java.util.logging.LogRecord ) ; java.lang.String java.lang.String = java.lang.String ( ) ; return java.lang.String . java.lang.String ( this . java.lang.String , this . java.util.Date , java.lang.String , java.util.logging.LogRecord . java.lang.String ( ) , java.util.logging.LogRecord . java.util.logging.Level ( ) . java.lang.String ( ) , java.lang.String , java.lang.String , java.lang.String , this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.util.logging.LogRecord java.util.logging.LogRecord ) { if ( java.util.logging.LogRecord . java.lang.Throwable ( ) == null ) { return STRING ; } java.io.StringWriter java.io.StringWriter = new java.io.StringWriter ( ) ; java.io.PrintWriter java.io.PrintWriter = new java.io.PrintWriter ( java.io.StringWriter ) ; java.io.PrintWriter . void ( ) ; java.util.logging.LogRecord . java.lang.Throwable ( ) . void ( java.io.PrintWriter ) ; java.io.PrintWriter . void ( ) ; return java.io.StringWriter . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = java.lang.Thread . java.lang.Thread ( ) . java.lang.String ( ) ; return ( java.lang.String == null ? STRING : java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String java.lang.String = null ; try { java.lang.String = java.lang.System . java.lang.String ( java.lang.String ) ; } catch ( java.lang.Exception java.lang.Exception ) { } if ( java.lang.String == null ) { java.lang.String = java.lang.String ; } return java.lang.System . java.lang.String ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
