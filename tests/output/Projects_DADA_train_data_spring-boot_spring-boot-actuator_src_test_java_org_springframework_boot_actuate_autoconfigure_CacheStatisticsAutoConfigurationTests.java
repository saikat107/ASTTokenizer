<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsAutoConfigurationTests.JCacheCacheConfig .class ) ; CacheStatisticsProvider org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( STRING , CacheStatisticsProvider .class ) ; void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider , false ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsAutoConfigurationTests.EhCacheConfig .class ) ; CacheStatisticsProvider org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( STRING , CacheStatisticsProvider .class ) ; void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsAutoConfigurationTests.HazelcastConfig .class ) ; CacheStatisticsProvider org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( STRING , CacheStatisticsProvider .class ) ; void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsAutoConfigurationTests.InfinispanConfig .class ) ; CacheStatisticsProvider org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( STRING , CacheStatisticsProvider .class ) ; void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsAutoConfigurationTests.CaffeineCacheConfig .class ) ; CacheStatisticsProvider org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( STRING , CacheStatisticsProvider .class ) ; void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider , true ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsAutoConfigurationTests.ConcurrentMapConfig .class ) ; CacheStatisticsProvider org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( STRING , CacheStatisticsProvider .class ) ; Cache org.springframework.boot.actuate.autoconfigure.Cache = org.springframework.boot.actuate.autoconfigure.Cache ( STRING ) ; CacheStatistics org.springframework.boot.actuate.autoconfigure.CacheStatistics = org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider . getCacheStatistics ( this . org.springframework.boot.actuate.autoconfigure.CacheManager , org.springframework.boot.actuate.autoconfigure.Cache ) ; void ( org.springframework.boot.actuate.autoconfigure.CacheStatistics , NUMBER , null , null ) ; void ( org.springframework.boot.actuate.autoconfigure.Cache , STRING , STRING , STRING , STRING , STRING ) ; CacheStatistics org.springframework.boot.actuate.autoconfigure.CacheStatistics = org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider . getCacheStatistics ( this . org.springframework.boot.actuate.autoconfigure.CacheManager , org.springframework.boot.actuate.autoconfigure.Cache ) ; void ( org.springframework.boot.actuate.autoconfigure.CacheStatistics , NUMBER , null , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.actuate.autoconfigure.CacheStatisticsAutoConfigurationTests.NoOpCacheConfig .class ) ; CacheStatisticsProvider org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( STRING , CacheStatisticsProvider .class ) ; Cache org.springframework.boot.actuate.autoconfigure.Cache = org.springframework.boot.actuate.autoconfigure.Cache ( STRING ) ; CacheStatistics org.springframework.boot.actuate.autoconfigure.CacheStatistics = org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider . getCacheStatistics ( this . org.springframework.boot.actuate.autoconfigure.CacheManager , org.springframework.boot.actuate.autoconfigure.Cache ) ; void ( org.springframework.boot.actuate.autoconfigure.CacheStatistics , null , null , null ) ; void ( org.springframework.boot.actuate.autoconfigure.Cache , STRING , STRING , STRING , STRING , STRING ) ; CacheStatistics org.springframework.boot.actuate.autoconfigure.CacheStatistics = org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider . getCacheStatistics ( this . org.springframework.boot.actuate.autoconfigure.CacheManager , org.springframework.boot.actuate.autoconfigure.Cache ) ; void ( org.springframework.boot.actuate.autoconfigure.CacheStatistics , null , null , null ) ; }  <METHOD_END>
<METHOD_START> private void void ( CacheStatisticsProvider org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider , boolean boolean ) { Cache org.springframework.boot.actuate.autoconfigure.Cache = org.springframework.boot.actuate.autoconfigure.Cache ( STRING ) ; CacheStatistics org.springframework.boot.actuate.autoconfigure.CacheStatistics = org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider . getCacheStatistics ( this . org.springframework.boot.actuate.autoconfigure.CacheManager , org.springframework.boot.actuate.autoconfigure.Cache ) ; void ( org.springframework.boot.actuate.autoconfigure.CacheStatistics , ( boolean ? NUMBER : null ) , null , null ) ; void ( org.springframework.boot.actuate.autoconfigure.Cache , STRING , STRING , STRING , STRING , STRING , STRING ) ; CacheStatistics org.springframework.boot.actuate.autoconfigure.CacheStatistics = org.springframework.boot.actuate.autoconfigure.CacheStatisticsProvider . getCacheStatistics ( this . org.springframework.boot.actuate.autoconfigure.CacheManager , org.springframework.boot.actuate.autoconfigure.Cache ) ; void ( org.springframework.boot.actuate.autoconfigure.CacheStatistics , ( boolean ? NUMBER : null ) , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> private void void ( CacheStatistics org.springframework.boot.actuate.autoconfigure.CacheStatistics , java.lang.Long java.lang.Long , java.lang.Double java.lang.Double , java.lang.Double java.lang.Double ) { assertThat ( org.springframework.boot.actuate.autoconfigure.CacheStatistics ) . isNotNull ( ) ; assertThat ( org.springframework.boot.actuate.autoconfigure.CacheStatistics . getSize ( ) ) . isEqualTo ( java.lang.Long ) ; void ( STRING + org.springframework.boot.actuate.autoconfigure.CacheStatistics , java.lang.Double , org.springframework.boot.actuate.autoconfigure.CacheStatistics . getHitRatio ( ) ) ; void ( STRING + org.springframework.boot.actuate.autoconfigure.CacheStatistics , java.lang.Double , org.springframework.boot.actuate.autoconfigure.CacheStatistics . getMissRatio ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.lang.Double java.lang.Double , java.lang.Double java.lang.Double ) { if ( java.lang.Double == null || java.lang.Double == null ) { assertThat ( java.lang.Double ) . as ( java.lang.String ) . isEqualTo ( java.lang.Double ) ; } else { assertThat ( java.lang.Double ) . as ( java.lang.String ) . isEqualTo ( java.lang.Double , offset ( NUMBER ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( Cache org.springframework.boot.actuate.autoconfigure.Cache , java.lang.String ... java.lang.String[] ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { Cache . Cache Cache.ValueWrapper = org.springframework.boot.actuate.autoconfigure.Cache . get ( java.lang.String ) ; if ( Cache.ValueWrapper == null ) { org.springframework.boot.actuate.autoconfigure.Cache . put ( java.lang.String , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.autoconfigure.Cache org.springframework.boot.actuate.autoconfigure.Cache ( java.lang.String java.lang.String ) { Cache org.springframework.boot.actuate.autoconfigure.Cache = this . org.springframework.boot.actuate.autoconfigure.CacheManager . getCache ( java.lang.String ) ; Assert . notNull ( org.springframework.boot.actuate.autoconfigure.Cache , STRING + java.lang.String + STRING ) ; return org.springframework.boot.actuate.autoconfigure.Cache ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; if ( java.lang.Class<?>[] . int > NUMBER ) { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . register ( java.lang.Class<?>[] ) ; } this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . register ( CacheStatisticsAutoConfiguration .class ) ; this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . refresh ( ) ; this . org.springframework.boot.actuate.autoconfigure.CacheManager = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( CacheManager .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.JCacheCacheManager org.springframework.boot.actuate.autoconfigure.JCacheCacheManager ( ) { javax . javax.cache . javax.cache javax.cache.CacheManager = javax.cache.CacheManager ( ) ; return new JCacheCacheManager ( javax.cache.CacheManager ) ; }  <METHOD_END>
<METHOD_START> @ Bean public javax . javax.cache . javax.cache.CacheManager javax.cache.CacheManager ( ) { javax . javax.cache . javax.cache javax.cache.CacheManager = Caching . getCachingProvider ( HazelcastCachingProvider .class . java.lang.String ( ) ) . getCacheManager ( ) ; MutableConfiguration < java.lang.Object , java.lang.Object > org.springframework.boot.actuate.autoconfigure.MutableConfiguration<java.lang.Object,java.lang.Object> = new MutableConfiguration <> ( ) ; org.springframework.boot.actuate.autoconfigure.MutableConfiguration<java.lang.Object,java.lang.Object> . setStatisticsEnabled ( true ) ; javax.cache.CacheManager . createCache ( STRING , org.springframework.boot.actuate.autoconfigure.MutableConfiguration<java.lang.Object,java.lang.Object> ) ; javax.cache.CacheManager . createCache ( STRING , org.springframework.boot.actuate.autoconfigure.MutableConfiguration<java.lang.Object,java.lang.Object> ) ; return javax.cache.CacheManager ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.EhCacheCacheManager org.springframework.boot.actuate.autoconfigure.EhCacheCacheManager ( ) { return new EhCacheCacheManager ( net.sf.ehcache.CacheManager ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public net . net . net . net.sf.ehcache.CacheManager net.sf.ehcache.CacheManager ( ) { return EhCacheManagerUtils . buildCacheManager ( new ClassPathResource ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.HazelcastCacheManager org.springframework.boot.actuate.autoconfigure.HazelcastCacheManager ( ) java.io.IOException { return new HazelcastCacheManager ( org.springframework.boot.actuate.autoconfigure.HazelcastInstance ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.HazelcastInstance org.springframework.boot.actuate.autoconfigure.HazelcastInstance ( ) java.io.IOException { Resource org.springframework.boot.actuate.autoconfigure.Resource = new ClassPathResource ( STRING ) ; Config org.springframework.boot.actuate.autoconfigure.Config = new XmlConfigBuilder ( org.springframework.boot.actuate.autoconfigure.Resource . getURL ( ) ) . build ( ) ; return Hazelcast . newHazelcastInstance ( org.springframework.boot.actuate.autoconfigure.Config ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.SpringEmbeddedCacheManager org.springframework.boot.actuate.autoconfigure.SpringEmbeddedCacheManager ( ) java.io.IOException { return new SpringEmbeddedCacheManager ( org.springframework.boot.actuate.autoconfigure.EmbeddedCacheManager ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.EmbeddedCacheManager org.springframework.boot.actuate.autoconfigure.EmbeddedCacheManager ( ) java.io.IOException { Resource org.springframework.boot.actuate.autoconfigure.Resource = new ClassPathResource ( STRING ) ; java.io.InputStream java.io.InputStream = org.springframework.boot.actuate.autoconfigure.Resource . getInputStream ( ) ; try { return new DefaultCacheManager ( java.io.InputStream ) ; } finally { java.io.InputStream . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.ConcurrentMapCacheManager org.springframework.boot.actuate.autoconfigure.ConcurrentMapCacheManager ( ) { return new ConcurrentMapCacheManager ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.NoOpCacheManager org.springframework.boot.actuate.autoconfigure.NoOpCacheManager ( ) { return new NoOpCacheManager ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.CaffeineCacheManager org.springframework.boot.actuate.autoconfigure.CaffeineCacheManager ( ) { CaffeineCacheManager org.springframework.boot.actuate.autoconfigure.CaffeineCacheManager = new CaffeineCacheManager ( ) ; org.springframework.boot.actuate.autoconfigure.CaffeineCacheManager . setCaffeine ( Caffeine . newBuilder ( ) . recordStats ( ) ) ; org.springframework.boot.actuate.autoconfigure.CaffeineCacheManager . setCacheNames ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) ) ; return org.springframework.boot.actuate.autoconfigure.CaffeineCacheManager ; }  <METHOD_END>
