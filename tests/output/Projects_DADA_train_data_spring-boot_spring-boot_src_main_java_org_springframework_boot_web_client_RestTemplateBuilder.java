<METHOD_START> public void ( RestTemplateCustomizer ... org.springframework.boot.web.client.RestTemplateCustomizer[] ) { Assert . notNull ( org.springframework.boot.web.client.RestTemplateCustomizer[] , STRING ) ; this . boolean = true ; this . java.lang.String = null ; this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> = null ; this . org.springframework.boot.web.client.ClientHttpRequestFactory = null ; this . org.springframework.boot.web.client.UriTemplateHandler = null ; this . org.springframework.boot.web.client.ResponseErrorHandler = null ; this . org.springframework.boot.web.client.BasicAuthorizationInterceptor = null ; this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> = java.util.Collections . java.util.Set<java.lang.Object> ( new java.util.LinkedHashSet <> ( java.util.Arrays . java.util.List ( org.springframework.boot.web.client.RestTemplateCustomizer[] ) ) ) ; this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> = java.util.Collections .< org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer > java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> ( ) ; this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> = java.util.Collections .< ClientHttpRequestInterceptor > java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ( ) ; }  <METHOD_END>
<METHOD_START> private void ( boolean boolean , java.lang.String java.lang.String , java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory , UriTemplateHandler org.springframework.boot.web.client.UriTemplateHandler , ResponseErrorHandler org.springframework.boot.web.client.ResponseErrorHandler , BasicAuthorizationInterceptor org.springframework.boot.web.client.BasicAuthorizationInterceptor , java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> < RestTemplateCustomizer > java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> < org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer > java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> < ClientHttpRequestInterceptor > java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) { super(); this . boolean = boolean ; this . java.lang.String = java.lang.String ; this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> = java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> ; this . org.springframework.boot.web.client.ClientHttpRequestFactory = org.springframework.boot.web.client.ClientHttpRequestFactory ; this . org.springframework.boot.web.client.UriTemplateHandler = org.springframework.boot.web.client.UriTemplateHandler ; this . org.springframework.boot.web.client.ResponseErrorHandler = org.springframework.boot.web.client.ResponseErrorHandler ; this . org.springframework.boot.web.client.BasicAuthorizationInterceptor = org.springframework.boot.web.client.BasicAuthorizationInterceptor ; this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> = java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> ; this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> = java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> ; this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> = java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( boolean boolean ) { return new org.springframework.boot.web.client.RestTemplateBuilder ( boolean , this . java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( java.lang.String java.lang.String ) { return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( org.springframework.boot.web.client.HttpMessageConverter<?> < ? > ... org.springframework.boot.web.client.HttpMessageConverter<?>[] ) { Assert . notNull ( org.springframework.boot.web.client.HttpMessageConverter<?>[] , STRING ) ; return org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Arrays . java.util.List ( org.springframework.boot.web.client.HttpMessageConverter<?>[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Collection<? extends org.springframework.boot.web.client.HttpMessageConverter<?>> < ? extends HttpMessageConverter < ? > > java.util.Collection<? extends org.springframework.boot.web.client.HttpMessageConverter<?>> ) { Assert . notNull ( java.util.Collection<> , STRING ) ; return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , java.util.Collections . java.util.Set<T> ( new java.util.LinkedHashSet<org.springframework.boot.web.client.HttpMessageConverter<?>> < HttpMessageConverter < ? > > ( java.util.Collection<> ) ) , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( org.springframework.boot.web.client.HttpMessageConverter<?> < ? > ... org.springframework.boot.web.client.HttpMessageConverter<?>[] ) { Assert . notNull ( org.springframework.boot.web.client.HttpMessageConverter<?>[] , STRING ) ; return org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Arrays . java.util.List ( org.springframework.boot.web.client.HttpMessageConverter<?>[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Collection<? extends org.springframework.boot.web.client.HttpMessageConverter<?>> < ? extends HttpMessageConverter < ? > > java.util.Collection<? extends org.springframework.boot.web.client.HttpMessageConverter<?>> ) { Assert . notNull ( java.util.Collection<> , STRING ) ; return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , java.util.Set ( this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , java.util.Collection<> ) , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( ) { return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , java.util.Collections . java.util.Set<java.lang.Object> ( new java.util.LinkedHashSet <> ( new RestTemplate ( ) . getMessageConverters ( ) ) ) , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( ClientHttpRequestInterceptor ... org.springframework.boot.web.client.ClientHttpRequestInterceptor[] ) { Assert . notNull ( org.springframework.boot.web.client.ClientHttpRequestInterceptor[] , STRING ) ; return org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Arrays . java.util.List ( org.springframework.boot.web.client.ClientHttpRequestInterceptor[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Collection<org.springframework.boot.web.client.ClientHttpRequestInterceptor> < ClientHttpRequestInterceptor > java.util.Collection<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) { Assert . notNull ( java.util.Collection<org.springframework.boot.web.client.ClientHttpRequestInterceptor> , STRING ) ; return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , java.util.Collections . java.util.Set<java.lang.Object> ( new java.util.LinkedHashSet <> ( java.util.Collection<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( ClientHttpRequestInterceptor ... org.springframework.boot.web.client.ClientHttpRequestInterceptor[] ) { Assert . notNull ( org.springframework.boot.web.client.ClientHttpRequestInterceptor[] , STRING ) ; return org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Arrays . java.util.List ( org.springframework.boot.web.client.ClientHttpRequestInterceptor[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Collection<? extends org.springframework.boot.web.client.ClientHttpRequestInterceptor> < ? extends ClientHttpRequestInterceptor > java.util.Collection<? extends org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) { Assert . notNull ( java.util.Collection<> , STRING ) ; return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , java.util.Set ( this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> , java.util.Collection<> ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( java.lang.Class<? extends org.springframework.boot.web.client.ClientHttpRequestFactory> < ? extends ClientHttpRequestFactory > java.lang.Class<? extends org.springframework.boot.web.client.ClientHttpRequestFactory> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; return org.springframework.boot.web.client.RestTemplateBuilder ( org.springframework.boot.web.client.ClientHttpRequestFactory ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.web.client.ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory ( java.lang.Class<? extends org.springframework.boot.web.client.ClientHttpRequestFactory> < ? extends ClientHttpRequestFactory > java.lang.Class<? extends org.springframework.boot.web.client.ClientHttpRequestFactory> ) { try { java.lang.reflect.Constructor<?> < ? > java.lang.reflect.Constructor<?> = java.lang.Class<> . java.lang.reflect.Constructor<> ( ) ; java.lang.reflect.Constructor<> . void ( true ) ; return ( ClientHttpRequestFactory ) java.lang.reflect.Constructor<> . newInstance ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.IllegalStateException ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory ) { Assert . notNull ( org.springframework.boot.web.client.ClientHttpRequestFactory , STRING ) ; return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( UriTemplateHandler org.springframework.boot.web.client.UriTemplateHandler ) { Assert . notNull ( org.springframework.boot.web.client.UriTemplateHandler , STRING ) ; return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , this . org.springframework.boot.web.client.ClientHttpRequestFactory , org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( ResponseErrorHandler org.springframework.boot.web.client.ResponseErrorHandler ) { Assert . notNull ( org.springframework.boot.web.client.ResponseErrorHandler , STRING ) ; return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , new BasicAuthorizationInterceptor ( java.lang.String , java.lang.String ) , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( RestTemplateCustomizer ... org.springframework.boot.web.client.RestTemplateCustomizer[] ) { Assert . notNull ( org.springframework.boot.web.client.RestTemplateCustomizer[] , STRING ) ; return org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Arrays . java.util.List ( org.springframework.boot.web.client.RestTemplateCustomizer[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Collection<? extends org.springframework.boot.web.client.RestTemplateCustomizer> < ? extends RestTemplateCustomizer > java.util.Collection<? extends org.springframework.boot.web.client.RestTemplateCustomizer> ) { Assert . notNull ( java.util.Collection<> , STRING ) ; return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , java.util.Collections . java.util.Set<T> ( new java.util.LinkedHashSet<org.springframework.boot.web.client.RestTemplateCustomizer> < RestTemplateCustomizer > ( java.util.Collection<> ) ) , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( RestTemplateCustomizer ... org.springframework.boot.web.client.RestTemplateCustomizer[] ) { Assert . notNull ( org.springframework.boot.web.client.RestTemplateCustomizer[] , STRING ) ; return org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Arrays . java.util.List ( org.springframework.boot.web.client.RestTemplateCustomizer[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( java.util.Collection<? extends org.springframework.boot.web.client.RestTemplateCustomizer> < ? extends RestTemplateCustomizer > java.util.Collection<? extends org.springframework.boot.web.client.RestTemplateCustomizer> ) { Assert . notNull ( java.util.Collection<> , STRING ) ; return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , java.util.Set ( this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , java.util.Collection<> ) , this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( int int ) { return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> ( this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , new org.springframework.boot.web.client.RestTemplateBuilder.ConnectTimeoutRequestFactoryCustomizer ( int ) ) , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.web.client.RestTemplateBuilder ( int int ) { return new org.springframework.boot.web.client.RestTemplateBuilder ( this . boolean , this . java.lang.String , this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> , this . org.springframework.boot.web.client.ClientHttpRequestFactory , this . org.springframework.boot.web.client.UriTemplateHandler , this . org.springframework.boot.web.client.ResponseErrorHandler , this . org.springframework.boot.web.client.BasicAuthorizationInterceptor , this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> , java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> ( this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> , new org.springframework.boot.web.client.RestTemplateBuilder.ReadTimeoutRequestFactoryCustomizer ( int ) ) , this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.client.RestTemplate org.springframework.boot.web.client.RestTemplate ( ) { return T ( RestTemplate .class ) ; }  <METHOD_END>
<METHOD_START> public < T extends org.springframework.boot.web.client.RestTemplate > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) { return org.springframework.boot.web.client.RestTemplate ( BeanUtils . instantiateClass ( java.lang.Class<T> ) ) ; }  <METHOD_END>
<METHOD_START> public < T extends org.springframework.boot.web.client.RestTemplate > T T ( T T ) { void ( T ) ; if ( ! CollectionUtils . isEmpty ( this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> ) ) { T . setMessageConverters ( new java.util.ArrayList <> ( this . java.util.Set<org.springframework.boot.web.client.HttpMessageConverter<?>> ) ) ; } if ( this . org.springframework.boot.web.client.UriTemplateHandler != null ) { T . setUriTemplateHandler ( this . org.springframework.boot.web.client.UriTemplateHandler ) ; } if ( this . org.springframework.boot.web.client.ResponseErrorHandler != null ) { T . setErrorHandler ( this . org.springframework.boot.web.client.ResponseErrorHandler ) ; } if ( this . java.lang.String != null ) { RootUriTemplateHandler . addTo ( T , this . java.lang.String ) ; } if ( this . org.springframework.boot.web.client.BasicAuthorizationInterceptor != null ) { T . getInterceptors ( ) . add ( this . org.springframework.boot.web.client.BasicAuthorizationInterceptor ) ; } if ( ! CollectionUtils . isEmpty ( this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> ) ) { for ( RestTemplateCustomizer org.springframework.boot.web.client.RestTemplateCustomizer : this . java.util.Set<org.springframework.boot.web.client.RestTemplateCustomizer> ) { org.springframework.boot.web.client.RestTemplateCustomizer . customize ( T ) ; } } T . getInterceptors ( ) . addAll ( this . java.util.Set<org.springframework.boot.web.client.ClientHttpRequestInterceptor> ) ; return T ; }  <METHOD_END>
<METHOD_START> private void void ( RestTemplate org.springframework.boot.web.client.RestTemplate ) { ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory = null ; if ( this . org.springframework.boot.web.client.ClientHttpRequestFactory != null ) { org.springframework.boot.web.client.ClientHttpRequestFactory = this . org.springframework.boot.web.client.ClientHttpRequestFactory ; } else if ( this . boolean ) { org.springframework.boot.web.client.ClientHttpRequestFactory = org.springframework.boot.web.client.ClientHttpRequestFactory ( ) ; } if ( org.springframework.boot.web.client.ClientHttpRequestFactory != null ) { ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory = org.springframework.boot.web.client.ClientHttpRequestFactory ( org.springframework.boot.web.client.ClientHttpRequestFactory ) ; for ( org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer : this . java.util.Set<org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer> ) { org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer . void ( org.springframework.boot.web.client.ClientHttpRequestFactory ) ; } org.springframework.boot.web.client.RestTemplate . setRequestFactory ( org.springframework.boot.web.client.ClientHttpRequestFactory ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.web.client.ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory ( ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory ) { if ( ! ( org.springframework.boot.web.client.ClientHttpRequestFactory instanceof AbstractClientHttpRequestFactoryWrapper ) ) { return org.springframework.boot.web.client.ClientHttpRequestFactory ; } ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory = org.springframework.boot.web.client.ClientHttpRequestFactory ; java.lang.reflect.Field java.lang.reflect.Field = ReflectionUtils . findField ( AbstractClientHttpRequestFactoryWrapper .class , STRING ) ; ReflectionUtils . makeAccessible ( java.lang.reflect.Field ) ; do { org.springframework.boot.web.client.ClientHttpRequestFactory = ( ClientHttpRequestFactory ) ReflectionUtils . getField ( java.lang.reflect.Field , org.springframework.boot.web.client.ClientHttpRequestFactory ) ; } while ( org.springframework.boot.web.client.ClientHttpRequestFactory instanceof AbstractClientHttpRequestFactoryWrapper ); return org.springframework.boot.web.client.ClientHttpRequestFactory ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.web.client.ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory ( ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { java.lang.ClassLoader java.lang.ClassLoader = java.lang.Class<? extends org.springframework.boot.web.client.RestTemplateBuilder> ( ) . java.lang.ClassLoader ( ) ; if ( ClassUtils . isPresent ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.lang.ClassLoader ) ) { java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . resolveClassName ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.lang.ClassLoader ) ; return ( ClientHttpRequestFactory ) BeanUtils . instantiateClass ( java.lang.Class<> ) ; } } return new SimpleClientHttpRequestFactory ( ) ; }  <METHOD_END>
<METHOD_START> private < T > java.util.Set<T> < T > java.util.Set<T> ( java.util.Set<T> < T > java.util.Set<T> , T T ) { java.util.Set<T> < T > java.util.Set<T> = new java.util.LinkedHashSet<T> <> ( java.util.Set<T> == null ? java.util.Collections .< T > java.util.Set<T> ( ) : java.util.Set<T> ) ; java.util.Set<T> . boolean ( T ) ; return java.util.Collections . java.util.Set<T> ( java.util.Set<T> ) ; }  <METHOD_END>
<METHOD_START> private < T > java.util.Set<T> < T > java.util.Set<T> ( java.util.Set<T> < T > java.util.Set<T> , java.util.Collection<? extends T> < ? extends T > java.util.Collection<? extends T> ) { java.util.Set<T> < T > java.util.Set<T> = new java.util.LinkedHashSet<T> <> ( java.util.Set<T> == null ? java.util.Collections .< T > java.util.Set<T> ( ) : java.util.Set<T> ) ; java.util.Set<T> . boolean ( java.util.Collection<> ) ; return java.util.Collections . java.util.Set<T> ( java.util.Set<T> ) ; }  <METHOD_END>
<METHOD_START> void void ( ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory );  <METHOD_END>
<METHOD_START> void ( int int , java.lang.String java.lang.String ) { this . int = int ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory ) { ReflectionUtils . invokeMethod ( java.lang.reflect.Method ( org.springframework.boot.web.client.ClientHttpRequestFactory ) , org.springframework.boot.web.client.ClientHttpRequestFactory , this . int ) ; }  <METHOD_END>
<METHOD_START> private java.lang.reflect.Method java.lang.reflect.Method ( ClientHttpRequestFactory org.springframework.boot.web.client.ClientHttpRequestFactory ) { java.lang.reflect.Method java.lang.reflect.Method = ReflectionUtils . findMethod ( org.springframework.boot.web.client.ClientHttpRequestFactory . getClass ( ) , this . java.lang.String , int .class ) ; if ( java.lang.reflect.Method != null ) { return java.lang.reflect.Method ; } throw new java.lang.IllegalStateException ( STRING + org.springframework.boot.web.client.ClientHttpRequestFactory . getClass ( ) + STRING + this . java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> void ( int int ) { super( int , STRING ); }  <METHOD_END>
<METHOD_START> void ( int int ) { super( int , STRING ); }  <METHOD_END>
