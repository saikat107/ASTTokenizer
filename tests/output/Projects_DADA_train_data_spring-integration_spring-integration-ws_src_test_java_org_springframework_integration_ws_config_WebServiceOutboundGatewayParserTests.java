<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; java.lang.Object java.lang.Object = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( java.lang.Object , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; Assert . assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; AbstractHeaderMapper . AbstractHeaderMapper AbstractHeaderMapper.HeaderMatcher = TestUtils . getPropertyValue ( org.springframework.integration.ws.config.AbstractEndpoint , STRING , AbstractHeaderMapper . AbstractHeaderMapper .class ) ; assertTrue ( AbstractHeaderMapper.HeaderMatcher . matchHeader ( STRING ) ) ; assertFalse ( AbstractHeaderMapper.HeaderMatcher . matchHeader ( STRING ) ) ; AbstractHeaderMapper . AbstractHeaderMapper AbstractHeaderMapper.HeaderMatcher = TestUtils . getPropertyValue ( org.springframework.integration.ws.config.AbstractEndpoint , STRING , AbstractHeaderMapper . AbstractHeaderMapper .class ) ; assertFalse ( AbstractHeaderMapper.HeaderMatcher . matchHeader ( STRING ) ) ; assertTrue ( AbstractHeaderMapper.HeaderMatcher . matchHeader ( STRING ) ) ; java.lang.Long java.lang.Long = TestUtils . getPropertyValue ( java.lang.Object , STRING , java.lang.Long .class ) ; assertEquals ( java.lang.Long . java.lang.Long ( NUMBER ) , java.lang.Long ) ; assertSame ( this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING ) , TestUtils . getPropertyValue ( java.lang.Object , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; Assert . assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; assertEquals ( STRING , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) . getClass ( ) . getSimpleName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; SourceExtractor < ? > org.springframework.integration.ws.config.SourceExtractor<?> = ( SourceExtractor < ? > ) org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( org.springframework.integration.ws.config.SourceExtractor<> , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; WebServiceMessageCallback org.springframework.integration.ws.config.WebServiceMessageCallback = ( WebServiceMessageCallback ) org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( org.springframework.integration.ws.config.WebServiceMessageCallback , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; WebServiceMessageFactory org.springframework.integration.ws.config.WebServiceMessageFactory = ( WebServiceMessageFactory ) org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( org.springframework.integration.ws.config.WebServiceMessageFactory , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; SourceExtractor < ? > org.springframework.integration.ws.config.SourceExtractor<?> = ( SourceExtractor < ? > ) org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; assertEquals ( org.springframework.integration.ws.config.SourceExtractor<> , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; WebServiceMessageFactory org.springframework.integration.ws.config.WebServiceMessageFactory = ( WebServiceMessageFactory ) org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( org.springframework.integration.ws.config.WebServiceMessageFactory , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; FaultMessageResolver org.springframework.integration.ws.config.FaultMessageResolver = ( FaultMessageResolver ) org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( org.springframework.integration.ws.config.FaultMessageResolver , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; WebServiceMessageSender org.springframework.integration.ws.config.WebServiceMessageSender = ( WebServiceMessageSender ) org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( org.springframework.integration.ws.config.WebServiceMessageSender , ( ( WebServiceMessageSender [] ) org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; WebServiceMessageSender org.springframework.integration.ws.config.WebServiceMessageSender = ( WebServiceMessageSender ) org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( org.springframework.integration.ws.config.WebServiceMessageSender , ( ( WebServiceMessageSender [] ) org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) [ NUMBER ] ) ; assertEquals ( STRING , NUMBER , ( ( WebServiceMessageSender [] ) org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) . length ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; ClientInterceptor org.springframework.integration.ws.config.ClientInterceptor = org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , ClientInterceptor .class ) ; assertEquals ( org.springframework.integration.ws.config.ClientInterceptor , ( ( ClientInterceptor [] ) org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; ClientInterceptor org.springframework.integration.ws.config.ClientInterceptor = org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , ClientInterceptor .class ) ; assertEquals ( org.springframework.integration.ws.config.ClientInterceptor , ( ( ClientInterceptor [] ) org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) [ NUMBER ] ) ; assertEquals ( STRING , NUMBER , ( ( ClientInterceptor [] ) org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) . length ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( PollingConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( PeriodicTrigger .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; PeriodicTrigger org.springframework.integration.ws.config.PeriodicTrigger = ( PeriodicTrigger ) java.lang.Object ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.ws.config.PeriodicTrigger ) ; assertEquals ( STRING , NUMBER , ( ( java.lang.Long ) org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) . long ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; assertEquals ( NUMBER , new DirectFieldAccessor ( java.lang.Object ) . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.integration.ws.config.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.ws.config.WebServiceOutboundGatewayParserTests> ( ) ) ; AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = ( AbstractEndpoint ) org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( org.springframework.integration.ws.config.AbstractEndpoint , STRING ) ; Marshaller org.springframework.integration.ws.config.Marshaller = org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING , Marshaller .class ) ; assertSame ( org.springframework.integration.ws.config.Marshaller , TestUtils . getPropertyValue ( java.lang.Object , STRING , Marshaller .class ) ) ; assertSame ( org.springframework.integration.ws.config.Marshaller , TestUtils . getPropertyValue ( java.lang.Object , STRING , Unmarshaller .class ) ) ; org.springframework.integration.ws.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.integration.ws.config.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.ws.config.WebServiceOutboundGatewayParserTests> ( ) ) ; AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = ( AbstractEndpoint ) org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( org.springframework.integration.ws.config.AbstractEndpoint , STRING ) ; Marshaller org.springframework.integration.ws.config.Marshaller = org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING , Marshaller .class ) ; Unmarshaller org.springframework.integration.ws.config.Unmarshaller = org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING , Unmarshaller .class ) ; assertSame ( org.springframework.integration.ws.config.Marshaller , TestUtils . getPropertyValue ( java.lang.Object , STRING , Marshaller .class ) ) ; assertSame ( org.springframework.integration.ws.config.Unmarshaller , TestUtils . getPropertyValue ( java.lang.Object , STRING , Unmarshaller .class ) ) ; org.springframework.integration.ws.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.integration.ws.config.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.ws.config.WebServiceOutboundGatewayParserTests> ( ) ) ; AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = ( AbstractEndpoint ) org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( org.springframework.integration.ws.config.AbstractEndpoint , STRING ) ; assertEquals ( MarshallingWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; WebServiceMessageCallback org.springframework.integration.ws.config.WebServiceMessageCallback = ( WebServiceMessageCallback ) org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING ) ; assertEquals ( org.springframework.integration.ws.config.WebServiceMessageCallback , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; org.springframework.integration.ws.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.integration.ws.config.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.ws.config.WebServiceOutboundGatewayParserTests> ( ) ) ; AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = ( AbstractEndpoint ) org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( org.springframework.integration.ws.config.AbstractEndpoint , STRING ) ; Marshaller org.springframework.integration.ws.config.Marshaller = org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING , Marshaller .class ) ; assertSame ( org.springframework.integration.ws.config.Marshaller , TestUtils . getPropertyValue ( java.lang.Object , STRING , Marshaller .class ) ) ; assertSame ( org.springframework.integration.ws.config.Marshaller , TestUtils . getPropertyValue ( java.lang.Object , STRING , Unmarshaller .class ) ) ; WebServiceMessageFactory org.springframework.integration.ws.config.WebServiceMessageFactory = ( WebServiceMessageFactory ) org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING ) ; assertEquals ( org.springframework.integration.ws.config.WebServiceMessageFactory , TestUtils . getPropertyValue ( java.lang.Object , STRING ) ) ; org.springframework.integration.ws.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.integration.ws.config.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.ws.config.WebServiceOutboundGatewayParserTests> ( ) ) ; AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = ( AbstractEndpoint ) org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( org.springframework.integration.ws.config.AbstractEndpoint , STRING ) ; Marshaller org.springframework.integration.ws.config.Marshaller = org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING , Marshaller .class ) ; Unmarshaller org.springframework.integration.ws.config.Unmarshaller = org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING , Unmarshaller .class ) ; assertSame ( org.springframework.integration.ws.config.Marshaller , TestUtils . getPropertyValue ( java.lang.Object , STRING , Marshaller .class ) ) ; assertSame ( org.springframework.integration.ws.config.Unmarshaller , TestUtils . getPropertyValue ( java.lang.Object , STRING , Unmarshaller .class ) ) ; WebServiceMessageFactory org.springframework.integration.ws.config.WebServiceMessageFactory = org.springframework.integration.ws.config.ConfigurableApplicationContext . getBean ( STRING , WebServiceMessageFactory .class ) ; assertEquals ( org.springframework.integration.ws.config.WebServiceMessageFactory , TestUtils . getPropertyValue ( java.lang.Object , STRING ) ) ; org.springframework.integration.ws.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ; StubDestinationProvider org.springframework.integration.ws.config.StubDestinationProvider = ( StubDestinationProvider ) org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING ) ; assertEquals ( SimpleWebServiceOutboundGateway .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DirectFieldAccessor org.springframework.integration.ws.config.DirectFieldAccessor = new DirectFieldAccessor ( java.lang.Object ) ; assertEquals ( STRING , org.springframework.integration.ws.config.StubDestinationProvider , org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertNull ( org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.ws.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) . getPropertyValue ( STRING ) ; assertEquals ( STRING , org.springframework.integration.ws.config.StubDestinationProvider , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { int = NUMBER ; AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; MessageHandler org.springframework.integration.ws.config.MessageHandler = TestUtils . getPropertyValue ( org.springframework.integration.ws.config.AbstractEndpoint , STRING , MessageHandler .class ) ; org.springframework.integration.ws.config.MessageHandler . handleMessage ( new GenericMessage < java.lang.String > ( STRING ) ) ; assertEquals ( NUMBER , int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { int = NUMBER ; MessageChannel org.springframework.integration.ws.config.MessageChannel = org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , MessageChannel .class ) ; org.springframework.integration.ws.config.MessageChannel . send ( new GenericMessage < java.lang.String > ( STRING ) ) ; assertEquals ( NUMBER , int ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { AbstractEndpoint org.springframework.integration.ws.config.AbstractEndpoint = this . org.springframework.integration.ws.config.ApplicationContext . getBean ( STRING , AbstractEndpoint .class ) ; assertEquals ( EventDrivenConsumer .class , org.springframework.integration.ws.config.AbstractEndpoint . getClass ( ) ) ; MessageHandler org.springframework.integration.ws.config.MessageHandler = TestUtils . getPropertyValue ( org.springframework.integration.ws.config.AbstractEndpoint , STRING , MessageHandler .class ) ; assertNull ( TestUtils . getPropertyValue ( org.springframework.integration.ws.config.MessageHandler , STRING ) ) ; assertFalse ( TestUtils . getPropertyValue ( org.springframework.integration.ws.config.MessageHandler , STRING , java.lang.Boolean .class ) ) ; WebServiceTemplate org.springframework.integration.ws.config.WebServiceTemplate = TestUtils . getPropertyValue ( org.springframework.integration.ws.config.MessageHandler , STRING , WebServiceTemplate .class ) ; org.springframework.integration.ws.config.WebServiceTemplate = spy ( org.springframework.integration.ws.config.WebServiceTemplate ) ; doReturn ( null ) . when ( org.springframework.integration.ws.config.WebServiceTemplate ) . sendAndReceive ( anyString ( ) , any ( WebServiceMessageCallback .class ) , ArgumentMatchers .< WebServiceMessageExtractor < java.lang.Object > > any ( ) ) ; new DirectFieldAccessor ( org.springframework.integration.ws.config.MessageHandler ) . setPropertyValue ( STRING , org.springframework.integration.ws.config.WebServiceTemplate ) ; org.springframework.integration.ws.config.MessageHandler . handleMessage ( new GenericMessage < java.lang.String > ( STRING ) ) ; verify ( org.springframework.integration.ws.config.WebServiceTemplate ) . sendAndReceive ( eq ( STRING ) , any ( WebServiceMessageCallback .class ) , ArgumentMatchers .< WebServiceMessageExtractor < java.lang.Object > > any ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionParsingException .class ) public void void ( ) { new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.ws.config.WebServiceOutboundGatewayParserTests> ( ) ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionParsingException .class ) public void void ( ) { new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.ws.config.WebServiceOutboundGatewayParserTests> ( ) ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( ExecutionCallback org.springframework.integration.ws.config.ExecutionCallback , java.lang.Object java.lang.Object , Message < ? > org.springframework.integration.ws.config.Message<?> ) throws java.lang.Exception { int ++ ; return null ; }  <METHOD_END>
