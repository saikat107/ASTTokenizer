<METHOD_START> public void ( Supplier < T > org.springframework.integration.expression.Supplier<T> ) { Assert . notNull ( org.springframework.integration.expression.Supplier<T> , STRING ) ; this . org.springframework.integration.expression.Supplier<T> = org.springframework.integration.expression.Supplier<T> ; this . org.springframework.integration.expression.EvaluationException = new EvaluationException ( java.lang.String ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) org.springframework.integration.expression.EvaluationException { return this . org.springframework.integration.expression.Supplier<T> . get ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return java.lang.Object ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < C > C C ( java.lang.Class<C> < C > java.lang.Class<C> ) throws org.springframework.integration.expression.EvaluationException { return java.lang.Object ( this . org.springframework.integration.expression.EvaluationContext , java.lang.Class<C> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < C > C C ( java.lang.Object java.lang.Object , java.lang.Class<C> < C > java.lang.Class<C> ) throws org.springframework.integration.expression.EvaluationException { return java.lang.Object ( this . org.springframework.integration.expression.EvaluationContext , java.lang.Object , java.lang.Class<C> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( EvaluationContext org.springframework.integration.expression.EvaluationContext ) throws org.springframework.integration.expression.EvaluationException { return java.lang.Object ( org.springframework.integration.expression.EvaluationContext . getRootObject ( ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return java.lang.Object ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < C > C C ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Class<C> < C > java.lang.Class<C> ) throws org.springframework.integration.expression.EvaluationException { return ExpressionUtils . convertTypedValue ( org.springframework.integration.expression.EvaluationContext , new TypedValue ( java.lang.Object ( org.springframework.integration.expression.EvaluationContext ) ) , java.lang.Class<C> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < C > C C ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object , java.lang.Class<C> < C > java.lang.Class<C> )			throws org.springframework.integration.expression.EvaluationException { return ExpressionUtils . convertTypedValue ( org.springframework.integration.expression.EvaluationContext , new TypedValue ( java.lang.Object ( java.lang.Object ) ) , java.lang.Class<C> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) org.springframework.integration.expression.EvaluationException { throw this . org.springframework.integration.expression.EvaluationException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { throw this . org.springframework.integration.expression.EvaluationException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( EvaluationContext org.springframework.integration.expression.EvaluationContext ) throws org.springframework.integration.expression.EvaluationException { throw this . org.springframework.integration.expression.EvaluationException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { throw this . org.springframework.integration.expression.EvaluationException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.TypeDescriptor org.springframework.integration.expression.TypeDescriptor ( ) org.springframework.integration.expression.EvaluationException { throw this . org.springframework.integration.expression.EvaluationException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.TypeDescriptor org.springframework.integration.expression.TypeDescriptor ( java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { throw this . org.springframework.integration.expression.EvaluationException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.TypeDescriptor org.springframework.integration.expression.TypeDescriptor ( EvaluationContext org.springframework.integration.expression.EvaluationContext ) throws org.springframework.integration.expression.EvaluationException { throw this . org.springframework.integration.expression.EvaluationException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.expression.TypeDescriptor org.springframework.integration.expression.TypeDescriptor ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object )			throws org.springframework.integration.expression.EvaluationException { throw this . org.springframework.integration.expression.EvaluationException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { throw this . org.springframework.integration.expression.EvaluationException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { throw this . org.springframework.integration.expression.EvaluationException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { throw this . org.springframework.integration.expression.EvaluationException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( EvaluationContext org.springframework.integration.expression.EvaluationContext ) throws org.springframework.integration.expression.EvaluationException { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( EvaluationContext org.springframework.integration.expression.EvaluationContext , java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) throws org.springframework.integration.expression.EvaluationException { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.integration.expression.Supplier<T> . toString ( ) ; }  <METHOD_END>
