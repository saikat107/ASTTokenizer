<METHOD_START> @ Test public void void ( ) { org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; assertEquals ( NUMBER , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . size ( ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . containsKey ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . containsKey ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . containsKey ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . keySet ( ) . contains ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; assertEquals ( NUMBER , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . size ( ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . containsKey ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . containsKey ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . containsKey ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . keySet ( ) . contains ( STRING ) ) ; assertTrue ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . keySet ( ) . contains ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . getOrDefault ( STRING , STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . getOrDefault ( STRING , STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . getOrDefault ( STRING , STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . getOrDefault ( STRING , STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . getOrDefault ( new java.lang.Object ( ) , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , null ) ; org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , null ) ; org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , null ) ; assertNull ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . getOrDefault ( STRING , STRING ) ) ; assertNull ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . getOrDefault ( STRING , STRING ) ) ; assertNull ( org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . getOrDefault ( STRING , STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . getOrDefault ( STRING , STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . getOrDefault ( new java.lang.Object ( ) , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . computeIfAbsent ( STRING , key -> STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . computeIfAbsent ( STRING , key -> STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . computeIfAbsent ( STRING , key -> STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . computeIfAbsent ( STRING , key -> STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . computeIfAbsent ( STRING , key -> STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . computeIfAbsent ( STRING , key -> STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; LinkedCaseInsensitiveMap < java.lang.String > org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> = org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . clone ( ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . put ( STRING , STRING ) ; assertEquals ( NUMBER , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . size ( ) ) ; assertEquals ( NUMBER , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . size ( ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.util.LinkedCaseInsensitiveMap<java.lang.String> . get ( STRING ) ) ; }  <METHOD_END>
