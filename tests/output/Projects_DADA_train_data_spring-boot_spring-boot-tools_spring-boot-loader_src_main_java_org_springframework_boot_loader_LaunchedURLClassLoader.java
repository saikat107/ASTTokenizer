<METHOD_START> public void ( java.net.URL [] java.net.URL[] , java.lang.ClassLoader java.lang.ClassLoader ) { super( java.net.URL[] , java.lang.ClassLoader ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URL java.net.URL ( java.lang.String java.lang.String ) { Handler . setUseFastConnectionExceptions ( true ) ; try { return super. java.net.URL ( java.lang.String ) ; } finally { Handler . setUseFastConnectionExceptions ( false ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Enumeration<java.net.URL> < java.net.URL > java.util.Enumeration<java.net.URL> ( java.lang.String java.lang.String ) throws java.io.IOException { Handler . setUseFastConnectionExceptions ( true ) ; try { return super. java.util.Enumeration<java.net.URL> ( java.lang.String ) ; } finally { Handler . setUseFastConnectionExceptions ( false ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.String java.lang.String , boolean boolean )			throws java.lang.ClassNotFoundException { Handler . setUseFastConnectionExceptions ( true ) ; try { try { void ( java.lang.String ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { if ( java.lang.Package ( java.lang.String ) == null ) { throw new java.lang.AssertionError ( STRING + java.lang.String + STRING + STRING ) ; } } return super. java.lang.Class<?> ( java.lang.String , boolean ) ; } finally { Handler . setUseFastConnectionExceptions ( false ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { int int = java.lang.String . int ( '.' ) ; if ( int >= NUMBER ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) ; if ( java.lang.Package ( java.lang.String ) == null ) { try { void ( java.lang.String , java.lang.String ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { if ( java.lang.Package ( java.lang.String ) == null ) { throw new java.lang.AssertionError ( STRING + java.lang.String + STRING + STRING ) ; } } } } }  <METHOD_END>
<METHOD_START> private void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { try { java.security.AccessController . java.lang.Object ( new java.security.PrivilegedExceptionAction<java.lang.Object> < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( ) java.lang.ClassNotFoundException { java.lang.String java.lang.String = java.lang.String . java.lang.String ( '.' , '/' ) + STRING ; java.lang.String java.lang.String = java.lang.String . java.lang.String ( '.' , '/' ) + STRING ; for ( java.net.URL java.net.URL : java.net.URL[] ( ) ) { try { java.net.URLConnection java.net.URLConnection = java.net.URL . java.net.URLConnection ( ) ; if ( java.net.URLConnection instanceof java.net.JarURLConnection ) { java.util.jar.JarFile java.util.jar.JarFile = ( ( java.net.JarURLConnection ) java.net.URLConnection ) . java.util.jar.JarFile ( ) ; if ( java.util.jar.JarFile . java.util.zip.ZipEntry ( java.lang.String ) != null && java.util.jar.JarFile . java.util.zip.ZipEntry ( java.lang.String ) != null && java.util.jar.JarFile . java.util.jar.Manifest ( ) != null ) { java.lang.Package ( java.lang.String , java.util.jar.JarFile . java.util.jar.Manifest ( ) , java.net.URL ) ; return null ; } } } catch ( java.io.IOException java.io.IOException ) { } } return null ; } } , java.security.AccessController . java.security.AccessControlContext ( ) ) ; } catch ( java . security . java.security.PrivilegedActionException java.security.PrivilegedActionException ) { } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) java.lang.ClassNotFoundException { java.lang.String java.lang.String = java.lang.String . java.lang.String ( '.' , '/' ) + STRING ; java.lang.String java.lang.String = java.lang.String . java.lang.String ( '.' , '/' ) + STRING ; for ( java.net.URL java.net.URL : java.net.URL[] ( ) ) { try { java.net.URLConnection java.net.URLConnection = java.net.URL . java.net.URLConnection ( ) ; if ( java.net.URLConnection instanceof java.net.JarURLConnection ) { java.util.jar.JarFile java.util.jar.JarFile = ( ( java.net.JarURLConnection ) java.net.URLConnection ) . java.util.jar.JarFile ( ) ; if ( java.util.jar.JarFile . java.util.zip.ZipEntry ( java.lang.String ) != null && java.util.jar.JarFile . java.util.zip.ZipEntry ( java.lang.String ) != null && java.util.jar.JarFile . java.util.jar.Manifest ( ) != null ) { java.lang.Package ( java.lang.String , java.util.jar.JarFile . java.util.jar.Manifest ( ) , java.net.URL ) ; return null ; } } } catch ( java.io.IOException java.io.IOException ) { } } return null ; }  <METHOD_END>
<METHOD_START> public void void ( ) { for ( java.net.URL java.net.URL : java.net.URL[] ( ) ) { try { java.net.URLConnection java.net.URLConnection = java.net.URL . java.net.URLConnection ( ) ; if ( java.net.URLConnection instanceof java.net.JarURLConnection ) { void ( java.net.URLConnection ) ; } } catch ( java.io.IOException java.io.IOException ) { } } }  <METHOD_END>
<METHOD_START> private void void ( java.net.URLConnection java.net.URLConnection ) throws java.io.IOException { java.lang.Object java.lang.Object = ( ( java.net.JarURLConnection ) java.net.URLConnection ) . java.util.jar.JarFile ( ) ; if ( java.lang.Object instanceof org . springframework . boot . loader . org.springframework.boot.loader.jar . org.springframework.boot.loader.jar ) { ( ( org . springframework . boot . loader . org.springframework.boot.loader.jar . org.springframework.boot.loader.jar ) java.lang.Object ) . clearCache ( ) ; } }  <METHOD_END>
