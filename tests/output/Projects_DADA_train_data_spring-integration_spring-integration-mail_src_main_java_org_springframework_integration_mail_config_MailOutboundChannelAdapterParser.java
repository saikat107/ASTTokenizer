<METHOD_START> @ java.lang.Override protected org.springframework.integration.mail.config.AbstractBeanDefinition org.springframework.integration.mail.config.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.mail.config.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.mail.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( MailSendingMessageHandler .class ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { Assert . isTrue ( ! StringUtils . hasText ( java.lang.String ) && ! StringUtils . hasText ( java.lang.String ) && ! StringUtils . hasText ( java.lang.String ) , STRING + STRING ) ; org.springframework.integration.mail.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } else { Assert . hasText ( java.lang.String , STRING ) ; BeanDefinitionBuilder org.springframework.integration.mail.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( JavaMailSenderImpl .class ) ; org.springframework.integration.mail.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.mail.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.mail.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.mail.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.mail.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; java.lang.String java.lang.String = BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.integration.mail.config.BeanDefinitionBuilder . getBeanDefinition ( ) , org.springframework.integration.mail.config.ParserContext . getRegistry ( ) ) ; org.springframework.integration.mail.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } return org.springframework.integration.mail.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
