<METHOD_START> public void ( ) { super(); }  <METHOD_END>
<METHOD_START> public void ( ScriptVariableGenerator org.springframework.integration.groovy.ScriptVariableGenerator ) { super( org.springframework.integration.groovy.ScriptVariableGenerator ); }  <METHOD_END>
<METHOD_START> public void ( Binding org.springframework.integration.groovy.Binding ) { this(); Assert . notNull ( org.springframework.integration.groovy.Binding , STRING ) ; this . org.springframework.integration.groovy.Binding = org.springframework.integration.groovy.Binding ; }  <METHOD_END>
<METHOD_START> public void ( Binding org.springframework.integration.groovy.Binding , ScriptVariableGenerator org.springframework.integration.groovy.ScriptVariableGenerator ) { this( org.springframework.integration.groovy.ScriptVariableGenerator ); Assert . notNull ( org.springframework.integration.groovy.Binding , STRING ) ; this . org.springframework.integration.groovy.Binding = org.springframework.integration.groovy.Binding ; }  <METHOD_END>
<METHOD_START> public void void ( GroovyObjectCustomizer org.springframework.integration.groovy.GroovyObjectCustomizer ) { this . org.springframework.integration.groovy.GroovyObjectCustomizer = org.springframework.integration.groovy.GroovyObjectCustomizer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.groovy.ScriptSource org.springframework.integration.groovy.ScriptSource ( Message < ? > org.springframework.integration.groovy.Message<?> ) { java.lang.Object java.lang.Object = org.springframework.integration.groovy.Message<> . getPayload ( ) ; Assert . isInstanceOf ( java.lang.String .class , java.lang.Object , STRING ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.integration.groovy.Message<> ) ; return new StaticScriptSource ( ( java.lang.String ) java.lang.Object , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( ScriptSource org.springframework.integration.groovy.ScriptSource , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) throws java.lang.Exception { Assert . notNull ( org.springframework.integration.groovy.ScriptSource , STRING ) ; VariableBindingGroovyObjectCustomizerDecorator org.springframework.integration.groovy.VariableBindingGroovyObjectCustomizerDecorator = this . org.springframework.integration.groovy.Binding != null ? new BindingOverwriteGroovyObjectCustomizerDecorator ( this . org.springframework.integration.groovy.Binding ) : new VariableBindingGroovyObjectCustomizerDecorator ( ) ; if ( this . org.springframework.integration.groovy.GroovyObjectCustomizer != null ) { org.springframework.integration.groovy.VariableBindingGroovyObjectCustomizerDecorator . setCustomizer ( this . org.springframework.integration.groovy.GroovyObjectCustomizer ) ; } if ( ! CollectionUtils . isEmpty ( java.util.Map<java.lang.String,java.lang.Object> ) ) { org.springframework.integration.groovy.VariableBindingGroovyObjectCustomizerDecorator . setVariables ( java.util.Map<java.lang.String,java.lang.Object> ) ; } GroovyScriptFactory org.springframework.integration.groovy.GroovyScriptFactory = new GroovyScriptFactory ( this . java.lang.Class<? extends org.springframework.integration.groovy.GroovyCommandMessageProcessor> ( ) . java.lang.String ( ) , org.springframework.integration.groovy.VariableBindingGroovyObjectCustomizerDecorator ) ; if ( this . beanClassLoader != null ) { org.springframework.integration.groovy.GroovyScriptFactory . setBeanClassLoader ( this . beanClassLoader ) ; } if ( this . beanFactory != null ) { org.springframework.integration.groovy.GroovyScriptFactory . setBeanFactory ( this . beanFactory ) ; } java.lang.Object java.lang.Object = org.springframework.integration.groovy.GroovyScriptFactory . getScriptedObject ( org.springframework.integration.groovy.ScriptSource ) ; return ( java.lang.Object instanceof GString ) ? java.lang.Object . java.lang.String ( ) : java.lang.Object ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( Message < ? > org.springframework.integration.groovy.Message<?> ) { return java.lang.Class<? extends org.springframework.integration.groovy.GroovyCommandMessageProcessor> ( ) . java.lang.String ( ) + org.springframework.integration.groovy.Message<> . getHeaders ( ) . getId ( ) . toString ( ) . replaceAll ( STRING , STRING ) ; }  <METHOD_END>
