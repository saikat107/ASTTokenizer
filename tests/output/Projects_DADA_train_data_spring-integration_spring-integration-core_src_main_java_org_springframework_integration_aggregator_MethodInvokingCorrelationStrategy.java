<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { this . org.springframework.integration.aggregator.MethodInvokingMessageProcessor<?> = new MethodInvokingMessageProcessor < java.lang.Object > ( java.lang.Object , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method ) { Assert . notNull ( java.lang.Object , STRING ) ; Assert . notNull ( java.lang.reflect.Method , STRING ) ; Assert . isTrue ( ! java.lang.Void . java.lang.Class<java.lang.Void> . boolean ( java.lang.reflect.Method . java.lang.Class<?> ( ) ) , STRING ) ; this . org.springframework.integration.aggregator.MethodInvokingMessageProcessor<?> = new MethodInvokingMessageProcessor < java.lang.Object > ( java.lang.Object , java.lang.reflect.Method ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.aggregator.BeanFactory ) throws org.springframework.integration.aggregator.BeansException { if ( org.springframework.integration.aggregator.BeanFactory != null ) { this . org.springframework.integration.aggregator.MethodInvokingMessageProcessor<> . setBeanFactory ( org.springframework.integration.aggregator.BeanFactory ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.aggregator.Message<?> ) { return this . org.springframework.integration.aggregator.MethodInvokingMessageProcessor<> . processMessage ( org.springframework.integration.aggregator.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.integration.aggregator.MethodInvokingMessageProcessor<> . start ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.integration.aggregator.MethodInvokingMessageProcessor<> . stop ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . org.springframework.integration.aggregator.MethodInvokingMessageProcessor<> . isRunning ( ) ; }  <METHOD_END>
