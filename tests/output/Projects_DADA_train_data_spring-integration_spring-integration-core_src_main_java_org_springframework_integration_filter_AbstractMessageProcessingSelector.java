<METHOD_START> public void ( MessageProcessor < java.lang.Boolean > org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> ) { Assert . notNull ( org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> , STRING ) ; this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> = org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> ; }  <METHOD_END>
<METHOD_START> public void void ( ConversionService org.springframework.integration.filter.ConversionService ) { if ( this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> instanceof AbstractMessageProcessor ) { ( ( AbstractMessageProcessor < java.lang.Boolean > ) this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> ) . setConversionService ( org.springframework.integration.filter.ConversionService ) ; } }  <METHOD_END>
<METHOD_START> public void void ( BeanFactory org.springframework.integration.filter.BeanFactory ) throws org.springframework.integration.filter.BeansException { if ( this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> instanceof BeanFactoryAware ) { ( ( BeanFactoryAware ) this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> ) . setBeanFactory ( org.springframework.integration.filter.BeanFactory ) ; } }  <METHOD_END>
<METHOD_START> public final boolean boolean ( Message < ? > org.springframework.integration.filter.Message<?> ) { java.lang.Object java.lang.Object = this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> . processMessage ( org.springframework.integration.filter.Message<> ) ; Assert . notNull ( java.lang.Object , STRING ) ; Assert . isAssignable ( java.lang.Boolean .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) , STRING ) ; return ( java.lang.Boolean ) java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> instanceof Lifecycle ) { ( ( Lifecycle ) this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> ) . start ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> instanceof Lifecycle ) { ( ( Lifecycle ) this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> ) . stop ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ! ( this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> instanceof Lifecycle ) || ( ( Lifecycle ) this . org.springframework.integration.filter.MessageProcessor<java.lang.Boolean> ) . isRunning ( ) ; }  <METHOD_END>
