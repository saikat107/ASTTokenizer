<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.CharSequence java.lang.CharSequence ) { this( java.lang.Class<> , null , java.lang.CharSequence ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.nio.charset.Charset java.nio.charset.Charset , java.lang.CharSequence java.lang.CharSequence ) { super( java.lang.CharSequence , org.springframework.boot.test.json.JsonContentAssert .class ); this . org.springframework.boot.test.json.JsonLoader = new JsonLoader ( java.lang.Class<> , java.nio.charset.Charset ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.Object java.lang.Object ) { if ( java.lang.Object == null || java.lang.Object instanceof java.lang.CharSequence ) { return org.springframework.boot.test.json.JsonContentAssert ( ( java.lang.CharSequence ) java.lang.Object ) ; } if ( java.lang.Object instanceof byte [] ) { return org.springframework.boot.test.json.JsonContentAssert ( ( byte [] ) java.lang.Object ) ; } if ( java.lang.Object instanceof java.io.File ) { return org.springframework.boot.test.json.JsonContentAssert ( ( java.io.File ) java.lang.Object ) ; } if ( java.lang.Object instanceof java.io.InputStream ) { return org.springframework.boot.test.json.JsonContentAssert ( ( java.io.InputStream ) java.lang.Object ) ; } if ( java.lang.Object instanceof Resource ) { return org.springframework.boot.test.json.JsonContentAssert ( ( Resource ) java.lang.Object ) ; } throw new java.lang.AssertionError ( STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.CharSequence ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.String , java.lang.Class<> ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( byte [] byte[] ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( byte[] ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.File java.io.File ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.File ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.InputStream java.io.InputStream ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.InputStream ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( Resource org.springframework.boot.test.json.Resource ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( org.springframework.boot.test.json.Resource ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.CharSequence ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.String , java.lang.Class<> ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( byte [] byte[] ) { return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( this . org.springframework.boot.test.json.JsonLoader . getJson ( byte[] ) , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.File java.io.File ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.File ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.InputStream java.io.InputStream ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.InputStream ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( Resource org.springframework.boot.test.json.Resource ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( org.springframework.boot.test.json.Resource ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.CharSequence ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.String , java.lang.Class<> ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( byte [] byte[] , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( byte[] ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.File java.io.File , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.File ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.InputStream java.io.InputStream , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.InputStream ) , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( Resource org.springframework.boot.test.json.Resource , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( org.springframework.boot.test.json.Resource ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.CharSequence ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.String , java.lang.Class<> ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( byte [] byte[] , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( byte[] ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.File java.io.File , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.File ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.InputStream java.io.InputStream , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.InputStream ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( Resource org.springframework.boot.test.json.Resource , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( org.springframework.boot.test.json.Resource ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.Object java.lang.Object ) { if ( java.lang.Object == null || java.lang.Object instanceof java.lang.CharSequence ) { return org.springframework.boot.test.json.JsonContentAssert ( ( java.lang.CharSequence ) java.lang.Object ) ; } if ( java.lang.Object instanceof byte [] ) { return org.springframework.boot.test.json.JsonContentAssert ( ( byte [] ) java.lang.Object ) ; } if ( java.lang.Object instanceof java.io.File ) { return org.springframework.boot.test.json.JsonContentAssert ( ( java.io.File ) java.lang.Object ) ; } if ( java.lang.Object instanceof java.io.InputStream ) { return org.springframework.boot.test.json.JsonContentAssert ( ( java.io.InputStream ) java.lang.Object ) ; } if ( java.lang.Object instanceof Resource ) { return org.springframework.boot.test.json.JsonContentAssert ( ( Resource ) java.lang.Object ) ; } throw new java.lang.AssertionError ( STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.CharSequence ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.String , java.lang.Class<> ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( byte [] byte[] ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( byte[] ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.File java.io.File ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.File ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.InputStream java.io.InputStream ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.InputStream ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( Resource org.springframework.boot.test.json.Resource ) { return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( this . org.springframework.boot.test.json.JsonLoader . getJson ( org.springframework.boot.test.json.Resource ) , JSONCompareMode . LENIENT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.CharSequence ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.String , java.lang.Class<> ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( byte [] byte[] ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( byte[] ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.File java.io.File ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.File ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.InputStream java.io.InputStream ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.InputStream ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( Resource org.springframework.boot.test.json.Resource ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( org.springframework.boot.test.json.Resource ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , JSONCompareMode . STRICT ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.CharSequence ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.String , java.lang.Class<> ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( byte [] byte[] , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( byte[] ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.File java.io.File , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.File ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.InputStream java.io.InputStream , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.InputStream ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( Resource org.springframework.boot.test.json.Resource , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( org.springframework.boot.test.json.Resource ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONCompareMode ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.CharSequence ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.lang.String , java.lang.Class<> ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( byte [] byte[] , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( byte[] ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.File java.io.File , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.File ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.io.InputStream java.io.InputStream , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( java.io.InputStream ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( Resource org.springframework.boot.test.json.Resource , JSONComparator org.springframework.boot.test.json.JSONComparator ) { java.lang.String java.lang.String = this . org.springframework.boot.test.json.JsonLoader . getJson ( org.springframework.boot.test.json.Resource ) ; return org.springframework.boot.test.json.JsonContentAssert ( org.springframework.boot.test.json.JSONCompareResult ( java.lang.String , org.springframework.boot.test.json.JSONComparator ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { new org.springframework.boot.test.json.JsonContentAssert.JsonPathValue ( java.lang.CharSequence , java.lang.Object[] ) . void ( java.lang.Object .class , STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { new org.springframework.boot.test.json.JsonContentAssert.JsonPathValue ( java.lang.CharSequence , java.lang.Object[] ) . void ( java.lang.String .class , STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { new org.springframework.boot.test.json.JsonContentAssert.JsonPathValue ( java.lang.CharSequence , java.lang.Object[] ) . void ( java.lang.Number .class , STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { new org.springframework.boot.test.json.JsonContentAssert.JsonPathValue ( java.lang.CharSequence , java.lang.Object[] ) . void ( java.lang.Boolean .class , STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { new org.springframework.boot.test.json.JsonContentAssert.JsonPathValue ( java.lang.CharSequence , java.lang.Object[] ) . void ( java.util.List .class , STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { new org.springframework.boot.test.json.JsonContentAssert.JsonPathValue ( java.lang.CharSequence , java.lang.Object[] ) . void ( java.util.Map .class , STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { new org.springframework.boot.test.json.JsonContentAssert.JsonPathValue ( java.lang.CharSequence , java.lang.Object[] ) . void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { new org.springframework.boot.test.json.JsonContentAssert.JsonPathValue ( java.lang.CharSequence , java.lang.Object[] ) . void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { new org.springframework.boot.test.json.JsonContentAssert.JsonPathValue ( java.lang.CharSequence , java.lang.Object[] ) . void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.AbstractObjectAssert<?,java.lang.Object> < ? , java.lang.Object > org.springframework.boot.test.json.AbstractObjectAssert<?,java.lang.Object> ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { return Assertions . assertThat ( new org.springframework.boot.test.json.JsonContentAssert.JsonPathValue ( java.lang.CharSequence , java.lang.Object[] ) . java.lang.Object ( false ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.AbstractCharSequenceAssert<?,java.lang.String> < ? , java.lang.String > org.springframework.boot.test.json.AbstractCharSequenceAssert<?,java.lang.String> ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { return Assertions . assertThat ( java.lang.String ( java.lang.CharSequence , java.lang.Object[] , java.lang.String .class , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.AbstractObjectAssert<?,java.lang.Number> < ? , java.lang.Number > org.springframework.boot.test.json.AbstractObjectAssert<?,java.lang.Number> ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { return Assertions . assertThat ( java.lang.Number ( java.lang.CharSequence , java.lang.Object[] , java.lang.Number .class , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.json.AbstractBooleanAssert<?> < ? > org.springframework.boot.test.json.AbstractBooleanAssert<?> ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { return Assertions . assertThat ( java.lang.Boolean ( java.lang.CharSequence , java.lang.Object[] , java.lang.Boolean .class , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public org.springframework.boot.test.json.AbstractListAssert<?,?,java.lang.Object,org.springframework.boot.test.json.ObjectAssert<java.lang.Object>> < ? , ? , java.lang.Object , ObjectAssert < java.lang.Object > > org.springframework.boot.test.json.AbstractListAssert<?,?,java.lang.Object,org.springframework.boot.test.json.ObjectAssert<java.lang.Object>> ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { return Assertions . assertThat ( java.util.List ( java.lang.CharSequence , java.lang.Object[] , java.util.List .class , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public org.springframework.boot.test.json.AbstractMapAssert<?,?,java.lang.Object,java.lang.Object> < ? , ? , java.lang.Object , java.lang.Object > org.springframework.boot.test.json.AbstractMapAssert<?,?,java.lang.Object,java.lang.Object> ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { return Assertions . assertThat ( java.util.Map ( java.lang.CharSequence , java.lang.Object[] , java.util.Map .class , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private < T > T T ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object [] java.lang.Object[] , java.lang.Class<T> < T > java.lang.Class<T> , java.lang.String java.lang.String ) { org.springframework.boot.test.json.JsonContentAssert.JsonPathValue org.springframework.boot.test.json.JsonContentAssert.JsonPathValue = new org.springframework.boot.test.json.JsonContentAssert.JsonPathValue ( java.lang.CharSequence , java.lang.Object[] ) ; if ( org.springframework.boot.test.json.JsonContentAssert.JsonPathValue . java.lang.Object ( false ) != null ) { org.springframework.boot.test.json.JsonContentAssert.JsonPathValue . void ( java.lang.Class<T> , java.lang.String ) ; } return ( T ) org.springframework.boot.test.json.JsonContentAssert.JsonPathValue . java.lang.Object ( false ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.test.json.JSONCompareResult org.springframework.boot.test.json.JSONCompareResult ( java.lang.CharSequence java.lang.CharSequence , JSONCompareMode org.springframework.boot.test.json.JSONCompareMode ) { if ( this . actual == null ) { return org.springframework.boot.test.json.JSONCompareResult ( java.lang.CharSequence ) ; } try { return JSONCompare . compareJSON ( ( java.lang.CharSequence == null ? null : java.lang.CharSequence . java.lang.String ( ) ) , this . actual . toString ( ) , org.springframework.boot.test.json.JSONCompareMode ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( java.lang.Exception instanceof java.lang.RuntimeException ) { throw ( java.lang.RuntimeException ) java.lang.Exception ; } throw new java.lang.IllegalStateException ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.test.json.JSONCompareResult org.springframework.boot.test.json.JSONCompareResult ( java.lang.CharSequence java.lang.CharSequence , JSONComparator org.springframework.boot.test.json.JSONComparator ) { if ( this . actual == null ) { return org.springframework.boot.test.json.JSONCompareResult ( java.lang.CharSequence ) ; } try { return JSONCompare . compareJSON ( ( java.lang.CharSequence == null ? null : java.lang.CharSequence . java.lang.String ( ) ) , this . actual . toString ( ) , org.springframework.boot.test.json.JSONComparator ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( java.lang.Exception instanceof java.lang.RuntimeException ) { throw ( java.lang.RuntimeException ) java.lang.Exception ; } throw new java.lang.IllegalStateException ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.test.json.JSONCompareResult org.springframework.boot.test.json.JSONCompareResult ( java.lang.CharSequence java.lang.CharSequence ) { JSONCompareResult org.springframework.boot.test.json.JSONCompareResult = new JSONCompareResult ( ) ; org.springframework.boot.test.json.JSONCompareResult . passed ( ) ; if ( java.lang.CharSequence != null ) { org.springframework.boot.test.json.JSONCompareResult . fail ( STRING ) ; } return org.springframework.boot.test.json.JSONCompareResult ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( JSONCompareResult org.springframework.boot.test.json.JSONCompareResult ) { if ( org.springframework.boot.test.json.JSONCompareResult . failed ( ) ) { throw new java.lang.AssertionError ( STRING + org.springframework.boot.test.json.JSONCompareResult . getMessage ( ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.test.json.JsonContentAssert org.springframework.boot.test.json.JsonContentAssert ( JSONCompareResult org.springframework.boot.test.json.JSONCompareResult ) { if ( org.springframework.boot.test.json.JSONCompareResult . passed ( ) ) { throw new java.lang.AssertionError ( STRING + org.springframework.boot.test.json.JSONCompareResult . getMessage ( ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> void ( java.lang.CharSequence java.lang.CharSequence , java.lang.Object ... java.lang.Object[] ) { org . springframework . util . Assert . hasText ( ( java.lang.CharSequence == null ? null : java.lang.CharSequence . java.lang.String ( ) ) , STRING ) ; this . java.lang.String = java.lang.String . java.lang.String ( java.lang.CharSequence . java.lang.String ( ) , java.lang.Object[] ) ; this . org.springframework.boot.test.json.JsonPath = JsonPath . compile ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( ObjectUtils . isEmpty ( java.lang.Object ( false ) ) || boolean ( ) ) { return; } throw new java.lang.AssertionError ( java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( ! ObjectUtils . isEmpty ( java.lang.Object ( false ) ) ) { return; } throw new java.lang.AssertionError ( java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { java.lang.Object java.lang.Object = java.lang.Object ( true ) ; if ( java.lang.Object == null || boolean ( ) ) { throw new java.lang.AssertionError ( java.lang.String ( ) ) ; } if ( java.lang.Class<> != null && ! java.lang.Class<> . boolean ( java.lang.Object ) ) { throw new java.lang.AssertionError ( java.lang.String ( java.lang.String ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( java.lang.Object ( false ) == null || boolean ( ) ) { return; } throw new java.lang.AssertionError ( java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return ! boolean ( ) && boolean ( ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return this . org.springframework.boot.test.json.JsonPath . isDefinite ( ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return ObjectUtils . isEmpty ( java.lang.Object ( false ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( boolean boolean ) { try { java.lang.CharSequence java.lang.CharSequence = org.springframework.boot.test.json.JsonContentAssert .this . actual ; return this . org.springframework.boot.test.json.JsonPath . read ( java.lang.CharSequence == null ? null : java.lang.CharSequence . java.lang.String ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( ! boolean ) { return null ; } throw new java.lang.AssertionError ( java.lang.String ( ) + STRING + java.lang.Exception . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String + STRING ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.lang.String . java.lang.String ( STRING , java.lang.String , this . java.lang.String , ObjectUtils . nullSafeToString ( StringUtils . quoteIfString ( java.lang.Object ( false ) ) ) ) ; }  <METHOD_END>
