<METHOD_START> @ java.lang.Override public org.springframework.boot.bind.ApplicationContext org.springframework.boot.bind.ApplicationContext ( MergedContextConfiguration org.springframework.boot.bind.MergedContextConfiguration )			throws java.lang.Exception { SpringApplication org.springframework.boot.bind.SpringApplication = new SpringApplication ( ) ; org.springframework.boot.bind.SpringApplication . setMainApplicationClass ( org.springframework.boot.bind.MergedContextConfiguration . getTestClass ( ) ) ; org.springframework.boot.bind.SpringApplication . setWebApplicationType ( WebApplicationType . NONE ) ; org.springframework.boot.bind.SpringApplication . setSources ( new java.util.LinkedHashSet<java.lang.Object> < java.lang.Object > ( java.util.Arrays . java.util.List ( org.springframework.boot.bind.MergedContextConfiguration . getClasses ( ) ) ) ) ; ConfigurableEnvironment org.springframework.boot.bind.ConfigurableEnvironment = new StandardEnvironment ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . void ( TestPropertySourceUtils . convertInlinedPropertiesToMap ( org.springframework.boot.bind.MergedContextConfiguration . getPropertySourceProperties ( ) ) ) ; org.springframework.boot.bind.ConfigurableEnvironment . getPropertySources ( ) . addAfter ( StandardEnvironment . SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME , new MapPropertySource ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ) ; org.springframework.boot.bind.SpringApplication . setEnvironment ( org.springframework.boot.bind.ConfigurableEnvironment ) ; return org.springframework.boot.bind.SpringApplication . run ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.bind.ApplicationContext org.springframework.boot.bind.ApplicationContext ( java.lang.String ... java.lang.String[] ) throws java.lang.Exception { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String [] java.lang.String[] ( ) { return java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
