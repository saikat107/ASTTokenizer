<METHOD_START> @ java.lang.Override protected void void ( DefaultListableBeanFactory org.springframework.web.context.support.DefaultListableBeanFactory ) throws org.springframework.web.context.support.BeansException , java.io.IOException { GroovyBeanDefinitionReader org.springframework.web.context.support.GroovyBeanDefinitionReader = new GroovyBeanDefinitionReader ( org.springframework.web.context.support.DefaultListableBeanFactory ) ; org.springframework.web.context.support.GroovyBeanDefinitionReader . setEnvironment ( getEnvironment ( ) ) ; org.springframework.web.context.support.GroovyBeanDefinitionReader . setResourceLoader ( this ) ; void ( org.springframework.web.context.support.GroovyBeanDefinitionReader ) ; void ( org.springframework.web.context.support.GroovyBeanDefinitionReader ) ; }  <METHOD_END>
<METHOD_START> protected void void ( GroovyBeanDefinitionReader org.springframework.web.context.support.GroovyBeanDefinitionReader ) {	}  <METHOD_END>
<METHOD_START> protected void void ( GroovyBeanDefinitionReader org.springframework.web.context.support.GroovyBeanDefinitionReader ) throws java.io.IOException { java.lang.String [] java.lang.String[] = getConfigLocations ( ) ; if ( java.lang.String[] != null ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { org.springframework.web.context.support.GroovyBeanDefinitionReader . loadBeanDefinitions ( java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String [] java.lang.String[] ( ) { if ( getNamespace ( ) != null ) { return new java.lang.String [] { java.lang.String + getNamespace ( ) + java.lang.String } ; } else { return new java.lang.String [] { java.lang.String } ; } }  <METHOD_END>
<METHOD_START> public void void ( MetaClass org.springframework.web.context.support.MetaClass ) { this . org.springframework.web.context.support.MetaClass = org.springframework.web.context.support.MetaClass ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.context.support.MetaClass org.springframework.web.context.support.MetaClass ( ) { return this . org.springframework.web.context.support.MetaClass ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { return this . org.springframework.web.context.support.MetaClass . invokeMethod ( this , java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { this . org.springframework.web.context.support.MetaClass . setProperty ( this , java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { if ( containsBean ( java.lang.String ) ) { return getBean ( java.lang.String ) ; } else if ( this . org.springframework.web.context.support.BeanWrapper . isReadableProperty ( java.lang.String ) ) { return this . org.springframework.web.context.support.BeanWrapper . getPropertyValue ( java.lang.String ) ; } throw new NoSuchBeanDefinitionException ( java.lang.String ) ; }  <METHOD_END>
