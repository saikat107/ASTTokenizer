<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.test.web.client.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.test.web.client.ExpectedException . expectMessage ( STRING ) ; new LocalHostUriTemplateHandler ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.test.web.client.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.test.web.client.ExpectedException . expectMessage ( STRING ) ; new LocalHostUriTemplateHandler ( new MockEnvironment ( ) , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockEnvironment org.springframework.boot.test.web.client.MockEnvironment = new MockEnvironment ( ) ; org.springframework.boot.test.web.client.MockEnvironment . setProperty ( STRING , STRING ) ; LocalHostUriTemplateHandler org.springframework.boot.test.web.client.LocalHostUriTemplateHandler = new LocalHostUriTemplateHandler ( org.springframework.boot.test.web.client.MockEnvironment ) ; assertThat ( org.springframework.boot.test.web.client.LocalHostUriTemplateHandler . getRootUri ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockEnvironment org.springframework.boot.test.web.client.MockEnvironment = new MockEnvironment ( ) ; LocalHostUriTemplateHandler org.springframework.boot.test.web.client.LocalHostUriTemplateHandler = new LocalHostUriTemplateHandler ( org.springframework.boot.test.web.client.MockEnvironment ) ; assertThat ( org.springframework.boot.test.web.client.LocalHostUriTemplateHandler . getRootUri ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MockEnvironment org.springframework.boot.test.web.client.MockEnvironment = new MockEnvironment ( ) ; LocalHostUriTemplateHandler org.springframework.boot.test.web.client.LocalHostUriTemplateHandler = new LocalHostUriTemplateHandler ( org.springframework.boot.test.web.client.MockEnvironment , STRING ) ; assertThat ( org.springframework.boot.test.web.client.LocalHostUriTemplateHandler . getRootUri ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockEnvironment org.springframework.boot.test.web.client.MockEnvironment = new MockEnvironment ( ) ; org.springframework.boot.test.web.client.MockEnvironment . setProperty ( STRING , STRING ) ; LocalHostUriTemplateHandler org.springframework.boot.test.web.client.LocalHostUriTemplateHandler = new LocalHostUriTemplateHandler ( org.springframework.boot.test.web.client.MockEnvironment ) ; assertThat ( org.springframework.boot.test.web.client.LocalHostUriTemplateHandler . getRootUri ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
