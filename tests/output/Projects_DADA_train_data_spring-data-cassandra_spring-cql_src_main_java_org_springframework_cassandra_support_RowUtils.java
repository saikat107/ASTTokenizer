<METHOD_START> public static java.lang.Object java.lang.Object ( Row org.springframework.cassandra.support.Row , int int , java.lang.Class<?> < ? > java.lang.Class<?> ) { if ( java.lang.Class<> == null ) { return org.springframework.cassandra.support.Row . getObject ( int ) ; } java.lang.Object java.lang.Object ; if ( java.lang.String .class == java.lang.Class<> ) { return org.springframework.cassandra.support.Row . getString ( int ) ; } else if ( boolean .class == java.lang.Class<> || java.lang.Boolean .class == java.lang.Class<> ) { java.lang.Object = org.springframework.cassandra.support.Row . getBool ( int ) ; } else if ( byte .class == java.lang.Class<> || java.lang.Byte .class == java.lang.Class<> ) { java.lang.Object = org.springframework.cassandra.support.Row . getByte ( int ) ; } else if ( short .class == java.lang.Class<> || java.lang.Short .class == java.lang.Class<> ) { java.lang.Object = org.springframework.cassandra.support.Row . getShort ( int ) ; } else if ( int .class == java.lang.Class<> || java.lang.Integer .class == java.lang.Class<> ) { java.lang.Object = org.springframework.cassandra.support.Row . getInt ( int ) ; } else if ( long .class == java.lang.Class<> || java.lang.Long .class == java.lang.Class<> ) { java.lang.Object = org.springframework.cassandra.support.Row . getLong ( int ) ; } else if ( float .class == java.lang.Class<> || java.lang.Float .class == java.lang.Class<> ) { java.lang.Object = org.springframework.cassandra.support.Row . getFloat ( int ) ; } else if ( double .class == java.lang.Class<> || java.lang.Double .class == java.lang.Class<> || java.lang.Number .class == java.lang.Class<> ) { java.lang.Object = org.springframework.cassandra.support.Row . getDouble ( int ) ; } else if ( java.math.BigDecimal .class == java.lang.Class<> ) { return org.springframework.cassandra.support.Row . getDecimal ( int ) ; } else if ( LocalDate .class == java.lang.Class<> ) { return org.springframework.cassandra.support.Row . getDate ( int ) ; } else if ( java . util . java.util.Date .class == java.lang.Class<> ) { return org.springframework.cassandra.support.Row . getTimestamp ( int ) ; } else if ( java.nio.ByteBuffer .class == java.lang.Class<> ) { return org.springframework.cassandra.support.Row . getBytes ( int ) ; } else if ( TupleValue .class == java.lang.Class<> ) { return org.springframework.cassandra.support.Row . getTupleValue ( int ) ; } else if ( UDTValue .class == java.lang.Class<> ) { return org.springframework.cassandra.support.Row . getUDTValue ( int ) ; } else if ( java.util.UUID .class == java.lang.Class<> ) { return org.springframework.cassandra.support.Row . getUUID ( int ) ; } else { return org.springframework.cassandra.support.Row . getObject ( int ) ; } return ( org.springframework.cassandra.support.Row . isNull ( int ) ? null : java.lang.Object ) ; }  <METHOD_END>
