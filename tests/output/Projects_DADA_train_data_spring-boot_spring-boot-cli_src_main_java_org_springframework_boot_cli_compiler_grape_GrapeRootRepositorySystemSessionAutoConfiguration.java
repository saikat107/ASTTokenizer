<METHOD_START> @ java.lang.Override public void void ( DefaultRepositorySystemSession org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession , RepositorySystem org.springframework.boot.cli.compiler.grape.RepositorySystem ) { java.lang.String java.lang.String = java.lang.System . java.lang.String ( STRING ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { void ( org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession , org.springframework.boot.cli.compiler.grape.RepositorySystem , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private void void ( DefaultRepositorySystemSession org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession , RepositorySystem org.springframework.boot.cli.compiler.grape.RepositorySystem , java.lang.String java.lang.String ) { java.io.File java.io.File = new java.io.File ( java.lang.String , STRING ) ; LocalRepository org.springframework.boot.cli.compiler.grape.LocalRepository = new LocalRepository ( java.io.File ) ; LocalRepositoryManager org.springframework.boot.cli.compiler.grape.LocalRepositoryManager = org.springframework.boot.cli.compiler.grape.RepositorySystem . newLocalRepositoryManager ( org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession , org.springframework.boot.cli.compiler.grape.LocalRepository ) ; org.springframework.boot.cli.compiler.grape.DefaultRepositorySystemSession . setLocalRepositoryManager ( org.springframework.boot.cli.compiler.grape.LocalRepositoryManager ) ; }  <METHOD_END>
