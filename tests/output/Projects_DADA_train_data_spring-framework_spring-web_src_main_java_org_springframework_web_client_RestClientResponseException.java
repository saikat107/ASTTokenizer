<METHOD_START> public void ( java.lang.String java.lang.String , int int , java.lang.String java.lang.String , HttpHeaders org.springframework.web.client.HttpHeaders , byte [] byte[] , java.nio.charset.Charset java.nio.charset.Charset ) { super( java.lang.String ); this . int = int ; this . java.lang.String = java.lang.String ; this . org.springframework.web.client.HttpHeaders = org.springframework.web.client.HttpHeaders ; this . byte[] = ( byte[] != null ? byte[] : new byte [ NUMBER ] ) ; this . java.lang.String = ( java.nio.charset.Charset != null ? java.nio.charset.Charset . java.lang.String ( ) : java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.client.HttpHeaders org.springframework.web.client.HttpHeaders ( ) { return this . org.springframework.web.client.HttpHeaders ; }  <METHOD_END>
<METHOD_START> public byte [] byte[] ( ) { return this . byte[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { try { return new java.lang.String ( this . byte[] , this . java.lang.String ) ; } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) { throw new java.lang.IllegalStateException ( java.io.UnsupportedEncodingException ) ; } }  <METHOD_END>
