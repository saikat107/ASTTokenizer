<METHOD_START> @ java.lang.Override public int int ( ) { return Ordered . HIGHEST_PRECEDENCE ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.ModelAndView ( HttpServletRequest org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , HttpServletResponse org.springframework.boot.autoconfigure.web.servlet.error.HttpServletResponse , java.lang.Object java.lang.Object , java.lang.Exception java.lang.Exception ) { void ( org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , java.lang.Exception ) ; return null ; }  <METHOD_END>
<METHOD_START> private void void ( HttpServletRequest org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest , java.lang.Exception java.lang.Exception ) { org.springframework.boot.autoconfigure.web.servlet.error.HttpServletRequest . setAttribute ( java.lang.String , java.lang.Exception ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( RequestAttributes org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes , boolean boolean ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , new java.util.Date ( ) ) ; void ( java.util.Map<java.lang.String,java.lang.Object> , org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes ) ; void ( java.util.Map<java.lang.String,java.lang.Object> , org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes , boolean ) ; void ( java.util.Map<java.lang.String,java.lang.Object> , org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes ) ; return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , RequestAttributes org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes ) { java.lang.Integer java.lang.Integer = java.lang.Object ( org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes , STRING ) ; if ( java.lang.Integer == null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; return; } java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.Integer ) ; try { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , HttpStatus . valueOf ( java.lang.Integer ) . getReasonPhrase ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING + java.lang.Integer ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , RequestAttributes org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes , boolean boolean ) { java.lang.Throwable java.lang.Throwable = java.lang.Throwable ( org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes ) ; if ( java.lang.Throwable != null ) { while ( java.lang.Throwable instanceof ServletException && java.lang.Throwable . java.lang.Throwable ( ) != null ) { java.lang.Throwable = ( ( ServletException ) java.lang.Throwable ) . getCause ( ) ; } java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.Throwable . java.lang.Class<? extends java.lang.Throwable> ( ) . java.lang.String ( ) ) ; void ( java.util.Map<java.lang.String,java.lang.Object> , java.lang.Throwable ) ; if ( boolean ) { void ( java.util.Map<java.lang.String,java.lang.Object> , java.lang.Throwable ) ; } } java.lang.Object java.lang.Object = java.lang.Object ( org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes , STRING ) ; if ( ( ! StringUtils . isEmpty ( java.lang.Object ) || java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) == null ) && ! ( java.lang.Throwable instanceof BindingResult ) ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , StringUtils . isEmpty ( java.lang.Object ) ? STRING : java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , java.lang.Throwable java.lang.Throwable ) { BindingResult org.springframework.boot.autoconfigure.web.servlet.error.BindingResult = org.springframework.boot.autoconfigure.web.servlet.error.BindingResult ( java.lang.Throwable ) ; if ( org.springframework.boot.autoconfigure.web.servlet.error.BindingResult == null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.Throwable . java.lang.String ( ) ) ; return; } if ( org.springframework.boot.autoconfigure.web.servlet.error.BindingResult . getErrorCount ( ) > NUMBER ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.boot.autoconfigure.web.servlet.error.BindingResult . getAllErrors ( ) ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING + org.springframework.boot.autoconfigure.web.servlet.error.BindingResult . getObjectName ( ) + STRING + org.springframework.boot.autoconfigure.web.servlet.error.BindingResult . getErrorCount ( ) ) ; } else { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.web.servlet.error.BindingResult org.springframework.boot.autoconfigure.web.servlet.error.BindingResult ( java.lang.Throwable java.lang.Throwable ) { if ( java.lang.Throwable instanceof BindingResult ) { return ( BindingResult ) java.lang.Throwable ; } if ( java.lang.Throwable instanceof MethodArgumentNotValidException ) { return ( ( MethodArgumentNotValidException ) java.lang.Throwable ) . getBindingResult ( ) ; } return null ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , java.lang.Throwable java.lang.Throwable ) { java.io.StringWriter java.io.StringWriter = new java.io.StringWriter ( ) ; java.lang.Throwable . void ( new java.io.PrintWriter ( java.io.StringWriter ) ) ; java.io.StringWriter . void ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.io.StringWriter . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , RequestAttributes org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes ) { java.lang.String java.lang.String = java.lang.Object ( org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes , STRING ) ; if ( java.lang.String != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Throwable java.lang.Throwable ( RequestAttributes org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes ) { java.lang.Throwable java.lang.Throwable = java.lang.Object ( org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes , java.lang.String ) ; if ( java.lang.Throwable == null ) { java.lang.Throwable = java.lang.Object ( org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes , STRING ) ; } return java.lang.Throwable ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private < T > T T ( RequestAttributes org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes , java.lang.String java.lang.String ) { return ( T ) org.springframework.boot.autoconfigure.web.servlet.error.RequestAttributes . getAttribute ( java.lang.String , RequestAttributes . SCOPE_REQUEST ) ; }  <METHOD_END>
