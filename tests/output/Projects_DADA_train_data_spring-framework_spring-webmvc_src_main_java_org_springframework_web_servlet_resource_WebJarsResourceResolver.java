<METHOD_START> public void ( ) { this( new WebJarAssetLocator ( ) ); }  <METHOD_END>
<METHOD_START> public void ( WebJarAssetLocator org.springframework.web.servlet.resource.WebJarAssetLocator ) { this . org.springframework.web.servlet.resource.WebJarAssetLocator = org.springframework.web.servlet.resource.WebJarAssetLocator ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.resource.Resource org.springframework.web.servlet.resource.Resource ( HttpServletRequest org.springframework.web.servlet.resource.HttpServletRequest , java.lang.String java.lang.String , java.util.List<? extends org.springframework.web.servlet.resource.Resource> < ? extends Resource > java.util.List<? extends org.springframework.web.servlet.resource.Resource> , ResourceResolverChain org.springframework.web.servlet.resource.ResourceResolverChain ) { Resource org.springframework.web.servlet.resource.Resource = org.springframework.web.servlet.resource.ResourceResolverChain . resolveResource ( org.springframework.web.servlet.resource.HttpServletRequest , java.lang.String , java.util.List<> ) ; if ( org.springframework.web.servlet.resource.Resource == null ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; if ( java.lang.String != null ) { return org.springframework.web.servlet.resource.ResourceResolverChain . resolveResource ( org.springframework.web.servlet.resource.HttpServletRequest , java.lang.String , java.util.List<> ) ; } } return org.springframework.web.servlet.resource.Resource ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( java.lang.String java.lang.String , java.util.List<? extends org.springframework.web.servlet.resource.Resource> < ? extends Resource > java.util.List<? extends org.springframework.web.servlet.resource.Resource> , ResourceResolverChain org.springframework.web.servlet.resource.ResourceResolverChain ) { java.lang.String java.lang.String = org.springframework.web.servlet.resource.ResourceResolverChain . resolveUrlPath ( java.lang.String , java.util.List<> ) ; if ( java.lang.String == null ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; if ( java.lang.String != null ) { return org.springframework.web.servlet.resource.ResourceResolverChain . resolveUrlPath ( java.lang.String , java.util.List<> ) ; } } return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String ) { try { int int = ( java.lang.String . boolean ( STRING ) ? NUMBER : NUMBER ) ; int int = java.lang.String . int ( STRING , NUMBER ) ; if ( int != - NUMBER ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( int , int ) ; java.lang.String java.lang.String = java.lang.String . java.lang.String ( int ) ; java.lang.String java.lang.String = org.springframework.web.servlet.resource.WebJarAssetLocator . getFullPath ( java.lang.String , java.lang.String ) ; return java.lang.String . java.lang.String ( int ) ; } } catch ( MultipleMatchesException org.springframework.web.servlet.resource.MultipleMatchesException ) { if ( logger . isWarnEnabled ( ) ) { logger . warn ( STRING + java.lang.String + STRING , org.springframework.web.servlet.resource.MultipleMatchesException ) ; } } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( STRING + java.lang.String + STRING ) ; } } return null ; }  <METHOD_END>
