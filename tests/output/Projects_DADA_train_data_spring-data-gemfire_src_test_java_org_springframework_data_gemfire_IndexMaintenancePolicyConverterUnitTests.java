<METHOD_START> @ After public void void ( ) { org.springframework.data.gemfire.IndexMaintenancePolicyConverter . setValue ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.gemfire.IndexMaintenancePolicyConverter . convert ( STRING ) ) . isEqualTo ( IndexMaintenancePolicyType . ASYNCHRONOUS ) ; assertThat ( org.springframework.data.gemfire.IndexMaintenancePolicyConverter . convert ( STRING ) ) . isEqualTo ( IndexMaintenancePolicyType . SYNCHRONOUS ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.gemfire.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; org.springframework.data.gemfire.ExpectedException . expectCause ( is ( nullValue ( java.lang.Throwable .class ) ) ) ; org.springframework.data.gemfire.ExpectedException . expectMessage ( STRING ) ; org.springframework.data.gemfire.IndexMaintenancePolicyConverter . convert ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.gemfire.IndexMaintenancePolicyConverter . getValue ( ) ) . isNull ( ) ; org.springframework.data.gemfire.IndexMaintenancePolicyConverter . setAsText ( STRING ) ; assertThat ( org.springframework.data.gemfire.IndexMaintenancePolicyConverter . getValue ( ) ) . isEqualTo ( IndexMaintenancePolicyType . ASYNCHRONOUS ) ; org.springframework.data.gemfire.IndexMaintenancePolicyConverter . setAsText ( STRING ) ; assertThat ( org.springframework.data.gemfire.IndexMaintenancePolicyConverter . getValue ( ) ) . isEqualTo ( IndexMaintenancePolicyType . SYNCHRONOUS ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { try { org.springframework.data.gemfire.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; org.springframework.data.gemfire.ExpectedException . expectCause ( is ( nullValue ( java.lang.Throwable .class ) ) ) ; org.springframework.data.gemfire.ExpectedException . expectMessage ( STRING ) ; org.springframework.data.gemfire.IndexMaintenancePolicyConverter . setAsText ( STRING ) ; } finally { assertThat ( org.springframework.data.gemfire.IndexMaintenancePolicyConverter . getValue ( ) ) . isNull ( ) ; } }  <METHOD_END>
