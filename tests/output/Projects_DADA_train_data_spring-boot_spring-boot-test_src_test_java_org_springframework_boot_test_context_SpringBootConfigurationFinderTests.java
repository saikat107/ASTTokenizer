<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.test.context.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.test.context.ExpectedException . expectMessage ( STRING ) ; this . org.springframework.boot.test.context.SpringBootConfigurationFinder . findFromClass ( ( java.lang.Class<?> < ? > ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.test.context.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.test.context.ExpectedException . expectMessage ( STRING ) ; this . org.springframework.boot.test.context.SpringBootConfigurationFinder . findFromPackage ( ( java.lang.String ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = this . org.springframework.boot.test.context.SpringBootConfigurationFinder . findFromPackage ( STRING ) ; assertThat ( java.lang.Class<> ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = this . org.springframework.boot.test.context.SpringBootConfigurationFinder . findFromClass ( Example .class ) ; assertThat ( java.lang.Class<> ) . isEqualTo ( ExampleConfig .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = this . org.springframework.boot.test.context.SpringBootConfigurationFinder . findFromPackage ( STRING ) ; assertThat ( java.lang.Class<> ) . isEqualTo ( ExampleConfig .class ) ; }  <METHOD_END>
