<METHOD_START> public void ( org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol ) { Assert . notNull ( org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol , STRING ) ; this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol = org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.integration.syslog.config.MessageChannel ) { this . org.springframework.integration.syslog.config.MessageChannel = org.springframework.integration.syslog.config.MessageChannel ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.integration.syslog.config.MessageChannel ) { this . org.springframework.integration.syslog.config.MessageChannel = org.springframework.integration.syslog.config.MessageChannel ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . java.lang.Long = long ; }  <METHOD_END>
<METHOD_START> public void void ( AbstractServerConnectionFactory org.springframework.integration.syslog.config.AbstractServerConnectionFactory ) { this . org.springframework.integration.syslog.config.AbstractServerConnectionFactory = org.springframework.integration.syslog.config.AbstractServerConnectionFactory ; }  <METHOD_END>
<METHOD_START> public void void ( UnicastReceivingChannelAdapter org.springframework.integration.syslog.config.UnicastReceivingChannelAdapter ) { this . org.springframework.integration.syslog.config.UnicastReceivingChannelAdapter = org.springframework.integration.syslog.config.UnicastReceivingChannelAdapter ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . java.lang.Integer = int ; }  <METHOD_END>
<METHOD_START> public void void ( MessageConverter org.springframework.integration.syslog.config.MessageConverter ) { this . org.springframework.integration.syslog.config.MessageConverter = org.springframework.integration.syslog.config.MessageConverter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationEventPublisher org.springframework.integration.syslog.config.ApplicationEventPublisher ) { this . org.springframework.integration.syslog.config.ApplicationEventPublisher = org.springframework.integration.syslog.config.ApplicationEventPublisher ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport != null ) { this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . start ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport != null ) { this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . stop ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { if ( this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport != null ) { return this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . isRunning ( ) ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Runnable java.lang.Runnable ) { if ( this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport != null ) { this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . stop ( java.lang.Runnable ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport == null ? SyslogReceivingChannelAdapterSupport .class : this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . getClass ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport ( ) java.lang.Exception { SyslogReceivingChannelAdapterSupport org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport ; if ( this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol == org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol ) { org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport = new TcpSyslogReceivingChannelAdapter ( ) ; if ( this . org.springframework.integration.syslog.config.AbstractServerConnectionFactory != null ) { Assert . isNull ( this . java.lang.Integer , STRING ) ; ( ( TcpSyslogReceivingChannelAdapter ) org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport ) . setConnectionFactory ( this . org.springframework.integration.syslog.config.AbstractServerConnectionFactory ) ; } else if ( this . org.springframework.integration.syslog.config.ApplicationEventPublisher != null ) { ( ( TcpSyslogReceivingChannelAdapter ) org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport ) . setApplicationEventPublisher ( this . org.springframework.integration.syslog.config.ApplicationEventPublisher ) ; } Assert . isNull ( this . org.springframework.integration.syslog.config.UnicastReceivingChannelAdapter , STRING ) ; } else if ( this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol == org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol ) { org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport = new UdpSyslogReceivingChannelAdapter ( ) ; if ( this . org.springframework.integration.syslog.config.UnicastReceivingChannelAdapter != null ) { Assert . isNull ( this . java.lang.Integer , STRING ) ; ( ( UdpSyslogReceivingChannelAdapter ) org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport ) . setUdpAdapter ( this . org.springframework.integration.syslog.config.UnicastReceivingChannelAdapter ) ; } Assert . isNull ( this . org.springframework.integration.syslog.config.AbstractServerConnectionFactory , STRING ) ; } else { throw new java.lang.IllegalStateException ( STRING + this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterFactoryBean.Protocol . java.lang.String ( ) ) ; } if ( this . java.lang.Integer != null ) { org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . setPort ( this . java.lang.Integer ) ; } if ( this . org.springframework.integration.syslog.config.MessageChannel != null ) { org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . setOutputChannel ( this . org.springframework.integration.syslog.config.MessageChannel ) ; } org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . setAutoStartup ( this . boolean ) ; org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . setPhase ( this . int ) ; if ( this . org.springframework.integration.syslog.config.MessageChannel != null ) { org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . setErrorChannel ( this . org.springframework.integration.syslog.config.MessageChannel ) ; } if ( this . java.lang.Long != null ) { org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . setSendTimeout ( this . java.lang.Long ) ; } if ( this . org.springframework.integration.syslog.config.MessageConverter != null ) { org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . setConverter ( this . org.springframework.integration.syslog.config.MessageConverter ) ; } if ( this . java.lang.String != null ) { org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . setBeanName ( this . java.lang.String ) ; } if ( this . getBeanFactory ( ) != null ) { org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . setBeanFactory ( this . getBeanFactory ( ) ) ; } org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport . afterPropertiesSet ( ) ; this . org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport = org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport ; return org.springframework.integration.syslog.config.SyslogReceivingChannelAdapterSupport ; }  <METHOD_END>
