<METHOD_START> public void ( ChannelInterceptor org.springframework.integration.channel.interceptor.ChannelInterceptor ) { Assert . notNull ( org.springframework.integration.channel.interceptor.ChannelInterceptor , STRING ) ; this . org.springframework.integration.channel.interceptor.ChannelInterceptor = org.springframework.integration.channel.interceptor.ChannelInterceptor ; if ( org.springframework.integration.channel.interceptor.ChannelInterceptor instanceof Ordered ) { this . int = ( ( Ordered ) org.springframework.integration.channel.interceptor.ChannelInterceptor ) . getOrder ( ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.integration.channel.interceptor.ChannelInterceptor org.springframework.integration.channel.interceptor.ChannelInterceptor ( ) { return this . org.springframework.integration.channel.interceptor.ChannelInterceptor ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String [] java.lang.String[] ) { this . java.lang.String[] = java.util.Arrays . java.lang.String[] ( java.lang.String[] , java.lang.String[] . int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.integration.channel.interceptor.ChannelInterceptor . toString ( ) ; }  <METHOD_END>
