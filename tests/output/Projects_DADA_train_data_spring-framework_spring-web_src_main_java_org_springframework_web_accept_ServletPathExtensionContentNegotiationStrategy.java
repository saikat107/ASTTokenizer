<METHOD_START> public void ( ServletContext org.springframework.web.accept.ServletContext , java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> < java.lang.String , MediaType > java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) { super( java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ); Assert . notNull ( org.springframework.web.accept.ServletContext , STRING ) ; this . org.springframework.web.accept.ServletContext = org.springframework.web.accept.ServletContext ; }  <METHOD_END>
<METHOD_START> public void ( ServletContext org.springframework.web.accept.ServletContext ) { this( org.springframework.web.accept.ServletContext , null ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.accept.MediaType org.springframework.web.accept.MediaType ( NativeWebRequest org.springframework.web.accept.NativeWebRequest , java.lang.String java.lang.String )			throws org.springframework.web.accept.HttpMediaTypeNotAcceptableException { MediaType org.springframework.web.accept.MediaType = null ; if ( this . org.springframework.web.accept.ServletContext != null ) { java.lang.String java.lang.String = this . org.springframework.web.accept.ServletContext . getMimeType ( STRING + java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.web.accept.MediaType = MediaType . parseMediaType ( java.lang.String ) ; } } if ( org.springframework.web.accept.MediaType == null || MediaType . APPLICATION_OCTET_STREAM . equals ( org.springframework.web.accept.MediaType ) ) { MediaType org.springframework.web.accept.MediaType = super. handleNoMatch ( org.springframework.web.accept.NativeWebRequest , java.lang.String ) ; if ( org.springframework.web.accept.MediaType != null ) { org.springframework.web.accept.MediaType = org.springframework.web.accept.MediaType ; } } return org.springframework.web.accept.MediaType ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.accept.MediaType org.springframework.web.accept.MediaType ( Resource org.springframework.web.accept.Resource ) { MediaType org.springframework.web.accept.MediaType = null ; if ( this . org.springframework.web.accept.ServletContext != null ) { java.lang.String java.lang.String = this . org.springframework.web.accept.ServletContext . getMimeType ( org.springframework.web.accept.Resource . getFilename ( ) ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.web.accept.MediaType = MediaType . parseMediaType ( java.lang.String ) ; } } if ( org.springframework.web.accept.MediaType == null || MediaType . APPLICATION_OCTET_STREAM . equals ( org.springframework.web.accept.MediaType ) ) { MediaType org.springframework.web.accept.MediaType = super. getMediaTypeForResource ( org.springframework.web.accept.Resource ) ; if ( org.springframework.web.accept.MediaType != null ) { org.springframework.web.accept.MediaType = org.springframework.web.accept.MediaType ; } } return org.springframework.web.accept.MediaType ; }  <METHOD_END>
