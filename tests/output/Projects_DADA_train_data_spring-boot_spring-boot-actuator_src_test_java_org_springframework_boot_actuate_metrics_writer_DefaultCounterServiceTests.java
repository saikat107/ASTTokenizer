<METHOD_START> @ Before public void void ( ) { MockitoAnnotations . initMocks ( this ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.writer.DefaultCounterService . increment ( STRING ) ; verify ( this . org.springframework.boot.actuate.metrics.writer.MetricWriter ) . increment ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . capture ( ) ) ; assertThat ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . getValue ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . getValue ( ) . getValue ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.writer.DefaultCounterService . increment ( STRING ) ; verify ( this . org.springframework.boot.actuate.metrics.writer.MetricWriter ) . increment ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . capture ( ) ) ; assertThat ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . getValue ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . getValue ( ) . getValue ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.writer.DefaultCounterService . increment ( STRING ) ; verify ( this . org.springframework.boot.actuate.metrics.writer.MetricWriter ) . increment ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . capture ( ) ) ; assertThat ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . getValue ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . getValue ( ) . getValue ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.writer.DefaultCounterService . decrement ( STRING ) ; verify ( this . org.springframework.boot.actuate.metrics.writer.MetricWriter ) . increment ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . capture ( ) ) ; assertThat ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . getValue ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( this . org.springframework.boot.actuate.metrics.writer.ArgumentCaptor<org.springframework.boot.actuate.metrics.writer.Delta<java.lang.Number>> . getValue ( ) . getValue ( ) ) . isEqualTo ( - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.actuate.metrics.writer.DefaultCounterService . reset ( STRING ) ; verify ( this . org.springframework.boot.actuate.metrics.writer.MetricWriter ) . reset ( STRING ) ; }  <METHOD_END>
