<METHOD_START> @ Before public void void ( ) java.lang.Exception { java.sql.Connection = mock ( java.sql.Connection .class ) ; java.sql.DatabaseMetaData = mock ( java.sql.DatabaseMetaData .class ) ; given ( java.sql.Connection . java.sql.DatabaseMetaData ( ) ) . willReturn ( java.sql.DatabaseMetaData ) ; javax.sql.DataSource = mock ( javax.sql.DataSource .class ) ; given ( javax.sql.DataSource . java.sql.Connection ( ) ) . willReturn ( java.sql.Connection ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) java.lang.Exception { verify ( java.sql.Connection ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; given ( java.sql.DatabaseMetaData . java.lang.String ( ) ) . willReturn ( STRING ) ; given ( java.sql.DatabaseMetaData . java.lang.String ( ) ) . willReturn ( java.lang.String ) ; given ( java.sql.DatabaseMetaData . boolean ( ) ) . willReturn ( true ) ; java.util.List<org.springframework.jdbc.core.simple.SqlParameter> < SqlParameter > java.util.List<org.springframework.jdbc.core.simple.SqlParameter> = new java.util.ArrayList<org.springframework.jdbc.core.simple.SqlParameter> <> ( ) ; java.util.List<org.springframework.jdbc.core.simple.SqlParameter> . add ( new SqlParameter ( STRING , java.sql.Types . int ) ) ; java.util.List<org.springframework.jdbc.core.simple.SqlParameter> . add ( new SqlInOutParameter ( STRING , java.sql.Types . int ) ) ; java.util.List<org.springframework.jdbc.core.simple.SqlParameter> . add ( new SqlOutParameter ( STRING , java.sql.Types . int ) ) ; MapSqlParameterSource org.springframework.jdbc.core.simple.MapSqlParameterSource = new MapSqlParameterSource ( ) ; org.springframework.jdbc.core.simple.MapSqlParameterSource . addValue ( STRING , NUMBER ) ; org.springframework.jdbc.core.simple.MapSqlParameterSource . addValue ( STRING , STRING ) ; org.springframework.jdbc.core.simple.MapSqlParameterSource . addValue ( STRING , STRING ) ; org.springframework.jdbc.core.simple.CallMetaDataContext . setProcedureName ( java.lang.String ) ; org.springframework.jdbc.core.simple.CallMetaDataContext . initializeMetaData ( javax.sql.DataSource ) ; org.springframework.jdbc.core.simple.CallMetaDataContext . processParameters ( java.util.List<org.springframework.jdbc.core.simple.SqlParameter> ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.jdbc.core.simple.CallMetaDataContext . matchInParameterValuesWithCallParameters ( org.springframework.jdbc.core.simple.MapSqlParameterSource ) ; assertEquals ( STRING , NUMBER , java.util.Map<java.lang.String,java.lang.Object> . int ( ) ) ; assertTrue ( STRING , java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) ; assertTrue ( STRING , java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) ; assertTrue ( STRING , ! java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = org.springframework.jdbc.core.simple.CallMetaDataContext . getOutParameterNames ( ) ; assertEquals ( STRING , NUMBER , java.util.List<java.lang.String> . int ( ) ) ; java.util.List<org.springframework.jdbc.core.simple.SqlParameter> < SqlParameter > java.util.List<org.springframework.jdbc.core.simple.SqlParameter> = org.springframework.jdbc.core.simple.CallMetaDataContext . getCallParameters ( ) ; assertEquals ( STRING , NUMBER , java.util.List<org.springframework.jdbc.core.simple.SqlParameter> . size ( ) ) ; }  <METHOD_END>
