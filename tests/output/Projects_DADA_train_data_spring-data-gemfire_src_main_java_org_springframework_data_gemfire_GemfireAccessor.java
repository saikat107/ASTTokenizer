<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public < K , V > org.springframework.data.gemfire.Region<K,V> < K , V > org.springframework.data.gemfire.Region<K,V> ( ) { return org.springframework.data.gemfire.Region ; }  <METHOD_END>
<METHOD_START> public void void ( Region < ? , ? > org.springframework.data.gemfire.Region<?,?> ) { this . org.springframework.data.gemfire.Region = org.springframework.data.gemfire.Region<,> ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Assert . notNull ( org.springframework.data.gemfire.Region<java.lang.Object,java.lang.Object> ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.DataAccessException org.springframework.data.gemfire.DataAccessException ( GemFireCheckedException org.springframework.data.gemfire.GemFireCheckedException ) { return GemfireCacheUtils . convertGemfireAccessException ( org.springframework.data.gemfire.GemFireCheckedException ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.DataAccessException org.springframework.data.gemfire.DataAccessException ( GemFireException org.springframework.data.gemfire.GemFireException ) { return GemfireCacheUtils . convertGemfireAccessException ( org.springframework.data.gemfire.GemFireException ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.DataAccessException org.springframework.data.gemfire.DataAccessException ( java.lang.RuntimeException java.lang.RuntimeException ) { return GemfireCacheUtils . convertQueryExceptions ( java.lang.RuntimeException ) ; }  <METHOD_END>
