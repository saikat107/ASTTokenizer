<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.xml.config.ParserContext , BeanDefinitionBuilder org.springframework.integration.xml.config.BeanDefinitionBuilder ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; Assert . isTrue ( StringUtils . hasText ( java.lang.String ) ^ StringUtils . hasText ( java.lang.String ) , STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.xml.config.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; } else if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.xml.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.xml.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.xml.config.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; } java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING ) ; if ( ! CollectionUtils . isEmpty ( java.util.List<org.w3c.dom.Element> ) ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new ManagedMap < java.lang.String , java.lang.Object > ( ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; Assert . isTrue ( StringUtils . hasText ( java.lang.String ) ^ StringUtils . hasText ( java.lang.String ) , STRING ) ; RootBeanDefinition org.springframework.integration.xml.config.RootBeanDefinition = null ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.xml.config.RootBeanDefinition = new RootBeanDefinition ( STRING ) ; org.springframework.integration.xml.config.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( java.lang.String ) ; } else if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.xml.config.RootBeanDefinition = new RootBeanDefinition ( STRING ) ; org.springframework.integration.xml.config.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( java.lang.String ) ; } if ( org.springframework.integration.xml.config.RootBeanDefinition != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , org.springframework.integration.xml.config.RootBeanDefinition ) ; } } org.springframework.integration.xml.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ; } IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; }  <METHOD_END>
