<METHOD_START> void ( ) { java.util.Set<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> = new java.util.LinkedHashSet<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> < org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec > ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.index.TextIndexDefinition org.springframework.data.mongodb.core.index.TextIndexDefinition ( ) { return new org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( ) . org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( ) . org.springframework.data.mongodb.core.index.TextIndexDefinition ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( ) { return new org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec ) { this . java.util.Set<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> . boolean ( org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> < org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec > java.util.Collection<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> ) { this . java.util.Set<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> . boolean ( java.util.Collection<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! java.util.Set<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.index.Document org.springframework.data.mongodb.core.index.Document ( ) { Document org.springframework.data.mongodb.core.index.Document = new Document ( ) ; for ( org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec : java.util.Set<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> ) { org.springframework.data.mongodb.core.index.Document . put ( org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec . java.lang.String , STRING ) ; } return org.springframework.data.mongodb.core.index.Document ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.index.Document org.springframework.data.mongodb.core.index.Document ( ) { Document org.springframework.data.mongodb.core.index.Document = new Document ( ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.mongodb.core.index.Document . put ( STRING , java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.mongodb.core.index.Document . put ( STRING , java.lang.String ) ; } Document org.springframework.data.mongodb.core.index.Document = new Document ( ) ; for ( org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec : java.util.Set<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> ) { if ( org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec . boolean ( ) ) { org.springframework.data.mongodb.core.index.Document . put ( org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec . java.lang.String ( ) , org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec . java.lang.Float ( ) ) ; } } if ( ! org.springframework.data.mongodb.core.index.Document . isEmpty ( ) ) { org.springframework.data.mongodb.core.index.Document . put ( STRING , org.springframework.data.mongodb.core.index.Document ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.mongodb.core.index.Document . put ( STRING , java.lang.String ) ; } if ( org.springframework.data.mongodb.core.index.IndexFilter != null ) { org.springframework.data.mongodb.core.index.Document . put ( STRING , org.springframework.data.mongodb.core.index.IndexFilter . getFilterObject ( ) ) ; } return org.springframework.data.mongodb.core.index.Document ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this( java.lang.String , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.Float java.lang.Float ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . java.lang.Float = java.lang.Float != null ? java.lang.Float : NUMBER ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.Float java.lang.Float ( ) { return java.lang.Float ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.lang.Float != null && this . java.lang.Float . int ( NUMBER ) != NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ObjectUtils . nullSafeHashCode ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null ) { return false ; } if ( ! ( java.lang.Object instanceof org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec ) ) { return false ; } org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec = ( org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec ) java.lang.Object ; return ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this . org.springframework.data.mongodb.core.index.TextIndexDefinition = new org.springframework.data.mongodb.core.index.TextIndexDefinition ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( java.lang.String java.lang.String ) { this . org.springframework.data.mongodb.core.index.TextIndexDefinition . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( ) { if ( ! org.springframework.data.mongodb.core.index.TextIndexDefinition . java.util.Set<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> . boolean ( ) ) { throw new InvalidDataAccessApiUsageException ( STRING ) ; } this . org.springframework.data.mongodb.core.index.TextIndexDefinition . java.util.Set<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> . boolean ( org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( java.lang.String ... java.lang.String[] ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( java.lang.String ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( java.lang.String , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( java.lang.String java.lang.String , java.lang.Float java.lang.Float ) { if ( this . org.springframework.data.mongodb.core.index.TextIndexDefinition . java.util.Set<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> . boolean ( org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec ) ) { throw new InvalidDataAccessApiUsageException ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; } this . org.springframework.data.mongodb.core.index.TextIndexDefinition . java.util.Set<org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec> . boolean ( new org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexedFieldSpec ( java.lang.String , java.lang.Float ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( java.lang.String java.lang.String ) { this . org.springframework.data.mongodb.core.index.TextIndexDefinition . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( java.lang.String java.lang.String ) { if ( StringUtils . hasText ( this . org.springframework.data.mongodb.core.index.TextIndexDefinition . java.lang.String ) ) { throw new InvalidDataAccessApiUsageException ( java.lang.String . java.lang.String ( STRING , java.lang.String , this . org.springframework.data.mongodb.core.index.TextIndexDefinition . java.lang.String ) ) ; } this . org.springframework.data.mongodb.core.index.TextIndexDefinition . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder org.springframework.data.mongodb.core.index.TextIndexDefinition.TextIndexDefinitionBuilder ( IndexFilter org.springframework.data.mongodb.core.index.IndexFilter ) { this . org.springframework.data.mongodb.core.index.TextIndexDefinition . org.springframework.data.mongodb.core.index.IndexFilter = org.springframework.data.mongodb.core.index.IndexFilter ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.index.TextIndexDefinition org.springframework.data.mongodb.core.index.TextIndexDefinition ( ) { return this . org.springframework.data.mongodb.core.index.TextIndexDefinition ; }  <METHOD_END>
