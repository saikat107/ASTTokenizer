<METHOD_START> @ Before public void void ( ) { this . java.lang.String = java.lang.System . java.lang.String ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { if ( this . java.lang.String != null ) { java.lang.System . java.lang.String ( STRING , this . java.lang.String ) ; } else { java.lang.System . java.lang.String ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SampleProfileApplication . main ( new java.lang.String [ NUMBER ] ) ; java.lang.String java.lang.String = this . sample.profile.OutputCapture . toString ( ) ; assertThat ( java.lang.String ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.System . java.lang.String ( STRING , STRING ) ; SampleProfileApplication . main ( new java.lang.String [ NUMBER ] ) ; java.lang.String java.lang.String = this . sample.profile.OutputCapture . toString ( ) ; assertThat ( java.lang.String ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.System . java.lang.String ( STRING , STRING ) ; SampleProfileApplication . main ( new java.lang.String [ NUMBER ] ) ; java.lang.String java.lang.String = this . sample.profile.OutputCapture . toString ( ) ; assertThat ( java.lang.String ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SampleProfileApplication . main ( new java.lang.String [] { STRING } ) ; java.lang.String java.lang.String = this . sample.profile.OutputCapture . toString ( ) ; assertThat ( java.lang.String ) . contains ( STRING ) ; }  <METHOD_END>
