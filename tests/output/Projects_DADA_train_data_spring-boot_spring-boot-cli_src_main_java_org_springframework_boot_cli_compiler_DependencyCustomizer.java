<METHOD_START> public void ( GroovyClassLoader org.springframework.boot.cli.compiler.GroovyClassLoader , ModuleNode org.springframework.boot.cli.compiler.ModuleNode , DependencyResolutionContext org.springframework.boot.cli.compiler.DependencyResolutionContext ) { this . org.springframework.boot.cli.compiler.GroovyClassLoader = org.springframework.boot.cli.compiler.GroovyClassLoader ; this . org.springframework.boot.cli.compiler.ClassNode = org.springframework.boot.cli.compiler.ModuleNode . getClasses ( ) . get ( NUMBER ) ; this . org.springframework.boot.cli.compiler.DependencyResolutionContext = org.springframework.boot.cli.compiler.DependencyResolutionContext ; }  <METHOD_END>
<METHOD_START> protected void ( org.springframework.boot.cli.compiler.DependencyCustomizer org.springframework.boot.cli.compiler.DependencyCustomizer ) { this . org.springframework.boot.cli.compiler.GroovyClassLoader = org.springframework.boot.cli.compiler.DependencyCustomizer . org.springframework.boot.cli.compiler.GroovyClassLoader ; this . org.springframework.boot.cli.compiler.ClassNode = org.springframework.boot.cli.compiler.DependencyCustomizer . org.springframework.boot.cli.compiler.ClassNode ; this . org.springframework.boot.cli.compiler.DependencyResolutionContext = org.springframework.boot.cli.compiler.DependencyCustomizer . org.springframework.boot.cli.compiler.DependencyResolutionContext ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.lang.String ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String java.lang.String = this . org.springframework.boot.cli.compiler.DependencyResolutionContext . getArtifactCoordinatesResolver ( ) . getVersion ( java.lang.String ) ; if ( java.lang.String == null ) { java.lang.String = java.lang.String ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.compiler.DependencyCustomizer org.springframework.boot.cli.compiler.DependencyCustomizer ( final java.lang.String ... java.lang.String[] ) { return new org.springframework.boot.cli.compiler.DependencyCustomizer ( this ) { @ java.lang.Override protected boolean boolean ( ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { try { org.springframework.boot.cli.compiler.DependencyCustomizer .this . org.springframework.boot.cli.compiler.GroovyClassLoader . loadClass ( java.lang.String ) ; } catch ( java.lang.Exception java.lang.Exception ) { return true ; } } return false ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { try { org.springframework.boot.cli.compiler.DependencyCustomizer .this . org.springframework.boot.cli.compiler.GroovyClassLoader . loadClass ( java.lang.String ) ; } catch ( java.lang.Exception java.lang.Exception ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.compiler.DependencyCustomizer org.springframework.boot.cli.compiler.DependencyCustomizer ( final java.lang.String ... java.lang.String[] ) { return new org.springframework.boot.cli.compiler.DependencyCustomizer ( this ) { @ java.lang.Override protected boolean boolean ( ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { try { org.springframework.boot.cli.compiler.DependencyCustomizer .this . org.springframework.boot.cli.compiler.GroovyClassLoader . loadClass ( java.lang.String ) ; return false ; } catch ( java.lang.Exception java.lang.Exception ) { } } return org.springframework.boot.cli.compiler.DependencyCustomizer .this . boolean ( ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { try { org.springframework.boot.cli.compiler.DependencyCustomizer .this . org.springframework.boot.cli.compiler.GroovyClassLoader . loadClass ( java.lang.String ) ; return false ; } catch ( java.lang.Exception java.lang.Exception ) { } } return org.springframework.boot.cli.compiler.DependencyCustomizer .this . boolean ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.compiler.DependencyCustomizer org.springframework.boot.cli.compiler.DependencyCustomizer ( final java.lang.String ... java.lang.String[] ) { return new org.springframework.boot.cli.compiler.DependencyCustomizer ( this ) { @ java.lang.Override protected boolean boolean ( ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { try { if ( org.springframework.boot.cli.compiler.DependencyCustomizer .this . org.springframework.boot.cli.compiler.GroovyClassLoader . getResource ( java.lang.String ) == null ) { return false ; } return true ; } catch ( java.lang.Exception java.lang.Exception ) { } } return org.springframework.boot.cli.compiler.DependencyCustomizer .this . boolean ( ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { try { if ( org.springframework.boot.cli.compiler.DependencyCustomizer .this . org.springframework.boot.cli.compiler.GroovyClassLoader . getResource ( java.lang.String ) == null ) { return false ; } return true ; } catch ( java.lang.Exception java.lang.Exception ) { } } return org.springframework.boot.cli.compiler.DependencyCustomizer .this . boolean ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.compiler.DependencyCustomizer org.springframework.boot.cli.compiler.DependencyCustomizer ( final java.lang.String ... java.lang.String[] ) { return new org.springframework.boot.cli.compiler.DependencyCustomizer ( this ) { @ java.lang.Override protected boolean boolean ( ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { try { if ( org.springframework.boot.cli.compiler.DependencyCustomizer .this . org.springframework.boot.cli.compiler.GroovyClassLoader . getResource ( java.lang.String ) != null ) { return true ; } return false ; } catch ( java.lang.Exception java.lang.Exception ) { } } return org.springframework.boot.cli.compiler.DependencyCustomizer .this . boolean ( ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { try { if ( org.springframework.boot.cli.compiler.DependencyCustomizer .this . org.springframework.boot.cli.compiler.GroovyClassLoader . getResource ( java.lang.String ) != null ) { return true ; } return false ; } catch ( java.lang.Exception java.lang.Exception ) { } } return org.springframework.boot.cli.compiler.DependencyCustomizer .this . boolean ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.compiler.DependencyCustomizer org.springframework.boot.cli.compiler.DependencyCustomizer ( java.lang.String ... java.lang.String[] ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { org.springframework.boot.cli.compiler.DependencyCustomizer ( java.lang.String , null , null , true ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.compiler.DependencyCustomizer org.springframework.boot.cli.compiler.DependencyCustomizer ( java.lang.String java.lang.String , boolean boolean ) { return org.springframework.boot.cli.compiler.DependencyCustomizer ( java.lang.String , null , null , boolean ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.compiler.DependencyCustomizer org.springframework.boot.cli.compiler.DependencyCustomizer ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { if ( boolean ( ) ) { ArtifactCoordinatesResolver org.springframework.boot.cli.compiler.ArtifactCoordinatesResolver = this . org.springframework.boot.cli.compiler.DependencyResolutionContext . getArtifactCoordinatesResolver ( ) ; this . org.springframework.boot.cli.compiler.ClassNode . addAnnotation ( org.springframework.boot.cli.compiler.AnnotationNode ( org.springframework.boot.cli.compiler.ArtifactCoordinatesResolver . getGroupId ( java.lang.String ) , org.springframework.boot.cli.compiler.ArtifactCoordinatesResolver . getArtifactId ( java.lang.String ) , org.springframework.boot.cli.compiler.ArtifactCoordinatesResolver . getVersion ( java.lang.String ) , java.lang.String , java.lang.String , boolean ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.compiler.AnnotationNode org.springframework.boot.cli.compiler.AnnotationNode ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { AnnotationNode org.springframework.boot.cli.compiler.AnnotationNode = new AnnotationNode ( new ClassNode ( Grab .class ) ) ; org.springframework.boot.cli.compiler.AnnotationNode . addMember ( STRING , new ConstantExpression ( java.lang.String ) ) ; org.springframework.boot.cli.compiler.AnnotationNode . addMember ( STRING , new ConstantExpression ( java.lang.String ) ) ; org.springframework.boot.cli.compiler.AnnotationNode . addMember ( STRING , new ConstantExpression ( java.lang.String ) ) ; if ( java.lang.String != null ) { org.springframework.boot.cli.compiler.AnnotationNode . addMember ( STRING , new ConstantExpression ( java.lang.String ) ) ; } if ( java.lang.String != null ) { org.springframework.boot.cli.compiler.AnnotationNode . addMember ( STRING , new ConstantExpression ( java.lang.String ) ) ; } org.springframework.boot.cli.compiler.AnnotationNode . addMember ( STRING , new ConstantExpression ( boolean ) ) ; org.springframework.boot.cli.compiler.AnnotationNode . addMember ( STRING , new ConstantExpression ( false ) ) ; return org.springframework.boot.cli.compiler.AnnotationNode ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.compiler.DependencyResolutionContext org.springframework.boot.cli.compiler.DependencyResolutionContext ( ) { return this . org.springframework.boot.cli.compiler.DependencyResolutionContext ; }  <METHOD_END>
