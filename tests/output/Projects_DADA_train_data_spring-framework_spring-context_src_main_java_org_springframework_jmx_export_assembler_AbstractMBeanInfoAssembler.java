<METHOD_START> @ java.lang.Override public javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws javax.management.JMException { void ( java.lang.Object ) ; javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = new javax.management.modelmbean.ModelMBeanInfoSupport ( java.lang.String ( java.lang.Object , java.lang.String ) , java.lang.String ( java.lang.Object , java.lang.String ) , javax.management.modelmbean.ModelMBeanAttributeInfo[] ( java.lang.Object , java.lang.String ) , javax.management.modelmbean.ModelMBeanConstructorInfo[] ( java.lang.Object , java.lang.String ) , javax.management.modelmbean.ModelMBeanOperationInfo[] ( java.lang.Object , java.lang.String ) , javax.management.modelmbean.ModelMBeanNotificationInfo[] ( java.lang.Object , java.lang.String ) ) ; javax.management.Descriptor javax.management.Descriptor = javax.management.modelmbean.ModelMBeanInfo . javax.management.Descriptor ( ) ; void ( javax.management.Descriptor , java.lang.Object , java.lang.String ) ; javax.management.modelmbean.ModelMBeanInfo . void ( javax.management.Descriptor ) ; return javax.management.modelmbean.ModelMBeanInfo ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.Object java.lang.Object ) throws java.lang.IllegalArgumentException {	}  <METHOD_END>
<METHOD_START> protected java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.Object java.lang.Object ) { return AopUtils . getTargetClass ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.Object java.lang.Object ) { return JmxUtils . getClassToExpose ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return JmxUtils . getClassToExpose ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws javax.management.JMException { return java.lang.Class<?> ( java.lang.Object ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws javax.management.JMException { java.lang.String java.lang.String = java.lang.Class<?> ( java.lang.Object ) . java.lang.String ( ) ; if ( AopUtils . isAopProxy ( java.lang.Object ) ) { return STRING + java.lang.String ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected void void ( javax.management.Descriptor javax.management.Descriptor , java.lang.Object java.lang.Object , java.lang.String java.lang.String )			throws javax.management.JMException {	}  <METHOD_END>
<METHOD_START> protected javax.management.modelmbean.ModelMBeanConstructorInfo [] javax.management.modelmbean.ModelMBeanConstructorInfo[] ( java.lang.Object java.lang.Object , java.lang.String java.lang.String )			throws javax.management.JMException { return new javax.management.modelmbean.ModelMBeanConstructorInfo [ NUMBER ] ; }  <METHOD_END>
<METHOD_START> protected javax.management.modelmbean.ModelMBeanNotificationInfo [] javax.management.modelmbean.ModelMBeanNotificationInfo[] ( java.lang.Object java.lang.Object , java.lang.String java.lang.String )			throws javax.management.JMException { return new javax.management.modelmbean.ModelMBeanNotificationInfo [ NUMBER ] ; }  <METHOD_END>
<METHOD_START> protected abstract javax.management.modelmbean.ModelMBeanAttributeInfo [] javax.management.modelmbean.ModelMBeanAttributeInfo[] ( java.lang.Object java.lang.Object , java.lang.String java.lang.String )			throws javax.management.JMException ;  <METHOD_END>
<METHOD_START> protected abstract javax.management.modelmbean.ModelMBeanOperationInfo [] javax.management.modelmbean.ModelMBeanOperationInfo[] ( java.lang.Object java.lang.Object , java.lang.String java.lang.String )			throws javax.management.JMException ;  <METHOD_END>
