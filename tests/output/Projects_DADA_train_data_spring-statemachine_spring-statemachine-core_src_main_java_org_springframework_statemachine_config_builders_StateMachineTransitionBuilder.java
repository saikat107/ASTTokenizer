<METHOD_START> public void ( ) { super(); }  <METHOD_END>
<METHOD_START> public void ( ObjectPostProcessor < java.lang.Object > org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> , boolean boolean ) { super( org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> , boolean ); }  <METHOD_END>
<METHOD_START> public void ( ObjectPostProcessor < java.lang.Object > org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> ) { super( org.springframework.statemachine.config.builders.ObjectPostProcessor<java.lang.Object> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.config.builders.TransitionsData<S,E> < S , E > org.springframework.statemachine.config.builders.TransitionsData<S,E> ( ) java.lang.Exception { return new TransitionsData <> ( java.util.Collection<org.springframework.statemachine.config.builders.TransitionData<S,E>> , java.util.Map<S,java.util.List<org.springframework.statemachine.config.builders.ChoiceData<S,E>>> , java.util.Map<S,java.util.List<org.springframework.statemachine.config.builders.JunctionData<S,E>>> , java.util.Map<S,java.util.List<S>> , java.util.Map<S,java.util.List<S>> , java.util.Collection<org.springframework.statemachine.config.builders.EntryData<S,E>> , java.util.Collection<org.springframework.statemachine.config.builders.ExitData<S,E>> , java.util.Collection<org.springframework.statemachine.config.builders.HistoryData<S,E>> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.ExternalTransitionConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.ExternalTransitionConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultExternalTransitionConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.InternalTransitionConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.InternalTransitionConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultInternalTransitionConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.LocalTransitionConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.LocalTransitionConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultLocalTransitionConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.ChoiceTransitionConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.ChoiceTransitionConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultChoiceTransitionConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.JunctionTransitionConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.JunctionTransitionConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultJunctionTransitionConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.ForkTransitionConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.ForkTransitionConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultForkTransitionConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.JoinTransitionConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.JoinTransitionConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultJoinTransitionConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.EntryTransitionConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.EntryTransitionConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultEntryTransitionConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.ExitTransitionConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.ExitTransitionConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultExitTransitionConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.config.builders.HistoryTransitionConfigurer<S,E> < S , E > org.springframework.statemachine.config.builders.HistoryTransitionConfigurer<S,E> ( ) java.lang.Exception { return apply ( new DefaultHistoryTransitionConfigurer < S , E > ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( S S , S S , S S , E E , java.lang.Long java.lang.Long , java.lang.Integer java.lang.Integer , java.util.Collection<org.springframework.statemachine.config.builders.Action<S,E>> < Action < S , E > > java.util.Collection<org.springframework.statemachine.config.builders.Action<S,E>> , Guard < S , E > org.springframework.statemachine.config.builders.Guard<S,E> , TransitionKind org.springframework.statemachine.config.builders.TransitionKind , SecurityRule org.springframework.statemachine.config.builders.SecurityRule ) { if ( org.springframework.statemachine.config.builders.SecurityRule == null ) { @ java.lang.SuppressWarnings ( STRING ) ConfigurationData < S , E > org.springframework.statemachine.config.builders.ConfigurationData<S,E> = getSharedObject ( ConfigurationData .class ) ; org.springframework.statemachine.config.builders.SecurityRule = org.springframework.statemachine.config.builders.ConfigurationData<S,E> . getTransitionSecurityRule ( ) ; } java.util.Collection<org.springframework.statemachine.config.builders.TransitionData<S,E>> . add ( new TransitionData <> ( S , S , S , E , java.lang.Long , java.lang.Integer , java.util.Collection<org.springframework.statemachine.config.builders.Action<S,E>> , org.springframework.statemachine.config.builders.Guard<S,E> , org.springframework.statemachine.config.builders.TransitionKind , org.springframework.statemachine.config.builders.SecurityRule ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( S S , java.util.List<org.springframework.statemachine.config.builders.ChoiceData<S,E>> < ChoiceData < S , E > > java.util.List<org.springframework.statemachine.config.builders.ChoiceData<S,E>> ) { this . java.util.Map<S,java.util.List<org.springframework.statemachine.config.builders.ChoiceData<S,E>>> . put ( S , java.util.List<org.springframework.statemachine.config.builders.ChoiceData<S,E>> ) ; }  <METHOD_END>
<METHOD_START> public void void ( S S , java.util.List<org.springframework.statemachine.config.builders.JunctionData<S,E>> < JunctionData < S , E > > java.util.List<org.springframework.statemachine.config.builders.JunctionData<S,E>> ) { this . java.util.Map<S,java.util.List<org.springframework.statemachine.config.builders.JunctionData<S,E>>> . put ( S , java.util.List<org.springframework.statemachine.config.builders.JunctionData<S,E>> ) ; }  <METHOD_END>
<METHOD_START> public void void ( S S , S S ) { this . java.util.Collection<org.springframework.statemachine.config.builders.EntryData<S,E>> . add ( new EntryData < S , E > ( S , S ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( S S , S S ) { this . java.util.Collection<org.springframework.statemachine.config.builders.ExitData<S,E>> . add ( new ExitData < S , E > ( S , S ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( S S , java.util.List<S> < S > java.util.List<S> ) { this . java.util.Map<S,java.util.List<S>> . java.util.List<S> ( S , java.util.List<S> ) ; }  <METHOD_END>
<METHOD_START> public void void ( S S , java.util.List<S> < S > java.util.List<S> ) { this . java.util.Map<S,java.util.List<S>> . java.util.List<S> ( S , java.util.List<S> ) ; }  <METHOD_END>
<METHOD_START> public void void ( S S , S S ) { this . java.util.Collection<org.springframework.statemachine.config.builders.HistoryData<S,E>> . add ( new HistoryData < S , E > ( S , S ) ) ; }  <METHOD_END>
