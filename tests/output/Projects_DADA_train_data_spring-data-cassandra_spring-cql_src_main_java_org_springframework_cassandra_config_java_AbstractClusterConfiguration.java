<METHOD_START> @ Bean public org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean ( ) { CassandraCqlClusterFactoryBean org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean = new CassandraCqlClusterFactoryBean ( ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setAddressTranslator ( org.springframework.cassandra.config.java.AddressTranslator ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setAuthProvider ( org.springframework.cassandra.config.java.AuthProvider ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setClusterBuilderConfigurer ( org.springframework.cassandra.config.java.ClusterBuilderConfigurer ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setClusterName ( java.lang.String ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setCompressionType ( org.springframework.cassandra.config.java.CompressionType ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setContactPoints ( java.lang.String ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setLoadBalancingPolicy ( org.springframework.cassandra.config.java.LoadBalancingPolicy ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setMaxSchemaAgreementWaitSeconds ( int ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setMetricsEnabled ( boolean ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setNettyOptions ( org.springframework.cassandra.config.java.NettyOptions ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setPoolingOptions ( org.springframework.cassandra.config.java.PoolingOptions ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setPort ( int ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setProtocolVersion ( org.springframework.cassandra.config.java.ProtocolVersion ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setQueryOptions ( org.springframework.cassandra.config.java.QueryOptions ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setReconnectionPolicy ( org.springframework.cassandra.config.java.ReconnectionPolicy ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setRetryPolicy ( org.springframework.cassandra.config.java.RetryPolicy ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setSpeculativeExecutionPolicy ( org.springframework.cassandra.config.java.SpeculativeExecutionPolicy ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setSocketOptions ( org.springframework.cassandra.config.java.SocketOptions ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setTimestampGenerator ( org.springframework.cassandra.config.java.TimestampGenerator ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setKeyspaceCreations ( java.util.List<org.springframework.cassandra.config.java.CreateKeyspaceSpecification> ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setKeyspaceDrops ( java.util.List<org.springframework.cassandra.config.java.DropKeyspaceSpecification> ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setStartupScripts ( java.util.List<java.lang.String> ( ) ) ; org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean . setShutdownScripts ( java.util.List<java.lang.String> ( ) ) ; return org.springframework.cassandra.config.java.CassandraCqlClusterFactoryBean ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.AddressTranslator org.springframework.cassandra.config.java.AddressTranslator ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.AuthProvider org.springframework.cassandra.config.java.AuthProvider ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.ClusterBuilderConfigurer org.springframework.cassandra.config.java.ClusterBuilderConfigurer ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.CompressionType org.springframework.cassandra.config.java.CompressionType ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return CassandraCqlClusterFactoryBean . DEFAULT_CONTACT_POINTS ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.LoadBalancingPolicy org.springframework.cassandra.config.java.LoadBalancingPolicy ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected int int ( ) { return CassandraCqlClusterFactoryBean . DEFAULT_MAX_SCHEMA_AGREEMENT_WAIT_SECONDS ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return CassandraCqlClusterFactoryBean . DEFAULT_METRICS_ENABLED ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.NettyOptions org.springframework.cassandra.config.java.NettyOptions ( ) { return NettyOptions . DEFAULT_INSTANCE ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.PoolingOptions org.springframework.cassandra.config.java.PoolingOptions ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected int int ( ) { return CassandraCqlClusterFactoryBean . DEFAULT_PORT ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.ProtocolVersion org.springframework.cassandra.config.java.ProtocolVersion ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.QueryOptions org.springframework.cassandra.config.java.QueryOptions ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.ReconnectionPolicy org.springframework.cassandra.config.java.ReconnectionPolicy ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.RetryPolicy org.springframework.cassandra.config.java.RetryPolicy ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.SpeculativeExecutionPolicy org.springframework.cassandra.config.java.SpeculativeExecutionPolicy ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.SocketOptions org.springframework.cassandra.config.java.SocketOptions ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.cassandra.config.java.TimestampGenerator org.springframework.cassandra.config.java.TimestampGenerator ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.cassandra.config.java.CreateKeyspaceSpecification> < CreateKeyspaceSpecification > java.util.List<org.springframework.cassandra.config.java.CreateKeyspaceSpecification> ( ) { return java.util.Collections . java.util.List<org.springframework.cassandra.config.java.CreateKeyspaceSpecification> ( ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.cassandra.config.java.DropKeyspaceSpecification> < DropKeyspaceSpecification > java.util.List<org.springframework.cassandra.config.java.DropKeyspaceSpecification> ( ) { return java.util.Collections . java.util.List<org.springframework.cassandra.config.java.DropKeyspaceSpecification> ( ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.Collections . java.util.List<java.lang.String> ( ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.Collections . java.util.List<java.lang.String> ( ) ; }  <METHOD_END>
