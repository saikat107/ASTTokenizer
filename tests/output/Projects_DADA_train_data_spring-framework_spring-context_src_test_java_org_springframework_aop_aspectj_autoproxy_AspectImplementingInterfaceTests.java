<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.aop.aspectj.autoproxy.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( java.lang.Class<? extends org.springframework.aop.aspectj.autoproxy.AspectImplementingInterfaceTests> ( ) . java.lang.String ( ) + STRING , java.lang.Class<? extends org.springframework.aop.aspectj.autoproxy.AspectImplementingInterfaceTests> ( ) ) ; ITestBean org.springframework.aop.aspectj.autoproxy.ITestBean = ( ITestBean ) org.springframework.aop.aspectj.autoproxy.ClassPathXmlApplicationContext . getBean ( STRING ) ; org.springframework.aop.aspectj.autoproxy.AnInterface org.springframework.aop.aspectj.autoproxy.AnInterface = ( org.springframework.aop.aspectj.autoproxy.AnInterface ) org.springframework.aop.aspectj.autoproxy.ClassPathXmlApplicationContext . getBean ( STRING ) ; assertTrue ( org.springframework.aop.aspectj.autoproxy.ITestBean instanceof Advised ) ; assertFalse ( org.springframework.aop.aspectj.autoproxy.AnInterface instanceof Advised ) ; }  <METHOD_END>
<METHOD_START> public void void ( )  <METHOD_END>
<METHOD_START> public void void ( ProceedingJoinPoint org.springframework.aop.aspectj.autoproxy.ProceedingJoinPoint ) throws java.lang.Throwable { org.springframework.aop.aspectj.autoproxy.ProceedingJoinPoint . proceed ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {	}  <METHOD_END>
