<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = org.springframework.beans.factory.xml.DefaultListableBeanFactory ( STRING ) ; java.lang.String java.lang.String = STRING ; DummyBean org.springframework.beans.factory.xml.DummyBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( java.lang.String , DummyBean .class ) ; assertEquals ( STRING , org.springframework.beans.factory.xml.DummyBean . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = org.springframework.beans.factory.xml.DefaultListableBeanFactory ( STRING ) ; java.lang.String java.lang.String = STRING ; DummyBean org.springframework.beans.factory.xml.DummyBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( java.lang.String , DummyBean .class ) ; assertEquals ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.xml.DummyBean . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = org.springframework.beans.factory.xml.DefaultListableBeanFactory ( STRING ) ; java.lang.String java.lang.String = STRING ; TestBean org.springframework.beans.factory.xml.TestBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( java.lang.String , TestBean .class ) ; assertEquals ( java.lang.String , org.springframework.beans.factory.xml.TestBean . getName ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.xml.TestBean . getAge ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = org.springframework.beans.factory.xml.DefaultListableBeanFactory ( STRING ) ; TestBean org.springframework.beans.factory.xml.TestBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , TestBean .class ) ; DummyBean org.springframework.beans.factory.xml.DummyBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , DummyBean .class ) ; assertEquals ( STRING , org.springframework.beans.factory.xml.DummyBean . getName ( ) ) ; assertEquals ( org.springframework.beans.factory.xml.TestBean , org.springframework.beans.factory.xml.DummyBean . getSpouse ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = org.springframework.beans.factory.xml.DefaultListableBeanFactory ( STRING ) ; DummyBean org.springframework.beans.factory.xml.DummyBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , DummyBean .class ) ; assertEquals ( STRING , org.springframework.beans.factory.xml.DummyBean . getName ( ) ) ; assertEquals ( STRING , org.springframework.beans.factory.xml.DummyBean . getValue ( ) ) ; assertEquals ( NUMBER , org.springframework.beans.factory.xml.DummyBean . getAge ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = org.springframework.beans.factory.xml.DefaultListableBeanFactory ( STRING ) ; DummyBean org.springframework.beans.factory.xml.DummyBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , DummyBean .class ) ; assertEquals ( STRING , org.springframework.beans.factory.xml.DummyBean . getName ( ) ) ; assertEquals ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING ) , org.springframework.beans.factory.xml.DummyBean . getSpouse ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionStoreException .class ) public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) . loadBeanDefinitions ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandlerTests> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = org.springframework.beans.factory.xml.DefaultListableBeanFactory ( STRING ) ; DummyBean org.springframework.beans.factory.xml.DummyBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , DummyBean .class ) ; assertEquals ( NUMBER , org.springframework.beans.factory.xml.DummyBean . getAge ( ) ) ; assertEquals ( STRING , org.springframework.beans.factory.xml.DummyBean . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.beans.factory.xml.DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory ( java.lang.String java.lang.String ) { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) . loadBeanDefinitions ( new ClassPathResource ( java.lang.String , java.lang.Class<? extends org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandlerTests> ( ) ) ) ; return org.springframework.beans.factory.xml.DefaultListableBeanFactory ; }  <METHOD_END>
