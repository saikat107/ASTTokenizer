<METHOD_START> @ Autowired ( required = true ) public void void ( FileReadingMessageSource org.springframework.integration.file.config.FileReadingMessageSource ) { this . org.springframework.integration.file.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.file.config.FileReadingMessageSource ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { DirectFieldAccessor org.springframework.integration.file.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; java.lang.Object java.lang.Object = org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertThat ( java.lang.Object , is ( instanceOf ( CompositeFileListFilter .class ) ) ) ; java.util.Set<org.springframework.integration.file.config.FileListFilter<?>> < FileListFilter < ? > > java.util.Set<org.springframework.integration.file.config.FileListFilter<?>> = ( java.util.Set<org.springframework.integration.file.config.FileListFilter<?>> < FileListFilter < ? > > ) new DirectFieldAccessor ( java.lang.Object ) . getPropertyValue ( STRING ) ; java.util.regex.Pattern java.util.regex.Pattern = null ; for ( FileListFilter < ? > org.springframework.integration.file.config.FileListFilter<?> : java.util.Set<org.springframework.integration.file.config.FileListFilter<?>> ) { if ( org.springframework.integration.file.config.FileListFilter<> instanceof RegexPatternFileListFilter ) { java.util.regex.Pattern = ( java.util.regex.Pattern ) new DirectFieldAccessor ( org.springframework.integration.file.config.FileListFilter<> ) . getPropertyValue ( STRING ) ; } } assertNotNull ( STRING , java.util.regex.Pattern ) ; assertEquals ( STRING , java.util.regex.Pattern . java.lang.String ( ) ) ; }  <METHOD_END>
