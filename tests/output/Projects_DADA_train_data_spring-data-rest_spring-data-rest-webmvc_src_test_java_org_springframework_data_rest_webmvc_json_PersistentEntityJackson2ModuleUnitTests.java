<METHOD_START> @ Before public void void ( ) { KeyValueMappingContext < ? , ? > org.springframework.data.rest.webmvc.json.KeyValueMappingContext<?,?> = new KeyValueMappingContext <> ( ) ; org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getPersistentEntity ( org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Sample .class ) ; org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getPersistentEntity ( org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.SampleWithAdditionalGetters .class ) ; org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> . getPersistentEntity ( org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests . org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.PetOwner .class ) ; this . org.springframework.data.rest.webmvc.json.PersistentEntities = new PersistentEntities ( java.util.Arrays . java.util.List ( org.springframework.data.rest.webmvc.json.KeyValueMappingContext<,> ) ) ; ResourceProcessorInvoker org.springframework.data.rest.webmvc.json.ResourceProcessorInvoker = new ResourceProcessorInvoker ( java.util.Collections .< ResourceProcessor < ? > > java.util.List<org.springframework.data.rest.webmvc.json.ResourceProcessor<?>> ( ) ) ; NestedEntitySerializer org.springframework.data.rest.webmvc.json.NestedEntitySerializer = new NestedEntitySerializer ( org.springframework.data.rest.webmvc.json.PersistentEntities , new EmbeddedResourcesAssembler ( org.springframework.data.rest.webmvc.json.PersistentEntities , org.springframework.data.rest.webmvc.json.Associations , mock ( ExcerptProjector .class ) ) , org.springframework.data.rest.webmvc.json.ResourceProcessorInvoker ) ; SimpleModule org.springframework.data.rest.webmvc.json.SimpleModule = new SimpleModule ( ) ; org.springframework.data.rest.webmvc.json.SimpleModule . setSerializerModifier ( new AssociationOmittingSerializerModifier ( org.springframework.data.rest.webmvc.json.PersistentEntities , org.springframework.data.rest.webmvc.json.Associations , org.springframework.data.rest.webmvc.json.NestedEntitySerializer , new LookupObjectSerializer ( Java8PluginRegistry . empty ( ) ) ) ) ; org.springframework.data.rest.webmvc.json.SimpleModule . setDeserializerModifier ( new AssociationUriResolvingDeserializerModifier ( org.springframework.data.rest.webmvc.json.PersistentEntities , org.springframework.data.rest.webmvc.json.Associations , org.springframework.data.rest.webmvc.json.UriToEntityConverter , mock ( RepositoryInvokerFactory .class ) ) ) ; this . org.springframework.data.rest.webmvc.json.ObjectMapper = new ObjectMapper ( ) ; this . org.springframework.data.rest.webmvc.json.ObjectMapper . registerModule ( org.springframework.data.rest.webmvc.json.SimpleModule ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Sample org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Sample = new org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Sample ( ) ; org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Sample . java.lang.String = STRING ; java.lang.String java.lang.String = org.springframework.data.rest.webmvc.json.ObjectMapper . writeValueAsString ( org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Sample ) ; assertThat ( JsonPath .< java.lang.String > read ( java.lang.String , STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.SampleWithAdditionalGetters org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.SampleWithAdditionalGetters = new org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.SampleWithAdditionalGetters ( ) ; java.lang.String java.lang.String = org.springframework.data.rest.webmvc.json.ObjectMapper . writeValueAsString ( org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.SampleWithAdditionalGetters ) ; assertThat ( JsonPath .< java.lang.Integer > read ( java.lang.String , STRING ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { PersistentProperty < ? > org.springframework.data.rest.webmvc.json.PersistentProperty<?> = org.springframework.data.rest.webmvc.json.PersistentEntities . getRequiredPersistentEntity ( org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.PetOwner .class ) . getRequiredPersistentProperty ( STRING ) ; when ( org.springframework.data.rest.webmvc.json.Associations . isLinkableAssociation ( org.springframework.data.rest.webmvc.json.PersistentProperty<> ) ) . thenReturn ( true ) ; when ( org.springframework.data.rest.webmvc.json.UriToEntityConverter . convert ( new UriTemplate ( STRING ) . expand ( ) , TypeDescriptor . valueOf ( java.net.URI .class ) , TypeDescriptor . valueOf ( org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Pet .class ) ) ) . thenReturn ( new org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Cat ( ) ) ; org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.PetOwner org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.PetOwner = org.springframework.data.rest.webmvc.json.ObjectMapper . readValue ( STRING , org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.PetOwner .class ) ; assertThat ( org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.PetOwner ) . isNotNull ( ) ; assertThat ( org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.PetOwner . org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Pet ( ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Pet org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Pet ( ) { return org.springframework.data.rest.webmvc.json.PersistentEntityJackson2ModuleUnitTests.Pet ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return NUMBER ; }  <METHOD_END>
