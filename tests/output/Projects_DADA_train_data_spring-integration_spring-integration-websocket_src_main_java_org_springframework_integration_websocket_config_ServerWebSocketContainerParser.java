<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( org.w3c.dom.Element org.w3c.dom.Element ) { return ServerWebSocketContainer .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.websocket.config.ParserContext , BeanDefinitionBuilder org.springframework.integration.websocket.config.BeanDefinitionBuilder ) { org.springframework.integration.websocket.config.BeanDefinitionBuilder . addConstructorArgValue ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.util.List<org.springframework.integration.websocket.config.BeanReference> < BeanReference > java.util.List<org.springframework.integration.websocket.config.BeanReference> = new ManagedList < BeanReference > ( ) ; java.lang.String [] java.lang.String[] = StringUtils . commaDelimitedListToStringArray ( java.lang.String ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { java.util.List<org.springframework.integration.websocket.config.BeanReference> . add ( new RuntimeBeanReference ( java.lang.String ) ) ; } org.springframework.integration.websocket.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.List<org.springframework.integration.websocket.config.BeanReference> ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.util.List<org.springframework.integration.websocket.config.BeanReference> < BeanReference > java.util.List<org.springframework.integration.websocket.config.BeanReference> = new ManagedList < BeanReference > ( ) ; java.lang.String[] = StringUtils . commaDelimitedListToStringArray ( java.lang.String ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { java.util.List<org.springframework.integration.websocket.config.BeanReference> . add ( new RuntimeBeanReference ( java.lang.String ) ) ; } org.springframework.integration.websocket.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.List<org.springframework.integration.websocket.config.BeanReference> ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; if ( org.w3c.dom.Element != null ) { BeanDefinitionBuilder org.springframework.integration.websocket.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ServerWebSocketContainer . ServerWebSocketContainer .class ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { java.util.List<org.springframework.integration.websocket.config.BeanReference> < BeanReference > java.util.List<org.springframework.integration.websocket.config.BeanReference> = new ManagedList < BeanReference > ( ) ; java.lang.String[] = StringUtils . commaDelimitedListToStringArray ( java.lang.String ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { java.util.List<org.springframework.integration.websocket.config.BeanReference> . add ( new RuntimeBeanReference ( java.lang.String ) ) ; } org.springframework.integration.websocket.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.List<org.springframework.integration.websocket.config.BeanReference> ) ; } org.springframework.integration.websocket.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.websocket.config.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; } IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.websocket.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; }  <METHOD_END>
