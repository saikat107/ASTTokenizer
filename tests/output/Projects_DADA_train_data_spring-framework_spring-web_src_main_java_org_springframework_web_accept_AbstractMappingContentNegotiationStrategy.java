<METHOD_START> public void ( java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> < java.lang.String , MediaType > java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) { super( java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.web.accept.MediaType> < MediaType > java.util.List<org.springframework.web.accept.MediaType> ( NativeWebRequest org.springframework.web.accept.NativeWebRequest )			throws org.springframework.web.accept.HttpMediaTypeNotAcceptableException { return java.util.List<org.springframework.web.accept.MediaType> ( org.springframework.web.accept.NativeWebRequest , java.lang.String ( org.springframework.web.accept.NativeWebRequest ) ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.web.accept.MediaType> < MediaType > java.util.List<org.springframework.web.accept.MediaType> ( NativeWebRequest org.springframework.web.accept.NativeWebRequest , java.lang.String java.lang.String )			throws org.springframework.web.accept.HttpMediaTypeNotAcceptableException { if ( StringUtils . hasText ( java.lang.String ) ) { MediaType org.springframework.web.accept.MediaType = lookupMediaType ( java.lang.String ) ; if ( org.springframework.web.accept.MediaType != null ) { void ( java.lang.String , org.springframework.web.accept.MediaType ) ; return java.util.Collections . java.util.List ( org.springframework.web.accept.MediaType ) ; } org.springframework.web.accept.MediaType = org.springframework.web.accept.MediaType ( org.springframework.web.accept.NativeWebRequest , java.lang.String ) ; if ( org.springframework.web.accept.MediaType != null ) { addMapping ( java.lang.String , org.springframework.web.accept.MediaType ) ; return java.util.Collections . java.util.List ( org.springframework.web.accept.MediaType ) ; } } return java.util.Collections . java.util.List<org.springframework.web.accept.MediaType> ( ) ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.String java.lang.String ( NativeWebRequest org.springframework.web.accept.NativeWebRequest );  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , MediaType org.springframework.web.accept.MediaType ) {	}  <METHOD_END>
<METHOD_START> protected org.springframework.web.accept.MediaType org.springframework.web.accept.MediaType ( NativeWebRequest org.springframework.web.accept.NativeWebRequest , java.lang.String java.lang.String )			throws org.springframework.web.accept.HttpMediaTypeNotAcceptableException { return null ; }  <METHOD_END>
