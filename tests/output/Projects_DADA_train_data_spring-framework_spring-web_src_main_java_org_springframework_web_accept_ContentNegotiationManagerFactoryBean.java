<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Properties java.util.Properties ) { if ( ! CollectionUtils . isEmpty ( java.util.Properties ) ) { for ( java.util.Map.Entry<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > java.util.Map.Entry<java.lang.Object,java.lang.Object> : java.util.Properties . java.util.Set<java.util.Map.Entry<java.lang.Object,java.lang.Object>> ( ) ) { java.lang.String java.lang.String = ( ( java.lang.String ) java.util.Map.Entry<java.lang.Object,java.lang.Object> . java.lang.Object ( ) ) . java.lang.String ( java.util.Locale . java.util.Locale ) ; MediaType org.springframework.web.accept.MediaType = MediaType . valueOf ( ( java.lang.String ) java.util.Map.Entry<java.lang.Object,java.lang.Object> . java.lang.Object ( ) ) ; this . java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> . put ( java.lang.String , org.springframework.web.accept.MediaType ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , MediaType org.springframework.web.accept.MediaType ) { this . java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> . put ( java.lang.String , org.springframework.web.accept.MediaType ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> < java.lang.String , MediaType > java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) { if ( java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> != null ) { this . java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> . putAll ( java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) ; } }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public void void ( boolean boolean ) { void ( ! boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . java.lang.Boolean = boolean ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return ( this . java.lang.Boolean != null && this . java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( MediaType org.springframework.web.accept.MediaType ) { this . org.springframework.web.accept.ContentNegotiationStrategy = new FixedContentNegotiationStrategy ( org.springframework.web.accept.MediaType ) ; }  <METHOD_END>
<METHOD_START> public void void ( ContentNegotiationStrategy org.springframework.web.accept.ContentNegotiationStrategy ) { this . org.springframework.web.accept.ContentNegotiationStrategy = org.springframework.web.accept.ContentNegotiationStrategy ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContext org.springframework.web.accept.ServletContext ) { this . org.springframework.web.accept.ServletContext = org.springframework.web.accept.ServletContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> < ContentNegotiationStrategy > java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> = new java.util.ArrayList<org.springframework.web.accept.ContentNegotiationStrategy> <> ( ) ; if ( this . boolean ) { PathExtensionContentNegotiationStrategy org.springframework.web.accept.PathExtensionContentNegotiationStrategy ; if ( this . org.springframework.web.accept.ServletContext != null && ! boolean ( ) ) { org.springframework.web.accept.PathExtensionContentNegotiationStrategy = new ServletPathExtensionContentNegotiationStrategy ( this . org.springframework.web.accept.ServletContext , this . java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) ; } else { org.springframework.web.accept.PathExtensionContentNegotiationStrategy = new PathExtensionContentNegotiationStrategy ( this . java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) ; } org.springframework.web.accept.PathExtensionContentNegotiationStrategy . setIgnoreUnknownExtensions ( this . boolean ) ; if ( this . java.lang.Boolean != null ) { org.springframework.web.accept.PathExtensionContentNegotiationStrategy . setUseRegisteredExtensionsOnly ( this . java.lang.Boolean ) ; } java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> . add ( org.springframework.web.accept.PathExtensionContentNegotiationStrategy ) ; } if ( this . boolean ) { ParameterContentNegotiationStrategy org.springframework.web.accept.ParameterContentNegotiationStrategy = new ParameterContentNegotiationStrategy ( this . java.util.Map<java.lang.String,org.springframework.web.accept.MediaType> ) ; org.springframework.web.accept.ParameterContentNegotiationStrategy . setParameterName ( this . java.lang.String ) ; java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> . add ( org.springframework.web.accept.ParameterContentNegotiationStrategy ) ; } if ( ! this . boolean ) { java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> . add ( new HeaderContentNegotiationStrategy ( ) ) ; } if ( this . org.springframework.web.accept.ContentNegotiationStrategy != null ) { java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> . add ( this . org.springframework.web.accept.ContentNegotiationStrategy ) ; } this . org.springframework.web.accept.ContentNegotiationManager = new ContentNegotiationManager ( java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.accept.ContentNegotiationManager org.springframework.web.accept.ContentNegotiationManager ( ) { return this . org.springframework.web.accept.ContentNegotiationManager ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return ContentNegotiationManager .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
