<METHOD_START> public static org.springframework.test.web.servlet.result.ResultHandler org.springframework.test.web.servlet.result.ResultHandler ( ) { return new org.springframework.test.web.servlet.result.MockMvcResultHandlers.LoggingResultHandler ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.ResultHandler org.springframework.test.web.servlet.result.ResultHandler ( ) { return org.springframework.test.web.servlet.result.ResultHandler ( java.lang.System . java.io.PrintStream ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.ResultHandler org.springframework.test.web.servlet.result.ResultHandler ( java.io.OutputStream java.io.OutputStream ) { return new org.springframework.test.web.servlet.result.MockMvcResultHandlers.PrintWriterPrintingResultHandler ( new java.io.PrintWriter ( java.io.OutputStream , true ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.ResultHandler org.springframework.test.web.servlet.result.ResultHandler ( java.io.Writer java.io.Writer ) { return new org.springframework.test.web.servlet.result.MockMvcResultHandlers.PrintWriterPrintingResultHandler ( new java.io.PrintWriter ( java.io.Writer , true ) ) ; }  <METHOD_END>
<METHOD_START> public void ( final java.io.PrintWriter java.io.PrintWriter ) { super( new ResultValuePrinter ( ) { @ java.lang.Override public void void ( java.lang.String java.lang.String ) { java.io.PrintWriter . void ( ) ; java.io.PrintWriter . void ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; } @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { if ( java.lang.Object != null && java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . boolean ( ) ) { java.lang.Object = CollectionUtils . arrayToList ( java.lang.Object ) ; } java.io.PrintWriter . void ( java.lang.String . java.lang.String ( STRING , java.lang.String , java.lang.Object ) ) ; } } ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { java.io.PrintWriter . void ( ) ; java.io.PrintWriter . void ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { if ( java.lang.Object != null && java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . boolean ( ) ) { java.lang.Object = CollectionUtils . arrayToList ( java.lang.Object ) ; } java.io.PrintWriter . void ( java.lang.String . java.lang.String ( STRING , java.lang.String , java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { if ( org.springframework.test.web.servlet.result.Log . isDebugEnabled ( ) ) { java.io.StringWriter java.io.StringWriter = new java.io.StringWriter ( ) ; ResultHandler org.springframework.test.web.servlet.result.ResultHandler = new org.springframework.test.web.servlet.result.MockMvcResultHandlers.PrintWriterPrintingResultHandler ( new java.io.PrintWriter ( java.io.StringWriter ) ) ; org.springframework.test.web.servlet.result.ResultHandler . handle ( org.springframework.test.web.servlet.result.MvcResult ) ; org.springframework.test.web.servlet.result.Log . debug ( STRING + java.io.StringWriter ) ; } }  <METHOD_END>
