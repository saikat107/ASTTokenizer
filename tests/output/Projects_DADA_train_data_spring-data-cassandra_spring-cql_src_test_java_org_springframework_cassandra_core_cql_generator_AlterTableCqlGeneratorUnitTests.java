<METHOD_START> @ Test public void void ( ) { AlterTableSpecification org.springframework.cassandra.core.cql.generator.AlterTableSpecification = AlterTableSpecification . alterTable ( STRING ) . alter ( STRING , DataType . uuid ( ) ) ; assertThat ( java.lang.String ( org.springframework.cassandra.core.cql.generator.AlterTableSpecification ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AlterTableSpecification org.springframework.cassandra.core.cql.generator.AlterTableSpecification = AlterTableSpecification . alterTable ( STRING ) . alter ( STRING , DataType . list ( DataType . ascii ( ) ) ) ; assertThat ( java.lang.String ( org.springframework.cassandra.core.cql.generator.AlterTableSpecification ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AlterTableSpecification org.springframework.cassandra.core.cql.generator.AlterTableSpecification = AlterTableSpecification . alterTable ( STRING ) . add ( STRING , DataType . varchar ( ) ) ; assertThat ( java.lang.String ( org.springframework.cassandra.core.cql.generator.AlterTableSpecification ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AlterTableSpecification org.springframework.cassandra.core.cql.generator.AlterTableSpecification = AlterTableSpecification . alterTable ( STRING ) . add ( STRING , DataType . list ( DataType . ascii ( ) ) ) ; assertThat ( java.lang.String ( org.springframework.cassandra.core.cql.generator.AlterTableSpecification ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AlterTableSpecification org.springframework.cassandra.core.cql.generator.AlterTableSpecification = AlterTableSpecification . alterTable ( STRING ) . drop ( STRING ) ; assertThat ( java.lang.String ( org.springframework.cassandra.core.cql.generator.AlterTableSpecification ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AlterTableSpecification org.springframework.cassandra.core.cql.generator.AlterTableSpecification = AlterTableSpecification . alterTable ( STRING ) . rename ( STRING , STRING ) ; assertThat ( java.lang.String ( org.springframework.cassandra.core.cql.generator.AlterTableSpecification ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AlterTableSpecification org.springframework.cassandra.core.cql.generator.AlterTableSpecification = AlterTableSpecification . alterTable ( STRING ) . with ( TableOption . READ_REPAIR_CHANCE , NUMBER ) . with ( TableOption . COMMENT , STRING ) ; assertThat ( java.lang.String ( org.springframework.cassandra.core.cql.generator.AlterTableSpecification ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AlterTableSpecification org.springframework.cassandra.core.cql.generator.AlterTableSpecification = AlterTableSpecification . alterTable ( STRING ) . add ( STRING , DataType . list ( DataType . ascii ( ) ) ) . add ( STRING , DataType . list ( DataType . ascii ( ) ) ) . with ( TableOption . COMMENT , STRING ) ; assertThat ( java.lang.String ( org.springframework.cassandra.core.cql.generator.AlterTableSpecification ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > java.util.Map<java.lang.Object,java.lang.Object> = new java.util.LinkedHashMap<java.lang.Object,java.lang.Object> <> ( ) ; java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( CachingOption . KEYS , KeyCachingOption . NONE ) ; java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( CachingOption . ROWS_PER_PARTITION , STRING ) ; AlterTableSpecification org.springframework.cassandra.core.cql.generator.AlterTableSpecification = AlterTableSpecification . alterTable ( STRING ) . with ( TableOption . CACHING , java.util.Map<java.lang.Object,java.lang.Object> ) ; assertThat ( java.lang.String ( org.springframework.cassandra.core.cql.generator.AlterTableSpecification ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( AlterTableSpecification org.springframework.cassandra.core.cql.generator.AlterTableSpecification ) { return new AlterTableCqlGenerator ( org.springframework.cassandra.core.cql.generator.AlterTableSpecification ) . toCql ( ) ; }  <METHOD_END>
