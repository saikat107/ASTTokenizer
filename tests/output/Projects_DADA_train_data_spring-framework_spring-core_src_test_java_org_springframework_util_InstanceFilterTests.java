<METHOD_START> @ Test public void void ( ) { InstanceFilter < java.lang.String > org.springframework.util.InstanceFilter<java.lang.String> = new InstanceFilter <> ( null , null , true ) ; void ( org.springframework.util.InstanceFilter<java.lang.String> , STRING ) ; void ( org.springframework.util.InstanceFilter<java.lang.String> , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { InstanceFilter < java.lang.String > org.springframework.util.InstanceFilter<java.lang.String> = new InstanceFilter <> ( java.util.List<java.lang.String> ( STRING , STRING ) , null , true ) ; void ( org.springframework.util.InstanceFilter<java.lang.String> , STRING ) ; void ( org.springframework.util.InstanceFilter<java.lang.String> , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { InstanceFilter < java.lang.String > org.springframework.util.InstanceFilter<java.lang.String> = new InstanceFilter <> ( null , java.util.List<java.lang.String> ( STRING , STRING ) , true ) ; void ( org.springframework.util.InstanceFilter<java.lang.String> , STRING ) ; void ( org.springframework.util.InstanceFilter<java.lang.String> , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { InstanceFilter < java.lang.String > org.springframework.util.InstanceFilter<java.lang.String> = new InstanceFilter <> ( java.util.List<java.lang.String> ( STRING , STRING ) , java.util.List<java.lang.String> ( STRING , STRING ) , true ) ; void ( org.springframework.util.InstanceFilter<java.lang.String> , STRING ) ; void ( org.springframework.util.InstanceFilter<java.lang.String> , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { InstanceFilter < java.lang.String > org.springframework.util.InstanceFilter<java.lang.String> = new InstanceFilter <> ( java.util.List<java.lang.String> ( STRING ) , java.util.List<java.lang.String> ( STRING ) , true ) ; void ( org.springframework.util.InstanceFilter<java.lang.String> , STRING ) ; }  <METHOD_END>
<METHOD_START> private < T > void void ( InstanceFilter < T > org.springframework.util.InstanceFilter<T> , T T ) { assertTrue ( STRING + org.springframework.util.InstanceFilter<T> + STRING + T , org.springframework.util.InstanceFilter<T> . match ( T ) ) ; }  <METHOD_END>
<METHOD_START> private < T > void void ( InstanceFilter < T > org.springframework.util.InstanceFilter<T> , T T ) { assertFalse ( STRING + org.springframework.util.InstanceFilter<T> + STRING + T , org.springframework.util.InstanceFilter<T> . match ( T ) ) ; }  <METHOD_END>
