<METHOD_START> public void ( AbstractMessageListenerContainer org.springframework.integration.jms.AbstractMessageListenerContainer , ChannelPublishingJmsMessageListener org.springframework.integration.jms.ChannelPublishingJmsMessageListener ) { this( org.springframework.integration.jms.AbstractMessageListenerContainer , org.springframework.integration.jms.ChannelPublishingJmsMessageListener , true ); }  <METHOD_END>
<METHOD_START> private void ( AbstractMessageListenerContainer org.springframework.integration.jms.AbstractMessageListenerContainer , ChannelPublishingJmsMessageListener org.springframework.integration.jms.ChannelPublishingJmsMessageListener , boolean boolean ) { Assert . notNull ( org.springframework.integration.jms.AbstractMessageListenerContainer , STRING ) ; Assert . notNull ( org.springframework.integration.jms.ChannelPublishingJmsMessageListener , STRING ) ; if ( logger . isWarnEnabled ( ) && org.springframework.integration.jms.AbstractMessageListenerContainer . getMessageListener ( ) != null ) { logger . warn ( STRING + STRING ) ; } org.springframework.integration.jms.AbstractMessageListenerContainer . setMessageListener ( org.springframework.integration.jms.ChannelPublishingJmsMessageListener ) ; this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener = org.springframework.integration.jms.ChannelPublishingJmsMessageListener ; this . org.springframework.integration.jms.AbstractMessageListenerContainer = org.springframework.integration.jms.AbstractMessageListenerContainer ; this . org.springframework.integration.jms.AbstractMessageListenerContainer . setAutoStartup ( false ) ; setPhase ( java.lang.Integer . int / NUMBER ) ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MessageChannel org.springframework.integration.jms.MessageChannel ) { super. setOutputChannel ( org.springframework.integration.jms.MessageChannel ) ; this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener . setRequestChannel ( org.springframework.integration.jms.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { super. setOutputChannelName ( java.lang.String ) ; this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener . setRequestChannelName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MessageChannel org.springframework.integration.jms.MessageChannel ) { super. setErrorChannel ( org.springframework.integration.jms.MessageChannel ) ; this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener . setErrorChannel ( org.springframework.integration.jms.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { super. setErrorChannelName ( java.lang.String ) ; this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener . setErrorChannelName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( long long ) { super. setSendTimeout ( long ) ; this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener . setRequestTimeout ( long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { super. setShouldTrack ( boolean ) ; this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener . setShouldTrack ( boolean ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.jms.ChannelPublishingJmsMessageListener org.springframework.integration.jms.ChannelPublishingJmsMessageListener ( ) { return this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.integration.jms.ApplicationContext ) throws org.springframework.integration.jms.BeansException { super. setApplicationContext ( org.springframework.integration.jms.ApplicationContext ) ; this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener . setBeanFactory ( org.springframework.integration.jms.ApplicationContext ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener . afterPropertiesSet ( ) ; if ( ! this . org.springframework.integration.jms.AbstractMessageListenerContainer . isActive ( ) ) { this . org.springframework.integration.jms.AbstractMessageListenerContainer . afterPropertiesSet ( ) ; } java.lang.String java.lang.String = this . java.lang.String ; if ( java.lang.String == null && ! this . boolean && DefaultMessageListenerContainer .class . boolean ( this . org.springframework.integration.jms.AbstractMessageListenerContainer . getClass ( ) ) ) { java.lang.String = JmsAdapterUtils . SESSION_TRANSACTED_STRING ; } java.lang.Integer java.lang.Integer = JmsAdapterUtils . parseAcknowledgeMode ( java.lang.String ) ; if ( java.lang.Integer != null ) { if ( java.lang.Integer . int ( ) == JmsAdapterUtils . SESSION_TRANSACTED ) { this . org.springframework.integration.jms.AbstractMessageListenerContainer . setSessionTransacted ( true ) ; } else { this . org.springframework.integration.jms.AbstractMessageListenerContainer . setSessionAcknowledgeMode ( java.lang.Integer ) ; } } this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener . setComponentName ( this . getComponentName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener . start ( ) ; if ( ! this . org.springframework.integration.jms.AbstractMessageListenerContainer . isRunning ( ) ) { this . org.springframework.integration.jms.AbstractMessageListenerContainer . start ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { this . org.springframework.integration.jms.AbstractMessageListenerContainer . stop ( ) ; this . org.springframework.integration.jms.ChannelPublishingJmsMessageListener . stop ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( this . isRunning ( ) ) { this . stop ( ) ; } this . org.springframework.integration.jms.AbstractMessageListenerContainer . destroy ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { this . stop ( ) ; return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
