<METHOD_START> @ Bean public org.springframework.data.rest.core.context.ValidatingRepositoryEventListener org.springframework.data.rest.core.context.ValidatingRepositoryEventListener ( ObjectFactory < PersistentEntities > org.springframework.data.rest.core.context.ObjectFactory<org.springframework.data.rest.core.context.PersistentEntities> ) { ValidatingRepositoryEventListener org.springframework.data.rest.core.context.ValidatingRepositoryEventListener = new ValidatingRepositoryEventListener ( org.springframework.data.rest.core.context.ObjectFactory<org.springframework.data.rest.core.context.PersistentEntities> ) ; org.springframework.data.rest.core.context.ValidatingRepositoryEventListener . addValidator ( STRING , new PersonNameValidator ( ) ) ; return org.springframework.data.rest.core.context.ValidatingRepositoryEventListener ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = RepositoryConstraintViolationException .class ) public void void ( ) java.lang.Exception { org.springframework.data.rest.core.context.KeyValueMappingContext<,> . getPersistentEntity ( Person .class ) ; org.springframework.data.rest.core.context.ConfigurableApplicationContext . publishEvent ( new BeforeSaveEvent ( new Person ( STRING , STRING ) ) ) ; }  <METHOD_END>
