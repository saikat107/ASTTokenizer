<METHOD_START> public void ( ) { super(); this . setProtocol ( STRING ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( java.lang.String ); if ( java.lang.String != null ) { Assert . isTrue ( java.lang.String . boolean ( STRING ) , STRING ) ; } else { this . setProtocol ( STRING ) ; } }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this( java.lang.String , - NUMBER , java.lang.String , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int , java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( new URLName ( STRING , java.lang.String , int , STRING , java.lang.String , java.lang.String ) ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.mail.Message [] org.springframework.integration.mail.Message[] ( ) org.springframework.integration.mail.MessagingException { int int = this . getFolder ( ) . getMessageCount ( ) ; if ( int == NUMBER ) { return new Message [ NUMBER ] ; } return this . getFolder ( ) . getMessages ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Message [] org.springframework.integration.mail.Message[] ) throws org.springframework.integration.mail.MessagingException { super. deleteMessages ( org.springframework.integration.mail.Message[] ) ; for ( int int = NUMBER ; int < messages . length ; int ++ ) { new MimeMessage ( ( MimeMessage ) org.springframework.integration.mail.Message[] [ int ] ) ; } }  <METHOD_END>
