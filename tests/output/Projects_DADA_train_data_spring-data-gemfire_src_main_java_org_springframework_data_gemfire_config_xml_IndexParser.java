<METHOD_START> protected static void void ( ParserContext org.springframework.data.gemfire.config.xml.ParserContext ) { if ( java.util.concurrent.atomic.AtomicBoolean . boolean ( false , true ) ) { AbstractBeanDefinition org.springframework.data.gemfire.config.xml.AbstractBeanDefinition = BeanDefinitionBuilder . rootBeanDefinition ( DefinedIndexesApplicationListener .class ) . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) . getBeanDefinition ( ) ; BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.data.gemfire.config.xml.AbstractBeanDefinition , org.springframework.data.gemfire.config.xml.ParserContext . getRegistry ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Class<?> < ? > java.lang.Class<?> ( org.w3c.dom.Element org.w3c.dom.Element ) { return IndexFactoryBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) { super. doParse ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; void ( org.springframework.data.gemfire.config.xml.ParserContext ) ; ParsingUtils . setPropertyReference ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( java.lang.String java.lang.String ) { return ( ! STRING . boolean ( java.lang.String ) && super. isEligibleAttribute ( java.lang.String ) ) ; }  <METHOD_END>
