<METHOD_START> public void ( java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { for ( PropertySource < ? > org.springframework.core.env.PropertySource<?> : this . java.util.Set<org.springframework.core.env.PropertySource<?>> ) { java.lang.Object java.lang.Object = org.springframework.core.env.PropertySource<> . getProperty ( java.lang.String ) ; if ( java.lang.Object != null ) { return java.lang.Object ; } } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { for ( PropertySource < ? > org.springframework.core.env.PropertySource<?> : this . java.util.Set<org.springframework.core.env.PropertySource<?>> ) { if ( org.springframework.core.env.PropertySource<> . containsProperty ( java.lang.String ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.LinkedHashSet<java.lang.String> <> ( ) ; for ( PropertySource < ? > org.springframework.core.env.PropertySource<?> : this . java.util.Set<org.springframework.core.env.PropertySource<?>> ) { if ( ! ( org.springframework.core.env.PropertySource<> instanceof EnumerablePropertySource ) ) { throw new java.lang.IllegalStateException ( STRING + org.springframework.core.env.PropertySource<> ) ; } java.util.Set<java.lang.String> . boolean ( java.util.Arrays . java.util.List ( ( ( EnumerablePropertySource < ? > ) org.springframework.core.env.PropertySource<> ) . getPropertyNames ( ) ) ) ; } return StringUtils . toStringArray ( java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public void void ( PropertySource < ? > org.springframework.core.env.PropertySource<?> ) { this . java.util.Set<org.springframework.core.env.PropertySource<?>> . add ( org.springframework.core.env.PropertySource<> ) ; }  <METHOD_END>
<METHOD_START> public void void ( PropertySource < ? > org.springframework.core.env.PropertySource<?> ) { java.util.List<org.springframework.core.env.PropertySource<?>> < PropertySource < ? > > java.util.List<org.springframework.core.env.PropertySource<?>> = new java.util.ArrayList <> ( this . java.util.Set<org.springframework.core.env.PropertySource<?>> ) ; this . java.util.Set<org.springframework.core.env.PropertySource<?>> . clear ( ) ; this . java.util.Set<org.springframework.core.env.PropertySource<?>> . add ( org.springframework.core.env.PropertySource<> ) ; this . java.util.Set<org.springframework.core.env.PropertySource<?>> . addAll ( java.util.List<org.springframework.core.env.PropertySource<?>> ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<org.springframework.core.env.PropertySource<?>> < PropertySource < ? > > java.util.Collection<org.springframework.core.env.PropertySource<?>> ( ) { return this . java.util.Set<org.springframework.core.env.PropertySource<?>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String . java.lang.String ( STRING , java.lang.Class<? extends org.springframework.core.env.CompositePropertySource> ( ) . java.lang.String ( ) , this . name , this . java.util.Set<org.springframework.core.env.PropertySource<?>> ) ; }  <METHOD_END>
