<METHOD_START> @ Test public void void ( ) { SortOperation org.springframework.data.mongodb.core.aggregation.SortOperation = new SortOperation ( new Sort ( Direction . ASC , STRING ) ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.SortOperation . toDocument ( Aggregation . DEFAULT_CONTEXT ) ; Document org.springframework.data.mongodb.core.aggregation.Document = getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document . get ( STRING ) , is ( ( java.lang.Object ) NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SortOperation org.springframework.data.mongodb.core.aggregation.SortOperation = new SortOperation ( new Sort ( Direction . DESC , STRING ) ) ; Document org.springframework.data.mongodb.core.aggregation.Document = org.springframework.data.mongodb.core.aggregation.SortOperation . toDocument ( Aggregation . DEFAULT_CONTEXT ) ; Document org.springframework.data.mongodb.core.aggregation.Document = getAsDocument ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.Document . get ( STRING ) , is ( ( java.lang.Object ) ( NUMBER - NUMBER ) ) ) ; }  <METHOD_END>
