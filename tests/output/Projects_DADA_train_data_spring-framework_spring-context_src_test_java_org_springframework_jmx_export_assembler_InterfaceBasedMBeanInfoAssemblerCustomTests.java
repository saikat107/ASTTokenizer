<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.jmx.export.assembler.MBeanInfoAssembler org.springframework.jmx.export.assembler.MBeanInfoAssembler ( ) { InterfaceBasedMBeanInfoAssembler org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler = new InterfaceBasedMBeanInfoAssembler ( ) ; org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler . setManagedInterfaces ( new java.lang.Class<?> < ? > [] { ICustomJmxBean .class } ) ; return org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = getMBeanInfoFromAssembler ( ) ; javax.management.modelmbean.ModelMBeanAttributeInfo javax.management.modelmbean.ModelMBeanAttributeInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( AGE_ATTRIBUTE ) ; assertTrue ( javax.management.modelmbean.ModelMBeanAttributeInfo . boolean ( ) ) ; assertFalse ( javax.management.modelmbean.ModelMBeanAttributeInfo . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
