<METHOD_START> @ java.lang.Override public void void ( ResultSetFuture org.springframework.cassandra.test.integration.core.ResultSetFuture ) { Row org.springframework.cassandra.test.integration.core.Row ; try { org.springframework.cassandra.test.integration.core.Row = org.springframework.cassandra.test.integration.core.ResultSetFuture . get ( ) . one ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.RuntimeException ( STRING , java.lang.Exception ) ; } org.springframework.cassandra.test.integration.core.Book = new Book ( ) ; org.springframework.cassandra.test.integration.core.Book . setIsbn ( org.springframework.cassandra.test.integration.core.Row . getString ( STRING ) ) ; org.springframework.cassandra.test.integration.core.Book . setTitle ( org.springframework.cassandra.test.integration.core.Row . getString ( STRING ) ) ; org.springframework.cassandra.test.integration.core.Book . setAuthor ( org.springframework.cassandra.test.integration.core.Row . getString ( STRING ) ) ; org.springframework.cassandra.test.integration.core.Book . setPages ( org.springframework.cassandra.test.integration.core.Row . getInt ( STRING ) ) ; boolean = true ; countDown ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.cassandra.test.integration.core.Book org.springframework.cassandra.test.integration.core.Book ( ) { return org.springframework.cassandra.test.integration.core.Book ; }  <METHOD_END>
