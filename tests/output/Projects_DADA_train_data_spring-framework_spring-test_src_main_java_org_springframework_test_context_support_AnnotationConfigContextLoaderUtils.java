<METHOD_START> public static java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; java.util.List<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>> <> ( ) ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<> . java.lang.Class<?>[] ( ) ) { if ( boolean ( java.lang.Class<> ) ) { java.util.List<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ; } else { if ( org.springframework.test.context.support.Log . isDebugEnabled ( ) ) { org.springframework.test.context.support.Log . debug ( java.lang.String . java.lang.String ( STRING + STRING , java.lang.Class<> . java.lang.String ( ) ) ) ; } } } if ( java.util.List<java.lang.Class<?>> . boolean ( ) ) { if ( org.springframework.test.context.support.Log . isInfoEnabled ( ) ) { org.springframework.test.context.support.Log . info ( java.lang.String . java.lang.String ( STRING + STRING + STRING , java.lang.Class<> . java.lang.String ( ) , java.lang.Class<> . java.lang.String ( ) ) ) ; } } return java.util.List<java.lang.Class<?>> . java.lang.Class<?>[] ( new java.lang.Class<?> < ? > [ java.util.List<java.lang.Class<?>> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return ( java.lang.Class<> != null && boolean ( java.lang.Class<> ) && AnnotatedElementUtils . hasAnnotation ( java.lang.Class<> , Configuration .class ) ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; int int = java.lang.Class<> . int ( ) ; return ( java.lang.reflect.Modifier . boolean ( int ) && ! java.lang.reflect.Modifier . boolean ( int ) && ! java.lang.reflect.Modifier . boolean ( int ) ) ; }  <METHOD_END>
