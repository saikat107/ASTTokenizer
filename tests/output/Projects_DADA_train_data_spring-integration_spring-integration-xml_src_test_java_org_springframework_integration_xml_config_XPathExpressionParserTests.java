<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; XPathExpression org.springframework.integration.xml.config.XPathExpression = org.springframework.integration.xml.config.XPathExpression ( java.lang.String ) ; assertEquals ( STRING , org.springframework.integration.xml.config.XPathExpression . evaluateAsString ( XmlTestUtil . getDocumentForString ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; XPathExpression org.springframework.integration.xml.config.XPathExpression = org.springframework.integration.xml.config.XPathExpression ( java.lang.String ) ; assertEquals ( STRING , org.springframework.integration.xml.config.XPathExpression . evaluateAsString ( XmlTestUtil . getDocumentForString ( STRING ) ) ) ; assertEquals ( STRING , org.springframework.integration.xml.config.XPathExpression . evaluateAsString ( XmlTestUtil . getDocumentForString ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer ( STRING ) ; java.lang.StringBuffer . java.lang.StringBuffer ( STRING ) ; XPathExpression org.springframework.integration.xml.config.XPathExpression = org.springframework.integration.xml.config.XPathExpression ( java.lang.StringBuffer . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.integration.xml.config.XPathExpression . evaluateAsString ( XmlTestUtil . getDocumentForString ( STRING ) ) ) ; assertEquals ( STRING , org.springframework.integration.xml.config.XPathExpression . evaluateAsString ( XmlTestUtil . getDocumentForString ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( STRING ) ; XPathExpression org.springframework.integration.xml.config.XPathExpression = org.springframework.integration.xml.config.XPathExpression ( java.lang.StringBuilder . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.integration.xml.config.XPathExpression . evaluateAsString ( XmlTestUtil . getDocumentForString ( STRING ) ) ) ; assertEquals ( STRING , org.springframework.integration.xml.config.XPathExpression . evaluateAsString ( XmlTestUtil . getDocumentForString ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( STRING ) ; try { org.springframework.integration.xml.config.XPathExpression ( java.lang.StringBuilder . java.lang.String ( ) ) ; } catch ( BeanDefinitionStoreException org.springframework.integration.xml.config.BeanDefinitionStoreException ) { assertTrue ( org.springframework.integration.xml.config.BeanDefinitionStoreException . getCause ( ) instanceof org.xml.sax.SAXParseException ) ; return; } fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionStoreException .class ) public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; XPathExpression org.springframework.integration.xml.config.XPathExpression = org.springframework.integration.xml.config.XPathExpression ( java.lang.String ) ; assertEquals ( STRING , org.springframework.integration.xml.config.XPathExpression . evaluateAsString ( XmlTestUtil . getDocumentForString ( STRING ) ) ) ; assertEquals ( STRING , org.springframework.integration.xml.config.XPathExpression . evaluateAsString ( XmlTestUtil . getDocumentForString ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; try { org.springframework.integration.xml.config.XPathExpression ( java.lang.StringBuilder . java.lang.String ( ) ) ; } catch ( BeanDefinitionStoreException org.springframework.integration.xml.config.BeanDefinitionStoreException ) { assertEquals ( STRING , org.springframework.integration.xml.config.BeanDefinitionStoreException . getCause ( ) . getMessage ( ) ) ; return; } fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( STRING ) ; try { org.springframework.integration.xml.config.XPathExpression ( java.lang.StringBuilder . java.lang.String ( ) ) ; } catch ( BeanDefinitionStoreException org.springframework.integration.xml.config.BeanDefinitionStoreException ) { assertEquals ( STRING , org.springframework.integration.xml.config.BeanDefinitionStoreException . getCause ( ) . getMessage ( ) ) ; return; } fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( STRING ) ; try { org.springframework.integration.xml.config.XPathExpression ( java.lang.StringBuilder . java.lang.String ( ) ) ; } catch ( BeanDefinitionStoreException org.springframework.integration.xml.config.BeanDefinitionStoreException ) { assertEquals ( STRING , org.springframework.integration.xml.config.BeanDefinitionStoreException . getCause ( ) . getMessage ( ) ) ; return; } fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.xml.config.XPathExpression org.springframework.integration.xml.config.XPathExpression ( java.lang.String java.lang.String ) { TestXmlApplicationContext org.springframework.integration.xml.config.TestXmlApplicationContext = TestXmlApplicationContextHelper . getTestAppContext ( java.lang.String ) ; return ( XPathExpression ) org.springframework.integration.xml.config.TestXmlApplicationContext . getBean ( STRING ) ; }  <METHOD_END>
