<METHOD_START> @ Before public void void ( ) { new java.io.File ( STRING ) . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ConfigurableApplicationContext org.springframework.integration.sftp.config.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.sftp.config.InboundChannelAdapterParserTests> ( ) ) ; SourcePollingChannelAdapter org.springframework.integration.sftp.config.SourcePollingChannelAdapter = org.springframework.integration.sftp.config.ConfigurableApplicationContext . getBean ( STRING , SourcePollingChannelAdapter .class ) ; assertFalse ( org.springframework.integration.sftp.config.SourcePollingChannelAdapter . isRunning ( ) ) ; org.springframework.integration.sftp.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ConfigurableApplicationContext org.springframework.integration.sftp.config.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.sftp.config.InboundChannelAdapterParserTests> ( ) ) ; assertTrue ( new java.io.File ( STRING ) . boolean ( ) ) ; java.lang.Object java.lang.Object = org.springframework.integration.sftp.config.ConfigurableApplicationContext . getBean ( STRING ) ; assertTrue ( java.lang.Object instanceof SourcePollingChannelAdapter ) ; SftpInboundFileSynchronizingMessageSource org.springframework.integration.sftp.config.SftpInboundFileSynchronizingMessageSource = ( SftpInboundFileSynchronizingMessageSource ) TestUtils . getPropertyValue ( java.lang.Object , STRING ) ; assertNotNull ( org.springframework.integration.sftp.config.SftpInboundFileSynchronizingMessageSource ) ; java.util.concurrent.PriorityBlockingQueue<?> < ? > java.util.concurrent.PriorityBlockingQueue<?> = TestUtils . getPropertyValue ( java.lang.Object , STRING , java.util.concurrent.PriorityBlockingQueue .class ) ; java.util.Comparator<?> < ? > java.util.Comparator<?> = java.util.concurrent.PriorityBlockingQueue<> . java.util.Comparator<? super > ( ) ; assertNotNull ( java.util.Comparator<> ) ; SftpInboundFileSynchronizer org.springframework.integration.sftp.config.SftpInboundFileSynchronizer = TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpInboundFileSynchronizingMessageSource , STRING , SftpInboundFileSynchronizer .class ) ; assertEquals ( STRING , TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpInboundFileSynchronizer , STRING , Expression .class ) . getExpressionString ( ) ) ; assertNotNull ( TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpInboundFileSynchronizer , STRING ) ) ; assertTrue ( TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpInboundFileSynchronizer , STRING , java.lang.Boolean .class ) ) ; java.lang.String java.lang.String = ( java.lang.String ) TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpInboundFileSynchronizer , STRING ) ; assertEquals ( STRING , TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpInboundFileSynchronizer , STRING , java.lang.String .class ) ) ; assertNotNull ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; PollableChannel org.springframework.integration.sftp.config.PollableChannel = org.springframework.integration.sftp.config.ConfigurableApplicationContext . getBean ( STRING , PollableChannel .class ) ; assertNotNull ( org.springframework.integration.sftp.config.PollableChannel . receive ( NUMBER ) ) ; FileListFilter < ? > org.springframework.integration.sftp.config.FileListFilter<?> = org.springframework.integration.sftp.config.ConfigurableApplicationContext . getBean ( STRING , FileListFilter .class ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Collection<org.springframework.integration.sftp.config.FileListFilter<?>> < FileListFilter < ? > > java.util.Collection<org.springframework.integration.sftp.config.FileListFilter<?>> = TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpInboundFileSynchronizingMessageSource , STRING , java.util.Collection .class ) ; assertThat ( java.util.Collection<org.springframework.integration.sftp.config.FileListFilter<?>> , hasItem ( org.springframework.integration.sftp.config.FileListFilter<> ) ) ; assertEquals ( NUMBER , org.springframework.integration.sftp.config.SftpInboundFileSynchronizingMessageSource . getMaxFetchSize ( ) ) ; org.springframework.integration.sftp.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.integration.sftp.config.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.sftp.config.InboundChannelAdapterParserTests> ( ) ) ; MessageChannel org.springframework.integration.sftp.config.MessageChannel = org.springframework.integration.sftp.config.ConfigurableApplicationContext . getBean ( STRING , MessageChannel .class ) ; SourcePollingChannelAdapter org.springframework.integration.sftp.config.SourcePollingChannelAdapter = org.springframework.integration.sftp.config.ConfigurableApplicationContext . getBean ( STRING , SourcePollingChannelAdapter .class ) ; assertEquals ( STRING , TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SourcePollingChannelAdapter , STRING , Expression .class ) . getExpressionString ( ) ) ; assertSame ( org.springframework.integration.sftp.config.MessageChannel , TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SourcePollingChannelAdapter , STRING ) ) ; assertEquals ( java.lang.Integer . int , TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SourcePollingChannelAdapter , STRING ) ) ; org.springframework.integration.sftp.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionStoreException .class ) public void void ( ) java.lang.Exception { assertTrue ( ! new java.io.File ( STRING ) . boolean ( ) ) ; new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.sftp.config.InboundChannelAdapterParserTests> ( ) ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertFalse ( new java.io.File ( STRING ) . boolean ( ) ) ; ConfigurableApplicationContext org.springframework.integration.sftp.config.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.sftp.config.InboundChannelAdapterParserTests> ( ) ) ; assertTrue ( new java.io.File ( STRING ) . boolean ( ) ) ; org.springframework.integration.sftp.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanCreationException .class ) public void void ( ) java.lang.Exception { new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.sftp.config.InboundChannelAdapterParserTests> ( ) ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) java.lang.Exception { new java.io.File ( STRING ) . boolean ( ) ; }  <METHOD_END>
