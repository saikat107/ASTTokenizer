<METHOD_START> @ Before public void void ( ) { this . org.springframework.data.map.MapKeyValueAdapter = new MapKeyValueAdapter ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . put ( null , java.lang.Object , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) , nullValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) ; assertThat ( org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) , equalTo ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . contains ( null , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . contains ( STRING , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.map.MapKeyValueAdapter . contains ( STRING , java.lang.String ) , is ( false ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) ; assertThat ( org.springframework.data.map.MapKeyValueAdapter . contains ( STRING , java.lang.String ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.map.MapKeyValueAdapter . get ( STRING , java.lang.String ) , nullValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) ; assertThat ( org.springframework.data.map.MapKeyValueAdapter . get ( STRING , java.lang.String ) , is ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . get ( null , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . get ( STRING , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) ; org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) ; org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.String , java.lang.String ) ; assertThat ( org.springframework.data.map.MapKeyValueAdapter . getAllOf ( java.lang.String ) , containsInAnyOrder ( java.lang.Object , java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . getAllOf ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.map.MapKeyValueAdapter . delete ( STRING , java.lang.String ) , nullValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) ; assertThat ( org.springframework.data.map.MapKeyValueAdapter . delete ( STRING , java.lang.String ) , is ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) ; org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) ; CloseableIterator < java.util.Map . java.util.Map.Entry<java.io.Serializable,java.lang.Object> < java.io.Serializable , java.lang.Object > > org.springframework.data.map.CloseableIterator<java.util.Map.Entry<java.io.Serializable,java.lang.Object>> = org.springframework.data.map.MapKeyValueAdapter . entries ( java.lang.String ) ; assertThat ( org.springframework.data.map.CloseableIterator<java.util.Map.Entry<java.io.Serializable,java.lang.Object>> . next ( ) , isEntry ( STRING , java.lang.Object ) ) ; assertThat ( org.springframework.data.map.CloseableIterator<java.util.Map.Entry<java.io.Serializable,java.lang.Object>> . next ( ) , isEntry ( STRING , java.lang.Object ) ) ; assertThat ( org.springframework.data.map.CloseableIterator<java.util.Map.Entry<java.io.Serializable,java.lang.Object>> . hasNext ( ) , is ( false ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.map.MapKeyValueAdapter . entries ( java.lang.String ) . hasNext ( ) , is ( false ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) ; org.springframework.data.map.MapKeyValueAdapter . put ( STRING , java.lang.Object , java.lang.String ) ; CloseableIterator < java.util.Map . java.util.Map.Entry<java.io.Serializable,java.lang.Object> < java.io.Serializable , java.lang.Object > > org.springframework.data.map.CloseableIterator<java.util.Map.Entry<java.io.Serializable,java.lang.Object>> = org.springframework.data.map.MapKeyValueAdapter . entries ( java.lang.String ) ; assertThat ( org.springframework.data.map.CloseableIterator<java.util.Map.Entry<java.io.Serializable,java.lang.Object>> . next ( ) , isEntry ( STRING , java.lang.Object ) ) ; assertThat ( org.springframework.data.map.CloseableIterator<java.util.Map.Entry<java.io.Serializable,java.lang.Object>> . hasNext ( ) , is ( false ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {}  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { final int int = NUMBER ; int int = NUMBER ; int = int * ObjectUtils . nullSafeHashCode ( this . java.lang.String ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null ) { return false ; } if ( ! ( java.lang.Object instanceof org.springframework.data.map.MapKeyValueAdapterUnitTests.SimpleObject ) ) { return false ; } org.springframework.data.map.MapKeyValueAdapterUnitTests.SimpleObject org.springframework.data.map.MapKeyValueAdapterUnitTests.SimpleObject = ( org.springframework.data.map.MapKeyValueAdapterUnitTests.SimpleObject ) java.lang.Object ; return ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.data.map.MapKeyValueAdapterUnitTests.SimpleObject . java.lang.String ) ; }  <METHOD_END>
