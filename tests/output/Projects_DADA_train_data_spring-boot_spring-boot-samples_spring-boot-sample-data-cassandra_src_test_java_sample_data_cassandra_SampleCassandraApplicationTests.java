<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = sample.data.cassandra.SampleCassandraApplicationTests . sample.data.cassandra.OutputCapture . toString ( ) ; assertThat ( java.lang.String ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public sample.data.cassandra.Statement sample.data.cassandra.Statement ( final Statement sample.data.cassandra.Statement , Description sample.data.cassandra.Description ) { return new Statement ( ) { @ java.lang.Override public void void ( ) java.lang.Throwable { if ( ! boolean ( ) ) { sample.data.cassandra.Statement . evaluate ( ) ; } } private boolean boolean ( ) { return java.io.File . char == '\\' ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Throwable { if ( ! boolean ( ) ) { sample.data.cassandra.Statement . evaluate ( ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return java.io.File . char == '\\' ; }  <METHOD_END>
