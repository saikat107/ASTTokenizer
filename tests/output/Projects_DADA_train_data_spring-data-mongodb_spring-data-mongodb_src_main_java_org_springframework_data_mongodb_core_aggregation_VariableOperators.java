<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.VariableOperators.Map . org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.VariableOperators.Map . org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.VariableOperators.Map . org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.VariableOperators.Map . org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.VariableOperators.Let . org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder ( org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable ... org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable[] ) { return org.springframework.data.mongodb.core.aggregation.VariableOperators.Let . org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder ( org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.VariableOperators.Let . org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder ( java.util.Collection<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> < org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable > java.util.Collection<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> ) { return org.springframework.data.mongodb.core.aggregation.VariableOperators.Let . org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder ( java.util.Collection<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String , AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( java.lang.Object , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; this . java.lang.Object = java.lang.Object ; this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder ( final java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder ( final java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Map org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( Fields . field ( java.lang.String ) , java.lang.String , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; } } ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder ( final java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Map org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( Fields . field ( java.lang.String ) , java.lang.String , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Map org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( Fields . field ( java.lang.String ) , java.lang.String , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.AsBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder ( final java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Map org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.String , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; } } ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder ( final java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Map org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.String , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Map org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.String , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( final AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return org.springframework.data.mongodb.core.aggregation.Document ( ExposedFields . synthetic ( Fields . fields ( java.lang.String ) ) , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields , AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; InheritingExposedFieldsAggregationOperationContext org.springframework.data.mongodb.core.aggregation.InheritingExposedFieldsAggregationOperationContext = new InheritingExposedFieldsAggregationOperationContext ( org.springframework.data.mongodb.core.aggregation.ExposedFields , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; Document org.springframework.data.mongodb.core.aggregation.Document ; if ( java.lang.Object instanceof Field ) { org.springframework.data.mongodb.core.aggregation.Document = new Document ( STRING , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( ( Field ) java.lang.Object ) . toString ( ) ) ; } else { org.springframework.data.mongodb.core.aggregation.Document = new Document ( STRING , ( ( AggregationExpression ) java.lang.Object ) . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } org.springframework.data.mongodb.core.aggregation.Document . putAll ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getMappedObject ( org.springframework.data.mongodb.core.aggregation.Document ) ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , java.lang.String ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , org.springframework.data.mongodb.core.aggregation.AggregationExpression . toDocument ( new NestedDelegatingExpressionAggregationOperationContext ( org.springframework.data.mongodb.core.aggregation.InheritingExposedFieldsAggregationOperationContext ) ) ) ; return new Document ( STRING , org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Map.FunctionBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.VariableOperators.Map org.springframework.data.mongodb.core.aggregation.VariableOperators.Map ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression );  <METHOD_END>
<METHOD_START> private void ( java.util.List<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> < org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable > java.util.List<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> , AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { this . java.util.List<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> = java.util.List<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder ( final java.util.Collection<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> < org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable > java.util.Collection<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> ) { Assert . notNull ( java.util.Collection<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Let org.springframework.data.mongodb.core.aggregation.VariableOperators.Let ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Let ( new java.util.ArrayList<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> < org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable > ( java.util.Collection<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> ) , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Let org.springframework.data.mongodb.core.aggregation.VariableOperators.Let ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Let ( new java.util.ArrayList<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> < org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable > ( java.util.Collection<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> ) , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder ( final org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable ... org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.LetBuilder ( ) { @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Let org.springframework.data.mongodb.core.aggregation.VariableOperators.Let ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Let ( java.util.Arrays . java.util.List<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> ( org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable[] ) , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.VariableOperators.Let org.springframework.data.mongodb.core.aggregation.VariableOperators.Let ( final AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Let ( java.util.Arrays . java.util.List<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> ( org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable[] ) , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.VariableOperators.Let org.springframework.data.mongodb.core.aggregation.VariableOperators.Let ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression );  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( final AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return org.springframework.data.mongodb.core.aggregation.Document ( ExposedFields . synthetic ( Fields . fields ( java.lang.String[] ( ) ) ) , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String [] java.lang.String[] ( ) { java.lang.String [] java.lang.String[] = new java.lang.String [ this . java.util.List<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> . int ( ) ] ; for ( int int = NUMBER ; int < this . java.util.List<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> . int ( ) ; int ++ ) { java.lang.String[] [ int ] = this . java.util.List<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> . org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable ( int ) . java.lang.String ; } return java.lang.String[] ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields , AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; InheritingExposedFieldsAggregationOperationContext org.springframework.data.mongodb.core.aggregation.InheritingExposedFieldsAggregationOperationContext = new InheritingExposedFieldsAggregationOperationContext ( org.springframework.data.mongodb.core.aggregation.ExposedFields , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; for ( org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable : this . java.util.List<org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable> ) { org.springframework.data.mongodb.core.aggregation.Document . putAll ( org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , org.springframework.data.mongodb.core.aggregation.Document ) ; org.springframework.data.mongodb.core.aggregation.Document . put ( STRING , java.lang.Object ( org.springframework.data.mongodb.core.aggregation.InheritingExposedFieldsAggregationOperationContext ) ) ; return new Document ( STRING , org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable , AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return new Document ( org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable . java.lang.String , org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable . java.lang.Object instanceof AggregationExpression ? ( ( AggregationExpression ) org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable . java.lang.Object ) . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) : org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable . java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return org.springframework.data.mongodb.core.aggregation.AggregationExpression . toDocument ( new NestedDelegatingExpressionAggregationOperationContext ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { this . java.lang.String = java.lang.String ; this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable ( java.lang.String , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable ( Document org.springframework.data.mongodb.core.aggregation.Document ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Document , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.VariableOperators.Let.ExpressionVariable ( java.lang.String , org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
