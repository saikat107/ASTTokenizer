<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.file.config.FileExistsMode = FileExistsMode . getForString ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.io.File java.io.File ) { this . java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( Expression org.springframework.integration.file.config.Expression ) { this . org.springframework.integration.file.config.Expression = org.springframework.integration.file.config.Expression ; }  <METHOD_END>
<METHOD_START> public void void ( FileNameGenerator org.springframework.integration.file.config.FileNameGenerator ) { this . org.springframework.integration.file.config.FileNameGenerator = org.springframework.integration.file.config.FileNameGenerator ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Long java.lang.Long ) { this . java.lang.Long = java.lang.Long ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . java.lang.Long = long ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . java.lang.Boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( MessageFlushPredicate org.springframework.integration.file.config.MessageFlushPredicate ) { this . org.springframework.integration.file.config.MessageFlushPredicate = org.springframework.integration.file.config.MessageFlushPredicate ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.file.config.FileWritingMessageHandler org.springframework.integration.file.config.FileWritingMessageHandler ( ) { final FileWritingMessageHandler org.springframework.integration.file.config.FileWritingMessageHandler ; if ( this . java.io.File != null && this . org.springframework.integration.file.config.Expression != null ) { throw new java.lang.IllegalStateException ( STRING ) ; } else if ( this . java.io.File != null ) { org.springframework.integration.file.config.FileWritingMessageHandler = new FileWritingMessageHandler ( this . java.io.File ) ; } else if ( this . org.springframework.integration.file.config.Expression != null ) { org.springframework.integration.file.config.FileWritingMessageHandler = new FileWritingMessageHandler ( this . org.springframework.integration.file.config.Expression ) ; } else { throw new java.lang.IllegalStateException ( STRING ) ; } if ( this . java.lang.String != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setCharset ( this . java.lang.String ) ; } if ( this . org.springframework.integration.file.config.FileNameGenerator != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setFileNameGenerator ( this . org.springframework.integration.file.config.FileNameGenerator ) ; } if ( this . java.lang.Boolean != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setDeleteSourceFiles ( this . java.lang.Boolean ) ; } if ( this . java.lang.Boolean != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setAutoCreateDirectory ( this . java.lang.Boolean ) ; } if ( this . java.lang.Boolean != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setRequiresReply ( this . java.lang.Boolean ) ; } if ( this . java.lang.Long != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setSendTimeout ( this . java.lang.Long ) ; } if ( this . java.lang.String != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setTemporaryFileSuffix ( this . java.lang.String ) ; } org.springframework.integration.file.config.FileWritingMessageHandler . setExpectReply ( this . boolean ) ; if ( this . java.lang.Boolean != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setAppendNewLine ( this . java.lang.Boolean ) ; } if ( this . org.springframework.integration.file.config.FileExistsMode != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setFileExistsMode ( this . org.springframework.integration.file.config.FileExistsMode ) ; } if ( this . java.lang.Integer != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setBufferSize ( this . java.lang.Integer ) ; } if ( this . java.lang.Long != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setFlushInterval ( this . java.lang.Long ) ; } if ( this . java.lang.Boolean != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setFlushWhenIdle ( this . java.lang.Boolean ) ; } if ( this . org.springframework.integration.file.config.MessageFlushPredicate != null ) { org.springframework.integration.file.config.FileWritingMessageHandler . setFlushPredicate ( this . org.springframework.integration.file.config.MessageFlushPredicate ) ; } return org.springframework.integration.file.config.FileWritingMessageHandler ; }  <METHOD_END>
