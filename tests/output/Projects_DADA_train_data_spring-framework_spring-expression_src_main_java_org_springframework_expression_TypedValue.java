<METHOD_START> public void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; this . org.springframework.expression.TypeDescriptor = null ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , TypeDescriptor org.springframework.expression.TypeDescriptor ) { this . java.lang.Object = java.lang.Object ; this . org.springframework.expression.TypeDescriptor = org.springframework.expression.TypeDescriptor ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return this . java.lang.Object ; }  <METHOD_END>
<METHOD_START> public org.springframework.expression.TypeDescriptor org.springframework.expression.TypeDescriptor ( ) { if ( this . org.springframework.expression.TypeDescriptor == null && this . java.lang.Object != null ) { this . org.springframework.expression.TypeDescriptor = TypeDescriptor . forObject ( this . java.lang.Object ) ; } return this . org.springframework.expression.TypeDescriptor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.expression.TypedValue ) ) { return false ; } org.springframework.expression.TypedValue org.springframework.expression.TypedValue = ( org.springframework.expression.TypedValue ) java.lang.Object ; return ( ObjectUtils . nullSafeEquals ( this . java.lang.Object , org.springframework.expression.TypedValue . java.lang.Object ) && ( ( this . org.springframework.expression.TypeDescriptor == null && org.springframework.expression.TypedValue . org.springframework.expression.TypeDescriptor == null ) || ObjectUtils . nullSafeEquals ( org.springframework.expression.TypeDescriptor ( ) , org.springframework.expression.TypedValue . org.springframework.expression.TypeDescriptor ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ObjectUtils . nullSafeHashCode ( this . java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.Object + STRING + org.springframework.expression.TypeDescriptor ( ) + STRING ; }  <METHOD_END>
