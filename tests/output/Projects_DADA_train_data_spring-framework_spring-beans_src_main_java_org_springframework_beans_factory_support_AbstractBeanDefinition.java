<METHOD_START> protected void ( ) { this( null , null ); }  <METHOD_END>
<METHOD_START> protected void ( ConstructorArgumentValues org.springframework.beans.factory.support.ConstructorArgumentValues , MutablePropertyValues org.springframework.beans.factory.support.MutablePropertyValues ) { void ( org.springframework.beans.factory.support.ConstructorArgumentValues ) ; void ( org.springframework.beans.factory.support.MutablePropertyValues ) ; }  <METHOD_END>
<METHOD_START> protected void ( BeanDefinition org.springframework.beans.factory.support.BeanDefinition ) { setParentName ( org.springframework.beans.factory.support.BeanDefinition . getParentName ( ) ) ; void ( org.springframework.beans.factory.support.BeanDefinition . getBeanClassName ( ) ) ; void ( org.springframework.beans.factory.support.BeanDefinition . getScope ( ) ) ; void ( org.springframework.beans.factory.support.BeanDefinition . isAbstract ( ) ) ; void ( org.springframework.beans.factory.support.BeanDefinition . isLazyInit ( ) ) ; void ( org.springframework.beans.factory.support.BeanDefinition . getFactoryBeanName ( ) ) ; void ( org.springframework.beans.factory.support.BeanDefinition . getFactoryMethodName ( ) ) ; void ( new ConstructorArgumentValues ( org.springframework.beans.factory.support.BeanDefinition . getConstructorArgumentValues ( ) ) ) ; void ( new MutablePropertyValues ( org.springframework.beans.factory.support.BeanDefinition . getPropertyValues ( ) ) ) ; void ( org.springframework.beans.factory.support.BeanDefinition . getRole ( ) ) ; setSource ( org.springframework.beans.factory.support.BeanDefinition . getSource ( ) ) ; copyAttributesFrom ( org.springframework.beans.factory.support.BeanDefinition ) ; if ( org.springframework.beans.factory.support.BeanDefinition instanceof org.springframework.beans.factory.support.AbstractBeanDefinition ) { org.springframework.beans.factory.support.AbstractBeanDefinition org.springframework.beans.factory.support.AbstractBeanDefinition = ( org.springframework.beans.factory.support.AbstractBeanDefinition ) org.springframework.beans.factory.support.BeanDefinition ; if ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) { void ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.Class<?> ( ) ) ; } void ( org.springframework.beans.factory.support.AbstractBeanDefinition . int ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . int ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String[] ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.util.function.Supplier<?> ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; void ( new MethodOverrides ( org.springframework.beans.factory.support.AbstractBeanDefinition . org.springframework.beans.factory.support.MethodOverrides ( ) ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . org.springframework.beans.factory.support.Resource ( ) ) ; } else { void ( org.springframework.beans.factory.support.BeanDefinition . getResourceDescription ( ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( BeanDefinition org.springframework.beans.factory.support.BeanDefinition ) { if ( StringUtils . hasLength ( org.springframework.beans.factory.support.BeanDefinition . getBeanClassName ( ) ) ) { void ( org.springframework.beans.factory.support.BeanDefinition . getBeanClassName ( ) ) ; } if ( StringUtils . hasLength ( org.springframework.beans.factory.support.BeanDefinition . getScope ( ) ) ) { void ( org.springframework.beans.factory.support.BeanDefinition . getScope ( ) ) ; } void ( org.springframework.beans.factory.support.BeanDefinition . isAbstract ( ) ) ; void ( org.springframework.beans.factory.support.BeanDefinition . isLazyInit ( ) ) ; if ( StringUtils . hasLength ( org.springframework.beans.factory.support.BeanDefinition . getFactoryBeanName ( ) ) ) { void ( org.springframework.beans.factory.support.BeanDefinition . getFactoryBeanName ( ) ) ; } if ( StringUtils . hasLength ( org.springframework.beans.factory.support.BeanDefinition . getFactoryMethodName ( ) ) ) { void ( org.springframework.beans.factory.support.BeanDefinition . getFactoryMethodName ( ) ) ; } org.springframework.beans.factory.support.ConstructorArgumentValues ( ) . addArgumentValues ( org.springframework.beans.factory.support.BeanDefinition . getConstructorArgumentValues ( ) ) ; org.springframework.beans.factory.support.MutablePropertyValues ( ) . addPropertyValues ( org.springframework.beans.factory.support.BeanDefinition . getPropertyValues ( ) ) ; void ( org.springframework.beans.factory.support.BeanDefinition . getRole ( ) ) ; setSource ( org.springframework.beans.factory.support.BeanDefinition . getSource ( ) ) ; copyAttributesFrom ( org.springframework.beans.factory.support.BeanDefinition ) ; if ( org.springframework.beans.factory.support.BeanDefinition instanceof org.springframework.beans.factory.support.AbstractBeanDefinition ) { org.springframework.beans.factory.support.AbstractBeanDefinition org.springframework.beans.factory.support.AbstractBeanDefinition = ( org.springframework.beans.factory.support.AbstractBeanDefinition ) org.springframework.beans.factory.support.BeanDefinition ; if ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) { void ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.Class<?> ( ) ) ; } void ( org.springframework.beans.factory.support.AbstractBeanDefinition . int ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . int ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String[] ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.util.function.Supplier<?> ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; org.springframework.beans.factory.support.MethodOverrides ( ) . addOverrides ( org.springframework.beans.factory.support.AbstractBeanDefinition . org.springframework.beans.factory.support.MethodOverrides ( ) ) ; if ( StringUtils . hasLength ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ( ) ) ) { void ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; } if ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ( ) != null ) { void ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; } void ( org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ( ) ) ; void ( org.springframework.beans.factory.support.AbstractBeanDefinition . org.springframework.beans.factory.support.Resource ( ) ) ; } else { void ( org.springframework.beans.factory.support.BeanDefinition . getResourceDescription ( ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( BeanDefinitionDefaults org.springframework.beans.factory.support.BeanDefinitionDefaults ) { void ( org.springframework.beans.factory.support.BeanDefinitionDefaults . isLazyInit ( ) ) ; void ( org.springframework.beans.factory.support.BeanDefinitionDefaults . getAutowireMode ( ) ) ; void ( org.springframework.beans.factory.support.BeanDefinitionDefaults . getDependencyCheck ( ) ) ; void ( org.springframework.beans.factory.support.BeanDefinitionDefaults . getInitMethodName ( ) ) ; void ( false ) ; void ( org.springframework.beans.factory.support.BeanDefinitionDefaults . getDestroyMethodName ( ) ) ; void ( false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.Object = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.Object java.lang.Object = this . java.lang.Object ; if ( java.lang.Object instanceof java.lang.Class ) { return ( ( java.lang.Class<?> < ? > ) java.lang.Object ) . java.lang.String ( ) ; } else { return ( java.lang.String ) java.lang.Object ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . java.lang.Object = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public java.lang.Class<?> < ? > java.lang.Class<?> ( ) java.lang.IllegalStateException { java.lang.Object java.lang.Object = this . java.lang.Object ; if ( java.lang.Object == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } if ( ! ( java.lang.Object instanceof java.lang.Class ) ) { throw new java.lang.IllegalStateException ( STRING + java.lang.Object + STRING ) ; } return ( java.lang.Class<?> < ? > ) java.lang.Object ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ( this . java.lang.Object instanceof java.lang.Class ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.ClassLoader java.lang.ClassLoader ) throws java.lang.ClassNotFoundException { java.lang.String java.lang.String = java.lang.String ( ) ; if ( java.lang.String == null ) { return null ; } java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . forName ( java.lang.String , java.lang.ClassLoader ) ; this . java.lang.Object = java.lang.Class<> ; return java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return SCOPE_SINGLETON . equals ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return SCOPE_PROTOTYPE . equals ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { if ( this . int == int ) { java.lang.reflect.Constructor<?> < ? > [] java.lang.reflect.Constructor<?>[] = java.lang.Class<?> ( ) . java.lang.reflect.Constructor<?>[] ( ) ; for ( java.lang.reflect.Constructor<?> < ? > java.lang.reflect.Constructor<?> : java.lang.reflect.Constructor<?>[] ) { if ( java.lang.reflect.Constructor<> . int ( ) == NUMBER ) { return int ; } } return int ; } else { return this . int ; } }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( AutowireCandidateQualifier org.springframework.beans.factory.support.AutowireCandidateQualifier ) { this . java.util.Map<java.lang.String,org.springframework.beans.factory.support.AutowireCandidateQualifier> . put ( org.springframework.beans.factory.support.AutowireCandidateQualifier . getTypeName ( ) , org.springframework.beans.factory.support.AutowireCandidateQualifier ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.String java.lang.String ) { return this . java.util.Map<java.lang.String,org.springframework.beans.factory.support.AutowireCandidateQualifier> . keySet ( ) . contains ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.AutowireCandidateQualifier org.springframework.beans.factory.support.AutowireCandidateQualifier ( java.lang.String java.lang.String ) { return this . java.util.Map<java.lang.String,org.springframework.beans.factory.support.AutowireCandidateQualifier> . get ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.util.Set<org.springframework.beans.factory.support.AutowireCandidateQualifier> < AutowireCandidateQualifier > java.util.Set<org.springframework.beans.factory.support.AutowireCandidateQualifier> ( ) { return new java.util.LinkedHashSet <> ( this . java.util.Map<java.lang.String,org.springframework.beans.factory.support.AutowireCandidateQualifier> . values ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.beans.factory.support.AbstractBeanDefinition org.springframework.beans.factory.support.AbstractBeanDefinition ) { Assert . notNull ( org.springframework.beans.factory.support.AbstractBeanDefinition , STRING ) ; this . java.util.Map<java.lang.String,org.springframework.beans.factory.support.AutowireCandidateQualifier> . putAll ( org.springframework.beans.factory.support.AbstractBeanDefinition . java.util.Map<java.lang.String,org.springframework.beans.factory.support.AutowireCandidateQualifier> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.function.Supplier<?> < ? > java.util.function.Supplier<?> ) { this . java.util.function.Supplier<?> = java.util.function.Supplier<> ; }  <METHOD_END>
<METHOD_START> public java.util.function.Supplier<?> < ? > java.util.function.Supplier<?> ( ) { return this . java.util.function.Supplier<> ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( ConstructorArgumentValues org.springframework.beans.factory.support.ConstructorArgumentValues ) { this . org.springframework.beans.factory.support.ConstructorArgumentValues = ( org.springframework.beans.factory.support.ConstructorArgumentValues != null ? org.springframework.beans.factory.support.ConstructorArgumentValues : new ConstructorArgumentValues ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.beans.factory.support.ConstructorArgumentValues org.springframework.beans.factory.support.ConstructorArgumentValues ( ) { return this . org.springframework.beans.factory.support.ConstructorArgumentValues ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! this . org.springframework.beans.factory.support.ConstructorArgumentValues . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( MutablePropertyValues org.springframework.beans.factory.support.MutablePropertyValues ) { this . org.springframework.beans.factory.support.MutablePropertyValues = ( org.springframework.beans.factory.support.MutablePropertyValues != null ? org.springframework.beans.factory.support.MutablePropertyValues : new MutablePropertyValues ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.beans.factory.support.MutablePropertyValues org.springframework.beans.factory.support.MutablePropertyValues ( ) { return this . org.springframework.beans.factory.support.MutablePropertyValues ; }  <METHOD_END>
<METHOD_START> public void void ( MethodOverrides org.springframework.beans.factory.support.MethodOverrides ) { this . org.springframework.beans.factory.support.MethodOverrides = ( org.springframework.beans.factory.support.MethodOverrides != null ? org.springframework.beans.factory.support.MethodOverrides : new MethodOverrides ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.MethodOverrides org.springframework.beans.factory.support.MethodOverrides ( ) { return this . org.springframework.beans.factory.support.MethodOverrides ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( Resource org.springframework.beans.factory.support.Resource ) { this . org.springframework.beans.factory.support.Resource = org.springframework.beans.factory.support.Resource ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.support.Resource org.springframework.beans.factory.support.Resource ( ) { return this . org.springframework.beans.factory.support.Resource ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.beans.factory.support.Resource = new DescriptiveResource ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( this . org.springframework.beans.factory.support.Resource != null ? this . org.springframework.beans.factory.support.Resource . getDescription ( ) : null ) ; }  <METHOD_END>
<METHOD_START> public void void ( BeanDefinition org.springframework.beans.factory.support.BeanDefinition ) { this . org.springframework.beans.factory.support.Resource = new BeanDefinitionResource ( org.springframework.beans.factory.support.BeanDefinition ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.beans.factory.support.BeanDefinition org.springframework.beans.factory.support.BeanDefinition ( ) { return ( this . org.springframework.beans.factory.support.Resource instanceof BeanDefinitionResource ? ( ( BeanDefinitionResource ) this . org.springframework.beans.factory.support.Resource ) . getBeanDefinition ( ) : null ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) org.springframework.beans.factory.support.BeanDefinitionValidationException { if ( ! org.springframework.beans.factory.support.MethodOverrides ( ) . isEmpty ( ) && java.lang.String ( ) != null ) { throw new BeanDefinitionValidationException ( STRING + STRING ) ; } if ( boolean ( ) ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) org.springframework.beans.factory.support.BeanDefinitionValidationException { MethodOverrides org.springframework.beans.factory.support.MethodOverrides = org.springframework.beans.factory.support.MethodOverrides ( ) ; if ( ! org.springframework.beans.factory.support.MethodOverrides . isEmpty ( ) ) { java.util.Set<org.springframework.beans.factory.support.MethodOverride> < MethodOverride > java.util.Set<org.springframework.beans.factory.support.MethodOverride> = org.springframework.beans.factory.support.MethodOverrides . getOverrides ( ) ; synchronized ( java.util.Set<org.springframework.beans.factory.support.MethodOverride> ) { for ( MethodOverride org.springframework.beans.factory.support.MethodOverride : java.util.Set<org.springframework.beans.factory.support.MethodOverride> ) { void ( org.springframework.beans.factory.support.MethodOverride ) ; } } } }  <METHOD_END>
<METHOD_START> protected void void ( MethodOverride org.springframework.beans.factory.support.MethodOverride ) throws org.springframework.beans.factory.support.BeanDefinitionValidationException { int int = ClassUtils . getMethodCountForName ( java.lang.Class<?> ( ) , org.springframework.beans.factory.support.MethodOverride . getMethodName ( ) ) ; if ( int == NUMBER ) { throw new BeanDefinitionValidationException ( STRING + org.springframework.beans.factory.support.MethodOverride . getMethodName ( ) + STRING + java.lang.String ( ) + STRING ) ; } else if ( int == NUMBER ) { org.springframework.beans.factory.support.MethodOverride . setOverloaded ( false ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) { return org.springframework.beans.factory.support.AbstractBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> public abstract org.springframework.beans.factory.support.AbstractBeanDefinition org.springframework.beans.factory.support.AbstractBeanDefinition ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.beans.factory.support.AbstractBeanDefinition ) ) { return false ; } org.springframework.beans.factory.support.AbstractBeanDefinition org.springframework.beans.factory.support.AbstractBeanDefinition = ( org.springframework.beans.factory.support.AbstractBeanDefinition ) java.lang.Object ; if ( ! ObjectUtils . nullSafeEquals ( java.lang.String ( ) , org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ( ) ) ) return false ; if ( ! ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ) ) return false ; if ( this . boolean != org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ) return false ; if ( this . boolean != org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ) return false ; if ( this . int != org.springframework.beans.factory.support.AbstractBeanDefinition . int ) return false ; if ( this . int != org.springframework.beans.factory.support.AbstractBeanDefinition . int ) return false ; if ( ! java.util.Arrays . boolean ( this . java.lang.String[] , org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String[] ) ) return false ; if ( this . boolean != org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ) return false ; if ( ! ObjectUtils . nullSafeEquals ( this . java.util.Map<java.lang.String,org.springframework.beans.factory.support.AutowireCandidateQualifier> , org.springframework.beans.factory.support.AbstractBeanDefinition . java.util.Map<java.lang.String,org.springframework.beans.factory.support.AutowireCandidateQualifier> ) ) return false ; if ( this . boolean != org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ) return false ; if ( this . boolean != org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ) return false ; if ( this . boolean != org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ) return false ; if ( ! ObjectUtils . nullSafeEquals ( this . org.springframework.beans.factory.support.ConstructorArgumentValues , org.springframework.beans.factory.support.AbstractBeanDefinition . org.springframework.beans.factory.support.ConstructorArgumentValues ) ) return false ; if ( ! ObjectUtils . nullSafeEquals ( this . org.springframework.beans.factory.support.MutablePropertyValues , org.springframework.beans.factory.support.AbstractBeanDefinition . org.springframework.beans.factory.support.MutablePropertyValues ) ) return false ; if ( ! ObjectUtils . nullSafeEquals ( this . org.springframework.beans.factory.support.MethodOverrides , org.springframework.beans.factory.support.AbstractBeanDefinition . org.springframework.beans.factory.support.MethodOverrides ) ) return false ; if ( ! ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ) ) return false ; if ( ! ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ) ) return false ; if ( ! ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ) ) return false ; if ( this . boolean != org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ) return false ; if ( ! ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.beans.factory.support.AbstractBeanDefinition . java.lang.String ) ) return false ; if ( this . boolean != org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ) return false ; if ( this . boolean != org.springframework.beans.factory.support.AbstractBeanDefinition . boolean ) return false ; if ( this . int != org.springframework.beans.factory.support.AbstractBeanDefinition . int ) return false ; return super. boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = ObjectUtils . nullSafeHashCode ( java.lang.String ( ) ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( this . java.lang.String ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( this . org.springframework.beans.factory.support.ConstructorArgumentValues ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( this . org.springframework.beans.factory.support.MutablePropertyValues ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( this . java.lang.String ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( this . java.lang.String ) ; int = NUMBER * int + super. int ( ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ( ) ) . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . boolean ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . boolean ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . int ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . int ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . boolean ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . boolean ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) ; if ( this . org.springframework.beans.factory.support.Resource != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . org.springframework.beans.factory.support.Resource . getDescription ( ) ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
