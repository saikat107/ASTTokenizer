<METHOD_START> @ java.lang.Override public void void ( ApplicationEnvironmentPreparedEvent org.springframework.boot.context.config.ApplicationEnvironmentPreparedEvent ) { RelaxedPropertyResolver org.springframework.boot.context.config.RelaxedPropertyResolver = new RelaxedPropertyResolver ( org.springframework.boot.context.config.ApplicationEnvironmentPreparedEvent . getEnvironment ( ) , STRING ) ; if ( org.springframework.boot.context.config.RelaxedPropertyResolver . containsProperty ( STRING ) ) { java.lang.String java.lang.String = org.springframework.boot.context.config.RelaxedPropertyResolver . getProperty ( STRING ) ; AnsiOutput . setEnabled ( java.lang.Enum . T ( Enabled .class , java.lang.String . java.lang.String ( ) ) ) ; } if ( org.springframework.boot.context.config.RelaxedPropertyResolver . containsProperty ( STRING ) ) { AnsiOutput . setConsoleAvailable ( org.springframework.boot.context.config.RelaxedPropertyResolver . getProperty ( STRING , java.lang.Boolean .class ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ConfigFileApplicationListener . DEFAULT_ORDER + NUMBER ; }  <METHOD_END>
