<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; final XmlExpectationsHelper org.springframework.test.util.XmlExpectationsHelper = new XmlExpectationsHelper ( ) ; org.springframework.test.util.XmlExpectationsHelper . assertXmlEqual ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; org.springframework.test.util.ExpectedException . expect ( java.lang.AssertionError .class ) ; org.springframework.test.util.ExpectedException . expectMessage ( Matchers . startsWith ( STRING ) ) ; final XmlExpectationsHelper org.springframework.test.util.XmlExpectationsHelper = new XmlExpectationsHelper ( ) ; org.springframework.test.util.XmlExpectationsHelper . assertXmlEqual ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; final XmlExpectationsHelper org.springframework.test.util.XmlExpectationsHelper = new XmlExpectationsHelper ( ) ; org.springframework.test.util.XmlExpectationsHelper . assertXmlEqual ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; org.springframework.test.util.ExpectedException . expect ( java.lang.AssertionError .class ) ; org.springframework.test.util.ExpectedException . expectMessage ( Matchers . containsString ( STRING ) ) ; final XmlExpectationsHelper org.springframework.test.util.XmlExpectationsHelper = new XmlExpectationsHelper ( ) ; org.springframework.test.util.XmlExpectationsHelper . assertXmlEqual ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; org.springframework.test.util.ExpectedException . expect ( java.lang.AssertionError .class ) ; org.springframework.test.util.ExpectedException . expectMessage ( Matchers . containsString ( STRING ) ) ; final XmlExpectationsHelper org.springframework.test.util.XmlExpectationsHelper = new XmlExpectationsHelper ( ) ; org.springframework.test.util.XmlExpectationsHelper . assertXmlEqual ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
