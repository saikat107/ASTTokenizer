<METHOD_START> public void ( UriComponentsContributor ... org.springframework.web.method.support.UriComponentsContributor[] ) { java.util.Collections . boolean ( this . java.util.List<java.lang.Object> , org.springframework.web.method.support.UriComponentsContributor[] ) ; this . org.springframework.web.method.support.ConversionService = new DefaultFormattingConversionService ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.util.Collection<?> < ? > java.util.Collection<?> ) { this( java.util.Collection<> , null ); }  <METHOD_END>
<METHOD_START> public void ( java.util.Collection<?> < ? > java.util.Collection<?> , ConversionService org.springframework.web.method.support.ConversionService ) { Assert . notNull ( java.util.Collection<> , STRING ) ; this . java.util.List<java.lang.Object> . boolean ( java.util.Collection<> ) ; this . org.springframework.web.method.support.ConversionService = ( org.springframework.web.method.support.ConversionService != null ? org.springframework.web.method.support.ConversionService : new DefaultFormattingConversionService ( ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.util.List<java.lang.Object> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.web.method.support.MethodParameter ) { for ( java.lang.Object java.lang.Object : this . java.util.List<java.lang.Object> ) { if ( java.lang.Object instanceof UriComponentsContributor ) { UriComponentsContributor org.springframework.web.method.support.UriComponentsContributor = ( UriComponentsContributor ) java.lang.Object ; if ( org.springframework.web.method.support.UriComponentsContributor . supportsParameter ( org.springframework.web.method.support.MethodParameter ) ) { return true ; } } else if ( java.lang.Object instanceof HandlerMethodArgumentResolver ) { if ( ( ( HandlerMethodArgumentResolver ) java.lang.Object ) . supportsParameter ( org.springframework.web.method.support.MethodParameter ) ) { return false ; } } } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MethodParameter org.springframework.web.method.support.MethodParameter , java.lang.Object java.lang.Object , UriComponentsBuilder org.springframework.web.method.support.UriComponentsBuilder , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , ConversionService org.springframework.web.method.support.ConversionService ) { for ( java.lang.Object java.lang.Object : this . java.util.List<java.lang.Object> ) { if ( java.lang.Object instanceof UriComponentsContributor ) { UriComponentsContributor org.springframework.web.method.support.UriComponentsContributor = ( UriComponentsContributor ) java.lang.Object ; if ( org.springframework.web.method.support.UriComponentsContributor . supportsParameter ( org.springframework.web.method.support.MethodParameter ) ) { org.springframework.web.method.support.UriComponentsContributor . contributeMethodArgument ( org.springframework.web.method.support.MethodParameter , java.lang.Object , org.springframework.web.method.support.UriComponentsBuilder , java.util.Map<java.lang.String,java.lang.Object> , org.springframework.web.method.support.ConversionService ) ; break; } } else if ( java.lang.Object instanceof HandlerMethodArgumentResolver ) { if ( ( ( HandlerMethodArgumentResolver ) java.lang.Object ) . supportsParameter ( org.springframework.web.method.support.MethodParameter ) ) { break; } } } }  <METHOD_END>
<METHOD_START> public void void ( MethodParameter org.springframework.web.method.support.MethodParameter , java.lang.Object java.lang.Object , UriComponentsBuilder org.springframework.web.method.support.UriComponentsBuilder , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { this . void ( org.springframework.web.method.support.MethodParameter , java.lang.Object , org.springframework.web.method.support.UriComponentsBuilder , java.util.Map<java.lang.String,java.lang.Object> , this . org.springframework.web.method.support.ConversionService ) ; }  <METHOD_END>
