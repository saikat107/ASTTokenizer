<METHOD_START> public void ( ) { this( org.springframework.statemachine.data.support.ObjectMapper ); }  <METHOD_END>
<METHOD_START> public void ( ObjectMapper org.springframework.statemachine.data.support.ObjectMapper ) { this . org.springframework.statemachine.data.support.ObjectMapper = org.springframework.statemachine.data.support.ObjectMapper == null ? org.springframework.statemachine.data.support.ObjectMapper : org.springframework.statemachine.data.support.ObjectMapper ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Resource org.springframework.statemachine.data.support.Resource , java.lang.ClassLoader java.lang.ClassLoader ) throws java.lang.Exception { java.io.InputStream java.io.InputStream = org.springframework.statemachine.data.support.Resource . getInputStream ( ) ; ObjectReader org.springframework.statemachine.data.support.ObjectReader = org.springframework.statemachine.data.support.ObjectMapper . readerFor ( JsonNode .class ) ; JsonNode org.springframework.statemachine.data.support.JsonNode = org.springframework.statemachine.data.support.ObjectReader . readTree ( java.io.InputStream ) ; org.springframework.statemachine.data.support.ObjectReader = org.springframework.statemachine.data.support.ObjectMapper . readerFor ( BaseRepositoryEntity [] .class ) ; if ( org.springframework.statemachine.data.support.JsonNode . isArray ( ) ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( ) ; BaseRepositoryEntity [] org.springframework.statemachine.data.support.BaseRepositoryEntity[] = org.springframework.statemachine.data.support.ObjectReader . readValue ( org.springframework.statemachine.data.support.JsonNode ) ; java.util.List<java.lang.Object> . boolean ( java.util.Arrays . java.util.List ( org.springframework.statemachine.data.support.BaseRepositoryEntity[] ) ) ; return java.util.List<java.lang.Object> ; } return java.lang.Object ( org.springframework.statemachine.data.support.JsonNode , java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( JsonNode org.springframework.statemachine.data.support.JsonNode , java.lang.ClassLoader java.lang.ClassLoader ) throws java.io.IOException { JsonNode org.springframework.statemachine.data.support.JsonNode = org.springframework.statemachine.data.support.JsonNode . findValue ( java.lang.String ) ; java.lang.String java.lang.String = org.springframework.statemachine.data.support.JsonNode == null ? null : org.springframework.statemachine.data.support.JsonNode . asText ( ) ; java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . resolveClassName ( java.lang.String , java.lang.ClassLoader ) ; return org.springframework.statemachine.data.support.ObjectMapper . readerFor ( java.lang.Class<> ) . readValue ( org.springframework.statemachine.data.support.JsonNode ) ; }  <METHOD_END>
