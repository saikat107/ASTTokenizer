<METHOD_START> @ java.lang.Override protected org.springframework.integration.file.config.BeanMetadataElement org.springframework.integration.file.config.BeanMetadataElement ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.file.config.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.file.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( FileReadingMessageSourceFactoryBean .class ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; java.lang.String java.lang.String = this . java.lang.String ( org.w3c.dom.Element , org.springframework.integration.file.config.ParserContext ) ; java.lang.String java.lang.String = java.lang.String ( org.w3c.dom.Element , org.springframework.integration.file.config.ParserContext ) ; if ( java.lang.String != null ) { org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } if ( java.lang.String != null ) { org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } return org.springframework.integration.file.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.file.config.ParserContext ) { java.lang.String java.lang.String = null ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; if ( org.w3c.dom.Element != null ) { BeanDefinitionBuilder org.springframework.integration.file.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( NioFileLocker .class ) ; java.lang.String = BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.integration.file.config.BeanDefinitionBuilder . getBeanDefinition ( ) , org.springframework.integration.file.config.ParserContext . getRegistry ( ) ) ; } else { org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; if ( org.w3c.dom.Element != null ) { java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; } } return java.lang.String ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.file.config.ParserContext ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( ! StringUtils . hasText ( java.lang.String ) && ! StringUtils . hasText ( java.lang.String ) && ! StringUtils . hasText ( java.lang.String ) && ! StringUtils . hasText ( java.lang.String ) && ! StringUtils . hasText ( java.lang.String ) && ! StringUtils . hasText ( java.lang.String ) ) { return null ; } BeanDefinitionBuilder org.springframework.integration.file.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( FileListFilterFactoryBean .class ) ; org.springframework.integration.file.config.BeanDefinitionBuilder . setRole ( BeanDefinition . ROLE_SUPPORT ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.file.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } BeanDefinition org.springframework.integration.file.config.BeanDefinition = BeanDefinitionBuilder . genericBeanDefinition ( ExpressionFileListFilter .class ) . addConstructorArgValue ( java.lang.String ) . getBeanDefinition ( ) ; org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.file.config.BeanDefinition ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.file.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.file.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; return BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.integration.file.config.BeanDefinitionBuilder . getBeanDefinition ( ) , org.springframework.integration.file.config.ParserContext . getRegistry ( ) ) ; }  <METHOD_END>
