<METHOD_START> public void ( TypeHelper org.springframework.context.index.TypeHelper ) { this . org.springframework.context.index.TypeHelper = org.springframework.context.index.TypeHelper ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( javax.lang.model.element.Element javax.lang.model.element.Element ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.LinkedHashSet<java.lang.String> <> ( ) ; javax.lang.model.element.ElementKind javax.lang.model.element.ElementKind = javax.lang.model.element.Element . javax.lang.model.element.ElementKind ( ) ; if ( javax.lang.model.element.ElementKind != javax.lang.model.element.ElementKind . javax.lang.model.element.ElementKind && javax.lang.model.element.ElementKind != javax.lang.model.element.ElementKind . javax.lang.model.element.ElementKind ) { return java.util.Set<java.lang.String> ; } java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.Set<javax.lang.model.element.Element> = new java.util.HashSet<javax.lang.model.element.Element> <> ( ) ; void ( java.util.Set<javax.lang.model.element.Element> , java.util.Set<java.lang.String> , javax.lang.model.element.Element ) ; java.util.Set<javax.lang.model.element.Element> = new java.util.HashSet<javax.lang.model.element.Element> <> ( ) ; void ( java.util.Set<javax.lang.model.element.Element> , java.util.Set<java.lang.String> , javax.lang.model.element.Element ) ; return java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.Set<javax.lang.model.element.Element> , java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> , javax.lang.model.element.Element javax.lang.model.element.Element ) { for ( javax.lang.model.element.AnnotationMirror javax.lang.model.element.AnnotationMirror : this . org.springframework.context.index.TypeHelper . getAllAnnotationMirrors ( javax.lang.model.element.Element ) ) { javax.lang.model.element.Element javax.lang.model.element.Element = javax.lang.model.element.Element ( java.util.Set<javax.lang.model.element.Element> , java.util.Set<java.lang.String> , javax.lang.model.element.Element , javax.lang.model.element.AnnotationMirror ) ; if ( javax.lang.model.element.Element != null ) { void ( java.util.Set<javax.lang.model.element.Element> , java.util.Set<java.lang.String> , javax.lang.model.element.Element ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.Set<javax.lang.model.element.Element> , java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> , javax.lang.model.element.Element javax.lang.model.element.Element ) { if ( ! java.util.Set<javax.lang.model.element.Element> . boolean ( javax.lang.model.element.Element ) ) { java.util.Set<javax.lang.model.element.Element> . boolean ( javax.lang.model.element.Element ) ; if ( boolean ( javax.lang.model.element.Element ) ) { java.util.Set<java.lang.String> . boolean ( this . org.springframework.context.index.TypeHelper . getType ( javax.lang.model.element.Element ) ) ; } javax.lang.model.element.Element javax.lang.model.element.Element = this . org.springframework.context.index.TypeHelper . getSuperClass ( javax.lang.model.element.Element ) ; if ( javax.lang.model.element.Element != null ) { void ( java.util.Set<javax.lang.model.element.Element> , java.util.Set<java.lang.String> , javax.lang.model.element.Element ) ; } this . org.springframework.context.index.TypeHelper . getDirectInterfaces ( javax.lang.model.element.Element ) . forEach ( i -> collectStereotypesOnTypes ( seen , stereotypes , i ) ) ; } }  <METHOD_END>
<METHOD_START> private javax.lang.model.element.Element javax.lang.model.element.Element ( java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.Set<javax.lang.model.element.Element> , java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> , javax.lang.model.element.Element javax.lang.model.element.Element , javax.lang.model.element.AnnotationMirror javax.lang.model.element.AnnotationMirror ) { if ( boolean ( javax.lang.model.element.AnnotationMirror ) ) { java.util.Set<java.lang.String> . boolean ( this . org.springframework.context.index.TypeHelper . getType ( javax.lang.model.element.Element ) ) ; } return javax.lang.model.element.Element ( java.util.Set<javax.lang.model.element.Element> , javax.lang.model.element.AnnotationMirror ) ; }  <METHOD_END>
<METHOD_START> private javax.lang.model.element.Element javax.lang.model.element.Element ( java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.Set<javax.lang.model.element.Element> , javax.lang.model.element.AnnotationMirror javax.lang.model.element.AnnotationMirror ) { javax.lang.model.element.Element javax.lang.model.element.Element = javax.lang.model.element.AnnotationMirror . javax.lang.model.type.DeclaredType ( ) . javax.lang.model.element.Element ( ) ; if ( java.util.Set<javax.lang.model.element.Element> . boolean ( javax.lang.model.element.Element ) ) { return null ; } if ( ! boolean ( javax.lang.model.element.AnnotationMirror ) ) { java.util.Set<javax.lang.model.element.Element> . boolean ( javax.lang.model.element.Element ) ; } return ( ! javax.lang.model.element.Element . java.lang.String ( ) . boolean ( STRING ) ? javax.lang.model.element.Element : null ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( javax.lang.model.element.Element javax.lang.model.element.Element ) { for ( javax.lang.model.element.AnnotationMirror javax.lang.model.element.AnnotationMirror : javax.lang.model.element.Element . java.util.List<? extends javax.lang.model.element.AnnotationMirror> ( ) ) { if ( boolean ( javax.lang.model.element.AnnotationMirror ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( javax.lang.model.element.AnnotationMirror javax.lang.model.element.AnnotationMirror ) { return java.lang.String . boolean ( javax.lang.model.element.AnnotationMirror . javax.lang.model.type.DeclaredType ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
