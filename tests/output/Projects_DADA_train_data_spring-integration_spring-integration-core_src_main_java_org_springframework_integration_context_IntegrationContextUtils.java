<METHOD_START> public static org.springframework.integration.context.MetadataStore org.springframework.integration.context.MetadataStore ( BeanFactory org.springframework.integration.context.BeanFactory ) { return java.lang.Object ( org.springframework.integration.context.BeanFactory , java.lang.String , MetadataStore .class ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.context.MessageChannel org.springframework.integration.context.MessageChannel ( BeanFactory org.springframework.integration.context.BeanFactory ) { return java.lang.Object ( org.springframework.integration.context.BeanFactory , java.lang.String , MessageChannel .class ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.context.TaskScheduler org.springframework.integration.context.TaskScheduler ( BeanFactory org.springframework.integration.context.BeanFactory ) { return java.lang.Object ( org.springframework.integration.context.BeanFactory , java.lang.String , TaskScheduler .class ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.context.TaskScheduler org.springframework.integration.context.TaskScheduler ( BeanFactory org.springframework.integration.context.BeanFactory ) { TaskScheduler org.springframework.integration.context.TaskScheduler = org.springframework.integration.context.TaskScheduler ( org.springframework.integration.context.BeanFactory ) ; Assert . state ( org.springframework.integration.context.TaskScheduler != null , STRING + java.lang.String + STRING ) ; return org.springframework.integration.context.TaskScheduler ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.context.StandardEvaluationContext org.springframework.integration.context.StandardEvaluationContext ( BeanFactory org.springframework.integration.context.BeanFactory ) { return java.lang.Object ( org.springframework.integration.context.BeanFactory , java.lang.String , StandardEvaluationContext .class ) ; }  <METHOD_END>
<METHOD_START> private static < T > T T ( BeanFactory org.springframework.integration.context.BeanFactory , java.lang.String java.lang.String , java.lang.Class<T> < T > java.lang.Class<T> ) { Assert . notNull ( org.springframework.integration.context.BeanFactory , STRING ) ; if ( ! org.springframework.integration.context.BeanFactory . containsBean ( java.lang.String ) ) { return null ; } return org.springframework.integration.context.BeanFactory . getBean ( java.lang.String , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> public static java.util.Properties java.util.Properties ( BeanFactory org.springframework.integration.context.BeanFactory ) { java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . void ( IntegrationProperties . defaults ( ) ) ; if ( org.springframework.integration.context.BeanFactory != null ) { java.util.Properties java.util.Properties = java.lang.Object ( org.springframework.integration.context.BeanFactory , java.lang.String , java.util.Properties .class ) ; if ( java.util.Properties != null ) { java.util.Properties . void ( java.util.Properties ) ; } } return java.util.Properties ; }  <METHOD_END>
