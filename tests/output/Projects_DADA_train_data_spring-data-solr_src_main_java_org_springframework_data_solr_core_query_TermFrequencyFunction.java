<METHOD_START> private void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String ) ); }  <METHOD_END>
<METHOD_START> public static org.springframework.data.solr.core.query.TermFrequencyFunction.Builder org.springframework.data.solr.core.query.TermFrequencyFunction.Builder ( java.lang.String java.lang.String ) { return new org.springframework.data.solr.core.query.TermFrequencyFunction.Builder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.TermFrequencyFunction org.springframework.data.solr.core.query.TermFrequencyFunction ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return new org.springframework.data.solr.core.query.TermFrequencyFunction ( java.lang.String , this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.TermFrequencyFunction org.springframework.data.solr.core.query.TermFrequencyFunction ( Field org.springframework.data.solr.core.query.Field ) { Assert . notNull ( org.springframework.data.solr.core.query.Field , STRING ) ; return org.springframework.data.solr.core.query.TermFrequencyFunction ( org.springframework.data.solr.core.query.Field . getName ( ) ) ; }  <METHOD_END>
