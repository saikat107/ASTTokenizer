<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.String , STRING ) ; if ( java.lang.Object != null ) { this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; } else { java.lang.Object ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return this . java.util.Map<java.lang.String,java.lang.Object> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { return this . java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.lang.String> ( ) . java.lang.String[] ( new java.lang.String [ this . java.util.Map<java.lang.String,java.lang.Object> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> protected void void ( AttributeAccessor org.springframework.core.AttributeAccessor ) { Assert . notNull ( org.springframework.core.AttributeAccessor , STRING ) ; java.lang.String [] java.lang.String[] = org.springframework.core.AttributeAccessor . attributeNames ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { void ( java.lang.String , org.springframework.core.AttributeAccessor . getAttribute ( java.lang.String ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.core.AttributeAccessorSupport ) ) { return false ; } org.springframework.core.AttributeAccessorSupport org.springframework.core.AttributeAccessorSupport = ( org.springframework.core.AttributeAccessorSupport ) java.lang.Object ; return this . java.util.Map<java.lang.String,java.lang.Object> . boolean ( org.springframework.core.AttributeAccessorSupport . java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.Map<java.lang.String,java.lang.Object> . int ( ) ; }  <METHOD_END>
