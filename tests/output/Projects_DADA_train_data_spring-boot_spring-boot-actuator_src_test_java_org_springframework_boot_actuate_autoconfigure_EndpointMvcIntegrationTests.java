<METHOD_START> @ Test public void void ( ) java.lang.InterruptedException { java.lang.String java.lang.String = new TestRestTemplate ( ) . getForObject ( STRING + this . int + STRING , java.lang.String .class ) ; assertThat ( java.lang.String ) . isNotNull ( ) . contains ( STRING ) ; assertThat ( this . org.springframework.boot.actuate.autoconfigure.EndpointMvcIntegrationTests.TestInterceptor . boolean ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.InterruptedException { java.lang.String java.lang.String = new TestRestTemplate ( ) . getForObject ( STRING + this . int + STRING , java.lang.String .class ) ; assertThat ( java.lang.String ) . isNotNull ( ) . contains ( STRING ) ; assertThat ( this . org.springframework.boot.actuate.autoconfigure.EndpointMvcIntegrationTests.TestInterceptor . boolean ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ObjectProvider < java.util.List<org.springframework.boot.actuate.autoconfigure.HttpMessageConverter<?>> < HttpMessageConverter < ? > > > org.springframework.boot.actuate.autoconfigure.ObjectProvider<java.util.List<org.springframework.boot.actuate.autoconfigure.HttpMessageConverter<?>>> ) { this . java.util.List<org.springframework.boot.actuate.autoconfigure.HttpMessageConverter<?>> = org.springframework.boot.actuate.autoconfigure.ObjectProvider<java.util.List<org.springframework.boot.actuate.autoconfigure.HttpMessageConverter<?>>> . getIfAvailable ( ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( STRING ) public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( @ PathVariable java.lang.String java.lang.String , @ PathVariable java.lang.String java.lang.String , @ PathVariable java.lang.String java.lang.String ) { return java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( STRING , ( java.lang.Object ) STRING ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( STRING ) public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( @ PathVariable java.lang.String java.lang.String , @ PathVariable java.lang.String java.lang.String ) { return java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( STRING , ( java.lang.Object ) STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public org.springframework.boot.actuate.autoconfigure.HttpMessageConverters org.springframework.boot.actuate.autoconfigure.HttpMessageConverters ( ) { return new HttpMessageConverters ( this . java.util.List<org.springframework.boot.actuate.autoconfigure.HttpMessageConverter<?>> == null ? java.util.Collections .< HttpMessageConverter < ? > > java.util.List<org.springframework.boot.actuate.autoconfigure.HttpMessageConverter<?>> ( ) : this . java.util.List<org.springframework.boot.actuate.autoconfigure.HttpMessageConverter<?>> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.EndpointHandlerMappingCustomizer org.springframework.boot.actuate.autoconfigure.EndpointHandlerMappingCustomizer ( ) { return new EndpointHandlerMappingCustomizer ( ) { @ java.lang.Override public void void ( EndpointHandlerMapping org.springframework.boot.actuate.autoconfigure.EndpointHandlerMapping ) { org.springframework.boot.actuate.autoconfigure.EndpointHandlerMapping . setInterceptors ( org.springframework.boot.actuate.autoconfigure.EndpointMvcIntegrationTests.TestInterceptor ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( EndpointHandlerMapping org.springframework.boot.actuate.autoconfigure.EndpointHandlerMapping ) { org.springframework.boot.actuate.autoconfigure.EndpointHandlerMapping . setInterceptors ( org.springframework.boot.actuate.autoconfigure.EndpointMvcIntegrationTests.TestInterceptor ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean protected org.springframework.boot.actuate.autoconfigure.EndpointMvcIntegrationTests.TestInterceptor org.springframework.boot.actuate.autoconfigure.EndpointMvcIntegrationTests.TestInterceptor ( ) { return new org.springframework.boot.actuate.autoconfigure.EndpointMvcIntegrationTests.TestInterceptor ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( HttpServletRequest org.springframework.boot.actuate.autoconfigure.HttpServletRequest , HttpServletResponse org.springframework.boot.actuate.autoconfigure.HttpServletResponse , java.lang.Object java.lang.Object , ModelAndView org.springframework.boot.actuate.autoconfigure.ModelAndView ) throws java.lang.Exception { this . java.util.concurrent.CountDownLatch . void ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) java.lang.InterruptedException { return this . java.util.concurrent.CountDownLatch . boolean ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) ; }  <METHOD_END>
