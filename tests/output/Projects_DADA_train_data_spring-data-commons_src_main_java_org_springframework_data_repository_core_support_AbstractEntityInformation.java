<METHOD_START> public void ( java.lang.Class<T> < T > java.lang.Class<T> ) { Assert . notNull ( java.lang.Class<T> , STRING ) ; this . java.lang.Class<T> = java.lang.Class<T> ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( T T ) { java.util.Optional<ID> < ID > java.util.Optional<ID> = getId ( T ) ; java.lang.Class<ID> < ID > java.lang.Class<ID> = getIdType ( ) ; if ( ! java.lang.Class<ID> . boolean ( ) ) { return ! java.util.Optional<ID> . boolean ( ) ; } return java.util.Optional<ID> . java.util.Optional<java.lang.Boolean> ( ID -> { if ( ID instanceof java.lang.Number ) { return ( ( java.lang.Number ) ID ) . long ( ) == NUMBER ; } return null ; } ) . java.lang.Boolean ( ( ) new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , java.lang.Class<ID> ) ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Class<T> < T > java.lang.Class<T> ( ) { return this . java.lang.Class<T> ; }  <METHOD_END>
