<METHOD_START> void ( ) { this( new java.util.HashSet<java.lang.String> < java.lang.String > ( ) , new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ); }  <METHOD_END>
<METHOD_START> private void ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> , java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { super( new TextDescription ( STRING , java.util.Set<java.lang.String> , java.util.Set<java.lang.String> ) ); this . java.util.Set<java.lang.String> = java.util.Set<java.lang.String> ; this . java.util.Set<java.lang.String> = java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.io.File java.io.File ) { try { java.lang.String java.lang.String = FileCopyUtils . copyToString ( new java.io.FileReader ( java.io.File ) ) ; for ( java.lang.String java.lang.String : this . java.util.Set<java.lang.String> ) { if ( ! java.lang.String . boolean ( java.lang.String ) ) { return false ; } } for ( java.lang.String java.lang.String : this . java.util.Set<java.lang.String> ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return false ; } } } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.RuntimeException ( java.io.IOException ) ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.gradle.tasks.bundling.Description org.springframework.boot.gradle.tasks.bundling.Description ( ) { return new TextDescription ( STRING , this . java.util.Set<java.lang.String> , this . java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> org.springframework.boot.gradle.tasks.bundling.PomCondition org.springframework.boot.gradle.tasks.bundling.PomCondition ( java.lang.String java.lang.String ) { this . java.util.Set<java.lang.String> . boolean ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; return this ; }  <METHOD_END>
<METHOD_START> org.springframework.boot.gradle.tasks.bundling.PomCondition org.springframework.boot.gradle.tasks.bundling.PomCondition ( java.lang.String java.lang.String ) { this . java.util.Set<java.lang.String> . boolean ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; return this ; }  <METHOD_END>
<METHOD_START> org.springframework.boot.gradle.tasks.bundling.PomCondition org.springframework.boot.gradle.tasks.bundling.PomCondition ( java.lang.String java.lang.String ) { this . java.util.Set<java.lang.String> . boolean ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; return this ; }  <METHOD_END>
<METHOD_START> org.springframework.boot.gradle.tasks.bundling.PomCondition org.springframework.boot.gradle.tasks.bundling.PomCondition ( java.lang.String java.lang.String ) { this . java.util.Set<java.lang.String> . boolean ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; return this ; }  <METHOD_END>
<METHOD_START> org.springframework.boot.gradle.tasks.bundling.PomCondition org.springframework.boot.gradle.tasks.bundling.PomCondition ( ) { this . java.util.Set<java.lang.String> . boolean ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> org.springframework.boot.gradle.tasks.bundling.PomCondition org.springframework.boot.gradle.tasks.bundling.PomCondition ( ) { this . java.util.Set<java.lang.String> . boolean ( STRING ) ; return this ; }  <METHOD_END>
