<METHOD_START> public void ( CacheManager org.springframework.cache.jcache.interceptor.CacheManager ) { super( org.springframework.cache.jcache.interceptor.CacheManager ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( CacheOperationInvocationContext < ? > org.springframework.cache.jcache.interceptor.CacheOperationInvocationContext<?> ) { BasicOperation org.springframework.cache.jcache.interceptor.BasicOperation = org.springframework.cache.jcache.interceptor.CacheOperationInvocationContext<> . getOperation ( ) ; if ( ! ( org.springframework.cache.jcache.interceptor.BasicOperation instanceof CacheResultOperation ) ) { throw new java.lang.IllegalStateException ( STRING + org.springframework.cache.jcache.interceptor.BasicOperation ) ; } CacheResultOperation org.springframework.cache.jcache.interceptor.CacheResultOperation = ( CacheResultOperation ) org.springframework.cache.jcache.interceptor.BasicOperation ; java.lang.String java.lang.String = org.springframework.cache.jcache.interceptor.CacheResultOperation . getExceptionCacheName ( ) ; if ( java.lang.String != null ) { return java.util.Collections . java.util.Set<java.lang.String> ( java.lang.String ) ; } return null ; }  <METHOD_END>
