<METHOD_START> @ java.lang.Override public org.springframework.aop.framework.AopProxy org.springframework.aop.framework.AopProxy ( AdvisedSupport org.springframework.aop.framework.AdvisedSupport ) throws org.springframework.aop.framework.AopConfigException { if ( org.springframework.aop.framework.AdvisedSupport . isOptimize ( ) || org.springframework.aop.framework.AdvisedSupport . isProxyTargetClass ( ) || boolean ( org.springframework.aop.framework.AdvisedSupport ) ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.aop.framework.AdvisedSupport . getTargetClass ( ) ; if ( java.lang.Class<> == null ) { throw new AopConfigException ( STRING + STRING ) ; } if ( java.lang.Class<> . boolean ( ) || java.lang.reflect.Proxy . boolean ( java.lang.Class<> ) ) { return new JdkDynamicAopProxy ( org.springframework.aop.framework.AdvisedSupport ) ; } return new ObjenesisCglibAopProxy ( org.springframework.aop.framework.AdvisedSupport ) ; } else { return new JdkDynamicAopProxy ( org.springframework.aop.framework.AdvisedSupport ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( AdvisedSupport org.springframework.aop.framework.AdvisedSupport ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.aop.framework.AdvisedSupport . getProxiedInterfaces ( ) ; return ( java.lang.Class<?>[] . int == NUMBER || ( java.lang.Class<?>[] . int == NUMBER && SpringProxy .class . boolean ( java.lang.Class<?>[] [ NUMBER ] ) ) ) ; }  <METHOD_END>
