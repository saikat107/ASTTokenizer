<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; PropertiesEditor org.springframework.beans.propertyeditors.PropertiesEditor = new PropertiesEditor ( ) ; org.springframework.beans.propertyeditors.PropertiesEditor . setAsText ( java.lang.String ) ; java.util.Properties java.util.Properties = ( java.util.Properties ) org.springframework.beans.propertyeditors.PropertiesEditor . getValue ( ) ; assertTrue ( STRING , java.util.Properties . java.util.Set<java.util.Map.Entry<java.lang.Object,java.lang.Object>> ( ) . int ( ) == NUMBER ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING + STRING ; PropertiesEditor org.springframework.beans.propertyeditors.PropertiesEditor = new PropertiesEditor ( ) ; org.springframework.beans.propertyeditors.PropertiesEditor . setAsText ( java.lang.String ) ; java.util.Properties java.util.Properties = ( java.util.Properties ) org.springframework.beans.propertyeditors.PropertiesEditor . getValue ( ) ; assertTrue ( STRING , java.util.Properties . java.util.Set<java.util.Map.Entry<java.lang.Object,java.lang.Object>> ( ) . int ( ) == NUMBER ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING + STRING + STRING ; PropertiesEditor org.springframework.beans.propertyeditors.PropertiesEditor = new PropertiesEditor ( ) ; org.springframework.beans.propertyeditors.PropertiesEditor . setAsText ( java.lang.String ) ; java.util.Properties java.util.Properties = ( java.util.Properties ) org.springframework.beans.propertyeditors.PropertiesEditor . getValue ( ) ; assertTrue ( STRING , java.util.Properties . java.util.Set<java.util.Map.Entry<java.lang.Object,java.lang.Object>> ( ) . int ( ) == NUMBER ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; PropertiesEditor org.springframework.beans.propertyeditors.PropertiesEditor = new PropertiesEditor ( ) ; org.springframework.beans.propertyeditors.PropertiesEditor . setAsText ( java.lang.String ) ; java.util.Properties java.util.Properties = ( java.util.Properties ) org.springframework.beans.propertyeditors.PropertiesEditor . getValue ( ) ; assertTrue ( STRING , java.util.Properties . java.util.Set<java.util.Map.Entry<java.lang.Object,java.lang.Object>> ( ) . int ( ) == NUMBER ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; PropertiesEditor org.springframework.beans.propertyeditors.PropertiesEditor = new PropertiesEditor ( ) ; org.springframework.beans.propertyeditors.PropertiesEditor . setAsText ( java.lang.String ) ; java.util.Properties java.util.Properties = ( java.util.Properties ) org.springframework.beans.propertyeditors.PropertiesEditor . getValue ( ) ; assertTrue ( STRING , java.util.Properties . java.util.Set<java.util.Map.Entry<java.lang.Object,java.lang.Object>> ( ) . int ( ) == NUMBER ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING + STRING + STRING + STRING + STRING + STRING ; PropertiesEditor org.springframework.beans.propertyeditors.PropertiesEditor = new PropertiesEditor ( ) ; org.springframework.beans.propertyeditors.PropertiesEditor . setAsText ( java.lang.String ) ; java.util.Properties java.util.Properties = ( java.util.Properties ) org.springframework.beans.propertyeditors.PropertiesEditor . getValue ( ) ; assertTrue ( STRING , java.util.Properties . java.util.Set<java.util.Map.Entry<java.lang.Object,java.lang.Object>> ( ) . int ( ) == NUMBER ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING + STRING + STRING + STRING + STRING + STRING ; PropertiesEditor org.springframework.beans.propertyeditors.PropertiesEditor = new PropertiesEditor ( ) ; org.springframework.beans.propertyeditors.PropertiesEditor . setAsText ( java.lang.String ) ; java.util.Properties java.util.Properties = ( java.util.Properties ) org.springframework.beans.propertyeditors.PropertiesEditor . getValue ( ) ; assertTrue ( STRING + java.util.Properties . int ( ) , java.util.Properties . int ( ) == NUMBER ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; assertTrue ( STRING , java.util.Properties . java.lang.Object ( STRING ) . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { PropertiesEditor org.springframework.beans.propertyeditors.PropertiesEditor = new PropertiesEditor ( ) ; org.springframework.beans.propertyeditors.PropertiesEditor . setAsText ( null ) ; java.util.Properties java.util.Properties = ( java.util.Properties ) org.springframework.beans.propertyeditors.PropertiesEditor . getValue ( ) ; assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { PropertiesEditor org.springframework.beans.propertyeditors.PropertiesEditor = new PropertiesEditor ( ) ; org.springframework.beans.propertyeditors.PropertiesEditor . setAsText ( STRING ) ; java.util.Properties java.util.Properties = ( java.util.Properties ) org.springframework.beans.propertyeditors.PropertiesEditor . getValue ( ) ; assertTrue ( STRING , java.util.Properties . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; PropertiesEditor org.springframework.beans.propertyeditors.PropertiesEditor = new PropertiesEditor ( ) ; org.springframework.beans.propertyeditors.PropertiesEditor . setValue ( java.util.Map<java.lang.String,java.lang.String> ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.PropertiesEditor . getValue ( ) ; assertNotNull ( java.lang.Object ) ; assertTrue ( java.lang.Object instanceof java.util.Properties ) ; java.util.Properties java.util.Properties = ( java.util.Properties ) java.lang.Object ; assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; }  <METHOD_END>
