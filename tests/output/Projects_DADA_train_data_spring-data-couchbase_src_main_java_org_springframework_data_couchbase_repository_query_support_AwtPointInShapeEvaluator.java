<METHOD_START> @ java.lang.Override public boolean boolean ( Point org.springframework.data.couchbase.repository.query.support.Point , Polygon org.springframework.data.couchbase.repository.query.support.Polygon ) { final java.util.List<org.springframework.data.couchbase.repository.query.support.Point> < Point > java.util.List<org.springframework.data.couchbase.repository.query.support.Point> = org.springframework.data.couchbase.repository.query.support.Polygon . getPoints ( ) ; java.awt.geom.Path2D java.awt.geom.Path2D = new java.awt.geom.Path2D . java.awt.geom.Path2D.Double ( java.awt.geom.Path2D . int , java.util.List<org.springframework.data.couchbase.repository.query.support.Point> . size ( ) ) ; boolean boolean = true ; for ( Point org.springframework.data.couchbase.repository.query.support.Point : java.util.List<org.springframework.data.couchbase.repository.query.support.Point> ) { if ( boolean ) { boolean = false ; java.awt.geom.Path2D . void ( org.springframework.data.couchbase.repository.query.support.Point . getX ( ) , org.springframework.data.couchbase.repository.query.support.Point . getY ( ) ) ; } else { java.awt.geom.Path2D . void ( org.springframework.data.couchbase.repository.query.support.Point . getX ( ) , org.springframework.data.couchbase.repository.query.support.Point . getY ( ) ) ; } } java.awt.geom.Path2D . void ( ) ; return boolean ( org.springframework.data.couchbase.repository.query.support.Point , java.awt.geom.Path2D ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Point org.springframework.data.couchbase.repository.query.support.Point , Point ... org.springframework.data.couchbase.repository.query.support.Point[] ) { if ( org.springframework.data.couchbase.repository.query.support.Point[] == null ) throw new java.lang.NullPointerException ( STRING ) ; if ( points . length < NUMBER ) throw new java.lang.IllegalArgumentException ( STRING ) ; java.awt.geom.Path2D java.awt.geom.Path2D = new java.awt.geom.Path2D . java.awt.geom.Path2D.Double ( java.awt.geom.Path2D . int , points . length ) ; boolean boolean = true ; for ( Point org.springframework.data.couchbase.repository.query.support.Point : org.springframework.data.couchbase.repository.query.support.Point[] ) { if ( boolean ) { boolean = false ; java.awt.geom.Path2D . void ( org.springframework.data.couchbase.repository.query.support.Point . getX ( ) , org.springframework.data.couchbase.repository.query.support.Point . getY ( ) ) ; } else { java.awt.geom.Path2D . void ( org.springframework.data.couchbase.repository.query.support.Point . getX ( ) , org.springframework.data.couchbase.repository.query.support.Point . getY ( ) ) ; } } java.awt.geom.Path2D . void ( ) ; return boolean ( org.springframework.data.couchbase.repository.query.support.Point , java.awt.geom.Path2D ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Point org.springframework.data.couchbase.repository.query.support.Point , Circle org.springframework.data.couchbase.repository.query.support.Circle ) { java.awt.geom.Point2D java.awt.geom.Point2D = new java.awt.geom.Point2D . java.awt.geom.Point2D.Double ( org.springframework.data.couchbase.repository.query.support.Circle . getCenter ( ) . getX ( ) , org.springframework.data.couchbase.repository.query.support.Circle . getCenter ( ) . getY ( ) ) ; return boolean ( org.springframework.data.couchbase.repository.query.support.Point , java.awt.geom.Point2D , org.springframework.data.couchbase.repository.query.support.Circle . getRadius ( ) . getNormalizedValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Point org.springframework.data.couchbase.repository.query.support.Point , Point org.springframework.data.couchbase.repository.query.support.Point , Distance org.springframework.data.couchbase.repository.query.support.Distance ) { double double = org.springframework.data.couchbase.repository.query.support.Distance . getNormalizedValue ( ) ; return boolean ( org.springframework.data.couchbase.repository.query.support.Point , new java.awt.geom.Point2D . java.awt.geom.Point2D.Double ( org.springframework.data.couchbase.repository.query.support.Point . getX ( ) , org.springframework.data.couchbase.repository.query.support.Point . getY ( ) ) , double ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( Point org.springframework.data.couchbase.repository.query.support.Point , java.awt.geom.Path2D java.awt.geom.Path2D ) { return java.awt.geom.Path2D . boolean ( org.springframework.data.couchbase.repository.query.support.Point . getX ( ) , org.springframework.data.couchbase.repository.query.support.Point . getY ( ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( Point org.springframework.data.couchbase.repository.query.support.Point , java.awt.geom.Point2D java.awt.geom.Point2D , double double ) { return java.awt.geom.Point2D . double ( org.springframework.data.couchbase.repository.query.support.Point . getX ( ) , org.springframework.data.couchbase.repository.query.support.Point . getY ( ) ) <= double ; }  <METHOD_END>
