<METHOD_START> @ BeforeClass public static void void ( ) java.lang.Exception { org.springframework.web.bind.support.Server = new Server ( NUMBER ) ; ServletContextHandler org.springframework.web.bind.support.ServletContextHandler = new ServletContextHandler ( ) ; MultipartConfigElement org.springframework.web.bind.support.MultipartConfigElement = new MultipartConfigElement ( STRING ) ; ServletHolder org.springframework.web.bind.support.ServletHolder = new ServletHolder ( org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartsServlet ) ; org.springframework.web.bind.support.ServletHolder . getRegistration ( ) . setMultipartConfig ( org.springframework.web.bind.support.MultipartConfigElement ) ; org.springframework.web.bind.support.ServletContextHandler . addServlet ( org.springframework.web.bind.support.ServletHolder , STRING ) ; org.springframework.web.bind.support.ServletHolder = new ServletHolder ( org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartListServlet ) ; org.springframework.web.bind.support.ServletHolder . getRegistration ( ) . setMultipartConfig ( org.springframework.web.bind.support.MultipartConfigElement ) ; org.springframework.web.bind.support.ServletContextHandler . addServlet ( org.springframework.web.bind.support.ServletHolder , STRING ) ; org.springframework.web.bind.support.Server . setHandler ( org.springframework.web.bind.support.ServletContextHandler ) ; org.springframework.web.bind.support.Server . start ( ) ; Connector [] org.springframework.web.bind.support.Connector[] = org.springframework.web.bind.support.Server . getConnectors ( ) ; NetworkConnector org.springframework.web.bind.support.NetworkConnector = ( NetworkConnector ) org.springframework.web.bind.support.Connector[] [ NUMBER ] ; java.lang.String = STRING + org.springframework.web.bind.support.NetworkConnector . getLocalPort ( ) ; }  <METHOD_END>
<METHOD_START> @ AfterClass public static void void ( ) java.lang.Exception { if ( org.springframework.web.bind.support.Server != null ) { org.springframework.web.bind.support.Server . stop ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartsBean org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartsBean = new org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartsBean ( ) ; org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartsServlet . void ( org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartsBean ) ; MultiValueMap < java.lang.String , java.lang.Object > org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.Object> = new LinkedMultiValueMap <> ( ) ; Resource org.springframework.web.bind.support.Resource = new ClassPathResource ( STRING ) ; org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.Object> . add ( STRING , org.springframework.web.bind.support.Resource ) ; org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.Object> . add ( STRING , STRING ) ; org.springframework.web.bind.support.RestTemplate . postForLocation ( java.lang.String + STRING , org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.Object> ) ; assertNotNull ( org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartsBean . org.springframework.web.bind.support.Part ( ) ) ; assertNotNull ( org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartsBean . org.springframework.web.bind.support.Part ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartListBean org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartListBean = new org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartListBean ( ) ; org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartListServlet . void ( org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartListBean ) ; MultiValueMap < java.lang.String , java.lang.Object > org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.Object> = new LinkedMultiValueMap <> ( ) ; org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.Object> . add ( STRING , STRING ) ; org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.Object> . add ( STRING , STRING ) ; Resource org.springframework.web.bind.support.Resource = new ClassPathResource ( STRING ) ; org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.Object> . add ( STRING , org.springframework.web.bind.support.Resource ) ; org.springframework.web.bind.support.RestTemplate . postForLocation ( java.lang.String + STRING , org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.Object> ) ; assertNotNull ( org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartListBean . java.util.List<org.springframework.web.bind.support.Part> ( ) ) ; assertEquals ( org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.Object> . get ( STRING ) . size ( ) , org.springframework.web.bind.support.WebRequestDataBinderIntegrationTests.PartListBean . java.util.List<org.springframework.web.bind.support.Part> ( ) . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( HttpServletRequest org.springframework.web.bind.support.HttpServletRequest , HttpServletResponse org.springframework.web.bind.support.HttpServletResponse ) { WebRequestDataBinder org.springframework.web.bind.support.WebRequestDataBinder = new WebRequestDataBinder ( T ) ; ServletWebRequest org.springframework.web.bind.support.ServletWebRequest = new ServletWebRequest ( org.springframework.web.bind.support.HttpServletRequest , org.springframework.web.bind.support.HttpServletResponse ) ; org.springframework.web.bind.support.WebRequestDataBinder . bind ( org.springframework.web.bind.support.ServletWebRequest ) ; org.springframework.web.bind.support.HttpServletResponse . setStatus ( HttpServletResponse . SC_OK ) ; }  <METHOD_END>
<METHOD_START> public void void ( T T ) { this . T = T ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.bind.support.Part org.springframework.web.bind.support.Part ( ) { return org.springframework.web.bind.support.Part ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( Part org.springframework.web.bind.support.Part ) { this . org.springframework.web.bind.support.Part = org.springframework.web.bind.support.Part ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.bind.support.Part org.springframework.web.bind.support.Part ( ) { return org.springframework.web.bind.support.Part ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( Part org.springframework.web.bind.support.Part ) { this . org.springframework.web.bind.support.Part = org.springframework.web.bind.support.Part ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.web.bind.support.Part> < Part > java.util.List<org.springframework.web.bind.support.Part> ( ) { return java.util.List<org.springframework.web.bind.support.Part> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( java.util.List<org.springframework.web.bind.support.Part> < Part > java.util.List<org.springframework.web.bind.support.Part> ) { this . java.util.List<org.springframework.web.bind.support.Part> = java.util.List<org.springframework.web.bind.support.Part> ; }  <METHOD_END>
