<METHOD_START> @ Bean org.springframework.data.jpa.domain.support.LocalContainerEntityManagerFactoryBean org.springframework.data.jpa.domain.support.LocalContainerEntityManagerFactoryBean ( ) { AbstractJpaVendorAdapter org.springframework.data.jpa.domain.support.AbstractJpaVendorAdapter = new HibernateJpaVendorAdapter ( ) ; org.springframework.data.jpa.domain.support.AbstractJpaVendorAdapter . setDatabase ( Database . HSQL ) ; org.springframework.data.jpa.domain.support.AbstractJpaVendorAdapter . setGenerateDdl ( true ) ; LocalContainerEntityManagerFactoryBean org.springframework.data.jpa.domain.support.LocalContainerEntityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean ( ) ; org.springframework.data.jpa.domain.support.LocalContainerEntityManagerFactoryBean . setDataSource ( javax.sql.DataSource ( ) ) ; org.springframework.data.jpa.domain.support.LocalContainerEntityManagerFactoryBean . setPackagesToScan ( java.lang.String ( ) , User .class . java.lang.Package ( ) . java.lang.String ( ) ) ; org.springframework.data.jpa.domain.support.LocalContainerEntityManagerFactoryBean . setJpaVendorAdapter ( org.springframework.data.jpa.domain.support.AbstractJpaVendorAdapter ) ; return org.springframework.data.jpa.domain.support.LocalContainerEntityManagerFactoryBean ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.data.jpa.domain.support.PlatformTransactionManager org.springframework.data.jpa.domain.support.PlatformTransactionManager ( ) { return new JpaTransactionManager ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean javax.sql.DataSource javax.sql.DataSource ( ) { return new EmbeddedDatabaseBuilder ( ) . setType ( EmbeddedDatabaseType . HSQL ) . build ( ) ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.String java.lang.String ( )  <METHOD_END>
