<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.context.support.StaticApplicationContext ) . getPropertyValue ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( DefaultLifecycleProcessor .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { BeanDefinition org.springframework.context.support.BeanDefinition = new RootBeanDefinition ( DefaultLifecycleProcessor .class ) ; org.springframework.context.support.BeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , NUMBER ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . registerBeanDefinition ( STRING , org.springframework.context.support.BeanDefinition ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; LifecycleProcessor org.springframework.context.support.LifecycleProcessor = org.springframework.context.support.StaticApplicationContext . getBean ( STRING , LifecycleProcessor .class ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.context.support.StaticApplicationContext ) . getPropertyValue ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertSame ( org.springframework.context.support.LifecycleProcessor , java.lang.Object ) ; assertEquals ( NUMBER , new DirectFieldAccessor ( java.lang.Object ) . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . void ( true ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; RootBeanDefinition org.springframework.context.support.RootBeanDefinition = new RootBeanDefinition ( org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleBean .class ) ; org.springframework.context.support.RootBeanDefinition . setLazyInit ( true ) ; org.springframework.context.support.StaticApplicationContext . registerBeanDefinition ( STRING , org.springframework.context.support.RootBeanDefinition ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleBean = org.springframework.context.support.StaticApplicationContext . getBean ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleBean .class ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleBean . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; RootBeanDefinition org.springframework.context.support.RootBeanDefinition = new RootBeanDefinition ( org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleFactoryBean .class ) ; org.springframework.context.support.RootBeanDefinition . setLazyInit ( true ) ; org.springframework.context.support.StaticApplicationContext . registerBeanDefinition ( STRING , org.springframework.context.support.RootBeanDefinition ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleFactoryBean org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleFactoryBean = org.springframework.context.support.StaticApplicationContext . getBean ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleFactoryBean .class ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleFactoryBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleFactoryBean . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . void ( false ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; org.springframework.context.support.StaticApplicationContext . start ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . void ( true ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . void ( false ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerDependentBean ( STRING , STRING ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( - NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( - NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; org.springframework.context.support.StaticApplicationContext . start ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( - NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( - NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . start ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( - NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Assume . group ( TestGroup . PERFORMANCE ) ; java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Assume . group ( TestGroup . PERFORMANCE ) ; java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertEquals ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; Lifecycle org.springframework.context.support.Lifecycle = new org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( null , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.Lifecycle ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertFalse ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; org.springframework.context.support.Lifecycle . start ( ) ; assertTrue ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertFalse ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertEquals ( org.springframework.context.support.Lifecycle , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; Lifecycle org.springframework.context.support.Lifecycle = org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; Lifecycle org.springframework.context.support.Lifecycle = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; Lifecycle org.springframework.context.support.Lifecycle = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; Lifecycle org.springframework.context.support.Lifecycle = org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; Lifecycle org.springframework.context.support.Lifecycle = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; Lifecycle org.springframework.context.support.Lifecycle = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( - NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; Lifecycle org.springframework.context.support.Lifecycle = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.Lifecycle ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.Lifecycle ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.Lifecycle ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.Lifecycle ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.Lifecycle ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.Lifecycle ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.Lifecycle ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertTrue ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertTrue ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertTrue ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertTrue ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertFalse ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertFalse ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; org.springframework.context.support.Lifecycle . start ( ) ; org.springframework.context.support.Lifecycle . start ( ) ; assertTrue ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertTrue ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertFalse ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertFalse ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertFalse ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertFalse ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertFalse ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertFalse ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertFalse ( org.springframework.context.support.Lifecycle . isRunning ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( - NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerDependentBean ( STRING , STRING ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Assume . group ( TestGroup . PERFORMANCE ) ; java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerDependentBean ( STRING , STRING ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( - NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerDependentBean ( STRING , STRING ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . clear ( ) ; org.springframework.context.support.StaticApplicationContext . start ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( - NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Assume . group ( TestGroup . PERFORMANCE ) ; java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( - NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerDependentBean ( STRING , STRING ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( - NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerDependentBean ( STRING , STRING ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Assume . group ( TestGroup . PERFORMANCE ) ; java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = new java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> <> ( ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( NUMBER , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean = org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( java.lang.Integer . int , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; StaticApplicationContext org.springframework.context.support.StaticApplicationContext = new StaticApplicationContext ( ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ) ; org.springframework.context.support.StaticApplicationContext . getBeanFactory ( ) . registerDependentBean ( STRING , STRING ) ; org.springframework.context.support.StaticApplicationContext . refresh ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . void ( ) ; assertTrue ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; org.springframework.context.support.StaticApplicationContext . stop ( ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean . boolean ( ) ) ; assertFalse ( org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean . boolean ( ) ) ; assertEquals ( NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . size ( ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( NUMBER , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; assertEquals ( java.lang.Integer . int , int ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . get ( NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> private static int int ( Lifecycle org.springframework.context.support.Lifecycle ) { return ( org.springframework.context.support.Lifecycle instanceof SmartLifecycle ) ? ( ( SmartLifecycle ) org.springframework.context.support.Lifecycle ) . getPhase ( ) : NUMBER ; }  <METHOD_END>
<METHOD_START> static org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) { return new org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> , null ) ; }  <METHOD_END>
<METHOD_START> static org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) { return new org.springframework.context.support.DefaultLifecycleProcessorTests.TestLifecycleBean ( null , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) { this . java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ; this . java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> = java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> != null ) { this . java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . add ( this ) ; } this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> != null ) { this . java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> . add ( this ) ; } this . boolean = false ; }  <METHOD_END>
<METHOD_START> static org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( int int , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) { return new org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( int , NUMBER , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> , null ) ; }  <METHOD_END>
<METHOD_START> static org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( int int , int int , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) { return new org.springframework.context.support.DefaultLifecycleProcessorTests.TestSmartLifecycleBean ( int , int , null , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) ; }  <METHOD_END>
<METHOD_START> private void ( int int , int int , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> < Lifecycle > java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ) { super( java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> , java.util.concurrent.CopyOnWriteArrayList<org.springframework.context.support.Lifecycle> ); this . int = int ; this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Runnable java.lang.Runnable ) { void ( ) ; final int int = this . int ; new java.lang.Thread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { try { java.lang.Thread . void ( int ) ; } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { } finally { java.lang.Runnable . void ( ) ; } } } ) . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { try { java.lang.Thread . void ( int ) ; } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { } finally { java.lang.Runnable . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Runnable java.lang.Runnable ) { this . boolean = false ; java.lang.Runnable . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . boolean = false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) java.lang.Exception { return this . org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleBean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.context.support.DefaultLifecycleProcessorTests.DummySmartLifecycleBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Runnable java.lang.Runnable ) { this . boolean = false ; java.lang.Runnable . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . boolean = false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
