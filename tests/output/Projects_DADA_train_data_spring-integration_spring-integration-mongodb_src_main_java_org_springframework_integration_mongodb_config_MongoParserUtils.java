<METHOD_START> private void ( ) { super(); }  <METHOD_END>
<METHOD_START> public static void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.mongodb.config.ParserContext , BeanDefinitionBuilder org.springframework.integration.mongodb.config.BeanDefinitionBuilder ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) && StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.mongodb.config.ParserContext . getReaderContext ( ) . error ( STRING + java.lang.String + STRING + java.lang.String + STRING , org.w3c.dom.Element ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.mongodb.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; if ( StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ) { org.springframework.integration.mongodb.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } } else { if ( ! StringUtils . hasText ( java.lang.String ) ) { java.lang.String = STRING ; } org.springframework.integration.mongodb.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.mongodb.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; } BeanDefinition org.springframework.integration.mongodb.config.BeanDefinition = IntegrationNamespaceUtils . createExpressionDefinitionFromValueOrExpression ( STRING , STRING , org.springframework.integration.mongodb.config.ParserContext , org.w3c.dom.Element , false ) ; if ( org.springframework.integration.mongodb.config.BeanDefinition != null ) { org.springframework.integration.mongodb.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.mongodb.config.BeanDefinition ) ; } }  <METHOD_END>
