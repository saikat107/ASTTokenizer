<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.web.servlet.mvc.method.annotation.MethodParameter . getParameterType ( ) ; return ( void .class == java.lang.Class<> || java.lang.CharSequence .class . boolean ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , ModelAndViewContainer org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , NativeWebRequest org.springframework.web.servlet.mvc.method.annotation.NativeWebRequest ) throws java.lang.Exception { if ( java.lang.Object instanceof java.lang.CharSequence ) { java.lang.String java.lang.String = java.lang.Object . java.lang.String ( ) ; org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer . setViewName ( java.lang.String ) ; if ( boolean ( java.lang.String ) ) { org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer . setRedirectModelScenario ( true ) ; } } else if ( java.lang.Object != null ) { throw new java.lang.UnsupportedOperationException ( STRING + org.springframework.web.servlet.mvc.method.annotation.MethodParameter . getParameterType ( ) . getName ( ) + STRING + org.springframework.web.servlet.mvc.method.annotation.MethodParameter . getMethod ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.String java.lang.String ) { return ( PatternMatchUtils . simpleMatch ( this . java.lang.String[] , java.lang.String ) || java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
