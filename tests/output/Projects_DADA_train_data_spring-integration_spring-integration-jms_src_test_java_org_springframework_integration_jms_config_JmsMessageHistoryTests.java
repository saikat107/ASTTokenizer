<METHOD_START> @ Test public void void ( ) java.lang.Exception { ActiveMqTestUtils . prepare ( ) ; ConfigurableApplicationContext org.springframework.integration.jms.config.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( STRING , org.springframework.integration.jms.config.JmsMessageHistoryTests .class ) ; org.springframework.integration.jms.config.JmsMessageHistoryTests.SampleGateway org.springframework.integration.jms.config.JmsMessageHistoryTests.SampleGateway = org.springframework.integration.jms.config.ConfigurableApplicationContext . getBean ( STRING , org.springframework.integration.jms.config.JmsMessageHistoryTests.SampleGateway .class ) ; PollableChannel org.springframework.integration.jms.config.PollableChannel = org.springframework.integration.jms.config.ConfigurableApplicationContext . getBean ( STRING , PollableChannel .class ) ; org.springframework.integration.jms.config.JmsMessageHistoryTests.SampleGateway . void ( STRING ) ; Message < ? > org.springframework.integration.jms.config.Message<?> = org.springframework.integration.jms.config.PollableChannel . receive ( NUMBER ) ; java.util.Iterator<java.util.Properties> < java.util.Properties > java.util.Iterator<java.util.Properties> = org.springframework.integration.jms.config.Message<> . getHeaders ( ) . get ( MessageHistory . HEADER_NAME , MessageHistory .class ) . iterator ( ) ; java.util.Properties java.util.Properties = java.util.Iterator<java.util.Properties> . java.util.Properties ( ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( MessageHistory . TYPE_PROPERTY ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( MessageHistory . NAME_PROPERTY ) ) ; java.util.Properties java.util.Properties = java.util.Iterator<java.util.Properties> . java.util.Properties ( ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( MessageHistory . TYPE_PROPERTY ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( MessageHistory . NAME_PROPERTY ) ) ; org.springframework.integration.jms.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.integration.jms.config.Message<?> < ? > org.springframework.integration.jms.config.Message<?> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> public org.springframework.integration.jms.config.Message<?> < ? > org.springframework.integration.jms.config.Message<?> ( java.lang.String java.lang.String ) { return new GenericMessage < java.lang.String > ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( MessageHeaders org.springframework.integration.jms.config.MessageHeaders , javax . javax.jms . javax.jms javax.jms.Message ) { super. fromHeaders ( org.springframework.integration.jms.config.MessageHeaders , javax.jms.Message ) ; java.lang.String java.lang.String = org.springframework.integration.jms.config.MessageHeaders . get ( MessageHistory . HEADER_NAME , MessageHistory .class ) . toString ( ) ; try { javax.jms.Message . setStringProperty ( STRING , java.lang.String ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new MessagingException ( STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( javax . javax.jms . javax.jms javax.jms.Message ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = super. toHeaders ( javax.jms.Message ) ; java.util.List<java.util.Properties> < java.util.Properties > java.util.List<java.util.Properties> = new java.util.ArrayList<java.util.Properties> < java.util.Properties > ( ) ; java.lang.String java.lang.String = ( java.lang.String ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer ( java.lang.String , STRING ) ; while ( java.util.StringTokenizer . boolean ( ) ) { java.lang.String java.lang.String = java.util.StringTokenizer . java.lang.String ( ) ; java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer ( java.lang.String , STRING ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; while ( java.util.StringTokenizer . boolean ( ) ) { java.lang.String java.lang.String = java.util.StringTokenizer . java.lang.String ( ) ; java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; java.util.Properties . java.lang.Object ( java.lang.String[] [ NUMBER ] , java.lang.String[] [ NUMBER ] ) ; } java.util.List<java.util.Properties> . boolean ( java.util.Properties ) ; } java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( MessageHistory . HEADER_NAME , java.util.List<java.util.Properties> ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
