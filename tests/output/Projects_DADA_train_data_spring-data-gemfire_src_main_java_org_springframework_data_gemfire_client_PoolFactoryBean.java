<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( ! StringUtils . hasText ( java.lang.String ) ) { Assert . hasText ( java.lang.String , STRING ) ; java.lang.String = java.lang.String ; } Pool org.springframework.data.gemfire.client.Pool = PoolManager . find ( java.lang.String ) ; if ( org.springframework.data.gemfire.client.Pool != null ) { if ( org.springframework.data.gemfire.client.Log . isDebugEnabled ( ) ) { org.springframework.data.gemfire.client.Log . debug ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; } boolean = false ; org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.Pool ; } else { if ( org.springframework.data.gemfire.client.Log . isDebugEnabled ( ) ) { org.springframework.data.gemfire.client.Log . debug ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; } boolean = true ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( boolean && org.springframework.data.gemfire.client.Pool != null && ! org.springframework.data.gemfire.client.Pool . isDestroyed ( ) ) { org.springframework.data.gemfire.client.Pool . releaseThreadLocalConnection ( ) ; org.springframework.data.gemfire.client.Pool . destroy ( boolean ) ; org.springframework.data.gemfire.client.Pool = null ; if ( org.springframework.data.gemfire.client.Log . isDebugEnabled ( ) ) { org.springframework.data.gemfire.client.Log . debug ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.client.Pool org.springframework.data.gemfire.client.Pool ( ) java.lang.Exception { if ( org.springframework.data.gemfire.client.Pool == null ) { void ( ) ; PoolFactory org.springframework.data.gemfire.client.PoolFactory = org.springframework.data.gemfire.client.PoolFactory ( ) ; org.springframework.data.gemfire.client.PoolFactory . setFreeConnectionTimeout ( int ) ; org.springframework.data.gemfire.client.PoolFactory . setIdleTimeout ( long ) ; org.springframework.data.gemfire.client.PoolFactory . setLoadConditioningInterval ( int ) ; org.springframework.data.gemfire.client.PoolFactory . setMaxConnections ( int ) ; org.springframework.data.gemfire.client.PoolFactory . setMinConnections ( int ) ; org.springframework.data.gemfire.client.PoolFactory . setMultiuserAuthentication ( boolean ) ; org.springframework.data.gemfire.client.PoolFactory . setPingInterval ( long ) ; org.springframework.data.gemfire.client.PoolFactory . setPRSingleHopEnabled ( boolean ) ; org.springframework.data.gemfire.client.PoolFactory . setReadTimeout ( int ) ; org.springframework.data.gemfire.client.PoolFactory . setRetryAttempts ( int ) ; org.springframework.data.gemfire.client.PoolFactory . setServerGroup ( java.lang.String ) ; org.springframework.data.gemfire.client.PoolFactory . setSocketBufferSize ( int ) ; org.springframework.data.gemfire.client.PoolFactory . setStatisticInterval ( int ) ; org.springframework.data.gemfire.client.PoolFactory . setSubscriptionAckInterval ( int ) ; org.springframework.data.gemfire.client.PoolFactory . setSubscriptionEnabled ( boolean ) ; org.springframework.data.gemfire.client.PoolFactory . setSubscriptionMessageTrackingTimeout ( int ) ; org.springframework.data.gemfire.client.PoolFactory . setSubscriptionRedundancy ( int ) ; org.springframework.data.gemfire.client.PoolFactory . setThreadLocalConnections ( boolean ) ; for ( ConnectionEndpoint org.springframework.data.gemfire.client.ConnectionEndpoint : org.springframework.data.gemfire.client.ConnectionEndpointList ) { org.springframework.data.gemfire.client.PoolFactory . addLocator ( org.springframework.data.gemfire.client.ConnectionEndpoint . getHost ( ) , org.springframework.data.gemfire.client.ConnectionEndpoint . getPort ( ) ) ; } for ( ConnectionEndpoint org.springframework.data.gemfire.client.ConnectionEndpoint : org.springframework.data.gemfire.client.ConnectionEndpointList ) { org.springframework.data.gemfire.client.PoolFactory . addServer ( org.springframework.data.gemfire.client.ConnectionEndpoint . getHost ( ) , org.springframework.data.gemfire.client.ConnectionEndpoint . getPort ( ) ) ; } org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.PoolFactory . create ( java.lang.String ) ; } return org.springframework.data.gemfire.client.Pool ; }  <METHOD_END>
<METHOD_START> void void ( ) { if ( ! boolean ( ) ) { org.springframework.data.gemfire.client.BeanFactory ( ) . getBean ( ClientCache .class ) ; } }  <METHOD_END>
<METHOD_START> boolean boolean ( ) { return GemfireUtils . isConnected ( GemfireUtils . getDistributedSystem ( ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.client.PoolFactory org.springframework.data.gemfire.client.PoolFactory ( ) { return PoolManager . createFactory ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return ( org.springframework.data.gemfire.client.Pool != null ? org.springframework.data.gemfire.client.Pool . getClass ( ) : Pool .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionEndpoint ... org.springframework.data.gemfire.client.ConnectionEndpoint[] ) { this . org.springframework.data.gemfire.client.ConnectionEndpointList . add ( org.springframework.data.gemfire.client.ConnectionEndpoint[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> < ConnectionEndpoint > java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) { this . org.springframework.data.gemfire.client.ConnectionEndpointList . add ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionEndpoint ... org.springframework.data.gemfire.client.ConnectionEndpoint[] ) { this . org.springframework.data.gemfire.client.ConnectionEndpointList . add ( org.springframework.data.gemfire.client.ConnectionEndpoint[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> < ConnectionEndpoint > java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) { this . org.springframework.data.gemfire.client.ConnectionEndpointList . add ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) ; }  <METHOD_END>
<METHOD_START> public void void ( BeanFactory org.springframework.data.gemfire.client.BeanFactory ) throws org.springframework.data.gemfire.client.BeansException { this . org.springframework.data.gemfire.client.BeanFactory = org.springframework.data.gemfire.client.BeanFactory ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.client.BeanFactory org.springframework.data.gemfire.client.BeanFactory ( ) { return org.springframework.data.gemfire.client.BeanFactory ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( Pool org.springframework.data.gemfire.client.Pool ) { this . org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.Pool ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.client.Pool org.springframework.data.gemfire.client.Pool ( ) { return ( org.springframework.data.gemfire.client.Pool != null ? org.springframework.data.gemfire.client.Pool : new PoolAdapter ( ) { @ java.lang.Override public boolean boolean ( ) { Pool org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.Pool ; return ( org.springframework.data.gemfire.client.Pool != null && org.springframework.data.gemfire.client.Pool . isDestroyed ( ) ) ; } @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; } @ java.lang.Override public long long ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . long ; } @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; } @ java.lang.Override public java.util.List<java.net.InetSocketAddress> < java.net.InetSocketAddress > java.util.List<java.net.InetSocketAddress> ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.ConnectionEndpointList . toInetSocketAddresses ( ) ; } @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; } @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; } @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . boolean ; } @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = org.springframework.data.gemfire.client.PoolFactoryBean .this . java.lang.String ; java.lang.String = ( StringUtils . hasText ( java.lang.String ) ? java.lang.String : org.springframework.data.gemfire.client.PoolFactoryBean .this . java.lang.String ) ; return java.lang.String ; } @ java.lang.Override public int int ( ) { Pool org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.Pool ; if ( org.springframework.data.gemfire.client.Pool != null ) { return org.springframework.data.gemfire.client.Pool . getPendingEventCount ( ) ; } throw new java.lang.IllegalStateException ( STRING ) ; } @ java.lang.Override public long long ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . long ; } @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . boolean ; } @ java.lang.Override public org.springframework.data.gemfire.client.QueryService org.springframework.data.gemfire.client.QueryService ( ) { Pool org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.Pool ; if ( org.springframework.data.gemfire.client.Pool != null ) { return org.springframework.data.gemfire.client.Pool . getQueryService ( ) ; } throw new java.lang.IllegalStateException ( STRING ) ; } @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; } @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; } @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . java.lang.String ; } @ java.lang.Override public java.util.List<java.net.InetSocketAddress> < java.net.InetSocketAddress > java.util.List<java.net.InetSocketAddress> ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.ConnectionEndpointList . toInetSocketAddresses ( ) ; } @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; } @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; } @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; } @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . boolean ; } @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; } @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; } @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . boolean ; } @ java.lang.Override public void void ( ) { void ( false ) ; } @ java.lang.Override public void void ( final boolean boolean ) { try { org.springframework.data.gemfire.client.PoolFactoryBean .this . void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Pool org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.Pool ; if ( org.springframework.data.gemfire.client.Pool != null ) { org.springframework.data.gemfire.client.Pool . destroy ( boolean ) ; } } } @ java.lang.Override public void void ( ) { Pool org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.Pool ; if ( org.springframework.data.gemfire.client.Pool != null ) { org.springframework.data.gemfire.client.Pool . releaseThreadLocalConnection ( ) ; } else { throw new java.lang.IllegalStateException ( STRING ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { Pool org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.Pool ; return ( org.springframework.data.gemfire.client.Pool != null && org.springframework.data.gemfire.client.Pool . isDestroyed ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.net.InetSocketAddress> < java.net.InetSocketAddress > java.util.List<java.net.InetSocketAddress> ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.ConnectionEndpointList . toInetSocketAddresses ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = org.springframework.data.gemfire.client.PoolFactoryBean .this . java.lang.String ; java.lang.String = ( StringUtils . hasText ( java.lang.String ) ? java.lang.String : org.springframework.data.gemfire.client.PoolFactoryBean .this . java.lang.String ) ; return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { Pool org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.Pool ; if ( org.springframework.data.gemfire.client.Pool != null ) { return org.springframework.data.gemfire.client.Pool . getPendingEventCount ( ) ; } throw new java.lang.IllegalStateException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.client.QueryService org.springframework.data.gemfire.client.QueryService ( ) { Pool org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.Pool ; if ( org.springframework.data.gemfire.client.Pool != null ) { return org.springframework.data.gemfire.client.Pool . getQueryService ( ) ; } throw new java.lang.IllegalStateException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.net.InetSocketAddress> < java.net.InetSocketAddress > java.util.List<java.net.InetSocketAddress> ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.ConnectionEndpointList . toInetSocketAddresses ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.gemfire.client.PoolFactoryBean .this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final boolean boolean ) { try { org.springframework.data.gemfire.client.PoolFactoryBean .this . void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Pool org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.Pool ; if ( org.springframework.data.gemfire.client.Pool != null ) { org.springframework.data.gemfire.client.Pool . destroy ( boolean ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Pool org.springframework.data.gemfire.client.Pool = org.springframework.data.gemfire.client.PoolFactoryBean .this . org.springframework.data.gemfire.client.Pool ; if ( org.springframework.data.gemfire.client.Pool != null ) { org.springframework.data.gemfire.client.Pool . releaseThreadLocalConnection ( ) ; } else { throw new java.lang.IllegalStateException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionEndpoint [] org.springframework.data.gemfire.client.ConnectionEndpoint[] ) { void ( ConnectionEndpointList . from ( org.springframework.data.gemfire.client.ConnectionEndpoint[] ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> < ConnectionEndpoint > java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) { org.springframework.data.gemfire.client.ConnectionEndpointList ( ) . clear ( ) ; org.springframework.data.gemfire.client.ConnectionEndpointList ( ) . add ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.client.ConnectionEndpointList org.springframework.data.gemfire.client.ConnectionEndpointList ( ) { return org.springframework.data.gemfire.client.ConnectionEndpointList ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionEndpoint [] org.springframework.data.gemfire.client.ConnectionEndpoint[] ) { void ( ConnectionEndpointList . from ( org.springframework.data.gemfire.client.ConnectionEndpoint[] ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> < ConnectionEndpoint > java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) { org.springframework.data.gemfire.client.ConnectionEndpointList ( ) . clear ( ) ; org.springframework.data.gemfire.client.ConnectionEndpointList ( ) . add ( java.lang.Iterable<org.springframework.data.gemfire.client.ConnectionEndpoint> ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.client.ConnectionEndpointList org.springframework.data.gemfire.client.ConnectionEndpointList ( ) { return org.springframework.data.gemfire.client.ConnectionEndpointList ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
