<METHOD_START> @ java.lang.SuppressWarnings ( { STRING } ) public static < T > T T ( java.lang.Object java.lang.Object , java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { java.lang.Object java.lang.Object = null ; if ( java.lang.Object[] != null && java.lang.Object[] . int > NUMBER ) { Assert . isTrue ( java.lang.Object[] . int == NUMBER , STRING ) ; Assert . noNullElements ( java.lang.Object[] , STRING ) ; java.lang.Object = java.lang.Object[] [ NUMBER ] ; } XPathExpression org.springframework.integration.xml.xpath.XPathExpression = XPathExpressionFactory . createXPathExpression ( java.lang.String ) ; org.w3c.dom.Node org.w3c.dom.Node = org.springframework.integration.xml.xpath.XmlPayloadConverter . convertToNode ( java.lang.Object ) ; if ( java.lang.Object == null ) { return ( T ) org.springframework.integration.xml.xpath.XPathExpression . evaluateAsString ( org.w3c.dom.Node ) ; } else if ( java.lang.Object instanceof NodeMapper < ? > ) { return ( T ) org.springframework.integration.xml.xpath.XPathExpression . evaluateAsObject ( org.w3c.dom.Node , ( NodeMapper < ? > ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.String && java.util.List<java.lang.String> . boolean ( java.lang.Object ) ) { java.lang.String java.lang.String = ( java.lang.String ) java.lang.Object ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.util.List<org.w3c.dom.Node> < org.w3c.dom.Node > java.util.List<org.w3c.dom.Node> = ( java.util.List<org.w3c.dom.Node> < org.w3c.dom.Node > ) XPathEvaluationType . NODE_LIST_RESULT . evaluateXPath ( org.springframework.integration.xml.xpath.XPathExpression , org.w3c.dom.Node ) ; try { javax.xml.parsers.DocumentBuilder javax.xml.parsers.DocumentBuilder = javax.xml.parsers.DocumentBuilderFactory . javax.xml.parsers.DocumentBuilder ( ) ; java.util.List<org.w3c.dom.Node> < org.w3c.dom.Node > java.util.List<org.w3c.dom.Node> = new java.util.ArrayList<org.w3c.dom.Node> < org.w3c.dom.Node > ( java.util.List<org.w3c.dom.Node> . int ( ) ) ; for ( org.w3c.dom.Node org.w3c.dom.Node : java.util.List<org.w3c.dom.Node> ) { org.w3c.dom.Document org.w3c.dom.Document = javax.xml.parsers.DocumentBuilder . org.w3c.dom.Document ( ) ; org.w3c.dom.Document . org.w3c.dom.Node ( org.w3c.dom.Document . org.w3c.dom.Node ( org.w3c.dom.Node , true ) ) ; java.util.List<org.w3c.dom.Node> . boolean ( org.w3c.dom.Document ) ; } return ( T ) java.util.List<org.w3c.dom.Node> ; } catch ( javax.xml.parsers.ParserConfigurationException javax.xml.parsers.ParserConfigurationException ) { throw new XPathException ( STRING , javax.xml.parsers.ParserConfigurationException ) ; } } else { XPathEvaluationType org.springframework.integration.xml.xpath.XPathEvaluationType = XPathEvaluationType . valueOf ( java.lang.String . java.lang.String ( ) + STRING ) ; return ( T ) org.springframework.integration.xml.xpath.XPathEvaluationType . evaluateXPath ( org.springframework.integration.xml.xpath.XPathExpression , org.w3c.dom.Node ) ; } } else { throw new java.lang.IllegalArgumentException ( STRING + STRING + java.util.List<java.lang.String> ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
