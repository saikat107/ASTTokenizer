<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.integration.router.StaticApplicationContext = new StaticApplicationContext ( ) ; RootBeanDefinition org.springframework.integration.router.RootBeanDefinition = new RootBeanDefinition ( HeaderValueRouter .class ) ; org.springframework.integration.router.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( STRING ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , STRING ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , org.springframework.integration.router.RootBeanDefinition ) ; org.springframework.integration.router.StaticApplicationContext . refresh ( ) ; MessageHandler org.springframework.integration.router.MessageHandler = ( MessageHandler ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; QueueChannel org.springframework.integration.router.QueueChannel = new QueueChannel ( ) ; Message < ? > org.springframework.integration.router.Message<?> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , org.springframework.integration.router.QueueChannel ) . build ( ) ; org.springframework.integration.router.MessageHandler . handleMessage ( org.springframework.integration.router.Message<> ) ; Message < ? > org.springframework.integration.router.Message<?> = org.springframework.integration.router.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.router.Message<> ) ; assertSame ( org.springframework.integration.router.Message<> , org.springframework.integration.router.Message<> ) ; org.springframework.integration.router.StaticApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.integration.router.StaticApplicationContext = new StaticApplicationContext ( ) ; RootBeanDefinition org.springframework.integration.router.RootBeanDefinition = new RootBeanDefinition ( HeaderValueRouter .class ) ; org.springframework.integration.router.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( STRING ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , STRING ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , org.springframework.integration.router.RootBeanDefinition ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . refresh ( ) ; MessageHandler org.springframework.integration.router.MessageHandler = ( MessageHandler ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.router.Message<?> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , STRING ) . build ( ) ; org.springframework.integration.router.MessageHandler . handleMessage ( org.springframework.integration.router.Message<> ) ; QueueChannel org.springframework.integration.router.QueueChannel = ( QueueChannel ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.router.Message<?> = org.springframework.integration.router.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.router.Message<> ) ; assertSame ( org.springframework.integration.router.Message<> , org.springframework.integration.router.Message<> ) ; HeaderValueRouter org.springframework.integration.router.HeaderValueRouter = ( HeaderValueRouter ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; org.springframework.integration.router.HeaderValueRouter . setChannelMapping ( STRING , STRING ) ; org.springframework.integration.router.HeaderValueRouter . handleMessage ( org.springframework.integration.router.Message<> ) ; QueueChannel org.springframework.integration.router.QueueChannel = ( QueueChannel ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; org.springframework.integration.router.Message<?> = org.springframework.integration.router.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.router.Message<> ) ; org.springframework.integration.router.HeaderValueRouter . removeChannelMapping ( STRING ) ; org.springframework.integration.router.HeaderValueRouter . handleMessage ( org.springframework.integration.router.Message<> ) ; org.springframework.integration.router.Message<?> = org.springframework.integration.router.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.router.Message<> ) ; assertSame ( org.springframework.integration.router.Message<> , org.springframework.integration.router.Message<> ) ; org.springframework.integration.router.StaticApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void void ( ) { StaticApplicationContext org.springframework.integration.router.StaticApplicationContext = new StaticApplicationContext ( ) ; ManagedMap org.springframework.integration.router.ManagedMap = new ManagedMap ( ) ; org.springframework.integration.router.ManagedMap . put ( STRING , STRING ) ; RootBeanDefinition org.springframework.integration.router.RootBeanDefinition = new RootBeanDefinition ( HeaderValueRouter .class ) ; org.springframework.integration.router.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( STRING ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , STRING ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , org.springframework.integration.router.ManagedMap ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , org.springframework.integration.router.StaticApplicationContext ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , org.springframework.integration.router.RootBeanDefinition ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . refresh ( ) ; MessageHandler org.springframework.integration.router.MessageHandler = ( MessageHandler ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.router.Message<?> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , STRING ) . build ( ) ; org.springframework.integration.router.MessageHandler . handleMessage ( org.springframework.integration.router.Message<> ) ; QueueChannel org.springframework.integration.router.QueueChannel = ( QueueChannel ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.router.Message<?> = org.springframework.integration.router.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.router.Message<> ) ; assertSame ( org.springframework.integration.router.Message<> , org.springframework.integration.router.Message<> ) ; org.springframework.integration.router.StaticApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void void ( ) { final StaticApplicationContext org.springframework.integration.router.StaticApplicationContext = new StaticApplicationContext ( ) ; ManagedMap org.springframework.integration.router.ManagedMap = new ManagedMap ( ) ; org.springframework.integration.router.ManagedMap . put ( STRING , STRING ) ; RootBeanDefinition org.springframework.integration.router.RootBeanDefinition = new RootBeanDefinition ( HeaderValueRouter .class ) ; org.springframework.integration.router.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( STRING ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , STRING ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , org.springframework.integration.router.ManagedMap ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , org.springframework.integration.router.StaticApplicationContext ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , ( DestinationResolver < MessageChannel > ) channelName -> context . getBean ( STRING , MessageChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , org.springframework.integration.router.RootBeanDefinition ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . refresh ( ) ; MessageHandler org.springframework.integration.router.MessageHandler = ( MessageHandler ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.router.Message<?> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , STRING ) . build ( ) ; org.springframework.integration.router.MessageHandler . handleMessage ( org.springframework.integration.router.Message<> ) ; QueueChannel org.springframework.integration.router.QueueChannel = ( QueueChannel ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.router.Message<?> = org.springframework.integration.router.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.router.Message<> ) ; assertSame ( org.springframework.integration.router.Message<> , org.springframework.integration.router.Message<> ) ; org.springframework.integration.router.StaticApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.integration.router.StaticApplicationContext = new StaticApplicationContext ( ) ; RootBeanDefinition org.springframework.integration.router.RootBeanDefinition = new RootBeanDefinition ( HeaderValueRouter .class ) ; org.springframework.integration.router.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( STRING ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , STRING ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , org.springframework.integration.router.RootBeanDefinition ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . refresh ( ) ; MessageHandler org.springframework.integration.router.MessageHandler = ( MessageHandler ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; java.lang.String [] java.lang.String[] = new java.lang.String [] { STRING , STRING } ; Message < ? > org.springframework.integration.router.Message<?> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , java.lang.String[] ) . build ( ) ; org.springframework.integration.router.MessageHandler . handleMessage ( org.springframework.integration.router.Message<> ) ; QueueChannel org.springframework.integration.router.QueueChannel = ( QueueChannel ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; QueueChannel org.springframework.integration.router.QueueChannel = ( QueueChannel ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.router.Message<?> = org.springframework.integration.router.QueueChannel . receive ( NUMBER ) ; Message < ? > org.springframework.integration.router.Message<?> = org.springframework.integration.router.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.router.Message<> ) ; assertNotNull ( org.springframework.integration.router.Message<> ) ; assertSame ( org.springframework.integration.router.Message<> , org.springframework.integration.router.Message<> ) ; assertSame ( org.springframework.integration.router.Message<> , org.springframework.integration.router.Message<> ) ; org.springframework.integration.router.StaticApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.integration.router.StaticApplicationContext = new StaticApplicationContext ( ) ; RootBeanDefinition org.springframework.integration.router.RootBeanDefinition = new RootBeanDefinition ( HeaderValueRouter .class ) ; org.springframework.integration.router.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( STRING ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , STRING ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , org.springframework.integration.router.RootBeanDefinition ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . refresh ( ) ; MessageHandler org.springframework.integration.router.MessageHandler = ( MessageHandler ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; java.lang.String java.lang.String = STRING ; Message < ? > org.springframework.integration.router.Message<?> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , java.lang.String ) . build ( ) ; org.springframework.integration.router.MessageHandler . handleMessage ( org.springframework.integration.router.Message<> ) ; QueueChannel org.springframework.integration.router.QueueChannel = ( QueueChannel ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; QueueChannel org.springframework.integration.router.QueueChannel = ( QueueChannel ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.router.Message<?> = org.springframework.integration.router.QueueChannel . receive ( NUMBER ) ; Message < ? > org.springframework.integration.router.Message<?> = org.springframework.integration.router.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.router.Message<> ) ; assertNotNull ( org.springframework.integration.router.Message<> ) ; assertSame ( org.springframework.integration.router.Message<> , org.springframework.integration.router.Message<> ) ; assertSame ( org.springframework.integration.router.Message<> , org.springframework.integration.router.Message<> ) ; org.springframework.integration.router.StaticApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.integration.router.StaticApplicationContext = new StaticApplicationContext ( ) ; RootBeanDefinition org.springframework.integration.router.RootBeanDefinition = new RootBeanDefinition ( HeaderValueRouter .class ) ; org.springframework.integration.router.RootBeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( STRING ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , STRING ) ; org.springframework.integration.router.RootBeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , STRING ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , org.springframework.integration.router.RootBeanDefinition ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( QueueChannel .class ) ) ; org.springframework.integration.router.StaticApplicationContext . refresh ( ) ; MessageHandler org.springframework.integration.router.MessageHandler = ( MessageHandler ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; java.lang.String java.lang.String = STRING ; Message < ? > org.springframework.integration.router.Message<?> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , java.lang.String ) . build ( ) ; org.springframework.integration.router.MessageHandler . handleMessage ( org.springframework.integration.router.Message<> ) ; QueueChannel org.springframework.integration.router.QueueChannel = ( QueueChannel ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; QueueChannel org.springframework.integration.router.QueueChannel = ( QueueChannel ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; QueueChannel org.springframework.integration.router.QueueChannel = ( QueueChannel ) org.springframework.integration.router.StaticApplicationContext . getBean ( STRING ) ; assertThat ( org.springframework.integration.router.QueueChannel . getQueueSize ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.integration.router.QueueChannel . getQueueSize ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.integration.router.QueueChannel . getQueueSize ( ) , equalTo ( NUMBER ) ) ; assertThat ( org.springframework.integration.router.StaticApplicationContext . getBean ( HeaderValueRouter .class ) . getDynamicChannelNames ( ) , contains ( STRING , STRING ) ) ; org.springframework.integration.router.StaticApplicationContext . close ( ) ; }  <METHOD_END>
