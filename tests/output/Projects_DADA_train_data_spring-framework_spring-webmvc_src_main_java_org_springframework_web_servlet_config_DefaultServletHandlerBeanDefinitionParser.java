<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.config.BeanDefinition org.springframework.web.servlet.config.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.web.servlet.config.ParserContext ) { java.lang.Object java.lang.Object = org.springframework.web.servlet.config.ParserContext . extractSource ( org.w3c.dom.Element ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; RootBeanDefinition org.springframework.web.servlet.config.RootBeanDefinition = new RootBeanDefinition ( DefaultServletHttpRequestHandler .class ) ; org.springframework.web.servlet.config.RootBeanDefinition . setSource ( java.lang.Object ) ; org.springframework.web.servlet.config.RootBeanDefinition . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.web.servlet.config.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , java.lang.String ) ; } java.lang.String java.lang.String = org.springframework.web.servlet.config.ParserContext . getReaderContext ( ) . generateBeanName ( org.springframework.web.servlet.config.RootBeanDefinition ) ; org.springframework.web.servlet.config.ParserContext . getRegistry ( ) . registerBeanDefinition ( java.lang.String , org.springframework.web.servlet.config.RootBeanDefinition ) ; org.springframework.web.servlet.config.ParserContext . registerComponent ( new BeanComponentDefinition ( org.springframework.web.servlet.config.RootBeanDefinition , java.lang.String ) ) ; java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new ManagedMap <> ( ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , java.lang.String ) ; RootBeanDefinition org.springframework.web.servlet.config.RootBeanDefinition = new RootBeanDefinition ( SimpleUrlHandlerMapping .class ) ; org.springframework.web.servlet.config.RootBeanDefinition . setSource ( java.lang.Object ) ; org.springframework.web.servlet.config.RootBeanDefinition . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) ; org.springframework.web.servlet.config.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , java.util.Map<java.lang.String,java.lang.String> ) ; java.lang.String java.lang.String = org.springframework.web.servlet.config.ParserContext . getReaderContext ( ) . generateBeanName ( org.springframework.web.servlet.config.RootBeanDefinition ) ; org.springframework.web.servlet.config.ParserContext . getRegistry ( ) . registerBeanDefinition ( java.lang.String , org.springframework.web.servlet.config.RootBeanDefinition ) ; org.springframework.web.servlet.config.ParserContext . registerComponent ( new BeanComponentDefinition ( org.springframework.web.servlet.config.RootBeanDefinition , java.lang.String ) ) ; MvcNamespaceUtils . registerDefaultComponents ( org.springframework.web.servlet.config.ParserContext , java.lang.Object ) ; return null ; }  <METHOD_END>
