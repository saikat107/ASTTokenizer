<METHOD_START> public void ( java.io.File java.io.File ) { this . java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { void ( java.util.Map<java.lang.String,java.lang.String> , STRING , TestConfiguration .class ) ; void ( java.util.Map<java.lang.String,java.lang.String> , STRING , TestConditionalOnClass .class ) ; void ( java.util.Map<java.lang.String,java.lang.String> , STRING , TestAutoConfigureBefore .class ) ; void ( java.util.Map<java.lang.String,java.lang.String> , STRING , TestAutoConfigureAfter .class ) ; void ( java.util.Map<java.lang.String,java.lang.String> , STRING , TestAutoConfigureOrder .class ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> , java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.Class<> . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.util.Properties java.util.Properties ( ) java.io.IOException { java.io.File java.io.File = new java.io.File ( this . java.io.File , PROPERTIES_PATH ) ; if ( ! java.io.File . boolean ( ) ) { return null ; } java.io.FileInputStream java.io.FileInputStream = new java.io.FileInputStream ( java.io.File ) ; try { java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . void ( java.io.FileInputStream ) ; return java.util.Properties ; } finally { java.io.FileInputStream . void ( ) ; } }  <METHOD_END>
