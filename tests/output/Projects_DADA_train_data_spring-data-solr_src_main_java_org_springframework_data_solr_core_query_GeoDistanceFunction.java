<METHOD_START> private void ( java.lang.String java.lang.String , Point org.springframework.data.solr.core.query.Point ) { super( java.util.Arrays . java.util.List ( java.lang.String , org.springframework.data.solr.core.query.Point ) ); }  <METHOD_END>
<METHOD_START> public static org.springframework.data.solr.core.query.GeoDistanceFunction.Builder org.springframework.data.solr.core.query.GeoDistanceFunction.Builder ( java.lang.String java.lang.String ) { return new org.springframework.data.solr.core.query.GeoDistanceFunction.Builder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.solr.core.query.GeoDistanceFunction.Builder org.springframework.data.solr.core.query.GeoDistanceFunction.Builder ( Field org.springframework.data.solr.core.query.Field ) { Assert . notNull ( org.springframework.data.solr.core.query.Field , STRING ) ; return org.springframework.data.solr.core.query.GeoDistanceFunction.Builder ( org.springframework.data.solr.core.query.Field . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GeoDistanceFunction org.springframework.data.solr.core.query.GeoDistanceFunction ( Point org.springframework.data.solr.core.query.Point ) { Assert . notNull ( org.springframework.data.solr.core.query.Point , STRING ) ; return new org.springframework.data.solr.core.query.GeoDistanceFunction ( this . java.lang.String , org.springframework.data.solr.core.query.Point ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GeoDistanceFunction org.springframework.data.solr.core.query.GeoDistanceFunction ( double double , double double ) { return org.springframework.data.solr.core.query.GeoDistanceFunction ( new Point ( double , double ) ) ; }  <METHOD_END>
