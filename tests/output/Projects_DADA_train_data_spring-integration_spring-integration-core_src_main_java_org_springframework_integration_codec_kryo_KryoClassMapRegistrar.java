<METHOD_START> public void ( java.util.Map<java.lang.Integer,java.lang.Class<?>> < java.lang.Integer , java.lang.Class<?> < ? > > java.util.Map<java.lang.Integer,java.lang.Class<?>> ) { this . java.util.Map<java.lang.Integer,java.lang.Class<?>> = new java.util.HashMap<java.lang.Integer,java.lang.Class<?>> < java.lang.Integer , java.lang.Class<?> < ? > > ( java.util.Map<java.lang.Integer,java.lang.Class<?>> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.integration.codec.kryo.Registration> < Registration > java.util.List<org.springframework.integration.codec.kryo.Registration> ( ) { java.util.List<org.springframework.integration.codec.kryo.Registration> < Registration > java.util.List<org.springframework.integration.codec.kryo.Registration> = new java.util.ArrayList<org.springframework.integration.codec.kryo.Registration> < Registration > ( ) ; if ( ! CollectionUtils . isEmpty ( this . java.util.Map<java.lang.Integer,java.lang.Class<?>> ) ) { for ( java.util.Map . java.util.Map.Entry<java.lang.Integer,java.lang.Class<?>> < java.lang.Integer , java.lang.Class<?> < ? > > java.util.Map.Entry<java.lang.Integer,java.lang.Class<?>> : this . java.util.Map<java.lang.Integer,java.lang.Class<?>> . java.util.Set<java.util.Map.Entry<java.lang.Integer,java.lang.Class<?>>> ( ) ) { java.util.List<org.springframework.integration.codec.kryo.Registration> . add ( new Registration ( java.util.Map.Entry<java.lang.Integer,java.lang.Class<?>> . java.lang.Class<?> ( ) , kryo . getSerializer ( java.util.Map.Entry<java.lang.Integer,java.lang.Class<?>> . java.lang.Class<?> ( ) ) , java.util.Map.Entry<java.lang.Integer,java.lang.Class<?>> . java.lang.Integer ( ) ) ) ; } } return java.util.List<org.springframework.integration.codec.kryo.Registration> ; }  <METHOD_END>
