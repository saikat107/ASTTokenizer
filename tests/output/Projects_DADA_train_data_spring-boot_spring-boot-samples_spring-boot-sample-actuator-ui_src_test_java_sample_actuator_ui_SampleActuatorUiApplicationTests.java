<METHOD_START> @ Test public void void ( ) java.lang.Exception { HttpHeaders sample.actuator.ui.HttpHeaders = new HttpHeaders ( ) ; sample.actuator.ui.HttpHeaders . setAccept ( java.util.Arrays . java.util.List ( MediaType . TEXT_HTML ) ) ; ResponseEntity < java.lang.String > sample.actuator.ui.ResponseEntity<java.lang.String> = this . sample.actuator.ui.TestRestTemplate . exchange ( STRING , HttpMethod . GET , new HttpEntity < java.lang.Void > ( sample.actuator.ui.HttpHeaders ) , java.lang.String .class ) ; assertThat ( sample.actuator.ui.ResponseEntity<java.lang.String> . getStatusCode ( ) ) . isEqualTo ( HttpStatus . OK ) ; assertThat ( sample.actuator.ui.ResponseEntity<java.lang.String> . getBody ( ) ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ResponseEntity < java.lang.String > sample.actuator.ui.ResponseEntity<java.lang.String> = this . sample.actuator.ui.TestRestTemplate . getForEntity ( STRING , java.lang.String .class ) ; assertThat ( sample.actuator.ui.ResponseEntity<java.lang.String> . getStatusCode ( ) ) . isEqualTo ( HttpStatus . OK ) ; assertThat ( sample.actuator.ui.ResponseEntity<java.lang.String> . getBody ( ) ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { @ java.lang.SuppressWarnings ( STRING ) ResponseEntity < java.util.Map > sample.actuator.ui.ResponseEntity<java.util.Map> = this . sample.actuator.ui.TestRestTemplate . getForEntity ( STRING , java.util.Map .class ) ; assertThat ( sample.actuator.ui.ResponseEntity<java.util.Map> . getStatusCode ( ) ) . isEqualTo ( HttpStatus . UNAUTHORIZED ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { HttpHeaders sample.actuator.ui.HttpHeaders = new HttpHeaders ( ) ; sample.actuator.ui.HttpHeaders . setAccept ( java.util.Arrays . java.util.List ( MediaType . TEXT_HTML ) ) ; ResponseEntity < java.lang.String > sample.actuator.ui.ResponseEntity<java.lang.String> = this . sample.actuator.ui.TestRestTemplate . exchange ( STRING , HttpMethod . GET , new HttpEntity < java.lang.Void > ( sample.actuator.ui.HttpHeaders ) , java.lang.String .class ) ; assertThat ( sample.actuator.ui.ResponseEntity<java.lang.String> . getStatusCode ( ) ) . isEqualTo ( HttpStatus . INTERNAL_SERVER_ERROR ) ; assertThat ( sample.actuator.ui.ResponseEntity<java.lang.String> . getBody ( ) ) . contains ( STRING ) . contains ( STRING ) . contains ( STRING ) ; }  <METHOD_END>
