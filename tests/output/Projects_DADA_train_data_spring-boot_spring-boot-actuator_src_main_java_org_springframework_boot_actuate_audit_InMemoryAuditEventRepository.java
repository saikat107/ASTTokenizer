<METHOD_START> public void ( ) { this( int ); }  <METHOD_END>
<METHOD_START> public void ( int int ) { this . org.springframework.boot.actuate.audit.AuditEvent[] = new AuditEvent [ int ] ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { synchronized ( this . java.lang.Object ) { this . org.springframework.boot.actuate.audit.AuditEvent[] = new AuditEvent [ int ] ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AuditEvent org.springframework.boot.actuate.audit.AuditEvent ) { Assert . notNull ( org.springframework.boot.actuate.audit.AuditEvent , STRING ) ; synchronized ( this . java.lang.Object ) { this . int = ( this . int + NUMBER ) % this . org.springframework.boot.actuate.audit.AuditEvent[] . length ; this . org.springframework.boot.actuate.audit.AuditEvent[] [ this . int ] = org.springframework.boot.actuate.audit.AuditEvent ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.boot.actuate.audit.AuditEvent> < AuditEvent > java.util.List<org.springframework.boot.actuate.audit.AuditEvent> ( java.util.Date java.util.Date ) { return java.util.List<org.springframework.boot.actuate.audit.AuditEvent> ( null , java.util.Date , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.boot.actuate.audit.AuditEvent> < AuditEvent > java.util.List<org.springframework.boot.actuate.audit.AuditEvent> ( java.lang.String java.lang.String , java.util.Date java.util.Date ) { return java.util.List<org.springframework.boot.actuate.audit.AuditEvent> ( java.lang.String , java.util.Date , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.boot.actuate.audit.AuditEvent> < AuditEvent > java.util.List<org.springframework.boot.actuate.audit.AuditEvent> ( java.lang.String java.lang.String , java.util.Date java.util.Date , java.lang.String java.lang.String ) { java.util.LinkedList<org.springframework.boot.actuate.audit.AuditEvent> < AuditEvent > java.util.LinkedList<org.springframework.boot.actuate.audit.AuditEvent> = new java.util.LinkedList<org.springframework.boot.actuate.audit.AuditEvent> <> ( ) ; synchronized ( this . java.lang.Object ) { for ( int int = NUMBER ; int < this . org.springframework.boot.actuate.audit.AuditEvent[] . length ; int ++ ) { AuditEvent org.springframework.boot.actuate.audit.AuditEvent = org.springframework.boot.actuate.audit.AuditEvent ( int ) ; if ( org.springframework.boot.actuate.audit.AuditEvent != null && boolean ( java.lang.String , java.util.Date , java.lang.String , org.springframework.boot.actuate.audit.AuditEvent ) ) { java.util.LinkedList<org.springframework.boot.actuate.audit.AuditEvent> . addFirst ( org.springframework.boot.actuate.audit.AuditEvent ) ; } } } return java.util.LinkedList<org.springframework.boot.actuate.audit.AuditEvent> ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.String java.lang.String , java.util.Date java.util.Date , java.lang.String java.lang.String , AuditEvent org.springframework.boot.actuate.audit.AuditEvent ) { boolean boolean = true ; boolean = boolean && ( java.lang.String == null || org.springframework.boot.actuate.audit.AuditEvent . getPrincipal ( ) . equals ( java.lang.String ) ) ; boolean = boolean && ( java.util.Date == null || org.springframework.boot.actuate.audit.AuditEvent . getTimestamp ( ) . compareTo ( java.util.Date ) >= NUMBER ) ; boolean = boolean && ( java.lang.String == null || org.springframework.boot.actuate.audit.AuditEvent . getType ( ) . equals ( java.lang.String ) ) ; return boolean ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.audit.AuditEvent org.springframework.boot.actuate.audit.AuditEvent ( int int ) { int int = ( ( this . int + this . org.springframework.boot.actuate.audit.AuditEvent[] . length - int ) % this . org.springframework.boot.actuate.audit.AuditEvent[] . length ) ; return this . org.springframework.boot.actuate.audit.AuditEvent[] [ int ] ; }  <METHOD_END>
