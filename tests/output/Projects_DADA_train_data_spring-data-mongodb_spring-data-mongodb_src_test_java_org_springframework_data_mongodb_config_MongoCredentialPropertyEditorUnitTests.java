<METHOD_START> @ Before public void void ( ) { this . org.springframework.data.mongodb.config.MongoCredentialPropertyEditor = new MongoCredentialPropertyEditor ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( null ) ; assertThat ( org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) , nullValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( STRING ) ; assertThat ( org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) , nullValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( java.lang.String ) ; assertThat ( ( java.util.List<org.springframework.data.mongodb.config.MongoCredential> < MongoCredential > ) org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) , contains ( org.springframework.data.mongodb.config.MongoCredential ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( java.lang.String ) ; assertThat ( ( java.util.List<org.springframework.data.mongodb.config.MongoCredential> < MongoCredential > ) org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) , contains ( org.springframework.data.mongodb.config.MongoCredential ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( StringUtils . collectionToCommaDelimitedString ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String ) ) ) ; assertThat ( ( java.util.List<org.springframework.data.mongodb.config.MongoCredential> < MongoCredential > ) org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) , contains ( org.springframework.data.mongodb.config.MongoCredential , org.springframework.data.mongodb.config.MongoCredential ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( StringUtils . collectionToCommaDelimitedString ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String ) ) ) ; assertThat ( ( java.util.List<org.springframework.data.mongodb.config.MongoCredential> < MongoCredential > ) org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) , contains ( org.springframework.data.mongodb.config.MongoCredential , org.springframework.data.mongodb.config.MongoCredential ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( StringUtils . collectionToCommaDelimitedString ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String ) ) ) ; assertThat ( ( java.util.List<org.springframework.data.mongodb.config.MongoCredential> < MongoCredential > ) org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) , contains ( org.springframework.data.mongodb.config.MongoCredential , org.springframework.data.mongodb.config.MongoCredential ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( StringUtils . collectionToCommaDelimitedString ( java.util.Arrays . java.util.List<java.lang.String> ( STRING + java.lang.String + STRING , STRING + java.lang.String + STRING ) ) ) ; assertThat ( ( java.util.List<org.springframework.data.mongodb.config.MongoCredential> < MongoCredential > ) org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) , contains ( org.springframework.data.mongodb.config.MongoCredential , org.springframework.data.mongodb.config.MongoCredential ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( STRING + java.lang.String + STRING ) ; assertThat ( ( java.util.List<org.springframework.data.mongodb.config.MongoCredential> < MongoCredential > ) org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) , contains ( org.springframework.data.mongodb.config.MongoCredential ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( java.lang.String ) ; assertThat ( ( java.util.List<org.springframework.data.mongodb.config.MongoCredential> < MongoCredential > ) org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) , contains ( org.springframework.data.mongodb.config.MongoCredential ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( STRING ) ; assertThat ( ( java.util.List<org.springframework.data.mongodb.config.MongoCredential> < MongoCredential > ) org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) , contains ( MongoCredential . createMongoX509Credential ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( STRING ) ; org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . setAsText ( STRING ) ; org.springframework.data.mongodb.config.MongoCredentialPropertyEditor . getValue ( ) ; }  <METHOD_END>
