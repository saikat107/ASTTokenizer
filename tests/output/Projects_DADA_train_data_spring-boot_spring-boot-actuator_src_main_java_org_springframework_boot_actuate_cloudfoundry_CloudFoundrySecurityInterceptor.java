<METHOD_START> void ( TokenValidator org.springframework.boot.actuate.cloudfoundry.TokenValidator , CloudFoundrySecurityService org.springframework.boot.actuate.cloudfoundry.CloudFoundrySecurityService , java.lang.String java.lang.String ) { this . org.springframework.boot.actuate.cloudfoundry.TokenValidator = org.springframework.boot.actuate.cloudfoundry.TokenValidator ; this . org.springframework.boot.actuate.cloudfoundry.CloudFoundrySecurityService = org.springframework.boot.actuate.cloudfoundry.CloudFoundrySecurityService ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( HttpServletRequest org.springframework.boot.actuate.cloudfoundry.HttpServletRequest , HttpServletResponse org.springframework.boot.actuate.cloudfoundry.HttpServletResponse , java.lang.Object java.lang.Object ) throws java.lang.Exception { if ( CorsUtils . isPreFlightRequest ( org.springframework.boot.actuate.cloudfoundry.HttpServletRequest ) ) { return true ; } try { if ( ! StringUtils . hasText ( this . java.lang.String ) ) { throw new CloudFoundryAuthorizationException ( Reason . SERVICE_UNAVAILABLE , STRING ) ; } if ( this . org.springframework.boot.actuate.cloudfoundry.CloudFoundrySecurityService == null ) { throw new CloudFoundryAuthorizationException ( Reason . SERVICE_UNAVAILABLE , STRING ) ; } HandlerMethod org.springframework.boot.actuate.cloudfoundry.HandlerMethod = ( HandlerMethod ) java.lang.Object ; if ( HttpMethod . OPTIONS . matches ( org.springframework.boot.actuate.cloudfoundry.HttpServletRequest . getMethod ( ) ) && ! ( org.springframework.boot.actuate.cloudfoundry.HandlerMethod . getBean ( ) instanceof MvcEndpoint ) ) { return true ; } MvcEndpoint org.springframework.boot.actuate.cloudfoundry.MvcEndpoint = ( MvcEndpoint ) org.springframework.boot.actuate.cloudfoundry.HandlerMethod . getBean ( ) ; void ( org.springframework.boot.actuate.cloudfoundry.HttpServletRequest , org.springframework.boot.actuate.cloudfoundry.MvcEndpoint ) ; } catch ( CloudFoundryAuthorizationException org.springframework.boot.actuate.cloudfoundry.CloudFoundryAuthorizationException ) { org.springframework.boot.actuate.cloudfoundry.Log . error ( org.springframework.boot.actuate.cloudfoundry.CloudFoundryAuthorizationException ) ; org.springframework.boot.actuate.cloudfoundry.HttpServletResponse . setContentType ( MediaType . APPLICATION_JSON . toString ( ) ) ; org.springframework.boot.actuate.cloudfoundry.HttpServletResponse . getWriter ( ) . write ( STRING + org.springframework.boot.actuate.cloudfoundry.CloudFoundryAuthorizationException . getMessage ( ) + STRING ) ; org.springframework.boot.actuate.cloudfoundry.HttpServletResponse . setStatus ( org.springframework.boot.actuate.cloudfoundry.CloudFoundryAuthorizationException . getStatusCode ( ) . value ( ) ) ; return false ; } return true ; }  <METHOD_END>
<METHOD_START> private void void ( HttpServletRequest org.springframework.boot.actuate.cloudfoundry.HttpServletRequest , MvcEndpoint org.springframework.boot.actuate.cloudfoundry.MvcEndpoint )			throws java.lang.Exception { Token org.springframework.boot.actuate.cloudfoundry.Token = org.springframework.boot.actuate.cloudfoundry.Token ( org.springframework.boot.actuate.cloudfoundry.HttpServletRequest ) ; this . org.springframework.boot.actuate.cloudfoundry.TokenValidator . validate ( org.springframework.boot.actuate.cloudfoundry.Token ) ; AccessLevel org.springframework.boot.actuate.cloudfoundry.AccessLevel = this . org.springframework.boot.actuate.cloudfoundry.CloudFoundrySecurityService . getAccessLevel ( org.springframework.boot.actuate.cloudfoundry.Token . toString ( ) , this . java.lang.String ) ; if ( ! org.springframework.boot.actuate.cloudfoundry.AccessLevel . isAccessAllowed ( org.springframework.boot.actuate.cloudfoundry.MvcEndpoint . getPath ( ) ) ) { throw new CloudFoundryAuthorizationException ( Reason . ACCESS_DENIED , STRING ) ; } org.springframework.boot.actuate.cloudfoundry.AccessLevel . put ( org.springframework.boot.actuate.cloudfoundry.HttpServletRequest ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.cloudfoundry.Token org.springframework.boot.actuate.cloudfoundry.Token ( HttpServletRequest org.springframework.boot.actuate.cloudfoundry.HttpServletRequest ) { java.lang.String java.lang.String = org.springframework.boot.actuate.cloudfoundry.HttpServletRequest . getHeader ( STRING ) ; java.lang.String java.lang.String = STRING ; if ( java.lang.String == null || ! java.lang.String . java.lang.String ( ) . boolean ( java.lang.String ) ) { throw new CloudFoundryAuthorizationException ( Reason . MISSING_AUTHORIZATION , STRING ) ; } return new Token ( java.lang.String . java.lang.String ( java.lang.String . int ( ) ) ) ; }  <METHOD_END>
