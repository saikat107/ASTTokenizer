<METHOD_START> @ Test @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void void ( ) java.lang.Exception { org.w3c.dom.Document org.w3c.dom.Document = XmlTestUtil . getDocumentForString ( STRING ) ; XPathExpression org.springframework.integration.xml.router.XPathExpression = XPathExpressionFactory . createXPathExpression ( STRING ) ; XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( org.springframework.integration.xml.router.XPathExpression ) ; java.lang.Object [] java.lang.Object[] = org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage ( org.w3c.dom.Document ) ) . toArray ( ) ; assertEquals ( STRING , NUMBER , java.lang.Object[] . int ) ; assertEquals ( STRING , STRING , java.lang.Object[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void void ( ) java.lang.Exception { org.w3c.dom.Document org.w3c.dom.Document = XmlTestUtil . getDocumentForString ( STRING ) ; XPathExpression org.springframework.integration.xml.router.XPathExpression = XPathExpressionFactory . createXPathExpression ( STRING ) ; XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( org.springframework.integration.xml.router.XPathExpression ) ; org.springframework.integration.xml.router.XPathRouter . setEvaluateAsString ( true ) ; java.lang.Object [] java.lang.Object[] = org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage ( org.w3c.dom.Document ) ) . toArray ( ) ; assertEquals ( STRING , NUMBER , java.lang.Object[] . int ) ; assertEquals ( STRING , STRING , java.lang.Object[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void void ( ) java.lang.Exception { org.w3c.dom.Document org.w3c.dom.Document = XmlTestUtil . getDocumentForString ( STRING ) ; XPathExpression org.springframework.integration.xml.router.XPathExpression = XPathExpressionFactory . createXPathExpression ( STRING ) ; XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( org.springframework.integration.xml.router.XPathExpression ) ; org.springframework.integration.xml.router.XPathRouter . setEvaluateAsString ( true ) ; java.lang.Object [] java.lang.Object[] = org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage ( org.w3c.dom.Document ) ) . toArray ( ) ; assertEquals ( STRING , NUMBER , java.lang.Object[] . int ) ; assertEquals ( STRING , STRING , java.lang.Object[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void void ( ) java.lang.Exception { org.w3c.dom.Document org.w3c.dom.Document = XmlTestUtil . getDocumentForString ( STRING ) ; XPathExpression org.springframework.integration.xml.router.XPathExpression = XPathExpressionFactory . createXPathExpression ( STRING ) ; XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( org.springframework.integration.xml.router.XPathExpression ) ; java.lang.Object [] java.lang.Object[] = org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage ( org.w3c.dom.Document ) ) . toArray ( ) ; assertEquals ( STRING , NUMBER , java.lang.Object[] . int ) ; assertEquals ( STRING , STRING , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( STRING , STRING , java.lang.Object[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void void ( ) java.lang.Exception { XPathExpression org.springframework.integration.xml.router.XPathExpression = XPathExpressionFactory . createXPathExpression ( STRING ) ; XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( org.springframework.integration.xml.router.XPathExpression ) ; org.springframework.integration.xml.router.XPathRouter . setEvaluateAsString ( true ) ; java.lang.Object [] java.lang.Object[] = org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage ( STRING ) ) . toArray ( ) ; assertEquals ( STRING , NUMBER , java.lang.Object[] . int ) ; assertEquals ( STRING , STRING , java.lang.Object[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = MessagingException .class ) public void void ( ) java.lang.Exception { XPathExpression org.springframework.integration.xml.router.XPathExpression = XPathExpressionFactory . createXPathExpression ( STRING ) ; XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( org.springframework.integration.xml.router.XPathExpression ) ; org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage < java.lang.String > ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( STRING ) ; org.w3c.dom.Document org.w3c.dom.Document = XmlTestUtil . getDocumentForString ( STRING ) ; java.lang.Object [] java.lang.Object[] = org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage < org.w3c.dom.Node > ( org.w3c.dom.Document . org.w3c.dom.NodeList ( STRING ) . org.w3c.dom.Node ( NUMBER ) ) ) . toArray ( ) ; assertEquals ( STRING , java.lang.Object[] [ NUMBER ] ) ; assertEquals ( STRING , java.lang.Object[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.w3c.dom.Document org.w3c.dom.Document = XmlTestUtil . getDocumentForString ( STRING ) ; XPathExpression org.springframework.integration.xml.router.XPathExpression = XPathExpressionFactory . createXPathExpression ( STRING ) ; XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( org.springframework.integration.xml.router.XPathExpression ) ; java.lang.Object java.lang.Object = org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage < org.w3c.dom.Document > ( org.w3c.dom.Document ) ) . toArray ( ) [ NUMBER ] ; assertEquals ( STRING , STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { XPathExpression org.springframework.integration.xml.router.XPathExpression = XPathExpressionFactory . createXPathExpression ( STRING ) ; XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( org.springframework.integration.xml.router.XPathExpression ) ; java.lang.Object java.lang.Object = org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage < java.lang.String > ( STRING ) ) . toArray ( ) [ NUMBER ] ; assertEquals ( STRING , STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = MessagingException .class ) public void void ( ) java.lang.Exception { XPathExpression org.springframework.integration.xml.router.XPathExpression = XPathExpressionFactory . createXPathExpression ( STRING ) ; XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( org.springframework.integration.xml.router.XPathExpression ) ; org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage < java.lang.String > ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( STRING ) ; org.w3c.dom.Document org.w3c.dom.Document = XmlTestUtil . getDocumentForString ( STRING ) ; java.lang.Object [] java.lang.Object[] = org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage < org.w3c.dom.Node > ( org.w3c.dom.Document . org.w3c.dom.NodeList ( STRING ) . org.w3c.dom.Node ( NUMBER ) ) ) . toArray ( ) ; assertEquals ( STRING , java.lang.Object[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.w3c.dom.Document org.w3c.dom.Document = XmlTestUtil . getDocumentForString ( STRING ) ; XPathExpression org.springframework.integration.xml.router.XPathExpression = XPathExpressionFactory . createXPathExpression ( STRING ) ; XPathRouter org.springframework.integration.xml.router.XPathRouter = new XPathRouter ( org.springframework.integration.xml.router.XPathExpression ) ; java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = org.springframework.integration.xml.router.XPathRouter . getChannelKeys ( new GenericMessage < org.w3c.dom.Document > ( org.w3c.dom.Document ) ) ; assertEquals ( NUMBER , java.util.List<java.lang.Object> . int ( ) ) ; }  <METHOD_END>
