<METHOD_START> @ java.lang.Override public void void ( StateMachineConfigurationConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.docs.StateMachineConfigurationConfigurer<java.lang.String,java.lang.String> )				throws java.lang.Exception { org.springframework.statemachine.docs.StateMachineConfigurationConfigurer<java.lang.String,java.lang.String> . withSecurity ( ) . enabled ( true ) . event ( STRING ) . event ( STRING , ComparisonType . ANY ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.docs.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> )				throws java.lang.Exception { org.springframework.statemachine.docs.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . secured ( STRING , ComparisonType . ANY ) . secured ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineConfigurationConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.docs.StateMachineConfigurationConfigurer<java.lang.String,java.lang.String> )				throws java.lang.Exception { org.springframework.statemachine.docs.StateMachineConfigurationConfigurer<java.lang.String,java.lang.String> . withSecurity ( ) . enabled ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.docs.StateMachineStateConfigurer<java.lang.String,java.lang.String> )				throws java.lang.Exception { org.springframework.statemachine.docs.StateMachineStateConfigurer<java.lang.String,java.lang.String> . withStates ( ) . initial ( STRING ) . state ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.docs.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> )				throws java.lang.Exception { org.springframework.statemachine.docs.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> . withExternal ( ) . source ( STRING ) . target ( STRING ) . action ( org.springframework.statemachine.docs.Action<java.lang.String,java.lang.String> ( ) ) . event ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Scope ( proxyMode = ScopedProxyMode . TARGET_CLASS ) @ Bean public org.springframework.statemachine.docs.Action<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.docs.Action<java.lang.String,java.lang.String> ( ) { return new Action < java.lang.String , java.lang.String > ( ) { @ Secured ( STRING ) @ java.lang.Override public void void ( StateContext < java.lang.String , java.lang.String > org.springframework.statemachine.docs.StateContext<java.lang.String,java.lang.String> ) {				} } ; }  <METHOD_END>
<METHOD_START> @ Secured ( STRING ) @ java.lang.Override public void void ( StateContext < java.lang.String , java.lang.String > org.springframework.statemachine.docs.StateContext<java.lang.String,java.lang.String> ) {				}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineConfigurationConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.docs.StateMachineConfigurationConfigurer<java.lang.String,java.lang.String> )					throws java.lang.Exception { org.springframework.statemachine.docs.StateMachineConfigurationConfigurer<java.lang.String,java.lang.String> . withSecurity ( ) . enabled ( true ) . transitionAccessDecisionManager ( null ) . eventAccessDecisionManager ( null ) ; }  <METHOD_END>
<METHOD_START> @ Autowired public void void ( AuthenticationManagerBuilder org.springframework.statemachine.docs.AuthenticationManagerBuilder ) throws java.lang.Exception { org.springframework.statemachine.docs.AuthenticationManagerBuilder . inMemoryAuthentication ( ) . withUser ( STRING ) . password ( STRING ) . roles ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineConfigurationConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.docs.StateMachineConfigurationConfigurer<java.lang.String,java.lang.String> )					throws java.lang.Exception { org.springframework.statemachine.docs.StateMachineConfigurationConfigurer<java.lang.String,java.lang.String> . withSecurity ( ) . enabled ( true ) . transition ( STRING ) . transition ( STRING , ComparisonType . ANY ) ; }  <METHOD_END>
