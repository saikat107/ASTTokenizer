<METHOD_START> public void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { super( java.lang.Object , java.lang.String ); }  <METHOD_END>
<METHOD_START> public org.springframework.web.bind.support.Mono<java.lang.Void> < java.lang.Void > org.springframework.web.bind.support.Mono<java.lang.Void> ( ServerWebExchange org.springframework.web.bind.support.ServerWebExchange ) { return org.springframework.web.bind.support.ServerWebExchange . getRequestParams ( ) . map ( this :: java.util.Map<java.lang.String,java.lang.Object> ) . doOnNext ( values -> values . putAll ( getMultipartFiles ( exchange ) ) ) . doOnNext ( values -> values . putAll ( getExtraValuesToBind ( exchange ) ) ) . then ( values -> { doBind ( new MutablePropertyValues ( values ) ) ; return Mono . empty ( ) ; } ) ; }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.String> ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.TreeMap<java.lang.String,java.lang.Object> <> ( ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map.Entry<java.lang.String,java.util.List<java.lang.String>> : org.springframework.web.bind.support.MultiValueMap<java.lang.String,java.lang.String> . entrySet ( ) ) { java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,java.util.List<java.lang.String>> . java.lang.String ( ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Map.Entry<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( ) ; if ( CollectionUtils . isEmpty ( java.util.List<java.lang.String> ) ) { } else if ( java.util.List<java.lang.String> . int ( ) == NUMBER ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; } else { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.util.List<java.lang.String> ) ; } } return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> protected java.util.Map<java.lang.String,java.util.List<org.springframework.web.bind.support.MultipartFile>> < java.lang.String , java.util.List<org.springframework.web.bind.support.MultipartFile> < MultipartFile > > java.util.Map<java.lang.String,java.util.List<org.springframework.web.bind.support.MultipartFile>> ( ServerWebExchange org.springframework.web.bind.support.ServerWebExchange ) { return java.util.Collections . java.util.Map<java.lang.String,java.util.List<org.springframework.web.bind.support.MultipartFile>> ( ) ; }  <METHOD_END>
<METHOD_START> protected java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ( ServerWebExchange org.springframework.web.bind.support.ServerWebExchange ) { return java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( ) ; }  <METHOD_END>
