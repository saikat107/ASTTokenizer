<METHOD_START> @ Test public void void ( ) { assertNotNull ( STRING , org.springframework.data.gemfire.config.xml.Region<,> ) ; assertEquals ( STRING , org.springframework.data.gemfire.config.xml.Region<,> . getName ( ) ) ; assertEquals ( STRING , org.springframework.data.gemfire.config.xml.Region<,> . getFullPath ( ) ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) ) ; assertEquals ( DataPolicy . PERSISTENT_PARTITION , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getDataPolicy ( ) ) ; assertTrue ( org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getStatisticsEnabled ( ) ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getPartitionAttributes ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getPartitionAttributes ( ) . getRedundantCopies ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getPartitionAttributes ( ) . getRecoveryDelay ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RegionFactoryBean < ? , ? > org.springframework.data.gemfire.config.xml.RegionFactoryBean<?,?> = org.springframework.data.gemfire.config.xml.ApplicationContext . getBean ( STRING , RegionFactoryBean .class ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.RegionFactoryBean<,> ) ; assertEquals ( DataPolicy . PERSISTENT_PARTITION , org.springframework.data.gemfire.config.xml.RegionFactoryBean<,> . getDataPolicy ( ) ) ; assertTrue ( java.lang.Boolean . java.lang.Boolean . boolean ( TestUtils . readField ( STRING , org.springframework.data.gemfire.config.xml.RegionFactoryBean<,> ) ) ) ; RegionAttributes < ? , ? > org.springframework.data.gemfire.config.xml.RegionAttributes<?,?> = TestUtils . readField ( STRING , org.springframework.data.gemfire.config.xml.RegionFactoryBean<,> ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.RegionAttributes<,> ) ; assertEquals ( DataPolicy . PARTITION , org.springframework.data.gemfire.config.xml.RegionAttributes<,> . getDataPolicy ( ) ) ; PartitionAttributes < ? , ? > org.springframework.data.gemfire.config.xml.PartitionAttributes<?,?> = org.springframework.data.gemfire.config.xml.RegionAttributes<,> . getPartitionAttributes ( ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.PartitionAttributes<,> ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.config.xml.PartitionAttributes<,> . getRedundantCopies ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNotNull ( STRING , org.springframework.data.gemfire.config.xml.Region<,> ) ; assertEquals ( STRING , org.springframework.data.gemfire.config.xml.Region<,> . getName ( ) ) ; assertEquals ( STRING , org.springframework.data.gemfire.config.xml.Region<,> . getFullPath ( ) ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) ) ; assertEquals ( DataPolicy . PERSISTENT_PARTITION , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getDataPolicy ( ) ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getPartitionAttributes ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getPartitionAttributes ( ) . getRedundantCopies ( ) ) ; }  <METHOD_END>
