<METHOD_START> void ( ArtemisProperties org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties , ObjectProvider < java.util.List<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConfigurationCustomizer> < ArtemisConfigurationCustomizer > > org.springframework.boot.autoconfigure.jms.artemis.ObjectProvider<java.util.List<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConfigurationCustomizer>> , ObjectProvider < java.util.List<org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfiguration> < JMSQueueConfiguration > > org.springframework.boot.autoconfigure.jms.artemis.ObjectProvider<java.util.List<org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfiguration>> , ObjectProvider < java.util.List<org.springframework.boot.autoconfigure.jms.artemis.TopicConfiguration> < TopicConfiguration > > org.springframework.boot.autoconfigure.jms.artemis.ObjectProvider<java.util.List<org.springframework.boot.autoconfigure.jms.artemis.TopicConfiguration>> ) { this . org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties = org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties ; this . java.util.List<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConfigurationCustomizer> = org.springframework.boot.autoconfigure.jms.artemis.ObjectProvider<java.util.List<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConfigurationCustomizer>> . getIfAvailable ( ) ; this . java.util.List<org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfiguration> = org.springframework.boot.autoconfigure.jms.artemis.ObjectProvider<java.util.List<org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfiguration>> . getIfAvailable ( ) ; this . java.util.List<org.springframework.boot.autoconfigure.jms.artemis.TopicConfiguration> = org.springframework.boot.autoconfigure.jms.artemis.ObjectProvider<java.util.List<org.springframework.boot.autoconfigure.jms.artemis.TopicConfiguration>> . getIfAvailable ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public org . org.apache . org.apache . org.apache . org.apache . org.apache . org.apache.activemq.artemis.core.config.Configuration org.apache.activemq.artemis.core.config.Configuration ( ) { return new ArtemisEmbeddedConfigurationFactory ( this . org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties ) . createConfiguration ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( initMethod = STRING , destroyMethod = STRING ) @ ConditionalOnMissingBean public org.springframework.boot.autoconfigure.jms.artemis.EmbeddedJMS org.springframework.boot.autoconfigure.jms.artemis.EmbeddedJMS ( org . org.apache . org.apache . org.apache . org.apache . org.apache . org.apache org.apache.activemq.artemis.core.config.Configuration , JMSConfiguration org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration ) { EmbeddedJMS org.springframework.boot.autoconfigure.jms.artemis.EmbeddedJMS = new EmbeddedJMS ( ) ; void ( org.apache.activemq.artemis.core.config.Configuration ) ; org.springframework.boot.autoconfigure.jms.artemis.EmbeddedJMS . setConfiguration ( org.apache.activemq.artemis.core.config.Configuration ) ; org.springframework.boot.autoconfigure.jms.artemis.EmbeddedJMS . setJmsConfiguration ( org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration ) ; org.springframework.boot.autoconfigure.jms.artemis.EmbeddedJMS . setRegistry ( new ArtemisNoOpBindingRegistry ( ) ) ; return org.springframework.boot.autoconfigure.jms.artemis.EmbeddedJMS ; }  <METHOD_END>
<METHOD_START> private void void ( org . org.apache . org.apache . org.apache . org.apache . org.apache . org.apache org.apache.activemq.artemis.core.config.Configuration ) { if ( this . java.util.List<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConfigurationCustomizer> != null ) { AnnotationAwareOrderComparator . sort ( this . java.util.List<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConfigurationCustomizer> ) ; for ( ArtemisConfigurationCustomizer org.springframework.boot.autoconfigure.jms.artemis.ArtemisConfigurationCustomizer : this . java.util.List<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConfigurationCustomizer> ) { org.springframework.boot.autoconfigure.jms.artemis.ArtemisConfigurationCustomizer . customize ( org.apache.activemq.artemis.core.config.Configuration ) ; } } }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration ( ) { JMSConfiguration org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration = new JMSConfigurationImpl ( ) ; void ( org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration . getQueueConfigurations ( ) , this . java.util.List<org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfiguration> ) ; void ( org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration . getTopicConfigurations ( ) , this . java.util.List<org.springframework.boot.autoconfigure.jms.artemis.TopicConfiguration> ) ; void ( org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration , this . org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties . getEmbedded ( ) . getQueues ( ) ) ; void ( org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration , this . org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties . getEmbedded ( ) . getTopics ( ) ) ; return org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration ; }  <METHOD_END>
<METHOD_START> private < T > void void ( java.util.List<T> < T > java.util.List<T> , java.util.Collection<? extends T> < ? extends T > java.util.Collection<? extends T> ) { if ( java.util.Collection<> != null ) { java.util.List<T> . boolean ( java.util.Collection<> ) ; } }  <METHOD_END>
<METHOD_START> private void void ( JMSConfiguration org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration , java.lang.String [] java.lang.String[] ) { boolean boolean = this . org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties . getEmbedded ( ) . isPersistent ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { JMSQueueConfigurationImpl org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfigurationImpl = new JMSQueueConfigurationImpl ( ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfigurationImpl . setName ( java.lang.String ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfigurationImpl . setDurable ( boolean ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfigurationImpl . setBindings ( STRING + java.lang.String ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration . getQueueConfigurations ( ) . add ( org.springframework.boot.autoconfigure.jms.artemis.JMSQueueConfigurationImpl ) ; } }  <METHOD_END>
<METHOD_START> private void void ( JMSConfiguration org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration , java.lang.String [] java.lang.String[] ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { TopicConfigurationImpl org.springframework.boot.autoconfigure.jms.artemis.TopicConfigurationImpl = new TopicConfigurationImpl ( ) ; org.springframework.boot.autoconfigure.jms.artemis.TopicConfigurationImpl . setName ( java.lang.String ) ; org.springframework.boot.autoconfigure.jms.artemis.TopicConfigurationImpl . setBindings ( STRING + java.lang.String ) ; org.springframework.boot.autoconfigure.jms.artemis.JMSConfiguration . getTopicConfigurations ( ) . add ( org.springframework.boot.autoconfigure.jms.artemis.TopicConfigurationImpl ) ; } }  <METHOD_END>
