<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( DocumentObjectBinder org.springframework.data.solr.core.convert.DocumentObjectBinder ) { this . org.springframework.data.solr.core.convert.DocumentObjectBinder = org.springframework.data.solr.core.convert.DocumentObjectBinder != null ? org.springframework.data.solr.core.convert.DocumentObjectBinder : new DocumentObjectBinder ( ) ; }  <METHOD_END>
<METHOD_START> public void ( DocumentObjectBinder org.springframework.data.solr.core.convert.DocumentObjectBinder ) { super( org.springframework.data.solr.core.convert.DocumentObjectBinder ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.convert.SolrInputDocument org.springframework.data.solr.core.convert.SolrInputDocument ( java.lang.Object java.lang.Object ) { if ( java.lang.Object == null ) { return null ; } return org.springframework.data.solr.core.convert.DocumentObjectBinder . toSolrInputDocument ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.core.convert.SolrInputDocument org.springframework.data.solr.core.convert.SolrInputDocument ( Update org.springframework.data.solr.core.convert.Update ) { if ( org.springframework.data.solr.core.convert.Update == null ) { return null ; } Assert . notNull ( org.springframework.data.solr.core.convert.Update . getIdField ( ) , STRING ) ; Assert . hasText ( org.springframework.data.solr.core.convert.Update . getIdField ( ) . getName ( ) , STRING ) ; SolrInputDocument org.springframework.data.solr.core.convert.SolrInputDocument = new SolrInputDocument ( ) ; org.springframework.data.solr.core.convert.SolrInputDocument . addField ( org.springframework.data.solr.core.convert.Update . getIdField ( ) . getName ( ) , org.springframework.data.solr.core.convert.Update . getIdField ( ) . getValue ( ) ) ; if ( org.springframework.data.solr.core.convert.Update . getVersion ( ) != null ) { org.springframework.data.solr.core.convert.SolrInputDocument . addField ( java.lang.String , org.springframework.data.solr.core.convert.Update . getVersion ( ) ) ; } for ( UpdateField org.springframework.data.solr.core.convert.UpdateField : org.springframework.data.solr.core.convert.Update . getUpdates ( ) ) { java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.HashMap<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( NUMBER ) ; java.util.HashMap<java.lang.String,java.lang.Object> . java.lang.Object ( org.springframework.data.solr.core.convert.UpdateField . getAction ( ) . getSolrOperation ( ) , java.lang.Object ( org.springframework.data.solr.core.convert.UpdateField ) ) ; org.springframework.data.solr.core.convert.SolrInputDocument . addField ( org.springframework.data.solr.core.convert.UpdateField . getName ( ) , java.util.HashMap<java.lang.String,java.lang.Object> ) ; } return org.springframework.data.solr.core.convert.SolrInputDocument ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( ValueHoldingField org.springframework.data.solr.core.convert.ValueHoldingField ) { if ( org.springframework.data.solr.core.convert.ValueHoldingField . getValue ( ) instanceof java.util.Collection ) { if ( ( ( java.util.Collection<?> < ? > ) org.springframework.data.solr.core.convert.ValueHoldingField . getValue ( ) ) . boolean ( ) ) { return null ; } } return org.springframework.data.solr.core.convert.ValueHoldingField . getValue ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<T> < T > java.lang.Class<T> ) { this( java.lang.Class<T> , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<T> < T > java.lang.Class<T> , DocumentObjectBinder org.springframework.data.solr.core.convert.DocumentObjectBinder ) { super( org.springframework.data.solr.core.convert.DocumentObjectBinder ); this . java.lang.Class<T> = java.lang.Class<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { if ( java.util.Map<java.lang.String,> == null ) { return null ; } SolrDocument org.springframework.data.solr.core.convert.SolrDocument = new SolrDocument ( ) ; org.springframework.data.solr.core.convert.SolrDocument . putAll ( java.util.Map<java.lang.String,> ) ; return org.springframework.data.solr.core.convert.DocumentObjectBinder . getBean ( java.lang.Class<T> , org.springframework.data.solr.core.convert.SolrDocument ) ; }  <METHOD_END>
