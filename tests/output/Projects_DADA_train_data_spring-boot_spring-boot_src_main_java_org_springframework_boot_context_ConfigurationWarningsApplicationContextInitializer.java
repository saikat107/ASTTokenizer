<METHOD_START> @ java.lang.Override public void void ( ConfigurableApplicationContext org.springframework.boot.context.ConfigurableApplicationContext ) { org.springframework.boot.context.ConfigurableApplicationContext . addBeanFactoryPostProcessor ( new org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.ConfigurationWarningsPostProcessor ( org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check[] ( ) ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check [] org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check[] ( ) { return new org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check [] { new org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.ComponentScanPackageCheck ( ) } ; }  <METHOD_END>
<METHOD_START> public void ( org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check [] org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check[] ) { this . org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check[] = org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return Ordered . LOWEST_PRECEDENCE - NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableListableBeanFactory org.springframework.boot.context.ConfigurableListableBeanFactory )				throws org.springframework.boot.context.BeansException {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanDefinitionRegistry org.springframework.boot.context.BeanDefinitionRegistry )				throws org.springframework.boot.context.BeansException { for ( org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check : this . org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check[] ) { java.lang.String java.lang.String = org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check . java.lang.String ( org.springframework.boot.context.BeanDefinitionRegistry ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { void ( java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { if ( org.springframework.boot.context.Log . isWarnEnabled ( ) ) { org.springframework.boot.context.Log . warn ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; } }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( BeanDefinitionRegistry org.springframework.boot.context.BeanDefinitionRegistry );  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( BeanDefinitionRegistry org.springframework.boot.context.BeanDefinitionRegistry ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = java.util.Set<java.lang.String> ( org.springframework.boot.context.BeanDefinitionRegistry ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.List<java.lang.String> ( java.util.Set<java.lang.String> ) ; if ( java.util.List<java.lang.String> . boolean ( ) ) { return null ; } return STRING + STRING + StringUtils . collectionToDelimitedString ( java.util.List<java.lang.String> , STRING ) + STRING ; }  <METHOD_END>
<METHOD_START> protected java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( BeanDefinitionRegistry org.springframework.boot.context.BeanDefinitionRegistry ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.LinkedHashSet<java.lang.String> <> ( ) ; java.lang.String [] java.lang.String[] = org.springframework.boot.context.BeanDefinitionRegistry . getBeanDefinitionNames ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { BeanDefinition org.springframework.boot.context.BeanDefinition = org.springframework.boot.context.BeanDefinitionRegistry . getBeanDefinition ( java.lang.String ) ; if ( org.springframework.boot.context.BeanDefinition instanceof AnnotatedBeanDefinition ) { AnnotatedBeanDefinition org.springframework.boot.context.AnnotatedBeanDefinition = ( AnnotatedBeanDefinition ) org.springframework.boot.context.BeanDefinition ; void ( java.util.Set<java.lang.String> , org.springframework.boot.context.AnnotatedBeanDefinition . getMetadata ( ) ) ; } } return java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> , AnnotationMetadata org.springframework.boot.context.AnnotationMetadata ) { AnnotationAttributes org.springframework.boot.context.AnnotationAttributes = AnnotationAttributes . fromMap ( org.springframework.boot.context.AnnotationMetadata . getAnnotationAttributes ( ComponentScan .class . java.lang.String ( ) , true ) ) ; if ( org.springframework.boot.context.AnnotationAttributes != null ) { void ( java.util.Set<java.lang.String> , org.springframework.boot.context.AnnotationAttributes . getStringArray ( STRING ) ) ; void ( java.util.Set<java.lang.String> , org.springframework.boot.context.AnnotationAttributes . getStringArray ( STRING ) ) ; void ( java.util.Set<java.lang.String> , org.springframework.boot.context.AnnotationAttributes . getStringArray ( STRING ) ) ; if ( java.util.Set<java.lang.String> . boolean ( ) ) { java.util.Set<java.lang.String> . boolean ( ClassUtils . getPackageName ( org.springframework.boot.context.AnnotationMetadata . getClassName ( ) ) ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> , java.lang.String [] java.lang.String[] ) { if ( java.lang.String[] != null ) { java.util.Collections . boolean ( java.util.Set<java.lang.String> , java.lang.String[] ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> , java.lang.String [] java.lang.String[] ) { if ( java.lang.String[] != null ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { java.util.Set<java.lang.String> . boolean ( ClassUtils . getPackageName ( java.lang.String ) ) ; } } }  <METHOD_END>
<METHOD_START> private java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ) { if ( boolean ( java.lang.String ) ) { java.util.List<java.lang.String> . boolean ( java.lang.String ( java.lang.String ) ) ; } } return java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.String java.lang.String ) { if ( java.lang.String == null || java.lang.String . boolean ( ) ) { return true ; } return java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( java.lang.String == null || java.lang.String . boolean ( ) ) { return STRING ; } return STRING + java.lang.String + STRING ; }  <METHOD_END>
