<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , new java.lang.Integer ( NUMBER ) ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( IntegrationMessageHeaderAccessor . SEQUENCE_SIZE , NUMBER ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( IntegrationMessageHeaderAccessor . SEQUENCE_NUMBER , NUMBER ) ; GenericMessage < java.lang.String > org.springframework.integration.message.GenericMessage<java.lang.String> = new GenericMessage < java.lang.String > ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ; assertEquals ( new java.lang.Integer ( NUMBER ) , org.springframework.integration.message.GenericMessage<java.lang.String> . getHeaders ( ) . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.integration.message.GenericMessage<java.lang.String> . getHeaders ( ) . get ( STRING , java.lang.String .class ) ) ; assertEquals ( new java.lang.Integer ( NUMBER ) , new IntegrationMessageHeaderAccessor ( org.springframework.integration.message.GenericMessage<java.lang.String> ) . getSequenceSize ( ) ) ; assertEquals ( new java.lang.Integer ( NUMBER ) , new IntegrationMessageHeaderAccessor ( org.springframework.integration.message.GenericMessage<java.lang.String> ) . getSequenceNumber ( ) ) ; }  <METHOD_END>
