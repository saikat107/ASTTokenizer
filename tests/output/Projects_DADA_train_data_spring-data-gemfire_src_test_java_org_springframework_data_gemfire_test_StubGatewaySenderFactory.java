<METHOD_START> public void ( ) { this . java.util.List<org.springframework.data.gemfire.test.GatewayEventFilter> = new java.util.ArrayList <> ( ) ; this . java.util.List<org.springframework.data.gemfire.test.GatewayTransportFilter> = new java.util.ArrayList <> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( GatewayEventFilter org.springframework.data.gemfire.test.GatewayEventFilter ) { java.util.List<org.springframework.data.gemfire.test.GatewayEventFilter> . add ( org.springframework.data.gemfire.test.GatewayEventFilter ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( GatewayTransportFilter org.springframework.data.gemfire.test.GatewayTransportFilter ) { java.util.List<org.springframework.data.gemfire.test.GatewayTransportFilter> . add ( org.springframework.data.gemfire.test.GatewayTransportFilter ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySender org.springframework.data.gemfire.test.GatewaySender ( final java.lang.String java.lang.String , final int int ) { GatewaySender org.springframework.data.gemfire.test.GatewaySender = mock ( GatewaySender .class ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getId ( ) ) . thenReturn ( java.lang.String ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getRemoteDSId ( ) ) . thenReturn ( int ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getAlertThreshold ( ) ) . thenReturn ( this . int ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getGatewayEventFilters ( ) ) . thenReturn ( this . java.util.List<org.springframework.data.gemfire.test.GatewayEventFilter> ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getGatewayEventSubstitutionFilter ( ) ) . thenReturn ( org.springframework.data.gemfire.test.GatewayEventSubstitutionFilter<,> ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getGatewayTransportFilters ( ) ) . thenReturn ( this . java.util.List<org.springframework.data.gemfire.test.GatewayTransportFilter> ) ; when ( org.springframework.data.gemfire.test.GatewaySender . isManualStart ( ) ) . thenReturn ( this . boolean ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getSocketBufferSize ( ) ) . thenReturn ( this . int ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getSocketReadTimeout ( ) ) . thenReturn ( this . int ) ; when ( org.springframework.data.gemfire.test.GatewaySender . isBatchConflationEnabled ( ) ) . thenReturn ( this . boolean ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getBatchSize ( ) ) . thenReturn ( this . int ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getBatchTimeInterval ( ) ) . thenReturn ( this . int ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getDiskStoreName ( ) ) . thenReturn ( this . java.lang.String ) ; when ( org.springframework.data.gemfire.test.GatewaySender . isDiskSynchronous ( ) ) . thenReturn ( this . boolean ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getDispatcherThreads ( ) ) . thenReturn ( this . int ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getMaximumQueueMemory ( ) ) . thenReturn ( this . int ) ; when ( org.springframework.data.gemfire.test.GatewaySender . isParallel ( ) ) . thenReturn ( this . boolean ) ; when ( org.springframework.data.gemfire.test.GatewaySender . isPersistenceEnabled ( ) ) . thenReturn ( this . boolean ) ; when ( org.springframework.data.gemfire.test.GatewaySender . getOrderPolicy ( ) ) . thenReturn ( this . org.springframework.data.gemfire.test.OrderPolicy ) ; when ( org.springframework.data.gemfire.test.GatewaySender . isRunning ( ) ) . thenAnswer ( new Answer < java.lang.Boolean > ( ) { @ java.lang.Override public java.lang.Boolean java.lang.Boolean ( InvocationOnMock org.springframework.data.gemfire.test.InvocationOnMock ) throws java.lang.Throwable { return boolean ; } } ) ; doAnswer ( new Answer < java.lang.Void > ( ) { public java.lang.Void java.lang.Void ( InvocationOnMock org.springframework.data.gemfire.test.InvocationOnMock ) { boolean = true ; return null ; } } ) . when ( org.springframework.data.gemfire.test.GatewaySender ) . start ( ) ; return org.springframework.data.gemfire.test.GatewaySender ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Boolean java.lang.Boolean ( InvocationOnMock org.springframework.data.gemfire.test.InvocationOnMock ) throws java.lang.Throwable { return boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Void java.lang.Void ( InvocationOnMock org.springframework.data.gemfire.test.InvocationOnMock ) { boolean = true ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( GatewayEventFilter org.springframework.data.gemfire.test.GatewayEventFilter ) { this . java.util.List<org.springframework.data.gemfire.test.GatewayEventFilter> . remove ( org.springframework.data.gemfire.test.GatewayEventFilter ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( OrderPolicy org.springframework.data.gemfire.test.OrderPolicy ) { this . org.springframework.data.gemfire.test.OrderPolicy = org.springframework.data.gemfire.test.OrderPolicy ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( GatewayTransportFilter org.springframework.data.gemfire.test.GatewayTransportFilter ) { return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( final int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.test.GatewaySenderFactory org.springframework.data.gemfire.test.GatewaySenderFactory ( final GatewayEventSubstitutionFilter org.springframework.data.gemfire.test.GatewayEventSubstitutionFilter ) { this . org.springframework.data.gemfire.test.GatewayEventSubstitutionFilter<?,?> = org.springframework.data.gemfire.test.GatewayEventSubstitutionFilter ; return this ; }  <METHOD_END>
