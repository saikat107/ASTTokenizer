<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Destination org.springframework.integration.jms.Destination = new Destination ( ) {		} ; Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( JmsHeaders . REPLY_TO , org.springframework.integration.jms.Destination ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; assertNotNull ( javax.jms.Message . getJMSReplyTo ( ) ) ; assertSame ( org.springframework.integration.jms.Destination , javax.jms.Message . getJMSReplyTo ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( JmsHeaders . REPLY_TO , STRING ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; assertNull ( javax.jms.Message . getJMSReplyTo ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { java.lang.String java.lang.String = STRING ; Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( JmsHeaders . CORRELATION_ID , java.lang.String ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; assertNotNull ( javax.jms.Message . getJMSCorrelationID ( ) ) ; assertEquals ( java.lang.String , javax.jms.Message . getJMSCorrelationID ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( JmsHeaders . CORRELATION_ID , new java.lang.Integer ( NUMBER ) ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; assertEquals ( STRING , javax.jms.Message . getJMSCorrelationID ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( JmsHeaders . CORRELATION_ID , new java.util.Date ( ) ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; assertNull ( javax.jms.Message . getJMSCorrelationID ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { java.lang.String java.lang.String = STRING ; Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( JmsHeaders . TYPE , java.lang.String ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; assertNotNull ( javax.jms.Message . getJMSType ( ) ) ; assertEquals ( java.lang.String , javax.jms.Message . getJMSType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( JmsHeaders . TYPE , new java.lang.Integer ( NUMBER ) ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; assertNull ( javax.jms.Message . getJMSType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( MessageHeaders . CONTENT_TYPE , STRING ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; java.lang.Object java.lang.Object = javax.jms.Message . getObjectProperty ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , new java.lang.Integer ( NUMBER ) ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; java.lang.Object java.lang.Object = javax.jms.Message . getObjectProperty ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( java.lang.Integer .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; assertEquals ( NUMBER , ( ( java.lang.Integer ) java.lang.Object ) . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , new java.lang.Integer ( NUMBER ) ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . setOutboundPrefix ( STRING ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; java.lang.Object java.lang.Object = javax.jms.Message . getObjectProperty ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( java.lang.Integer .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; assertEquals ( NUMBER , ( ( java.lang.Integer ) java.lang.Object ) . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Destination org.springframework.integration.jms.Destination = new Destination ( ) {		} ; Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , org.springframework.integration.jms.Destination ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; java.lang.Object java.lang.Object = javax.jms.Message . getObjectProperty ( STRING ) ; assertNull ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Destination org.springframework.integration.jms.Destination = new Destination ( ) {		} ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; javax.jms.Message . setJMSReplyTo ( org.springframework.integration.jms.Destination ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . REPLY_TO ) ; assertNotNull ( java.lang.Object ) ; assertSame ( org.springframework.integration.jms.Destination , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { java.lang.String java.lang.String = STRING ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; javax.jms.Message . setJMSMessageID ( java.lang.String ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . MESSAGE_ID ) ; assertNotNull ( java.lang.Object ) ; assertSame ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { java.lang.String java.lang.String = STRING ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; javax.jms.Message . setJMSCorrelationID ( java.lang.String ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . CORRELATION_ID ) ; assertNotNull ( java.lang.Object ) ; assertSame ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { java.lang.String java.lang.String = STRING ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; javax.jms.Message . setJMSType ( java.lang.String ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . TYPE ) ; assertNotNull ( java.lang.Object ) ; assertSame ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { long long = NUMBER ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; javax.jms.Message . setJMSTimestamp ( long ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . TIMESTAMP ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( long , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; javax.jms.Message . setJMSPriority ( NUMBER ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( IntegrationMessageHeaderAccessor . PRIORITY ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( NUMBER , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; javax.jms.Message . setJMSPriority ( NUMBER ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . setMapInboundPriority ( false ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( IntegrationMessageHeaderAccessor . PRIORITY ) ; assertNull ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; javax.jms.Message . setStringProperty ( STRING , STRING ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( MessageHeaders . CONTENT_TYPE ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; javax.jms.Message . setIntProperty ( STRING , NUMBER ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( java.lang.Integer .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; assertEquals ( NUMBER , ( ( java.lang.Integer ) java.lang.Object ) . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) ; javax.jms.Message . setIntProperty ( STRING , NUMBER ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . setInboundPrefix ( STRING ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; java.lang.Object java.lang.Object = java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( java.lang.Integer .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; assertEquals ( NUMBER , ( ( java.lang.Integer ) java.lang.Object ) . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , new java.lang.Integer ( NUMBER ) ) . setHeader ( STRING , new java.lang.Integer ( NUMBER ) ) . setHeader ( STRING , new java.lang.Integer ( NUMBER ) ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) { @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) throws org.springframework.integration.jms.JMSException { if ( java.lang.String . boolean ( STRING ) ) { throw new JMSException ( STRING ) ; } super. setObjectProperty ( java.lang.String , java.lang.Object ) ; } } ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; java.lang.Object java.lang.Object = javax.jms.Message . getObjectProperty ( STRING ) ; assertNotNull ( java.lang.Object ) ; java.lang.Object java.lang.Object = javax.jms.Message . getObjectProperty ( STRING ) ; assertNotNull ( java.lang.Object ) ; java.lang.Object java.lang.Object = javax.jms.Message . getObjectProperty ( STRING ) ; assertNull ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) throws org.springframework.integration.jms.JMSException { if ( java.lang.String . boolean ( STRING ) ) { throw new JMSException ( STRING ) ; } super. setObjectProperty ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , new java.lang.Integer ( NUMBER ) ) . setHeader ( STRING , new java.lang.Integer ( NUMBER ) ) . setHeader ( STRING , new java.lang.Integer ( NUMBER ) ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) { @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) throws org.springframework.integration.jms.JMSException { if ( java.lang.String . boolean ( STRING ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } super. setObjectProperty ( java.lang.String , java.lang.Object ) ; } } ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; java.lang.Object java.lang.Object = javax.jms.Message . getObjectProperty ( STRING ) ; assertNotNull ( java.lang.Object ) ; java.lang.Object java.lang.Object = javax.jms.Message . getObjectProperty ( STRING ) ; assertNotNull ( java.lang.Object ) ; java.lang.Object java.lang.Object = javax.jms.Message . getObjectProperty ( STRING ) ; assertNull ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) throws org.springframework.integration.jms.JMSException { if ( java.lang.String . boolean ( STRING ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } super. setObjectProperty ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( JmsHeaders . REPLY_TO , new StubDestination ( ) ) . setHeader ( STRING , STRING ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) { @ java.lang.Override public void void ( Destination org.springframework.integration.jms.Destination ) throws org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; } } ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; assertNull ( javax.jms.Message . getJMSReplyTo ( ) ) ; assertNotNull ( javax.jms.Message . getStringProperty ( STRING ) ) ; assertEquals ( STRING , javax.jms.Message . getStringProperty ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Destination org.springframework.integration.jms.Destination ) throws org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( JmsHeaders . TYPE , STRING ) . setHeader ( STRING , STRING ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) { @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; } } ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; assertNull ( javax.jms.Message . getJMSType ( ) ) ; assertNotNull ( javax.jms.Message . getStringProperty ( STRING ) ) ; assertEquals ( STRING , javax.jms.Message . getStringProperty ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( JmsHeaders . CORRELATION_ID , STRING ) . setHeader ( STRING , STRING ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) { @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; } } ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; assertNull ( javax.jms.Message . getJMSCorrelationID ( ) ) ; assertNotNull ( javax.jms.Message . getStringProperty ( STRING ) ) ; assertEquals ( STRING , javax.jms.Message . getStringProperty ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( JmsHeaders . CORRELATION_ID , new java.lang.Integer ( NUMBER ) ) . setHeader ( STRING , STRING ) . build ( ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) { @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; } } ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( org.springframework.integration.jms.Message<java.lang.String> . getHeaders ( ) , javax.jms.Message ) ; assertNull ( javax.jms.Message . getJMSCorrelationID ( ) ) ; assertNotNull ( javax.jms.Message . getStringProperty ( STRING ) ) ; assertEquals ( STRING , javax.jms.Message . getStringProperty ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) { @ java.lang.Override public java.lang.String java.lang.String ( ) org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; } } ; javax.jms.Message . setStringProperty ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; assertNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . MESSAGE_ID ) ) ; assertNotNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) { @ java.lang.Override public java.lang.String java.lang.String ( ) org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; } } ; javax.jms.Message . setStringProperty ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; assertNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . CORRELATION_ID ) ) ; assertNotNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) { @ java.lang.Override public java.lang.String java.lang.String ( ) org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; } } ; javax.jms.Message . setStringProperty ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; assertNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . TYPE ) ) ; assertNotNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) { @ java.lang.Override public org.springframework.integration.jms.Destination org.springframework.integration.jms.Destination ( ) org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; } } ; javax.jms.Message . setStringProperty ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; assertNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . REPLY_TO ) ) ; assertNotNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.jms.Destination org.springframework.integration.jms.Destination ( ) org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; javax . javax.jms . javax.jms javax.jms.Message = new StubTextMessage ( ) { @ java.lang.Override public boolean boolean ( ) org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; } } ; javax.jms.Message . setStringProperty ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; assertNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . REDELIVERED ) ) ; assertNotNull ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) org.springframework.integration.jms.JMSException { throw new JMSException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.integration.jms.JMSException { MappingJackson2MessageConverter org.springframework.integration.jms.MappingJackson2MessageConverter = new MappingJackson2MessageConverter ( ) ; org.springframework.integration.jms.MappingJackson2MessageConverter . setTargetType ( MessageType . TEXT ) ; org.springframework.integration.jms.MappingJackson2MessageConverter . setTypeIdPropertyName ( STRING ) ; Session org.springframework.integration.jms.Session = Mockito . mock ( Session .class ) ; Mockito . doAnswer ( invocation -> new StubTextMessage ( invocation . getArgument ( NUMBER ) ) ) . when ( org.springframework.integration.jms.Session ) . createTextMessage ( Mockito . anyString ( ) ) ; javax . javax.jms . javax.jms javax.jms.Message = org.springframework.integration.jms.MappingJackson2MessageConverter . toMessage ( new org.springframework.integration.jms.DefaultJmsHeaderMapperTests.Foo ( ) , org.springframework.integration.jms.Session ) ; DefaultJmsHeaderMapper org.springframework.integration.jms.DefaultJmsHeaderMapper = new DefaultJmsHeaderMapper ( ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.integration.jms.DefaultJmsHeaderMapper . toHeaders ( javax.jms.Message ) ; javax . javax.jms . javax.jms javax.jms.Message = org.springframework.integration.jms.MappingJackson2MessageConverter . toMessage ( STRING , org.springframework.integration.jms.Session ) ; org.springframework.integration.jms.DefaultJmsHeaderMapper . fromHeaders ( new MessageHeaders ( java.util.Map<java.lang.String,java.lang.Object> ) , javax.jms.Message ) ; java.lang.Object java.lang.Object = org.springframework.integration.jms.MappingJackson2MessageConverter . fromMessage ( javax.jms.Message ) ; assertThat ( java.lang.Object , instanceOf ( java.lang.String .class ) ) ; }  <METHOD_END>
