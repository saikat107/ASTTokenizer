<METHOD_START> public void void ( StringValueResolver org.springframework.integration.monitor.StringValueResolver ) { this . org.springframework.integration.monitor.StringValueResolver = org.springframework.integration.monitor.StringValueResolver ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.monitor.BeanFactory ) { super. setBeanFactory ( org.springframework.integration.monitor.BeanFactory ) ; if ( org.springframework.integration.monitor.BeanFactory instanceof ConfigurableBeanFactory ) { this . org.springframework.integration.monitor.StringValueResolver = new EmbeddedValueResolver ( ( ConfigurableBeanFactory ) org.springframework.integration.monitor.BeanFactory ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.monitor.ManagedResource org.springframework.integration.monitor.ManagedResource ( java.lang.Class<?> < ? > java.lang.Class<?> ) throws org.springframework.integration.monitor.InvalidMetadataException { IntegrationManagedResource org.springframework.integration.monitor.IntegrationManagedResource = AnnotationUtils . getAnnotation ( java.lang.Class<> , IntegrationManagedResource .class ) ; if ( org.springframework.integration.monitor.IntegrationManagedResource == null ) { return null ; } ManagedResource org.springframework.integration.monitor.ManagedResource = new ManagedResource ( ) ; AnnotationBeanUtils . copyPropertiesToBean ( org.springframework.integration.monitor.IntegrationManagedResource , org.springframework.integration.monitor.ManagedResource , this . org.springframework.integration.monitor.StringValueResolver ) ; return org.springframework.integration.monitor.ManagedResource ; }  <METHOD_END>
