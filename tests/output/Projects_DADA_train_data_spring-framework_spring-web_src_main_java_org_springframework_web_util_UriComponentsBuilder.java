<METHOD_START> protected void ( ) { this . org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder = new org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder ( ) ; }  <METHOD_END>
<METHOD_START> protected void ( org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ) { this . java.lang.String = org.springframework.web.util.UriComponentsBuilder . java.lang.String ; this . java.lang.String = org.springframework.web.util.UriComponentsBuilder . java.lang.String ; this . java.lang.String = org.springframework.web.util.UriComponentsBuilder . java.lang.String ; this . java.lang.String = org.springframework.web.util.UriComponentsBuilder . java.lang.String ; this . java.lang.String = org.springframework.web.util.UriComponentsBuilder . java.lang.String ; this . org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder = org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder . org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder ( ) ; this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> . putAll ( org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> ) ; this . java.lang.String = org.springframework.web.util.UriComponentsBuilder . java.lang.String ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( ) { return new org.springframework.web.util.UriComponentsBuilder ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder = new org.springframework.web.util.UriComponentsBuilder ( ) ; org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; return org.springframework.web.util.UriComponentsBuilder ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.net.URI java.net.URI ) { org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder = new org.springframework.web.util.UriComponentsBuilder ( ) ; org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.net.URI ) ; return org.springframework.web.util.UriComponentsBuilder ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; if ( java.util.regex.Matcher . boolean ( ) ) { org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder = new org.springframework.web.util.UriComponentsBuilder ( ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; boolean boolean = false ; if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( java.lang.String . int ( ) ) ; if ( ! java.lang.String . boolean ( STRING ) ) { boolean = true ; } } org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; if ( boolean ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( java.lang.String . int ( ) ) . java.lang.String ( NUMBER ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - ( java.lang.String . int ( ) + NUMBER ) ) ; } org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; } else { org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; } org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; } return org.springframework.web.util.UriComponentsBuilder ; } else { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String + STRING ) ; } }  <METHOD_END>
<METHOD_START> public static org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; if ( java.util.regex.Matcher . boolean ( ) ) { org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder = new org.springframework.web.util.UriComponentsBuilder ( ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String != null ? java.lang.String . java.lang.String ( ) : null ) ; org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.util.regex.Matcher . java.lang.String ( NUMBER ) ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; if ( StringUtils . hasLength ( java.lang.String ) && ! StringUtils . hasLength ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String + STRING ) ; } org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; } org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.util.regex.Matcher . java.lang.String ( NUMBER ) ) ; org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.util.regex.Matcher . java.lang.String ( NUMBER ) ) ; return org.springframework.web.util.UriComponentsBuilder ; } else { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String + STRING ) ; } }  <METHOD_END>
<METHOD_START> public static org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( HttpRequest org.springframework.web.util.HttpRequest ) { return org.springframework.web.util.UriComponentsBuilder ( org.springframework.web.util.HttpRequest . getURI ( ) ) . adaptFromForwardedHeaders ( org.springframework.web.util.HttpRequest . getHeaders ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; if ( java.util.regex.Matcher . boolean ( ) ) { org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder = new org.springframework.web.util.UriComponentsBuilder ( ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; } org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.web.util.UriComponentsBuilder . org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; } return org.springframework.web.util.UriComponentsBuilder ; } else { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String + STRING ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( ) { return org.springframework.web.util.UriComponents ( false ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( boolean boolean ) { if ( this . java.lang.String != null ) { return new OpaqueUriComponents ( this . java.lang.String , this . java.lang.String , this . java.lang.String ) ; } else { return new HierarchicalUriComponents ( this . java.lang.String , this . java.lang.String , this . java.lang.String , this . java.lang.String , this . org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder . org.springframework.web.util.PathComponent ( ) , this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> , this . java.lang.String , boolean , true ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { return org.springframework.web.util.UriComponents ( false ) . expand ( java.util.Map<java.lang.String,> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( java.lang.Object ... java.lang.Object[] ) { return org.springframework.web.util.UriComponents ( false ) . expand ( java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URI java.net.URI ( java.lang.Object ... java.lang.Object[] ) { return org.springframework.web.util.UriComponents ( java.lang.Object[] ) . encode ( ) . toUri ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URI java.net.URI ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { return org.springframework.web.util.UriComponents ( java.util.Map<java.lang.String,> ) . encode ( ) . toUri ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return org.springframework.web.util.UriComponents ( false ) . encode ( ) . toUriString ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.net.URI java.net.URI ) { Assert . notNull ( java.net.URI , STRING ) ; this . java.lang.String = java.net.URI . java.lang.String ( ) ; if ( java.net.URI . boolean ( ) ) { this . java.lang.String = java.net.URI . java.lang.String ( ) ; void ( ) ; } else { if ( java.net.URI . java.lang.String ( ) != null ) { this . java.lang.String = java.net.URI . java.lang.String ( ) ; } if ( java.net.URI . java.lang.String ( ) != null ) { this . java.lang.String = java.net.URI . java.lang.String ( ) ; } if ( java.net.URI . int ( ) != - NUMBER ) { this . java.lang.String = java.lang.String . java.lang.String ( java.net.URI . int ( ) ) ; } if ( StringUtils . hasLength ( java.net.URI . java.lang.String ( ) ) ) { this . org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder = new org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder ( java.net.URI . java.lang.String ( ) ) ; } if ( StringUtils . hasLength ( java.net.URI . java.lang.String ( ) ) ) { this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> . clear ( ) ; org.springframework.web.util.UriComponentsBuilder ( java.net.URI . java.lang.String ( ) ) ; } void ( ) ; } if ( java.net.URI . java.lang.String ( ) != null ) { this . java.lang.String = java.net.URI . java.lang.String ( ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( UriComponents org.springframework.web.util.UriComponents ) { Assert . notNull ( org.springframework.web.util.UriComponents , STRING ) ; org.springframework.web.util.UriComponents . copyToUriComponentsBuilder ( this ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( int int ) { Assert . isTrue ( int >= - NUMBER , STRING ) ; this . java.lang.String = java.lang.String . java.lang.String ( int ) ; void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { this . org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder . void ( java.lang.String ) ; void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { this . org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder = new org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder ( java.lang.String ) ; void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String ... java.lang.String[] ) throws java.lang.IllegalArgumentException { this . org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder . void ( java.lang.String[] ) ; void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { if ( java.lang.String != null ) { java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; while ( java.util.regex.Matcher . boolean ( ) ) { java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; org.springframework.web.util.UriComponentsBuilder ( java.lang.String , ( java.lang.String != null ? java.lang.String : ( StringUtils . hasLength ( java.lang.String ) ? STRING : null ) ) ) ; } } else { this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> . clear ( ) ; } void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> . clear ( ) ; org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { Assert . notNull ( java.lang.String , STRING ) ; if ( ! ObjectUtils . isEmpty ( java.lang.Object[] ) ) { for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { java.lang.String java.lang.String = ( java.lang.Object != null ? java.lang.Object . java.lang.String ( ) : null ) ; this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> . add ( java.lang.String , java.lang.String ) ; } } else { this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> . add ( java.lang.String , null ) ; } void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> ) { if ( org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> != null ) { this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> . putAll ( org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { Assert . notNull ( java.lang.String , STRING ) ; this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> . remove ( java.lang.String ) ; if ( ! ObjectUtils . isEmpty ( java.lang.Object[] ) ) { org.springframework.web.util.UriComponentsBuilder ( java.lang.String , java.lang.Object[] ) ; } void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( MultiValueMap < java.lang.String , java.lang.String > org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> ) { this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> . clear ( ) ; if ( org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> != null ) { this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> . putAll ( org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( java.lang.String java.lang.String ) { if ( java.lang.String != null ) { Assert . hasLength ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; } else { this . java.lang.String = null ; } return this ; }  <METHOD_END>
<METHOD_START> org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( HttpHeaders org.springframework.web.util.HttpHeaders ) { java.lang.String java.lang.String = org.springframework.web.util.HttpHeaders . getFirst ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { java.lang.String java.lang.String = StringUtils . tokenizeToStringArray ( java.lang.String , STRING ) [ NUMBER ] ; java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; if ( java.util.regex.Matcher . boolean ( ) ) { org.springframework.web.util.UriComponentsBuilder ( java.util.regex.Matcher . java.lang.String ( NUMBER ) . java.lang.String ( ) ) ; } java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; if ( java.util.regex.Matcher . boolean ( ) ) { org.springframework.web.util.UriComponentsBuilder ( java.util.regex.Matcher . java.lang.String ( NUMBER ) . java.lang.String ( ) ) ; } } else { java.lang.String java.lang.String = org.springframework.web.util.HttpHeaders . getFirst ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { java.lang.String java.lang.String = StringUtils . tokenizeToStringArray ( java.lang.String , STRING ) [ NUMBER ] ; int int = java.lang.String . int ( STRING ) ; if ( int > java.lang.String . int ( STRING ) ) { org.springframework.web.util.UriComponentsBuilder ( java.lang.String . java.lang.String ( NUMBER , int ) ) ; org.springframework.web.util.UriComponentsBuilder ( java.lang.Integer . int ( java.lang.String . java.lang.String ( int + NUMBER ) ) ) ; } else { org.springframework.web.util.UriComponentsBuilder ( java.lang.String ) ; org.springframework.web.util.UriComponentsBuilder ( null ) ; } } java.lang.String java.lang.String = org.springframework.web.util.HttpHeaders . getFirst ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.web.util.UriComponentsBuilder ( java.lang.Integer . int ( StringUtils . tokenizeToStringArray ( java.lang.String , STRING ) [ NUMBER ] ) ) ; } java.lang.String java.lang.String = org.springframework.web.util.HttpHeaders . getFirst ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.web.util.UriComponentsBuilder ( StringUtils . tokenizeToStringArray ( java.lang.String , STRING ) [ NUMBER ] ) ; } } if ( ( this . java.lang.String != null ) && ( ( this . java.lang.String . boolean ( STRING ) && STRING . boolean ( this . java.lang.String ) ) || ( this . java.lang.String . boolean ( STRING ) && STRING . boolean ( this . java.lang.String ) ) ) ) { this . java.lang.String = null ; } return this ; }  <METHOD_END>
<METHOD_START> private void void ( ) { this . java.lang.String = null ; this . java.lang.String = null ; this . java.lang.String = null ; this . org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder = new org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder ( ) ; this . org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> . clear ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { this . java.lang.String = null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) { return org.springframework.web.util.UriComponentsBuilder ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ( ) { return new org.springframework.web.util.UriComponentsBuilder ( this ) ; }  <METHOD_END>
<METHOD_START> org.springframework.web.util.PathComponent org.springframework.web.util.PathComponent ( )  <METHOD_END>
<METHOD_START> org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder ( )  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { if ( ! ObjectUtils . isEmpty ( java.lang.String[] ) ) { org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder = org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder ( org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder .class ) ; org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder = org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder ( org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder .class ) ; if ( org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder == null ) { org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder = new org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder ( ) ; this . java.util.LinkedList<org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder> . boolean ( org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder ) ; if ( org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder != null ) { org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder . void ( ) ; } } org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder . void ( java.lang.String[] ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder = org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder ( org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder .class ) ; org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder = org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder ( org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder .class ) ; if ( org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder != null ) { java.lang.String = java.lang.String . boolean ( STRING ) ? java.lang.String : STRING + java.lang.String ; } if ( org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder == null ) { org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder = new org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder ( ) ; this . java.util.LinkedList<org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder> . boolean ( org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder ) ; } org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder . void ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) { if ( ! this . java.util.LinkedList<org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder> . boolean ( ) ) { org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder = this . java.util.LinkedList<org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder> . org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder ( ) ; if ( java.lang.Class<T> . boolean ( org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder ) ) { return ( T ) org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder ; } } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.util.PathComponent org.springframework.web.util.PathComponent ( ) { int int = this . java.util.LinkedList<org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder> . int ( ) ; java.util.List<org.springframework.web.util.PathComponent> < PathComponent > java.util.List<org.springframework.web.util.PathComponent> = new java.util.ArrayList<org.springframework.web.util.PathComponent> <> ( int ) ; for ( org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder : this . java.util.LinkedList<org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder> ) { PathComponent org.springframework.web.util.PathComponent = org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder . org.springframework.web.util.PathComponent ( ) ; if ( org.springframework.web.util.PathComponent != null ) { java.util.List<org.springframework.web.util.PathComponent> . add ( org.springframework.web.util.PathComponent ) ; } } if ( java.util.List<org.springframework.web.util.PathComponent> . isEmpty ( ) ) { return HierarchicalUriComponents . NULL_PATH_COMPONENT ; } if ( java.util.List<org.springframework.web.util.PathComponent> . size ( ) == NUMBER ) { return java.util.List<org.springframework.web.util.PathComponent> . get ( NUMBER ) ; } return new HierarchicalUriComponents . HierarchicalUriComponents ( java.util.List<org.springframework.web.util.PathComponent> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder ( ) { org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder = new org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder ( ) ; for ( org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder : this . java.util.LinkedList<org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder> ) { org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder . java.util.LinkedList<org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder> . boolean ( org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder . org.springframework.web.util.UriComponentsBuilder.PathComponentBuilder ( ) ) ; } return org.springframework.web.util.UriComponentsBuilder.CompositePathComponentBuilder ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.util.PathComponent org.springframework.web.util.PathComponent ( ) { if ( this . java.lang.StringBuilder . int ( ) == NUMBER ) { return null ; } java.lang.String java.lang.String = this . java.lang.StringBuilder . java.lang.String ( ) ; while ( true ) { int int = java.lang.String . int ( STRING ) ; if ( int == - NUMBER ) { break; } java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) + java.lang.String . java.lang.String ( int + NUMBER ) ; } return new HierarchicalUriComponents . HierarchicalUriComponents ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { int int = this . java.lang.StringBuilder . int ( ) - NUMBER ; if ( this . java.lang.StringBuilder . char ( int ) == '/' ) { this . java.lang.StringBuilder . java.lang.StringBuilder ( int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder ( ) { org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder = new org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder ( ) ; org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder . void ( this . java.lang.StringBuilder . java.lang.String ( ) ) ; return org.springframework.web.util.UriComponentsBuilder.FullPathComponentBuilder ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( StringUtils . hasText ( java.lang.String ) ) { this . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.util.PathComponent org.springframework.web.util.PathComponent ( ) { return ( this . java.util.List<java.lang.String> . boolean ( ) ? null : new HierarchicalUriComponents . HierarchicalUriComponents ( this . java.util.List<java.lang.String> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder ( ) { org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder = new org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder ( ) ; org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder . java.util.List<java.lang.String> . boolean ( this . java.util.List<java.lang.String> ) ; return org.springframework.web.util.UriComponentsBuilder.PathSegmentComponentBuilder ; }  <METHOD_END>
