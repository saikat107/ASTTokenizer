<METHOD_START> public void ( ChannelHandlerContext org.springframework.http.client.ChannelHandlerContext , FullHttpResponse org.springframework.http.client.FullHttpResponse ) { Assert . notNull ( org.springframework.http.client.ChannelHandlerContext , STRING ) ; Assert . notNull ( org.springframework.http.client.FullHttpResponse , STRING ) ; this . org.springframework.http.client.ChannelHandlerContext = org.springframework.http.client.ChannelHandlerContext ; this . org.springframework.http.client.FullHttpResponse = org.springframework.http.client.FullHttpResponse ; this . org.springframework.http.client.ByteBufInputStream = new ByteBufInputStream ( this . org.springframework.http.client.FullHttpResponse . content ( ) ) ; this . org.springframework.http.client.FullHttpResponse . retain ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public int int ( ) java.io.IOException { return this . org.springframework.http.client.FullHttpResponse . getStatus ( ) . code ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.lang.String java.lang.String ( ) java.io.IOException { return this . org.springframework.http.client.FullHttpResponse . getStatus ( ) . reasonPhrase ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.client.HttpHeaders org.springframework.http.client.HttpHeaders ( ) { if ( this . org.springframework.http.client.HttpHeaders == null ) { HttpHeaders org.springframework.http.client.HttpHeaders = new HttpHeaders ( ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : this . org.springframework.http.client.FullHttpResponse . headers ( ) ) { org.springframework.http.client.HttpHeaders . add ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } this . org.springframework.http.client.HttpHeaders = org.springframework.http.client.HttpHeaders ; } return this . org.springframework.http.client.HttpHeaders ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.InputStream java.io.InputStream ( ) java.io.IOException { return this . org.springframework.http.client.ByteBufInputStream ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.http.client.FullHttpResponse . release ( ) ; this . org.springframework.http.client.ChannelHandlerContext . close ( ) ; }  <METHOD_END>
