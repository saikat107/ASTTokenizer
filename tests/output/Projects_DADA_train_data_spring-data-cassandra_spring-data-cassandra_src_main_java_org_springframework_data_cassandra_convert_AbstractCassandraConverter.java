<METHOD_START> public void ( ConversionService org.springframework.data.cassandra.convert.ConversionService ) { this . org.springframework.data.cassandra.convert.ConversionService = org.springframework.data.cassandra.convert.ConversionService == null ? new DefaultConversionService ( ) : org.springframework.data.cassandra.convert.ConversionService ; }  <METHOD_END>
<METHOD_START> public void void ( EntityInstantiators org.springframework.data.cassandra.convert.EntityInstantiators ) { this . org.springframework.data.cassandra.convert.EntityInstantiators = org.springframework.data.cassandra.convert.EntityInstantiators == null ? new EntityInstantiators ( ) : org.springframework.data.cassandra.convert.EntityInstantiators ; }  <METHOD_END>
<METHOD_START> public void void ( CustomConversions org.springframework.data.cassandra.convert.CustomConversions ) { this . org.springframework.data.cassandra.convert.CustomConversions = org.springframework.data.cassandra.convert.CustomConversions ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.cassandra.convert.CustomConversions org.springframework.data.cassandra.convert.CustomConversions ( ) { return org.springframework.data.cassandra.convert.CustomConversions ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( org.springframework.data.cassandra.convert.ConversionService instanceof GenericConversionService ) { org.springframework.data.cassandra.convert.CustomConversions . registerConvertersIn ( ( GenericConversionService ) org.springframework.data.cassandra.convert.ConversionService ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.cassandra.convert.ConversionService org.springframework.data.cassandra.convert.ConversionService ( ) { return org.springframework.data.cassandra.convert.ConversionService ; }  <METHOD_END>
