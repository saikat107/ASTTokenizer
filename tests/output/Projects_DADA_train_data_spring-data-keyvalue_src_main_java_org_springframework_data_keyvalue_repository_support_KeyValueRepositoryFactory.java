<METHOD_START> public void ( KeyValueOperations org.springframework.data.keyvalue.repository.support.KeyValueOperations ) { this( org.springframework.data.keyvalue.repository.support.KeyValueOperations , java.lang.Class<org.springframework.data.keyvalue.repository.support.SpelQueryCreator> ); }  <METHOD_END>
<METHOD_START> public void ( KeyValueOperations org.springframework.data.keyvalue.repository.support.KeyValueOperations , java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.AbstractQueryCreator<?,?>> < ? extends AbstractQueryCreator < ? , ? > > java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.AbstractQueryCreator<?,?>> ) { this( org.springframework.data.keyvalue.repository.support.KeyValueOperations , java.lang.Class<> , KeyValuePartTreeQuery .class ); }  <METHOD_END>
<METHOD_START> public void ( KeyValueOperations org.springframework.data.keyvalue.repository.support.KeyValueOperations , java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.AbstractQueryCreator<?,?>> < ? extends AbstractQueryCreator < ? , ? > > java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.AbstractQueryCreator<?,?>> , java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.RepositoryQuery> < ? extends RepositoryQuery > java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.RepositoryQuery> ) { Assert . notNull ( org.springframework.data.keyvalue.repository.support.KeyValueOperations , STRING ) ; Assert . notNull ( java.lang.Class<> , STRING ) ; Assert . notNull ( java.lang.Class<> , STRING ) ; this . java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.AbstractQueryCreator<?,?>> = java.lang.Class<> ; this . org.springframework.data.keyvalue.repository.support.KeyValueOperations = org.springframework.data.keyvalue.repository.support.KeyValueOperations ; this . org.springframework.data.keyvalue.repository.support.MappingContext<?,?> = org.springframework.data.keyvalue.repository.support.KeyValueOperations . getMappingContext ( ) ; this . java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.RepositoryQuery> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public < T , ID extends java.io.Serializable > org.springframework.data.keyvalue.repository.support.EntityInformation<T,ID> < T , ID > org.springframework.data.keyvalue.repository.support.EntityInformation<T,ID> ( java.lang.Class<T> < T > java.lang.Class<T> ) { PersistentEntity < T , ? > org.springframework.data.keyvalue.repository.support.PersistentEntity<T,?> = ( PersistentEntity < T , ? > ) org.springframework.data.keyvalue.repository.support.MappingContext<,> . getPersistentEntity ( java.lang.Class<T> ) . get ( ) ; PersistentEntityInformation < T , ID > org.springframework.data.keyvalue.repository.support.PersistentEntityInformation<T,ID> = new PersistentEntityInformation < T , ID > ( org.springframework.data.keyvalue.repository.support.PersistentEntity<T,> ) ; return org.springframework.data.keyvalue.repository.support.PersistentEntityInformation<T,ID> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( RepositoryInformation org.springframework.data.keyvalue.repository.support.RepositoryInformation ) { EntityInformation < ? , java.io.Serializable > org.springframework.data.keyvalue.repository.support.EntityInformation<?,java.io.Serializable> = org.springframework.data.keyvalue.repository.support.EntityInformation ( org.springframework.data.keyvalue.repository.support.RepositoryInformation . getDomainType ( ) ) ; return super. getTargetRepositoryViaReflection ( org.springframework.data.keyvalue.repository.support.RepositoryInformation , org.springframework.data.keyvalue.repository.support.EntityInformation<,java.io.Serializable> , org.springframework.data.keyvalue.repository.support.KeyValueOperations ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( RepositoryMetadata org.springframework.data.keyvalue.repository.support.RepositoryMetadata ) { return boolean ( org.springframework.data.keyvalue.repository.support.RepositoryMetadata . getRepositoryInterface ( ) ) ? QuerydslKeyValueRepository .class : SimpleKeyValueRepository .class ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return QUERY_DSL_PRESENT && QuerydslPredicateExecutor .class . boolean ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Optional<org.springframework.data.keyvalue.repository.support.QueryLookupStrategy> < QueryLookupStrategy > java.util.Optional<org.springframework.data.keyvalue.repository.support.QueryLookupStrategy> ( Key org.springframework.data.keyvalue.repository.support.Key , EvaluationContextProvider org.springframework.data.keyvalue.repository.support.EvaluationContextProvider ) { return java.util.Optional . java.util.Optional<T> ( new org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.KeyValueQueryLookupStrategy ( org.springframework.data.keyvalue.repository.support.Key , org.springframework.data.keyvalue.repository.support.EvaluationContextProvider , this . org.springframework.data.keyvalue.repository.support.KeyValueOperations , this . java.lang.Class<> , this . java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> public void ( Key org.springframework.data.keyvalue.repository.support.Key , EvaluationContextProvider org.springframework.data.keyvalue.repository.support.EvaluationContextProvider , KeyValueOperations org.springframework.data.keyvalue.repository.support.KeyValueOperations , java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.AbstractQueryCreator<?,?>> < ? extends AbstractQueryCreator < ? , ? > > java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.AbstractQueryCreator<?,?>> ) { this( org.springframework.data.keyvalue.repository.support.Key , org.springframework.data.keyvalue.repository.support.EvaluationContextProvider , org.springframework.data.keyvalue.repository.support.KeyValueOperations , java.lang.Class<> , KeyValuePartTreeQuery .class ); }  <METHOD_END>
<METHOD_START> public void ( Key org.springframework.data.keyvalue.repository.support.Key , EvaluationContextProvider org.springframework.data.keyvalue.repository.support.EvaluationContextProvider , KeyValueOperations org.springframework.data.keyvalue.repository.support.KeyValueOperations , java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.AbstractQueryCreator<?,?>> < ? extends AbstractQueryCreator < ? , ? > > java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.AbstractQueryCreator<?,?>> , java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.RepositoryQuery> < ? extends RepositoryQuery > java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.RepositoryQuery> ) { Assert . notNull ( org.springframework.data.keyvalue.repository.support.EvaluationContextProvider , STRING ) ; Assert . notNull ( org.springframework.data.keyvalue.repository.support.KeyValueOperations , STRING ) ; Assert . notNull ( java.lang.Class<> , STRING ) ; Assert . notNull ( java.lang.Class<> , STRING ) ; this . org.springframework.data.keyvalue.repository.support.EvaluationContextProvider = org.springframework.data.keyvalue.repository.support.EvaluationContextProvider ; this . org.springframework.data.keyvalue.repository.support.KeyValueOperations = org.springframework.data.keyvalue.repository.support.KeyValueOperations ; this . java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.AbstractQueryCreator<?,?>> = java.lang.Class<> ; this . java.lang.Class<? extends org.springframework.data.keyvalue.repository.support.RepositoryQuery> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public org.springframework.data.keyvalue.repository.support.RepositoryQuery org.springframework.data.keyvalue.repository.support.RepositoryQuery ( java.lang.reflect.Method java.lang.reflect.Method , RepositoryMetadata org.springframework.data.keyvalue.repository.support.RepositoryMetadata , ProjectionFactory org.springframework.data.keyvalue.repository.support.ProjectionFactory , NamedQueries org.springframework.data.keyvalue.repository.support.NamedQueries ) { QueryMethod org.springframework.data.keyvalue.repository.support.QueryMethod = new QueryMethod ( java.lang.reflect.Method , org.springframework.data.keyvalue.repository.support.RepositoryMetadata , org.springframework.data.keyvalue.repository.support.ProjectionFactory ) ; java.lang.reflect.Constructor<? extends org.springframework.data.keyvalue.repository.support.KeyValuePartTreeQuery> < ? extends KeyValuePartTreeQuery > java.lang.reflect.Constructor<? extends org.springframework.data.keyvalue.repository.support.KeyValuePartTreeQuery> = ( java.lang.reflect.Constructor<? extends org.springframework.data.keyvalue.repository.support.KeyValuePartTreeQuery> < ? extends KeyValuePartTreeQuery > ) ClassUtils . getConstructorIfAvailable ( this . java.lang.Class<> , QueryMethod .class , EvaluationContextProvider .class , KeyValueOperations .class , java.lang.Class .class ) ; return BeanUtils . instantiateClass ( java.lang.reflect.Constructor<> , org.springframework.data.keyvalue.repository.support.QueryMethod , org.springframework.data.keyvalue.repository.support.EvaluationContextProvider , this . org.springframework.data.keyvalue.repository.support.KeyValueOperations , this . java.lang.Class<> ) ; }  <METHOD_END>
