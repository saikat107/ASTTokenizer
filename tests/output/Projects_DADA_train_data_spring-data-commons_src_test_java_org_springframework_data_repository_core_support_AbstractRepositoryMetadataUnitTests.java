<METHOD_START> @ Test public void void ( ) java.lang.Exception { RepositoryMetadata org.springframework.data.repository.core.support.RepositoryMetadata = new org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.DummyRepositoryMetadata ( org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.UserRepository .class ) ; java.lang.reflect.Method java.lang.reflect.Method = org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.UserRepository .class . java.lang.reflect.Method ( STRING ) ; assertThat ( org.springframework.data.repository.core.support.RepositoryMetadata . getReturnedDomainClass ( java.lang.reflect.Method ) ) . isEqualTo ( User .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RepositoryMetadata org.springframework.data.repository.core.support.RepositoryMetadata = new org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.DummyRepositoryMetadata ( org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.ConcreteRepository .class ) ; java.lang.reflect.Method java.lang.reflect.Method = org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.ConcreteRepository .class . java.lang.reflect.Method ( STRING ) ; assertThat ( org.springframework.data.repository.core.support.RepositoryMetadata . getReturnedDomainClass ( java.lang.reflect.Method ) ) . isEqualTo ( User .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RepositoryMetadata org.springframework.data.repository.core.support.RepositoryMetadata = new org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.DummyRepositoryMetadata ( org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.ExtendingRepository .class ) ; java.lang.reflect.Method java.lang.reflect.Method = org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.ExtendingRepository .class . java.lang.reflect.Method ( STRING , Pageable .class , java.lang.String .class ) ; assertThat ( org.springframework.data.repository.core.support.RepositoryMetadata . getReturnedDomainClass ( java.lang.reflect.Method ) ) . isEqualTo ( User .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryMetadata org.springframework.data.repository.core.support.RepositoryMetadata = new org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.DummyRepositoryMetadata ( org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.UserRepository .class ) ; assertThat ( org.springframework.data.repository.core.support.RepositoryMetadata . isPagingRepository ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryMetadata org.springframework.data.repository.core.support.RepositoryMetadata = new org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.DummyRepositoryMetadata ( org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.PagedRepository .class ) ; assertThat ( org.springframework.data.repository.core.support.RepositoryMetadata . isPagingRepository ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RepositoryMetadata org.springframework.data.repository.core.support.RepositoryMetadata = new org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.DummyRepositoryMetadata ( org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.ExtendingRepository .class ) ; java.lang.reflect.Method java.lang.reflect.Method = org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.ExtendingRepository .class . java.lang.reflect.Method ( STRING ) ; assertThat ( org.springframework.data.repository.core.support.RepositoryMetadata . getReturnedDomainClass ( java.lang.reflect.Method ) ) . isEqualTo ( org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.GenericType .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.SecurityException , java.lang.NoSuchMethodException { RepositoryMetadata org.springframework.data.repository.core.support.RepositoryMetadata = new org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.DummyRepositoryMetadata ( org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.ExtendingRepository .class ) ; java.lang.reflect.Method java.lang.reflect.Method = org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.ExtendingRepository .class . java.lang.reflect.Method ( STRING ) ; assertThat ( org.springframework.data.repository.core.support.RepositoryMetadata . getReturnedDomainClass ( java.lang.reflect.Method ) ) . isEqualTo ( java.util.Map .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RepositoryMetadata org.springframework.data.repository.core.support.RepositoryMetadata = new DefaultRepositoryMetadata ( org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.PagedRepository .class ) ; java.lang.reflect.Method java.lang.reflect.Method = org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.PagedRepository .class . java.lang.reflect.Method ( STRING ) ; assertThat ( org.springframework.data.repository.core.support.RepositoryMetadata . getReturnedDomainClass ( java.lang.reflect.Method ) ) . isEqualTo ( User .class ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.repository.core.support.User org.springframework.data.repository.core.support.User ( )  <METHOD_END>
<METHOD_START> java.util.List<T> < T > java.util.List<T> ( )  <METHOD_END>
<METHOD_START> org.springframework.data.repository.core.support.Page<org.springframework.data.repository.core.support.User> < User > org.springframework.data.repository.core.support.Page<org.springframework.data.repository.core.support.User> ( Pageable org.springframework.data.repository.core.support.Pageable , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.GenericType<org.springframework.data.repository.core.support.User> < User > org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests.GenericType<org.springframework.data.repository.core.support.User> ( )  <METHOD_END>
<METHOD_START> java.util.List<java.util.Map<java.lang.String,java.lang.Object>> < java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ( )  <METHOD_END>
<METHOD_START> org.springframework.data.repository.core.support.User [] org.springframework.data.repository.core.support.User[] ( )  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { super( java.lang.Class<> ); }  <METHOD_END>
<METHOD_START> public java.lang.Class<? extends java.io.Serializable> < ? extends java.io.Serializable > java.lang.Class<? extends java.io.Serializable> ( ) { return null ; }  <METHOD_END>
<METHOD_START> public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return null ; }  <METHOD_END>
