<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( org.w3c.dom.Element org.w3c.dom.Element ) { return CacheServerFactoryBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( org.w3c.dom.Attr org.w3c.dom.Attr , ParserContext org.springframework.data.gemfire.config.xml.ParserContext ) { return ( super. isEligibleAttribute ( org.w3c.dom.Attr , org.springframework.data.gemfire.config.xml.ParserContext ) && ! STRING . boolean ( org.w3c.dom.Attr . java.lang.String ( ) ) && ! STRING . boolean ( org.w3c.dom.Attr . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( ParsingUtils . CACHE_REF_ATTRIBUTE_NAME ) ; org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyReference ( STRING , SpringUtils . defaultIfEmpty ( java.lang.String , GemfireConstants . DEFAULT_GEMFIRE_CACHE_NAME ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , StringUtils . commaDelimitedListToStringArray ( java.lang.String ) ) ; } void ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; }  <METHOD_END>
<METHOD_START> private void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) { org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; if ( org.w3c.dom.Element != null ) { ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element , AbstractBeanDefinition org.springframework.data.gemfire.config.xml.AbstractBeanDefinition , ParserContext org.springframework.data.gemfire.config.xml.ParserContext )		throws org.springframework.data.gemfire.config.xml.BeanDefinitionStoreException { java.lang.String java.lang.String = super. resolveId ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.AbstractBeanDefinition , org.springframework.data.gemfire.config.xml.ParserContext ) ; return ( StringUtils . hasText ( java.lang.String ) ? java.lang.String : STRING ) ; }  <METHOD_END>
