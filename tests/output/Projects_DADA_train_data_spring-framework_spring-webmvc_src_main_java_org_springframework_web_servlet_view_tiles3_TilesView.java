<METHOD_START> public void void ( Renderer org.springframework.web.servlet.view.tiles3.Renderer ) { this . org.springframework.web.servlet.view.tiles3.Renderer = org.springframework.web.servlet.view.tiles3.Renderer ; }  <METHOD_END>
<METHOD_START> protected void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { super. afterPropertiesSet ( ) ; this . org.springframework.web.servlet.view.tiles3.ApplicationContext = ServletUtil . getApplicationContext ( getServletContext ( ) ) ; if ( this . org.springframework.web.servlet.view.tiles3.Renderer == null ) { TilesContainer org.springframework.web.servlet.view.tiles3.TilesContainer = TilesAccess . getContainer ( this . org.springframework.web.servlet.view.tiles3.ApplicationContext ) ; this . org.springframework.web.servlet.view.tiles3.Renderer = new DefinitionRenderer ( org.springframework.web.servlet.view.tiles3.TilesContainer ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final java.util.Locale java.util.Locale ) throws java.lang.Exception { HttpServletRequest org.springframework.web.servlet.view.tiles3.HttpServletRequest = null ; RequestAttributes org.springframework.web.servlet.view.tiles3.RequestAttributes = RequestContextHolder . getRequestAttributes ( ) ; if ( org.springframework.web.servlet.view.tiles3.RequestAttributes instanceof ServletRequestAttributes ) { org.springframework.web.servlet.view.tiles3.HttpServletRequest = ( ( ServletRequestAttributes ) org.springframework.web.servlet.view.tiles3.RequestAttributes ) . getRequest ( ) ; } Request org.springframework.web.servlet.view.tiles3.Request = new ServletRequest ( this . org.springframework.web.servlet.view.tiles3.ApplicationContext , org.springframework.web.servlet.view.tiles3.HttpServletRequest , null ) { @ java.lang.Override public java.util.Locale java.util.Locale ( ) { return java.util.Locale ; } } ; return this . org.springframework.web.servlet.view.tiles3.Renderer . isRenderable ( getUrl ( ) , org.springframework.web.servlet.view.tiles3.Request ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Locale java.util.Locale ( ) { return java.util.Locale ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , HttpServletRequest org.springframework.web.servlet.view.tiles3.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.view.tiles3.HttpServletResponse ) throws java.lang.Exception { exposeModelAsRequestAttributes ( java.util.Map<java.lang.String,java.lang.Object> , org.springframework.web.servlet.view.tiles3.HttpServletRequest ) ; if ( this . boolean ) { JstlUtils . exposeLocalizationContext ( new RequestContext ( org.springframework.web.servlet.view.tiles3.HttpServletRequest , getServletContext ( ) ) ) ; } if ( this . boolean ) { org.springframework.web.servlet.view.tiles3.HttpServletRequest . setAttribute ( AbstractRequest . FORCE_INCLUDE_ATTRIBUTE_NAME , true ) ; } Request org.springframework.web.servlet.view.tiles3.Request = org.springframework.web.servlet.view.tiles3.Request ( org.springframework.web.servlet.view.tiles3.HttpServletRequest , org.springframework.web.servlet.view.tiles3.HttpServletResponse ) ; this . org.springframework.web.servlet.view.tiles3.Renderer . render ( getUrl ( ) , org.springframework.web.servlet.view.tiles3.Request ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.web.servlet.view.tiles3.Request org.springframework.web.servlet.view.tiles3.Request ( final HttpServletRequest org.springframework.web.servlet.view.tiles3.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.view.tiles3.HttpServletResponse ) { return new ServletRequest ( this . org.springframework.web.servlet.view.tiles3.ApplicationContext , org.springframework.web.servlet.view.tiles3.HttpServletRequest , org.springframework.web.servlet.view.tiles3.HttpServletResponse ) { @ java.lang.Override public java.util.Locale java.util.Locale ( ) { return RequestContextUtils . getLocale ( org.springframework.web.servlet.view.tiles3.HttpServletRequest ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Locale java.util.Locale ( ) { return RequestContextUtils . getLocale ( org.springframework.web.servlet.view.tiles3.HttpServletRequest ) ; }  <METHOD_END>
