<METHOD_START> public void ( ) { this( null ); }  <METHOD_END>
<METHOD_START> public void ( java.io.File java.io.File ) { this . java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.http.multipart.MultipartFile org.springframework.integration.http.multipart.MultipartFile ( MultipartFile org.springframework.integration.http.multipart.MultipartFile ) throws java.io.IOException { java.io.File java.io.File = java.io.File . java.io.File ( this . java.lang.String , this . java.lang.String , this . java.io.File ) ; org.springframework.integration.http.multipart.MultipartFile . transferTo ( java.io.File ) ; UploadedMultipartFile org.springframework.integration.http.multipart.UploadedMultipartFile = new UploadedMultipartFile ( java.io.File , org.springframework.integration.http.multipart.MultipartFile . getSize ( ) , org.springframework.integration.http.multipart.MultipartFile . getContentType ( ) , org.springframework.integration.http.multipart.MultipartFile . getName ( ) , org.springframework.integration.http.multipart.MultipartFile . getOriginalFilename ( ) ) ; if ( org.springframework.integration.http.multipart.Log . isDebugEnabled ( ) ) { org.springframework.integration.http.multipart.Log . debug ( STRING + org.springframework.integration.http.multipart.MultipartFile . getOriginalFilename ( ) + STRING + java.io.File . java.lang.String ( ) + STRING ) ; } return org.springframework.integration.http.multipart.UploadedMultipartFile ; }  <METHOD_END>
