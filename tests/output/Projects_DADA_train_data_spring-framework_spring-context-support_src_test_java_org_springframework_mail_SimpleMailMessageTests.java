<METHOD_START> @ Test public void void ( ) { SimpleMailMessage org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( ) ; org.springframework.mail.SimpleMailMessage . setFrom ( STRING ) ; org.springframework.mail.SimpleMailMessage . setTo ( STRING ) ; SimpleMailMessage org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( org.springframework.mail.SimpleMailMessage ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getFrom ( ) ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getTo ( ) [ NUMBER ] ) ; org.springframework.mail.SimpleMailMessage . setReplyTo ( STRING ) ; org.springframework.mail.SimpleMailMessage . setCc ( new java.lang.String [] { STRING , STRING } ) ; org.springframework.mail.SimpleMailMessage . setBcc ( new java.lang.String [] { STRING , STRING } ) ; java.util.Date java.util.Date = new java.util.Date ( ) ; org.springframework.mail.SimpleMailMessage . setSentDate ( java.util.Date ) ; org.springframework.mail.SimpleMailMessage . setSubject ( STRING ) ; org.springframework.mail.SimpleMailMessage . setText ( STRING ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getFrom ( ) ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getReplyTo ( ) ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getTo ( ) [ NUMBER ] ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List ( org.springframework.mail.SimpleMailMessage . getCc ( ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List ( org.springframework.mail.SimpleMailMessage . getBcc ( ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertEquals ( java.util.Date , org.springframework.mail.SimpleMailMessage . getSentDate ( ) ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getSubject ( ) ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getText ( ) ) ; org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( org.springframework.mail.SimpleMailMessage ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getFrom ( ) ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getReplyTo ( ) ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getTo ( ) [ NUMBER ] ) ; java.util.List<java.lang.String> = java.util.Arrays . java.util.List ( org.springframework.mail.SimpleMailMessage . getCc ( ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; java.util.List<java.lang.String> = java.util.Arrays . java.util.List ( org.springframework.mail.SimpleMailMessage . getBcc ( ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertEquals ( java.util.Date , org.springframework.mail.SimpleMailMessage . getSentDate ( ) ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getSubject ( ) ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SimpleMailMessage org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( ) ; org.springframework.mail.SimpleMailMessage . setTo ( new java.lang.String [] { STRING , STRING } ) ; org.springframework.mail.SimpleMailMessage . setCc ( new java.lang.String [] { STRING , STRING } ) ; org.springframework.mail.SimpleMailMessage . setBcc ( new java.lang.String [] { STRING , STRING } ) ; SimpleMailMessage org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( org.springframework.mail.SimpleMailMessage ) ; org.springframework.mail.SimpleMailMessage . getTo ( ) [ NUMBER ] = STRING ; org.springframework.mail.SimpleMailMessage . getCc ( ) [ NUMBER ] = STRING ; org.springframework.mail.SimpleMailMessage . getBcc ( ) [ NUMBER ] = STRING ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getTo ( ) [ NUMBER ] ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getCc ( ) [ NUMBER ] ) ; assertEquals ( STRING , org.springframework.mail.SimpleMailMessage . getBcc ( ) [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public final void void ( ) { SimpleMailMessage org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( ) ; org.springframework.mail.SimpleMailMessage . setFrom ( STRING ) ; org.springframework.mail.SimpleMailMessage . setReplyTo ( STRING ) ; org.springframework.mail.SimpleMailMessage . setTo ( STRING ) ; org.springframework.mail.SimpleMailMessage . setCc ( STRING ) ; org.springframework.mail.SimpleMailMessage . setBcc ( STRING ) ; org.springframework.mail.SimpleMailMessage . setSentDate ( new java.util.Date ( ) ) ; org.springframework.mail.SimpleMailMessage . setSubject ( STRING ) ; org.springframework.mail.SimpleMailMessage . setText ( STRING ) ; SimpleMailMessage org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( org.springframework.mail.SimpleMailMessage ) ; assertEquals ( org.springframework.mail.SimpleMailMessage , org.springframework.mail.SimpleMailMessage ) ; assertEquals ( org.springframework.mail.SimpleMailMessage . hashCode ( ) , org.springframework.mail.SimpleMailMessage . hashCode ( ) ) ; }  <METHOD_END>
<METHOD_START> public final void void ( ) { SimpleMailMessage org.springframework.mail.SimpleMailMessage ; SimpleMailMessage org.springframework.mail.SimpleMailMessage ; org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( ) ; org.springframework.mail.SimpleMailMessage = org.springframework.mail.SimpleMailMessage ; assertTrue ( org.springframework.mail.SimpleMailMessage . equals ( org.springframework.mail.SimpleMailMessage ) ) ; org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( ) ; org.springframework.mail.SimpleMailMessage = null ; assertTrue ( ! ( org.springframework.mail.SimpleMailMessage . equals ( org.springframework.mail.SimpleMailMessage ) ) ) ; assertTrue ( ! ( org.springframework.mail.SimpleMailMessage . equals ( new java.lang.Object ( ) ) ) ) ; org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( ) ; org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( ) ; assertTrue ( org.springframework.mail.SimpleMailMessage . equals ( org.springframework.mail.SimpleMailMessage ) ) ; org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( ) ; org.springframework.mail.SimpleMailMessage . setFrom ( STRING ) ; org.springframework.mail.SimpleMailMessage . setReplyTo ( STRING ) ; org.springframework.mail.SimpleMailMessage . setTo ( STRING ) ; org.springframework.mail.SimpleMailMessage . setCc ( STRING ) ; org.springframework.mail.SimpleMailMessage . setBcc ( STRING ) ; org.springframework.mail.SimpleMailMessage . setSentDate ( new java.util.Date ( ) ) ; org.springframework.mail.SimpleMailMessage . setSubject ( STRING ) ; org.springframework.mail.SimpleMailMessage . setText ( STRING ) ; org.springframework.mail.SimpleMailMessage = new SimpleMailMessage ( org.springframework.mail.SimpleMailMessage ) ; assertTrue ( org.springframework.mail.SimpleMailMessage . equals ( org.springframework.mail.SimpleMailMessage ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { new SimpleMailMessage ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { new SimpleMailMessage ( ) . copyTo ( null ) ; }  <METHOD_END>
