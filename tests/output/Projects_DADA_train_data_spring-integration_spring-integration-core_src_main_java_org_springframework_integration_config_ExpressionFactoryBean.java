<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( SpelParserConfiguration org.springframework.integration.config.SpelParserConfiguration ) { Assert . notNull ( org.springframework.integration.config.SpelParserConfiguration , STRING ) ; this . org.springframework.integration.config.ExpressionParser = new SpelExpressionParser ( org.springframework.integration.config.SpelParserConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return Expression .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.config.Expression org.springframework.integration.config.Expression ( ) java.lang.Exception { return this . org.springframework.integration.config.ExpressionParser . parseExpression ( this . java.lang.String ) ; }  <METHOD_END>
