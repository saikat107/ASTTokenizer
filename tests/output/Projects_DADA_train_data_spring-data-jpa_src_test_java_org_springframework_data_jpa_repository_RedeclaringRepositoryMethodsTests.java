<METHOD_START> @ Before public void void ( ) { org.springframework.data.jpa.repository.User = new User ( STRING , STRING , STRING ) ; org.springframework.data.jpa.repository.User = new User ( STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.jpa.repository.User = org.springframework.data.jpa.repository.RedeclaringRepositoryMethodsRepository . save ( org.springframework.data.jpa.repository.User ) ; org.springframework.data.jpa.repository.User = org.springframework.data.jpa.repository.RedeclaringRepositoryMethodsRepository . save ( org.springframework.data.jpa.repository.User ) ; Page < User > org.springframework.data.jpa.repository.Page<org.springframework.data.jpa.repository.User> = org.springframework.data.jpa.repository.RedeclaringRepositoryMethodsRepository . findAll ( PageRequest . of ( NUMBER , NUMBER ) ) ; assertThat ( org.springframework.data.jpa.repository.Page<org.springframework.data.jpa.repository.User> . getNumberOfElements ( ) , is ( NUMBER ) ) ; assertThat ( org.springframework.data.jpa.repository.Page<org.springframework.data.jpa.repository.User> . getContent ( ) . get ( NUMBER ) . getFirstname ( ) , is ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.jpa.repository.User = org.springframework.data.jpa.repository.RedeclaringRepositoryMethodsRepository . save ( org.springframework.data.jpa.repository.User ) ; org.springframework.data.jpa.repository.User = org.springframework.data.jpa.repository.RedeclaringRepositoryMethodsRepository . save ( org.springframework.data.jpa.repository.User ) ; java.util.List<org.springframework.data.jpa.repository.User> < User > java.util.List<org.springframework.data.jpa.repository.User> = org.springframework.data.jpa.repository.RedeclaringRepositoryMethodsRepository . findAll ( ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.User> . isEmpty ( ) , is ( true ) ) ; }  <METHOD_END>
