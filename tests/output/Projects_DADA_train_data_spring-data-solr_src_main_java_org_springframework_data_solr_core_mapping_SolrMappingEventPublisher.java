<METHOD_START> public void ( SolrPersistentEntitySchemaCreator org.springframework.data.solr.core.mapping.SolrPersistentEntitySchemaCreator ) { this . org.springframework.data.solr.core.mapping.SolrPersistentEntitySchemaCreator = org.springframework.data.solr.core.mapping.SolrPersistentEntitySchemaCreator ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public void void ( ApplicationEvent org.springframework.data.solr.core.mapping.ApplicationEvent ) { if ( org.springframework.data.solr.core.mapping.ApplicationEvent instanceof MappingContextEvent ) { this . org.springframework.data.solr.core.mapping.SolrPersistentEntitySchemaCreator . onApplicationEvent ( ( MappingContextEvent < SolrPersistentEntity < ? > , SolrPersistentProperty > ) org.springframework.data.solr.core.mapping.ApplicationEvent ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; void ( org.springframework.data.solr.core.mapping.ApplicationEvent ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private org.springframework.data.solr.core.mapping.ApplicationEvent org.springframework.data.solr.core.mapping.ApplicationEvent ( java.lang.Object java.lang.Object ) { ApplicationEvent org.springframework.data.solr.core.mapping.ApplicationEvent = null ; if ( java.lang.Object instanceof ApplicationEvent ) { org.springframework.data.solr.core.mapping.ApplicationEvent = ( ( ApplicationEvent ) java.lang.Object ) ; } if ( boolean ) { try { java.lang.reflect.Constructor<?> < ? > java.lang.reflect.Constructor<?> = ClassUtils . getConstructorIfAvailable ( ClassUtils . forName ( java.lang.String , this . java.lang.Class<? extends org.springframework.data.solr.core.mapping.SolrMappingEventPublisher> ( ) . java.lang.ClassLoader ( ) ) , java.lang.Object .class , java.lang.Object .class ) ; org.springframework.data.solr.core.mapping.ApplicationEvent = ( ApplicationEvent ) BeanUtils . instantiateClass ( java.lang.reflect.Constructor<> , ( java.lang.Object ) this , java.lang.Object ) ; } catch ( java.lang.Exception java.lang.Exception ) { } } if ( org.springframework.data.solr.core.mapping.ApplicationEvent == null ) { org.springframework.data.solr.core.mapping.ApplicationEvent = new ApplicationEvent ( java.lang.Object ) {} ; } return org.springframework.data.solr.core.mapping.ApplicationEvent ; }  <METHOD_END>
