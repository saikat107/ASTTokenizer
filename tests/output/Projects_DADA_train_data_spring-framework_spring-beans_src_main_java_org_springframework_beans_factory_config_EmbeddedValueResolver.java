<METHOD_START> public void ( ConfigurableBeanFactory org.springframework.beans.factory.config.ConfigurableBeanFactory ) { this . org.springframework.beans.factory.config.BeanExpressionContext = new BeanExpressionContext ( org.springframework.beans.factory.config.ConfigurableBeanFactory , null ) ; this . org.springframework.beans.factory.config.BeanExpressionResolver = org.springframework.beans.factory.config.ConfigurableBeanFactory . getBeanExpressionResolver ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { java.lang.String java.lang.String = this . org.springframework.beans.factory.config.BeanExpressionContext . getBeanFactory ( ) . resolveEmbeddedValue ( java.lang.String ) ; if ( this . org.springframework.beans.factory.config.BeanExpressionResolver != null && java.lang.String != null ) { java.lang.Object java.lang.Object = this . org.springframework.beans.factory.config.BeanExpressionResolver . evaluate ( java.lang.String , this . org.springframework.beans.factory.config.BeanExpressionContext ) ; java.lang.String = ( java.lang.Object != null ? java.lang.Object . java.lang.String ( ) : null ) ; } return java.lang.String ; }  <METHOD_END>
