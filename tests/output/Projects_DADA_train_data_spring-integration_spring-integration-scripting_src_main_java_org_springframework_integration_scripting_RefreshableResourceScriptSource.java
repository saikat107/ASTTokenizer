<METHOD_START> public void ( Resource org.springframework.integration.scripting.Resource , long long ) { this . long = long ; this . org.springframework.integration.scripting.ResourceScriptSource = new ResourceScriptSource ( org.springframework.integration.scripting.Resource ) ; try { this . java.lang.String = this . org.springframework.integration.scripting.ResourceScriptSource . getScriptAsString ( ) ; } catch ( java.io.IOException java.io.IOException ) { this . java.util.concurrent.atomic.AtomicLong . void ( NUMBER ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) java.io.IOException { if ( this . java.lang.String == null || this . boolean ( ) ) { this . java.util.concurrent.atomic.AtomicLong . void ( java.lang.System . long ( ) ) ; this . java.lang.String = this . org.springframework.integration.scripting.ResourceScriptSource . getScriptAsString ( ) ; } return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . org.springframework.integration.scripting.ResourceScriptSource . getResource ( ) . getFilename ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . long >= NUMBER && ( java.lang.System . long ( ) - this . java.util.concurrent.atomic.AtomicLong . long ( ) ) > this . long && this . org.springframework.integration.scripting.ResourceScriptSource . isModified ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.integration.scripting.ResourceScriptSource . toString ( ) ; }  <METHOD_END>
