<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { java.lang.reflect.Method [] java.lang.reflect.Method[] = ReflectionUtils . getAllDeclaredMethods ( java.lang.Class<> ) ; for ( java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[] ) { this . java.util.List<java.lang.reflect.Method> . boolean ( org . springframework . util . ClassUtils . getMostSpecificMethod ( java.lang.reflect.Method , java.lang.Class<> ) ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method ) { return this . java.util.List<java.lang.reflect.Method> . boolean ( java.lang.reflect.Method ) ; }  <METHOD_END>
