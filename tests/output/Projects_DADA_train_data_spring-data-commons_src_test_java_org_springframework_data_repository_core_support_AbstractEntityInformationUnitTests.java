<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { new DummyEntityInformation <> ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { EntityInformation < java.lang.Object , java.io.Serializable > org.springframework.data.repository.core.support.EntityInformation<java.lang.Object,java.io.Serializable> = new DummyEntityInformation <> ( java.lang.Object .class ) ; assertThat ( org.springframework.data.repository.core.support.EntityInformation<java.lang.Object,java.io.Serializable> . isNew ( null ) ) . isTrue ( ) ; assertThat ( org.springframework.data.repository.core.support.EntityInformation<java.lang.Object,java.io.Serializable> . isNew ( new java.lang.Object ( ) ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity,java.io.Serializable> < org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity , java.io.Serializable > org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity,java.io.Serializable> = new org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity,java.io.Serializable> <> ( org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity .class ) ; org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity = new org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity ( ) ; assertThat ( org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity,java.io.Serializable> . isNew ( org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity ) ) . isTrue ( ) ; org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity . long = NUMBER ; assertThat ( org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity,java.io.Serializable> . isNew ( org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveIdEntity ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity,java.io.Serializable> < org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity , java.io.Serializable > org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity,java.io.Serializable> = new org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity,java.io.Serializable> <> ( org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity .class ) ; org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity = new org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity ( ) ; assertThat ( org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity,java.io.Serializable> . isNew ( org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity ) ) . isTrue ( ) ; org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity . java.lang.Long = NUMBER ; assertThat ( org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity,java.io.Serializable> . isNew ( org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.PrimitiveWrapperIdEntity ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.UnsupportedPrimitiveIdEntity,?> < org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.UnsupportedPrimitiveIdEntity , ? > org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.UnsupportedPrimitiveIdEntity,?> = new org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.CustomEntityInformation<org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.UnsupportedPrimitiveIdEntity,java.lang.Boolean> < org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.UnsupportedPrimitiveIdEntity , java.lang.Boolean > ( org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests.UnsupportedPrimitiveIdEntity .class ) ; assertThatExceptionOfType ( java.lang.IllegalArgumentException .class ) . isThrownBy ( ( ) information . isNew ( new UnsupportedPrimitiveIdEntity ( ) ) ) . withMessageContaining ( boolean .class . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Class<T> < T > java.lang.Class<T> ) { super( java.lang.Class<T> ); this . java.lang.Class<T> = java.lang.Class<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.util.Optional<ID> < ID > java.util.Optional<ID> ( T T ) { return java.util.Optional . java.util.Optional<ID> ( ( ID ) ReflectionTestUtils . getField ( T , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.lang.Class<ID> < ID > java.lang.Class<ID> ( ) { return ( java.lang.Class<ID> < ID > ) ReflectionUtils . findField ( java.lang.Class<T> , STRING ) . getType ( ) ; }  <METHOD_END>
