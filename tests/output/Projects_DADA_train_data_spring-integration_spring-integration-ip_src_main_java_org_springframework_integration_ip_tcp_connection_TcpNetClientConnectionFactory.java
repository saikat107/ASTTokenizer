<METHOD_START> public void ( java.lang.String java.lang.String , int int ) { super( java.lang.String , int ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.ip.tcp.connection.TcpConnectionSupport org.springframework.integration.ip.tcp.connection.TcpConnectionSupport ( ) java.io.IOException , java.net.SocketException , java.lang.Exception { java.net.Socket java.net.Socket = java.net.Socket ( this . getHost ( ) , this . getPort ( ) ) ; setSocketAttributes ( java.net.Socket ) ; TcpConnectionSupport org.springframework.integration.ip.tcp.connection.TcpConnectionSupport = new TcpNetConnection ( java.net.Socket , false , this . isLookupHost ( ) , this . getApplicationEventPublisher ( ) , this . getComponentName ( ) ) ; org.springframework.integration.ip.tcp.connection.TcpConnectionSupport = wrapConnection ( org.springframework.integration.ip.tcp.connection.TcpConnectionSupport ) ; initializeConnection ( org.springframework.integration.ip.tcp.connection.TcpConnectionSupport , java.net.Socket ) ; this . getTaskExecutor ( ) . execute ( org.springframework.integration.ip.tcp.connection.TcpConnectionSupport ) ; this . harvestClosedConnections ( ) ; return org.springframework.integration.ip.tcp.connection.TcpConnectionSupport ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . setActive ( true ) ; super. start ( ) ; }  <METHOD_END>
<METHOD_START> protected java.net.Socket java.net.Socket ( java.lang.String java.lang.String , int int ) throws java.io.IOException { return this . org.springframework.integration.ip.tcp.connection.TcpSocketFactorySupport . getSocketFactory ( ) . createSocket ( java.lang.String , int ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.integration.ip.tcp.connection.TcpSocketFactorySupport org.springframework.integration.ip.tcp.connection.TcpSocketFactorySupport ( ) { return this . org.springframework.integration.ip.tcp.connection.TcpSocketFactorySupport ; }  <METHOD_END>
<METHOD_START> public void void ( TcpSocketFactorySupport org.springframework.integration.ip.tcp.connection.TcpSocketFactorySupport ) { Assert . notNull ( org.springframework.integration.ip.tcp.connection.TcpSocketFactorySupport , STRING ) ; this . org.springframework.integration.ip.tcp.connection.TcpSocketFactorySupport = org.springframework.integration.ip.tcp.connection.TcpSocketFactorySupport ; }  <METHOD_END>
