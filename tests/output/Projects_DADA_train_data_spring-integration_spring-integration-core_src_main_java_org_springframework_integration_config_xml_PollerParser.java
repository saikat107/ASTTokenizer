<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element , AbstractBeanDefinition org.springframework.integration.config.xml.AbstractBeanDefinition , ParserContext org.springframework.integration.config.xml.ParserContext ) throws org.springframework.integration.config.xml.BeanDefinitionStoreException { java.lang.String java.lang.String = super. resolveId ( org.w3c.dom.Element , org.springframework.integration.config.xml.AbstractBeanDefinition , org.springframework.integration.config.xml.ParserContext ) ; if ( org.w3c.dom.Element . java.lang.String ( STRING ) . boolean ( STRING ) ) { if ( org.springframework.integration.config.xml.ParserContext . getRegistry ( ) . isBeanNameInUse ( PollerMetadata . DEFAULT_POLLER_METADATA_BEAN_NAME ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.ParserContext . getRegistry ( ) . registerAlias ( java.lang.String , PollerMetadata . DEFAULT_POLLER_METADATA_BEAN_NAME ) ; } else { java.lang.String = PollerMetadata . DEFAULT_POLLER_METADATA_BEAN_NAME ; } } else if ( ! StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.config.xml.AbstractBeanDefinition org.springframework.integration.config.xml.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( PollerMetadata .class ) ; if ( org.w3c.dom.Element . boolean ( STRING ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } void ( org.w3c.dom.Element , org.springframework.integration.config.xml.BeanDefinitionBuilder , org.springframework.integration.config.xml.ParserContext ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . configureAndSetAdviceChainIfPresent ( org.w3c.dom.Element , org.w3c.dom.Element , org.springframework.integration.config.xml.BeanDefinitionBuilder . getRawBeanDefinition ( ) , org.springframework.integration.config.xml.ParserContext ) ; if ( org.w3c.dom.Element != null ) { IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; } else if ( org.w3c.dom.Element != null ) { IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( MessagePublishingErrorHandler .class ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; } return org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder , ParserContext org.springframework.integration.config.xml.ParserContext ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( PeriodicTrigger .class ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; } org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.Boolean . java.lang.Boolean ) ; java.lang.String java.lang.String = BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) , org.springframework.integration.config.xml.ParserContext . getRegistry ( ) ) ; java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( PeriodicTrigger .class ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; } org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.Boolean . java.lang.Boolean ) ; java.lang.String java.lang.String = BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) , org.springframework.integration.config.xml.ParserContext . getRegistry ( ) ) ; java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( CronTrigger .class ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; java.lang.String java.lang.String = BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) , org.springframework.integration.config.xml.ParserContext . getRegistry ( ) ) ; java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } if ( java.util.List<java.lang.String> . boolean ( ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( java.lang.String , org.w3c.dom.Element ) ; } if ( java.util.List<java.lang.String> . int ( ) > NUMBER ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( java.lang.String , org.w3c.dom.Element ) ; } org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyReference ( STRING , java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; }  <METHOD_END>
