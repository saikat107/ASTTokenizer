<METHOD_START> @ After public void void ( ) { assumeNotNull ( org.springframework.data.gemfire.ConfigurableApplicationContext ) ; org.springframework.data.gemfire.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.Cache org.springframework.data.gemfire.Cache ( java.lang.String java.lang.String ) { java.lang.String java.lang.String = java.io.File . java.lang.String . java.lang.String ( java.lang.Class<? extends org.springframework.data.gemfire.CacheAutoReconnectIntegrationTests> ( ) . java.lang.Package ( ) . java.lang.String ( ) . java.lang.String ( '.' , java.io.File . char ) ) ; org.springframework.data.gemfire.ConfigurableApplicationContext = new ClassPathXmlApplicationContext ( java.lang.String . java.lang.String ( java.io.File . java.lang.String ) . java.lang.String ( java.lang.String ) ) ; return org.springframework.data.gemfire.ConfigurableApplicationContext . getBean ( GemfireConstants . DEFAULT_GEMFIRE_CACHE_NAME , Cache .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Cache org.springframework.data.gemfire.Cache = org.springframework.data.gemfire.Cache ( STRING ) ; assertNotNull ( org.springframework.data.gemfire.Cache . getDistributedSystem ( ) ) ; assertNotNull ( org.springframework.data.gemfire.Cache . getDistributedSystem ( ) . getProperties ( ) ) ; assertTrue ( java.lang.Boolean . java.lang.Boolean ( org.springframework.data.gemfire.Cache . getDistributedSystem ( ) . getProperties ( ) . getProperty ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Cache org.springframework.data.gemfire.Cache = org.springframework.data.gemfire.Cache ( STRING ) ; assertNotNull ( org.springframework.data.gemfire.Cache . getDistributedSystem ( ) ) ; assertNotNull ( org.springframework.data.gemfire.Cache . getDistributedSystem ( ) . getProperties ( ) ) ; assertFalse ( java.lang.Boolean . java.lang.Boolean ( org.springframework.data.gemfire.Cache . getDistributedSystem ( ) . getProperties ( ) . getProperty ( STRING ) ) ) ; }  <METHOD_END>
