<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.ThreadLocal<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter.JdbcUserCredentials> . void ( new org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter.JdbcUserCredentials ( java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . java.lang.ThreadLocal<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter.JdbcUserCredentials> . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.sql.Connection java.sql.Connection ( ) java.sql.SQLException { org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter.JdbcUserCredentials org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter.JdbcUserCredentials = this . java.lang.ThreadLocal<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter.JdbcUserCredentials> . org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter.JdbcUserCredentials ( ) ; java.sql.Connection java.sql.Connection = ( org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter.JdbcUserCredentials != null ? java.sql.Connection ( org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter.JdbcUserCredentials . java.lang.String , org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter.JdbcUserCredentials . java.lang.String ) : java.sql.Connection ( this . java.lang.String , this . java.lang.String ) ) ; if ( this . java.lang.String != null ) { java.sql.Connection . void ( this . java.lang.String ) ; } if ( this . java.lang.String != null ) { java.sql.Connection . void ( this . java.lang.String ) ; } return java.sql.Connection ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.sql.Connection java.sql.Connection ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.sql.SQLException { return java.sql.Connection ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected java.sql.Connection java.sql.Connection ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.sql.SQLException { Assert . state ( getTargetDataSource ( ) != null , STRING ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { return getTargetDataSource ( ) . getConnection ( java.lang.String , java.lang.String ) ; } else { return getTargetDataSource ( ) . getConnection ( ) ; } }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String + STRING + this . java.lang.String + STRING ; }  <METHOD_END>
