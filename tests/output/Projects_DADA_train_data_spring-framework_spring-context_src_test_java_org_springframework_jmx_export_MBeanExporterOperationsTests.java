<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.ObjectName javax.management.ObjectName = ObjectNameManager . getInstance ( STRING ) ; JmxTestBean org.springframework.jmx.export.JmxTestBean = new JmxTestBean ( ) ; org.springframework.jmx.export.JmxTestBean . setName ( STRING ) ; MBeanExporter org.springframework.jmx.export.MBeanExporter = new MBeanExporter ( ) ; org.springframework.jmx.export.MBeanExporter . setServer ( getServer ( ) ) ; org.springframework.jmx.export.MBeanExporter . registerManagedResource ( org.springframework.jmx.export.JmxTestBean , javax.management.ObjectName ) ; java.lang.String java.lang.String = ( java.lang.String ) getServer ( ) . getAttribute ( javax.management.ObjectName , STRING ) ; assertEquals ( STRING , java.lang.String , org.springframework.jmx.export.JmxTestBean . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.ObjectName javax.management.ObjectName = ObjectNameManager . getInstance ( STRING ) ; javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = new javax.management.modelmbean.ModelMBeanInfoSupport ( STRING , STRING , null , null , null , null ) ; javax.management.modelmbean.RequiredModelMBean javax.management.modelmbean.RequiredModelMBean = new javax.management.modelmbean.RequiredModelMBean ( javax.management.modelmbean.ModelMBeanInfo ) ; MBeanExporter org.springframework.jmx.export.MBeanExporter = new MBeanExporter ( ) ; org.springframework.jmx.export.MBeanExporter . setServer ( getServer ( ) ) ; org.springframework.jmx.export.MBeanExporter . registerManagedResource ( javax.management.modelmbean.RequiredModelMBean , javax.management.ObjectName ) ; javax.management.MBeanInfo javax.management.MBeanInfo = getServer ( ) . getMBeanInfo ( javax.management.ObjectName ) ; assertEquals ( javax.management.modelmbean.ModelMBeanInfo , javax.management.MBeanInfo ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final javax.management.ObjectName javax.management.ObjectName = ObjectNameManager . getInstance ( STRING ) ; MBeanExporter org.springframework.jmx.export.MBeanExporter = new MBeanExporter ( ) ; org.springframework.jmx.export.MBeanExporter . setServer ( getServer ( ) ) ; org.springframework.jmx.export.MBeanExporter . setNamingStrategy ( new ObjectNamingStrategy ( ) { @ java.lang.Override public javax.management.ObjectName javax.management.ObjectName ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return javax.management.ObjectName ; } } ) ; JmxTestBean org.springframework.jmx.export.JmxTestBean = new JmxTestBean ( ) ; JmxTestBean org.springframework.jmx.export.JmxTestBean = new JmxTestBean ( ) ; javax.management.ObjectName javax.management.ObjectName = org.springframework.jmx.export.MBeanExporter . registerManagedResource ( org.springframework.jmx.export.JmxTestBean ) ; javax.management.ObjectName javax.management.ObjectName = org.springframework.jmx.export.MBeanExporter . registerManagedResource ( org.springframework.jmx.export.JmxTestBean ) ; assertIsRegistered ( STRING , javax.management.ObjectName ) ; assertIsRegistered ( STRING , javax.management.ObjectName ) ; void ( javax.management.ObjectName , javax.management.ObjectName ) ; void ( javax.management.ObjectName , javax.management.ObjectName ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.management.ObjectName javax.management.ObjectName ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return javax.management.ObjectName ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final javax.management.ObjectName javax.management.ObjectName = ObjectNameManager . getInstance ( STRING ) ; MBeanExporter org.springframework.jmx.export.MBeanExporter = new MBeanExporter ( ) ; org.springframework.jmx.export.MBeanExporter . setServer ( getServer ( ) ) ; org.springframework.jmx.export.MBeanExporter . setEnsureUniqueRuntimeObjectNames ( false ) ; org.springframework.jmx.export.MBeanExporter . setNamingStrategy ( new ObjectNamingStrategy ( ) { @ java.lang.Override public javax.management.ObjectName javax.management.ObjectName ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return javax.management.ObjectName ; } } ) ; JmxTestBean org.springframework.jmx.export.JmxTestBean = new JmxTestBean ( ) ; JmxTestBean org.springframework.jmx.export.JmxTestBean = new JmxTestBean ( ) ; javax.management.ObjectName javax.management.ObjectName = org.springframework.jmx.export.MBeanExporter . registerManagedResource ( org.springframework.jmx.export.JmxTestBean ) ; assertIsRegistered ( STRING , javax.management.ObjectName ) ; try { org.springframework.jmx.export.MBeanExporter . registerManagedResource ( org.springframework.jmx.export.JmxTestBean ) ; fail ( STRING ) ; } catch ( MBeanExportException org.springframework.jmx.export.MBeanExportException ) { assertEquals ( STRING , javax.management.InstanceAlreadyExistsException .class , org.springframework.jmx.export.MBeanExportException . getCause ( ) . getClass ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.management.ObjectName javax.management.ObjectName ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return javax.management.ObjectName ; }  <METHOD_END>
<METHOD_START> private void void ( javax.management.ObjectName javax.management.ObjectName , javax.management.ObjectName javax.management.ObjectName ) { assertEquals ( STRING , javax.management.ObjectName . java.lang.String ( ) , javax.management.ObjectName . java.lang.String ( ) ) ; }  <METHOD_END>
