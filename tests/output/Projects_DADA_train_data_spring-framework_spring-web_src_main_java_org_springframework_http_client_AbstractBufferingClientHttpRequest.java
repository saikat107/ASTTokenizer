<METHOD_START> @ java.lang.Override protected java.io.OutputStream java.io.OutputStream ( HttpHeaders org.springframework.http.client.HttpHeaders ) throws java.io.IOException { return this . java.io.ByteArrayOutputStream ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.http.client.ClientHttpResponse org.springframework.http.client.ClientHttpResponse ( HttpHeaders org.springframework.http.client.HttpHeaders ) throws java.io.IOException { byte [] byte[] = this . java.io.ByteArrayOutputStream . byte[] ( ) ; if ( org.springframework.http.client.HttpHeaders . getContentLength ( ) < NUMBER ) { org.springframework.http.client.HttpHeaders . setContentLength ( byte[] . int ) ; } ClientHttpResponse org.springframework.http.client.ClientHttpResponse = org.springframework.http.client.ClientHttpResponse ( org.springframework.http.client.HttpHeaders , byte[] ) ; this . java.io.ByteArrayOutputStream = null ; return org.springframework.http.client.ClientHttpResponse ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.http.client.ClientHttpResponse org.springframework.http.client.ClientHttpResponse ( HttpHeaders org.springframework.http.client.HttpHeaders , byte [] byte[] )			throws java.io.IOException ;  <METHOD_END>
