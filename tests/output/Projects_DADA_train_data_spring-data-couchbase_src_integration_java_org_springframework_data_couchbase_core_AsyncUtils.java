<METHOD_START> public static void void ( int int , java.util.concurrent.Callable<java.lang.Void> < java.lang.Void > java.util.concurrent.Callable<java.lang.Void> ) throws java.lang.Exception { java.util.concurrent.ExecutorService java.util.concurrent.ExecutorService = java.util.concurrent.Executors . java.util.concurrent.ExecutorService ( int ) ; java.util.Collection<java.util.concurrent.Callable<java.lang.Void>> < java.util.concurrent.Callable<java.lang.Void> < java.lang.Void > > java.util.Collection<java.util.concurrent.Callable<java.lang.Void>> = java.util.Collections . java.util.List<java.util.concurrent.Callable<java.lang.Void>> ( int , java.util.concurrent.Callable<java.lang.Void> ) ; java.util.List<java.util.concurrent.Future<java.lang.Void>> < java.util.concurrent.Future<java.lang.Void> < java.lang.Void > > java.util.List<java.util.concurrent.Future<java.lang.Void>> = java.util.concurrent.ExecutorService . java.util.List<java.util.concurrent.Future<java.lang.Void>> ( java.util.Collection<java.util.concurrent.Callable<java.lang.Void>> ) ; for ( java.util.concurrent.Future java.util.concurrent.Future : java.util.List<java.util.concurrent.Future<java.lang.Void>> ) { java.util.concurrent.Future . java.lang.Object ( int , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) ; } }  <METHOD_END>
<METHOD_START> public static < T > void void ( TestSubscriber < T > org.springframework.data.couchbase.core.TestSubscriber<T> ) { org.springframework.data.couchbase.core.TestSubscriber<T> . awaitTerminalEvent ( ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertNoErrors ( ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertNoValues ( ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertCompleted ( ) ; }  <METHOD_END>
<METHOD_START> public static < T > void void ( TestSubscriber < T > org.springframework.data.couchbase.core.TestSubscriber<T> ) { org.springframework.data.couchbase.core.TestSubscriber<T> . awaitTerminalEvent ( ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertNoErrors ( ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertCompleted ( ) ; }  <METHOD_END>
<METHOD_START> public static < T > void void ( TestSubscriber < T > org.springframework.data.couchbase.core.TestSubscriber<T> , int int ) { org.springframework.data.couchbase.core.TestSubscriber<T> . awaitTerminalEvent ( ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertNoErrors ( ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertValueCount ( int ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertCompleted ( ) ; }  <METHOD_END>
<METHOD_START> public static < T > void void ( TestSubscriber < T > org.springframework.data.couchbase.core.TestSubscriber<T> , java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > java.lang.Class<? extends java.lang.Throwable> ) { org.springframework.data.couchbase.core.TestSubscriber<T> . awaitTerminalEvent ( ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertError ( java.lang.Class<> ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertNoValues ( ) ; }  <METHOD_END>
<METHOD_START> public static < T > void void ( TestSubscriber < T > org.springframework.data.couchbase.core.TestSubscriber<T> , T T ) { org.springframework.data.couchbase.core.TestSubscriber<T> . awaitTerminalEvent ( ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertNoErrors ( ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertValue ( T ) ; org.springframework.data.couchbase.core.TestSubscriber<T> . assertCompleted ( ) ; }  <METHOD_END>
