<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( BeanFactory org.springframework.integration.support.channel.BeanFactory ) { Assert . notNull ( org.springframework.integration.support.channel.BeanFactory , STRING ) ; this . org.springframework.integration.support.channel.BeanFactory = org.springframework.integration.support.channel.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.support.channel.BeanFactory ) { this . org.springframework.integration.support.channel.BeanFactory = org.springframework.integration.support.channel.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.support.channel.MessageChannel org.springframework.integration.support.channel.MessageChannel ( java.lang.String java.lang.String ) { Assert . state ( this . org.springframework.integration.support.channel.BeanFactory != null , STRING ) ; try { return this . org.springframework.integration.support.channel.BeanFactory . getBean ( java.lang.String , MessageChannel .class ) ; } catch ( BeansException org.springframework.integration.support.channel.BeansException ) { if ( ! ( org.springframework.integration.support.channel.BeansException instanceof NoSuchBeanDefinitionException ) ) { throw new DestinationResolutionException ( STRING + java.lang.String + STRING , org.springframework.integration.support.channel.BeansException ) ; } if ( ! this . boolean ) { synchronized ( this ) { if ( ! this . boolean ) { try { this . org.springframework.integration.support.channel.HeaderChannelRegistry = this . org.springframework.integration.support.channel.BeanFactory . getBean ( IntegrationContextUtils . INTEGRATION_HEADER_CHANNEL_REGISTRY_BEAN_NAME , HeaderChannelRegistry .class ) ; } catch ( java.lang.Exception java.lang.Exception ) { org.springframework.integration.support.channel.Log . debug ( STRING ) ; } this . boolean = true ; } } } if ( this . org.springframework.integration.support.channel.HeaderChannelRegistry != null ) { MessageChannel org.springframework.integration.support.channel.MessageChannel = this . org.springframework.integration.support.channel.HeaderChannelRegistry . channelNameToChannel ( java.lang.String ) ; if ( org.springframework.integration.support.channel.MessageChannel != null ) { return org.springframework.integration.support.channel.MessageChannel ; } } throw new DestinationResolutionException ( STRING + java.lang.String + STRING + ( this . org.springframework.integration.support.channel.HeaderChannelRegistry == null ? STRING : STRING ) , org.springframework.integration.support.channel.BeansException ) ; } }  <METHOD_END>
