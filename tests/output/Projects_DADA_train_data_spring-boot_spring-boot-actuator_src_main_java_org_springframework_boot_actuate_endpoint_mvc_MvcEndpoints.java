<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.boot.actuate.endpoint.mvc.ApplicationContext )			throws org.springframework.boot.actuate.endpoint.mvc.BeansException { this . org.springframework.boot.actuate.endpoint.mvc.ApplicationContext = org.springframework.boot.actuate.endpoint.mvc.ApplicationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { java.util.Collection<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> < MvcEndpoint > java.util.Collection<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> = BeanFactoryUtils . beansOfTypeIncludingAncestors ( this . org.springframework.boot.actuate.endpoint.mvc.ApplicationContext , MvcEndpoint .class ) . values ( ) ; this . java.util.Set<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> . addAll ( java.util.Collection<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> ) ; this . java.util.Set<java.lang.Class<?>> = java.util.Set<java.lang.Class<?>> ( java.util.Collection<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Collection<org.springframework.boot.actuate.endpoint.mvc.Endpoint> < Endpoint > java.util.Collection<org.springframework.boot.actuate.endpoint.mvc.Endpoint> = BeanFactoryUtils . beansOfTypeIncludingAncestors ( this . org.springframework.boot.actuate.endpoint.mvc.ApplicationContext , Endpoint .class ) . values ( ) ; for ( Endpoint < ? > org.springframework.boot.actuate.endpoint.mvc.Endpoint<?> : java.util.Collection<org.springframework.boot.actuate.endpoint.mvc.Endpoint> ) { if ( boolean ( org.springframework.boot.actuate.endpoint.mvc.Endpoint<> . getClass ( ) ) && org.springframework.boot.actuate.endpoint.mvc.Endpoint<> . isEnabled ( ) ) { EndpointMvcAdapter org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter = new EndpointMvcAdapter ( org.springframework.boot.actuate.endpoint.mvc.Endpoint<> ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.actuate.endpoint.mvc.Endpoint<> , this . org.springframework.boot.actuate.endpoint.mvc.ApplicationContext . getEnvironment ( ) ) ; if ( java.lang.String != null ) { org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter . setPath ( java.lang.String ) ; } this . java.util.Set<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> . add ( org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter ) ; } } }  <METHOD_END>
<METHOD_START> private java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( java.util.Collection<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> < MvcEndpoint > java.util.Collection<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> ) { java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> = new java.util.HashSet<java.lang.Class<?>> <> ( ) ; for ( MvcEndpoint org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint : java.util.Collection<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint . getEndpointType ( ) ; if ( java.lang.Class<> != null ) { java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ; } } return java.util.Set<java.lang.Class<?>> ; }  <METHOD_END>
<METHOD_START> public java.util.Set<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> < MvcEndpoint > java.util.Set<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> ( ) { return this . java.util.Set<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public < E extends org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint > java.util.Set<E> < E > java.util.Set<E> ( java.lang.Class<E> < E > java.lang.Class<E> ) { java.util.Set<E> < E > java.util.Set<E> = new java.util.HashSet <> ( this . java.util.Set<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> . size ( ) ) ; for ( MvcEndpoint org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint : this . java.util.Set<org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint> ) { if ( java.lang.Class<E> . boolean ( org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint ) ) { java.util.Set<E> . boolean ( ( E ) org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint ) ; } } return java.util.Collections . java.util.Set<E> ( java.util.Set<E> ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return ! this . java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) && ! MvcEndpoint .class . boolean ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( Endpoint < ? > org.springframework.boot.actuate.endpoint.mvc.Endpoint<?> , Environment org.springframework.boot.actuate.endpoint.mvc.Environment ) { ConfigurationProperties org.springframework.boot.actuate.endpoint.mvc.ConfigurationProperties = AnnotationUtils . findAnnotation ( org.springframework.boot.actuate.endpoint.mvc.Endpoint<> . getClass ( ) , ConfigurationProperties .class ) ; if ( org.springframework.boot.actuate.endpoint.mvc.ConfigurationProperties != null ) { return org.springframework.boot.actuate.endpoint.mvc.Environment . getProperty ( org.springframework.boot.actuate.endpoint.mvc.ConfigurationProperties . prefix ( ) + STRING ) ; } return null ; }  <METHOD_END>
