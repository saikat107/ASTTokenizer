<METHOD_START> @ Before public void void ( ) { this . org.springframework.web.socket.server.standard.ServerContainer = mock ( ServerContainer .class ) ; this . org.springframework.web.socket.server.standard.ServletContext = new MockServletContext ( ) ; this . org.springframework.web.socket.server.standard.ServletContext . setAttribute ( STRING , this . org.springframework.web.socket.server.standard.ServerContainer ) ; this . org.springframework.web.socket.server.standard.AnnotationConfigWebApplicationContext = new AnnotationConfigWebApplicationContext ( ) ; this . org.springframework.web.socket.server.standard.AnnotationConfigWebApplicationContext . register ( org.springframework.web.socket.server.standard.ServerEndpointExporterTests.Config .class ) ; this . org.springframework.web.socket.server.standard.AnnotationConfigWebApplicationContext . setServletContext ( this . org.springframework.web.socket.server.standard.ServletContext ) ; this . org.springframework.web.socket.server.standard.AnnotationConfigWebApplicationContext . refresh ( ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter = new ServerEndpointExporter ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.socket.server.standard.ServerEndpointExporter . setAnnotatedEndpointClasses ( org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpoint .class ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . setApplicationContext ( this . org.springframework.web.socket.server.standard.AnnotationConfigWebApplicationContext ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterPropertiesSet ( ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterSingletonsInstantiated ( ) ; verify ( this . org.springframework.web.socket.server.standard.ServerContainer ) . addEndpoint ( org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpoint .class ) ; verify ( this . org.springframework.web.socket.server.standard.ServerContainer ) . addEndpoint ( org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpointBean .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.socket.server.standard.ServerEndpointExporter . setAnnotatedEndpointClasses ( org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpoint .class , org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpointBean .class ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . setServletContext ( this . org.springframework.web.socket.server.standard.ServletContext ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterPropertiesSet ( ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterSingletonsInstantiated ( ) ; verify ( this . org.springframework.web.socket.server.standard.ServerContainer ) . addEndpoint ( org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpoint .class ) ; verify ( this . org.springframework.web.socket.server.standard.ServerContainer ) . addEndpoint ( org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpointBean .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.socket.server.standard.ServerEndpointExporter . setAnnotatedEndpointClasses ( org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpoint .class , org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpointBean .class ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . setServerContainer ( this . org.springframework.web.socket.server.standard.ServerContainer ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterPropertiesSet ( ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterSingletonsInstantiated ( ) ; verify ( this . org.springframework.web.socket.server.standard.ServerContainer ) . addEndpoint ( org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpoint .class ) ; verify ( this . org.springframework.web.socket.server.standard.ServerContainer ) . addEndpoint ( org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpointBean .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ServerEndpointRegistration org.springframework.web.socket.server.standard.ServerEndpointRegistration = new ServerEndpointRegistration ( STRING , new org.springframework.web.socket.server.standard.ServerEndpointExporterTests.DummyEndpoint ( ) ) ; this . org.springframework.web.socket.server.standard.AnnotationConfigWebApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.web.socket.server.standard.ServerEndpointRegistration ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . setApplicationContext ( this . org.springframework.web.socket.server.standard.AnnotationConfigWebApplicationContext ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterPropertiesSet ( ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterSingletonsInstantiated ( ) ; verify ( this . org.springframework.web.socket.server.standard.ServerContainer ) . addEndpoint ( org.springframework.web.socket.server.standard.ServerEndpointRegistration ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ServerEndpointRegistration org.springframework.web.socket.server.standard.ServerEndpointRegistration = new ServerEndpointRegistration ( STRING , new org.springframework.web.socket.server.standard.ServerEndpointExporterTests.DummyEndpoint ( ) ) ; this . org.springframework.web.socket.server.standard.AnnotationConfigWebApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.web.socket.server.standard.ServerEndpointRegistration ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . setServletContext ( this . org.springframework.web.socket.server.standard.ServletContext ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . setApplicationContext ( this . org.springframework.web.socket.server.standard.AnnotationConfigWebApplicationContext ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterPropertiesSet ( ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterSingletonsInstantiated ( ) ; verify ( this . org.springframework.web.socket.server.standard.ServerContainer ) . addEndpoint ( org.springframework.web.socket.server.standard.ServerEndpointRegistration ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ServerEndpointRegistration org.springframework.web.socket.server.standard.ServerEndpointRegistration = new ServerEndpointRegistration ( STRING , new org.springframework.web.socket.server.standard.ServerEndpointExporterTests.DummyEndpoint ( ) ) ; this . org.springframework.web.socket.server.standard.AnnotationConfigWebApplicationContext . getBeanFactory ( ) . registerSingleton ( STRING , org.springframework.web.socket.server.standard.ServerEndpointRegistration ) ; this . org.springframework.web.socket.server.standard.ServletContext . removeAttribute ( STRING ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . setServerContainer ( this . org.springframework.web.socket.server.standard.ServerContainer ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . setApplicationContext ( this . org.springframework.web.socket.server.standard.AnnotationConfigWebApplicationContext ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterPropertiesSet ( ) ; this . org.springframework.web.socket.server.standard.ServerEndpointExporter . afterSingletonsInstantiated ( ) ; verify ( this . org.springframework.web.socket.server.standard.ServerContainer ) . addEndpoint ( org.springframework.web.socket.server.standard.ServerEndpointRegistration ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Session org.springframework.web.socket.server.standard.Session , EndpointConfig org.springframework.web.socket.server.standard.EndpointConfig ) {		}  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpointBean org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpointBean ( ) { return new org.springframework.web.socket.server.standard.ServerEndpointExporterTests.AnnotatedDummyEndpointBean ( ) ; }  <METHOD_END>
