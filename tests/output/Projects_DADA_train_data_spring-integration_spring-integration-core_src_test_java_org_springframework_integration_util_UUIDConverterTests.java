<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertNull ( UUIDConverter . getUUID ( null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.UUID java.util.UUID = java.util.UUID . java.util.UUID ( ) ; assertEquals ( java.util.UUID , UUIDConverter . getUUID ( java.util.UUID ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.UUID java.util.UUID = java.util.UUID . java.util.UUID ( ) ; assertEquals ( java.util.UUID , UUIDConverter . getUUID ( java.util.UUID . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; try { java.util.UUID . java.util.UUID ( java.lang.String ) ; fail ( ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { java.lang.String java.lang.String = java.lang.IllegalArgumentException . java.lang.String ( ) ; assertTrue ( STRING + java.lang.String , java.lang.String . boolean ( STRING ) ) ; } assertNotNull ( UUIDConverter . getUUID ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.UUID java.util.UUID = UUIDConverter . getUUID ( STRING ) ; assertNotNull ( java.util.UUID ) ; java.lang.String java.lang.String = java.util.UUID . java.lang.String ( ) ; assertEquals ( java.lang.String , UUIDConverter . getUUID ( STRING ) . toString ( ) ) ; assertEquals ( java.lang.String , UUIDConverter . getUUID ( java.util.UUID ) . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertNotNull ( UUIDConverter . getUUID ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertNotNull ( UUIDConverter . getUUID ( new java.util.Date ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { assertNotNull ( UUIDConverter . getUUID ( new java.lang.Object ( ) ) ) ; }  <METHOD_END>
