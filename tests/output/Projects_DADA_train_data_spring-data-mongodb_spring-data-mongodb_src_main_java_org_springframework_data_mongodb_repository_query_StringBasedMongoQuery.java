<METHOD_START> public void ( MongoQueryMethod org.springframework.data.mongodb.repository.query.MongoQueryMethod , MongoOperations org.springframework.data.mongodb.repository.query.MongoOperations , SpelExpressionParser org.springframework.data.mongodb.repository.query.SpelExpressionParser , EvaluationContextProvider org.springframework.data.mongodb.repository.query.EvaluationContextProvider ) { this( org.springframework.data.mongodb.repository.query.MongoQueryMethod . getAnnotatedQuery ( ) , org.springframework.data.mongodb.repository.query.MongoQueryMethod , org.springframework.data.mongodb.repository.query.MongoOperations , org.springframework.data.mongodb.repository.query.SpelExpressionParser , org.springframework.data.mongodb.repository.query.EvaluationContextProvider ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , MongoQueryMethod org.springframework.data.mongodb.repository.query.MongoQueryMethod , MongoOperations org.springframework.data.mongodb.repository.query.MongoOperations , SpelExpressionParser org.springframework.data.mongodb.repository.query.SpelExpressionParser , EvaluationContextProvider org.springframework.data.mongodb.repository.query.EvaluationContextProvider ) { super( org.springframework.data.mongodb.repository.query.MongoQueryMethod , org.springframework.data.mongodb.repository.query.MongoOperations ); Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.repository.query.SpelExpressionParser , STRING ) ; this . java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> = new java.util.ArrayList<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> < org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding > ( ) ; this . java.lang.String = org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBindingParser . java.lang.String ( java.lang.String , this . java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> ) ; this . java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> = new java.util.ArrayList<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> < org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding > ( ) ; this . java.lang.String = org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBindingParser . java.lang.String ( org.springframework.data.mongodb.repository.query.MongoQueryMethod . getFieldSpecification ( ) , this . java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> ) ; this . org.springframework.data.mongodb.repository.query.ExpressionEvaluatingParameterBinder = new ExpressionEvaluatingParameterBinder ( org.springframework.data.mongodb.repository.query.SpelExpressionParser , org.springframework.data.mongodb.repository.query.EvaluationContextProvider ) ; if ( org.springframework.data.mongodb.repository.query.MongoQueryMethod . hasAnnotatedQuery ( ) ) { org . springframework . data . mongodb . repository . org.springframework.data.mongodb.repository.Query org.springframework.data.mongodb.repository.Query = org.springframework.data.mongodb.repository.query.MongoQueryMethod . getQueryAnnotation ( ) ; this . boolean = org.springframework.data.mongodb.repository.Query . count ( ) ; this . boolean = org.springframework.data.mongodb.repository.Query . exists ( ) ; this . boolean = org.springframework.data.mongodb.repository.Query . delete ( ) ; if ( boolean ( this . boolean , this . boolean , this . boolean ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( java.lang.String , org.springframework.data.mongodb.repository.query.MongoQueryMethod ) ) ; } } else { this . boolean = false ; this . boolean = false ; this . boolean = false ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.mongodb.repository.query.Query org.springframework.data.mongodb.repository.query.Query ( ConvertingParameterAccessor org.springframework.data.mongodb.repository.query.ConvertingParameterAccessor ) { java.lang.String java.lang.String = org.springframework.data.mongodb.repository.query.ExpressionEvaluatingParameterBinder . bind ( this . java.lang.String , org.springframework.data.mongodb.repository.query.ConvertingParameterAccessor , new BindingContext ( getQueryMethod ( ) . getParameters ( ) , java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> ) ) ; java.lang.String java.lang.String = org.springframework.data.mongodb.repository.query.ExpressionEvaluatingParameterBinder . bind ( this . java.lang.String , org.springframework.data.mongodb.repository.query.ConvertingParameterAccessor , new BindingContext ( getQueryMethod ( ) . getParameters ( ) , java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> ) ) ; Query org.springframework.data.mongodb.repository.query.Query = new BasicQuery ( java.lang.String , java.lang.String ) . with ( org.springframework.data.mongodb.repository.query.ConvertingParameterAccessor . getSort ( ) ) ; if ( org.springframework.data.mongodb.repository.query.Logger . isDebugEnabled ( ) ) { org.springframework.data.mongodb.repository.query.Logger . debug ( java.lang.String . java.lang.String ( STRING , org.springframework.data.mongodb.repository.query.Query . getQueryObject ( ) , org.springframework.data.mongodb.repository.query.Query . getFieldsObject ( ) ) ) ; } return org.springframework.data.mongodb.repository.query.Query ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( boolean boolean , boolean boolean , boolean boolean ) { return int ( boolean , boolean , boolean ) > NUMBER ; }  <METHOD_END>
<METHOD_START> private static int int ( boolean ... boolean[] ) { int int = NUMBER ; for ( boolean boolean : boolean[] ) { if ( boolean ) { int ++ ; } } return int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String , java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> < org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding > java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> ) { if ( ! StringUtils . hasText ( java.lang.String ) ) { return java.lang.String ; } Assert . notNull ( java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> , STRING ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String , java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; void ( java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> , JSON . parse ( java.lang.String ) ) ; return java.lang.String ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.String java.lang.String , java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> < org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding > java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; while ( int < java.lang.String . int ( ) ) { int int = int ( java.lang.String , int ) ; if ( int < NUMBER ) { break; } int int = int + NUMBER ; int = int ; int int = NUMBER ; while ( int > NUMBER ) { switch ( java.lang.String . char ( int ++ ) ) { case char : int ++ ; break; case char : int -- ; break; default: } } java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String . java.lang.CharSequence ( int , int ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( int ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> . boolean ( new org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding ( int , true , java.lang.String . java.lang.String ( int , int - NUMBER ) ) ) ; int = int ; int ++ ; } return java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String . java.lang.CharSequence ( int , java.lang.String . int ( ) ) ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; return java.util.regex.Matcher . java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> < org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding > java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> , java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof java.lang.String ) { java.lang.String java.lang.String = ( ( java.lang.String ) java.lang.Object ) . java.lang.String ( ) ; void ( java.lang.String , java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> ) ; } else if ( java.lang.Object instanceof java.util.regex.Pattern ) { java.lang.String java.lang.String = java.lang.Object . java.lang.String ( ) . java.lang.String ( ) ; java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; while ( java.util.regex.Matcher . boolean ( ) ) { int int = java.lang.Integer . int ( java.util.regex.Matcher . java.lang.String ( int ) ) ; boolean boolean = ! java.lang.String . boolean ( java.lang.String + int ) ; java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> . boolean ( new org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding ( int , boolean ) ) ; } } else if ( java.lang.Object instanceof DBRef ) { DBRef org.springframework.data.mongodb.repository.query.DBRef = ( DBRef ) java.lang.Object ; void ( org.springframework.data.mongodb.repository.query.DBRef . getCollectionName ( ) , java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> ) ; void ( org.springframework.data.mongodb.repository.query.DBRef . getId ( ) . toString ( ) , java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> ) ; } else if ( java.lang.Object instanceof Document ) { Document org.springframework.data.mongodb.repository.query.Document = ( Document ) java.lang.Object ; for ( java.lang.String java.lang.String : org.springframework.data.mongodb.repository.query.Document . keySet ( ) ) { void ( java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> , java.lang.String ) ; void ( java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> , org.springframework.data.mongodb.repository.query.Document . get ( java.lang.String ) ) ; } } else if ( java.lang.Object instanceof DBObject ) { DBObject org.springframework.data.mongodb.repository.query.DBObject = ( DBObject ) java.lang.Object ; for ( java.lang.String java.lang.String : org.springframework.data.mongodb.repository.query.DBObject . keySet ( ) ) { void ( java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> , java.lang.String ) ; void ( java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> , org.springframework.data.mongodb.repository.query.DBObject . get ( java.lang.String ) ) ; } } }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.String java.lang.String , java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> < org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding > java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> ) { java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; while ( java.util.regex.Matcher . boolean ( ) ) { int int = java.lang.Integer . int ( java.util.regex.Matcher . java.lang.String ( int ) ) ; boolean boolean = java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) ; java.util.List<org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding> . boolean ( new org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.ParameterBinding ( int , boolean ) ) ; } }  <METHOD_END>
<METHOD_START> private static int int ( java.lang.String java.lang.String , int int ) { int int = java.lang.String . int ( java.lang.String , int ) ; return int < NUMBER ? java.lang.String . int ( java.lang.String , int ) : int ; }  <METHOD_END>
<METHOD_START> public void ( int int , boolean boolean ) { this( int , boolean , null ); }  <METHOD_END>
<METHOD_START> public void ( int int , boolean boolean , java.lang.String java.lang.String ) { this . int = int ; this . boolean = boolean ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING + ( boolean ( ) ? STRING : STRING ) + int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.lang.String != null ; }  <METHOD_END>
