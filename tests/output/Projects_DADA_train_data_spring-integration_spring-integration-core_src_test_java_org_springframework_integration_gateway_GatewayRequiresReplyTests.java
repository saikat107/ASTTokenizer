<METHOD_START> @ Test public void void ( ) { org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService = ( org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService ) org.springframework.integration.gateway.ApplicationContext . getBean ( STRING ) ; java.lang.String java.lang.String = org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService . java.lang.String ( STRING ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = ReplyRequiredException .class ) public void void ( ) { org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService = ( org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService ) org.springframework.integration.gateway.ApplicationContext . getBean ( STRING ) ; org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService . java.lang.String ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService = ( org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService ) org.springframework.integration.gateway.ApplicationContext . getBean ( STRING ) ; java.lang.String java.lang.String = org.springframework.integration.gateway.GatewayRequiresReplyTests.TestService . java.lang.String ( STRING ) ; assertNull ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) throws java.lang.Exception { java.lang.Thread . void ( NUMBER ) ; return java.lang.String ; }  <METHOD_END>
