<METHOD_START> @ Test public void void ( ) { Message < ? > org.springframework.integration.router.config.Message<?> = MessageBuilder . withPayload ( new org.springframework.integration.router.config.RouterWithMappingTests.TestBean ( STRING ) ) . build ( ) ; Message < ? > org.springframework.integration.router.config.Message<?> = MessageBuilder . withPayload ( new org.springframework.integration.router.config.RouterWithMappingTests.TestBean ( STRING ) ) . build ( ) ; Message < ? > org.springframework.integration.router.config.Message<?> = MessageBuilder . withPayload ( new org.springframework.integration.router.config.RouterWithMappingTests.TestBean ( STRING ) ) . build ( ) ; org.springframework.integration.router.config.MessageChannel . send ( org.springframework.integration.router.config.Message<> ) ; assertNotNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; org.springframework.integration.router.config.MessageChannel . send ( org.springframework.integration.router.config.Message<> ) ; assertNotNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; org.springframework.integration.router.config.MessageChannel . send ( org.springframework.integration.router.config.Message<> ) ; assertNotNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; org.springframework.integration.router.config.AbstractMappingMessageRouter . setChannelMapping ( STRING , STRING ) ; org.springframework.integration.router.config.MessageChannel . send ( org.springframework.integration.router.config.Message<> ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNotNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Message < ? > org.springframework.integration.router.config.Message<?> = MessageBuilder . withPayload ( new org.springframework.integration.router.config.RouterWithMappingTests.TestBean ( STRING ) ) . build ( ) ; Message < ? > org.springframework.integration.router.config.Message<?> = MessageBuilder . withPayload ( new org.springframework.integration.router.config.RouterWithMappingTests.TestBean ( STRING ) ) . build ( ) ; Message < ? > org.springframework.integration.router.config.Message<?> = MessageBuilder . withPayload ( new org.springframework.integration.router.config.RouterWithMappingTests.TestBean ( STRING ) ) . build ( ) ; org.springframework.integration.router.config.MessageChannel . send ( org.springframework.integration.router.config.Message<> ) ; assertNotNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; org.springframework.integration.router.config.MessageChannel . send ( org.springframework.integration.router.config.Message<> ) ; assertNotNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; org.springframework.integration.router.config.MessageChannel . send ( org.springframework.integration.router.config.Message<> ) ; assertNotNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; assertTrue ( this . org.springframework.integration.router.config.RouterWithMappingTests.TestRouter . boolean ( ) ) ; this . org.springframework.integration.router.config.AbstractEndpoint . stop ( ) ; assertFalse ( this . org.springframework.integration.router.config.RouterWithMappingTests.TestRouter . boolean ( ) ) ; this . org.springframework.integration.router.config.AbstractEndpoint . start ( ) ; assertTrue ( this . org.springframework.integration.router.config.RouterWithMappingTests.TestRouter . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public java.lang.String java.lang.String ( org.springframework.integration.router.config.RouterWithMappingTests.TestBean org.springframework.integration.router.config.RouterWithMappingTests.TestBean ) { return org.springframework.integration.router.config.RouterWithMappingTests.TestBean . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . boolean = false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
