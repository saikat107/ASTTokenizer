<METHOD_START> public void ( ) { this( null , STRING ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this( null , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ServletContext org.springframework.mock.web.test.ServletContext ) { this( org.springframework.mock.web.test.ServletContext , STRING ); }  <METHOD_END>
<METHOD_START> public void ( ServletContext org.springframework.mock.web.test.ServletContext , java.lang.String java.lang.String ) { this . org.springframework.mock.web.test.ServletContext = ( org.springframework.mock.web.test.ServletContext != null ? org.springframework.mock.web.test.ServletContext : new MockServletContext ( ) ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.mock.web.test.ServletContext org.springframework.mock.web.test.ServletContext ( ) { return this . org.springframework.mock.web.test.ServletContext ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Enumeration<java.lang.String> < java.lang.String > java.util.Enumeration<java.lang.String> ( ) { return java.util.Collections . java.util.Enumeration<java.lang.String> ( this . java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.lang.String> ( ) ) ; }  <METHOD_END>
