<METHOD_START> void ( final java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.gemfire.JndiDataSourceType org.springframework.data.gemfire.JndiDataSourceType ( final java.lang.String java.lang.String ) { for ( org.springframework.data.gemfire.JndiDataSourceType org.springframework.data.gemfire.JndiDataSourceType : org.springframework.data.gemfire.JndiDataSourceType[] ( ) ) { if ( boolean ( org.springframework.data.gemfire.JndiDataSourceType , java.lang.String ) ) { return org.springframework.data.gemfire.JndiDataSourceType ; } } return null ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( final org.springframework.data.gemfire.JndiDataSourceType org.springframework.data.gemfire.JndiDataSourceType , java.lang.String java.lang.String ) { java.lang.String = StringUtils . trimWhitespace ( java.lang.String ) ; return ( org.springframework.data.gemfire.JndiDataSourceType . java.lang.String ( ) . boolean ( java.lang.String ) || org.springframework.data.gemfire.JndiDataSourceType . java.lang.String ( ) . boolean ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ( ) ; }  <METHOD_END>
