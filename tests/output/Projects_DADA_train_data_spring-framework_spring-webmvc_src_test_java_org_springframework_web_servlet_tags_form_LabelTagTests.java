<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected void void ( ) { this . org.springframework.web.servlet.tags.form.LabelTag = new LabelTag ( ) { @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; } } ; this . org.springframework.web.servlet.tags.form.LabelTag . setPageContext ( getPageContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( MockPageContext org.springframework.web.servlet.tags.form.MockPageContext ) throws org.springframework.web.servlet.tags.form.JspException { super. extendPageContext ( org.springframework.web.servlet.tags.form.MockPageContext ) ; NestedPathTag org.springframework.web.servlet.tags.form.NestedPathTag = new NestedPathTag ( ) ; org.springframework.web.servlet.tags.form.NestedPathTag . setPath ( STRING ) ; org.springframework.web.servlet.tags.form.NestedPathTag . setPageContext ( org.springframework.web.servlet.tags.form.MockPageContext ) ; org.springframework.web.servlet.tags.form.NestedPathTag . doStartTag ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.LabelTag . setPath ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.LabelTag . doStartTag ( ) ; int int = this . org.springframework.web.servlet.tags.form.LabelTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_BODY_INCLUDE , int ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.LabelTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.LabelTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; this . org.springframework.web.servlet.tags.form.LabelTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; int int = this . org.springframework.web.servlet.tags.form.LabelTag . doStartTag ( ) ; int int = this . org.springframework.web.servlet.tags.form.LabelTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_BODY_INCLUDE , int ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , java.lang.String , java.lang.String ) ; assertContainsAttribute ( java.lang.String , java.lang.String , java.lang.String ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.LabelTag . setPath ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.LabelTag . doStartTag ( ) ; int int = this . org.springframework.web.servlet.tags.form.LabelTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_BODY_INCLUDE , int ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.LabelTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.LabelTag . setFor ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.LabelTag . doStartTag ( ) ; int int = this . org.springframework.web.servlet.tags.form.LabelTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_BODY_INCLUDE , int ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; java.lang.String java.lang.String = getOutput ( ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TestBean org.springframework.web.servlet.tags.form.TestBean ( ) { TestBean org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; org.springframework.web.servlet.tags.form.TestBean . setSpouse ( new TestBean ( STRING ) ) ; return org.springframework.web.servlet.tags.form.TestBean ; }  <METHOD_END>
