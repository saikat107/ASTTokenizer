<METHOD_START> public void ( Statement org.springframework.test.context.junit4.statements.Statement , java.lang.reflect.Method java.lang.reflect.Method ) { this( org.springframework.test.context.junit4.statements.Statement , java.lang.reflect.Method , TestAnnotationUtils . getRepeatCount ( java.lang.reflect.Method ) ); }  <METHOD_END>
<METHOD_START> public void ( Statement org.springframework.test.context.junit4.statements.Statement , java.lang.reflect.Method java.lang.reflect.Method , int int ) { this . org.springframework.test.context.junit4.statements.Statement = org.springframework.test.context.junit4.statements.Statement ; this . java.lang.reflect.Method = java.lang.reflect.Method ; this . int = java.lang.Math . int ( NUMBER , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Throwable { for ( int int = NUMBER ; int < this . int ; int ++ ) { if ( this . int > NUMBER && org.springframework.test.context.junit4.statements.Log . isInfoEnabled ( ) ) { org.springframework.test.context.junit4.statements.Log . info ( java.lang.String . java.lang.String ( STRING , ( int + NUMBER ) , this . java.lang.reflect.Method . java.lang.Class<?> ( ) . java.lang.String ( ) , this . java.lang.reflect.Method . java.lang.String ( ) ) ) ; } this . org.springframework.test.context.junit4.statements.Statement . evaluate ( ) ; } }  <METHOD_END>
