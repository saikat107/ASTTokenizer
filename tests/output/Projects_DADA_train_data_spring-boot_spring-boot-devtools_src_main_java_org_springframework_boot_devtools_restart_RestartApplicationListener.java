<METHOD_START> @ java.lang.Override public void void ( ApplicationEvent org.springframework.boot.devtools.restart.ApplicationEvent ) { if ( org.springframework.boot.devtools.restart.ApplicationEvent instanceof ApplicationStartingEvent ) { void ( ( ApplicationStartingEvent ) org.springframework.boot.devtools.restart.ApplicationEvent ) ; } if ( org.springframework.boot.devtools.restart.ApplicationEvent instanceof ApplicationPreparedEvent ) { void ( ( ApplicationPreparedEvent ) org.springframework.boot.devtools.restart.ApplicationEvent ) ; } if ( org.springframework.boot.devtools.restart.ApplicationEvent instanceof ApplicationReadyEvent || org.springframework.boot.devtools.restart.ApplicationEvent instanceof ApplicationFailedEvent ) { Restarter . getInstance ( ) . finish ( ) ; } if ( org.springframework.boot.devtools.restart.ApplicationEvent instanceof ApplicationFailedEvent ) { void ( ( ApplicationFailedEvent ) org.springframework.boot.devtools.restart.ApplicationEvent ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ApplicationStartingEvent org.springframework.boot.devtools.restart.ApplicationStartingEvent ) { java.lang.String java.lang.String = java.lang.System . java.lang.String ( java.lang.String ) ; if ( java.lang.String == null || java.lang.Boolean . boolean ( java.lang.String ) ) { java.lang.String [] java.lang.String[] = org.springframework.boot.devtools.restart.ApplicationStartingEvent . getArgs ( ) ; DefaultRestartInitializer org.springframework.boot.devtools.restart.DefaultRestartInitializer = new DefaultRestartInitializer ( ) ; boolean boolean = ! AgentReloader . isActive ( ) ; Restarter . initialize ( java.lang.String[] , false , org.springframework.boot.devtools.restart.DefaultRestartInitializer , boolean ) ; } else { Restarter . disable ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ApplicationPreparedEvent org.springframework.boot.devtools.restart.ApplicationPreparedEvent ) { Restarter . getInstance ( ) . prepare ( org.springframework.boot.devtools.restart.ApplicationPreparedEvent . getApplicationContext ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ApplicationFailedEvent org.springframework.boot.devtools.restart.ApplicationFailedEvent ) { Restarter . getInstance ( ) . remove ( org.springframework.boot.devtools.restart.ApplicationFailedEvent . getApplicationContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
