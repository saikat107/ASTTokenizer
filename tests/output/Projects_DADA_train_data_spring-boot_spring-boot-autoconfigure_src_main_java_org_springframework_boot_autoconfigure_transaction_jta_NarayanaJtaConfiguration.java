<METHOD_START> public void ( JtaProperties org.springframework.boot.autoconfigure.transaction.jta.JtaProperties , ObjectProvider < TransactionManagerCustomizers > org.springframework.boot.autoconfigure.transaction.jta.ObjectProvider<org.springframework.boot.autoconfigure.transaction.jta.TransactionManagerCustomizers> ) { this . org.springframework.boot.autoconfigure.transaction.jta.JtaProperties = org.springframework.boot.autoconfigure.transaction.jta.JtaProperties ; this . org.springframework.boot.autoconfigure.transaction.jta.TransactionManagerCustomizers = org.springframework.boot.autoconfigure.transaction.jta.ObjectProvider<org.springframework.boot.autoconfigure.transaction.jta.TransactionManagerCustomizers> . getIfAvailable ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public org.springframework.boot.autoconfigure.transaction.jta.NarayanaProperties org.springframework.boot.autoconfigure.transaction.jta.NarayanaProperties ( ) { return new NarayanaProperties ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public org.springframework.boot.autoconfigure.transaction.jta.NarayanaConfigurationBean org.springframework.boot.autoconfigure.transaction.jta.NarayanaConfigurationBean ( NarayanaProperties org.springframework.boot.autoconfigure.transaction.jta.NarayanaProperties ) { org.springframework.boot.autoconfigure.transaction.jta.NarayanaProperties . setLogDir ( java.io.File ( ) . java.lang.String ( ) ) ; if ( this . org.springframework.boot.autoconfigure.transaction.jta.JtaProperties . getTransactionManagerId ( ) != null ) { org.springframework.boot.autoconfigure.transaction.jta.NarayanaProperties . setTransactionManagerId ( this . org.springframework.boot.autoconfigure.transaction.jta.JtaProperties . getTransactionManagerId ( ) ) ; } return new NarayanaConfigurationBean ( org.springframework.boot.autoconfigure.transaction.jta.NarayanaProperties ) ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( ) { if ( StringUtils . hasLength ( this . org.springframework.boot.autoconfigure.transaction.jta.JtaProperties . getLogDir ( ) ) ) { return new java.io.File ( this . org.springframework.boot.autoconfigure.transaction.jta.JtaProperties . getLogDir ( ) ) ; } java.io.File java.io.File = new ApplicationHome ( ) . getDir ( ) ; return new java.io.File ( java.io.File , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ DependsOn ( STRING ) @ ConditionalOnMissingBean public org.springframework.boot.autoconfigure.transaction.jta.UserTransaction org.springframework.boot.autoconfigure.transaction.jta.UserTransaction ( ) { return com . com.arjuna . com.arjuna . com.arjuna . UserTransaction . userTransaction ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ DependsOn ( STRING ) @ ConditionalOnMissingBean public org.springframework.boot.autoconfigure.transaction.jta.TransactionManager org.springframework.boot.autoconfigure.transaction.jta.TransactionManager ( ) { return com . com.arjuna . com.arjuna . com.arjuna . TransactionManager . transactionManager ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ DependsOn ( STRING ) public org.springframework.boot.autoconfigure.transaction.jta.RecoveryManagerService org.springframework.boot.autoconfigure.transaction.jta.RecoveryManagerService ( ) { return new RecoveryManagerService ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.transaction.jta.NarayanaRecoveryManagerBean org.springframework.boot.autoconfigure.transaction.jta.NarayanaRecoveryManagerBean ( RecoveryManagerService org.springframework.boot.autoconfigure.transaction.jta.RecoveryManagerService ) { return new NarayanaRecoveryManagerBean ( org.springframework.boot.autoconfigure.transaction.jta.RecoveryManagerService ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.transaction.jta.JtaTransactionManager org.springframework.boot.autoconfigure.transaction.jta.JtaTransactionManager ( UserTransaction org.springframework.boot.autoconfigure.transaction.jta.UserTransaction , TransactionManager org.springframework.boot.autoconfigure.transaction.jta.TransactionManager ) { JtaTransactionManager org.springframework.boot.autoconfigure.transaction.jta.JtaTransactionManager = new JtaTransactionManager ( org.springframework.boot.autoconfigure.transaction.jta.UserTransaction , org.springframework.boot.autoconfigure.transaction.jta.TransactionManager ) ; if ( this . org.springframework.boot.autoconfigure.transaction.jta.TransactionManagerCustomizers != null ) { this . org.springframework.boot.autoconfigure.transaction.jta.TransactionManagerCustomizers . customize ( org.springframework.boot.autoconfigure.transaction.jta.JtaTransactionManager ) ; } return org.springframework.boot.autoconfigure.transaction.jta.JtaTransactionManager ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( XADataSourceWrapper .class ) public org.springframework.boot.autoconfigure.transaction.jta.XADataSourceWrapper org.springframework.boot.autoconfigure.transaction.jta.XADataSourceWrapper ( NarayanaRecoveryManagerBean org.springframework.boot.autoconfigure.transaction.jta.NarayanaRecoveryManagerBean , NarayanaProperties org.springframework.boot.autoconfigure.transaction.jta.NarayanaProperties ) { return new NarayanaXADataSourceWrapper ( org.springframework.boot.autoconfigure.transaction.jta.NarayanaRecoveryManagerBean , org.springframework.boot.autoconfigure.transaction.jta.NarayanaProperties ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public static org.springframework.boot.autoconfigure.transaction.jta.NarayanaBeanFactoryPostProcessor org.springframework.boot.autoconfigure.transaction.jta.NarayanaBeanFactoryPostProcessor ( ) { return new NarayanaBeanFactoryPostProcessor ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( XAConnectionFactoryWrapper .class ) public org.springframework.boot.autoconfigure.transaction.jta.NarayanaXAConnectionFactoryWrapper org.springframework.boot.autoconfigure.transaction.jta.NarayanaXAConnectionFactoryWrapper ( TransactionManager org.springframework.boot.autoconfigure.transaction.jta.TransactionManager , NarayanaRecoveryManagerBean org.springframework.boot.autoconfigure.transaction.jta.NarayanaRecoveryManagerBean , NarayanaProperties org.springframework.boot.autoconfigure.transaction.jta.NarayanaProperties ) { return new NarayanaXAConnectionFactoryWrapper ( org.springframework.boot.autoconfigure.transaction.jta.TransactionManager , org.springframework.boot.autoconfigure.transaction.jta.NarayanaRecoveryManagerBean , org.springframework.boot.autoconfigure.transaction.jta.NarayanaProperties ) ; }  <METHOD_END>
