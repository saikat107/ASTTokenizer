<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockHttpServletRequest org.springframework.web.servlet.view.feed.MockHttpServletRequest = new MockHttpServletRequest ( ) ; MockHttpServletResponse org.springframework.web.servlet.view.feed.MockHttpServletResponse = new MockHttpServletResponse ( ) ; java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.LinkedHashMap<java.lang.String,java.lang.String> <> ( ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; org.springframework.web.servlet.view.feed.AbstractRssFeedView . render ( java.util.Map<java.lang.String,java.lang.String> , org.springframework.web.servlet.view.feed.MockHttpServletRequest , org.springframework.web.servlet.view.feed.MockHttpServletResponse ) ; assertEquals ( STRING , STRING , org.springframework.web.servlet.view.feed.MockHttpServletResponse . getContentType ( ) ) ; java.lang.String java.lang.String = STRING + STRING + STRING + STRING + STRING ; assertThat ( org.springframework.web.servlet.view.feed.MockHttpServletResponse . getContentAsString ( ) , isSimilarTo ( java.lang.String ) . ignoreWhitespace ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , Channel org.springframework.web.servlet.view.feed.Channel , HttpServletRequest org.springframework.web.servlet.view.feed.HttpServletRequest ) { org.springframework.web.servlet.view.feed.Channel . setTitle ( STRING ) ; org.springframework.web.servlet.view.feed.Channel . setDescription ( STRING ) ; org.springframework.web.servlet.view.feed.Channel . setLink ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<org.springframework.web.servlet.view.feed.Item> < Item > java.util.List<org.springframework.web.servlet.view.feed.Item> ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , HttpServletRequest org.springframework.web.servlet.view.feed.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.view.feed.HttpServletResponse ) throws java.lang.Exception { java.util.List<org.springframework.web.servlet.view.feed.Item> < Item > java.util.List<org.springframework.web.servlet.view.feed.Item> = new java.util.ArrayList<org.springframework.web.servlet.view.feed.Item> <> ( ) ; for ( java.lang.String java.lang.String : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.lang.String> ( ) ) { Item org.springframework.web.servlet.view.feed.Item = new Item ( ) ; org.springframework.web.servlet.view.feed.Item . setTitle ( java.lang.String ) ; Description org.springframework.web.servlet.view.feed.Description = new Description ( ) ; org.springframework.web.servlet.view.feed.Description . setValue ( ( java.lang.String ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ) ; org.springframework.web.servlet.view.feed.Item . setDescription ( org.springframework.web.servlet.view.feed.Description ) ; java.util.List<org.springframework.web.servlet.view.feed.Item> . add ( org.springframework.web.servlet.view.feed.Item ) ; } return java.util.List<org.springframework.web.servlet.view.feed.Item> ; }  <METHOD_END>
