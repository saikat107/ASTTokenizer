<METHOD_START> public void ( ResourceLoader org.springframework.beans.support.ResourceLoader , PropertyResolver org.springframework.beans.support.PropertyResolver ) { this . org.springframework.beans.support.ResourceLoader = org.springframework.beans.support.ResourceLoader ; this . org.springframework.beans.support.PropertyResolver = org.springframework.beans.support.PropertyResolver ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( PropertyEditorRegistry org.springframework.beans.support.PropertyEditorRegistry ) { ResourceEditor org.springframework.beans.support.ResourceEditor = new ResourceEditor ( this . org.springframework.beans.support.ResourceLoader , this . org.springframework.beans.support.PropertyResolver ) ; void ( org.springframework.beans.support.PropertyEditorRegistry , Resource .class , org.springframework.beans.support.ResourceEditor ) ; void ( org.springframework.beans.support.PropertyEditorRegistry , ContextResource .class , org.springframework.beans.support.ResourceEditor ) ; void ( org.springframework.beans.support.PropertyEditorRegistry , java.io.InputStream .class , new InputStreamEditor ( org.springframework.beans.support.ResourceEditor ) ) ; void ( org.springframework.beans.support.PropertyEditorRegistry , org.xml.sax.InputSource .class , new InputSourceEditor ( org.springframework.beans.support.ResourceEditor ) ) ; void ( org.springframework.beans.support.PropertyEditorRegistry , java.io.File .class , new FileEditor ( org.springframework.beans.support.ResourceEditor ) ) ; void ( org.springframework.beans.support.PropertyEditorRegistry , java.nio.file.Path .class , new PathEditor ( org.springframework.beans.support.ResourceEditor ) ) ; void ( org.springframework.beans.support.PropertyEditorRegistry , java.io.Reader .class , new ReaderEditor ( org.springframework.beans.support.ResourceEditor ) ) ; void ( org.springframework.beans.support.PropertyEditorRegistry , java.net.URL .class , new URLEditor ( org.springframework.beans.support.ResourceEditor ) ) ; java.lang.ClassLoader java.lang.ClassLoader = this . org.springframework.beans.support.ResourceLoader . getClassLoader ( ) ; void ( org.springframework.beans.support.PropertyEditorRegistry , java.net.URI .class , new URIEditor ( java.lang.ClassLoader ) ) ; void ( org.springframework.beans.support.PropertyEditorRegistry , java.lang.Class .class , new ClassEditor ( java.lang.ClassLoader ) ) ; void ( org.springframework.beans.support.PropertyEditorRegistry , java.lang.Class [] .class , new ClassArrayEditor ( java.lang.ClassLoader ) ) ; if ( this . org.springframework.beans.support.ResourceLoader instanceof ResourcePatternResolver ) { void ( org.springframework.beans.support.PropertyEditorRegistry , Resource [] .class , new ResourceArrayPropertyEditor ( ( ResourcePatternResolver ) this . org.springframework.beans.support.ResourceLoader , this . org.springframework.beans.support.PropertyResolver ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( PropertyEditorRegistry org.springframework.beans.support.PropertyEditorRegistry , java.lang.Class<?> < ? > java.lang.Class<?> , java.beans.PropertyEditor java.beans.PropertyEditor ) { if ( org.springframework.beans.support.PropertyEditorRegistry instanceof PropertyEditorRegistrySupport ) { ( ( PropertyEditorRegistrySupport ) org.springframework.beans.support.PropertyEditorRegistry ) . overrideDefaultEditor ( java.lang.Class<> , java.beans.PropertyEditor ) ; } else { org.springframework.beans.support.PropertyEditorRegistry . registerCustomEditor ( java.lang.Class<> , java.beans.PropertyEditor ) ; } }  <METHOD_END>
