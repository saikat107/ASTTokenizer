<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( new ImportsContextCustomizer ( org.springframework.boot.test.context.ImportsContextCustomizerTests.FirstImportSelectorAnnotatedClass .class ) ) . isNotEqualTo ( new ImportsContextCustomizer ( org.springframework.boot.test.context.ImportsContextCustomizerTests.SecondImportSelectorAnnotatedClass .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( new ImportsContextCustomizer ( org.springframework.boot.test.context.ImportsContextCustomizerTests.FirstDeterminableImportSelectorAnnotatedClass .class ) ) . isEqualTo ( new ImportsContextCustomizer ( org.springframework.boot.test.context.ImportsContextCustomizerTests.SecondDeterminableImportSelectorAnnotatedClass .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( new ImportsContextCustomizer ( org.springframework.boot.test.context.ImportsContextCustomizerTests.FirstKotlinAnnotatedTestClass .class ) ) . isEqualTo ( new ImportsContextCustomizer ( org.springframework.boot.test.context.ImportsContextCustomizerTests.SecondKotlinAnnotatedTestClass .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( new ImportsContextCustomizer ( org.springframework.boot.test.context.ImportsContextCustomizerTests.FirstSpockFrameworkAnnotatedTestClass .class ) ) . isEqualTo ( new ImportsContextCustomizer ( org.springframework.boot.test.context.ImportsContextCustomizerTests.SecondSpockFrameworkAnnotatedTestClass .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( new ImportsContextCustomizer ( org.springframework.boot.test.context.ImportsContextCustomizerTests.FirstSpockLangAnnotatedTestClass .class ) ) . isEqualTo ( new ImportsContextCustomizer ( org.springframework.boot.test.context.ImportsContextCustomizerTests.SecondSpockLangAnnotatedTestClass .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( AnnotationMetadata org.springframework.boot.test.context.AnnotationMetadata ) { return new java.lang.String [] {} ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( AnnotationMetadata org.springframework.boot.test.context.AnnotationMetadata ) { return new java.lang.String [] { org.springframework.boot.test.context.ImportsContextCustomizerTests.TestConfig .class . java.lang.String ( ) } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<java.lang.Object> < java.lang.Object > java.util.Set<java.lang.Object> ( AnnotationMetadata org.springframework.boot.test.context.AnnotationMetadata ) { return java.util.Collections .< java.lang.Object > java.util.Set<java.lang.Object> ( org.springframework.boot.test.context.ImportsContextCustomizerTests.TestConfig .class . java.lang.String ( ) ) ; }  <METHOD_END>
