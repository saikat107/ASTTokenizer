<METHOD_START> public void ( ) { this . org.springframework.context.annotation.ScopedProxyMode = ScopedProxyMode . NO ; }  <METHOD_END>
<METHOD_START> public void ( ScopedProxyMode org.springframework.context.annotation.ScopedProxyMode ) { Assert . notNull ( org.springframework.context.annotation.ScopedProxyMode , STRING ) ; this . org.springframework.context.annotation.ScopedProxyMode = org.springframework.context.annotation.ScopedProxyMode ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; this . java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.annotation.ScopeMetadata org.springframework.context.annotation.ScopeMetadata ( BeanDefinition org.springframework.context.annotation.BeanDefinition ) { ScopeMetadata org.springframework.context.annotation.ScopeMetadata = new ScopeMetadata ( ) ; if ( org.springframework.context.annotation.BeanDefinition instanceof AnnotatedBeanDefinition ) { AnnotatedBeanDefinition org.springframework.context.annotation.AnnotatedBeanDefinition = ( AnnotatedBeanDefinition ) org.springframework.context.annotation.BeanDefinition ; AnnotationAttributes org.springframework.context.annotation.AnnotationAttributes = AnnotationConfigUtils . attributesFor ( org.springframework.context.annotation.AnnotatedBeanDefinition . getMetadata ( ) , this . java.lang.Class<> ) ; if ( org.springframework.context.annotation.AnnotationAttributes != null ) { org.springframework.context.annotation.ScopeMetadata . setScopeName ( org.springframework.context.annotation.AnnotationAttributes . getString ( STRING ) ) ; ScopedProxyMode org.springframework.context.annotation.ScopedProxyMode = org.springframework.context.annotation.AnnotationAttributes . getEnum ( STRING ) ; if ( org.springframework.context.annotation.ScopedProxyMode == null || org.springframework.context.annotation.ScopedProxyMode == ScopedProxyMode . DEFAULT ) { org.springframework.context.annotation.ScopedProxyMode = this . org.springframework.context.annotation.ScopedProxyMode ; } org.springframework.context.annotation.ScopeMetadata . setScopedProxyMode ( org.springframework.context.annotation.ScopedProxyMode ) ; } } return org.springframework.context.annotation.ScopeMetadata ; }  <METHOD_END>
