<METHOD_START> @ Test public void void ( ) java.lang.Exception { TestUtils . TestUtils TestUtils.TestApplicationContext = TestUtils . createTestApplicationContext ( ) ; TestUtils.TestApplicationContext . refresh ( ) ; FilterFactoryBean org.springframework.integration.filter.FilterFactoryBean = new FilterFactoryBean ( ) ; org.springframework.integration.filter.FilterFactoryBean . setBeanFactory ( TestUtils.TestApplicationContext ) ; org.springframework.integration.filter.FilterAnnotationMethodResolutionTests.AnnotatedTestFilter org.springframework.integration.filter.FilterAnnotationMethodResolutionTests.AnnotatedTestFilter = new org.springframework.integration.filter.FilterAnnotationMethodResolutionTests.AnnotatedTestFilter ( ) ; org.springframework.integration.filter.FilterFactoryBean . setTargetObject ( org.springframework.integration.filter.FilterAnnotationMethodResolutionTests.AnnotatedTestFilter ) ; MessageHandler org.springframework.integration.filter.MessageHandler = org.springframework.integration.filter.FilterFactoryBean . getObject ( ) ; QueueChannel org.springframework.integration.filter.QueueChannel = new QueueChannel ( ) ; org.springframework.integration.filter.MessageHandler . handleMessage ( MessageBuilder . withPayload ( STRING ) . setReplyChannel ( org.springframework.integration.filter.QueueChannel ) . build ( ) ) ; Message < ? > org.springframework.integration.filter.Message<?> = org.springframework.integration.filter.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.filter.Message<> ) ; assertTrue ( org.springframework.integration.filter.FilterAnnotationMethodResolutionTests.AnnotatedTestFilter . boolean ) ; assertFalse ( org.springframework.integration.filter.FilterAnnotationMethodResolutionTests.AnnotatedTestFilter . boolean ) ; TestUtils.TestApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { this . boolean = true ; return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.String java.lang.String ) { this . boolean = true ; return true ; }  <METHOD_END>
<METHOD_START> @ Filter public boolean boolean ( java.lang.String java.lang.String ) { this . boolean = true ; return true ; }  <METHOD_END>
