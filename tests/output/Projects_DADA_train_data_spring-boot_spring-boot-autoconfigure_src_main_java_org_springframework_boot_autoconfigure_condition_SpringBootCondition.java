<METHOD_START> @ java.lang.Override public final boolean boolean ( ConditionContext org.springframework.boot.autoconfigure.condition.ConditionContext , AnnotatedTypeMetadata org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ) { java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ) ; try { ConditionOutcome org.springframework.boot.autoconfigure.condition.ConditionOutcome = org.springframework.boot.autoconfigure.condition.ConditionOutcome ( org.springframework.boot.autoconfigure.condition.ConditionContext , org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ) ; void ( java.lang.String , org.springframework.boot.autoconfigure.condition.ConditionOutcome ) ; void ( org.springframework.boot.autoconfigure.condition.ConditionContext , java.lang.String , org.springframework.boot.autoconfigure.condition.ConditionOutcome ) ; return org.springframework.boot.autoconfigure.condition.ConditionOutcome . isMatch ( ) ; } catch ( java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError ) { throw new java.lang.IllegalStateException ( STRING + java.lang.String + STRING + java.lang.NoClassDefFoundError . java.lang.String ( ) + STRING + STRING + STRING + STRING + STRING , java.lang.NoClassDefFoundError ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { throw new java.lang.IllegalStateException ( STRING + java.lang.String ( org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ) , java.lang.RuntimeException ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( AnnotatedTypeMetadata org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ) { if ( org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata instanceof AnnotationMetadata ) { return ( ( AnnotationMetadata ) org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ) . getClassName ( ) ; } if ( org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata instanceof MethodMetadata ) { MethodMetadata org.springframework.boot.autoconfigure.condition.MethodMetadata = ( MethodMetadata ) org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ; return org.springframework.boot.autoconfigure.condition.MethodMetadata . getDeclaringClassName ( ) + STRING + org.springframework.boot.autoconfigure.condition.MethodMetadata . getMethodName ( ) ; } return org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata . toString ( ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( AnnotatedTypeMetadata org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ) { if ( org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata instanceof ClassMetadata ) { ClassMetadata org.springframework.boot.autoconfigure.condition.ClassMetadata = ( ClassMetadata ) org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ; return org.springframework.boot.autoconfigure.condition.ClassMetadata . getClassName ( ) ; } MethodMetadata org.springframework.boot.autoconfigure.condition.MethodMetadata = ( MethodMetadata ) org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ; return org.springframework.boot.autoconfigure.condition.MethodMetadata . getDeclaringClassName ( ) + STRING + org.springframework.boot.autoconfigure.condition.MethodMetadata . getMethodName ( ) ; }  <METHOD_END>
<METHOD_START> protected final void void ( java.lang.String java.lang.String , ConditionOutcome org.springframework.boot.autoconfigure.condition.ConditionOutcome ) { if ( this . org.springframework.boot.autoconfigure.condition.Log . isTraceEnabled ( ) ) { this . org.springframework.boot.autoconfigure.condition.Log . trace ( java.lang.StringBuilder ( java.lang.String , org.springframework.boot.autoconfigure.condition.ConditionOutcome ) ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.StringBuilder java.lang.StringBuilder ( java.lang.String java.lang.String , ConditionOutcome org.springframework.boot.autoconfigure.condition.ConditionOutcome ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( ClassUtils . getShortName ( java.lang.Class<? extends org.springframework.boot.autoconfigure.condition.SpringBootCondition> ( ) ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( org.springframework.boot.autoconfigure.condition.ConditionOutcome . isMatch ( ) ? STRING : STRING ) ; if ( StringUtils . hasLength ( org.springframework.boot.autoconfigure.condition.ConditionOutcome . getMessage ( ) ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( org.springframework.boot.autoconfigure.condition.ConditionOutcome . getMessage ( ) ) ; } return java.lang.StringBuilder ; }  <METHOD_END>
<METHOD_START> private void void ( ConditionContext org.springframework.boot.autoconfigure.condition.ConditionContext , java.lang.String java.lang.String , ConditionOutcome org.springframework.boot.autoconfigure.condition.ConditionOutcome ) { if ( org.springframework.boot.autoconfigure.condition.ConditionContext . getBeanFactory ( ) != null ) { ConditionEvaluationReport . get ( org.springframework.boot.autoconfigure.condition.ConditionContext . getBeanFactory ( ) ) . recordConditionEvaluation ( java.lang.String , this , org.springframework.boot.autoconfigure.condition.ConditionOutcome ) ; } }  <METHOD_END>
<METHOD_START> public abstract org.springframework.boot.autoconfigure.condition.ConditionOutcome org.springframework.boot.autoconfigure.condition.ConditionOutcome ( ConditionContext org.springframework.boot.autoconfigure.condition.ConditionContext , AnnotatedTypeMetadata org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata );  <METHOD_END>
<METHOD_START> protected final boolean boolean ( ConditionContext org.springframework.boot.autoconfigure.condition.ConditionContext , AnnotatedTypeMetadata org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata , Condition ... org.springframework.boot.autoconfigure.condition.Condition[] ) { for ( Condition org.springframework.boot.autoconfigure.condition.Condition : org.springframework.boot.autoconfigure.condition.Condition[] ) { if ( boolean ( org.springframework.boot.autoconfigure.condition.ConditionContext , org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata , org.springframework.boot.autoconfigure.condition.Condition ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> protected final boolean boolean ( ConditionContext org.springframework.boot.autoconfigure.condition.ConditionContext , AnnotatedTypeMetadata org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata , Condition org.springframework.boot.autoconfigure.condition.Condition ) { if ( org.springframework.boot.autoconfigure.condition.Condition instanceof org.springframework.boot.autoconfigure.condition.SpringBootCondition ) { return ( ( org.springframework.boot.autoconfigure.condition.SpringBootCondition ) org.springframework.boot.autoconfigure.condition.Condition ) . org.springframework.boot.autoconfigure.condition.ConditionOutcome ( org.springframework.boot.autoconfigure.condition.ConditionContext , org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ) . isMatch ( ) ; } return org.springframework.boot.autoconfigure.condition.Condition . matches ( org.springframework.boot.autoconfigure.condition.ConditionContext , org.springframework.boot.autoconfigure.condition.AnnotatedTypeMetadata ) ; }  <METHOD_END>
