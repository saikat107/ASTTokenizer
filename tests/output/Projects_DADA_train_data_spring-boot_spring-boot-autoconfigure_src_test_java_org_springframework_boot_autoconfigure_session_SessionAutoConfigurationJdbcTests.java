<METHOD_START> @ Test public void void ( ) { load ( java.util.Arrays . java.util.List<java.lang.Class<? extends java.lang.Object>> ( EmbeddedDataSourceConfiguration .class , JdbcTemplateAutoConfiguration .class , DataSourceTransactionManagerAutoConfiguration .class ) , STRING ) ; JdbcOperationsSessionRepository org.springframework.boot.autoconfigure.session.JdbcOperationsSessionRepository = validateSessionRepository ( JdbcOperationsSessionRepository .class ) ; assertThat ( new DirectFieldAccessor ( org.springframework.boot.autoconfigure.session.JdbcOperationsSessionRepository ) . getPropertyValue ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( this . context . getBean ( SessionProperties .class ) . getJdbc ( ) . getInitializer ( ) . isEnabled ( ) ) . isTrue ( ) ; assertThat ( this . context . getBean ( JdbcOperations .class ) . queryForList ( STRING ) ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { load ( java.util.Arrays . java.util.List<java.lang.Class<? extends java.lang.Object>> ( EmbeddedDataSourceConfiguration .class , DataSourceTransactionManagerAutoConfiguration .class ) , STRING , STRING ) ; JdbcOperationsSessionRepository org.springframework.boot.autoconfigure.session.JdbcOperationsSessionRepository = validateSessionRepository ( JdbcOperationsSessionRepository .class ) ; assertThat ( new DirectFieldAccessor ( org.springframework.boot.autoconfigure.session.JdbcOperationsSessionRepository ) . getPropertyValue ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( this . context . getBean ( SessionProperties .class ) . getJdbc ( ) . getInitializer ( ) . isEnabled ( ) ) . isFalse ( ) ; this . org.springframework.boot.autoconfigure.session.ExpectedException . expect ( BadSqlGrammarException .class ) ; assertThat ( this . context . getBean ( JdbcOperations .class ) . queryForList ( STRING ) ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { load ( java.util.Arrays . java.util.List<java.lang.Class<? extends java.lang.Object>> ( EmbeddedDataSourceConfiguration .class , DataSourceTransactionManagerAutoConfiguration .class ) , STRING , STRING , STRING ) ; JdbcOperationsSessionRepository org.springframework.boot.autoconfigure.session.JdbcOperationsSessionRepository = validateSessionRepository ( JdbcOperationsSessionRepository .class ) ; assertThat ( new DirectFieldAccessor ( org.springframework.boot.autoconfigure.session.JdbcOperationsSessionRepository ) . getPropertyValue ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( this . context . getBean ( SessionProperties .class ) . getJdbc ( ) . getInitializer ( ) . isEnabled ( ) ) . isTrue ( ) ; assertThat ( this . context . getBean ( JdbcOperations .class ) . queryForList ( STRING ) ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { load ( java.util.Arrays . java.util.List<java.lang.Class<? extends java.lang.Object>> ( EmbeddedDataSourceConfiguration .class , DataSourceTransactionManagerAutoConfiguration .class ) , STRING , STRING ) ; JdbcOperationsSessionRepository org.springframework.boot.autoconfigure.session.JdbcOperationsSessionRepository = validateSessionRepository ( JdbcOperationsSessionRepository .class ) ; assertThat ( new DirectFieldAccessor ( org.springframework.boot.autoconfigure.session.JdbcOperationsSessionRepository ) . getPropertyValue ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( this . context . getBean ( SessionProperties .class ) . getJdbc ( ) . getInitializer ( ) . isEnabled ( ) ) . isFalse ( ) ; this . org.springframework.boot.autoconfigure.session.ExpectedException . expect ( BadSqlGrammarException .class ) ; assertThat ( this . context . getBean ( JdbcOperations .class ) . queryForList ( STRING ) ) . isEmpty ( ) ; }  <METHOD_END>
