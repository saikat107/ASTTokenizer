<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( java.sql.Driver java.sql.Driver , java.lang.String java.lang.String ) { void ( java.sql.Driver ) ; setUrl ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( java.sql.Driver java.sql.Driver , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { void ( java.sql.Driver ) ; setUrl ( java.lang.String ) ; setUsername ( java.lang.String ) ; setPassword ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( java.sql.Driver java.sql.Driver , java.lang.String java.lang.String , java.util.Properties java.util.Properties ) { void ( java.sql.Driver ) ; setUrl ( java.lang.String ) ; setConnectionProperties ( java.util.Properties ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<? extends java.sql.Driver> < ? extends java.sql.Driver > java.lang.Class<? extends java.sql.Driver> ) { this . java.sql.Driver = BeanUtils . instantiateClass ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.sql.Driver java.sql.Driver ) { this . java.sql.Driver = java.sql.Driver ; }  <METHOD_END>
<METHOD_START> public java.sql.Driver java.sql.Driver ( ) { return this . java.sql.Driver ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.sql.Connection java.sql.Connection ( java.util.Properties java.util.Properties ) throws java.sql.SQLException { java.sql.Driver java.sql.Driver = java.sql.Driver ( ) ; java.lang.String java.lang.String = getUrl ( ) ; Assert . notNull ( java.sql.Driver , STRING ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + java.lang.String + STRING ) ; } return java.sql.Driver . java.sql.Connection ( java.lang.String , java.util.Properties ) ; }  <METHOD_END>
