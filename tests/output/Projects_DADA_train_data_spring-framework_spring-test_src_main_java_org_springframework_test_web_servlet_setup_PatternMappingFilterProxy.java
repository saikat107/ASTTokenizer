<METHOD_START> public void ( Filter org.springframework.test.web.servlet.setup.Filter , java.lang.String ... java.lang.String[] ) { Assert . notNull ( org.springframework.test.web.servlet.setup.Filter , STRING ) ; this . org.springframework.test.web.servlet.setup.Filter = org.springframework.test.web.servlet.setup.Filter ; for ( java.lang.String java.lang.String : java.lang.String[] ) { void ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { this . java.util.List<java.lang.String> . boolean ( java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) ) ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { this . java.util.List<java.lang.String> . boolean ( STRING ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { this . java.util.List<java.lang.String> . boolean ( java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - NUMBER ) ) ; this . java.util.List<java.lang.String> . boolean ( java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - NUMBER ) ) ; } else { if ( STRING . boolean ( java.lang.String ) ) { java.lang.String = STRING ; } this . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletRequest org.springframework.test.web.servlet.setup.ServletRequest , ServletResponse org.springframework.test.web.servlet.setup.ServletResponse , FilterChain org.springframework.test.web.servlet.setup.FilterChain )			throws java.io.IOException , org.springframework.test.web.servlet.setup.ServletException { HttpServletRequest org.springframework.test.web.servlet.setup.HttpServletRequest = ( HttpServletRequest ) org.springframework.test.web.servlet.setup.ServletRequest ; java.lang.String java.lang.String = org.springframework.test.web.servlet.setup.UrlPathHelper . getPathWithinApplication ( org.springframework.test.web.servlet.setup.HttpServletRequest ) ; if ( boolean ( java.lang.String ) ) { this . org.springframework.test.web.servlet.setup.Filter . doFilter ( org.springframework.test.web.servlet.setup.ServletRequest , org.springframework.test.web.servlet.setup.ServletResponse , org.springframework.test.web.servlet.setup.FilterChain ) ; } else { org.springframework.test.web.servlet.setup.FilterChain . doFilter ( org.springframework.test.web.servlet.setup.ServletRequest , org.springframework.test.web.servlet.setup.ServletResponse ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.String java.lang.String ) { for ( java.lang.String java.lang.String : this . java.util.List<java.lang.String> ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return true ; } } if ( ! java.lang.String . boolean ( STRING ) ) { return false ; } for ( java.lang.String java.lang.String : this . java.util.List<java.lang.String> ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return true ; } } for ( java.lang.String java.lang.String : this . java.util.List<java.lang.String> ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( FilterConfig org.springframework.test.web.servlet.setup.FilterConfig ) throws org.springframework.test.web.servlet.setup.ServletException { this . org.springframework.test.web.servlet.setup.Filter . init ( org.springframework.test.web.servlet.setup.FilterConfig ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.test.web.servlet.setup.Filter . destroy ( ) ; }  <METHOD_END>
