<METHOD_START> public void ( MessageGroupStore org.springframework.integration.store.MessageGroupStore ) { this . org.springframework.integration.store.MessageGroupStore = org.springframework.integration.store.MessageGroupStore ; }  <METHOD_END>
<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public void void ( MessageGroupStore org.springframework.integration.store.MessageGroupStore ) { this . org.springframework.integration.store.MessageGroupStore = org.springframework.integration.store.MessageGroupStore ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { Assert . state ( this . org.springframework.integration.store.MessageGroupStore != null , STRING ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { if ( this . boolean ) { if ( this . boolean ( ) ) { org.springframework.integration.store.Log . info ( STRING + this . org.springframework.integration.store.MessageGroupStore ) ; this . org.springframework.integration.store.MessageGroupStore . expireMessageGroups ( NUMBER ) ; } else { org.springframework.integration.store.Log . debug ( STRING ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( this . long >= NUMBER && this . boolean ( ) ) { if ( org.springframework.integration.store.Log . isDebugEnabled ( ) ) { org.springframework.integration.store.Log . debug ( STRING + this . long + STRING + this . org.springframework.integration.store.MessageGroupStore ) ; } this . org.springframework.integration.store.MessageGroupStore . expireMessageGroups ( this . long ) ; } }  <METHOD_END>
<METHOD_START> public final void void ( ) { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; try { if ( ! this . boolean ) { this . boolean = true ; if ( org.springframework.integration.store.Log . isInfoEnabled ( ) ) { org.springframework.integration.store.Log . info ( STRING + this ) ; } } } finally { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; try { if ( this . boolean ) { this . void ( ) ; if ( org.springframework.integration.store.Log . isInfoEnabled ( ) ) { org.springframework.integration.store.Log . info ( STRING + this ) ; } } this . boolean = false ; } catch ( java.lang.Exception java.lang.Exception ) { org.springframework.integration.store.Log . error ( STRING , java.lang.Exception ) ; } finally { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; } }  <METHOD_END>
<METHOD_START> public final boolean boolean ( ) { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; try { return this . boolean ; } finally { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; } }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Runnable java.lang.Runnable ) { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; try { this . void ( ) ; java.lang.Runnable . void ( ) ; } finally { this . java.util.concurrent.locks.ReentrantLock . void ( ) ; } }  <METHOD_END>
