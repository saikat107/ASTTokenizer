<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { void ( java.util.Collection<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { Assert . notNull ( java.util.Collection<java.lang.String> , STRING ) ; this . java.util.Set<java.lang.String> . void ( ) ; this . java.util.Set<java.lang.String> . boolean ( java.util.Collection<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( ) { return java.util.Collections . java.util.Set<java.lang.String> ( this . java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ServerHttpRequest org.springframework.web.socket.server.support.ServerHttpRequest , ServerHttpResponse org.springframework.web.socket.server.support.ServerHttpResponse , WebSocketHandler org.springframework.web.socket.server.support.WebSocketHandler , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) throws java.lang.Exception { if ( ! WebUtils . isSameOrigin ( org.springframework.web.socket.server.support.ServerHttpRequest ) && ! WebUtils . isValidOrigin ( org.springframework.web.socket.server.support.ServerHttpRequest , this . java.util.Set<java.lang.String> ) ) { org.springframework.web.socket.server.support.ServerHttpResponse . setStatusCode ( HttpStatus . FORBIDDEN ) ; if ( org.springframework.web.socket.server.support.Log . isDebugEnabled ( ) ) { org.springframework.web.socket.server.support.Log . debug ( STRING + org.springframework.web.socket.server.support.ServerHttpRequest . getHeaders ( ) . getOrigin ( ) + STRING ) ; } return false ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServerHttpRequest org.springframework.web.socket.server.support.ServerHttpRequest , ServerHttpResponse org.springframework.web.socket.server.support.ServerHttpResponse , WebSocketHandler org.springframework.web.socket.server.support.WebSocketHandler , java.lang.Exception java.lang.Exception ) {	}  <METHOD_END>
