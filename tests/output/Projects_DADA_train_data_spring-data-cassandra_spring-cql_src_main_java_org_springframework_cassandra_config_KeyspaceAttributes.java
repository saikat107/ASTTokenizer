<METHOD_START> public static java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> < Option , java.lang.Object > java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> ( ) { return java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> ( long ) ; }  <METHOD_END>
<METHOD_START> public static java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> < Option , java.lang.Object > java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> ( long long ) { return MapBuilder . map ( Option .class , java.lang.Object .class ) . entry ( new DefaultOption ( STRING , java.lang.String .class , true , false , true ) , ReplicationStrategy . SIMPLE_STRATEGY . getValue ( ) ) . entry ( new DefaultOption ( STRING , java.lang.Long .class , true , false , false ) , long ) . build ( ) ; }  <METHOD_END>
<METHOD_START> public static java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> < Option , java.lang.Object > java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> ( DataCenterReplication ... org.springframework.cassandra.config.DataCenterReplication[] ) { MapBuilder < Option , java.lang.Object > org.springframework.cassandra.config.MapBuilder<org.springframework.cassandra.config.Option,java.lang.Object> = MapBuilder . map ( Option .class , java.lang.Object .class ) . entry ( new DefaultOption ( STRING , java.lang.String .class , true , false , true ) , ReplicationStrategy . NETWORK_TOPOLOGY_STRATEGY . getValue ( ) ) ; for ( DataCenterReplication org.springframework.cassandra.config.DataCenterReplication : org.springframework.cassandra.config.DataCenterReplication[] ) { org.springframework.cassandra.config.MapBuilder<org.springframework.cassandra.config.Option,java.lang.Object> . entry ( new DefaultOption ( org.springframework.cassandra.config.DataCenterReplication . getDataCenter ( ) , java.lang.Long .class , true , false , false ) , org.springframework.cassandra.config.DataCenterReplication . getReplicationFactor ( ) ) ; } return org.springframework.cassandra.config.MapBuilder<org.springframework.cassandra.config.Option,java.lang.Object> . build ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.cassandra.config.ReplicationStrategy org.springframework.cassandra.config.ReplicationStrategy ( ) { return org.springframework.cassandra.config.ReplicationStrategy ; }  <METHOD_END>
<METHOD_START> public void void ( ReplicationStrategy org.springframework.cassandra.config.ReplicationStrategy ) { this . org.springframework.cassandra.config.ReplicationStrategy = org.springframework.cassandra.config.ReplicationStrategy ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , long long ) { java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( java.lang.String , long ) ; }  <METHOD_END>
