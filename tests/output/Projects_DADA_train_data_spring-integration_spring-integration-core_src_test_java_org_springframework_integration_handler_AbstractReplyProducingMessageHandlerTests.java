<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.handler.Message<?> ) { return org.springframework.integration.handler.Message<> ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.integration.handler.AbstractReplyProducingMessageHandler . setOutputChannel ( org.springframework.integration.handler.MessageChannel ) ; when ( org.springframework.integration.handler.MessageChannel . send ( org.springframework.integration.handler.Message<> ) ) . thenReturn ( false ) ; when ( org.springframework.integration.handler.MessageChannel . toString ( ) ) . thenReturn ( STRING ) ; try { org.springframework.integration.handler.AbstractReplyProducingMessageHandler . handleMessage ( org.springframework.integration.handler.Message<> ) ; fail ( STRING ) ; } catch ( MessagingException org.springframework.integration.handler.MessagingException ) { assertThat ( org.springframework.integration.handler.MessagingException . getMessage ( ) , containsString ( STRING ) ) ; } }  <METHOD_END>
