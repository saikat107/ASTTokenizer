<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.gemfire.client.ClientCacheFactoryBean , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.gemfire.client.ClientCacheFactoryBean . getBeanName ( ) , is ( equalTo ( STRING ) ) ) ; assertThat ( org.springframework.data.gemfire.client.ClientCacheFactoryBean . getProperties ( ) , is ( equalTo ( java.util.Properties ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public java.util.Properties java.util.Properties ( ) { java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , org.springframework.data.gemfire.client.SpringJavaConfiguredClientCacheIntegrationTest .class . java.lang.String ( ) ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; return java.util.Properties ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.gemfire.client.ClientCacheFactoryBean org.springframework.data.gemfire.client.ClientCacheFactoryBean ( ) { ClientCacheFactoryBean org.springframework.data.gemfire.client.ClientCacheFactoryBean = new ClientCacheFactoryBean ( ) ; org.springframework.data.gemfire.client.ClientCacheFactoryBean . setUseBeanFactoryLocator ( false ) ; org.springframework.data.gemfire.client.ClientCacheFactoryBean . setProperties ( java.util.Properties ( ) ) ; return org.springframework.data.gemfire.client.ClientCacheFactoryBean ; }  <METHOD_END>
