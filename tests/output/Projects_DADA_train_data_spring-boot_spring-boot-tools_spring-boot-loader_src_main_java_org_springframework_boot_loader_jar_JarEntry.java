<METHOD_START> void ( JarFile org.springframework.boot.loader.jar.JarFile , CentralDirectoryFileHeader org.springframework.boot.loader.jar.CentralDirectoryFileHeader ) { super( org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getName ( ) . toString ( ) ); this . org.springframework.boot.loader.jar.JarFile = org.springframework.boot.loader.jar.JarFile ; this . long = org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getLocalHeaderOffset ( ) ; void ( org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getCompressedSize ( ) ) ; void ( org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getMethod ( ) ) ; void ( org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getCrc ( ) ) ; void ( org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getSize ( ) ) ; void ( org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getExtra ( ) ) ; void ( org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getComment ( ) . toString ( ) ) ; void ( org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getSize ( ) ) ; void ( org.springframework.boot.loader.jar.CentralDirectoryFileHeader . getTime ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return java.lang.String ( ) . int ( ) == java.lang.String . int ( ) + java.lang.String . int ( ) && java.lang.String ( ) . boolean ( java.lang.String ) && java.lang.String ( ) . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> java.net.URL java.net.URL ( ) java.net.MalformedURLException { return new java.net.URL ( this . org.springframework.boot.loader.jar.JarFile . getUrl ( ) , java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.jar.Attributes java.util.jar.Attributes ( ) java.io.IOException { java.util.jar.Manifest java.util.jar.Manifest = this . org.springframework.boot.loader.jar.JarFile . getManifest ( ) ; return ( java.util.jar.Manifest == null ? null : java.util.jar.Manifest . java.util.jar.Attributes ( java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.security.cert.Certificate [] java.security.cert.Certificate[] ( ) { if ( this . org.springframework.boot.loader.jar.JarFile . isSigned ( ) && this . java.security.cert.Certificate[] == null ) { this . org.springframework.boot.loader.jar.JarFile . setupEntryCertificates ( this ) ; } return this . java.security.cert.Certificate[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.security.CodeSigner [] java.security.CodeSigner[] ( ) { if ( this . org.springframework.boot.loader.jar.JarFile . isSigned ( ) && this . java.security.CodeSigner[] == null ) { this . org.springframework.boot.loader.jar.JarFile . setupEntryCertificates ( this ) ; } return this . java.security.CodeSigner[] ; }  <METHOD_END>
<METHOD_START> void void ( java . util . jar . java.util.jar.JarEntry java.util.jar.JarEntry ) { this . java.security.cert.Certificate[] = java.util.jar.JarEntry . java.security.cert.Certificate[] ( ) ; this . java.security.CodeSigner[] = java.util.jar.JarEntry . java.security.CodeSigner[] ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . long ; }  <METHOD_END>
