<METHOD_START> protected void ( java.lang.Object java.lang.Object , Message < byte [] > org.springframework.web.socket.messaging.Message<byte[]> ) { super( java.lang.Object ); Assert . notNull ( org.springframework.web.socket.messaging.Message<byte[]> , STRING ) ; this . org.springframework.web.socket.messaging.Message<byte[]> = org.springframework.web.socket.messaging.Message<byte[]> ; this . java.security.Principal = null ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.Object java.lang.Object , Message < byte [] > org.springframework.web.socket.messaging.Message<byte[]> , java.security.Principal java.security.Principal ) { super( java.lang.Object ); Assert . notNull ( org.springframework.web.socket.messaging.Message<byte[]> , STRING ) ; this . org.springframework.web.socket.messaging.Message<byte[]> = org.springframework.web.socket.messaging.Message<byte[]> ; this . java.security.Principal = java.security.Principal ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.socket.messaging.Message<byte[]> < byte [] > org.springframework.web.socket.messaging.Message<byte[]> ( ) { return this . org.springframework.web.socket.messaging.Message<byte[]> ; }  <METHOD_END>
<METHOD_START> public java.security.Principal java.security.Principal ( ) { return this . java.security.Principal ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.Class<? extends org.springframework.web.socket.messaging.AbstractSubProtocolEvent> ( ) . java.lang.String ( ) + STRING + this . org.springframework.web.socket.messaging.Message<byte[]> + STRING ; }  <METHOD_END>
