<METHOD_START> public void void ( ) { org.springframework.data.rest.webmvc.jpa.BookRepository . deleteAll ( ) ; org.springframework.data.rest.webmvc.jpa.AuthorRepository . deleteAll ( ) ; org.springframework.data.rest.webmvc.jpa.OrderRepository . deleteAll ( ) ; org.springframework.data.rest.webmvc.jpa.PersonRepository . deleteAll ( ) ; void ( ) ; void ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { Author org.springframework.data.rest.webmvc.jpa.Author = new Author ( STRING ) ; Author org.springframework.data.rest.webmvc.jpa.Author = new Author ( STRING ) ; Author org.springframework.data.rest.webmvc.jpa.Author = new Author ( STRING ) ; Author org.springframework.data.rest.webmvc.jpa.Author = new Author ( STRING ) ; Author org.springframework.data.rest.webmvc.jpa.Author = new Author ( STRING ) ; Author org.springframework.data.rest.webmvc.jpa.Author = new Author ( STRING ) ; java.lang.Iterable<org.springframework.data.rest.webmvc.jpa.Author> < Author > java.lang.Iterable<org.springframework.data.rest.webmvc.jpa.Author> = this . org.springframework.data.rest.webmvc.jpa.AuthorRepository . save ( java.util.Arrays . java.util.List ( org.springframework.data.rest.webmvc.jpa.Author , org.springframework.data.rest.webmvc.jpa.Author , org.springframework.data.rest.webmvc.jpa.Author , org.springframework.data.rest.webmvc.jpa.Author , org.springframework.data.rest.webmvc.jpa.Author , org.springframework.data.rest.webmvc.jpa.Author ) ) ; org.springframework.data.rest.webmvc.jpa.BookRepository . save ( new Book ( STRING , STRING , NUMBER , java.lang.Iterable<org.springframework.data.rest.webmvc.jpa.Author> , new Offer ( NUMBER , STRING ) ) ) ; org.springframework.data.rest.webmvc.jpa.BookRepository . save ( new Book ( STRING , STRING , NUMBER , java.lang.Iterable<org.springframework.data.rest.webmvc.jpa.Author> , new Offer ( NUMBER , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { Person org.springframework.data.rest.webmvc.jpa.Person = org.springframework.data.rest.webmvc.jpa.PersonRepository . findAll ( ) . iterator ( ) . next ( ) ; Order org.springframework.data.rest.webmvc.jpa.Order = new Order ( org.springframework.data.rest.webmvc.jpa.Person ) ; org.springframework.data.rest.webmvc.jpa.Order . add ( new LineItem ( STRING ) ) ; org.springframework.data.rest.webmvc.jpa.OrderRepository . save ( org.springframework.data.rest.webmvc.jpa.Order ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { Person org.springframework.data.rest.webmvc.jpa.Person = org.springframework.data.rest.webmvc.jpa.PersonRepository . save ( new Person ( STRING , STRING ) ) ; Person org.springframework.data.rest.webmvc.jpa.Person = new Person ( STRING , STRING ) ; Person org.springframework.data.rest.webmvc.jpa.Person = new Person ( STRING , STRING ) ; org.springframework.data.rest.webmvc.jpa.Person . addSibling ( org.springframework.data.rest.webmvc.jpa.Person ) ; org.springframework.data.rest.webmvc.jpa.Person . setFather ( org.springframework.data.rest.webmvc.jpa.Person ) ; org.springframework.data.rest.webmvc.jpa.Person . addSibling ( org.springframework.data.rest.webmvc.jpa.Person ) ; org.springframework.data.rest.webmvc.jpa.Person . setFather ( org.springframework.data.rest.webmvc.jpa.Person ) ; org.springframework.data.rest.webmvc.jpa.PersonRepository . save ( java.util.Arrays . java.util.List ( org.springframework.data.rest.webmvc.jpa.Person , org.springframework.data.rest.webmvc.jpa.Person ) ) ; }  <METHOD_END>
