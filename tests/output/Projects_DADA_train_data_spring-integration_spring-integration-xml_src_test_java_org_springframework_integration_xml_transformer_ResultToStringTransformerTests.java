<METHOD_START> @ Before public void void ( ) { org.springframework.integration.xml.transformer.ResultToStringTransformer = new ResultToStringTransformer ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.xml.transform.dom.DOMResult javax.xml.transform.dom.DOMResult = XmlTestUtil . getDomResultForString ( java.lang.String ) ; java.lang.Object java.lang.Object = org.springframework.integration.xml.transformer.ResultToStringTransformer . transformResult ( javax.xml.transform.dom.DOMResult ) ; assertTrue ( STRING , java.lang.Object instanceof java.lang.String ) ; java.lang.String java.lang.String = ( java.lang.String ) java.lang.Object ; assertXMLEqual ( STRING , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; javax.xml.transform.dom.DOMResult javax.xml.transform.dom.DOMResult = XmlTestUtil . getDomResultForString ( java.lang.String ) ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( javax.xml.transform.OutputKeys . java.lang.String , STRING ) ; org.springframework.integration.xml.transformer.ResultToStringTransformer . setOutputProperties ( java.util.Properties ) ; java.lang.Object java.lang.Object = org.springframework.integration.xml.transformer.ResultToStringTransformer . transformResult ( javax.xml.transform.dom.DOMResult ) ; assertTrue ( STRING , java.lang.Object instanceof java.lang.String ) ; java.lang.String java.lang.String = ( java.lang.String ) java.lang.Object ; assertEquals ( STRING , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { StringResult org.springframework.integration.xml.transformer.StringResult = XmlTestUtil . getStringResultForString ( java.lang.String ) ; java.lang.Object java.lang.Object = org.springframework.integration.xml.transformer.ResultToStringTransformer . transformResult ( org.springframework.integration.xml.transformer.StringResult ) ; assertTrue ( STRING , java.lang.Object instanceof java.lang.String ) ; java.lang.String java.lang.String = ( java.lang.String ) java.lang.Object ; assertXMLEqual ( STRING , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = MessagingException .class ) public void void ( ) java.lang.Exception { javax.xml.transform.sax.SAXResult javax.xml.transform.sax.SAXResult = new javax.xml.transform.sax.SAXResult ( ) ; org.springframework.integration.xml.transformer.ResultToStringTransformer . transformResult ( javax.xml.transform.sax.SAXResult ) ; }  <METHOD_END>
