<METHOD_START> @ Before public void void ( ) { MBeanServerFactoryBean org.springframework.integration.jmx.MBeanServerFactoryBean = new MBeanServerFactoryBean ( ) ; org.springframework.integration.jmx.MBeanServerFactoryBean . setLocateExistingServerIfPossible ( true ) ; org.springframework.integration.jmx.MBeanServerFactoryBean . afterPropertiesSet ( ) ; this . javax.management.MBeanServer = org.springframework.integration.jmx.MBeanServerFactoryBean . getObject ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MBeanObjectConverter org.springframework.integration.jmx.MBeanObjectConverter = new DefaultMBeanObjectConverter ( ) ; MBeanTreePollingMessageSource org.springframework.integration.jmx.MBeanTreePollingMessageSource = new MBeanTreePollingMessageSource ( org.springframework.integration.jmx.MBeanObjectConverter ) ; org.springframework.integration.jmx.MBeanTreePollingMessageSource . setServer ( javax.management.MBeanServer ) ; java.lang.Object java.lang.Object = org.springframework.integration.jmx.MBeanTreePollingMessageSource . doReceive ( ) ; assertEquals ( java.util.HashMap .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.lang.Object ; assertTrue ( java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) ; assertTrue ( java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MBeanObjectConverter org.springframework.integration.jmx.MBeanObjectConverter = new DefaultMBeanObjectConverter ( ) ; MBeanTreePollingMessageSource org.springframework.integration.jmx.MBeanTreePollingMessageSource = new MBeanTreePollingMessageSource ( org.springframework.integration.jmx.MBeanObjectConverter ) ; org.springframework.integration.jmx.MBeanTreePollingMessageSource . setServer ( javax.management.MBeanServer ) ; org.springframework.integration.jmx.MBeanTreePollingMessageSource . setQueryName ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.integration.jmx.MBeanTreePollingMessageSource . doReceive ( ) ; assertEquals ( java.util.HashMap .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.lang.Object ; assertTrue ( java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) ; assertTrue ( java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) ; assertFalse ( java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MBeanObjectConverter org.springframework.integration.jmx.MBeanObjectConverter = new DefaultMBeanObjectConverter ( ) ; MBeanTreePollingMessageSource org.springframework.integration.jmx.MBeanTreePollingMessageSource = new MBeanTreePollingMessageSource ( org.springframework.integration.jmx.MBeanObjectConverter ) ; org.springframework.integration.jmx.MBeanTreePollingMessageSource . setServer ( javax.management.MBeanServer ) ; org.springframework.integration.jmx.MBeanTreePollingMessageSource . setQueryExpression ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.integration.jmx.MBeanTreePollingMessageSource . doReceive ( ) ; assertEquals ( java.util.HashMap .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.lang.Object ; assertFalse ( java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) ; assertFalse ( java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) ; assertTrue ( java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) ; }  <METHOD_END>
