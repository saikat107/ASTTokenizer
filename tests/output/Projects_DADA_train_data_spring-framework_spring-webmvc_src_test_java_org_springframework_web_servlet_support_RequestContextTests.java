<METHOD_START> @ Before public void void ( ) { GenericWebApplicationContext org.springframework.web.servlet.support.GenericWebApplicationContext = new GenericWebApplicationContext ( ) ; org.springframework.web.servlet.support.GenericWebApplicationContext . refresh ( ) ; org.springframework.web.servlet.support.MockServletContext . setAttribute ( WebApplicationContext . ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE , org.springframework.web.servlet.support.GenericWebApplicationContext ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.web.servlet.support.MockHttpServletRequest . setContextPath ( STRING ) ; RequestContext org.springframework.web.servlet.support.RequestContext = new RequestContext ( org.springframework.web.servlet.support.MockHttpServletRequest , org.springframework.web.servlet.support.MockHttpServletResponse , org.springframework.web.servlet.support.MockServletContext , java.util.Map<java.lang.String,java.lang.Object> ) ; assertEquals ( STRING , org.springframework.web.servlet.support.RequestContext . getContextUrl ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.web.servlet.support.MockHttpServletRequest . setContextPath ( STRING ) ; RequestContext org.springframework.web.servlet.support.RequestContext = new RequestContext ( org.springframework.web.servlet.support.MockHttpServletRequest , org.springframework.web.servlet.support.MockHttpServletResponse , org.springframework.web.servlet.support.MockServletContext , java.util.Map<java.lang.String,java.lang.Object> ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.web.servlet.support.RequestContext . getContextUrl ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.web.servlet.support.MockHttpServletRequest . setContextPath ( STRING ) ; RequestContext org.springframework.web.servlet.support.RequestContext = new RequestContext ( org.springframework.web.servlet.support.MockHttpServletRequest , org.springframework.web.servlet.support.MockHttpServletResponse , org.springframework.web.servlet.support.MockServletContext , java.util.Map<java.lang.String,java.lang.Object> ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; assertEquals ( STRING , org.springframework.web.servlet.support.RequestContext . getContextUrl ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.web.servlet.support.MockHttpServletRequest . setContextPath ( STRING ) ; org.springframework.web.servlet.support.MockHttpServletRequest . setServletPath ( STRING ) ; RequestContext org.springframework.web.servlet.support.RequestContext = new RequestContext ( org.springframework.web.servlet.support.MockHttpServletRequest , org.springframework.web.servlet.support.MockHttpServletResponse , org.springframework.web.servlet.support.MockServletContext , java.util.Map<java.lang.String,java.lang.Object> ) ; assertEquals ( STRING , org.springframework.web.servlet.support.RequestContext . getPathToServlet ( ) ) ; org.springframework.web.servlet.support.MockHttpServletRequest . setAttribute ( WebUtils . FORWARD_CONTEXT_PATH_ATTRIBUTE , STRING ) ; org.springframework.web.servlet.support.MockHttpServletRequest . setAttribute ( WebUtils . FORWARD_SERVLET_PATH_ATTRIBUTE , STRING ) ; assertEquals ( STRING , org.springframework.web.servlet.support.RequestContext . getPathToServlet ( ) ) ; }  <METHOD_END>
