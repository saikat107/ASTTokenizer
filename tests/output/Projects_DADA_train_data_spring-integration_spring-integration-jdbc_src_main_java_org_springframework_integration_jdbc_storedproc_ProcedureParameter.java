<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return this . java.lang.Object ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { super(); Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . java.lang.Object = java.lang.Object ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.Object ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) . java.lang.StringBuilder ( STRING ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public static java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( java.util.Collection<org.springframework.integration.jdbc.storedproc.ProcedureParameter> < org.springframework.integration.jdbc.storedproc.ProcedureParameter > java.util.Collection<org.springframework.integration.jdbc.storedproc.ProcedureParameter> ) { Assert . notNull ( java.util.Collection<org.springframework.integration.jdbc.storedproc.ProcedureParameter> , STRING ) ; for ( org.springframework.integration.jdbc.storedproc.ProcedureParameter org.springframework.integration.jdbc.storedproc.ProcedureParameter : java.util.Collection<org.springframework.integration.jdbc.storedproc.ProcedureParameter> ) { Assert . notNull ( org.springframework.integration.jdbc.storedproc.ProcedureParameter , STRING ) ; } java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) ; for ( org.springframework.integration.jdbc.storedproc.ProcedureParameter org.springframework.integration.jdbc.storedproc.ProcedureParameter : java.util.Collection<org.springframework.integration.jdbc.storedproc.ProcedureParameter> ) { if ( org.springframework.integration.jdbc.storedproc.ProcedureParameter . java.lang.String ( ) != null ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( org.springframework.integration.jdbc.storedproc.ProcedureParameter . java.lang.String ( ) , org.springframework.integration.jdbc.storedproc.ProcedureParameter . java.lang.String ( ) ) ; } } return java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public static java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( java.util.Collection<org.springframework.integration.jdbc.storedproc.ProcedureParameter> < org.springframework.integration.jdbc.storedproc.ProcedureParameter > java.util.Collection<org.springframework.integration.jdbc.storedproc.ProcedureParameter> ) { Assert . notNull ( java.util.Collection<org.springframework.integration.jdbc.storedproc.ProcedureParameter> , STRING ) ; for ( org.springframework.integration.jdbc.storedproc.ProcedureParameter org.springframework.integration.jdbc.storedproc.ProcedureParameter : java.util.Collection<org.springframework.integration.jdbc.storedproc.ProcedureParameter> ) { Assert . notNull ( org.springframework.integration.jdbc.storedproc.ProcedureParameter , STRING ) ; } java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) ; for ( org.springframework.integration.jdbc.storedproc.ProcedureParameter org.springframework.integration.jdbc.storedproc.ProcedureParameter : java.util.Collection<org.springframework.integration.jdbc.storedproc.ProcedureParameter> ) { if ( org.springframework.integration.jdbc.storedproc.ProcedureParameter . java.lang.Object ( ) != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( org.springframework.integration.jdbc.storedproc.ProcedureParameter . java.lang.String ( ) , org.springframework.integration.jdbc.storedproc.ProcedureParameter . java.lang.Object ( ) ) ; } } return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
