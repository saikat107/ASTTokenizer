<METHOD_START> public void ( MetaData org.springframework.data.neo4j.repository.support.MetaData , java.lang.Class<T> < T > java.lang.Class<T> ) { super( java.lang.Class<T> ); this . org.springframework.data.neo4j.repository.support.MetaData = org.springframework.data.neo4j.repository.support.MetaData ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Optional<ID> < ID > java.util.Optional<ID> ( T T ) { final ClassInfo org.springframework.data.neo4j.repository.support.ClassInfo = org.springframework.data.neo4j.repository.support.MetaData . classInfo ( getJavaType ( ) . getName ( ) ) ; final FieldInfo org.springframework.data.neo4j.repository.support.FieldInfo = org.springframework.data.neo4j.repository.support.ClassInfo . primaryIndexField ( ) ; return java.util.Optional . java.util.Optional ( ID ( T , org.springframework.data.neo4j.repository.support.ClassInfo , org.springframework.data.neo4j.repository.support.FieldInfo ) ) ; }  <METHOD_END>
<METHOD_START> private ID ID ( T T , ClassInfo org.springframework.data.neo4j.repository.support.ClassInfo , FieldInfo org.springframework.data.neo4j.repository.support.FieldInfo ) { if ( org.springframework.data.neo4j.repository.support.FieldInfo != null ) { return ( ID ) org.springframework.data.neo4j.repository.support.ClassInfo . propertyField ( org.springframework.data.neo4j.repository.support.FieldInfo . getName ( ) ) . readProperty ( T ) ; } else { return ( ID ) org.springframework.data.neo4j.repository.support.ClassInfo . propertyField ( org.springframework.data.neo4j.repository.support.ClassInfo . identityField ( ) . getName ( ) ) . readProperty ( T ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<ID> < ID > java.lang.Class<ID> ( ) { final FieldInfo org.springframework.data.neo4j.repository.support.FieldInfo = org.springframework.data.neo4j.repository.support.MetaData . classInfo ( getJavaType ( ) . getName ( ) ) . primaryIndexField ( ) ; if ( org.springframework.data.neo4j.repository.support.FieldInfo != null ) { return ( java.lang.Class<ID> < ID > ) org.springframework.data.neo4j.repository.support.FieldInfo . convertedType ( ) ; } return ( java.lang.Class<ID> < ID > ) java.lang.Long .class ; }  <METHOD_END>
