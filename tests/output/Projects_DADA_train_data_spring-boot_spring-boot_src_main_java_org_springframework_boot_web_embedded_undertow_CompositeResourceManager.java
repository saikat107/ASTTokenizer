<METHOD_START> void ( ResourceManager ... org.springframework.boot.web.embedded.undertow.ResourceManager[] ) { this . java.util.List<org.springframework.boot.web.embedded.undertow.ResourceManager> = java.util.Arrays . java.util.List ( org.springframework.boot.web.embedded.undertow.ResourceManager[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.io.IOException { for ( ResourceManager org.springframework.boot.web.embedded.undertow.ResourceManager : this . java.util.List<org.springframework.boot.web.embedded.undertow.ResourceManager> ) { org.springframework.boot.web.embedded.undertow.ResourceManager . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.web.embedded.undertow.Resource org.springframework.boot.web.embedded.undertow.Resource ( java.lang.String java.lang.String ) throws java.io.IOException { for ( ResourceManager org.springframework.boot.web.embedded.undertow.ResourceManager : this . java.util.List<org.springframework.boot.web.embedded.undertow.ResourceManager> ) { Resource org.springframework.boot.web.embedded.undertow.Resource = org.springframework.boot.web.embedded.undertow.ResourceManager . getResource ( java.lang.String ) ; if ( org.springframework.boot.web.embedded.undertow.Resource != null ) { return org.springframework.boot.web.embedded.undertow.Resource ; } } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ResourceChangeListener org.springframework.boot.web.embedded.undertow.ResourceChangeListener ) { throw UndertowMessages . MESSAGES . resourceChangeListenerNotSupported ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ResourceChangeListener org.springframework.boot.web.embedded.undertow.ResourceChangeListener ) { throw UndertowMessages . MESSAGES . resourceChangeListenerNotSupported ( ) ; }  <METHOD_END>
