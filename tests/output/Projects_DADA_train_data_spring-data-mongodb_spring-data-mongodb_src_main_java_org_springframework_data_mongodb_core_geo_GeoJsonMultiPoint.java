<METHOD_START> public void ( java.util.List<org.springframework.data.mongodb.core.geo.Point> < Point > java.util.List<org.springframework.data.mongodb.core.geo.Point> ) { Assert . notNull ( java.util.List<org.springframework.data.mongodb.core.geo.Point> , STRING ) ; Assert . isTrue ( java.util.List<org.springframework.data.mongodb.core.geo.Point> . size ( ) >= NUMBER , STRING ) ; this . java.util.List<org.springframework.data.mongodb.core.geo.Point> = new java.util.ArrayList<org.springframework.data.mongodb.core.geo.Point> < Point > ( java.util.List<org.springframework.data.mongodb.core.geo.Point> ) ; }  <METHOD_END>
<METHOD_START> public void ( Point org.springframework.data.mongodb.core.geo.Point , Point org.springframework.data.mongodb.core.geo.Point , Point ... org.springframework.data.mongodb.core.geo.Point[] ) { Assert . notNull ( org.springframework.data.mongodb.core.geo.Point , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.core.geo.Point , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.core.geo.Point[] , STRING ) ; this . java.util.List<org.springframework.data.mongodb.core.geo.Point> = new java.util.ArrayList<org.springframework.data.mongodb.core.geo.Point> < Point > ( ) ; this . java.util.List<org.springframework.data.mongodb.core.geo.Point> . add ( org.springframework.data.mongodb.core.geo.Point ) ; this . java.util.List<org.springframework.data.mongodb.core.geo.Point> . add ( org.springframework.data.mongodb.core.geo.Point ) ; this . java.util.List<org.springframework.data.mongodb.core.geo.Point> . addAll ( java.util.Arrays . java.util.List ( org.springframework.data.mongodb.core.geo.Point[] ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.data.mongodb.core.geo.Point> < Point > java.util.List<org.springframework.data.mongodb.core.geo.Point> ( ) { return java.util.Collections . java.util.List<org.springframework.data.mongodb.core.geo.Point> ( this . java.util.List<org.springframework.data.mongodb.core.geo.Point> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ObjectUtils . nullSafeHashCode ( this . java.util.List<org.springframework.data.mongodb.core.geo.Point> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.data.mongodb.core.geo.GeoJsonMultiPoint ) ) { return false ; } return ObjectUtils . nullSafeEquals ( this . java.util.List<org.springframework.data.mongodb.core.geo.Point> , ( ( org.springframework.data.mongodb.core.geo.GeoJsonMultiPoint ) java.lang.Object ) . java.util.List<org.springframework.data.mongodb.core.geo.Point> ) ; }  <METHOD_END>
