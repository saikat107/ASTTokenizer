<METHOD_START> @ Autowired public void void ( FileReadingMessageSource org.springframework.integration.file.config.FileReadingMessageSource ) { this . org.springframework.integration.file.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.file.config.FileReadingMessageSource ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMessageChannel org.springframework.integration.file.config.AbstractMessageChannel = org.springframework.integration.file.config.ApplicationContext . getBean ( STRING , AbstractMessageChannel .class ) ; assertEquals ( STRING , org.springframework.integration.file.config.AbstractMessageChannel . getComponentName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertFalse ( this . org.springframework.integration.file.config.AbstractEndpoint . isRunning ( ) ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , new DirectFieldAccessor ( org.springframework.integration.file.config.AbstractEndpoint ) . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.io.File java.io.File = new java.io.File ( java.lang.System . java.lang.String ( STRING ) ) ; java.io.File java.io.File = ( java.io.File ) org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertEquals ( java.io.File , java.io.File ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DirectFieldAccessor org.springframework.integration.file.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertTrue ( org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) instanceof CompositeFileListFilter ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { DirectFieldAccessor org.springframework.integration.file.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; java.util.Set<org.springframework.integration.file.config.FileListFilter<java.io.File>> < FileListFilter < java.io.File > > java.util.Set<org.springframework.integration.file.config.FileListFilter<java.io.File>> = ( java.util.Set<org.springframework.integration.file.config.FileListFilter<java.io.File>> < FileListFilter < java.io.File > > ) new DirectFieldAccessor ( org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) . getPropertyValue ( STRING ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.integration.file.config.FileListFilter<java.io.File>> . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { DirectFieldAccessor org.springframework.integration.file.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; java.util.Set<org.springframework.integration.file.config.FileListFilter<java.io.File>> < FileListFilter < java.io.File > > java.util.Set<org.springframework.integration.file.config.FileListFilter<java.io.File>> = ( java.util.Set<org.springframework.integration.file.config.FileListFilter<java.io.File>> < FileListFilter < java.io.File > > ) new DirectFieldAccessor ( org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) . getPropertyValue ( STRING ) ; boolean boolean = false ; for ( FileListFilter < java.io.File > org.springframework.integration.file.config.FileListFilter<java.io.File> : java.util.Set<org.springframework.integration.file.config.FileListFilter<java.io.File>> ) { if ( org.springframework.integration.file.config.FileListFilter<java.io.File> instanceof AcceptOnceFileListFilter ) { boolean = true ; } } assertTrue ( STRING , boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { DirectFieldAccessor org.springframework.integration.file.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; java.util.Set<org.springframework.integration.file.config.FileListFilter<?>> < FileListFilter < ? > > java.util.Set<org.springframework.integration.file.config.FileListFilter<?>> = ( java.util.Set<org.springframework.integration.file.config.FileListFilter<?>> < FileListFilter < ? > > ) new DirectFieldAccessor ( org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) . getPropertyValue ( STRING ) ; java.lang.String java.lang.String = null ; for ( FileListFilter < ? > org.springframework.integration.file.config.FileListFilter<?> : java.util.Set<org.springframework.integration.file.config.FileListFilter<?>> ) { if ( org.springframework.integration.file.config.FileListFilter<> instanceof SimplePatternFileListFilter ) { java.lang.String = ( java.lang.String ) new DirectFieldAccessor ( org.springframework.integration.file.config.FileListFilter<> ) . getPropertyValue ( STRING ) ; } } assertNotNull ( STRING , java.lang.String ) ; assertEquals ( STRING , java.lang.String . java.lang.String ( ) ) ; }  <METHOD_END>
