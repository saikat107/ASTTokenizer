<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> protected java.util.Set<org.springframework.integration.dispatcher.MessageHandler> < MessageHandler > java.util.Set<org.springframework.integration.dispatcher.MessageHandler> ( ) { return this . org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet<org.springframework.integration.dispatcher.MessageHandler> . asUnmodifiableSet ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public synchronized boolean boolean ( MessageHandler org.springframework.integration.dispatcher.MessageHandler ) { Assert . notNull ( org.springframework.integration.dispatcher.MessageHandler , STRING ) ; Assert . isTrue ( this . org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet<org.springframework.integration.dispatcher.MessageHandler> . size ( ) < this . int , STRING ) ; boolean boolean = this . org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet<org.springframework.integration.dispatcher.MessageHandler> . add ( org.springframework.integration.dispatcher.MessageHandler ) ; if ( this . org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet<org.springframework.integration.dispatcher.MessageHandler> . size ( ) == NUMBER ) { this . org.springframework.integration.dispatcher.MessageHandler = org.springframework.integration.dispatcher.MessageHandler ; } else { this . org.springframework.integration.dispatcher.MessageHandler = null ; } return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public synchronized boolean boolean ( MessageHandler org.springframework.integration.dispatcher.MessageHandler ) { Assert . notNull ( org.springframework.integration.dispatcher.MessageHandler , STRING ) ; boolean boolean = this . org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet<org.springframework.integration.dispatcher.MessageHandler> . remove ( org.springframework.integration.dispatcher.MessageHandler ) ; if ( this . org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet<org.springframework.integration.dispatcher.MessageHandler> . size ( ) == NUMBER ) { this . org.springframework.integration.dispatcher.MessageHandler = this . org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet<org.springframework.integration.dispatcher.MessageHandler> . iterator ( ) . next ( ) ; } else { this . org.springframework.integration.dispatcher.MessageHandler = null ; } return boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( Message < ? > org.springframework.integration.dispatcher.Message<?> ) { MessageHandler org.springframework.integration.dispatcher.MessageHandler = this . org.springframework.integration.dispatcher.MessageHandler ; if ( org.springframework.integration.dispatcher.MessageHandler != null ) { try { org.springframework.integration.dispatcher.MessageHandler . handleMessage ( org.springframework.integration.dispatcher.Message<> ) ; return true ; } catch ( java.lang.Exception java.lang.Exception ) { throw java.lang.RuntimeException ( org.springframework.integration.dispatcher.Message<> , java.lang.Exception ) ; } } return false ; }  <METHOD_END>
<METHOD_START> protected java.lang.RuntimeException java.lang.RuntimeException ( Message < ? > org.springframework.integration.dispatcher.Message<?> , java.lang.Exception java.lang.Exception ) { java.lang.RuntimeException java.lang.RuntimeException = ( java.lang.Exception instanceof java.lang.RuntimeException ) ? ( java.lang.RuntimeException ) java.lang.Exception : new MessageDeliveryException ( org.springframework.integration.dispatcher.Message<> , STRING , java.lang.Exception ) ; if ( java.lang.Exception instanceof MessagingException && ( ( MessagingException ) java.lang.Exception ) . getFailedMessage ( ) == null ) { java.lang.RuntimeException = new MessagingException ( org.springframework.integration.dispatcher.Message<> , STRING , java.lang.Exception ) ; } return java.lang.RuntimeException ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.Class<? extends org.springframework.integration.dispatcher.AbstractDispatcher> ( ) . java.lang.String ( ) + STRING + this . org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet<org.springframework.integration.dispatcher.MessageHandler> . toString ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.integration.dispatcher.OrderedAwareCopyOnWriteArraySet<org.springframework.integration.dispatcher.MessageHandler> . size ( ) ; }  <METHOD_END>
