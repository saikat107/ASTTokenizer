<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> private void void ( java.lang.String [] java.lang.String[] ) { Restarter . initialize ( java.lang.String[] , RestartInitializer . NONE ) ; SpringApplication org.springframework.boot.devtools.SpringApplication = new SpringApplication ( RemoteClientConfiguration .class ) ; org.springframework.boot.devtools.SpringApplication . setWebApplicationType ( WebApplicationType . NONE ) ; org.springframework.boot.devtools.SpringApplication . setBanner ( org.springframework.boot.devtools.Banner ( ) ) ; org.springframework.boot.devtools.SpringApplication . setInitializers ( java.util.Collection<org.springframework.boot.devtools.ApplicationContextInitializer<?>> ( ) ) ; org.springframework.boot.devtools.SpringApplication . setListeners ( java.util.Collection<org.springframework.boot.devtools.ApplicationListener<?>> ( ) ) ; org.springframework.boot.devtools.SpringApplication . run ( java.lang.String[] ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private java.util.Collection<org.springframework.boot.devtools.ApplicationContextInitializer<?>> < ApplicationContextInitializer < ? > > java.util.Collection<org.springframework.boot.devtools.ApplicationContextInitializer<?>> ( ) { java.util.List<org.springframework.boot.devtools.ApplicationContextInitializer<?>> < ApplicationContextInitializer < ? > > java.util.List<org.springframework.boot.devtools.ApplicationContextInitializer<?>> = new java.util.ArrayList<org.springframework.boot.devtools.ApplicationContextInitializer<?>> <> ( ) ; java.util.List<org.springframework.boot.devtools.ApplicationContextInitializer<?>> . add ( new RestartScopeInitializer ( ) ) ; return java.util.List<org.springframework.boot.devtools.ApplicationContextInitializer<?>> ; }  <METHOD_END>
<METHOD_START> private java.util.Collection<org.springframework.boot.devtools.ApplicationListener<?>> < ApplicationListener < ? > > java.util.Collection<org.springframework.boot.devtools.ApplicationListener<?>> ( ) { java.util.List<org.springframework.boot.devtools.ApplicationListener<?>> < ApplicationListener < ? > > java.util.List<org.springframework.boot.devtools.ApplicationListener<?>> = new java.util.ArrayList<org.springframework.boot.devtools.ApplicationListener<?>> <> ( ) ; java.util.List<org.springframework.boot.devtools.ApplicationListener<?>> . add ( new AnsiOutputApplicationListener ( ) ) ; java.util.List<org.springframework.boot.devtools.ApplicationListener<?>> . add ( new ConfigFileApplicationListener ( ) ) ; java.util.List<org.springframework.boot.devtools.ApplicationListener<?>> . add ( new ClasspathLoggingApplicationListener ( ) ) ; java.util.List<org.springframework.boot.devtools.ApplicationListener<?>> . add ( new LoggingApplicationListener ( ) ) ; java.util.List<org.springframework.boot.devtools.ApplicationListener<?>> . add ( new RemoteUrlPropertyExtractor ( ) ) ; return java.util.List<org.springframework.boot.devtools.ApplicationListener<?>> ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.devtools.Banner org.springframework.boot.devtools.Banner ( ) { ClassPathResource org.springframework.boot.devtools.ClassPathResource = new ClassPathResource ( STRING , org.springframework.boot.devtools.RemoteSpringApplication .class ) ; return new ResourceBanner ( org.springframework.boot.devtools.ClassPathResource ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { while ( true ) { try { java.lang.Thread . void ( NUMBER ) ; } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { java.lang.Thread . java.lang.Thread ( ) . void ( ) ; } } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String [] java.lang.String[] ) { new org.springframework.boot.devtools.RemoteSpringApplication ( ) . void ( java.lang.String[] ) ; }  <METHOD_END>
