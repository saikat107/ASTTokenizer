<METHOD_START> static java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element ) { return ( org.w3c.dom.Element . boolean ( org.springframework.cache.config.CacheNamespaceHandler . java.lang.String ) ? org.w3c.dom.Element . java.lang.String ( org.springframework.cache.config.CacheNamespaceHandler . java.lang.String ) : org.springframework.cache.config.CacheNamespaceHandler . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> static org.springframework.cache.config.BeanDefinition org.springframework.cache.config.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.cache.config.BeanDefinition ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.cache.config.BeanDefinition . getPropertyValues ( ) . add ( STRING , new RuntimeBeanReference ( java.lang.String . java.lang.String ( ) ) ) ; } return org.springframework.cache.config.BeanDefinition ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { registerBeanDefinitionParser ( STRING , new AnnotationDrivenCacheBeanDefinitionParser ( ) ) ; registerBeanDefinitionParser ( STRING , new CacheAdviceParser ( ) ) ; }  <METHOD_END>
