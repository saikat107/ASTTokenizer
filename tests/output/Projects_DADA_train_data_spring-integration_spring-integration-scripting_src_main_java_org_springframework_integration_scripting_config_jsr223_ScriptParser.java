<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( org.w3c.dom.Element org.w3c.dom.Element ) { return ScriptExecutingMessageProcessor .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( BeanDefinitionBuilder org.springframework.integration.scripting.config.jsr223.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.scripting.config.jsr223.ParserContext ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( LOCATION_ATTRIBUTE ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { if ( ! StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.scripting.config.jsr223.ParserContext . getReaderContext ( ) . error ( STRING + java.lang.String + STRING , org.w3c.dom.Element ) ; return; } else { java.lang.String = java.lang.String ( java.lang.String , org.springframework.integration.scripting.config.jsr223.ParserContext , org.w3c.dom.Element ) ; if ( java.lang.String == null ) { org.springframework.integration.scripting.config.jsr223.ParserContext . getReaderContext ( ) . error ( STRING + java.lang.String + STRING , org.w3c.dom.Element ) ; return; } } } org.springframework.integration.scripting.config.jsr223.BeanDefinitionBuilder . addConstructorArgValue ( ScriptExecutorFactory . getScriptExecutor ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String , ParserContext org.springframework.integration.scripting.config.jsr223.ParserContext , org.w3c.dom.Element org.w3c.dom.Element ) { javax.script.ScriptEngineManager javax.script.ScriptEngineManager = new javax.script.ScriptEngineManager ( ) ; javax.script.ScriptEngine javax.script.ScriptEngine = null ; int int = java.lang.String . int ( STRING ) + NUMBER ; if ( int < NUMBER ) { return null ; } java.lang.String java.lang.String = java.lang.String . java.lang.String ( int ) ; javax.script.ScriptEngine = javax.script.ScriptEngineManager . javax.script.ScriptEngine ( java.lang.String ) ; if ( javax.script.ScriptEngine == null ) { org.springframework.integration.scripting.config.jsr223.ParserContext . getReaderContext ( ) . error ( STRING + java.lang.String + STRING , org.w3c.dom.Element ) ; } return javax.script.ScriptEngine . javax.script.ScriptEngineFactory ( ) . java.lang.String ( ) ; }  <METHOD_END>
