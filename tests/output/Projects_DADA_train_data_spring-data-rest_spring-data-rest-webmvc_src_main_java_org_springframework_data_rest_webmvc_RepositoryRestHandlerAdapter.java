<METHOD_START> public void ( java.util.List<org.springframework.data.rest.webmvc.HandlerMethodArgumentResolver> < HandlerMethodArgumentResolver > java.util.List<org.springframework.data.rest.webmvc.HandlerMethodArgumentResolver> , org . springframework . org.springframework.hateoas . org.springframework.hateoas . org.springframework.hateoas org.springframework.hateoas.mvc.ResourceProcessorInvoker ) { super( org.springframework.hateoas.mvc.ResourceProcessorInvoker ); this . java.util.List<org.springframework.data.rest.webmvc.HandlerMethodArgumentResolver> = java.util.List<org.springframework.data.rest.webmvc.HandlerMethodArgumentResolver> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { setCustomArgumentResolvers ( java.util.List<org.springframework.data.rest.webmvc.HandlerMethodArgumentResolver> ) ; super. afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return Ordered . HIGHEST_PRECEDENCE ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( HandlerMethod org.springframework.data.rest.webmvc.HandlerMethod ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.data.rest.webmvc.HandlerMethod . getBeanType ( ) ; return AnnotationUtils . findAnnotation ( java.lang.Class<> , BasePathAwareController .class ) != null ; }  <METHOD_END>
