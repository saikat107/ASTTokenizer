<METHOD_START> public void ( SpELContext org.springframework.data.mongodb.core.convert.SpELContext , MappingContext < ? extends MongoPersistentEntity < ? > , MongoPersistentProperty > org.springframework.data.mongodb.core.convert.MappingContext<? extends org.springframework.data.mongodb.core.convert.MongoPersistentEntity<?>,org.springframework.data.mongodb.core.convert.MongoPersistentProperty> , ValueResolver org.springframework.data.mongodb.core.convert.ValueResolver ) { this . org.springframework.data.mongodb.core.convert.SpELContext = org.springframework.data.mongodb.core.convert.SpELContext ; this . org.springframework.data.mongodb.core.convert.MappingContext<? extends org.springframework.data.mongodb.core.convert.MongoPersistentEntity<?>,org.springframework.data.mongodb.core.convert.MongoPersistentProperty> = org.springframework.data.mongodb.core.convert.MappingContext<,org.springframework.data.mongodb.core.convert.MongoPersistentProperty> ; this . org.springframework.data.mongodb.core.convert.ValueResolver = org.springframework.data.mongodb.core.convert.ValueResolver ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( MongoPersistentProperty org.springframework.data.mongodb.core.convert.MongoPersistentProperty , DBRef org.springframework.data.mongodb.core.convert.DBRef , java.lang.Object java.lang.Object ) { if ( org.springframework.data.mongodb.core.convert.DBRef == null ) { return java.lang.Object ; } MongoPersistentEntity < ? > org.springframework.data.mongodb.core.convert.MongoPersistentEntity<?> = org.springframework.data.mongodb.core.convert.MappingContext<,org.springframework.data.mongodb.core.convert.MongoPersistentProperty> . getRequiredPersistentEntity ( org.springframework.data.mongodb.core.convert.MongoPersistentProperty ) ; MongoPersistentProperty org.springframework.data.mongodb.core.convert.MongoPersistentProperty = org.springframework.data.mongodb.core.convert.MongoPersistentEntity<> . getIdProperty ( ) . orElseThrow ( ( ) new IllegalStateException ( STRING ) ) ; if ( org.springframework.data.mongodb.core.convert.MongoPersistentProperty . usePropertyAccess ( ) ) { return java.lang.Object ; } SpELExpressionEvaluator org.springframework.data.mongodb.core.convert.SpELExpressionEvaluator = new DefaultSpELExpressionEvaluator ( java.lang.Object , org.springframework.data.mongodb.core.convert.SpELContext ) ; PersistentPropertyAccessor org.springframework.data.mongodb.core.convert.PersistentPropertyAccessor = org.springframework.data.mongodb.core.convert.MongoPersistentEntity<> . getPropertyAccessor ( java.lang.Object ) ; Document org.springframework.data.mongodb.core.convert.Document = new Document ( org.springframework.data.mongodb.core.convert.MongoPersistentProperty . getFieldName ( ) , org.springframework.data.mongodb.core.convert.DBRef . getId ( ) ) ; ObjectPath org.springframework.data.mongodb.core.convert.ObjectPath = ObjectPath . ROOT . push ( java.lang.Object , org.springframework.data.mongodb.core.convert.MongoPersistentEntity<> , null ) ; org.springframework.data.mongodb.core.convert.PersistentPropertyAccessor . setProperty ( org.springframework.data.mongodb.core.convert.MongoPersistentProperty , org.springframework.data.mongodb.core.convert.ValueResolver . getValueInternal ( org.springframework.data.mongodb.core.convert.MongoPersistentProperty , org.springframework.data.mongodb.core.convert.Document , org.springframework.data.mongodb.core.convert.SpELExpressionEvaluator , org.springframework.data.mongodb.core.convert.ObjectPath ) ) ; return java.lang.Object ; }  <METHOD_END>
