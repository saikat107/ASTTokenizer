<METHOD_START> public void ( java.lang.String java.lang.String ) { this( java.lang.String , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , org.springframework.integration.rmi.RmiOutboundGateway.RmiProxyFactoryBeanConfigurer org.springframework.integration.rmi.RmiOutboundGateway.RmiProxyFactoryBeanConfigurer ) { this . org.springframework.integration.rmi.RmiOutboundGateway.RmiProxyFactoryBeanConfigurer = org.springframework.integration.rmi.RmiOutboundGateway.RmiProxyFactoryBeanConfigurer ; this . org.springframework.integration.rmi.RequestReplyExchanger = org.springframework.integration.rmi.RequestReplyExchanger ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.integration.rmi.MessageChannel ) { setOutputChannel ( org.springframework.integration.rmi.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.rmi.Message<?> ) { if ( ! ( org.springframework.integration.rmi.Message<> . getPayload ( ) instanceof java.io.Serializable ) ) { throw new MessageHandlingException ( org.springframework.integration.rmi.Message<> , this . getComponentName ( ) + STRING + STRING + org.springframework.integration.rmi.Message<> . getPayload ( ) . getClass ( ) . getName ( ) + STRING ) ; } try { return this . org.springframework.integration.rmi.RequestReplyExchanger . exchange ( org.springframework.integration.rmi.Message<> ) ; } catch ( MessagingException org.springframework.integration.rmi.MessagingException ) { throw new MessageHandlingException ( org.springframework.integration.rmi.Message<> , org.springframework.integration.rmi.MessagingException ) ; } catch ( RemoteAccessException org.springframework.integration.rmi.RemoteAccessException ) { throw new MessageHandlingException ( org.springframework.integration.rmi.Message<> , STRING + this . getComponentName ( ) , org.springframework.integration.rmi.RemoteAccessException ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.integration.rmi.RequestReplyExchanger org.springframework.integration.rmi.RequestReplyExchanger ( java.lang.String java.lang.String ) { RmiProxyFactoryBean org.springframework.integration.rmi.RmiProxyFactoryBean = new RmiProxyFactoryBean ( ) ; org.springframework.integration.rmi.RmiProxyFactoryBean . setServiceInterface ( RequestReplyExchanger .class ) ; org.springframework.integration.rmi.RmiProxyFactoryBean . setServiceUrl ( java.lang.String ) ; org.springframework.integration.rmi.RmiProxyFactoryBean . setLookupStubOnStartup ( false ) ; org.springframework.integration.rmi.RmiProxyFactoryBean . setRefreshStubOnConnectFailure ( true ) ; if ( this . org.springframework.integration.rmi.RmiOutboundGateway.RmiProxyFactoryBeanConfigurer != null ) { this . org.springframework.integration.rmi.RmiOutboundGateway.RmiProxyFactoryBeanConfigurer . void ( org.springframework.integration.rmi.RmiProxyFactoryBean ) ; } org.springframework.integration.rmi.RmiProxyFactoryBean . afterPropertiesSet ( ) ; return ( RequestReplyExchanger ) org.springframework.integration.rmi.RmiProxyFactoryBean . getObject ( ) ; }  <METHOD_END>
<METHOD_START> void void ( RmiProxyFactoryBean org.springframework.integration.rmi.RmiProxyFactoryBean );  <METHOD_END>
