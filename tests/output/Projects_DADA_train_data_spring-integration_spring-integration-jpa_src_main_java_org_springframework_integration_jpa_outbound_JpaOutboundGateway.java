<METHOD_START> public void ( JpaExecutor org.springframework.integration.jpa.outbound.JpaExecutor ) { Assert . notNull ( org.springframework.integration.jpa.outbound.JpaExecutor , STRING ) ; this . org.springframework.integration.jpa.outbound.JpaExecutor = org.springframework.integration.jpa.outbound.JpaExecutor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { this . org.springframework.integration.jpa.outbound.JpaExecutor . setBeanFactory ( this . getBeanFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.jpa.outbound.Message<?> ) { final java.lang.Object java.lang.Object ; if ( OutboundGatewayType . RETRIEVING . equals ( this . org.springframework.integration.jpa.outbound.OutboundGatewayType ) ) { java.lang.Object = this . org.springframework.integration.jpa.outbound.JpaExecutor . poll ( org.springframework.integration.jpa.outbound.Message<> ) ; } else if ( OutboundGatewayType . UPDATING . equals ( this . org.springframework.integration.jpa.outbound.OutboundGatewayType ) ) { java.lang.Object = this . org.springframework.integration.jpa.outbound.JpaExecutor . executeOutboundJpaOperation ( org.springframework.integration.jpa.outbound.Message<> ) ; } else { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , this . org.springframework.integration.jpa.outbound.OutboundGatewayType ) ) ; } if ( java.lang.Object == null || ! this . boolean ) { return null ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> public void void ( OutboundGatewayType org.springframework.integration.jpa.outbound.OutboundGatewayType ) { Assert . notNull ( org.springframework.integration.jpa.outbound.OutboundGatewayType , STRING ) ; this . org.springframework.integration.jpa.outbound.OutboundGatewayType = org.springframework.integration.jpa.outbound.OutboundGatewayType ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
