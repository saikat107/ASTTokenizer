<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , ClassUtils . getDefaultClassLoader ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.net.URLClassLoader java.net.URLClassLoader = new java.net.URLClassLoader ( new java.net.URL [] { new java.net.URL ( STRING ) , new java.io.File ( STRING ) . java.io.File ( ) . java.net.URI ( ) . java.net.URL ( ) } ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , java.net.URLClassLoader ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , ClassUtils . getDefaultClassLoader ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , ClassUtils . getDefaultClassLoader ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , ClassUtils . getDefaultClassLoader ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , null ) ; assertThat ( java.util.List<java.lang.String> ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , ClassUtils . getDefaultClassLoader ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , ClassUtils . getDefaultClassLoader ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , null ) ; assertThat ( java.util.List<java.lang.String> ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , ClassUtils . getDefaultClassLoader ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING STRING , ClassUtils . getDefaultClassLoader ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING STRING , ClassUtils . getDefaultClassLoader ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , ClassUtils . getDefaultClassLoader ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ResourceUtils . getUrls ( STRING , ClassUtils . getDefaultClassLoader ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
