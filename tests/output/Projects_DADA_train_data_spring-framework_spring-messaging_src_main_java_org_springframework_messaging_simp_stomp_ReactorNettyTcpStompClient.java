<METHOD_START> public void ( ) { this( STRING , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int ) { this . org.springframework.messaging.simp.stomp.TcpOperations<byte[]> = new ReactorNettyTcpClient < byte [] > ( java.lang.String , int , new StompReactorNettyCodec ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( TcpOperations < byte [] > org.springframework.messaging.simp.stomp.TcpOperations<byte[]> ) { Assert . notNull ( org.springframework.messaging.simp.stomp.TcpOperations<byte[]> , STRING ) ; this . org.springframework.messaging.simp.stomp.TcpOperations<byte[]> = org.springframework.messaging.simp.stomp.TcpOperations<byte[]> ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.stomp.ListenableFuture<org.springframework.messaging.simp.stomp.StompSession> < StompSession > org.springframework.messaging.simp.stomp.ListenableFuture<org.springframework.messaging.simp.stomp.StompSession> ( StompSessionHandler org.springframework.messaging.simp.stomp.StompSessionHandler ) { return org.springframework.messaging.simp.stomp.ListenableFuture<org.springframework.messaging.simp.stomp.StompSession> ( null , org.springframework.messaging.simp.stomp.StompSessionHandler ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.simp.stomp.ListenableFuture<org.springframework.messaging.simp.stomp.StompSession> < StompSession > org.springframework.messaging.simp.stomp.ListenableFuture<org.springframework.messaging.simp.stomp.StompSession> ( StompHeaders org.springframework.messaging.simp.stomp.StompHeaders , StompSessionHandler org.springframework.messaging.simp.stomp.StompSessionHandler ) { ConnectionHandlingStompSession org.springframework.messaging.simp.stomp.ConnectionHandlingStompSession = createSession ( org.springframework.messaging.simp.stomp.StompHeaders , org.springframework.messaging.simp.stomp.StompSessionHandler ) ; this . org.springframework.messaging.simp.stomp.TcpOperations<byte[]> . connect ( org.springframework.messaging.simp.stomp.ConnectionHandlingStompSession ) ; return org.springframework.messaging.simp.stomp.ConnectionHandlingStompSession . getSessionFuture ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . org.springframework.messaging.simp.stomp.TcpOperations<byte[]> . shutdown ( ) ; }  <METHOD_END>
