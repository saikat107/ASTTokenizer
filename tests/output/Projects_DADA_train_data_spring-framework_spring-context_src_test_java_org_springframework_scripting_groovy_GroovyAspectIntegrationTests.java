<METHOD_START> @ Test public void void ( ) { org.springframework.scripting.groovy.GenericXmlApplicationContext = new GenericXmlApplicationContext ( java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectIntegrationTests> ( ) , java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectIntegrationTests> ( ) . java.lang.String ( ) + STRING ) ; TestService org.springframework.scripting.groovy.TestService = org.springframework.scripting.groovy.GenericXmlApplicationContext . getBean ( STRING , TestService .class ) ; LogUserAdvice org.springframework.scripting.groovy.LogUserAdvice = org.springframework.scripting.groovy.GenericXmlApplicationContext . getBean ( LogUserAdvice .class ) ; assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountThrows ( ) ) ; try { org.springframework.scripting.groovy.TestService . sayHello ( ) ; fail ( STRING ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { assertEquals ( STRING , java.lang.RuntimeException . java.lang.String ( ) ) ; } assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountThrows ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.scripting.groovy.GenericXmlApplicationContext = new GenericXmlApplicationContext ( java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectIntegrationTests> ( ) , java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectIntegrationTests> ( ) . java.lang.String ( ) + STRING ) ; TestService org.springframework.scripting.groovy.TestService = org.springframework.scripting.groovy.GenericXmlApplicationContext . getBean ( STRING , TestService .class ) ; LogUserAdvice org.springframework.scripting.groovy.LogUserAdvice = org.springframework.scripting.groovy.GenericXmlApplicationContext . getBean ( LogUserAdvice .class ) ; assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountThrows ( ) ) ; try { org.springframework.scripting.groovy.TestService . sayHello ( ) ; fail ( STRING ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { assertEquals ( STRING , java.lang.RuntimeException . java.lang.String ( ) ) ; } assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountThrows ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.scripting.groovy.GenericXmlApplicationContext = new GenericXmlApplicationContext ( java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectIntegrationTests> ( ) , java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectIntegrationTests> ( ) . java.lang.String ( ) + STRING ) ; TestService org.springframework.scripting.groovy.TestService = org.springframework.scripting.groovy.GenericXmlApplicationContext . getBean ( STRING , TestService .class ) ; LogUserAdvice org.springframework.scripting.groovy.LogUserAdvice = org.springframework.scripting.groovy.GenericXmlApplicationContext . getBean ( LogUserAdvice .class ) ; assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountThrows ( ) ) ; try { org.springframework.scripting.groovy.TestService . sayHello ( ) ; fail ( STRING ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { assertEquals ( STRING , java.lang.RuntimeException . java.lang.String ( ) ) ; } assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountThrows ( ) ) ; assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountBefore ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.scripting.groovy.GenericXmlApplicationContext = new GenericXmlApplicationContext ( java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectIntegrationTests> ( ) , java.lang.Class<? extends org.springframework.scripting.groovy.GroovyAspectIntegrationTests> ( ) . java.lang.String ( ) + STRING ) ; TestService org.springframework.scripting.groovy.TestService = org.springframework.scripting.groovy.GenericXmlApplicationContext . getBean ( STRING , TestService .class ) ; LogUserAdvice org.springframework.scripting.groovy.LogUserAdvice = org.springframework.scripting.groovy.GenericXmlApplicationContext . getBean ( LogUserAdvice .class ) ; assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountThrows ( ) ) ; try { org.springframework.scripting.groovy.TestService . sayHello ( ) ; fail ( STRING ) ; } catch ( TestException org.springframework.scripting.groovy.TestException ) { assertEquals ( STRING , org.springframework.scripting.groovy.TestException . getMessage ( ) ) ; } assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountBefore ( ) ) ; assertEquals ( NUMBER , org.springframework.scripting.groovy.LogUserAdvice . getCountThrows ( ) ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { if ( org.springframework.scripting.groovy.GenericXmlApplicationContext != null ) { org.springframework.scripting.groovy.GenericXmlApplicationContext . close ( ) ; } }  <METHOD_END>
