<METHOD_START> public void ( ) { this . org.springframework.beans.propertyeditors.ResourceEditor = new ResourceEditor ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ResourceEditor org.springframework.beans.propertyeditors.ResourceEditor ) { Assert . notNull ( org.springframework.beans.propertyeditors.ResourceEditor , STRING ) ; this . org.springframework.beans.propertyeditors.ResourceEditor = org.springframework.beans.propertyeditors.ResourceEditor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { if ( ! StringUtils . hasText ( java.lang.String ) ) { void ( null ) ; return; } java.io.File java.io.File = null ; if ( ! ResourceUtils . isUrl ( java.lang.String ) ) { java.io.File = new java.io.File ( java.lang.String ) ; if ( java.io.File . boolean ( ) ) { void ( java.io.File ) ; return; } } this . org.springframework.beans.propertyeditors.ResourceEditor . setAsText ( java.lang.String ) ; Resource org.springframework.beans.propertyeditors.Resource = ( Resource ) this . org.springframework.beans.propertyeditors.ResourceEditor . getValue ( ) ; if ( java.io.File == null || org.springframework.beans.propertyeditors.Resource . exists ( ) ) { try { void ( org.springframework.beans.propertyeditors.Resource . getFile ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.beans.propertyeditors.Resource + STRING + java.io.IOException . java.lang.String ( ) ) ; } } else { void ( java.io.File ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.io.File java.io.File = ( java.io.File ) java.lang.Object ( ) ; return ( java.io.File != null ? java.io.File . java.lang.String ( ) : STRING ) ; }  <METHOD_END>
