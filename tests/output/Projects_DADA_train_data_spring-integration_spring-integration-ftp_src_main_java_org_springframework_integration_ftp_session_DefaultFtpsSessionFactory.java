<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( javax.net.ssl.TrustManager javax.net.ssl.TrustManager ) { this . javax.net.ssl.TrustManager = javax.net.ssl.TrustManager ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String [] java.lang.String[] ) { this . java.lang.String[] = java.util.Arrays . java.lang.String[] ( java.lang.String[] , java.lang.String[] . int ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String [] java.lang.String[] ) { this . java.lang.String[] = java.util.Arrays . java.lang.String[] ( java.lang.String[] , java.lang.String[] . int ) ; }  <METHOD_END>
<METHOD_START> public void void ( javax.net.ssl.KeyManager javax.net.ssl.KeyManager ) { this . javax.net.ssl.KeyManager = javax.net.ssl.KeyManager ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.ftp.session.FTPSClient org.springframework.integration.ftp.session.FTPSClient ( ) { try { if ( StringUtils . hasText ( this . java.lang.String ) ) { return new FTPSClient ( this . java.lang.String , this . boolean ) ; } return new FTPSClient ( this . boolean ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( java.lang.Exception instanceof java.lang.RuntimeException ) { throw ( java.lang.RuntimeException ) java.lang.Exception ; } throw new java.lang.RuntimeException ( STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( FTPSClient org.springframework.integration.ftp.session.FTPSClient ) throws java.io.IOException { org.springframework.integration.ftp.session.FTPSClient . execPBSZ ( NUMBER ) ; org.springframework.integration.ftp.session.FTPSClient . execPROT ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( FTPSClient org.springframework.integration.ftp.session.FTPSClient ) throws java.io.IOException { if ( StringUtils . hasText ( this . java.lang.String ) ) { org.springframework.integration.ftp.session.FTPSClient . setAuthValue ( this . java.lang.String ) ; } if ( this . javax.net.ssl.TrustManager != null ) { org.springframework.integration.ftp.session.FTPSClient . setTrustManager ( this . javax.net.ssl.TrustManager ) ; } if ( this . java.lang.String[] != null ) { org.springframework.integration.ftp.session.FTPSClient . setEnabledCipherSuites ( this . java.lang.String[] ) ; } if ( this . java.lang.String[] != null ) { org.springframework.integration.ftp.session.FTPSClient . setEnabledProtocols ( this . java.lang.String[] ) ; } if ( this . java.lang.Boolean != null ) { org.springframework.integration.ftp.session.FTPSClient . setEnabledSessionCreation ( this . java.lang.Boolean ) ; } if ( this . java.lang.Boolean != null ) { org.springframework.integration.ftp.session.FTPSClient . setUseClientMode ( this . java.lang.Boolean ) ; } if ( this . java.lang.Boolean != null ) { org.springframework.integration.ftp.session.FTPSClient . setEnabledSessionCreation ( this . java.lang.Boolean ) ; } if ( this . javax.net.ssl.KeyManager != null ) { org.springframework.integration.ftp.session.FTPSClient . setKeyManager ( this . javax.net.ssl.KeyManager ) ; } if ( this . java.lang.Boolean != null ) { org.springframework.integration.ftp.session.FTPSClient . setNeedClientAuth ( this . java.lang.Boolean ) ; } if ( this . java.lang.Boolean != null ) { org.springframework.integration.ftp.session.FTPSClient . setWantClientAuth ( this . java.lang.Boolean ) ; } }  <METHOD_END>
