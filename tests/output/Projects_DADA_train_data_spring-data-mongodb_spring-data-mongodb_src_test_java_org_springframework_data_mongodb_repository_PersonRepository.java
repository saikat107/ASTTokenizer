<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , fields = STRING ) java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING ) org.springframework.data.mongodb.repository.Person [] org.springframework.data.mongodb.repository.Person[] ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String , Sort org.springframework.data.mongodb.repository.Sort );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( int int , Sort org.springframework.data.mongodb.repository.Sort );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> < Person > org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String , Pageable org.springframework.data.mongodb.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> < Person > org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String , Pageable org.springframework.data.mongodb.repository.Pageable );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String ... java.lang.String[] );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( int int , int int );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.repository.Person org.springframework.data.mongodb.repository.Person ( Address org.springframework.data.mongodb.repository.Address );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( Address org.springframework.data.mongodb.repository.Address );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String , int int , int int );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( int int , java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( Point org.springframework.data.mongodb.repository.Point );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( Circle org.springframework.data.mongodb.repository.Circle );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( Box org.springframework.data.mongodb.repository.Box );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( Polygon org.springframework.data.mongodb.repository.Polygon );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( Sex org.springframework.data.mongodb.repository.Sex );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( Sex org.springframework.data.mongodb.repository.Sex , Pageable org.springframework.data.mongodb.repository.Pageable );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.repository.GeoResults<org.springframework.data.mongodb.repository.Person> < Person > org.springframework.data.mongodb.repository.GeoResults<org.springframework.data.mongodb.repository.Person> ( Point org.springframework.data.mongodb.repository.Point , Distance org.springframework.data.mongodb.repository.Distance );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.repository.GeoResults<org.springframework.data.mongodb.repository.Person> < Person > org.springframework.data.mongodb.repository.GeoResults<org.springframework.data.mongodb.repository.Person> ( Point org.springframework.data.mongodb.repository.Point , Range < Distance > org.springframework.data.mongodb.repository.Range<org.springframework.data.mongodb.repository.Distance> );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.repository.GeoPage<org.springframework.data.mongodb.repository.Person> < Person > org.springframework.data.mongodb.repository.GeoPage<org.springframework.data.mongodb.repository.Person> ( Point org.springframework.data.mongodb.repository.Point , Distance org.springframework.data.mongodb.repository.Distance , Pageable org.springframework.data.mongodb.repository.Pageable );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( User org.springframework.data.mongodb.repository.User );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.util.Date java.util.Date );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.util.Date java.util.Date );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.util.Date java.util.Date );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.util.Date java.util.Date );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.util.Date java.util.Date );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( Credentials org.springframework.data.mongodb.repository.Credentials );  <METHOD_END>
<METHOD_START> long long ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> int int ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , count = true ) long long ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> boolean boolean ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ ExistsQuery ( value = STRING ) boolean boolean ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.repository.Slice<org.springframework.data.mongodb.repository.Person> < Person > org.springframework.data.mongodb.repository.Slice<org.springframework.data.mongodb.repository.Person> ( int int , Pageable org.springframework.data.mongodb.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> < Person > org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> ( Pageable org.springframework.data.mongodb.repository.Pageable );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.lang.Long java.lang.Long ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , delete = true ) java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , delete = true ) java.lang.Long java.lang.Long ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> < Person > org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> ( java.util.List<org.springframework.data.mongodb.repository.Address> < Address > java.util.List<org.springframework.data.mongodb.repository.Address> , Pageable org.springframework.data.mongodb.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> < Person > org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , java.lang.String java.lang.String , Pageable org.springframework.data.mongodb.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> < Person > org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String , java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , Pageable org.springframework.data.mongodb.repository.Pageable );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> < Person > org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String , Pageable org.springframework.data.mongodb.repository.Pageable );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.repository.PersonSummary org.springframework.data.mongodb.repository.PersonSummary ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.stream.Stream<org.springframework.data.mongodb.repository.Person> < Person > java.util.stream.Stream<org.springframework.data.mongodb.repository.Person> ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.mongodb.repository.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.Person> ( @ Param ( STRING ) java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ CountQuery ( STRING ) long long ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ DeleteQuery ( STRING ) void void ( java.lang.String java.lang.String );  <METHOD_END>
