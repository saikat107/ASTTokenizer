<METHOD_START> public void ( Shape org.springframework.data.mongodb.core.query.Shape ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Shape , STRING ) ; this . org.springframework.data.mongodb.core.query.Shape = org.springframework.data.mongodb.core.query.Shape ; this . java.lang.String = java.lang.String ( org.springframework.data.mongodb.core.query.Shape ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.Shape org.springframework.data.mongodb.core.query.Shape ( ) { return org.springframework.data.mongodb.core.query.Shape ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( Shape org.springframework.data.mongodb.core.query.Shape ) { Assert . notNull ( org.springframework.data.mongodb.core.query.Shape , STRING ) ; if ( org.springframework.data.mongodb.core.query.Shape instanceof Box ) { return STRING ; } else if ( org.springframework.data.mongodb.core.query.Shape instanceof Circle ) { return STRING ; } else if ( org.springframework.data.mongodb.core.query.Shape instanceof Polygon ) { return STRING ; } else if ( org.springframework.data.mongodb.core.query.Shape instanceof Sphere ) { return org . springframework . data . mongodb . core . geo . Sphere . COMMAND ; } throw new java.lang.IllegalArgumentException ( STRING + org.springframework.data.mongodb.core.query.Shape ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ; int += NUMBER * nullSafeHashCode ( this . java.lang.String ) ; int += NUMBER * nullSafeHashCode ( this . org.springframework.data.mongodb.core.query.Shape ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.data.mongodb.core.query.GeoCommand ) ) { return false ; } org.springframework.data.mongodb.core.query.GeoCommand org.springframework.data.mongodb.core.query.GeoCommand = ( org.springframework.data.mongodb.core.query.GeoCommand ) java.lang.Object ; return nullSafeEquals ( this . java.lang.String , org.springframework.data.mongodb.core.query.GeoCommand . java.lang.String ) && nullSafeEquals ( this . org.springframework.data.mongodb.core.query.Shape , org.springframework.data.mongodb.core.query.GeoCommand . org.springframework.data.mongodb.core.query.Shape ) ; }  <METHOD_END>
