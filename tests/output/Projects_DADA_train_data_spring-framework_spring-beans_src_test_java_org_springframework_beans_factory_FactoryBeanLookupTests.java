<METHOD_START> @ Before public void void ( ) { org.springframework.beans.factory.BeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( ( BeanDefinitionRegistry ) org.springframework.beans.factory.BeanFactory ) . loadBeanDefinitions ( new ClassPathResource ( STRING , this . java.lang.Class<? extends org.springframework.beans.factory.FactoryBeanLookupTests> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = org.springframework.beans.factory.BeanFactory . getBean ( STRING ) ; assertThat ( java.lang.Object , instanceOf ( org.springframework.beans.factory.FooFactoryBean .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.beans.factory.FooFactoryBean org.springframework.beans.factory.FooFactoryBean = org.springframework.beans.factory.BeanFactory . getBean ( org.springframework.beans.factory.FooFactoryBean .class ) ; assertNotNull ( org.springframework.beans.factory.FooFactoryBean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.beans.factory.FooFactoryBean org.springframework.beans.factory.FooFactoryBean = org.springframework.beans.factory.BeanFactory . getBean ( STRING , org.springframework.beans.factory.FooFactoryBean .class ) ; assertNotNull ( org.springframework.beans.factory.FooFactoryBean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = org.springframework.beans.factory.BeanFactory . getBean ( STRING ) ; assertThat ( java.lang.Object , instanceOf ( org.springframework.beans.factory.Foo .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.beans.factory.Foo org.springframework.beans.factory.Foo = org.springframework.beans.factory.BeanFactory . getBean ( STRING , org.springframework.beans.factory.Foo .class ) ; assertNotNull ( org.springframework.beans.factory.Foo ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.beans.factory.Foo org.springframework.beans.factory.Foo ( ) java.lang.Exception { return new org.springframework.beans.factory.Foo ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.beans.factory.Foo .class ; }  <METHOD_END>
