<METHOD_START> protected void ( CouchbaseQueryMethod org.springframework.data.couchbase.repository.query.CouchbaseQueryMethod , RxJavaCouchbaseOperations org.springframework.data.couchbase.repository.query.RxJavaCouchbaseOperations ) { this . org.springframework.data.couchbase.repository.query.CouchbaseQueryMethod = org.springframework.data.couchbase.repository.query.CouchbaseQueryMethod ; this . org.springframework.data.couchbase.repository.query.RxJavaCouchbaseOperations = org.springframework.data.couchbase.repository.query.RxJavaCouchbaseOperations ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.data.couchbase.repository.query.Statement org.springframework.data.couchbase.repository.query.Statement ( ParameterAccessor org.springframework.data.couchbase.repository.query.ParameterAccessor , java.lang.Object [] java.lang.Object[] , ReturnedType org.springframework.data.couchbase.repository.query.ReturnedType );  <METHOD_END>
<METHOD_START> protected abstract org.springframework.data.couchbase.repository.query.JsonValue org.springframework.data.couchbase.repository.query.JsonValue ( ParameterAccessor org.springframework.data.couchbase.repository.query.ParameterAccessor );  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object [] java.lang.Object[] ) { ReactiveCouchbaseParameterAccessor org.springframework.data.couchbase.repository.query.ReactiveCouchbaseParameterAccessor = new ReactiveCouchbaseParameterAccessor ( org.springframework.data.couchbase.repository.query.CouchbaseQueryMethod , java.lang.Object[] ) ; ResultProcessor org.springframework.data.couchbase.repository.query.ResultProcessor = this . org.springframework.data.couchbase.repository.query.CouchbaseQueryMethod . getResultProcessor ( ) . withDynamicProjection ( org.springframework.data.couchbase.repository.query.ReactiveCouchbaseParameterAccessor ) ; ReturnedType org.springframework.data.couchbase.repository.query.ReturnedType = org.springframework.data.couchbase.repository.query.ResultProcessor . getReturnedType ( ) ; java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.data.couchbase.repository.query.ReturnedType . getTypeToRead ( ) ; java.lang.Class<?> = java.lang.Class<> == null ? org.springframework.data.couchbase.repository.query.ReturnedType . getDomainType ( ) : java.lang.Class<> ; Statement org.springframework.data.couchbase.repository.query.Statement = org.springframework.data.couchbase.repository.query.Statement ( org.springframework.data.couchbase.repository.query.ReactiveCouchbaseParameterAccessor , java.lang.Object[] , org.springframework.data.couchbase.repository.query.ReturnedType ) ; JsonValue org.springframework.data.couchbase.repository.query.JsonValue = org.springframework.data.couchbase.repository.query.JsonValue ( org.springframework.data.couchbase.repository.query.ReactiveCouchbaseParameterAccessor ) ; N1qlQuery org.springframework.data.couchbase.repository.query.N1qlQuery = N1qlUtils . buildQuery ( org.springframework.data.couchbase.repository.query.Statement , org.springframework.data.couchbase.repository.query.JsonValue , org.springframework.data.couchbase.repository.query.RxJavaCouchbaseOperations ( ) . getDefaultConsistency ( ) . n1qlConsistency ( ) ) ; return ReactiveWrapperConverters . toWrapper ( org.springframework.data.couchbase.repository.query.ResultProcessor . processResult ( java.lang.Object ( org.springframework.data.couchbase.repository.query.N1qlQuery , org.springframework.data.couchbase.repository.query.CouchbaseQueryMethod , java.lang.Class<> ) ) , Flux .class ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( N1qlQuery org.springframework.data.couchbase.repository.query.N1qlQuery , QueryMethod org.springframework.data.couchbase.repository.query.QueryMethod , java.lang.Class<?> < ? > java.lang.Class<?> ) { if ( org.springframework.data.couchbase.repository.query.QueryMethod . isModifyingQuery ( ) ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; } if ( org.springframework.data.couchbase.repository.query.QueryMethod . isQueryForEntity ( ) ) { return java.lang.Object ( org.springframework.data.couchbase.repository.query.N1qlQuery , java.lang.Class<> ) ; } else { return java.lang.Object ( org.springframework.data.couchbase.repository.query.N1qlQuery ) ; } }  <METHOD_END>
<METHOD_START> private void void ( N1qlQuery org.springframework.data.couchbase.repository.query.N1qlQuery ) { if ( org.springframework.data.couchbase.repository.query.Logger . isDebugEnabled ( ) ) { org.springframework.data.couchbase.repository.query.Logger . debug ( STRING + org.springframework.data.couchbase.repository.query.N1qlQuery . n1ql ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( N1qlQuery org.springframework.data.couchbase.repository.query.N1qlQuery , java.lang.Class<?> < ? > java.lang.Class<?> ) { void ( org.springframework.data.couchbase.repository.query.N1qlQuery ) ; return org.springframework.data.couchbase.repository.query.RxJavaCouchbaseOperations . findByN1QL ( org.springframework.data.couchbase.repository.query.N1qlQuery , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( N1qlQuery org.springframework.data.couchbase.repository.query.N1qlQuery ) { void ( org.springframework.data.couchbase.repository.query.N1qlQuery ) ; return org.springframework.data.couchbase.repository.query.RxJavaCouchbaseOperations . findByN1QLProjection ( org.springframework.data.couchbase.repository.query.N1qlQuery , java.util.Map .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.couchbase.repository.query.CouchbaseQueryMethod org.springframework.data.couchbase.repository.query.CouchbaseQueryMethod ( ) { return this . org.springframework.data.couchbase.repository.query.CouchbaseQueryMethod ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.couchbase.repository.query.RxJavaCouchbaseOperations org.springframework.data.couchbase.repository.query.RxJavaCouchbaseOperations ( ) { return this . org.springframework.data.couchbase.repository.query.RxJavaCouchbaseOperations ; }  <METHOD_END>
