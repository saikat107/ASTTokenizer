<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ( Point org.springframework.data.neo4j.conversion.Point ) { java.util.Map<java.lang.String,java.lang.Double> < java.lang.String , java.lang.Double > java.util.Map<java.lang.String,java.lang.Double> = new java.util.HashMap<java.lang.String,java.lang.Double> <> ( ) ; if ( org.springframework.data.neo4j.conversion.Point != null ) { java.util.Map<java.lang.String,java.lang.Double> . java.lang.Double ( STRING , org.springframework.data.neo4j.conversion.Point . getX ( ) ) ; java.util.Map<java.lang.String,java.lang.Double> . java.lang.Double ( STRING , org.springframework.data.neo4j.conversion.Point . getY ( ) ) ; } return java.util.Map<java.lang.String,java.lang.Double> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.neo4j.conversion.Point org.springframework.data.neo4j.conversion.Point ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { java.lang.Double java.lang.Double = ( java.lang.Double ) java.util.Map<java.lang.String,> . get ( STRING ) ; java.lang.Double java.lang.Double = ( java.lang.Double ) java.util.Map<java.lang.String,> . get ( STRING ) ; if ( java.lang.Double != null && java.lang.Double != null ) { return new Point ( java.lang.Double , java.lang.Double ) ; } return null ; }  <METHOD_END>
