<METHOD_START> private static boolean boolean ( java.lang.String java.lang.String ) { java.lang.ClassLoader java.lang.ClassLoader = ClassUtils . getDefaultClassLoader ( ) ; java.lang.reflect.Method java.lang.reflect.Method = ReflectionUtils . findMethod ( java.lang.ClassLoader . java.lang.Class<? extends java.lang.ClassLoader> ( ) , STRING , new java.lang.Class [] { java.lang.String .class } ) ; ReflectionUtils . makeAccessible ( java.lang.reflect.Method ) ; java.lang.Class<?> < ? > java.lang.Class<?> = ( java.lang.Class<?> < ? > ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , java.lang.ClassLoader , new java.lang.Object [] { java.lang.String } ) ; return java.lang.Class<> != null ; }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String ) { assertFalse ( STRING + java.lang.String + STRING , boolean ( java.lang.String ) ) ; }  <METHOD_END>
