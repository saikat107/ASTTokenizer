<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.data.rest.webmvc.support.BeanFactory ) throws org.springframework.data.rest.webmvc.support.BeansException { java.lang.String [] java.lang.String[] = BeanFactoryUtils . beanNamesForTypeIncludingAncestors ( ( ListableBeanFactory ) org.springframework.data.rest.webmvc.support.BeanFactory , EntityManagerFactory .class ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { EntityManagerFactory org.springframework.data.rest.webmvc.support.EntityManagerFactory = ( EntityManagerFactory ) org.springframework.data.rest.webmvc.support.BeanFactory . getBean ( java.lang.String ) ; OpenEntityManagerInViewInterceptor org.springframework.data.rest.webmvc.support.OpenEntityManagerInViewInterceptor = new OpenEntityManagerInViewInterceptor ( ) ; org.springframework.data.rest.webmvc.support.OpenEntityManagerInViewInterceptor . setEntityManagerFactory ( org.springframework.data.rest.webmvc.support.EntityManagerFactory ) ; java.util.List<org.springframework.data.rest.webmvc.support.WebRequestInterceptor> . add ( org.springframework.data.rest.webmvc.support.OpenEntityManagerInViewInterceptor ) ; } }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.data.rest.webmvc.support.WebRequestInterceptor> < WebRequestInterceptor > java.util.List<org.springframework.data.rest.webmvc.support.WebRequestInterceptor> ( ) { return java.util.List<org.springframework.data.rest.webmvc.support.WebRequestInterceptor> ; }  <METHOD_END>
