<METHOD_START> public void ( ConversionService org.springframework.core.convert.support.ConversionService ) { this . org.springframework.core.convert.support.ConversionService = org.springframework.core.convert.support.ConversionService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<org.springframework.core.convert.support.ConvertiblePair> < ConvertiblePair > java.util.Set<org.springframework.core.convert.support.ConvertiblePair> ( ) { return java.util.Collections . java.util.Set ( new ConvertiblePair ( java.lang.String .class , java.lang.Object [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( TypeDescriptor org.springframework.core.convert.support.TypeDescriptor , TypeDescriptor org.springframework.core.convert.support.TypeDescriptor ) { return this . org.springframework.core.convert.support.ConversionService . canConvert ( org.springframework.core.convert.support.TypeDescriptor , org.springframework.core.convert.support.TypeDescriptor . getElementTypeDescriptor ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , TypeDescriptor org.springframework.core.convert.support.TypeDescriptor , TypeDescriptor org.springframework.core.convert.support.TypeDescriptor ) { if ( java.lang.Object == null ) { return null ; } java.lang.String java.lang.String = ( java.lang.String ) java.lang.Object ; java.lang.String [] java.lang.String[] = StringUtils . commaDelimitedListToStringArray ( java.lang.String ) ; java.lang.Object java.lang.Object = java.lang.reflect.Array . java.lang.Object ( org.springframework.core.convert.support.TypeDescriptor . getElementTypeDescriptor ( ) . getType ( ) , java.lang.String[] . int ) ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { java.lang.String java.lang.String = java.lang.String[] [ int ] ; java.lang.Object java.lang.Object = this . org.springframework.core.convert.support.ConversionService . convert ( java.lang.String . java.lang.String ( ) , org.springframework.core.convert.support.TypeDescriptor , org.springframework.core.convert.support.TypeDescriptor . getElementTypeDescriptor ( ) ) ; java.lang.reflect.Array . void ( java.lang.Object , int , java.lang.Object ) ; } return java.lang.Object ; }  <METHOD_END>
