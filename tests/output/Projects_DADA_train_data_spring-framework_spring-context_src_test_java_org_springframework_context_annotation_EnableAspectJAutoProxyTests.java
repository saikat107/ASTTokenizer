<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.ConfigWithJdkProxy .class ) ; void ( org.springframework.context.annotation.ApplicationContext ) ; assertThat ( AopUtils . isJdkDynamicProxy ( org.springframework.context.annotation.ApplicationContext . getBean ( FooService .class ) ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.ConfigWithCglibProxy .class ) ; void ( org.springframework.context.annotation.ApplicationContext ) ; assertThat ( AopUtils . isCglibProxy ( org.springframework.context.annotation.ApplicationContext . getBean ( FooService .class ) ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.ConfigWithExposedProxy .class ) ; void ( org.springframework.context.annotation.ApplicationContext ) ; assertThat ( AopUtils . isJdkDynamicProxy ( org.springframework.context.annotation.ApplicationContext . getBean ( FooService .class ) ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ApplicationContext org.springframework.context.annotation.ApplicationContext ) { FooService org.springframework.context.annotation.FooService = org.springframework.context.annotation.ApplicationContext . getBean ( FooService .class ) ; ServiceInvocationCounter org.springframework.context.annotation.ServiceInvocationCounter = org.springframework.context.annotation.ApplicationContext . getBean ( ServiceInvocationCounter .class ) ; assertEquals ( NUMBER , org.springframework.context.annotation.ServiceInvocationCounter . getCount ( ) ) ; assertTrue ( org.springframework.context.annotation.FooService . isInitCalled ( ) ) ; assertEquals ( NUMBER , org.springframework.context.annotation.ServiceInvocationCounter . getCount ( ) ) ; java.lang.String java.lang.String = org.springframework.context.annotation.FooService . foo ( NUMBER ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( NUMBER , org.springframework.context.annotation.ServiceInvocationCounter . getCount ( ) ) ; org.springframework.context.annotation.FooService . foo ( NUMBER ) ; assertEquals ( NUMBER , org.springframework.context.annotation.ServiceInvocationCounter . getCount ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.context.annotation.ConfigurableApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.ConfigWithJdkProxy .class , org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService .class , org.springframework.context.annotation.EnableAspectJAutoProxyTests.LoggingAspect .class ) ; org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService = org.springframework.context.annotation.ConfigurableApplicationContext . getBean ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService .class ) ; org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService . void ( new org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleDto ( ) ) ; org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService . void ( new org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleInputBean ( ) ) ; org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService . void ( ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleDto ) null ) ; org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService . void ( ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleInputBean ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.context.annotation.ConfigurableApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.ConfigWithCglibProxy .class , org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService .class , org.springframework.context.annotation.EnableAspectJAutoProxyTests.LoggingAspect .class ) ; org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService = org.springframework.context.annotation.ConfigurableApplicationContext . getBean ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService .class ) ; org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService . void ( new org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleDto ( ) ) ; org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService . void ( new org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleInputBean ( ) ) ; org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService . void ( ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleDto ) null ) ; org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleService . void ( ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleInputBean ) null ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.FooService org.springframework.context.annotation.FooService ( final ApplicationContext org.springframework.context.annotation.ApplicationContext ) { return new FooServiceImpl ( ) { @ java.lang.Override public java.lang.String java.lang.String ( int int ) { assertNotNull ( AopContext . currentProxy ( ) ) ; return super. foo ( int ) ; } @ java.lang.Override protected org.springframework.context.annotation.FooDao org.springframework.context.annotation.FooDao ( ) { return org.springframework.context.annotation.ApplicationContext . getBean ( FooDao .class ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( int int ) { assertNotNull ( AopContext . currentProxy ( ) ) ; return super. foo ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.context.annotation.FooDao org.springframework.context.annotation.FooDao ( ) { return org.springframework.context.annotation.ApplicationContext . getBean ( FooDao .class ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleInputBean org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleInputBean ) {		}  <METHOD_END>
<METHOD_START> public void void ( org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleDto org.springframework.context.annotation.EnableAspectJAutoProxyTests.SampleDto ) {		}  <METHOD_END>
<METHOD_START> @ Before ( STRING ) public void void ( ) {		}  <METHOD_END>
