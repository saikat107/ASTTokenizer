<METHOD_START> public void ( ResourceLoader org.springframework.web.servlet.config.annotation.ResourceLoader , java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; this . org.springframework.web.servlet.config.annotation.ResourceLoader = org.springframework.web.servlet.config.annotation.ResourceLoader ; this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration ( java.lang.String ... java.lang.String[] ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { this . java.util.List<org.springframework.web.servlet.config.annotation.Resource> . add ( org.springframework.web.servlet.config.annotation.ResourceLoader . getResource ( java.lang.String ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration ( CacheControl org.springframework.web.servlet.config.annotation.CacheControl ) { this . org.springframework.web.servlet.config.annotation.CacheControl = org.springframework.web.servlet.config.annotation.CacheControl ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ResourceChainRegistration org.springframework.web.servlet.config.annotation.ResourceChainRegistration ( boolean boolean ) { this . org.springframework.web.servlet.config.annotation.ResourceChainRegistration = new ResourceChainRegistration ( boolean ) ; return this . org.springframework.web.servlet.config.annotation.ResourceChainRegistration ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ResourceChainRegistration org.springframework.web.servlet.config.annotation.ResourceChainRegistration ( boolean boolean , Cache org.springframework.web.servlet.config.annotation.Cache ) { this . org.springframework.web.servlet.config.annotation.ResourceChainRegistration = new ResourceChainRegistration ( boolean , org.springframework.web.servlet.config.annotation.Cache ) ; return this . org.springframework.web.servlet.config.annotation.ResourceChainRegistration ; }  <METHOD_END>
<METHOD_START> protected java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> protected org.springframework.web.servlet.config.annotation.ResourceHttpRequestHandler org.springframework.web.servlet.config.annotation.ResourceHttpRequestHandler ( ) { ResourceHttpRequestHandler org.springframework.web.servlet.config.annotation.ResourceHttpRequestHandler = new ResourceHttpRequestHandler ( ) ; if ( this . org.springframework.web.servlet.config.annotation.ResourceChainRegistration != null ) { org.springframework.web.servlet.config.annotation.ResourceHttpRequestHandler . setResourceResolvers ( this . org.springframework.web.servlet.config.annotation.ResourceChainRegistration . getResourceResolvers ( ) ) ; org.springframework.web.servlet.config.annotation.ResourceHttpRequestHandler . setResourceTransformers ( this . org.springframework.web.servlet.config.annotation.ResourceChainRegistration . getResourceTransformers ( ) ) ; } org.springframework.web.servlet.config.annotation.ResourceHttpRequestHandler . setLocations ( this . java.util.List<org.springframework.web.servlet.config.annotation.Resource> ) ; if ( this . org.springframework.web.servlet.config.annotation.CacheControl != null ) { org.springframework.web.servlet.config.annotation.ResourceHttpRequestHandler . setCacheControl ( this . org.springframework.web.servlet.config.annotation.CacheControl ) ; } else if ( this . java.lang.Integer != null ) { org.springframework.web.servlet.config.annotation.ResourceHttpRequestHandler . setCacheSeconds ( this . java.lang.Integer ) ; } return org.springframework.web.servlet.config.annotation.ResourceHttpRequestHandler ; }  <METHOD_END>
