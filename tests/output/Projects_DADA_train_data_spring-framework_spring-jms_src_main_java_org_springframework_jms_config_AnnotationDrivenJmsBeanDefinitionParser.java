<METHOD_START> @ java.lang.Override public org.springframework.jms.config.BeanDefinition org.springframework.jms.config.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.jms.config.ParserContext ) { java.lang.Object java.lang.Object = org.springframework.jms.config.ParserContext . extractSource ( org.w3c.dom.Element ) ; CompositeComponentDefinition org.springframework.jms.config.CompositeComponentDefinition = new CompositeComponentDefinition ( org.w3c.dom.Element . java.lang.String ( ) , java.lang.Object ) ; org.springframework.jms.config.ParserContext . pushContainingComponent ( org.springframework.jms.config.CompositeComponentDefinition ) ; BeanDefinitionRegistry org.springframework.jms.config.BeanDefinitionRegistry = org.springframework.jms.config.ParserContext . getRegistry ( ) ; if ( org.springframework.jms.config.BeanDefinitionRegistry . containsBeanDefinition ( JmsListenerConfigUtils . JMS_LISTENER_ANNOTATION_PROCESSOR_BEAN_NAME ) ) { org.springframework.jms.config.ParserContext . getReaderContext ( ) . error ( STRING , java.lang.Object ) ; } else { BeanDefinitionBuilder org.springframework.jms.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( STRING ) ; org.springframework.jms.config.BeanDefinitionBuilder . getRawBeanDefinition ( ) . setSource ( java.lang.Object ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.jms.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } else { void ( java.lang.Object , org.springframework.jms.config.ParserContext ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.jms.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.jms.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } void ( org.springframework.jms.config.ParserContext , org.springframework.jms.config.BeanDefinitionBuilder , JmsListenerConfigUtils . JMS_LISTENER_ANNOTATION_PROCESSOR_BEAN_NAME ) ; } org.springframework.jms.config.ParserContext . popAndRegisterContainingComponent ( ) ; return null ; }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.Object java.lang.Object , ParserContext org.springframework.jms.config.ParserContext ) { BeanDefinitionBuilder org.springframework.jms.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( STRING ) ; org.springframework.jms.config.BeanDefinitionBuilder . getRawBeanDefinition ( ) . setSource ( java.lang.Object ) ; void ( org.springframework.jms.config.ParserContext , org.springframework.jms.config.BeanDefinitionBuilder , JmsListenerConfigUtils . JMS_LISTENER_ENDPOINT_REGISTRY_BEAN_NAME ) ; }  <METHOD_END>
<METHOD_START> private static void void ( ParserContext org.springframework.jms.config.ParserContext , BeanDefinitionBuilder org.springframework.jms.config.BeanDefinitionBuilder , java.lang.String java.lang.String ) { org.springframework.jms.config.BeanDefinitionBuilder . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) ; org.springframework.jms.config.ParserContext . getRegistry ( ) . registerBeanDefinition ( java.lang.String , org.springframework.jms.config.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; BeanDefinitionHolder org.springframework.jms.config.BeanDefinitionHolder = new BeanDefinitionHolder ( org.springframework.jms.config.BeanDefinitionBuilder . getBeanDefinition ( ) , java.lang.String ) ; org.springframework.jms.config.ParserContext . registerComponent ( new BeanComponentDefinition ( org.springframework.jms.config.BeanDefinitionHolder ) ) ; }  <METHOD_END>
