<METHOD_START> @ Test public void void ( ) { assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getHost ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setHost ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getHost ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determineHost ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setHost ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determineHost ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getPort ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setPort ( NUMBER ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getPort ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determinePort ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setPort ( NUMBER ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determinePort ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setPort ( NUMBER ) ; this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determinePort ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getVirtualHost ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setVirtualHost ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getVirtualHost ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setVirtualHost ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getVirtualHost ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determineVirtualHost ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setVirtualHost ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determineVirtualHost ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setVirtualHost ( STRING ) ; this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determineVirtualHost ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determineVirtualHost ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setVirtualHost ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getVirtualHost ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getUsername ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setUsername ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getUsername ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING + STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determineUsername ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setUsername ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determineUsername ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setUsername ( STRING ) ; this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING + STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determineUsername ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getPassword ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setPassword ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getPassword ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING + STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determinePassword ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setPassword ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determinePassword ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setPassword ( STRING ) ; this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING + STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determinePassword ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getAddresses ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . getAddresses ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setAddresses ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determineAddresses ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setHost ( STRING ) ; this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . setPort ( NUMBER ) ; assertThat ( this . org.springframework.boot.autoconfigure.amqp.RabbitProperties . determineAddresses ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
