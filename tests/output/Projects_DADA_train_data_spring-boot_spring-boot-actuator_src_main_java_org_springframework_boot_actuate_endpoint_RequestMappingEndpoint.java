<METHOD_START> public void ( ) { super( STRING ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.boot.actuate.endpoint.ApplicationContext )			throws org.springframework.boot.actuate.endpoint.BeansException { this . org.springframework.boot.actuate.endpoint.ApplicationContext = org.springframework.boot.actuate.endpoint.ApplicationContext ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> < AbstractUrlHandlerMapping > java.util.List<org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> ) { this . java.util.List<org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> = java.util.List<org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping<?>> < AbstractHandlerMethodMapping < ? > > java.util.List<org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping<?>> ) { this . java.util.List<org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping<?>> = java.util.List<org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping<?>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; void ( this . java.util.List<org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> , java.util.Map<java.lang.String,java.lang.Object> ) ; void ( this . org.springframework.boot.actuate.endpoint.ApplicationContext , java.util.Map<java.lang.String,java.lang.Object> ) ; void ( this . java.util.List<org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping<?>> , java.util.Map<java.lang.String,java.lang.Object> ) ; void ( this . org.springframework.boot.actuate.endpoint.ApplicationContext , java.util.Map<java.lang.String,java.lang.Object> ) ; return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected void void ( ApplicationContext org.springframework.boot.actuate.endpoint.ApplicationContext , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { if ( org.springframework.boot.actuate.endpoint.ApplicationContext != null ) { for ( java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping> < java.lang.String , AbstractHandlerMethodMapping > java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping> : org.springframework.boot.actuate.endpoint.ApplicationContext . getBeansOfType ( AbstractHandlerMethodMapping .class ) . entrySet ( ) ) { @ java.lang.SuppressWarnings ( STRING ) java.util.Map<?,org.springframework.boot.actuate.endpoint.HandlerMethod> < ? , HandlerMethod > java.util.Map<?,org.springframework.boot.actuate.endpoint.HandlerMethod> = java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping> . getValue ( ) . getHandlerMethods ( ) ; for ( java.util.Map.Entry<?,org.springframework.boot.actuate.endpoint.HandlerMethod> < ? , HandlerMethod > java.util.Map.Entry<?,org.springframework.boot.actuate.endpoint.HandlerMethod> : java.util.Map<,org.springframework.boot.actuate.endpoint.HandlerMethod> . entrySet ( ) ) { java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.LinkedHashMap<java.lang.String,java.lang.String> <> ( ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping> . getKey ( ) ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , java.util.Map.Entry<,org.springframework.boot.actuate.endpoint.HandlerMethod> . getValue ( ) . toString ( ) ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.util.Map.Entry<,org.springframework.boot.actuate.endpoint.HandlerMethod> . getKey ( ) . toString ( ) , java.util.Map<java.lang.String,java.lang.String> ) ; } } } }  <METHOD_END>
<METHOD_START> protected void void ( ApplicationContext org.springframework.boot.actuate.endpoint.ApplicationContext , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { if ( org.springframework.boot.actuate.endpoint.ApplicationContext != null ) { java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> < java.lang.String , AbstractUrlHandlerMapping > java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> = org.springframework.boot.actuate.endpoint.ApplicationContext . getBeansOfType ( AbstractUrlHandlerMapping .class ) ; for ( java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> < java.lang.String , AbstractUrlHandlerMapping > java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> : java.util.Map<java.lang.String,org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> . entrySet ( ) ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = java.util.Map<java.lang.String,java.lang.Object> ( java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> . getValue ( ) ) ; for ( java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) , java.util.Collections . java.util.Map ( STRING , java.util.Map.Entry<java.lang.String,org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> . getKey ( ) ) ) ; } } } }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( AbstractUrlHandlerMapping org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping ) { if ( AopUtils . isCglibProxy ( org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping ) ) { return java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( ) ; } return org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping . getHandlerMap ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.util.Collection<org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> < AbstractUrlHandlerMapping > java.util.Collection<org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { for ( AbstractUrlHandlerMapping org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping : java.util.Collection<org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping . getHandlerMap ( ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { java.lang.Class<? extends java.lang.Object> < ? extends java.lang.Object > java.lang.Class<? extends java.lang.Object> = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) . java.lang.Class<? extends java.lang.Object> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) , java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , java.lang.Class<> . java.lang.String ( ) ) ) ; } } }  <METHOD_END>
<METHOD_START> protected void void ( java.util.Collection<org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping<?>> < AbstractHandlerMethodMapping < ? > > java.util.Collection<org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping<?>> , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { for ( AbstractHandlerMethodMapping < ? > org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping<?> : java.util.Collection<org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping<?>> ) { java.util.Map<?,org.springframework.boot.actuate.endpoint.HandlerMethod> < ? , HandlerMethod > java.util.Map<?,org.springframework.boot.actuate.endpoint.HandlerMethod> = org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping<> . getHandlerMethods ( ) ; for ( java.util.Map . java.util.Map.Entry<?,org.springframework.boot.actuate.endpoint.HandlerMethod> < ? , HandlerMethod > java.util.Map.Entry<?,org.springframework.boot.actuate.endpoint.HandlerMethod> : java.util.Map<,org.springframework.boot.actuate.endpoint.HandlerMethod> . entrySet ( ) ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String . java.lang.String ( java.util.Map.Entry<,org.springframework.boot.actuate.endpoint.HandlerMethod> . getKey ( ) ) , java.util.Collections . java.util.Map ( STRING , java.lang.String . java.lang.String ( java.util.Map.Entry<,org.springframework.boot.actuate.endpoint.HandlerMethod> . getValue ( ) ) ) ) ; } } }  <METHOD_END>
