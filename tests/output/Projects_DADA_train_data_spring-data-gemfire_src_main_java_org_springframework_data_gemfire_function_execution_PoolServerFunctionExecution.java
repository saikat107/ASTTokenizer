<METHOD_START> public void ( Pool org.springframework.data.gemfire.function.execution.Pool ) { super(); Assert . notNull ( org.springframework.data.gemfire.function.execution.Pool , STRING ) ; this . org.springframework.data.gemfire.function.execution.Pool = org.springframework.data.gemfire.function.execution.Pool ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super(); Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.gemfire.function.execution.Execution org.springframework.data.gemfire.function.execution.Execution ( ) { return FunctionService . onServer ( this . org.springframework.data.gemfire.function.execution.Pool ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { this . org.springframework.data.gemfire.function.execution.Pool = PoolManager . find ( java.lang.String ) ; Assert . notNull ( org.springframework.data.gemfire.function.execution.Pool , STRING + java.lang.String + STRING ) ; }  <METHOD_END>
