<METHOD_START> @ Test ( expected = UnfinishedVerificationException .class ) public void void ( ) java.lang.Exception { this . org.springframework.boot.test.mock.mockito.SpyBeanWithAopProxyAndNotProxyTargetAwareTests.DateService . java.lang.Long ( false ) ; verify ( this . org.springframework.boot.test.mock.mockito.SpyBeanWithAopProxyAndNotProxyTargetAwareTests.DateService , times ( NUMBER ) ) . getDate ( false ) ; verify ( this . org.springframework.boot.test.mock.mockito.SpyBeanWithAopProxyAndNotProxyTargetAwareTests.DateService , times ( NUMBER ) ) . getDate ( eq ( false ) ) ; verify ( this . org.springframework.boot.test.mock.mockito.SpyBeanWithAopProxyAndNotProxyTargetAwareTests.DateService , times ( NUMBER ) ) . getDate ( anyBoolean ( ) ) ; reset ( this . org.springframework.boot.test.mock.mockito.SpyBeanWithAopProxyAndNotProxyTargetAwareTests.DateService ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.test.mock.mockito.CacheResolver org.springframework.boot.test.mock.mockito.CacheResolver ( CacheManager org.springframework.boot.test.mock.mockito.CacheManager ) { SimpleCacheResolver org.springframework.boot.test.mock.mockito.SimpleCacheResolver = new SimpleCacheResolver ( ) ; org.springframework.boot.test.mock.mockito.SimpleCacheResolver . setCacheManager ( org.springframework.boot.test.mock.mockito.CacheManager ) ; return org.springframework.boot.test.mock.mockito.SimpleCacheResolver ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.test.mock.mockito.ConcurrentMapCacheManager org.springframework.boot.test.mock.mockito.ConcurrentMapCacheManager ( ) { ConcurrentMapCacheManager org.springframework.boot.test.mock.mockito.ConcurrentMapCacheManager = new ConcurrentMapCacheManager ( ) ; org.springframework.boot.test.mock.mockito.ConcurrentMapCacheManager . setCacheNames ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) ; return org.springframework.boot.test.mock.mockito.ConcurrentMapCacheManager ; }  <METHOD_END>
<METHOD_START> @ Cacheable ( cacheNames = STRING ) public java.lang.Long java.lang.Long ( boolean boolean ) { return java.lang.System . long ( ) ; }  <METHOD_END>
