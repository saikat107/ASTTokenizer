<METHOD_START> protected void ( T T , java.lang.Object java.lang.Object ) { Assert . notNull ( T , STRING ) ; this . T = T ; this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public T T ( ) { return this . T ; }  <METHOD_END>
<METHOD_START> public org.springframework.jms.listener.adapter.Destination org.springframework.jms.listener.adapter.Destination ( DestinationResolver org.springframework.jms.listener.adapter.DestinationResolver , Session org.springframework.jms.listener.adapter.Session )			throws org.springframework.jms.listener.adapter.JMSException { if ( this . java.lang.Object instanceof Destination ) { return ( Destination ) this . java.lang.Object ; } if ( this . java.lang.Object instanceof org.springframework.jms.listener.adapter.JmsResponse.DestinationNameHolder ) { org.springframework.jms.listener.adapter.JmsResponse.DestinationNameHolder org.springframework.jms.listener.adapter.JmsResponse.DestinationNameHolder = ( org.springframework.jms.listener.adapter.JmsResponse.DestinationNameHolder ) this . java.lang.Object ; return org.springframework.jms.listener.adapter.DestinationResolver . resolveDestinationName ( org.springframework.jms.listener.adapter.Session , org.springframework.jms.listener.adapter.JmsResponse.DestinationNameHolder . java.lang.String , org.springframework.jms.listener.adapter.JmsResponse.DestinationNameHolder . boolean ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + this . T + STRING + this . java.lang.Object + ']' ; }  <METHOD_END>
<METHOD_START> public static < T > org.springframework.jms.listener.adapter.JmsResponse<T> < T > org.springframework.jms.listener.adapter.JmsResponse<T> ( T T , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.jms.listener.adapter.JmsResponse<T> <> ( T , new org.springframework.jms.listener.adapter.JmsResponse.DestinationNameHolder ( java.lang.String , false ) ) ; }  <METHOD_END>
<METHOD_START> public static < T > org.springframework.jms.listener.adapter.JmsResponse<T> < T > org.springframework.jms.listener.adapter.JmsResponse<T> ( T T , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.jms.listener.adapter.JmsResponse<T> <> ( T , new org.springframework.jms.listener.adapter.JmsResponse.DestinationNameHolder ( java.lang.String , true ) ) ; }  <METHOD_END>
<METHOD_START> public static < T > org.springframework.jms.listener.adapter.JmsResponse<T> < T > org.springframework.jms.listener.adapter.JmsResponse<T> ( T T , Destination org.springframework.jms.listener.adapter.Destination ) { Assert . notNull ( org.springframework.jms.listener.adapter.Destination , STRING ) ; return new org.springframework.jms.listener.adapter.JmsResponse <> ( T , org.springframework.jms.listener.adapter.Destination ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , boolean boolean ) { this . java.lang.String = java.lang.String ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String + STRING + STRING + this . boolean + '}' ; }  <METHOD_END>
