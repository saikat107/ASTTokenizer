<METHOD_START> @ Before public void void ( ) java.io.IOException { this . org.springframework.boot.autoconfigureprocessor.TestCompiler = new TestCompiler ( this . org.springframework.boot.autoconfigureprocessor.TemporaryFolder ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Properties java.util.Properties = java.util.Properties ( TestClassConfiguration .class ) ; java.lang.System . java.io.PrintStream . void ( java.util.Properties ) ; assertThat ( java.util.Properties ) . hasSize ( NUMBER ) ; assertThat ( java.util.Properties ) . containsEntry ( STRING + STRING , STRING ) ; assertThat ( java.util.Properties ) . containsKey ( STRING ) ; assertThat ( java.util.Properties ) . containsKey ( STRING ) ; assertThat ( java.util.Properties ) . doesNotContainKey ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Properties java.util.Properties = java.util.Properties ( TestMethodConfiguration .class ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; for ( java.lang.Object java.lang.Object : java.util.Properties . java.util.Set<java.lang.Object> ( ) ) { if ( java.lang.Object . java.lang.String ( ) . boolean ( STRING ) ) { java.util.List<java.lang.String> . boolean ( java.lang.Object . java.lang.String ( ) ) ; } } assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) . contains ( STRING + STRING ) . contains ( STRING + STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Properties java.util.Properties = java.util.Properties ( TestOrderedClassConfiguration .class ) ; assertThat ( java.util.Properties ) . containsEntry ( STRING + STRING , STRING ) ; assertThat ( java.util.Properties ) . containsEntry ( STRING + STRING , STRING ) ; assertThat ( java.util.Properties ) . containsEntry ( STRING + STRING , STRING ) ; assertThat ( java.util.Properties ) . containsEntry ( STRING + STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> private java.util.Properties java.util.Properties ( java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) throws java.io.IOException { TestConditionMetadataAnnotationProcessor org.springframework.boot.autoconfigureprocessor.TestConditionMetadataAnnotationProcessor = new TestConditionMetadataAnnotationProcessor ( this . org.springframework.boot.autoconfigureprocessor.TestCompiler . getOutputLocation ( ) ) ; this . org.springframework.boot.autoconfigureprocessor.TestCompiler . getTask ( java.lang.Class<?>[] ) . call ( org.springframework.boot.autoconfigureprocessor.TestConditionMetadataAnnotationProcessor ) ; return org.springframework.boot.autoconfigureprocessor.TestConditionMetadataAnnotationProcessor . getWrittenProperties ( ) ; }  <METHOD_END>
