<METHOD_START> @ java.lang.Override public final org.springframework.test.context.web.ConfigurableApplicationContext org.springframework.test.context.web.ConfigurableApplicationContext ( MergedContextConfiguration org.springframework.test.context.web.MergedContextConfiguration ) throws java.lang.Exception { Assert . isTrue ( org.springframework.test.context.web.MergedContextConfiguration instanceof WebMergedContextConfiguration , ( ) String . format ( STRING + STRING , mergedConfig ) ) ; WebMergedContextConfiguration org.springframework.test.context.web.WebMergedContextConfiguration = ( WebMergedContextConfiguration ) org.springframework.test.context.web.MergedContextConfiguration ; if ( org.springframework.test.context.web.Log . isDebugEnabled ( ) ) { org.springframework.test.context.web.Log . debug ( java.lang.String . java.lang.String ( STRING , org.springframework.test.context.web.WebMergedContextConfiguration ) ) ; } void ( org.springframework.test.context.web.WebMergedContextConfiguration ) ; GenericWebApplicationContext org.springframework.test.context.web.GenericWebApplicationContext = new GenericWebApplicationContext ( ) ; ApplicationContext org.springframework.test.context.web.ApplicationContext = org.springframework.test.context.web.MergedContextConfiguration . getParentApplicationContext ( ) ; if ( org.springframework.test.context.web.ApplicationContext != null ) { org.springframework.test.context.web.GenericWebApplicationContext . setParent ( org.springframework.test.context.web.ApplicationContext ) ; } void ( org.springframework.test.context.web.GenericWebApplicationContext , org.springframework.test.context.web.WebMergedContextConfiguration ) ; prepareContext ( org.springframework.test.context.web.GenericWebApplicationContext , org.springframework.test.context.web.WebMergedContextConfiguration ) ; void ( org.springframework.test.context.web.GenericWebApplicationContext . getDefaultListableBeanFactory ( ) , org.springframework.test.context.web.WebMergedContextConfiguration ) ; void ( org.springframework.test.context.web.GenericWebApplicationContext , org.springframework.test.context.web.WebMergedContextConfiguration ) ; AnnotationConfigUtils . registerAnnotationConfigProcessors ( org.springframework.test.context.web.GenericWebApplicationContext ) ; void ( org.springframework.test.context.web.GenericWebApplicationContext , org.springframework.test.context.web.WebMergedContextConfiguration ) ; org.springframework.test.context.web.GenericWebApplicationContext . refresh ( ) ; org.springframework.test.context.web.GenericWebApplicationContext . registerShutdownHook ( ) ; return org.springframework.test.context.web.GenericWebApplicationContext ; }  <METHOD_END>
<METHOD_START> protected void void ( WebMergedContextConfiguration org.springframework.test.context.web.WebMergedContextConfiguration ) { }  <METHOD_END>
<METHOD_START> protected void void ( GenericWebApplicationContext org.springframework.test.context.web.GenericWebApplicationContext , WebMergedContextConfiguration org.springframework.test.context.web.WebMergedContextConfiguration ) { ApplicationContext org.springframework.test.context.web.ApplicationContext = org.springframework.test.context.web.GenericWebApplicationContext . getParent ( ) ; if ( org.springframework.test.context.web.ApplicationContext == null || ( ! ( org.springframework.test.context.web.ApplicationContext instanceof WebApplicationContext ) ) ) { java.lang.String java.lang.String = org.springframework.test.context.web.WebMergedContextConfiguration . getResourceBasePath ( ) ; ResourceLoader org.springframework.test.context.web.ResourceLoader = java.lang.String . boolean ( ResourceLoader . CLASSPATH_URL_PREFIX ) ? new DefaultResourceLoader ( ) : new FileSystemResourceLoader ( ) ; ServletContext org.springframework.test.context.web.ServletContext = new MockServletContext ( java.lang.String , org.springframework.test.context.web.ResourceLoader ) ; org.springframework.test.context.web.ServletContext . setAttribute ( WebApplicationContext . ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE , org.springframework.test.context.web.GenericWebApplicationContext ) ; org.springframework.test.context.web.GenericWebApplicationContext . setServletContext ( org.springframework.test.context.web.ServletContext ) ; } else { ServletContext org.springframework.test.context.web.ServletContext = null ; while ( org.springframework.test.context.web.ApplicationContext != null ) { if ( org.springframework.test.context.web.ApplicationContext instanceof WebApplicationContext && ! ( org.springframework.test.context.web.ApplicationContext . getParent ( ) instanceof WebApplicationContext ) ) { org.springframework.test.context.web.ServletContext = ( ( WebApplicationContext ) org.springframework.test.context.web.ApplicationContext ) . getServletContext ( ) ; break; } org.springframework.test.context.web.ApplicationContext = org.springframework.test.context.web.ApplicationContext . getParent ( ) ; } Assert . state ( org.springframework.test.context.web.ServletContext != null , STRING ) ; org.springframework.test.context.web.GenericWebApplicationContext . setServletContext ( org.springframework.test.context.web.ServletContext ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( DefaultListableBeanFactory org.springframework.test.context.web.DefaultListableBeanFactory , WebMergedContextConfiguration org.springframework.test.context.web.WebMergedContextConfiguration ) {	}  <METHOD_END>
<METHOD_START> protected abstract void void ( GenericWebApplicationContext org.springframework.test.context.web.GenericWebApplicationContext , WebMergedContextConfiguration org.springframework.test.context.web.WebMergedContextConfiguration );  <METHOD_END>
<METHOD_START> protected void void ( GenericWebApplicationContext org.springframework.test.context.web.GenericWebApplicationContext , WebMergedContextConfiguration org.springframework.test.context.web.WebMergedContextConfiguration ) { super. customizeContext ( org.springframework.test.context.web.GenericWebApplicationContext , org.springframework.test.context.web.WebMergedContextConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final org.springframework.test.context.web.ApplicationContext org.springframework.test.context.web.ApplicationContext ( java.lang.String ... java.lang.String[] ) throws java.lang.Exception { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
