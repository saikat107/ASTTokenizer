<METHOD_START> public void ( NarayanaRecoveryManagerBean org.springframework.boot.jta.narayana.NarayanaRecoveryManagerBean , NarayanaProperties org.springframework.boot.jta.narayana.NarayanaProperties ) { Assert . notNull ( org.springframework.boot.jta.narayana.NarayanaRecoveryManagerBean , STRING ) ; Assert . notNull ( org.springframework.boot.jta.narayana.NarayanaProperties , STRING ) ; this . org.springframework.boot.jta.narayana.NarayanaRecoveryManagerBean = org.springframework.boot.jta.narayana.NarayanaRecoveryManagerBean ; this . org.springframework.boot.jta.narayana.NarayanaProperties = org.springframework.boot.jta.narayana.NarayanaProperties ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.sql.DataSource javax.sql.DataSource ( javax.sql.XADataSource javax.sql.XADataSource ) { XAResourceRecoveryHelper org.springframework.boot.jta.narayana.XAResourceRecoveryHelper = org.springframework.boot.jta.narayana.XAResourceRecoveryHelper ( javax.sql.XADataSource ) ; this . org.springframework.boot.jta.narayana.NarayanaRecoveryManagerBean . registerXAResourceRecoveryHelper ( org.springframework.boot.jta.narayana.XAResourceRecoveryHelper ) ; return new NarayanaDataSourceBean ( javax.sql.XADataSource ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.jta.narayana.XAResourceRecoveryHelper org.springframework.boot.jta.narayana.XAResourceRecoveryHelper ( javax.sql.XADataSource javax.sql.XADataSource ) { if ( this . org.springframework.boot.jta.narayana.NarayanaProperties . getRecoveryDbUser ( ) == null && this . org.springframework.boot.jta.narayana.NarayanaProperties . getRecoveryDbPass ( ) == null ) { return new DataSourceXAResourceRecoveryHelper ( javax.sql.XADataSource ) ; } return new DataSourceXAResourceRecoveryHelper ( javax.sql.XADataSource , this . org.springframework.boot.jta.narayana.NarayanaProperties . getRecoveryDbUser ( ) , this . org.springframework.boot.jta.narayana.NarayanaProperties . getRecoveryDbPass ( ) ) ; }  <METHOD_END>
