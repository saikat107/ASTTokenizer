<METHOD_START> @ Before public void void ( ) { org.springframework.data.querydsl.binding.QuerydslDefaultBinding = new QuerydslDefaultBinding ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Optional<org.springframework.data.querydsl.binding.Predicate> < Predicate > java.util.Optional<org.springframework.data.querydsl.binding.Predicate> = org.springframework.data.querydsl.binding.QuerydslDefaultBinding . bind ( QUser . user . firstname , java.util.Collections . java.util.Set<java.lang.String> ( STRING ) ) ; assertThat ( java.util.Optional<org.springframework.data.querydsl.binding.Predicate> ) . hasValue ( QUser . user . firstname . eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Optional<org.springframework.data.querydsl.binding.Predicate> < Predicate > java.util.Optional<org.springframework.data.querydsl.binding.Predicate> = org.springframework.data.querydsl.binding.QuerydslDefaultBinding . bind ( QUser . user . address . city , java.util.Collections . java.util.Set<java.lang.String> ( STRING ) ) ; assertThat ( java.util.Optional<org.springframework.data.querydsl.binding.Predicate> ) . hasValueSatisfying ( it -> assertThat ( it . toString ( ) ) . isEqualTo ( QUser . user . address . city . eq ( STRING ) . toString ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Optional<org.springframework.data.querydsl.binding.Predicate> < Predicate > java.util.Optional<org.springframework.data.querydsl.binding.Predicate> = org.springframework.data.querydsl.binding.QuerydslDefaultBinding . bind ( QUser . user . nickNames , java.util.Collections . java.util.Set<java.lang.String> ( STRING ) ) ; assertThat ( java.util.Optional<org.springframework.data.querydsl.binding.Predicate> ) . hasValue ( QUser . user . nickNames . contains ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Optional<org.springframework.data.querydsl.binding.Predicate> < Predicate > java.util.Optional<org.springframework.data.querydsl.binding.Predicate> = org.springframework.data.querydsl.binding.QuerydslDefaultBinding . bind ( QUser . user . firstname , java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) ) ; assertThat ( java.util.Optional<org.springframework.data.querydsl.binding.Predicate> ) . hasValue ( QUser . user . firstname . in ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.querydsl.binding.QuerydslDefaultBinding . bind ( QUser . user . lastname , java.util.Collections . java.util.Set<java.lang.Object> ( ) ) ) . isNotPresent ( ) ; }  <METHOD_END>
