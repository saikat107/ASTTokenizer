<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.reflect.Method java.lang.reflect.Method = java.lang.reflect.Method ( STRING , java.lang.String .class ) ; MethodParameter org.springframework.data.solr.repository.query.MethodParameter = new MethodParameter ( java.lang.reflect.Method , NUMBER ) ; SolrParameter org.springframework.data.solr.repository.query.SolrParameter = new SolrParameter ( org.springframework.data.solr.repository.query.MethodParameter ) ; Assert . assertEquals ( NUMBER , org.springframework.data.solr.repository.query.SolrParameter . getBoost ( ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.reflect.Method java.lang.reflect.Method = java.lang.reflect.Method ( STRING , java.lang.String .class ) ; MethodParameter org.springframework.data.solr.repository.query.MethodParameter = new MethodParameter ( java.lang.reflect.Method , NUMBER ) ; SolrParameter org.springframework.data.solr.repository.query.SolrParameter = new SolrParameter ( org.springframework.data.solr.repository.query.MethodParameter ) ; Assert . assertEquals ( java.lang.Float . float , org.springframework.data.solr.repository.query.SolrParameter . getBoost ( ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.reflect.Method java.lang.reflect.Method = java.lang.reflect.Method ( STRING , java.lang.String .class ) ; MethodParameter org.springframework.data.solr.repository.query.MethodParameter = new MethodParameter ( java.lang.reflect.Method , NUMBER ) ; SolrParameter org.springframework.data.solr.repository.query.SolrParameter = new SolrParameter ( org.springframework.data.solr.repository.query.MethodParameter ) ; Assert . assertEquals ( java.lang.Float . float , org.springframework.data.solr.repository.query.SolrParameter . getBoost ( ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> private java.lang.reflect.Method java.lang.reflect.Method ( java.lang.String java.lang.String , java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) throws java.lang.Exception { return org.springframework.data.solr.repository.query.SolrParameterTests.Repo1 .class . java.lang.reflect.Method ( java.lang.String , java.lang.Class<?>[] ) ; }  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.query.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.query.ProductBean> ( @ Boost ( NUMBER ) java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.query.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.query.ProductBean> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.query.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.query.ProductBean> ( @ Boost java.lang.String java.lang.String );  <METHOD_END>
