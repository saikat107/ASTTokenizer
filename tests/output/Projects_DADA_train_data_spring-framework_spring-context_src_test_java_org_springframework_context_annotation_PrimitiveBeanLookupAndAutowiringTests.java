<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.PrimitiveBeanLookupAndAutowiringTests.Config .class ) ; boolean boolean = org.springframework.context.annotation.ApplicationContext . getBean ( STRING , boolean .class ) ; assertThat ( boolean , equalTo ( true ) ) ; int int = org.springframework.context.annotation.ApplicationContext . getBean ( STRING , int .class ) ; assertThat ( int , equalTo ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.PrimitiveBeanLookupAndAutowiringTests.Config .class ) ; boolean boolean = org.springframework.context.annotation.ApplicationContext . getBean ( boolean .class ) ; assertThat ( boolean , equalTo ( true ) ) ; int int = org.springframework.context.annotation.ApplicationContext . getBean ( int .class ) ; assertThat ( int , equalTo ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.PrimitiveBeanLookupAndAutowiringTests.Config .class , org.springframework.context.annotation.PrimitiveBeanLookupAndAutowiringTests.AutowiredComponent .class ) ; assertThat ( org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.PrimitiveBeanLookupAndAutowiringTests.AutowiredComponent .class ) . b , equalTo ( true ) ) ; assertThat ( org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.PrimitiveBeanLookupAndAutowiringTests.AutowiredComponent .class ) . i , equalTo ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.PrimitiveBeanLookupAndAutowiringTests.Config .class , org.springframework.context.annotation.PrimitiveBeanLookupAndAutowiringTests.ResourceComponent .class ) ; assertThat ( org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.PrimitiveBeanLookupAndAutowiringTests.ResourceComponent .class ) . b , equalTo ( true ) ) ; assertThat ( org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.PrimitiveBeanLookupAndAutowiringTests.ResourceComponent .class ) . i , equalTo ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ Bean public int int ( ) { return NUMBER ; }  <METHOD_END>
