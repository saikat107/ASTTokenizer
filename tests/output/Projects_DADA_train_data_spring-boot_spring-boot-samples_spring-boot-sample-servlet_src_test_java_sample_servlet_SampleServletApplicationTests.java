<METHOD_START> @ Test public void void ( ) java.lang.Exception { ResponseEntity < java.lang.String > sample.servlet.ResponseEntity<java.lang.String> = this . sample.servlet.TestRestTemplate . getForEntity ( STRING , java.lang.String .class ) ; assertThat ( sample.servlet.ResponseEntity<java.lang.String> . getStatusCode ( ) ) . isEqualTo ( HttpStatus . UNAUTHORIZED ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ResponseEntity < java.lang.String > sample.servlet.ResponseEntity<java.lang.String> = this . sample.servlet.TestRestTemplate . withBasicAuth ( STRING , java.lang.String ( ) ) . getForEntity ( STRING , java.lang.String .class ) ; assertThat ( sample.servlet.ResponseEntity<java.lang.String> . getStatusCode ( ) ) . isEqualTo ( HttpStatus . OK ) ; assertThat ( sample.servlet.ResponseEntity<java.lang.String> . getBody ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) { return this . sample.servlet.SecurityProperties . getUser ( ) . getPassword ( ) ; }  <METHOD_END>
