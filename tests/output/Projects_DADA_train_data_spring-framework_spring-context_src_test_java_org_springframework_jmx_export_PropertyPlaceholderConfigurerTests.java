<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { IJmxTestBean org.springframework.jmx.export.IJmxTestBean = ( IJmxTestBean ) getContext ( ) . getBean ( STRING ) ; assertEquals ( STRING , STRING , org.springframework.jmx.export.IJmxTestBean . getName ( ) ) ; assertEquals ( STRING , NUMBER , org.springframework.jmx.export.IJmxTestBean . getAge ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.ObjectName javax.management.ObjectName = new javax.management.ObjectName ( STRING ) ; java.lang.Object java.lang.Object = getServer ( ) . getAttribute ( javax.management.ObjectName , STRING ) ; java.lang.Integer java.lang.Integer = ( java.lang.Integer ) getServer ( ) . getAttribute ( javax.management.ObjectName , STRING ) ; assertEquals ( STRING , STRING , java.lang.Object ) ; assertEquals ( STRING , NUMBER , java.lang.Integer . int ( ) ) ; }  <METHOD_END>
