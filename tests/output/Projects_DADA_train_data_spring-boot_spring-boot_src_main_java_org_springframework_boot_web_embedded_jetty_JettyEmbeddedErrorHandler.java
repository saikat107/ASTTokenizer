<METHOD_START> void ( ErrorHandler org.springframework.boot.web.embedded.jetty.ErrorHandler ) { this . org.springframework.boot.web.embedded.jetty.ErrorHandler = org.springframework.boot.web.embedded.jetty.ErrorHandler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , Request org.springframework.boot.web.embedded.jetty.Request , HttpServletRequest org.springframework.boot.web.embedded.jetty.HttpServletRequest , HttpServletResponse org.springframework.boot.web.embedded.jetty.HttpServletResponse ) throws java.io.IOException { java.lang.String java.lang.String = org.springframework.boot.web.embedded.jetty.HttpServletRequest . getMethod ( ) ; if ( ! HttpMethod . GET . is ( java.lang.String ) && ! HttpMethod . POST . is ( java.lang.String ) && ! HttpMethod . HEAD . is ( java.lang.String ) ) { org.springframework.boot.web.embedded.jetty.HttpServletRequest = new org.springframework.boot.web.embedded.jetty.JettyEmbeddedErrorHandler.ErrorHttpServletRequest ( org.springframework.boot.web.embedded.jetty.HttpServletRequest ) ; } this . org.springframework.boot.web.embedded.jetty.ErrorHandler . handle ( java.lang.String , org.springframework.boot.web.embedded.jetty.Request , org.springframework.boot.web.embedded.jetty.HttpServletRequest , org.springframework.boot.web.embedded.jetty.HttpServletResponse ) ; }  <METHOD_END>
<METHOD_START> void ( HttpServletRequest org.springframework.boot.web.embedded.jetty.HttpServletRequest ) { super( org.springframework.boot.web.embedded.jetty.HttpServletRequest ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( this . boolean ? HttpMethod . GET . toString ( ) : super. getMethod ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.web.embedded.jetty.ServletContext org.springframework.boot.web.embedded.jetty.ServletContext ( ) { this . boolean = false ; return super. getServletContext ( ) ; }  <METHOD_END>
