<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.router.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.router.config.ExceptionTypeRouterParserTests> ( ) ) ; MessageChannel org.springframework.integration.router.config.MessageChannel = org.springframework.integration.router.config.ClassPathXmlApplicationContext . getBean ( STRING , MessageChannel .class ) ; org.springframework.integration.router.config.MessageChannel . send ( new GenericMessage < java.lang.Throwable > ( new java.lang.NullPointerException ( ) ) ) ; QueueChannel org.springframework.integration.router.config.QueueChannel = org.springframework.integration.router.config.ClassPathXmlApplicationContext . getBean ( STRING , QueueChannel .class ) ; Message < java.lang.Throwable > org.springframework.integration.router.config.Message<java.lang.Throwable> = ( Message < java.lang.Throwable > ) org.springframework.integration.router.config.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.router.config.Message<java.lang.Throwable> ) ; assertTrue ( org.springframework.integration.router.config.Message<java.lang.Throwable> . getPayload ( ) instanceof java.lang.NullPointerException ) ; org.springframework.integration.router.config.MessageChannel . send ( new GenericMessage < java.lang.Throwable > ( new java.lang.IllegalArgumentException ( ) ) ) ; QueueChannel org.springframework.integration.router.config.QueueChannel = org.springframework.integration.router.config.ClassPathXmlApplicationContext . getBean ( STRING , QueueChannel .class ) ; Message < java.lang.Throwable > org.springframework.integration.router.config.Message<java.lang.Throwable> = ( Message < java.lang.Throwable > ) org.springframework.integration.router.config.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.router.config.Message<java.lang.Throwable> ) ; assertTrue ( org.springframework.integration.router.config.Message<java.lang.Throwable> . getPayload ( ) instanceof java.lang.IllegalArgumentException ) ; org.springframework.integration.router.config.MessageChannel . send ( new GenericMessage < java.lang.String > ( STRING ) ) ; QueueChannel org.springframework.integration.router.config.QueueChannel = org.springframework.integration.router.config.ClassPathXmlApplicationContext . getBean ( STRING , QueueChannel .class ) ; assertNotNull ( org.springframework.integration.router.config.QueueChannel . receive ( NUMBER ) ) ; org.springframework.integration.router.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
