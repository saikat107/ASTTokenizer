<METHOD_START> @ Before public void void ( ) { StaticWebApplicationContext org.springframework.web.servlet.view.tiles3.StaticWebApplicationContext = new StaticWebApplicationContext ( ) ; org.springframework.web.servlet.view.tiles3.StaticWebApplicationContext . setServletContext ( new MockServletContext ( ) ) ; org.springframework.web.servlet.view.tiles3.StaticWebApplicationContext . refresh ( ) ; this . org.springframework.web.servlet.view.tiles3.Renderer = mock ( Renderer .class ) ; this . org.springframework.web.servlet.view.tiles3.TilesViewResolver = new TilesViewResolver ( ) ; this . org.springframework.web.servlet.view.tiles3.TilesViewResolver . setRenderer ( this . org.springframework.web.servlet.view.tiles3.Renderer ) ; this . org.springframework.web.servlet.view.tiles3.TilesViewResolver . setApplicationContext ( org.springframework.web.servlet.view.tiles3.StaticWebApplicationContext ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { given ( this . org.springframework.web.servlet.view.tiles3.Renderer . isRenderable ( eq ( STRING ) , isA ( Request .class ) ) ) . willReturn ( true ) ; given ( this . org.springframework.web.servlet.view.tiles3.Renderer . isRenderable ( eq ( STRING ) , isA ( Request .class ) ) ) . willReturn ( false ) ; assertTrue ( this . org.springframework.web.servlet.view.tiles3.TilesViewResolver . resolveViewName ( STRING , java.util.Locale . java.util.Locale ) instanceof TilesView ) ; assertNull ( this . org.springframework.web.servlet.view.tiles3.TilesViewResolver . resolveViewName ( STRING , java.util.Locale . java.util.Locale ) ) ; verify ( this . org.springframework.web.servlet.view.tiles3.Renderer ) . isRenderable ( eq ( STRING ) , isA ( Request .class ) ) ; verify ( this . org.springframework.web.servlet.view.tiles3.Renderer ) . isRenderable ( eq ( STRING ) , isA ( Request .class ) ) ; }  <METHOD_END>
