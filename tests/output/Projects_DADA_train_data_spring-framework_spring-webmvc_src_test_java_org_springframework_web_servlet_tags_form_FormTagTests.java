<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected void void ( ) { this . org.springframework.web.servlet.tags.form.FormTag = new FormTag ( ) { @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; } } ; this . org.springframework.web.servlet.tags.form.FormTag . setPageContext ( getPageContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( MockHttpServletRequest org.springframework.web.servlet.tags.form.MockHttpServletRequest ) { org.springframework.web.servlet.tags.form.MockHttpServletRequest . setRequestURI ( java.lang.String ) ; org.springframework.web.servlet.tags.form.MockHttpServletRequest . setQueryString ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.MockHttpServletRequest = org.springframework.web.servlet.tags.form.MockHttpServletRequest ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.FormTag . setName ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setCssClass ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setCssStyle ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setModelAttribute ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setAction ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setMethod ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setTarget ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setEnctype ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setAcceptCharset ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setOnsubmit ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setOnreset ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setAutocomplete ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; int int = this . org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; assertEquals ( Tag . EVAL_BODY_INCLUDE , int ) ; assertEquals ( STRING , java.lang.String , getPageContext ( ) . getRequest ( ) . getAttribute ( FormTag . MODEL_ATTRIBUTE_VARIABLE_NAME ) ) ; int = this . org.springframework.web.servlet.tags.form.FormTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; this . org.springframework.web.servlet.tags.form.FormTag . doFinally ( ) ; assertNull ( STRING , getPageContext ( ) . getRequest ( ) . getAttribute ( FormTag . MODEL_ATTRIBUTE_VARIABLE_NAME ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , java.lang.String , java.lang.String ) ; assertContainsAttribute ( java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.FormTag . setModelAttribute ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setMethod ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setEnctype ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setOnsubmit ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setOnreset ( java.lang.String ) ; int int = this . org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; assertEquals ( Tag . EVAL_BODY_INCLUDE , int ) ; assertEquals ( STRING , java.lang.String , getPageContext ( ) . getAttribute ( FormTag . MODEL_ATTRIBUTE_VARIABLE_NAME , PageContext . REQUEST_SCOPE ) ) ; int = this . org.springframework.web.servlet.tags.form.FormTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; this . org.springframework.web.servlet.tags.form.FormTag . doFinally ( ) ; assertNull ( STRING , getPageContext ( ) . getAttribute ( FormTag . MODEL_ATTRIBUTE_VARIABLE_NAME , PageContext . REQUEST_SCOPE ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String + STRING + java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.MockHttpServletRequest . setContextPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.MockHttpServletRequest . setServletPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.MockHttpServletRequest . setPathInfo ( STRING ) ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.FormTag . setModelAttribute ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setServletRelativeAction ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setMethod ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setEnctype ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setOnsubmit ( java.lang.String ) ; this . org.springframework.web.servlet.tags.form.FormTag . setOnreset ( java.lang.String ) ; int int = this . org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; assertEquals ( Tag . EVAL_BODY_INCLUDE , int ) ; assertEquals ( STRING , java.lang.String , getPageContext ( ) . getAttribute ( FormTag . MODEL_ATTRIBUTE_VARIABLE_NAME , PageContext . REQUEST_SCOPE ) ) ; int = this . org.springframework.web.servlet.tags.form.FormTag . doEndTag ( ) ; assertEquals ( Tag . EVAL_PAGE , int ) ; this . org.springframework.web.servlet.tags.form.FormTag . doFinally ( ) ; assertNull ( STRING , getPageContext ( ) . getAttribute ( FormTag . MODEL_ATTRIBUTE_VARIABLE_NAME , PageContext . REQUEST_SCOPE ) ) ; java.lang.String java.lang.String = getOutput ( ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , java.lang.String ) ; assertAttributeNotPresent ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { try { org.springframework.web.servlet.tags.form.FormTag . setModelAttribute ( null ) ; org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; fail ( STRING ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = java.lang.String + STRING ; org.springframework.web.servlet.tags.form.MockHttpServletRequest . setQueryString ( java.lang.String ) ; org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; assertEquals ( STRING , getOutput ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.FormTag . setMethod ( STRING ) ; this . org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doEndTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doFinally ( ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.FormTag . setMethod ( STRING ) ; this . org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doEndTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doFinally ( ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.FormTag . setMethod ( STRING ) ; this . org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doEndTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doFinally ( ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.FormTag . setMethod ( STRING ) ; this . org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doEndTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doFinally ( ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.FormTag . setMethod ( STRING ) ; this . org.springframework.web.servlet.tags.form.FormTag . setMethodParam ( STRING ) ; this . org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doEndTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doFinally ( ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.FormTag . setModelAttribute ( STRING ) ; getPageContext ( ) . setAttribute ( STRING , STRING ) ; assertNull ( getPageContext ( ) . getAttribute ( FormTag . MODEL_ATTRIBUTE_VARIABLE_NAME , PageContext . REQUEST_SCOPE ) ) ; this . org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; assertNotNull ( getPageContext ( ) . getAttribute ( FormTag . MODEL_ATTRIBUTE_VARIABLE_NAME , PageContext . REQUEST_SCOPE ) ) ; this . org.springframework.web.servlet.tags.form.FormTag . doFinally ( ) ; assertNull ( getPageContext ( ) . getAttribute ( FormTag . MODEL_ATTRIBUTE_VARIABLE_NAME , PageContext . REQUEST_SCOPE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; RequestDataValueProcessor org.springframework.web.servlet.tags.form.RequestDataValueProcessor = getMockRequestDataValueProcessor ( ) ; given ( org.springframework.web.servlet.tags.form.RequestDataValueProcessor . processAction ( this . org.springframework.web.servlet.tags.form.MockHttpServletRequest , java.lang.String , STRING ) ) . willReturn ( java.lang.String ) ; given ( org.springframework.web.servlet.tags.form.RequestDataValueProcessor . getExtraHiddenFields ( this . org.springframework.web.servlet.tags.form.MockHttpServletRequest ) ) . willReturn ( java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , STRING ) ) ; this . org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doEndTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doFinally ( ) ; java.lang.String java.lang.String = getOutput ( ) ; assertEquals ( STRING , java.lang.String ( java.lang.String ) ) ; void ( java.lang.String ) ; void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.MockHttpServletRequest . setRequestURI ( STRING ) ; org.springframework.web.servlet.tags.form.MockHttpServletRequest . setQueryString ( STRING ) ; this . org.springframework.web.servlet.tags.form.FormTag . doStartTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doEndTag ( ) ; this . org.springframework.web.servlet.tags.form.FormTag . doFinally ( ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; assertContainsAttribute ( java.lang.String , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { int int = java.lang.String . int ( STRING , NUMBER ) ; int int = java.lang.String . int ( STRING , java.lang.String . int ( ) - NUMBER ) ; return java.lang.String . java.lang.String ( NUMBER , int ) + java.lang.String . java.lang.String ( int + NUMBER ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { int int = java.lang.String . int ( STRING , NUMBER ) ; int int = java.lang.String . int ( STRING , java.lang.String . int ( ) - NUMBER ) ; return java.lang.String . java.lang.String ( int , int + NUMBER ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.String java.lang.String ) { assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.lang.String java.lang.String ) { assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
