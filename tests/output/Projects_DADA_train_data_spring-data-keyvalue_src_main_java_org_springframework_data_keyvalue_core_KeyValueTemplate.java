<METHOD_START> public void ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { this( org.springframework.data.keyvalue.core.KeyValueAdapter , new KeyValueMappingContext ( ) ); }  <METHOD_END>
<METHOD_START> public void ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter , MappingContext < ? extends KeyValuePersistentEntity < ? , ? > , ? extends KeyValuePersistentProperty < ? > > org.springframework.data.keyvalue.core.MappingContext<? extends org.springframework.data.keyvalue.core.KeyValuePersistentEntity<?,?>,? extends org.springframework.data.keyvalue.core.KeyValuePersistentProperty<?>> ) { Assert . notNull ( org.springframework.data.keyvalue.core.KeyValueAdapter , STRING ) ; Assert . notNull ( org.springframework.data.keyvalue.core.MappingContext<,> , STRING ) ; this . org.springframework.data.keyvalue.core.KeyValueAdapter = org.springframework.data.keyvalue.core.KeyValueAdapter ; this . org.springframework.data.keyvalue.core.MappingContext<? extends org.springframework.data.keyvalue.core.KeyValuePersistentEntity<?,?>,? extends org.springframework.data.keyvalue.core.KeyValuePersistentProperty<?>> = org.springframework.data.keyvalue.core.MappingContext<,> ; this . org.springframework.data.keyvalue.core.IdentifierGenerator = DefaultIdentifierGenerator . INSTANCE ; }  <METHOD_END>
<METHOD_START> public void void ( PersistenceExceptionTranslator org.springframework.data.keyvalue.core.PersistenceExceptionTranslator ) { Assert . notNull ( org.springframework.data.keyvalue.core.PersistenceExceptionTranslator , STRING ) ; this . org.springframework.data.keyvalue.core.PersistenceExceptionTranslator = org.springframework.data.keyvalue.core.PersistenceExceptionTranslator ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( java.util.Set<java.lang.Class<? extends org.springframework.data.keyvalue.core.KeyValueEvent>> < java.lang.Class<? extends org.springframework.data.keyvalue.core.KeyValueEvent> < ? extends KeyValueEvent > > java.util.Set<java.lang.Class<? extends org.springframework.data.keyvalue.core.KeyValueEvent>> ) { if ( CollectionUtils . isEmpty ( java.util.Set<java.lang.Class<? extends org.springframework.data.keyvalue.core.KeyValueEvent>> ) ) { this . boolean = false ; } else { this . boolean = true ; this . java.util.Set<java.lang.Class<? extends org.springframework.data.keyvalue.core.KeyValueEvent>> = java.util.Collections . java.util.Set<java.lang.Class<? extends org.springframework.data.keyvalue.core.KeyValueEvent>> ( java.util.Set<java.lang.Class<? extends org.springframework.data.keyvalue.core.KeyValueEvent>> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationEventPublisher org.springframework.data.keyvalue.core.ApplicationEventPublisher ) { this . org.springframework.data.keyvalue.core.ApplicationEventPublisher = org.springframework.data.keyvalue.core.ApplicationEventPublisher ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( T T ) { KeyValuePersistentEntity < ? , ? > org.springframework.data.keyvalue.core.KeyValuePersistentEntity<?,?> = org.springframework.data.keyvalue.core.KeyValuePersistentEntity<?,?> ( T ) ; GeneratingIdAccessor org.springframework.data.keyvalue.core.GeneratingIdAccessor = new GeneratingIdAccessor ( org.springframework.data.keyvalue.core.KeyValuePersistentEntity<,> . getPropertyAccessor ( T ) , org.springframework.data.keyvalue.core.KeyValuePersistentEntity<,> . getIdProperty ( ) . orElseThrow ( ( ) new IllegalArgumentException ( STRING ) ) , org.springframework.data.keyvalue.core.IdentifierGenerator ) ; java.lang.Object java.lang.Object = org.springframework.data.keyvalue.core.GeneratingIdAccessor . getOrGenerateIdentifier ( ) ; void ( ( java.io.Serializable ) java.lang.Object , T ) ; return T ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.keyvalue.core.KeyValuePersistentEntity<?,?> < ? , ? > org.springframework.data.keyvalue.core.KeyValuePersistentEntity<?,?> ( java.lang.Object java.lang.Object ) { return this . org.springframework.data.keyvalue.core.MappingContext<,> . getPersistentEntity ( ClassUtils . getUserClass ( java.lang.Object ) ) . orElseThrow ( ( ) new IllegalArgumentException ( String . format ( STRING , ObjectUtils . nullSafeClassName ( objectToInsert ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.io.Serializable java.io.Serializable , final java.lang.Object java.lang.Object ) { Assert . notNull ( java.io.Serializable , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; final java.lang.String java.lang.String = java.lang.String ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; void ( KeyValueEvent . beforeInsert ( java.io.Serializable , java.lang.String , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) , java.lang.Object ) ) ; T ( new KeyValueCallback < java.lang.Void > ( ) { @ java.lang.Override public java.lang.Void java.lang.Void ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { if ( org.springframework.data.keyvalue.core.KeyValueAdapter . contains ( java.io.Serializable , java.lang.String ) ) { throw new DuplicateKeyException ( java.lang.String . java.lang.String ( STRING , java.io.Serializable ) ) ; } org.springframework.data.keyvalue.core.KeyValueAdapter . put ( java.io.Serializable , java.lang.Object , java.lang.String ) ; return null ; } } ) ; void ( KeyValueEvent . afterInsert ( java.io.Serializable , java.lang.String , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) , java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Void java.lang.Void ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { if ( org.springframework.data.keyvalue.core.KeyValueAdapter . contains ( java.io.Serializable , java.lang.String ) ) { throw new DuplicateKeyException ( java.lang.String . java.lang.String ( STRING , java.io.Serializable ) ) ; } org.springframework.data.keyvalue.core.KeyValueAdapter . put ( java.io.Serializable , java.lang.Object , java.lang.String ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { KeyValuePersistentEntity < ? , ? > org.springframework.data.keyvalue.core.KeyValuePersistentEntity<?,?> = org.springframework.data.keyvalue.core.KeyValuePersistentEntity<?,?> ( java.lang.Object ) ; if ( ! org.springframework.data.keyvalue.core.KeyValuePersistentEntity<,> . hasIdProperty ( ) ) { throw new InvalidDataAccessApiUsageException ( java.lang.String . java.lang.String ( STRING , ClassUtils . getUserClass ( java.lang.Object ) ) ) ; } void ( ( java.io.Serializable ) org.springframework.data.keyvalue.core.KeyValuePersistentEntity<,> . getIdentifierAccessor ( java.lang.Object ) . getIdentifier ( ) . get ( ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.io.Serializable java.io.Serializable , final java.lang.Object java.lang.Object ) { Assert . notNull ( java.io.Serializable , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; final java.lang.String java.lang.String = java.lang.String ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; void ( KeyValueEvent . beforeUpdate ( java.io.Serializable , java.lang.String , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) , java.lang.Object ) ) ; java.lang.Object java.lang.Object = T ( new KeyValueCallback < java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { return org.springframework.data.keyvalue.core.KeyValueAdapter . put ( java.io.Serializable , java.lang.Object , java.lang.String ) ; } } ) ; void ( KeyValueEvent . afterUpdate ( java.io.Serializable , java.lang.String , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) , java.lang.Object , java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { return org.springframework.data.keyvalue.core.KeyValueAdapter . put ( java.io.Serializable , java.lang.Object , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > java.lang.Iterable<T> < T > java.lang.Iterable<T> ( final java.lang.Class<T> < T > java.lang.Class<T> ) { Assert . notNull ( java.lang.Class<T> , STRING ) ; return T ( new KeyValueCallback < java.lang.Iterable<T> < T > > ( ) { @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public java.lang.Iterable<T> < T > java.lang.Iterable<T> ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { java.lang.Iterable<?> < ? > java.lang.Iterable<?> = org.springframework.data.keyvalue.core.KeyValueAdapter . getAllOf ( java.lang.String ( java.lang.Class<T> ) ) ; if ( java.lang.Iterable<> == null ) { return java.util.Collections . java.util.Set<T> ( ) ; } java.util.ArrayList<T> < T > java.util.ArrayList<T> = new java.util.ArrayList<T> < T > ( ) ; for ( java.lang.Object java.lang.Object : java.lang.Iterable<> ) { if ( boolean ( java.lang.Class<T> , java.lang.Object ) ) { java.util.ArrayList<T> . boolean ( ( T ) java.lang.Object ) ; } } return java.util.ArrayList<T> ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public java.lang.Iterable<T> < T > java.lang.Iterable<T> ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { java.lang.Iterable<?> < ? > java.lang.Iterable<?> = org.springframework.data.keyvalue.core.KeyValueAdapter . getAllOf ( java.lang.String ( java.lang.Class<T> ) ) ; if ( java.lang.Iterable<> == null ) { return java.util.Collections . java.util.Set<T> ( ) ; } java.util.ArrayList<T> < T > java.util.ArrayList<T> = new java.util.ArrayList<T> < T > ( ) ; for ( java.lang.Object java.lang.Object : java.lang.Iterable<> ) { if ( boolean ( java.lang.Class<T> , java.lang.Object ) ) { java.util.ArrayList<T> . boolean ( ( T ) java.lang.Object ) ; } } return java.util.ArrayList<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > java.util.Optional<T> < T > java.util.Optional<T> ( final java.io.Serializable java.io.Serializable , final java.lang.Class<T> < T > java.lang.Class<T> ) { Assert . notNull ( java.io.Serializable , STRING ) ; Assert . notNull ( java.lang.Class<T> , STRING ) ; final java.lang.String java.lang.String = java.lang.String ( java.lang.Class<T> ) ; void ( KeyValueEvent . beforeGet ( java.io.Serializable , java.lang.String , java.lang.Class<T> ) ) ; T T = T ( new KeyValueCallback < T > ( ) { @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public T T ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { java.lang.Object java.lang.Object = org.springframework.data.keyvalue.core.KeyValueAdapter . get ( java.io.Serializable , java.lang.String , java.lang.Class<T> ) ; if ( java.lang.Object == null || boolean ( java.lang.Class<T> , java.lang.Object ) ) { return ( T ) java.lang.Object ; } return null ; } } ) ; void ( KeyValueEvent . afterGet ( java.io.Serializable , java.lang.String , java.lang.Class<T> , T ) ) ; return java.util.Optional . java.util.Optional<T> ( T ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public T T ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { java.lang.Object java.lang.Object = org.springframework.data.keyvalue.core.KeyValueAdapter . get ( java.io.Serializable , java.lang.String , java.lang.Class<T> ) ; if ( java.lang.Object == null || boolean ( java.lang.Class<T> , java.lang.Object ) ) { return ( T ) java.lang.Object ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; final java.lang.String java.lang.String = java.lang.String ( java.lang.Class<> ) ; void ( KeyValueEvent . beforeDropKeySpace ( java.lang.String , java.lang.Class<> ) ) ; T ( new KeyValueCallback < java.lang.Void > ( ) { @ java.lang.Override public java.lang.Void java.lang.Void ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { org.springframework.data.keyvalue.core.KeyValueAdapter . deleteAllOf ( java.lang.String ) ; return null ; } } ) ; void ( KeyValueEvent . afterDropKeySpace ( java.lang.String , java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Void java.lang.Void ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { org.springframework.data.keyvalue.core.KeyValueAdapter . deleteAllOf ( java.lang.String ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) @ java.lang.Override public < T > T T ( T T ) { java.lang.Class<T> < T > java.lang.Class<T> = ( java.lang.Class<T> < T > ) ClassUtils . getUserClass ( T ) ; KeyValuePersistentEntity < ? , ? > org.springframework.data.keyvalue.core.KeyValuePersistentEntity<?,?> = org.springframework.data.keyvalue.core.KeyValuePersistentEntity<?,?> ( T ) ; return T ( ( java.io.Serializable ) org.springframework.data.keyvalue.core.KeyValuePersistentEntity<,> . getIdentifierAccessor ( T ) . getIdentifier ( ) . orElseThrow ( ( ) new IllegalArgumentException ( STRING ) ) , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( final java.io.Serializable java.io.Serializable , final java.lang.Class<T> < T > java.lang.Class<T> ) { Assert . notNull ( java.io.Serializable , STRING ) ; Assert . notNull ( java.lang.Class<T> , STRING ) ; final java.lang.String java.lang.String = java.lang.String ( java.lang.Class<T> ) ; void ( KeyValueEvent . beforeDelete ( java.io.Serializable , java.lang.String , java.lang.Class<T> ) ) ; T T = T ( new KeyValueCallback < T > ( ) { @ java.lang.Override public T T ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { return ( T ) org.springframework.data.keyvalue.core.KeyValueAdapter . delete ( java.io.Serializable , java.lang.String , java.lang.Class<T> ) ; } } ) ; void ( KeyValueEvent . afterDelete ( java.io.Serializable , java.lang.String , java.lang.Class<T> , T ) ) ; return T ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { return ( T ) org.springframework.data.keyvalue.core.KeyValueAdapter . delete ( java.io.Serializable , java.lang.String , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; return org.springframework.data.keyvalue.core.KeyValueAdapter . count ( java.lang.String ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( KeyValueCallback < T > org.springframework.data.keyvalue.core.KeyValueCallback<T> ) { Assert . notNull ( org.springframework.data.keyvalue.core.KeyValueCallback<T> , STRING ) ; try { return org.springframework.data.keyvalue.core.KeyValueCallback<T> . doInKeyValue ( this . org.springframework.data.keyvalue.core.KeyValueAdapter ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { throw java.lang.RuntimeException ( java.lang.RuntimeException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > java.lang.Iterable<T> < T > java.lang.Iterable<T> ( final KeyValueQuery < ? > org.springframework.data.keyvalue.core.KeyValueQuery<?> , final java.lang.Class<T> < T > java.lang.Class<T> ) { return T ( new KeyValueCallback < java.lang.Iterable<T> < T > > ( ) { @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public java.lang.Iterable<T> < T > java.lang.Iterable<T> ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { java.lang.Iterable<?> < ? > java.lang.Iterable<?> = org.springframework.data.keyvalue.core.KeyValueAdapter . find ( org.springframework.data.keyvalue.core.KeyValueQuery<> , java.lang.String ( java.lang.Class<T> ) , java.lang.Class<T> ) ; if ( java.lang.Iterable<> == null ) { return java.util.Collections . java.util.Set<T> ( ) ; } java.util.List<T> < T > java.util.List<T> = new java.util.ArrayList<T> < T > ( ) ; for ( java.lang.Object java.lang.Object : java.lang.Iterable<> ) { if ( boolean ( java.lang.Class<T> , java.lang.Object ) ) { java.util.List<T> . boolean ( ( T ) java.lang.Object ) ; } } return java.util.List<T> ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public java.lang.Iterable<T> < T > java.lang.Iterable<T> ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { java.lang.Iterable<?> < ? > java.lang.Iterable<?> = org.springframework.data.keyvalue.core.KeyValueAdapter . find ( org.springframework.data.keyvalue.core.KeyValueQuery<> , java.lang.String ( java.lang.Class<T> ) , java.lang.Class<T> ) ; if ( java.lang.Iterable<> == null ) { return java.util.Collections . java.util.Set<T> ( ) ; } java.util.List<T> < T > java.util.List<T> = new java.util.ArrayList<T> < T > ( ) ; for ( java.lang.Object java.lang.Object : java.lang.Iterable<> ) { if ( boolean ( java.lang.Class<T> , java.lang.Object ) ) { java.util.List<T> . boolean ( ( T ) java.lang.Object ) ; } } return java.util.List<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T > java.lang.Iterable<T> < T > java.lang.Iterable<T> ( Sort org.springframework.data.keyvalue.core.Sort , java.lang.Class<T> < T > java.lang.Class<T> ) { return java.lang.Iterable<T> ( new KeyValueQuery ( org.springframework.data.keyvalue.core.Sort ) , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T > java.lang.Iterable<T> < T > java.lang.Iterable<T> ( long long , int int , java.lang.Class<T> < T > java.lang.Class<T> ) { return java.lang.Iterable ( new KeyValueQuery ( ) . skip ( long ) . limit ( int ) , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T > java.lang.Iterable<T> < T > java.lang.Iterable<T> ( long long , int int , Sort org.springframework.data.keyvalue.core.Sort , java.lang.Class<T> < T > java.lang.Class<T> ) { return java.lang.Iterable ( new KeyValueQuery ( org.springframework.data.keyvalue.core.Sort ) . skip ( long ) . limit ( int ) , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( final KeyValueQuery < ? > org.springframework.data.keyvalue.core.KeyValueQuery<?> , final java.lang.Class<?> < ? > java.lang.Class<?> ) { return T ( new KeyValueCallback < java.lang.Long > ( ) { @ java.lang.Override public java.lang.Long java.lang.Long ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { return org.springframework.data.keyvalue.core.KeyValueAdapter . count ( org.springframework.data.keyvalue.core.KeyValueQuery<> , java.lang.String ( java.lang.Class<> ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Long java.lang.Long ( KeyValueAdapter org.springframework.data.keyvalue.core.KeyValueAdapter ) { return org.springframework.data.keyvalue.core.KeyValueAdapter . count ( org.springframework.data.keyvalue.core.KeyValueQuery<> , java.lang.String ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.keyvalue.core.MappingContext<?,?> < ? , ? > org.springframework.data.keyvalue.core.MappingContext<?,?> ( ) { return this . org.springframework.data.keyvalue.core.MappingContext<,> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { this . org.springframework.data.keyvalue.core.KeyValueAdapter . clear ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return this . org.springframework.data.keyvalue.core.MappingContext<,> . getPersistentEntity ( java.lang.Class<> ) . get ( ) . getKeySpace ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.RuntimeException java.lang.RuntimeException ( java.lang.RuntimeException java.lang.RuntimeException ) { DataAccessException org.springframework.data.keyvalue.core.DataAccessException = org.springframework.data.keyvalue.core.PersistenceExceptionTranslator . translateExceptionIfPossible ( java.lang.RuntimeException ) ; return org.springframework.data.keyvalue.core.DataAccessException != null ? org.springframework.data.keyvalue.core.DataAccessException : java.lang.RuntimeException ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private void void ( KeyValueEvent org.springframework.data.keyvalue.core.KeyValueEvent ) { if ( org.springframework.data.keyvalue.core.ApplicationEventPublisher == null ) { return; } if ( boolean && ( java.util.Set<java.lang.Class<? extends org.springframework.data.keyvalue.core.KeyValueEvent>> . isEmpty ( ) || java.util.Set<java.lang.Class<? extends org.springframework.data.keyvalue.core.KeyValueEvent>> . contains ( org.springframework.data.keyvalue.core.KeyValueEvent . getClass ( ) ) ) ) { org.springframework.data.keyvalue.core.ApplicationEventPublisher . publishEvent ( org.springframework.data.keyvalue.core.KeyValueEvent ) ; } }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Object java.lang.Object ) { return java.lang.Object == null ? true : ClassUtils . isAssignable ( java.lang.Class<> , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; }  <METHOD_END>
