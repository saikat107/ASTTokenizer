<METHOD_START> @ Before public void void ( ) { org.springframework.jms.config.JmsListenerEndpointRegistrar . setEndpointRegistry ( org.springframework.jms.config.JmsListenerEndpointRegistry ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . setBeanFactory ( new StaticListableBeanFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.jms.config.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . registerEndpoint ( null , org.springframework.jms.config.JmsListenerContainerTestFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.jms.config.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . registerEndpoint ( new SimpleJmsListenerEndpoint ( ) , org.springframework.jms.config.JmsListenerContainerTestFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SimpleJmsListenerEndpoint org.springframework.jms.config.SimpleJmsListenerEndpoint = new SimpleJmsListenerEndpoint ( ) ; org.springframework.jms.config.SimpleJmsListenerEndpoint . setId ( STRING ) ; org.springframework.jms.config.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . registerEndpoint ( org.springframework.jms.config.SimpleJmsListenerEndpoint , org.springframework.jms.config.JmsListenerContainerTestFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SimpleJmsListenerEndpoint org.springframework.jms.config.SimpleJmsListenerEndpoint = new SimpleJmsListenerEndpoint ( ) ; org.springframework.jms.config.SimpleJmsListenerEndpoint . setId ( STRING ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . setContainerFactory ( org.springframework.jms.config.JmsListenerContainerTestFactory ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . registerEndpoint ( org.springframework.jms.config.SimpleJmsListenerEndpoint , null ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . afterPropertiesSet ( ) ; assertNotNull ( STRING , org.springframework.jms.config.JmsListenerEndpointRegistry . getListenerContainer ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.jms.config.JmsListenerEndpointRegistry . getListenerContainers ( ) . size ( ) ) ; assertEquals ( STRING , org.springframework.jms.config.JmsListenerEndpointRegistry . getListenerContainerIds ( ) . iterator ( ) . next ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SimpleJmsListenerEndpoint org.springframework.jms.config.SimpleJmsListenerEndpoint = new SimpleJmsListenerEndpoint ( ) ; org.springframework.jms.config.SimpleJmsListenerEndpoint . setId ( STRING ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . registerEndpoint ( org.springframework.jms.config.SimpleJmsListenerEndpoint , null ) ; org.springframework.jms.config.ExpectedException . expect ( java.lang.IllegalStateException .class ) ; org.springframework.jms.config.ExpectedException . expectMessage ( org.springframework.jms.config.SimpleJmsListenerEndpoint . toString ( ) ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SimpleJmsListenerEndpoint org.springframework.jms.config.SimpleJmsListenerEndpoint = new SimpleJmsListenerEndpoint ( ) ; org.springframework.jms.config.SimpleJmsListenerEndpoint . setId ( STRING ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . setContainerFactory ( org.springframework.jms.config.JmsListenerContainerTestFactory ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . registerEndpoint ( org.springframework.jms.config.SimpleJmsListenerEndpoint ) ; org.springframework.jms.config.JmsListenerEndpointRegistrar . afterPropertiesSet ( ) ; assertNotNull ( STRING , org.springframework.jms.config.JmsListenerEndpointRegistry . getListenerContainer ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.jms.config.JmsListenerEndpointRegistry . getListenerContainers ( ) . size ( ) ) ; assertEquals ( STRING , org.springframework.jms.config.JmsListenerEndpointRegistry . getListenerContainerIds ( ) . iterator ( ) . next ( ) ) ; }  <METHOD_END>
