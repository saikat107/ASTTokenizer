<METHOD_START> public void ( ObjectFactory < PersistentEntities > org.springframework.data.rest.core.event.ObjectFactory<org.springframework.data.rest.core.event.PersistentEntities> ) { Assert . notNull ( org.springframework.data.rest.core.event.ObjectFactory<org.springframework.data.rest.core.event.PersistentEntities> , STRING ) ; this . org.springframework.data.rest.core.event.ObjectFactory<org.springframework.data.rest.core.event.PersistentEntities> = org.springframework.data.rest.core.event.ObjectFactory<org.springframework.data.rest.core.event.PersistentEntities> ; this . org.springframework.data.rest.core.event.MultiValueMap<java.lang.String,org.springframework.data.rest.core.event.Validator> = new LinkedMultiValueMap < java.lang.String , Validator > ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.core.event.ValidatingRepositoryEventListener org.springframework.data.rest.core.event.ValidatingRepositoryEventListener ( java.util.Map<java.lang.String,java.util.Collection<org.springframework.data.rest.core.event.Validator>> < java.lang.String , java.util.Collection<org.springframework.data.rest.core.event.Validator> < Validator > > java.util.Map<java.lang.String,java.util.Collection<org.springframework.data.rest.core.event.Validator>> ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.util.Collection<org.springframework.data.rest.core.event.Validator>> < java.lang.String , java.util.Collection<org.springframework.data.rest.core.event.Validator> < Validator > > java.util.Map.Entry<java.lang.String,java.util.Collection<org.springframework.data.rest.core.event.Validator>> : java.util.Map<java.lang.String,java.util.Collection<org.springframework.data.rest.core.event.Validator>> . entrySet ( ) ) { this . org.springframework.data.rest.core.event.MultiValueMap<java.lang.String,org.springframework.data.rest.core.event.Validator> . put ( java.util.Map.Entry<java.lang.String,java.util.Collection<org.springframework.data.rest.core.event.Validator>> . getKey ( ) , new java.util.ArrayList<org.springframework.data.rest.core.event.Validator> < Validator > ( java.util.Map.Entry<java.lang.String,java.util.Collection<org.springframework.data.rest.core.event.Validator>> . getValue ( ) ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.core.event.ValidatingRepositoryEventListener org.springframework.data.rest.core.event.ValidatingRepositoryEventListener ( java.lang.String java.lang.String , Validator org.springframework.data.rest.core.event.Validator ) { org.springframework.data.rest.core.event.MultiValueMap<java.lang.String,org.springframework.data.rest.core.event.Validator> . add ( java.lang.String , org.springframework.data.rest.core.event.Validator ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { org.springframework.data.rest.core.event.Errors ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { org.springframework.data.rest.core.event.Errors ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { org.springframework.data.rest.core.event.Errors ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { org.springframework.data.rest.core.event.Errors ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { org.springframework.data.rest.core.event.Errors ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { org.springframework.data.rest.core.event.Errors ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { org.springframework.data.rest.core.event.Errors ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { org.springframework.data.rest.core.event.Errors ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.rest.core.event.Errors org.springframework.data.rest.core.event.Errors ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { if ( java.lang.Object == null ) { return null ; } Errors org.springframework.data.rest.core.event.Errors = new ValidationErrors ( java.lang.Object , org.springframework.data.rest.core.event.ObjectFactory<org.springframework.data.rest.core.event.PersistentEntities> . getObject ( ) ) ; for ( Validator org.springframework.data.rest.core.event.Validator : java.util.Collection<org.springframework.data.rest.core.event.Validator> ( java.lang.String ) ) { if ( org.springframework.data.rest.core.event.Validator . supports ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { org.springframework.data.rest.core.event.Logger . debug ( STRING , java.lang.String , java.lang.Object , org.springframework.data.rest.core.event.Validator ) ; ValidationUtils . invokeValidator ( org.springframework.data.rest.core.event.Validator , java.lang.Object , org.springframework.data.rest.core.event.Errors ) ; } } if ( org.springframework.data.rest.core.event.Errors . hasErrors ( ) ) { throw new RepositoryConstraintViolationException ( org.springframework.data.rest.core.event.Errors ) ; } return org.springframework.data.rest.core.event.Errors ; }  <METHOD_END>
<METHOD_START> private java.util.Collection<org.springframework.data.rest.core.event.Validator> < Validator > java.util.Collection<org.springframework.data.rest.core.event.Validator> ( java.lang.String java.lang.String ) { java.util.Collection<org.springframework.data.rest.core.event.Validator> < Validator > java.util.Collection<org.springframework.data.rest.core.event.Validator> = this . org.springframework.data.rest.core.event.MultiValueMap<java.lang.String,org.springframework.data.rest.core.event.Validator> . get ( java.lang.String ) ; return java.util.Collection<org.springframework.data.rest.core.event.Validator> == null ? java.util.Collections .< Validator > java.util.Set<org.springframework.data.rest.core.event.Validator> ( ) : java.util.Collection<org.springframework.data.rest.core.event.Validator> ; }  <METHOD_END>
