<METHOD_START> void ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { this . java.util.Set<java.lang.String> = java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableListableBeanFactory org.springframework.boot.web.servlet.ConfigurableListableBeanFactory )			throws org.springframework.boot.web.servlet.BeansException { if ( boolean ( ) ) { ClassPathScanningCandidateComponentProvider org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider = org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider ( ) ; for ( java.lang.String java.lang.String : this . java.util.Set<java.lang.String> ) { void ( org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ClassPathScanningCandidateComponentProvider org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider , java.lang.String java.lang.String ) { for ( BeanDefinition org.springframework.boot.web.servlet.BeanDefinition : org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider . findCandidateComponents ( java.lang.String ) ) { if ( org.springframework.boot.web.servlet.BeanDefinition instanceof ScannedGenericBeanDefinition ) { for ( ServletComponentHandler org.springframework.boot.web.servlet.ServletComponentHandler : java.util.List<org.springframework.boot.web.servlet.ServletComponentHandler> ) { org.springframework.boot.web.servlet.ServletComponentHandler . handle ( ( ( ScannedGenericBeanDefinition ) org.springframework.boot.web.servlet.BeanDefinition ) , ( BeanDefinitionRegistry ) this . org.springframework.boot.web.servlet.ApplicationContext ) ; } } } }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return this . org.springframework.boot.web.servlet.ApplicationContext instanceof WebApplicationContext && ( ( WebApplicationContext ) this . org.springframework.boot.web.servlet.ApplicationContext ) . getServletContext ( ) == null ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider ( ) { ClassPathScanningCandidateComponentProvider org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider = new ClassPathScanningCandidateComponentProvider ( false ) ; org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider . setEnvironment ( this . org.springframework.boot.web.servlet.ApplicationContext . getEnvironment ( ) ) ; org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider . setResourceLoader ( this . org.springframework.boot.web.servlet.ApplicationContext ) ; for ( ServletComponentHandler org.springframework.boot.web.servlet.ServletComponentHandler : java.util.List<org.springframework.boot.web.servlet.ServletComponentHandler> ) { org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider . addIncludeFilter ( org.springframework.boot.web.servlet.ServletComponentHandler . getTypeFilter ( ) ) ; } return org.springframework.boot.web.servlet.ClassPathScanningCandidateComponentProvider ; }  <METHOD_END>
<METHOD_START> java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return java.util.Collections . java.util.Set<java.lang.String> ( this . java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.boot.web.servlet.ApplicationContext )			throws org.springframework.boot.web.servlet.BeansException { this . org.springframework.boot.web.servlet.ApplicationContext = org.springframework.boot.web.servlet.ApplicationContext ; }  <METHOD_END>
