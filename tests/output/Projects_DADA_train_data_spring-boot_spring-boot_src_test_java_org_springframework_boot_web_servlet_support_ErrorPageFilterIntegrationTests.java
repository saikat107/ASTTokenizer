<METHOD_START> @ After public void void ( ) { this . org.springframework.boot.web.servlet.support.ErrorPageFilterIntegrationTests.HelloWorldController . void ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.boot.web.servlet.support.AnnotationConfigServletWebServerApplicationContext , STRING , HttpStatus . CREATED ) ; assertThat ( this . org.springframework.boot.web.servlet.support.ErrorPageFilterIntegrationTests.HelloWorldController . int ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( this . org.springframework.boot.web.servlet.support.AnnotationConfigServletWebServerApplicationContext , STRING , HttpStatus . OK ) ; assertThat ( this . org.springframework.boot.web.servlet.support.ErrorPageFilterIntegrationTests.HelloWorldController . int ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> private void void ( AnnotationConfigServletWebServerApplicationContext org.springframework.boot.web.servlet.support.AnnotationConfigServletWebServerApplicationContext , java.lang.String java.lang.String , HttpStatus org.springframework.boot.web.servlet.support.HttpStatus ) throws java.lang.Exception { int int = org.springframework.boot.web.servlet.support.AnnotationConfigServletWebServerApplicationContext . getWebServer ( ) . getPort ( ) ; RestTemplate org.springframework.boot.web.servlet.support.RestTemplate = new RestTemplate ( ) ; ResponseEntity < java.lang.String > org.springframework.boot.web.servlet.support.ResponseEntity<java.lang.String> = org.springframework.boot.web.servlet.support.RestTemplate . getForEntity ( new java.net.URI ( STRING + int + java.lang.String ) , java.lang.String .class ) ; assertThat ( org.springframework.boot.web.servlet.support.ResponseEntity<java.lang.String> . getBody ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.web.servlet.support.ResponseEntity<java.lang.String> . getStatusCode ( ) ) . isEqualTo ( org.springframework.boot.web.servlet.support.HttpStatus ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.web.servlet.support.ServletWebServerFactory org.springframework.boot.web.servlet.support.ServletWebServerFactory ( ) { return new TomcatServletWebServerFactory ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.web.servlet.support.ErrorPageFilter org.springframework.boot.web.servlet.support.ErrorPageFilter ( ) { return new ErrorPageFilter ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.web.servlet.support.DispatcherServlet org.springframework.boot.web.servlet.support.DispatcherServlet ( ) { return new DispatcherServlet ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.web.servlet.support.ErrorPageFilterIntegrationTests.HelloWorldController org.springframework.boot.web.servlet.support.ErrorPageFilterIntegrationTests.HelloWorldController ( ) { return new org.springframework.boot.web.servlet.support.ErrorPageFilterIntegrationTests.HelloWorldController ( ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) java.lang.InterruptedException { assertThat ( this . java.util.concurrent.CountDownLatch . boolean ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) ) . as ( STRING ) . isTrue ( ) ; return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . int = NUMBER ; this . java.util.concurrent.CountDownLatch = new java.util.concurrent.CountDownLatch ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( InterceptorRegistry org.springframework.boot.web.servlet.support.InterceptorRegistry ) { org.springframework.boot.web.servlet.support.InterceptorRegistry . addInterceptor ( new HandlerInterceptorAdapter ( ) { @ java.lang.Override public void void ( HttpServletRequest org.springframework.boot.web.servlet.support.HttpServletRequest , HttpServletResponse org.springframework.boot.web.servlet.support.HttpServletResponse , java.lang.Object java.lang.Object , ModelAndView org.springframework.boot.web.servlet.support.ModelAndView ) throws java.lang.Exception { org.springframework.boot.web.servlet.support.ErrorPageFilterIntegrationTests.HelloWorldController .this . void ( org.springframework.boot.web.servlet.support.HttpServletResponse . getStatus ( ) ) ; org.springframework.boot.web.servlet.support.ErrorPageFilterIntegrationTests.HelloWorldController .this . java.util.concurrent.CountDownLatch . void ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( HttpServletRequest org.springframework.boot.web.servlet.support.HttpServletRequest , HttpServletResponse org.springframework.boot.web.servlet.support.HttpServletResponse , java.lang.Object java.lang.Object , ModelAndView org.springframework.boot.web.servlet.support.ModelAndView ) throws java.lang.Exception { org.springframework.boot.web.servlet.support.ErrorPageFilterIntegrationTests.HelloWorldController .this . void ( org.springframework.boot.web.servlet.support.HttpServletResponse . getStatus ( ) ) ; org.springframework.boot.web.servlet.support.ErrorPageFilterIntegrationTests.HelloWorldController .this . java.util.concurrent.CountDownLatch . void ( ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( STRING ) @ ResponseBody public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( STRING ) @ ResponseBody @ ResponseStatus ( HttpStatus . CREATED ) public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.web.servlet.support.ApplicationContext org.springframework.boot.web.servlet.support.ApplicationContext ( MergedContextConfiguration org.springframework.boot.web.servlet.support.MergedContextConfiguration )				throws java.lang.Exception { AnnotationConfigServletWebServerApplicationContext org.springframework.boot.web.servlet.support.AnnotationConfigServletWebServerApplicationContext = new AnnotationConfigServletWebServerApplicationContext ( org.springframework.boot.web.servlet.support.MergedContextConfiguration . getClasses ( ) ) ; org.springframework.boot.web.servlet.support.AnnotationConfigServletWebServerApplicationContext . registerShutdownHook ( ) ; return org.springframework.boot.web.servlet.support.AnnotationConfigServletWebServerApplicationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.web.servlet.support.ApplicationContext org.springframework.boot.web.servlet.support.ApplicationContext ( java.lang.String ... java.lang.String[] ) throws java.lang.Exception { throw new UnsupportedOptionException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String [] java.lang.String[] ( ) { return java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { throw new UnsupportedOptionException ( ) ; }  <METHOD_END>
