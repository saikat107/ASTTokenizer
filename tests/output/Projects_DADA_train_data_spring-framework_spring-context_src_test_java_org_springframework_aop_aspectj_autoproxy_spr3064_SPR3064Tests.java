<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.aop.aspectj.autoproxy.spr3064.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( java.lang.Class<? extends org.springframework.aop.aspectj.autoproxy.spr3064.SPR3064Tests> ( ) . java.lang.String ( ) + STRING , java.lang.Class<? extends org.springframework.aop.aspectj.autoproxy.spr3064.SPR3064Tests> ( ) ) ; org.springframework.aop.aspectj.autoproxy.spr3064.Service = ( org.springframework.aop.aspectj.autoproxy.spr3064.Service ) org.springframework.aop.aspectj.autoproxy.spr3064.ClassPathXmlApplicationContext . getBean ( STRING ) ; try { this . org.springframework.aop.aspectj.autoproxy.spr3064.Service . void ( ) ; fail ( STRING ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { assertEquals ( STRING , java.lang.RuntimeException . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Around ( value = STRING ) public java.lang.Object java.lang.Object ( ProceedingJoinPoint org.springframework.aop.aspectj.autoproxy.spr3064.ProceedingJoinPoint , org.springframework.aop.aspectj.autoproxy.spr3064.Transaction org.springframework.aop.aspectj.autoproxy.spr3064.Transaction ) throws java.lang.Throwable { throw new java.lang.RuntimeException ( STRING ) ; }  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override @ org.springframework.aop.aspectj.autoproxy.spr3064.Transaction public void void ( ) {	}  <METHOD_END>
