<METHOD_START> @ Before public void void ( ) { org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor = spy ( new ProjectingLuceneAccessorSupport ( ) {} ) ; doReturn ( org.springframework.data.gemfire.search.lucene.GemFireCache ) . when ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor ) . resolveCache ( ) ; doReturn ( org.springframework.data.gemfire.search.lucene.LuceneService ) . when ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor ) . resolveLuceneService ( ) ; doReturn ( STRING ) . when ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor ) . resolveIndexName ( ) ; doReturn ( STRING ) . when ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor ) . resolveRegionPath ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { doReturn ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) . when ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor ) . resolveProjectionFactory ( ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . afterPropertiesSet ( ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getProjectionFactory ( ) ) . isSameAs ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ; verify ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor , times ( NUMBER ) ) . resolveProjectionFactory ( ) ; verifyZeroInteractions ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getBeanClassLoader ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getBeanFactory ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getCache ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getIndexName ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getLuceneIndex ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getLuceneService ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getProjectionFactory ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getRegion ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getRegionPath ( ) ) . isNull ( ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . setBeanClassLoader ( java.lang.ClassLoader ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . setBeanFactory ( org.springframework.data.gemfire.search.lucene.BeanFactory ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . setCache ( org.springframework.data.gemfire.search.lucene.GemFireCache ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . setIndexName ( STRING ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . setLuceneIndex ( org.springframework.data.gemfire.search.lucene.LuceneIndex ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . setLuceneService ( org.springframework.data.gemfire.search.lucene.LuceneService ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . setProjectionFactory ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . setRegion ( org.springframework.data.gemfire.search.lucene.Region<,> ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . setRegionPath ( STRING ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getBeanClassLoader ( ) ) . isEqualTo ( java.lang.ClassLoader ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getBeanFactory ( ) ) . isEqualTo ( org.springframework.data.gemfire.search.lucene.BeanFactory ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getCache ( ) ) . isEqualTo ( org.springframework.data.gemfire.search.lucene.GemFireCache ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getIndexName ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getLuceneIndex ( ) ) . isEqualTo ( org.springframework.data.gemfire.search.lucene.LuceneIndex ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getLuceneService ( ) ) . isEqualTo ( org.springframework.data.gemfire.search.lucene.LuceneService ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getProjectionFactory ( ) ) . isEqualTo ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getRegion ( ) ) . isEqualTo ( org.springframework.data.gemfire.search.lucene.Region<,> ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getRegionPath ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getProjectionFactory ( ) ) . isNull ( ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . setThenGetProjectionFactory ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ) . isSameAs ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getProjectionFactory ( ) ) . isSameAs ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getProjectionFactory ( ) ) . isNull ( ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . setProjectionFactory ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getProjectionFactory ( ) ) . isSameAs ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . resolveProjectionFactory ( ) ) . isSameAs ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getProjectionFactory ( ) ) . isNull ( ) ; ProjectionFactory org.springframework.data.gemfire.search.lucene.ProjectionFactory = org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . resolveProjectionFactory ( ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) . isInstanceOf ( SpelAwareProxyProjectionFactory .class ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneAccessor . getProjectionFactory ( ) ) . isSameAs ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ; }  <METHOD_END>
