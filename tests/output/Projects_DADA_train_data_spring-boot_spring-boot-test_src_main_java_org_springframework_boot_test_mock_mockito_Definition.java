<METHOD_START> void ( java.lang.String java.lang.String , MockReset org.springframework.boot.test.mock.mockito.MockReset , boolean boolean , QualifierDefinition org.springframework.boot.test.mock.mockito.QualifierDefinition ) { this . java.lang.String = java.lang.String ; this . org.springframework.boot.test.mock.mockito.MockReset = ( org.springframework.boot.test.mock.mockito.MockReset != null ? org.springframework.boot.test.mock.mockito.MockReset : MockReset . AFTER ) ; this . boolean = boolean ; this . org.springframework.boot.test.mock.mockito.QualifierDefinition = org.springframework.boot.test.mock.mockito.QualifierDefinition ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.mock.mockito.MockReset org.springframework.boot.test.mock.mockito.MockReset ( ) { return this . org.springframework.boot.test.mock.mockito.MockReset ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.mock.mockito.QualifierDefinition org.springframework.boot.test.mock.mockito.QualifierDefinition ( ) { return this . org.springframework.boot.test.mock.mockito.QualifierDefinition ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ; int = int * int + ObjectUtils . nullSafeHashCode ( this . java.lang.String ) ; int = int * int + ObjectUtils . nullSafeHashCode ( this . org.springframework.boot.test.mock.mockito.MockReset ) ; int = int * int + ObjectUtils . nullSafeHashCode ( this . boolean ) ; int = int * int + ObjectUtils . nullSafeHashCode ( this . org.springframework.boot.test.mock.mockito.QualifierDefinition ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( java.lang.Object == this ) { return true ; } if ( java.lang.Object == null || ! java.lang.Class<? extends org.springframework.boot.test.mock.mockito.Definition> ( ) . boolean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { return false ; } org.springframework.boot.test.mock.mockito.Definition org.springframework.boot.test.mock.mockito.Definition = ( org.springframework.boot.test.mock.mockito.Definition ) java.lang.Object ; boolean boolean = true ; boolean = boolean && ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.boot.test.mock.mockito.Definition . java.lang.String ) ; boolean = boolean && ObjectUtils . nullSafeEquals ( this . org.springframework.boot.test.mock.mockito.MockReset , org.springframework.boot.test.mock.mockito.Definition . org.springframework.boot.test.mock.mockito.MockReset ) ; boolean = boolean && ObjectUtils . nullSafeEquals ( this . boolean , org.springframework.boot.test.mock.mockito.Definition . boolean ) ; boolean = boolean && ObjectUtils . nullSafeEquals ( this . org.springframework.boot.test.mock.mockito.QualifierDefinition , org.springframework.boot.test.mock.mockito.Definition . org.springframework.boot.test.mock.mockito.QualifierDefinition ) ; return boolean ; }  <METHOD_END>
