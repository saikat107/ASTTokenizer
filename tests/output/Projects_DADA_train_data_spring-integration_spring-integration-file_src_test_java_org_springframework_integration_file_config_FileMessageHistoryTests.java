<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathXmlApplicationContext org.springframework.integration.file.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , java.lang.Class<? extends org.springframework.integration.file.config.FileMessageHistoryTests> ( ) ) ; TemporaryFolder org.springframework.integration.file.config.TemporaryFolder = org.springframework.integration.file.config.ClassPathXmlApplicationContext . getBean ( TemporaryFolder .class ) ; java.io.File java.io.File = org.springframework.integration.file.config.TemporaryFolder . newFile ( STRING ) ; java.io.BufferedWriter java.io.BufferedWriter = new java.io.BufferedWriter ( new java.io.FileWriter ( java.io.File ) ) ; java.io.BufferedWriter . void ( STRING ) ; java.io.BufferedWriter . void ( ) ; PollableChannel org.springframework.integration.file.config.PollableChannel = org.springframework.integration.file.config.ClassPathXmlApplicationContext . getBean ( STRING , PollableChannel .class ) ; Message < ? > org.springframework.integration.file.config.Message<?> = org.springframework.integration.file.config.PollableChannel . receive ( NUMBER ) ; assertThat ( org.springframework.integration.file.config.Message<> , is ( notNullValue ( ) ) ) ; MessageHistory org.springframework.integration.file.config.MessageHistory = MessageHistory . read ( org.springframework.integration.file.config.Message<> ) ; assertThat ( org.springframework.integration.file.config.MessageHistory , is ( notNullValue ( ) ) ) ; java.util.Properties java.util.Properties = TestUtils . locateComponentInHistory ( org.springframework.integration.file.config.MessageHistory , STRING , NUMBER ) ; assertNotNull ( java.util.Properties ) ; assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; org.springframework.integration.file.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
