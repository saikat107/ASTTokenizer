<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> public static org.springframework.integration.file.config.BeanDefinition org.springframework.integration.file.config.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.file.config.ParserContext , boolean boolean , java.lang.Class<? extends org.springframework.integration.file.config.RemoteFileOperations<?>> < ? extends RemoteFileOperations < ? > > java.lang.Class<? extends org.springframework.integration.file.config.RemoteFileOperations<?>> ) { BeanDefinitionBuilder org.springframework.integration.file.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( java.lang.Class<> ) ; org.springframework.integration.file.config.BeanDefinitionBuilder . addConstructorArgReference ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; BeanDefinition org.springframework.integration.file.config.BeanDefinition = IntegrationNamespaceUtils . createExpressionDefinitionFromValueOrExpression ( STRING , STRING , org.springframework.integration.file.config.ParserContext , org.w3c.dom.Element , boolean ) ; if ( org.springframework.integration.file.config.BeanDefinition != null ) { org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.file.config.BeanDefinition ) ; } org.springframework.integration.file.config.BeanDefinition = IntegrationNamespaceUtils . createExpressionDefinitionFromValueOrExpression ( STRING , STRING , org.springframework.integration.file.config.ParserContext , org.w3c.dom.Element , false ) ; if ( org.springframework.integration.file.config.BeanDefinition != null ) { org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.file.config.BeanDefinition ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; if ( boolean || boolean ) { if ( boolean && boolean ) { org.springframework.integration.file.config.ParserContext . getReaderContext ( ) . error ( STRING + STRING , org.w3c.dom.Element ) ; } if ( boolean ) { org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } else { BeanDefinitionBuilder org.springframework.integration.file.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( DefaultFileNameGenerator .class ) ; org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.file.config.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; } } IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.w3c.dom.Element . java.lang.String ( STRING ) ) ; return org.springframework.integration.file.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> static void void ( BeanDefinitionBuilder org.springframework.integration.file.config.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.file.config.ParserContext , java.lang.Class<? extends org.springframework.integration.file.config.FileListFilter<?>> < ? extends FileListFilter < ? > > java.lang.Class<? extends org.springframework.integration.file.config.FileListFilter<?>> , java.lang.Class<? extends org.springframework.integration.file.config.FileListFilter<?>> < ? extends FileListFilter < ? > > java.lang.Class<? extends org.springframework.integration.file.config.FileListFilter<?>> , java.lang.Class<? extends org.springframework.integration.file.config.AbstractPersistentAcceptOnceFileListFilter<?>> < ? extends AbstractPersistentAcceptOnceFileListFilter < ? > > java.lang.Class<? extends org.springframework.integration.file.config.AbstractPersistentAcceptOnceFileListFilter<?>> ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; if ( boolean || boolean || boolean || boolean ) { int int = NUMBER ; if ( boolean ) { int ++ ; } if ( boolean ) { int ++ ; } if ( boolean ) { int ++ ; } if ( boolean ) { int ++ ; } if ( int != NUMBER ) { org.springframework.integration.file.config.ParserContext . getReaderContext ( ) . error ( STRING + STRING , org.w3c.dom.Element ) ; } if ( boolean ) { org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } else if ( boolean ) { BeanDefinition org.springframework.integration.file.config.BeanDefinition = BeanDefinitionBuilder . genericBeanDefinition ( ExpressionFileListFilter .class ) . addConstructorArgValue ( java.lang.String ) . getBeanDefinition ( ) ; org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.file.config.BeanDefinition ) ; } else if ( boolean ) { BeanDefinition org.springframework.integration.file.config.BeanDefinition = BeanDefinitionBuilder . genericBeanDefinition ( java.lang.Class<> ) . addConstructorArgValue ( java.lang.String ) . getBeanDefinition ( ) ; void ( org.springframework.integration.file.config.BeanDefinitionBuilder , java.lang.Class<> , org.springframework.integration.file.config.BeanDefinition ) ; } else { BeanDefinition org.springframework.integration.file.config.BeanDefinition = BeanDefinitionBuilder . genericBeanDefinition ( java.lang.Class<> ) . addConstructorArgValue ( java.lang.String ) . getBeanDefinition ( ) ; void ( org.springframework.integration.file.config.BeanDefinitionBuilder , java.lang.Class<> , org.springframework.integration.file.config.BeanDefinition ) ; } } }  <METHOD_END>
<METHOD_START> private static void void ( BeanDefinitionBuilder org.springframework.integration.file.config.BeanDefinitionBuilder , java.lang.Class<? extends org.springframework.integration.file.config.AbstractPersistentAcceptOnceFileListFilter<?>> < ? extends AbstractPersistentAcceptOnceFileListFilter < ? > > java.lang.Class<? extends org.springframework.integration.file.config.AbstractPersistentAcceptOnceFileListFilter<?>> , BeanDefinition org.springframework.integration.file.config.BeanDefinition ) { BeanDefinition org.springframework.integration.file.config.BeanDefinition = BeanDefinitionBuilder . genericBeanDefinition ( java.lang.Class<> ) . addConstructorArgValue ( BeanDefinitionBuilder . genericBeanDefinition ( SimpleMetadataStore .class ) . getBeanDefinition ( ) ) . addConstructorArgValue ( STRING ) . getBeanDefinition ( ) ; ManagedList < BeanDefinition > org.springframework.integration.file.config.ManagedList<org.springframework.integration.file.config.BeanDefinition> = new ManagedList <> ( ) ; org.springframework.integration.file.config.ManagedList<org.springframework.integration.file.config.BeanDefinition> . add ( org.springframework.integration.file.config.BeanDefinition ) ; org.springframework.integration.file.config.ManagedList<org.springframework.integration.file.config.BeanDefinition> . add ( org.springframework.integration.file.config.BeanDefinition ) ; BeanDefinition org.springframework.integration.file.config.BeanDefinition = BeanDefinitionBuilder . genericBeanDefinition ( CompositeFileListFilter .class ) . addConstructorArgValue ( org.springframework.integration.file.config.ManagedList<org.springframework.integration.file.config.BeanDefinition> ) . getBeanDefinition ( ) ; org.springframework.integration.file.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.file.config.BeanDefinition ) ; }  <METHOD_END>
