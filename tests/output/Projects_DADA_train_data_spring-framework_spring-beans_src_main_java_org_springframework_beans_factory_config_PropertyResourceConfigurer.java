<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableListableBeanFactory org.springframework.beans.factory.config.ConfigurableListableBeanFactory ) throws org.springframework.beans.factory.config.BeansException { try { java.util.Properties java.util.Properties = mergeProperties ( ) ; void ( java.util.Properties ) ; void ( org.springframework.beans.factory.config.ConfigurableListableBeanFactory , java.util.Properties ) ; } catch ( java.io.IOException java.io.IOException ) { throw new BeanInitializationException ( STRING , java.io.IOException ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( java.util.Properties java.util.Properties ) { java.util.Enumeration<?> < ? > java.util.Enumeration<?> = java.util.Properties . java.util.Enumeration<?> ( ) ; while ( java.util.Enumeration<> . boolean ( ) ) { java.lang.String java.lang.String = ( java.lang.String ) java.util.Enumeration<> . nextElement ( ) ; java.lang.String java.lang.String = java.util.Properties . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String , java.lang.String ) ; if ( ! ObjectUtils . nullSafeEquals ( java.lang.String , java.lang.String ) ) { java.util.Properties . java.lang.Object ( java.lang.String , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( ConfigurableListableBeanFactory org.springframework.beans.factory.config.ConfigurableListableBeanFactory , java.util.Properties java.util.Properties )			throws org.springframework.beans.factory.config.BeansException ;  <METHOD_END>
