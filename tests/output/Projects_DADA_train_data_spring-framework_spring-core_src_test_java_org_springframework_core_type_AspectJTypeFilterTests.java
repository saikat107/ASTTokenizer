<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; void ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , STRING ) ; void ( STRING , STRING + STRING + STRING ) ; void ( STRING , STRING + STRING + STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.lang.Exception { MetadataReaderFactory org.springframework.core.type.MetadataReaderFactory = new SimpleMetadataReaderFactory ( ) ; MetadataReader org.springframework.core.type.MetadataReader = org.springframework.core.type.MetadataReaderFactory . getMetadataReader ( java.lang.String ) ; AspectJTypeFilter org.springframework.core.type.AspectJTypeFilter = new AspectJTypeFilter ( java.lang.String , java.lang.Class<? extends org.springframework.core.type.AspectJTypeFilterTests> ( ) . java.lang.ClassLoader ( ) ) ; assertTrue ( org.springframework.core.type.AspectJTypeFilter . match ( org.springframework.core.type.MetadataReader , org.springframework.core.type.MetadataReaderFactory ) ) ; ClassloadingAssertions . assertClassNotLoaded ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.lang.Exception { MetadataReaderFactory org.springframework.core.type.MetadataReaderFactory = new SimpleMetadataReaderFactory ( ) ; MetadataReader org.springframework.core.type.MetadataReader = org.springframework.core.type.MetadataReaderFactory . getMetadataReader ( java.lang.String ) ; AspectJTypeFilter org.springframework.core.type.AspectJTypeFilter = new AspectJTypeFilter ( java.lang.String , java.lang.Class<? extends org.springframework.core.type.AspectJTypeFilterTests> ( ) . java.lang.ClassLoader ( ) ) ; assertFalse ( org.springframework.core.type.AspectJTypeFilter . match ( org.springframework.core.type.MetadataReader , org.springframework.core.type.MetadataReaderFactory ) ) ; ClassloadingAssertions . assertClassNotLoaded ( java.lang.String ) ; }  <METHOD_END>
