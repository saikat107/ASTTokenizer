<METHOD_START> @ Aggregator public org.springframework.integration.config.Message<?> < ? > org.springframework.integration.config.Message<?> ( java.util.List<org.springframework.integration.config.Message<?>> < Message < ? > > java.util.List<org.springframework.integration.config.Message<?>> ) { java.util.List<org.springframework.integration.config.Message<?>> < Message < ? > > java.util.List<org.springframework.integration.config.Message<?>> = new java.util.ArrayList<org.springframework.integration.config.Message<?>> < Message < ? > > ( java.util.List<org.springframework.integration.config.Message<?>> ) ; java.util.Collections . void ( java.util.List<org.springframework.integration.config.Message<?>> , new MessageSequenceComparator ( ) ) ; java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer ( ) ; java.lang.Object java.lang.Object = null ; for ( Message < ? > org.springframework.integration.config.Message<?> : java.util.List<org.springframework.integration.config.Message<?>> ) { java.lang.StringBuffer . java.lang.StringBuffer ( org.springframework.integration.config.Message<> . getPayload ( ) . toString ( ) ) ; if ( null == java.lang.Object ) { java.lang.Object = new IntegrationMessageHeaderAccessor ( org.springframework.integration.config.Message<> ) . getCorrelationId ( ) ; } } Message < ? > org.springframework.integration.config.Message<?> = new GenericMessage < java.lang.String > ( java.lang.StringBuffer . java.lang.String ( ) ) ; if ( java.lang.Object != null ) { java.util.concurrent.ConcurrentMap<java.lang.Object,org.springframework.integration.config.Message<?>> . put ( java.lang.Object , org.springframework.integration.config.Message<> ) ; } return org.springframework.integration.config.Message<> ; }  <METHOD_END>
<METHOD_START> public java.util.concurrent.ConcurrentMap<java.lang.Object,org.springframework.integration.config.Message<?>> < java.lang.Object , Message < ? > > java.util.concurrent.ConcurrentMap<java.lang.Object,org.springframework.integration.config.Message<?>> ( ) { return java.util.concurrent.ConcurrentMap<java.lang.Object,org.springframework.integration.config.Message<?>> ; }  <METHOD_END>
