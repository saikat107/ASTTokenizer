<METHOD_START> @ Bean public org.springframework.data.cassandra.config.java.CassandraSessionFactoryBean org.springframework.data.cassandra.config.java.CassandraSessionFactoryBean ( ) java.lang.ClassNotFoundException { CassandraSessionFactoryBean org.springframework.data.cassandra.config.java.CassandraSessionFactoryBean = new CassandraSessionFactoryBean ( ) ; org.springframework.data.cassandra.config.java.CassandraSessionFactoryBean . setCluster ( cluster ( ) . getObject ( ) ) ; org.springframework.data.cassandra.config.java.CassandraSessionFactoryBean . setConverter ( org.springframework.data.cassandra.config.java.CassandraConverter ( ) ) ; org.springframework.data.cassandra.config.java.CassandraSessionFactoryBean . setKeyspaceName ( java.lang.String ( ) ) ; org.springframework.data.cassandra.config.java.CassandraSessionFactoryBean . setSchemaAction ( org.springframework.data.cassandra.config.java.SchemaAction ( ) ) ; org.springframework.data.cassandra.config.java.CassandraSessionFactoryBean . setStartupScripts ( getStartupScripts ( ) ) ; org.springframework.data.cassandra.config.java.CassandraSessionFactoryBean . setShutdownScripts ( getShutdownScripts ( ) ) ; return org.springframework.data.cassandra.config.java.CassandraSessionFactoryBean ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.cassandra.config.java.SessionFactory org.springframework.data.cassandra.config.java.SessionFactory ( ) java.lang.ClassNotFoundException { return new DefaultSessionFactory ( org.springframework.data.cassandra.config.java.CassandraSessionFactoryBean ( ) . getObject ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.cassandra.config.java.CassandraConverter org.springframework.data.cassandra.config.java.CassandraConverter ( ) java.lang.ClassNotFoundException { MappingCassandraConverter org.springframework.data.cassandra.config.java.MappingCassandraConverter = new MappingCassandraConverter ( org.springframework.data.cassandra.config.java.CassandraMappingContext ( ) ) ; org.springframework.data.cassandra.config.java.MappingCassandraConverter . setCustomConversions ( org.springframework.data.cassandra.config.java.CustomConversions ( ) ) ; return org.springframework.data.cassandra.config.java.MappingCassandraConverter ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.cassandra.config.java.CustomConversions org.springframework.data.cassandra.config.java.CustomConversions ( ) { return new CustomConversions ( java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.cassandra.config.java.CassandraMappingContext org.springframework.data.cassandra.config.java.CassandraMappingContext ( ) java.lang.ClassNotFoundException { BasicCassandraMappingContext org.springframework.data.cassandra.config.java.BasicCassandraMappingContext = new BasicCassandraMappingContext ( ) ; org.springframework.data.cassandra.config.java.BasicCassandraMappingContext . setBeanClassLoader ( java.lang.ClassLoader ) ; org.springframework.data.cassandra.config.java.BasicCassandraMappingContext . setInitialEntitySet ( CassandraEntityClassScanner . scan ( java.lang.String[] ( ) ) ) ; CustomConversions org.springframework.data.cassandra.config.java.CustomConversions = org.springframework.data.cassandra.config.java.CustomConversions ( ) ; org.springframework.data.cassandra.config.java.BasicCassandraMappingContext . setCustomConversions ( org.springframework.data.cassandra.config.java.CustomConversions ) ; org.springframework.data.cassandra.config.java.BasicCassandraMappingContext . setSimpleTypeHolder ( org.springframework.data.cassandra.config.java.CustomConversions . getSimpleTypeHolder ( ) ) ; org.springframework.data.cassandra.config.java.BasicCassandraMappingContext . setUserTypeResolver ( new SimpleUserTypeResolver ( cluster ( ) . getObject ( ) , java.lang.String ( ) ) ) ; return org.springframework.data.cassandra.config.java.BasicCassandraMappingContext ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.cassandra.config.java.CassandraAdminOperations org.springframework.data.cassandra.config.java.CassandraAdminOperations ( ) java.lang.Exception { return new CassandraAdminTemplate ( org.springframework.data.cassandra.config.java.SessionFactory ( ) , org.springframework.data.cassandra.config.java.CassandraConverter ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return new java.lang.String [] { java.lang.Class<? extends org.springframework.data.cassandra.config.java.AbstractCassandraConfiguration> ( ) . java.lang.Package ( ) . java.lang.String ( ) } ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public org.springframework.data.cassandra.config.java.SchemaAction org.springframework.data.cassandra.config.java.SchemaAction ( ) { return SchemaAction . NONE ; }  <METHOD_END>
