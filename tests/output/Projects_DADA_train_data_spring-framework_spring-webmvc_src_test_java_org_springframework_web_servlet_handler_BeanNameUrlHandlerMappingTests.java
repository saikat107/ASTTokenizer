<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockServletContext org.springframework.web.servlet.handler.MockServletContext = new MockServletContext ( STRING ) ; org.springframework.web.servlet.handler.ConfigurableWebApplicationContext = new XmlWebApplicationContext ( ) ; org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . setServletContext ( org.springframework.web.servlet.handler.MockServletContext ) ; org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . setConfigLocations ( new java.lang.String [] { java.lang.String } ) ; org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { HandlerMapping org.springframework.web.servlet.handler.HandlerMapping = ( HandlerMapping ) org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; MockHttpServletRequest org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setContextPath ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , java.lang.Object == null ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; java.lang.Object = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , java.lang.Object == null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { HandlerMapping org.springframework.web.servlet.handler.HandlerMapping = ( HandlerMapping ) org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; void ( org.springframework.web.servlet.handler.HandlerMapping ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanNameUrlHandlerMapping org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping = new BeanNameUrlHandlerMapping ( ) ; org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . setDetectHandlersInAncestorContexts ( true ) ; org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . setApplicationContext ( new StaticApplicationContext ( org.springframework.web.servlet.handler.ConfigurableWebApplicationContext ) ) ; void ( org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping ) ; }  <METHOD_END>
<METHOD_START> private void void ( HandlerMapping org.springframework.web.servlet.handler.HandlerMapping ) throws java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; MockHttpServletRequest org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; HandlerExecutionChain org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setContextPath ( STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setContextPath ( STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setServletPath ( STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setContextPath ( STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setServletPath ( STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setContextPath ( STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setServletPath ( STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanNameUrlHandlerMapping org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping = new BeanNameUrlHandlerMapping ( ) ; org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . setAlwaysUseFullPath ( true ) ; org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . setApplicationContext ( org.springframework.web.servlet.handler.ConfigurableWebApplicationContext ) ; java.lang.Object java.lang.Object = org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; MockHttpServletRequest org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; HandlerExecutionChain org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setContextPath ( STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setContextPath ( STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setServletPath ( STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setContextPath ( STRING ) ; org.springframework.web.servlet.handler.MockHttpServletRequest . setServletPath ( STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { HandlerMapping org.springframework.web.servlet.handler.HandlerMapping = ( HandlerMapping ) org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; MockHttpServletRequest org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; HandlerExecutionChain org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.HandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain == null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanNameUrlHandlerMapping org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping = ( BeanNameUrlHandlerMapping ) org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; java.lang.Object java.lang.Object = new java.lang.Object ( ) ; org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . registerHandler ( STRING , java.lang.Object ) ; java.lang.Object java.lang.Object = org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; MockHttpServletRequest org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; HandlerExecutionChain org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain != null && org.springframework.web.servlet.handler.HandlerExecutionChain . getHandler ( ) == java.lang.Object ) ; org.springframework.web.servlet.handler.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.handler.HandlerExecutionChain = org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . getHandler ( org.springframework.web.servlet.handler.MockHttpServletRequest ) ; assertTrue ( STRING , org.springframework.web.servlet.handler.HandlerExecutionChain == null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.handler.ServletException { BeanNameUrlHandlerMapping org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping = ( BeanNameUrlHandlerMapping ) org.springframework.web.servlet.handler.ConfigurableWebApplicationContext . getBean ( STRING ) ; try { org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping . registerHandler ( STRING , new java.lang.Object ( ) ) ; fail ( STRING ) ; } catch ( java.lang.IllegalStateException java.lang.IllegalStateException ) { } }  <METHOD_END>
