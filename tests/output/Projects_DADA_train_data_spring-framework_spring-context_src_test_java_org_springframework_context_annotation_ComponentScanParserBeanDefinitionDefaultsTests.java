<METHOD_START> @ Before public void void ( ) { org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . int = NUMBER ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; assertFalse ( STRING , org.springframework.context.annotation.GenericApplicationContext . getBeanDefinition ( java.lang.String ) . isLazyInit ( ) ) ; assertEquals ( STRING , NUMBER , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . int ) ; org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; assertEquals ( STRING , NUMBER , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; assertTrue ( STRING , org.springframework.context.annotation.GenericApplicationContext . getBeanDefinition ( java.lang.String ) . isLazyInit ( ) ) ; assertEquals ( STRING , NUMBER , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . int ) ; org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; assertEquals ( STRING , NUMBER , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . int ) ; org.springframework.context.annotation.GenericApplicationContext . getBean ( java.lang.String ) ; assertEquals ( STRING , NUMBER , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; assertFalse ( STRING , org.springframework.context.annotation.GenericApplicationContext . getBeanDefinition ( java.lang.String ) . isLazyInit ( ) ) ; assertEquals ( STRING , NUMBER , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . int ) ; org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; assertEquals ( STRING , NUMBER , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean = ( org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean ) org.springframework.context.annotation.GenericApplicationContext . getBean ( java.lang.String ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean ( ) ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean = ( org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean ) org.springframework.context.annotation.GenericApplicationContext . getBean ( java.lang.String ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean ( ) ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean = ( org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean ) org.springframework.context.annotation.GenericApplicationContext . getBean ( java.lang.String ) ; assertNotNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean ( ) ) ; assertEquals ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean ( ) . java.lang.String ( ) ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; try { org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; fail ( STRING ) ; } catch ( UnsatisfiedDependencyException org.springframework.context.annotation.UnsatisfiedDependencyException ) { } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean = ( org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean ) org.springframework.context.annotation.GenericApplicationContext . getBean ( java.lang.String ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean ( ) ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) ) ; assertNotNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) ) ; assertEquals ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean = ( org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean ) org.springframework.context.annotation.GenericApplicationContext . getBean ( java.lang.String ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean ( ) ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) ) ; assertNull ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean = ( org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean ) org.springframework.context.annotation.GenericApplicationContext . getBean ( java.lang.String ) ; assertFalse ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . boolean ( ) ) ; org.springframework.context.annotation.GenericApplicationContext . close ( ) ; assertFalse ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean = ( org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean ) org.springframework.context.annotation.GenericApplicationContext . getBean ( java.lang.String ) ; assertTrue ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . boolean ( ) ) ; org.springframework.context.annotation.GenericApplicationContext . close ( ) ; assertTrue ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericApplicationContext org.springframework.context.annotation.GenericApplicationContext = new GenericApplicationContext ( ) ; XmlBeanDefinitionReader org.springframework.context.annotation.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.context.annotation.GenericApplicationContext ) ; org.springframework.context.annotation.XmlBeanDefinitionReader . loadBeanDefinitions ( java.lang.String + STRING ) ; org.springframework.context.annotation.GenericApplicationContext . refresh ( ) ; org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean = ( org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean ) org.springframework.context.annotation.GenericApplicationContext . getBean ( java.lang.String ) ; assertFalse ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . boolean ( ) ) ; org.springframework.context.annotation.GenericApplicationContext . close ( ) ; assertFalse ( STRING , org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.DefaultsTestBean . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { int ++ ; }  <METHOD_END>
<METHOD_START> public void ( org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean ) { this(); this . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean = org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ) { this . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean = org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ) { this . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean = org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean ( ) { return this . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.ConstructorDependencyTestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) { return this . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ; }  <METHOD_END>
<METHOD_START> public org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ( ) { return this . org.springframework.context.annotation.ComponentScanParserBeanDefinitionDefaultsTests.PropertyDependencyTestBean ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
