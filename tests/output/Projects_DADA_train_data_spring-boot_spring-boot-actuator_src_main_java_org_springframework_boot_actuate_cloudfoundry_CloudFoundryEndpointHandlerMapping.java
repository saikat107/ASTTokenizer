<METHOD_START> void ( java.util.Set<? extends org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> < ? extends NamedMvcEndpoint > java.util.Set<? extends org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> , CorsConfiguration org.springframework.boot.actuate.cloudfoundry.CorsConfiguration , HandlerInterceptor org.springframework.boot.actuate.cloudfoundry.HandlerInterceptor ) { super( java.util.Set<> , org.springframework.boot.actuate.cloudfoundry.CorsConfiguration ); setSecurityInterceptor ( org.springframework.boot.actuate.cloudfoundry.HandlerInterceptor ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.util.Set<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> < NamedMvcEndpoint > java.util.Set<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> ) { super. postProcessEndpoints ( java.util.Set<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> ) ; java.util.Iterator<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> < NamedMvcEndpoint > java.util.Iterator<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> = java.util.Set<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> . iterator ( ) ; HealthMvcEndpoint org.springframework.boot.actuate.cloudfoundry.HealthMvcEndpoint = null ; while ( java.util.Iterator<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> . hasNext ( ) ) { NamedMvcEndpoint org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint = java.util.Iterator<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> . next ( ) ; if ( org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint instanceof HalJsonMvcEndpoint ) { java.util.Iterator<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> . remove ( ) ; } else if ( org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint instanceof HealthMvcEndpoint ) { java.util.Iterator<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> . remove ( ) ; org.springframework.boot.actuate.cloudfoundry.HealthMvcEndpoint = ( HealthMvcEndpoint ) org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint ; } } if ( org.springframework.boot.actuate.cloudfoundry.HealthMvcEndpoint != null ) { java.util.Set<org.springframework.boot.actuate.cloudfoundry.NamedMvcEndpoint> . add ( new CloudFoundryHealthMvcEndpoint ( org.springframework.boot.actuate.cloudfoundry.HealthMvcEndpoint . getDelegate ( ) ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. afterPropertiesSet ( ) ; detectHandlerMethods ( new CloudFoundryDiscoveryMvcEndpoint ( getEndpoints ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( MvcEndpoint org.springframework.boot.actuate.cloudfoundry.MvcEndpoint ) { if ( org.springframework.boot.actuate.cloudfoundry.MvcEndpoint instanceof NamedMvcEndpoint ) { return STRING + ( ( NamedMvcEndpoint ) org.springframework.boot.actuate.cloudfoundry.MvcEndpoint ) . getName ( ) ; } return super. getPath ( org.springframework.boot.actuate.cloudfoundry.MvcEndpoint ) ; }  <METHOD_END>
