<METHOD_START> public void ( ) { super( STRING , STRING , true ); }  <METHOD_END>
<METHOD_START> public java.io.File java.io.File ( ) { return this . java.io.File ; }  <METHOD_END>
<METHOD_START> public void void ( java.io.File java.io.File ) { this . java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( method = { RequestMethod . GET , RequestMethod . HEAD } ) public void void ( HttpServletRequest org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , HttpServletResponse org.springframework.boot.actuate.endpoint.mvc.HttpServletResponse )			throws org.springframework.boot.actuate.endpoint.mvc.ServletException , java.io.IOException { if ( ! isEnabled ( ) ) { org.springframework.boot.actuate.endpoint.mvc.HttpServletResponse . setStatus ( HttpStatus . NOT_FOUND . value ( ) ) ; return; } Resource org.springframework.boot.actuate.endpoint.mvc.Resource = org.springframework.boot.actuate.endpoint.mvc.Resource ( ) ; if ( org.springframework.boot.actuate.endpoint.mvc.Resource != null && ! org.springframework.boot.actuate.endpoint.mvc.Resource . exists ( ) ) { if ( org.springframework.boot.actuate.endpoint.mvc.Log . isDebugEnabled ( ) ) { org.springframework.boot.actuate.endpoint.mvc.Log . debug ( STRING + org.springframework.boot.actuate.endpoint.mvc.Resource + STRING ) ; } org.springframework.boot.actuate.endpoint.mvc.Resource = null ; } org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.Handler org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.Handler = new org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.Handler ( org.springframework.boot.actuate.endpoint.mvc.Resource , org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest . getServletContext ( ) ) ; org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.Handler . handleRequest ( org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , org.springframework.boot.actuate.endpoint.mvc.HttpServletResponse ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.endpoint.mvc.Resource org.springframework.boot.actuate.endpoint.mvc.Resource ( ) { if ( this . java.io.File != null ) { return new FileSystemResource ( this . java.io.File ) ; } LogFile org.springframework.boot.actuate.endpoint.mvc.LogFile = LogFile . get ( getEnvironment ( ) ) ; if ( org.springframework.boot.actuate.endpoint.mvc.LogFile == null ) { org.springframework.boot.actuate.endpoint.mvc.Log . debug ( STRING ) ; return null ; } return new FileSystemResource ( org.springframework.boot.actuate.endpoint.mvc.LogFile . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> void ( Resource org.springframework.boot.actuate.endpoint.mvc.Resource , ServletContext org.springframework.boot.actuate.endpoint.mvc.ServletContext ) { this . org.springframework.boot.actuate.endpoint.mvc.Resource = org.springframework.boot.actuate.endpoint.mvc.Resource ; getLocations ( ) . add ( org.springframework.boot.actuate.endpoint.mvc.Resource ) ; try { setServletContext ( org.springframework.boot.actuate.endpoint.mvc.ServletContext ) ; afterPropertiesSet ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.IllegalStateException ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { this . getLocations ( ) . clear ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.actuate.endpoint.mvc.Resource org.springframework.boot.actuate.endpoint.mvc.Resource ( HttpServletRequest org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest ) throws java.io.IOException { return this . org.springframework.boot.actuate.endpoint.mvc.Resource ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.actuate.endpoint.mvc.MediaType org.springframework.boot.actuate.endpoint.mvc.MediaType ( HttpServletRequest org.springframework.boot.actuate.endpoint.mvc.HttpServletRequest , Resource org.springframework.boot.actuate.endpoint.mvc.Resource ) { return MediaType . TEXT_PLAIN ; }  <METHOD_END>
