<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.AnnotationConfigApplicationContext org.springframework.statemachine.AnnotationConfigApplicationContext ( ) { return new AnnotationConfigApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PseudoState < TestStates , TestEvents > org.springframework.statemachine.PseudoState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultPseudoState < TestStates , TestEvents > ( PseudoStateKind . INITIAL ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = new TestEntryAction ( STRING ) ; TestExitAction org.springframework.statemachine.TestExitAction = new TestExitAction ( STRING ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestEntryAction ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestExitAction ) ; State < TestStates , TestEvents > org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new EnumState < TestStates , TestEvents > ( TestStates . S111 , null , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.PseudoState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > ( ) ; ObjectStateMachine < TestStates , TestEvents > org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new ObjectStateMachine < TestStates , TestEvents > ( java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = new TestEntryAction ( STRING ) ; TestExitAction org.springframework.statemachine.TestExitAction = new TestExitAction ( STRING ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestEntryAction ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestExitAction ) ; StateMachineState < TestStates , TestEvents > org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new StateMachineState < TestStates , TestEvents > ( TestStates . S11 , org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , null , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.PseudoState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > ( ) ; ObjectStateMachine < TestStates , TestEvents > org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new ObjectStateMachine < TestStates , TestEvents > ( java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = new TestEntryAction ( STRING ) ; TestExitAction org.springframework.statemachine.TestExitAction = new TestExitAction ( STRING ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestEntryAction ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestExitAction ) ; StateMachineState < TestStates , TestEvents > org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new StateMachineState < TestStates , TestEvents > ( TestStates . S1 , org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , null , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.PseudoState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > ( ) ; DefaultExternalTransition < TestStates , TestEvents > org.springframework.statemachine.DefaultExternalTransition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultExternalTransition < TestStates , TestEvents > ( org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , null , TestEvents . E1 , null , new EventTrigger < TestStates , TestEvents > ( TestEvents . E1 ) ) ; java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.DefaultExternalTransition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; ObjectStateMachine < TestStates , TestEvents > org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new ObjectStateMachine < TestStates , TestEvents > ( java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; SyncTaskExecutor org.springframework.statemachine.SyncTaskExecutor = new SyncTaskExecutor ( ) ; BeanFactory org.springframework.statemachine.BeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setTaskExecutor ( org.springframework.statemachine.SyncTaskExecutor ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setBeanFactory ( org.springframework.statemachine.BeanFactory ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . afterPropertiesSet ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setTaskExecutor ( org.springframework.statemachine.SyncTaskExecutor ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setBeanFactory ( org.springframework.statemachine.BeanFactory ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . afterPropertiesSet ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setTaskExecutor ( org.springframework.statemachine.SyncTaskExecutor ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setBeanFactory ( org.springframework.statemachine.BeanFactory ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . afterPropertiesSet ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . start ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . sendEvent ( TestEvents . E1 ) ; assertThat ( entryActionS111 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS111 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( entryActionS11 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS11 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( entryActionS1 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS1 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( entryActionS111 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS111 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( entryActionS11 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS11 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( entryActionS1 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS1 . stateContexts . size ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PseudoState < TestStates , TestEvents > org.springframework.statemachine.PseudoState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultPseudoState < TestStates , TestEvents > ( PseudoStateKind . INITIAL ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = new TestEntryAction ( STRING ) ; TestExitAction org.springframework.statemachine.TestExitAction = new TestExitAction ( STRING ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestEntryAction ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestExitAction ) ; State < TestStates , TestEvents > org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new EnumState < TestStates , TestEvents > ( TestStates . S111 , null , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.PseudoState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = new TestEntryAction ( STRING ) ; TestExitAction org.springframework.statemachine.TestExitAction = new TestExitAction ( STRING ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestEntryAction ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestExitAction ) ; State < TestStates , TestEvents > org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new EnumState < TestStates , TestEvents > ( TestStates . S112 , null , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , null ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > ( ) ; ObjectStateMachine < TestStates , TestEvents > org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new ObjectStateMachine < TestStates , TestEvents > ( java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = new TestEntryAction ( STRING ) ; TestExitAction org.springframework.statemachine.TestExitAction = new TestExitAction ( STRING ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestEntryAction ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestExitAction ) ; StateMachineState < TestStates , TestEvents > org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new StateMachineState < TestStates , TestEvents > ( TestStates . S1 , org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , null , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.PseudoState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > ( ) ; DefaultExternalTransition < TestStates , TestEvents > org.springframework.statemachine.DefaultExternalTransition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultExternalTransition < TestStates , TestEvents > ( org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , null , TestEvents . E1 , null , new EventTrigger < TestStates , TestEvents > ( TestEvents . E1 ) ) ; java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.DefaultExternalTransition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; ObjectStateMachine < TestStates , TestEvents > org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new ObjectStateMachine < TestStates , TestEvents > ( java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; SyncTaskExecutor org.springframework.statemachine.SyncTaskExecutor = new SyncTaskExecutor ( ) ; BeanFactory org.springframework.statemachine.BeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setTaskExecutor ( org.springframework.statemachine.SyncTaskExecutor ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setBeanFactory ( org.springframework.statemachine.BeanFactory ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . afterPropertiesSet ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setTaskExecutor ( org.springframework.statemachine.SyncTaskExecutor ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setBeanFactory ( org.springframework.statemachine.BeanFactory ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . afterPropertiesSet ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . start ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . sendEvent ( TestEvents . E1 ) ; assertThat ( entryActionS111 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS111 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( entryActionS112 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS112 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( false ) ) ; assertThat ( entryActionS1 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS1 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( false ) ) ; assertThat ( entryActionS111 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS111 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( entryActionS112 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS112 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( entryActionS1 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS1 . stateContexts . size ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PseudoState < TestStates , TestEvents > org.springframework.statemachine.PseudoState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultPseudoState < TestStates , TestEvents > ( PseudoStateKind . INITIAL ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = new TestEntryAction ( STRING ) ; TestExitAction org.springframework.statemachine.TestExitAction = new TestExitAction ( STRING ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestEntryAction ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestExitAction ) ; State < TestStates , TestEvents > org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new EnumState < TestStates , TestEvents > ( TestStates . S111 , null , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.PseudoState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > ( ) ; ObjectStateMachine < TestStates , TestEvents > org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new ObjectStateMachine < TestStates , TestEvents > ( java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = new TestEntryAction ( STRING ) ; TestExitAction org.springframework.statemachine.TestExitAction = new TestExitAction ( STRING ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestEntryAction ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestExitAction ) ; StateMachineState < TestStates , TestEvents > org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new StateMachineState < TestStates , TestEvents > ( TestStates . S11 , org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , null , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.PseudoState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > ( ) ; ObjectStateMachine < TestStates , TestEvents > org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new ObjectStateMachine < TestStates , TestEvents > ( java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = new TestEntryAction ( STRING ) ; TestExitAction org.springframework.statemachine.TestExitAction = new TestExitAction ( STRING ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestEntryAction ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Action < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.TestExitAction ) ; StateMachineState < TestStates , TestEvents > org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new StateMachineState < TestStates , TestEvents > ( TestStates . S1 , org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , null , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.PseudoState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < State < TestStates , TestEvents > > ( ) ; java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> = new java.util.ArrayList<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> < Transition < TestStates , TestEvents > > ( ) ; DefaultLocalTransition < TestStates , TestEvents > org.springframework.statemachine.DefaultLocalTransition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new DefaultLocalTransition < TestStates , TestEvents > ( org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , null , TestEvents . E1 , null , new EventTrigger < TestStates , TestEvents > ( TestEvents . E1 ) ) ; java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> . add ( org.springframework.statemachine.DefaultLocalTransition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; ObjectStateMachine < TestStates , TestEvents > org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = new ObjectStateMachine < TestStates , TestEvents > ( java.util.Collection<org.springframework.statemachine.State<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , java.util.Collection<org.springframework.statemachine.Transition<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents>> , org.springframework.statemachine.StateMachineState<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) ; SyncTaskExecutor org.springframework.statemachine.SyncTaskExecutor = new SyncTaskExecutor ( ) ; BeanFactory org.springframework.statemachine.BeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setTaskExecutor ( org.springframework.statemachine.SyncTaskExecutor ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setBeanFactory ( org.springframework.statemachine.BeanFactory ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . afterPropertiesSet ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setTaskExecutor ( org.springframework.statemachine.SyncTaskExecutor ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setBeanFactory ( org.springframework.statemachine.BeanFactory ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . afterPropertiesSet ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setTaskExecutor ( org.springframework.statemachine.SyncTaskExecutor ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . setBeanFactory ( org.springframework.statemachine.BeanFactory ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . afterPropertiesSet ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . start ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . sendEvent ( TestEvents . E1 ) ; assertThat ( entryActionS111 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS111 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( entryActionS11 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS11 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( entryActionS1 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS1 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( false ) ) ; assertThat ( entryActionS111 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS111 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( entryActionS11 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS11 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( entryActionS1 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS1 . stateContexts . size ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { context . register ( BaseConfig .class , org.springframework.statemachine.SubStateMachineTests.Config1 .class ) ; context . refresh ( ) ; assertTrue ( context . containsBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE ) ) ; @ java.lang.SuppressWarnings ( STRING ) ObjectStateMachine < TestStates , TestEvents > org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = context . getBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE , ObjectStateMachine .class ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . start ( ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . sendEvent ( TestEvents . E1 ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = context . getBean ( STRING , TestEntryAction .class ) ; TestExitAction org.springframework.statemachine.TestExitAction = context . getBean ( STRING , TestExitAction .class ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = context . getBean ( STRING , TestEntryAction .class ) ; TestExitAction org.springframework.statemachine.TestExitAction = context . getBean ( STRING , TestExitAction .class ) ; TestEntryAction org.springframework.statemachine.TestEntryAction = context . getBean ( STRING , TestEntryAction .class ) ; TestExitAction org.springframework.statemachine.TestExitAction = context . getBean ( STRING , TestExitAction .class ) ; assertThat ( entryActionS111 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS111 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( entryActionS11 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS11 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( entryActionS1 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( exitActionS1 . onExecuteLatch . await ( NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) , is ( true ) ) ; assertThat ( entryActionS111 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS111 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( entryActionS11 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS11 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( entryActionS1 . stateContexts . size ( ) , is ( NUMBER ) ) ; assertThat ( exitActionS1 . stateContexts . size ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { context . register ( BaseConfig .class , org.springframework.statemachine.SubStateMachineTests.Config2 .class ) ; context . refresh ( ) ; assertTrue ( context . containsBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE ) ) ; @ java.lang.SuppressWarnings ( STRING ) ObjectStateMachine < TestStates , TestEvents > org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> = context . getBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE , ObjectStateMachine .class ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . start ( ) ; assertThat ( org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> , notNullValue ( ) ) ; assertThat ( org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . getState ( ) . getIds ( ) , contains ( TestStates . S1 , TestStates . S10 ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( BaseConfig .class , org.springframework.statemachine.SubStateMachineTests.Config3 .class ) ; context . refresh ( ) ; assertTrue ( context . containsBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE ) ) ; @ java.lang.SuppressWarnings ( STRING ) ObjectStateMachine < TestStates2 , TestEvents2 > org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates2,org.springframework.statemachine.TestEvents2> = context . getBean ( StateMachineSystemConstants . DEFAULT_ID_STATEMACHINE , ObjectStateMachine .class ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates2,org.springframework.statemachine.TestEvents2> . start ( ) ; assertThat ( org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates2,org.springframework.statemachine.TestEvents2> , notNullValue ( ) ) ; assertThat ( org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates2,org.springframework.statemachine.TestEvents2> . getState ( ) . getIds ( ) , contains ( TestStates2 . IDLE , TestStates2 . CLOSED ) ) ; org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates2,org.springframework.statemachine.TestEvents2> . sendEvent ( TestEvents2 . EJECT ) ; assertThat ( org.springframework.statemachine.ObjectStateMachine<org.springframework.statemachine.TestStates2,org.springframework.statemachine.TestEvents2> . getState ( ) . getIds ( ) , contains ( TestStates2 . IDLE , TestStates2 . OPEN ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < TestStates , TestEvents > org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) throws java.lang.Exception { org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . withStates ( ) . initial ( TestStates . S1 ) . state ( TestStates . S1 , java.util.Arrays . java.util.List ( org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) ) , java.util.Arrays . java.util.List ( org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) ) ) . and ( ) . withStates ( ) . parent ( TestStates . S1 ) . initial ( TestStates . S11 ) . state ( TestStates . S11 , java.util.Arrays . java.util.List ( org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) ) , java.util.Arrays . java.util.List ( org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) ) ) . and ( ) . withStates ( ) . parent ( TestStates . S11 ) . initial ( TestStates . S111 ) . state ( TestStates . S111 , java.util.Arrays . java.util.List ( org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) ) , java.util.Arrays . java.util.List ( org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < TestStates , TestEvents > org.springframework.statemachine.StateMachineTransitionConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) throws java.lang.Exception { org.springframework.statemachine.StateMachineTransitionConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . withExternal ( ) . source ( TestStates . S111 ) . target ( TestStates . S1 ) . event ( TestEvents . E1 ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) public org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> < TestStates , TestEvents > org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) { return new TestEntryAction ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) public org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> < TestStates , TestEvents > org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) { return new TestExitAction ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) public org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> < TestStates , TestEvents > org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) { return new TestEntryAction ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) public org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> < TestStates , TestEvents > org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) { return new TestExitAction ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) public org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> < TestStates , TestEvents > org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) { return new TestEntryAction ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) public org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> < TestStates , TestEvents > org.springframework.statemachine.Action<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ( ) { return new TestExitAction ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineConfigurationConfigurer < TestStates , TestEvents > org.springframework.statemachine.StateMachineConfigurationConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) throws java.lang.Exception { org.springframework.statemachine.StateMachineConfigurationConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . withVerifier ( ) . enabled ( false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < TestStates , TestEvents > org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> ) throws java.lang.Exception { org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.TestStates,org.springframework.statemachine.TestEvents> . withStates ( ) . initial ( TestStates . S1 ) . state ( TestStates . S1 ) . state ( TestStates . S2 ) . and ( ) . withStates ( ) . parent ( TestStates . S1 ) . initial ( TestStates . S10 ) . state ( TestStates . S10 ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < TestStates2 , TestEvents2 > org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.TestStates2,org.springframework.statemachine.TestEvents2> ) throws java.lang.Exception { org.springframework.statemachine.StateMachineStateConfigurer<org.springframework.statemachine.TestStates2,org.springframework.statemachine.TestEvents2> . withStates ( ) . initial ( TestStates2 . IDLE ) . state ( TestStates2 . IDLE ) . and ( ) . withStates ( ) . parent ( TestStates2 . IDLE ) . initial ( TestStates2 . CLOSED ) . state ( TestStates2 . CLOSED ) . state ( TestStates2 . OPEN ) . and ( ) . withStates ( ) . state ( TestStates2 . BUSY ) . and ( ) . withStates ( ) . parent ( TestStates2 . BUSY ) . initial ( TestStates2 . PLAYING ) . state ( TestStates2 . PLAYING ) . state ( TestStates2 . PAUSED ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < TestStates2 , TestEvents2 > org.springframework.statemachine.StateMachineTransitionConfigurer<org.springframework.statemachine.TestStates2,org.springframework.statemachine.TestEvents2> ) throws java.lang.Exception { org.springframework.statemachine.StateMachineTransitionConfigurer<org.springframework.statemachine.TestStates2,org.springframework.statemachine.TestEvents2> . withExternal ( ) . source ( TestStates2 . CLOSED ) . target ( TestStates2 . OPEN ) . event ( TestEvents2 . EJECT ) . and ( ) . withExternal ( ) . source ( TestStates2 . OPEN ) . target ( TestStates2 . CLOSED ) . event ( TestEvents2 . EJECT ) ; }  <METHOD_END>
