<METHOD_START> @ Test public void void ( ) { NestedServletException org.springframework.web.util.NestedServletException = new NestedServletException ( STRING ) ; assertEquals ( STRING , org.springframework.web.util.NestedServletException . getMessage ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Throwable java.lang.Throwable = new java.lang.RuntimeException ( ) ; NestedServletException org.springframework.web.util.NestedServletException = new NestedServletException ( STRING , java.lang.Throwable ) ; assertEquals ( NestedExceptionUtils . buildMessage ( STRING , java.lang.Throwable ) , org.springframework.web.util.NestedServletException . getMessage ( ) ) ; assertEquals ( java.lang.Throwable , org.springframework.web.util.NestedServletException . getCause ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { NestedServletException org.springframework.web.util.NestedServletException = new NestedServletException ( STRING , null ) ; assertEquals ( STRING , org.springframework.web.util.NestedServletException . getMessage ( ) ) ; }  <METHOD_END>
