<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.config.BeanFactory ) throws org.springframework.integration.config.BeansException { this . org.springframework.integration.config.BeanFactory = org.springframework.integration.config.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { Assert . notNull ( this . org.springframework.integration.config.BeanFactory , STRING ) ; if ( ! this . boolean ) { return; } else { org.springframework.integration.config.ChannelInitializer.AutoCreateCandidatesCollector org.springframework.integration.config.ChannelInitializer.AutoCreateCandidatesCollector = this . org.springframework.integration.config.BeanFactory . getBean ( IntegrationContextUtils . AUTO_CREATE_CHANNEL_CANDIDATES_BEAN_NAME , org.springframework.integration.config.ChannelInitializer.AutoCreateCandidatesCollector .class ) ; Assert . notNull ( org.springframework.integration.config.ChannelInitializer.AutoCreateCandidatesCollector , STRING + IntegrationContextUtils . AUTO_CREATE_CHANNEL_CANDIDATES_BEAN_NAME ) ; java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = org.springframework.integration.config.ChannelInitializer.AutoCreateCandidatesCollector . java.util.Collection<java.lang.String> ( ) ; if ( java.util.Collection<java.lang.String> != null ) { for ( java.lang.String java.lang.String : java.util.Collection<java.lang.String> ) { if ( ! this . org.springframework.integration.config.BeanFactory . containsBean ( java.lang.String ) ) { if ( this . org.springframework.integration.config.Log . isDebugEnabled ( ) ) { this . org.springframework.integration.config.Log . debug ( STRING + java.lang.String + STRING ) ; } IntegrationConfigUtils . autoCreateDirectChannel ( java.lang.String , ( BeanDefinitionRegistry ) this . org.springframework.integration.config.BeanFactory ) ; } } } } }  <METHOD_END>
<METHOD_START> void ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { this . java.util.Collection<java.lang.String> = java.util.Collection<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( ) { return this . java.util.Collection<java.lang.String> ; }  <METHOD_END>
