<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<T> < T > java.lang.Class<T> ) { this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> = new MessagingMethodInvokerHelper < T > ( java.lang.Object , java.lang.reflect.Method , java.lang.Class<T> , true ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method ) { this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> = new MessagingMethodInvokerHelper < T > ( java.lang.Object , java.lang.reflect.Method , true ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String , java.lang.Class<T> < T > java.lang.Class<T> ) { this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> = new MessagingMethodInvokerHelper < T > ( java.lang.Object , java.lang.String , java.lang.Class<T> , true ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> = new MessagingMethodInvokerHelper < T > ( java.lang.Object , java.lang.String , true ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ) { this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> = new MessagingMethodInvokerHelper < T > ( java.lang.Object , java.lang.Class<> , java.lang.Object .class , true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.aggregator.BeanFactory ) { super. setBeanFactory ( org.springframework.integration.aggregator.BeanFactory ) ; this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> . setBeanFactory ( org.springframework.integration.aggregator.BeanFactory ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> . setUseSpelInvoker ( boolean ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> . toString ( ) ; }  <METHOD_END>
<METHOD_START> public T T ( java.util.Collection<org.springframework.integration.aggregator.Message<?>> < Message < ? > > java.util.Collection<org.springframework.integration.aggregator.Message<?>> , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { try { return this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> . process ( java.util.Collection<org.springframework.integration.aggregator.Message<?>> , java.util.Map<java.lang.String,java.lang.Object> ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { throw java.lang.RuntimeException ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.IllegalStateException ( STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> . start ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> . stop ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . org.springframework.integration.aggregator.MessagingMethodInvokerHelper<T> . isRunning ( ) ; }  <METHOD_END>
