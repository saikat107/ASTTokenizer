<METHOD_START> @ Before public void void ( ) { this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager = new org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager ( ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest = new MockHttpServletRequest ( ) ; this . org.springframework.web.servlet.support.MockHttpServletResponse = new MockHttpServletResponse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . void ( java.util.Arrays . java.util.List ( org.springframework.web.servlet.support.FlashMap ) ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setRequestURI ( STRING ) ; FlashMap org.springframework.web.servlet.support.FlashMap = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( org.springframework.web.servlet.support.FlashMap , org.springframework.web.servlet.support.FlashMap ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . void ( java.util.Arrays . java.util.List ( org.springframework.web.servlet.support.FlashMap ) ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setAttribute ( WebUtils . FORWARD_REQUEST_URI_ATTRIBUTE , STRING ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setRequestURI ( STRING ) ; FlashMap org.springframework.web.servlet.support.FlashMap = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( org.springframework.web.servlet.support.FlashMap , org.springframework.web.servlet.support.FlashMap ) ; assertEquals ( STRING , NUMBER , this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . void ( java.util.Arrays . java.util.List ( org.springframework.web.servlet.support.FlashMap ) ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setRequestURI ( STRING ) ; FlashMap org.springframework.web.servlet.support.FlashMap = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( org.springframework.web.servlet.support.FlashMap , org.springframework.web.servlet.support.FlashMap ) ; assertEquals ( STRING , NUMBER , this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . addTargetRequestParam ( STRING , STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . void ( java.util.Arrays . java.util.List ( org.springframework.web.servlet.support.FlashMap ) ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setQueryString ( STRING ) ; FlashMap org.springframework.web.servlet.support.FlashMap = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertNull ( org.springframework.web.servlet.support.FlashMap ) ; assertEquals ( STRING , NUMBER , this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) . size ( ) ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setQueryString ( STRING ) ; org.springframework.web.servlet.support.FlashMap = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertNull ( org.springframework.web.servlet.support.FlashMap ) ; assertEquals ( STRING , NUMBER , this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) . size ( ) ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setQueryString ( STRING ) ; org.springframework.web.servlet.support.FlashMap = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( org.springframework.web.servlet.support.FlashMap , org.springframework.web.servlet.support.FlashMap ) ; assertEquals ( STRING , NUMBER , this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . addTargetRequestParam ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . addTargetRequestParam ( STRING , STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . void ( java.util.Arrays . java.util.List ( org.springframework.web.servlet.support.FlashMap ) ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setQueryString ( STRING ) ; FlashMap org.springframework.web.servlet.support.FlashMap = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertNull ( org.springframework.web.servlet.support.FlashMap ) ; assertEquals ( STRING , NUMBER , this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) . size ( ) ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setQueryString ( STRING ) ; org.springframework.web.servlet.support.FlashMap = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( org.springframework.web.servlet.support.FlashMap , org.springframework.web.servlet.support.FlashMap ) ; assertEquals ( STRING , NUMBER , this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . void ( java.util.Arrays . java.util.List ( org.springframework.web.servlet.support.FlashMap , org.springframework.web.servlet.support.FlashMap , org.springframework.web.servlet.support.FlashMap ) ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setRequestURI ( STRING ) ; FlashMap org.springframework.web.servlet.support.FlashMap = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( org.springframework.web.servlet.support.FlashMap , org.springframework.web.servlet.support.FlashMap ) ; assertEquals ( STRING , NUMBER , this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.InterruptedException { java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> = new java.util.ArrayList<org.springframework.web.servlet.support.FlashMap> <> ( ) ; for ( int int = NUMBER ; int < NUMBER ; int ++ ) { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . startExpirationPeriod ( - NUMBER ) ; java.util.List<org.springframework.web.servlet.support.FlashMap> . add ( org.springframework.web.servlet.support.FlashMap ) ; } this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . void ( java.util.List<org.springframework.web.servlet.support.FlashMap> ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( STRING , NUMBER , this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.InterruptedException { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . saveOutputFlashMap ( org.springframework.web.servlet.support.FlashMap , this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) ; assertNull ( java.util.List<org.springframework.web.servlet.support.FlashMap> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.InterruptedException { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . setFlashMapTimeout ( - NUMBER ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . saveOutputFlashMap ( org.springframework.web.servlet.support.FlashMap , this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) ; assertNotNull ( java.util.List<org.springframework.web.servlet.support.FlashMap> ) ; assertSame ( org.springframework.web.servlet.support.FlashMap , java.util.List<org.springframework.web.servlet.support.FlashMap> . get ( NUMBER ) ) ; assertTrue ( org.springframework.web.servlet.support.FlashMap . isExpired ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.InterruptedException { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . saveOutputFlashMap ( org.springframework.web.servlet.support.FlashMap , this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( STRING , org.springframework.web.servlet.support.FlashMap . getTargetRequestPath ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.InterruptedException { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setRequestURI ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . saveOutputFlashMap ( org.springframework.web.servlet.support.FlashMap , this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( STRING , org.springframework.web.servlet.support.FlashMap . getTargetRequestPath ( ) ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setRequestURI ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . saveOutputFlashMap ( org.springframework.web.servlet.support.FlashMap , this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( STRING , org.springframework.web.servlet.support.FlashMap . getTargetRequestPath ( ) ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setRequestURI ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . saveOutputFlashMap ( org.springframework.web.servlet.support.FlashMap , this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( STRING , org.springframework.web.servlet.support.FlashMap . getTargetRequestPath ( ) ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setRequestURI ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . saveOutputFlashMap ( org.springframework.web.servlet.support.FlashMap , this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( STRING , org.springframework.web.servlet.support.FlashMap . getTargetRequestPath ( ) ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setRequestURI ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . saveOutputFlashMap ( org.springframework.web.servlet.support.FlashMap , this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; assertEquals ( STRING , org.springframework.web.servlet.support.FlashMap . getTargetRequestPath ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; org.springframework.web.servlet.support.FlashMap . addTargetRequestParam ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . addTargetRequestParam ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . addTargetRequestParam ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . addTargetRequestParam ( STRING , STRING ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setCharacterEncoding ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . saveOutputFlashMap ( org.springframework.web.servlet.support.FlashMap , this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; MockHttpServletRequest org.springframework.web.servlet.support.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.support.MockHttpServletRequest . setQueryString ( STRING ) ; org.springframework.web.servlet.support.MockHttpServletRequest . addParameter ( STRING , STRING ) ; org.springframework.web.servlet.support.MockHttpServletRequest . addParameter ( STRING , STRING ) ; org.springframework.web.servlet.support.MockHttpServletRequest . addParameter ( STRING , STRING ) ; org.springframework.web.servlet.support.MockHttpServletRequest . addParameter ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( org.springframework.web.servlet.support.MockHttpServletRequest , new MockHttpServletResponse ( ) ) ; assertNotNull ( org.springframework.web.servlet.support.FlashMap ) ; assertEquals ( NUMBER , org.springframework.web.servlet.support.FlashMap . size ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.support.FlashMap . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = java.net.URLEncoder . java.lang.String ( STRING , STRING ) ; FlashMap org.springframework.web.servlet.support.FlashMap = new FlashMap ( ) ; org.springframework.web.servlet.support.FlashMap . put ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap . setTargetRequestPath ( STRING ) ; org.springframework.web.servlet.support.FlashMap . addTargetRequestParam ( STRING , java.lang.String ) ; this . org.springframework.web.servlet.support.MockHttpServletRequest . setCharacterEncoding ( STRING ) ; this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . saveOutputFlashMap ( org.springframework.web.servlet.support.FlashMap , this . org.springframework.web.servlet.support.MockHttpServletRequest , this . org.springframework.web.servlet.support.MockHttpServletResponse ) ; MockHttpServletRequest org.springframework.web.servlet.support.MockHttpServletRequest = new MockHttpServletRequest ( STRING , STRING ) ; org.springframework.web.servlet.support.MockHttpServletRequest . setQueryString ( STRING + java.lang.String ) ; org.springframework.web.servlet.support.MockHttpServletRequest . addParameter ( STRING , STRING ) ; org.springframework.web.servlet.support.FlashMap = this . org.springframework.web.servlet.support.FlashMapManagerTests.TestFlashMapManager . retrieveAndUpdate ( org.springframework.web.servlet.support.MockHttpServletRequest , new MockHttpServletResponse ( ) ) ; assertNotNull ( org.springframework.web.servlet.support.FlashMap ) ; assertEquals ( NUMBER , org.springframework.web.servlet.support.FlashMap . size ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.support.FlashMap . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> ) { this . java.util.List<org.springframework.web.servlet.support.FlashMap> = new java.util.concurrent.CopyOnWriteArrayList <> ( java.util.List<org.springframework.web.servlet.support.FlashMap> ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> ( ) { return this . java.util.List<org.springframework.web.servlet.support.FlashMap> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> ( HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest ) { return this . java.util.List<org.springframework.web.servlet.support.FlashMap> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.util.List<org.springframework.web.servlet.support.FlashMap> < FlashMap > java.util.List<org.springframework.web.servlet.support.FlashMap> , HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.support.HttpServletResponse ) { this . java.util.List<org.springframework.web.servlet.support.FlashMap> = java.util.List<org.springframework.web.servlet.support.FlashMap> ; }  <METHOD_END>
