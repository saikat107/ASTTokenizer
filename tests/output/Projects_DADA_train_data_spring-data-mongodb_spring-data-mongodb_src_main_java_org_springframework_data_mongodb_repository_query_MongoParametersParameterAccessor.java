<METHOD_START> public void ( MongoQueryMethod org.springframework.data.mongodb.repository.query.MongoQueryMethod , java.lang.Object [] java.lang.Object[] ) { super( org.springframework.data.mongodb.repository.query.MongoQueryMethod . getParameters ( ) , java.lang.Object[] ); this . org.springframework.data.mongodb.repository.query.MongoQueryMethod = org.springframework.data.mongodb.repository.query.MongoQueryMethod ; this . java.util.List<java.lang.Object> = java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.repository.query.Range<org.springframework.data.mongodb.repository.query.Distance> < Distance > org.springframework.data.mongodb.repository.query.Range<org.springframework.data.mongodb.repository.query.Distance> ( ) { MongoParameters org.springframework.data.mongodb.repository.query.MongoParameters = org.springframework.data.mongodb.repository.query.MongoQueryMethod . getParameters ( ) ; int int = org.springframework.data.mongodb.repository.query.MongoParameters . getRangeIndex ( ) ; if ( int != - NUMBER ) { return getValue ( int ) ; } int int = org.springframework.data.mongodb.repository.query.MongoParameters . getMaxDistanceIndex ( ) ; Distance org.springframework.data.mongodb.repository.query.Distance = int == - NUMBER ? null : ( Distance ) getValue ( int ) ; return new Range < Distance > ( null , org.springframework.data.mongodb.repository.query.Distance ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.repository.query.Point org.springframework.data.mongodb.repository.query.Point ( ) { int int = org.springframework.data.mongodb.repository.query.MongoQueryMethod . getParameters ( ) . getNearIndex ( ) ; if ( int == - NUMBER ) { return null ; } java.lang.Object java.lang.Object = getValue ( int ) ; if ( java.lang.Object == null ) { return null ; } if ( java.lang.Object instanceof double [] ) { double [] double[] = ( double [] ) java.lang.Object ; if ( double[] . int != NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } else { return new Point ( double[] [ NUMBER ] , double[] [ NUMBER ] ) ; } } return ( Point ) java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.repository.query.TextCriteria org.springframework.data.mongodb.repository.query.TextCriteria ( ) { int int = org.springframework.data.mongodb.repository.query.MongoQueryMethod . getParameters ( ) . getFullTextParameterIndex ( ) ; return int >= NUMBER ? org.springframework.data.mongodb.repository.query.TextCriteria ( getValue ( int ) ) : null ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.mongodb.repository.query.TextCriteria org.springframework.data.mongodb.repository.query.TextCriteria ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; if ( java.lang.Object instanceof java.lang.String ) { return TextCriteria . forDefaultLanguage ( ) . matching ( ( java.lang.String ) java.lang.Object ) ; } if ( java.lang.Object instanceof Term ) { return TextCriteria . forDefaultLanguage ( ) . matching ( ( Term ) java.lang.Object ) ; } if ( java.lang.Object instanceof TextCriteria ) { return ( ( TextCriteria ) java.lang.Object ) ; } throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , ClassUtils . getShortName ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object [] java.lang.Object[] ( ) { return java.util.List<java.lang.Object> . java.lang.Object[] ( ) ; }  <METHOD_END>
