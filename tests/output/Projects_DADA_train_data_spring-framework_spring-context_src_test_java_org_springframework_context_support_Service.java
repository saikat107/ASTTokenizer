<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.context.support.ApplicationContext ) { this . org.springframework.context.support.ApplicationContext = org.springframework.context.support.ApplicationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MessageSource org.springframework.context.support.MessageSource ) { if ( this . org.springframework.context.support.MessageSource != null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . org.springframework.context.support.MessageSource = org.springframework.context.support.MessageSource ; }  <METHOD_END>
<METHOD_START> public org.springframework.context.support.MessageSource org.springframework.context.support.MessageSource ( ) { return org.springframework.context.support.MessageSource ; }  <METHOD_END>
<METHOD_START> public void void ( Resource [] org.springframework.context.support.Resource[] ) { this . org.springframework.context.support.Resource[] = org.springframework.context.support.Resource[] ; }  <METHOD_END>
<METHOD_START> public org.springframework.context.support.Resource [] org.springframework.context.support.Resource[] ( ) { return org.springframework.context.support.Resource[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . boolean = true ; java.lang.Thread java.lang.Thread = new java.lang.Thread ( ) { @ java.lang.Override public void void ( ) { Assert . state ( org.springframework.context.support.ApplicationContext . getBean ( STRING ) instanceof StaticMessageSource , STRING ) ; try { org.springframework.context.support.ApplicationContext . getBean ( STRING ) ; boolean = false ; } catch ( BeanCreationNotAllowedException org.springframework.context.support.BeanCreationNotAllowedException ) { } } } ; java.lang.Thread . void ( ) ; try { java.lang.Thread . void ( ) ; } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { java.lang.Thread . java.lang.Thread ( ) . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Assert . state ( org.springframework.context.support.ApplicationContext . getBean ( STRING ) instanceof StaticMessageSource , STRING ) ; try { org.springframework.context.support.ApplicationContext . getBean ( STRING ) ; boolean = false ; } catch ( BeanCreationNotAllowedException org.springframework.context.support.BeanCreationNotAllowedException ) { } }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
