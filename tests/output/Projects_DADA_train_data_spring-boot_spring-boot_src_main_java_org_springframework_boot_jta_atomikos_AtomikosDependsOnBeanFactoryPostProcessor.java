<METHOD_START> @ java.lang.Override public void void ( ConfigurableListableBeanFactory org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory )			throws org.springframework.boot.jta.atomikos.BeansException { java.lang.String [] java.lang.String[] = org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory . getBeanNamesForType ( UserTransactionManager .class , true , false ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { void ( org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory , java.lang.String ) ; } void ( org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> private void void ( ConfigurableListableBeanFactory org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory , java.lang.String java.lang.String ) { BeanDefinition org.springframework.boot.jta.atomikos.BeanDefinition = org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory . getBeanDefinition ( java.lang.String ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.LinkedHashSet <> ( java.util.List<java.lang.String> ( org.springframework.boot.jta.atomikos.BeanDefinition . getDependsOn ( ) ) ) ; int int = java.util.Set<java.lang.String> . int ( ) ; void ( org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory , STRING , java.util.Set<java.lang.String> ) ; void ( org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory , STRING , java.util.Set<java.lang.String> ) ; if ( java.util.Set<java.lang.String> . int ( ) != int ) { org.springframework.boot.jta.atomikos.BeanDefinition . setDependsOn ( java.util.Set<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.Set<java.lang.String> . int ( ) ] ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ConfigurableListableBeanFactory org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory , java.lang.String [] java.lang.String[] ) { java.lang.String [] java.lang.String[] = java.lang.String[] ( org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory , STRING ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { BeanDefinition org.springframework.boot.jta.atomikos.BeanDefinition = org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory . getBeanDefinition ( java.lang.String ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.LinkedHashSet <> ( java.util.List<java.lang.String> ( org.springframework.boot.jta.atomikos.BeanDefinition . getDependsOn ( ) ) ) ; java.util.Set<java.lang.String> . boolean ( java.util.List<java.lang.String> ( java.lang.String[] ) ) ; org.springframework.boot.jta.atomikos.BeanDefinition . setDependsOn ( java.util.Set<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.Set<java.lang.String> . int ( ) ] ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ConfigurableListableBeanFactory org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory , java.lang.String java.lang.String , java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { java.util.Set<java.lang.String> . boolean ( java.util.List<java.lang.String> ( java.lang.String[] ( org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory , java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String [] java.lang.String[] ( ConfigurableListableBeanFactory org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory , java.lang.String java.lang.String ) { try { return org.springframework.boot.jta.atomikos.ConfigurableListableBeanFactory . getBeanNamesForType ( java.lang.Class . java.lang.Class<?> ( java.lang.String ) , true , false ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { } catch ( java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError ) { } return java.lang.String[] ; }  <METHOD_END>
<METHOD_START> private java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.String [] java.lang.String[] ) { return ( java.lang.String[] == null ? java.util.Collections .< java.lang.String > java.util.List<java.lang.String> ( ) : java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
