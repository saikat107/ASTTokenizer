<METHOD_START> protected void ( ConversionService org.springframework.core.convert.support.ConversionService ) { this . org.springframework.core.convert.support.ConversionService = org.springframework.core.convert.support.ConversionService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( TypeDescriptor org.springframework.core.convert.support.TypeDescriptor , TypeDescriptor org.springframework.core.convert.support.TypeDescriptor ) { for ( java.lang.Class<?> < ? > java.lang.Class<?> : ClassUtils . getAllInterfacesForClass ( org.springframework.core.convert.support.TypeDescriptor . getType ( ) ) ) { if ( this . org.springframework.core.convert.support.ConversionService . canConvert ( TypeDescriptor . valueOf ( java.lang.Class<> ) , org.springframework.core.convert.support.TypeDescriptor ) ) { return false ; } } return true ; }  <METHOD_END>
