<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.net.URL java.net.URL = java.net.URL ( STRING ) ; assertThat ( ChangeableUrls . fromUrls ( java.net.URL ) . size ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.net.URL java.net.URL = this . org.springframework.boot.devtools.restart.TemporaryFolder . newFile ( ) . toURI ( ) . toURL ( ) ; assertThat ( ChangeableUrls . fromUrls ( java.net.URL ) . size ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.net.URL java.net.URL = new java.net.URL ( STRING ) ; assertThat ( ChangeableUrls . fromUrls ( java.net.URL ) . size ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ChangeableUrls org.springframework.boot.devtools.restart.ChangeableUrls = ChangeableUrls . fromUrls ( java.net.URL ( STRING ) , java.net.URL ( STRING ) , java.net.URL ( STRING ) , java.net.URL ( STRING ) , java.net.URL ( STRING ) ) ; assertThat ( org.springframework.boot.devtools.restart.ChangeableUrls . size ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.io.File java.io.File = this . org.springframework.boot.devtools.restart.TemporaryFolder . newFolder ( ) ; java.io.File java.io.File = java.io.File ( STRING , STRING , STRING , java.io.File . java.lang.String ( ) + STRING ) ; new java.io.File ( java.io.File . java.io.File ( ) , STRING ) . boolean ( ) ; new java.io.File ( java.io.File . java.io.File ( ) , STRING ) . boolean ( ) ; ChangeableUrls org.springframework.boot.devtools.restart.ChangeableUrls = ChangeableUrls . fromUrlClassLoader ( new java.net.URLClassLoader ( new java.net.URL [] { java.io.File . java.net.URI ( ) . java.net.URL ( ) , java.net.URL ( ) } ) ) ; assertThat ( org.springframework.boot.devtools.restart.ChangeableUrls . toList ( ) ) . containsExactly ( new java.net.URL ( java.io.File . java.net.URI ( ) . java.net.URL ( ) , STRING ) , new java.net.URL ( java.io.File . java.net.URI ( ) . java.net.URL ( ) , STRING ) , java.io.File . java.net.URI ( ) . java.net.URL ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.net.URL java.net.URL ( java.lang.String java.lang.String ) throws java.io.IOException { java.io.File java.io.File = this . org.springframework.boot.devtools.restart.TemporaryFolder . newFolder ( ) ; java.io.File = new java.io.File ( java.io.File , java.lang.String ) ; java.io.File = new java.io.File ( java.io.File , STRING ) ; java.io.File = new java.io.File ( java.io.File , STRING ) ; java.io.File . boolean ( ) ; return java.io.File . java.net.URI ( ) . java.net.URL ( ) ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( java.lang.Object ... java.lang.Object[] ) throws java.lang.Exception { java.io.File java.io.File = this . org.springframework.boot.devtools.restart.TemporaryFolder . newFile ( STRING ) ; java.util.jar.Manifest java.util.jar.Manifest = new java.util.jar.Manifest ( ) ; java.util.jar.Manifest . java.util.jar.Attributes ( ) . java.lang.String ( java.util.jar.Attributes . java.util.jar.Attributes.Name . java.util.jar.Attributes.Name . java.lang.String ( ) , STRING ) ; java.util.jar.Manifest . java.util.jar.Attributes ( ) . java.lang.String ( java.util.jar.Attributes . java.util.jar.Attributes.Name . java.util.jar.Attributes.Name . java.lang.String ( ) , StringUtils . arrayToDelimitedString ( java.lang.Object[] , STRING ) ) ; new java.util.jar.JarOutputStream ( new java.io.FileOutputStream ( java.io.File ) , java.util.jar.Manifest ) . void ( ) ; return java.io.File ; }  <METHOD_END>
<METHOD_START> private java.net.URL java.net.URL ( ) java.lang.Exception { java.io.File java.io.File = this . org.springframework.boot.devtools.restart.TemporaryFolder . newFile ( STRING ) ; new java.util.zip.ZipOutputStream ( new java.io.FileOutputStream ( java.io.File ) ) . void ( ) ; return java.io.File . java.net.URI ( ) . java.net.URL ( ) ; }  <METHOD_END>
