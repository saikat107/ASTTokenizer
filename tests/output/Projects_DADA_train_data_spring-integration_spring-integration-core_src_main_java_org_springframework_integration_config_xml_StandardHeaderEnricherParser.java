<METHOD_START> public void ( ) { this . addElementToHeaderMapping ( STRING , MessageHeaders . REPLY_CHANNEL ) ; this . addElementToHeaderMapping ( STRING , MessageHeaders . ERROR_CHANNEL ) ; this . addElementToHeaderMapping ( STRING , IntegrationMessageHeaderAccessor . CORRELATION_ID ) ; this . addElementToHeaderMapping ( STRING , IntegrationMessageHeaderAccessor . EXPIRATION_DATE , java.lang.Long .class ) ; this . addElementToHeaderMapping ( STRING , IntegrationMessageHeaderAccessor . PRIORITY , java.lang.Integer .class ) ; this . addElementToHeaderMapping ( STRING , IntegrationMessageHeaderAccessor . ROUTING_SLIP , java.util.Map .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) || StringUtils . hasText ( java.lang.String ) ) { if ( ! StringUtils . hasText ( java.lang.String ) || ! StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.springframework.integration.config.xml.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; return; } BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( MethodInvokingMessageProcessor .class ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; } }  <METHOD_END>
