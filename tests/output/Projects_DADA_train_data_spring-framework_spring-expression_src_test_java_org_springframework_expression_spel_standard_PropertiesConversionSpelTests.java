<METHOD_START> @ Test public void void ( ) { java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; java.util.Properties . java.lang.Object ( STRING , STRING ) ; Expression org.springframework.expression.spel.standard.Expression = org.springframework.expression.spel.standard.SpelExpressionParser . parseExpression ( STRING ) ; StandardEvaluationContext org.springframework.expression.spel.standard.StandardEvaluationContext = new StandardEvaluationContext ( ) ; org.springframework.expression.spel.standard.StandardEvaluationContext . setVariable ( STRING , java.util.Properties ) ; java.lang.String java.lang.String = org.springframework.expression.spel.standard.Expression . getValue ( org.springframework.expression.spel.standard.StandardEvaluationContext , new org.springframework.expression.spel.standard.PropertiesConversionSpelTests.TestBean ( ) , java.lang.String .class ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; Expression org.springframework.expression.spel.standard.Expression = org.springframework.expression.spel.standard.SpelExpressionParser . parseExpression ( STRING ) ; StandardEvaluationContext org.springframework.expression.spel.standard.StandardEvaluationContext = new StandardEvaluationContext ( ) ; org.springframework.expression.spel.standard.StandardEvaluationContext . setVariable ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ; java.lang.String java.lang.String = org.springframework.expression.spel.standard.Expression . getValue ( org.springframework.expression.spel.standard.StandardEvaluationContext , new org.springframework.expression.spel.standard.PropertiesConversionSpelTests.TestBean ( ) , java.lang.String .class ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , new java.util.UUID ( NUMBER , NUMBER ) ) ; Expression org.springframework.expression.spel.standard.Expression = org.springframework.expression.spel.standard.SpelExpressionParser . parseExpression ( STRING ) ; StandardEvaluationContext org.springframework.expression.spel.standard.StandardEvaluationContext = new StandardEvaluationContext ( ) ; org.springframework.expression.spel.standard.StandardEvaluationContext . setVariable ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ; java.lang.String java.lang.String = org.springframework.expression.spel.standard.Expression . getValue ( org.springframework.expression.spel.standard.StandardEvaluationContext , new org.springframework.expression.spel.standard.PropertiesConversionSpelTests.TestBean ( ) , java.lang.String .class ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.expression.spel.standard.PropertiesConversionSpelTests.CustomMap org.springframework.expression.spel.standard.PropertiesConversionSpelTests.CustomMap = new org.springframework.expression.spel.standard.PropertiesConversionSpelTests.CustomMap ( ) ; org.springframework.expression.spel.standard.PropertiesConversionSpelTests.CustomMap . java.lang.Object ( STRING , STRING ) ; org.springframework.expression.spel.standard.PropertiesConversionSpelTests.CustomMap . java.lang.Object ( STRING , NUMBER ) ; org.springframework.expression.spel.standard.PropertiesConversionSpelTests.CustomMap . java.lang.Object ( STRING , STRING ) ; Expression org.springframework.expression.spel.standard.Expression = org.springframework.expression.spel.standard.SpelExpressionParser . parseExpression ( STRING ) ; StandardEvaluationContext org.springframework.expression.spel.standard.StandardEvaluationContext = new StandardEvaluationContext ( ) ; org.springframework.expression.spel.standard.StandardEvaluationContext . setVariable ( STRING , org.springframework.expression.spel.standard.PropertiesConversionSpelTests.CustomMap ) ; java.lang.String java.lang.String = org.springframework.expression.spel.standard.Expression . getValue ( org.springframework.expression.spel.standard.StandardEvaluationContext , new org.springframework.expression.spel.standard.PropertiesConversionSpelTests.TestBean ( ) , java.lang.String .class ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public java.lang.String java.lang.String ( java.util.Properties java.util.Properties ) { return java.util.Properties . java.lang.String ( STRING ) + java.util.Properties . java.lang.String ( STRING ) + java.util.Properties . java.lang.String ( STRING ) ; }  <METHOD_END>
