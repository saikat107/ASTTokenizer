<METHOD_START> public void void ( PersistenceUnitManager org.springframework.orm.jpa.PersistenceUnitManager ) { this . org.springframework.orm.jpa.PersistenceUnitManager = org.springframework.orm.jpa.PersistenceUnitManager ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setPersistenceXmlLocation ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { super. setPersistenceUnitName ( java.lang.String ) ; this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setDefaultPersistenceUnitName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setDefaultPersistenceUnitRootLocation ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setPackagesToScan ( java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setMappingResources ( java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( SharedCacheMode org.springframework.orm.jpa.SharedCacheMode ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setSharedCacheMode ( org.springframework.orm.jpa.SharedCacheMode ) ; }  <METHOD_END>
<METHOD_START> public void void ( ValidationMode org.springframework.orm.jpa.ValidationMode ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setValidationMode ( org.springframework.orm.jpa.ValidationMode ) ; }  <METHOD_END>
<METHOD_START> public void void ( javax.sql.DataSource javax.sql.DataSource ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setDataSourceLookup ( new SingleDataSourceLookup ( javax.sql.DataSource ) ) ; this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setDefaultDataSource ( javax.sql.DataSource ) ; }  <METHOD_END>
<METHOD_START> public void void ( javax.sql.DataSource javax.sql.DataSource ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setDataSourceLookup ( new SingleDataSourceLookup ( javax.sql.DataSource ) ) ; this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setDefaultJtaDataSource ( javax.sql.DataSource ) ; }  <METHOD_END>
<METHOD_START> public void void ( PersistenceUnitPostProcessor ... org.springframework.orm.jpa.PersistenceUnitPostProcessor[] ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setPersistenceUnitPostProcessors ( org.springframework.orm.jpa.PersistenceUnitPostProcessor[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( LoadTimeWeaver org.springframework.orm.jpa.LoadTimeWeaver ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setLoadTimeWeaver ( org.springframework.orm.jpa.LoadTimeWeaver ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ResourceLoader org.springframework.orm.jpa.ResourceLoader ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . setResourceLoader ( org.springframework.orm.jpa.ResourceLoader ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.orm.jpa.EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory ( ) org.springframework.orm.jpa.PersistenceException { PersistenceUnitManager org.springframework.orm.jpa.PersistenceUnitManager = this . org.springframework.orm.jpa.PersistenceUnitManager ; if ( this . org.springframework.orm.jpa.PersistenceUnitManager == null ) { this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . afterPropertiesSet ( ) ; org.springframework.orm.jpa.PersistenceUnitManager = this . org.springframework.orm.jpa.DefaultPersistenceUnitManager ; } this . org.springframework.orm.jpa.PersistenceUnitInfo = org.springframework.orm.jpa.PersistenceUnitInfo ( org.springframework.orm.jpa.PersistenceUnitManager ) ; JpaVendorAdapter org.springframework.orm.jpa.JpaVendorAdapter = getJpaVendorAdapter ( ) ; if ( org.springframework.orm.jpa.JpaVendorAdapter != null && this . org.springframework.orm.jpa.PersistenceUnitInfo instanceof SmartPersistenceUnitInfo ) { ( ( SmartPersistenceUnitInfo ) this . org.springframework.orm.jpa.PersistenceUnitInfo ) . setPersistenceProviderPackageName ( org.springframework.orm.jpa.JpaVendorAdapter . getPersistenceProviderRootPackage ( ) ) ; } PersistenceProvider org.springframework.orm.jpa.PersistenceProvider = getPersistenceProvider ( ) ; if ( org.springframework.orm.jpa.PersistenceProvider == null ) { java.lang.String java.lang.String = this . org.springframework.orm.jpa.PersistenceUnitInfo . getPersistenceProviderClassName ( ) ; if ( java.lang.String == null ) { throw new java.lang.IllegalArgumentException ( STRING + STRING ) ; } java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . resolveClassName ( java.lang.String , getBeanClassLoader ( ) ) ; org.springframework.orm.jpa.PersistenceProvider = ( PersistenceProvider ) BeanUtils . instantiateClass ( java.lang.Class<> ) ; } if ( logger . isInfoEnabled ( ) ) { logger . info ( STRING + this . org.springframework.orm.jpa.PersistenceUnitInfo . getPersistenceUnitName ( ) + STRING ) ; } EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory = org.springframework.orm.jpa.PersistenceProvider . createContainerEntityManagerFactory ( this . org.springframework.orm.jpa.PersistenceUnitInfo , getJpaPropertyMap ( ) ) ; void ( org.springframework.orm.jpa.EntityManagerFactory , this . org.springframework.orm.jpa.PersistenceUnitInfo ) ; return org.springframework.orm.jpa.EntityManagerFactory ; }  <METHOD_END>
<METHOD_START> protected org.springframework.orm.jpa.PersistenceUnitInfo org.springframework.orm.jpa.PersistenceUnitInfo ( PersistenceUnitManager org.springframework.orm.jpa.PersistenceUnitManager ) { if ( java.lang.String ( ) != null ) { return org.springframework.orm.jpa.PersistenceUnitManager . obtainPersistenceUnitInfo ( java.lang.String ( ) ) ; } else { return org.springframework.orm.jpa.PersistenceUnitManager . obtainDefaultPersistenceUnitInfo ( ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory , PersistenceUnitInfo org.springframework.orm.jpa.PersistenceUnitInfo ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.orm.jpa.PersistenceUnitInfo org.springframework.orm.jpa.PersistenceUnitInfo ( ) { return this . org.springframework.orm.jpa.PersistenceUnitInfo ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { if ( this . org.springframework.orm.jpa.PersistenceUnitInfo != null ) { return this . org.springframework.orm.jpa.PersistenceUnitInfo . getPersistenceUnitName ( ) ; } return super. getPersistenceUnitName ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.sql.DataSource javax.sql.DataSource ( ) { if ( this . org.springframework.orm.jpa.PersistenceUnitInfo != null ) { return ( this . org.springframework.orm.jpa.PersistenceUnitInfo . getJtaDataSource ( ) != null ? this . org.springframework.orm.jpa.PersistenceUnitInfo . getJtaDataSource ( ) : this . org.springframework.orm.jpa.PersistenceUnitInfo . getNonJtaDataSource ( ) ) ; } return ( this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . getDefaultJtaDataSource ( ) != null ? this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . getDefaultJtaDataSource ( ) : this . org.springframework.orm.jpa.DefaultPersistenceUnitManager . getDefaultDataSource ( ) ) ; }  <METHOD_END>
