<METHOD_START> @ Test public void void ( ) java.lang.Exception { ResourceBundleEditor org.springframework.beans.propertyeditors.ResourceBundleEditor = new ResourceBundleEditor ( ) ; org.springframework.beans.propertyeditors.ResourceBundleEditor . setAsText ( java.lang.String ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.ResourceBundleEditor . getValue ( ) ; assertNotNull ( STRING , java.lang.Object ) ; assertTrue ( STRING , java.lang.Object instanceof java.util.ResourceBundle ) ; java.util.ResourceBundle java.util.ResourceBundle = ( java.util.ResourceBundle ) java.lang.Object ; java.lang.String java.lang.String = java.util.ResourceBundle . java.lang.String ( java.lang.String ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ResourceBundleEditor org.springframework.beans.propertyeditors.ResourceBundleEditor = new ResourceBundleEditor ( ) ; org.springframework.beans.propertyeditors.ResourceBundleEditor . setAsText ( java.lang.String + STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.ResourceBundleEditor . getValue ( ) ; assertNotNull ( STRING , java.lang.Object ) ; assertTrue ( STRING , java.lang.Object instanceof java.util.ResourceBundle ) ; java.util.ResourceBundle java.util.ResourceBundle = ( java.util.ResourceBundle ) java.lang.Object ; java.lang.String java.lang.String = java.util.ResourceBundle . java.lang.String ( java.lang.String ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ResourceBundleEditor org.springframework.beans.propertyeditors.ResourceBundleEditor = new ResourceBundleEditor ( ) ; org.springframework.beans.propertyeditors.ResourceBundleEditor . setAsText ( java.lang.String + STRING + STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.ResourceBundleEditor . getValue ( ) ; assertNotNull ( STRING , java.lang.Object ) ; assertTrue ( STRING , java.lang.Object instanceof java.util.ResourceBundle ) ; java.util.ResourceBundle java.util.ResourceBundle = ( java.util.ResourceBundle ) java.lang.Object ; java.lang.String java.lang.String = java.util.ResourceBundle . java.lang.String ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ResourceBundleEditor org.springframework.beans.propertyeditors.ResourceBundleEditor = new ResourceBundleEditor ( ) ; org.springframework.beans.propertyeditors.ResourceBundleEditor . setAsText ( java.lang.String + STRING + STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.ResourceBundleEditor . getValue ( ) ; assertNotNull ( STRING , java.lang.Object ) ; assertTrue ( STRING , java.lang.Object instanceof java.util.ResourceBundle ) ; java.util.ResourceBundle java.util.ResourceBundle = ( java.util.ResourceBundle ) java.lang.Object ; java.lang.String java.lang.String = java.util.ResourceBundle . java.lang.String ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ResourceBundleEditor org.springframework.beans.propertyeditors.ResourceBundleEditor = new ResourceBundleEditor ( ) ; org.springframework.beans.propertyeditors.ResourceBundleEditor . setAsText ( java.lang.String + STRING + STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.ResourceBundleEditor . getValue ( ) ; assertNotNull ( STRING , java.lang.Object ) ; assertTrue ( STRING , java.lang.Object instanceof java.util.ResourceBundle ) ; java.util.ResourceBundle java.util.ResourceBundle = ( java.util.ResourceBundle ) java.lang.Object ; java.lang.String java.lang.String = java.util.ResourceBundle . java.lang.String ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { ResourceBundleEditor org.springframework.beans.propertyeditors.ResourceBundleEditor = new ResourceBundleEditor ( ) ; org.springframework.beans.propertyeditors.ResourceBundleEditor . setAsText ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { ResourceBundleEditor org.springframework.beans.propertyeditors.ResourceBundleEditor = new ResourceBundleEditor ( ) ; org.springframework.beans.propertyeditors.ResourceBundleEditor . setAsText ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { ResourceBundleEditor org.springframework.beans.propertyeditors.ResourceBundleEditor = new ResourceBundleEditor ( ) ; org.springframework.beans.propertyeditors.ResourceBundleEditor . setAsText ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { ResourceBundleEditor org.springframework.beans.propertyeditors.ResourceBundleEditor = new ResourceBundleEditor ( ) ; org.springframework.beans.propertyeditors.ResourceBundleEditor . setAsText ( STRING ) ; }  <METHOD_END>
