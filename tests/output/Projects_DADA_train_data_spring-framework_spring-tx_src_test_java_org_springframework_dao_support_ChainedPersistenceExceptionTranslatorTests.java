<METHOD_START> @ Test public void void ( ) { ChainedPersistenceExceptionTranslator org.springframework.dao.support.ChainedPersistenceExceptionTranslator = new ChainedPersistenceExceptionTranslator ( ) ; java.lang.RuntimeException java.lang.RuntimeException = new java.lang.RuntimeException ( STRING ) ; assertSame ( java.lang.RuntimeException , DataAccessUtils . translateIfNecessary ( java.lang.RuntimeException , org.springframework.dao.support.ChainedPersistenceExceptionTranslator ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MapPersistenceExceptionTranslator org.springframework.dao.support.MapPersistenceExceptionTranslator = new MapPersistenceExceptionTranslator ( ) ; java.lang.RuntimeException java.lang.RuntimeException = new java.lang.RuntimeException ( STRING ) ; InvalidDataAccessApiUsageException org.springframework.dao.support.InvalidDataAccessApiUsageException = new InvalidDataAccessApiUsageException ( STRING ) ; InvalidDataAccessApiUsageException org.springframework.dao.support.InvalidDataAccessApiUsageException = new InvalidDataAccessApiUsageException ( STRING ) ; org.springframework.dao.support.MapPersistenceExceptionTranslator . addTranslation ( java.lang.RuntimeException , org.springframework.dao.support.InvalidDataAccessApiUsageException ) ; ChainedPersistenceExceptionTranslator org.springframework.dao.support.ChainedPersistenceExceptionTranslator = new ChainedPersistenceExceptionTranslator ( ) ; assertSame ( STRING , java.lang.RuntimeException , DataAccessUtils . translateIfNecessary ( java.lang.RuntimeException , org.springframework.dao.support.ChainedPersistenceExceptionTranslator ) ) ; org.springframework.dao.support.ChainedPersistenceExceptionTranslator . addDelegate ( org.springframework.dao.support.MapPersistenceExceptionTranslator ) ; assertSame ( STRING , org.springframework.dao.support.InvalidDataAccessApiUsageException , DataAccessUtils . translateIfNecessary ( java.lang.RuntimeException , org.springframework.dao.support.ChainedPersistenceExceptionTranslator ) ) ; MapPersistenceExceptionTranslator org.springframework.dao.support.MapPersistenceExceptionTranslator = new MapPersistenceExceptionTranslator ( ) ; org.springframework.dao.support.MapPersistenceExceptionTranslator . addTranslation ( java.lang.RuntimeException , org.springframework.dao.support.InvalidDataAccessApiUsageException ) ; org.springframework.dao.support.ChainedPersistenceExceptionTranslator . addDelegate ( org.springframework.dao.support.MapPersistenceExceptionTranslator ) ; assertSame ( STRING , org.springframework.dao.support.InvalidDataAccessApiUsageException , DataAccessUtils . translateIfNecessary ( java.lang.RuntimeException , org.springframework.dao.support.ChainedPersistenceExceptionTranslator ) ) ; ChainedPersistenceExceptionTranslator org.springframework.dao.support.ChainedPersistenceExceptionTranslator = new ChainedPersistenceExceptionTranslator ( ) ; org.springframework.dao.support.ChainedPersistenceExceptionTranslator . addDelegate ( org.springframework.dao.support.MapPersistenceExceptionTranslator ) ; org.springframework.dao.support.ChainedPersistenceExceptionTranslator . addDelegate ( org.springframework.dao.support.MapPersistenceExceptionTranslator ) ; assertSame ( STRING , org.springframework.dao.support.InvalidDataAccessApiUsageException , DataAccessUtils . translateIfNecessary ( java.lang.RuntimeException , org.springframework.dao.support.ChainedPersistenceExceptionTranslator ) ) ; java.lang.RuntimeException java.lang.RuntimeException = new java.lang.RuntimeException ( STRING ) ; OptimisticLockingFailureException org.springframework.dao.support.OptimisticLockingFailureException = new OptimisticLockingFailureException ( STRING ) ; assertNull ( org.springframework.dao.support.ChainedPersistenceExceptionTranslator . translateExceptionIfPossible ( java.lang.RuntimeException ) ) ; MapPersistenceExceptionTranslator org.springframework.dao.support.MapPersistenceExceptionTranslator = new MapPersistenceExceptionTranslator ( ) ; org.springframework.dao.support.MapPersistenceExceptionTranslator . addTranslation ( java.lang.RuntimeException , org.springframework.dao.support.OptimisticLockingFailureException ) ; org.springframework.dao.support.ChainedPersistenceExceptionTranslator . addDelegate ( org.springframework.dao.support.MapPersistenceExceptionTranslator ) ; assertSame ( org.springframework.dao.support.OptimisticLockingFailureException , org.springframework.dao.support.ChainedPersistenceExceptionTranslator . translateExceptionIfPossible ( java.lang.RuntimeException ) ) ; }  <METHOD_END>
