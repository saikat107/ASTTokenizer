<METHOD_START> @ Before public void void ( ) java.lang.Exception { ArgumentResolverConfigurer org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer = new ArgumentResolverConfigurer ( ) ; org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer . addCustomResolver ( new org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.CustomArgumentResolver ( ) ) ; org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer . addCustomResolver ( new org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.CustomSyncArgumentResolver ( ) ) ; ServerCodecConfigurer org.springframework.web.reactive.result.method.annotation.ServerCodecConfigurer = new ServerCodecConfigurer ( ) ; org.springframework.web.reactive.result.method.annotation.ServerCodecConfigurer . customCodec ( ) . decoder ( new ByteArrayDecoder ( ) ) ; org.springframework.web.reactive.result.method.annotation.ServerCodecConfigurer . customCodec ( ) . decoder ( new ByteBufferDecoder ( ) ) ; AnnotationConfigApplicationContext org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext . registerBean ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.TestControllerAdvice .class ) ; org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext . refresh ( ) ; this . org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver = new ControllerMethodResolver ( org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer , org.springframework.web.reactive.result.method.annotation.ServerCodecConfigurer , new ReactiveAdapterRegistry ( ) , org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext ) ; java.lang.reflect.Method java.lang.reflect.Method = ResolvableMethod . on ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.TestController .class ) . mockCall ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.TestController :: void ) . method ( ) ; this . org.springframework.web.reactive.result.method.annotation.HandlerMethod = new HandlerMethod ( new org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.TestController ( ) , java.lang.reflect.Method ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { InvocableHandlerMethod org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod = this . org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver . getRequestMappingMethod ( this . org.springframework.web.reactive.result.method.annotation.HandlerMethod ) ; java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> < HandlerMethodArgumentResolver > java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> = org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod . getResolvers ( ) ; java.util.concurrent.atomic.AtomicInteger java.util.concurrent.atomic.AtomicInteger = new java.util.concurrent.atomic.AtomicInteger ( - NUMBER ) ; assertEquals ( RequestParamMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestParamMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( PathVariableMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( PathVariableMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestBodyArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ModelAttributeMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestHeaderMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestHeaderMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( CookieValueMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ExpressionValueMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( SessionAttributeMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestAttributeMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( HttpEntityArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ModelArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ErrorsMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ServerWebExchangeArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( PrincipalArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( WebSessionArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.CustomArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.CustomSyncArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestParamMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ModelAttributeMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod> < InvocableHandlerMethod > java.util.List<org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod> = this . org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver . getModelAttributeMethods ( this . org.springframework.web.reactive.result.method.annotation.HandlerMethod ) ; assertEquals ( STRING , NUMBER , java.util.List<org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod> . size ( ) ) ; InvocableHandlerMethod org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod = java.util.List<org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod> . get ( NUMBER ) ; java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> < HandlerMethodArgumentResolver > java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> = org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod . getResolvers ( ) ; java.util.concurrent.atomic.AtomicInteger java.util.concurrent.atomic.AtomicInteger = new java.util.concurrent.atomic.AtomicInteger ( - NUMBER ) ; assertEquals ( RequestParamMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestParamMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( PathVariableMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( PathVariableMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ModelAttributeMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestHeaderMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestHeaderMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( CookieValueMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ExpressionValueMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( SessionAttributeMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestAttributeMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ModelArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ErrorsMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ServerWebExchangeArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( PrincipalArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( WebSessionArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.CustomArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.CustomSyncArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestParamMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ModelAttributeMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.web.reactive.result.method.annotation.SyncInvocableHandlerMethod> < SyncInvocableHandlerMethod > java.util.List<org.springframework.web.reactive.result.method.annotation.SyncInvocableHandlerMethod> = this . org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver . getInitBinderMethods ( this . org.springframework.web.reactive.result.method.annotation.HandlerMethod ) ; assertEquals ( STRING , NUMBER , java.util.List<org.springframework.web.reactive.result.method.annotation.SyncInvocableHandlerMethod> . size ( ) ) ; SyncInvocableHandlerMethod org.springframework.web.reactive.result.method.annotation.SyncInvocableHandlerMethod = java.util.List<org.springframework.web.reactive.result.method.annotation.SyncInvocableHandlerMethod> . get ( NUMBER ) ; java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> < SyncHandlerMethodArgumentResolver > java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> = org.springframework.web.reactive.result.method.annotation.SyncInvocableHandlerMethod . getResolvers ( ) ; java.util.concurrent.atomic.AtomicInteger java.util.concurrent.atomic.AtomicInteger = new java.util.concurrent.atomic.AtomicInteger ( - NUMBER ) ; assertEquals ( RequestParamMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestParamMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( PathVariableMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( PathVariableMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestHeaderMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestHeaderMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( CookieValueMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ExpressionValueMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestAttributeMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ModelArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ServerWebExchangeArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.CustomSyncArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestParamMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.SyncHandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Optional<org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod> < InvocableHandlerMethod > java.util.Optional<org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod> = this . org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver . getExceptionHandlerMethod ( new ResponseStatusException ( HttpStatus . BAD_REQUEST , STRING ) , this . org.springframework.web.reactive.result.method.annotation.HandlerMethod ) ; InvocableHandlerMethod org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod = java.util.Optional<org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod> . orElseThrow ( ( ) new AssertionError ( STRING ) ) ; assertEquals ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.TestController .class , org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod . getBeanType ( ) ) ; java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> < HandlerMethodArgumentResolver > java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> = org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod . getResolvers ( ) ; java.util.concurrent.atomic.AtomicInteger java.util.concurrent.atomic.AtomicInteger = new java.util.concurrent.atomic.AtomicInteger ( - NUMBER ) ; assertEquals ( RequestParamMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestParamMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( PathVariableMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( PathVariableMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestHeaderMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestHeaderMapMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( CookieValueMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ExpressionValueMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( SessionAttributeMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestAttributeMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ModelArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( ServerWebExchangeArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( PrincipalArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( WebSessionArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.CustomArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.CustomSyncArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; assertEquals ( RequestParamMethodArgumentResolver .class , org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger ) . getClass ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Optional<org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod> < InvocableHandlerMethod > java.util.Optional<org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod> = this . org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver . getExceptionHandlerMethod ( new java.lang.IllegalStateException ( STRING ) , this . org.springframework.web.reactive.result.method.annotation.HandlerMethod ) ; InvocableHandlerMethod org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod = java.util.Optional<org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod> . orElseThrow ( ( ) new AssertionError ( STRING ) ) ; assertNotNull ( org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod ) ; assertEquals ( org.springframework.web.reactive.result.method.annotation.ControllerMethodResolverTests.TestControllerAdvice .class , org.springframework.web.reactive.result.method.annotation.InvocableHandlerMethod . getBeanType ( ) ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver ( java.util.List<? extends org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> < ? extends HandlerMethodArgumentResolver > java.util.List<? extends org.springframework.web.reactive.result.method.annotation.HandlerMethodArgumentResolver> , java.util.concurrent.atomic.AtomicInteger java.util.concurrent.atomic.AtomicInteger ) { return java.util.List<> . get ( java.util.concurrent.atomic.AtomicInteger . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ InitBinder void void ( ) {}  <METHOD_END>
<METHOD_START> @ ModelAttribute void void ( ) {}  <METHOD_END>
<METHOD_START> @ GetMapping void void ( ) {}  <METHOD_END>
<METHOD_START> @ ExceptionHandler void void ( ResponseStatusException org.springframework.web.reactive.result.method.annotation.ResponseStatusException ) {}  <METHOD_END>
<METHOD_START> @ InitBinder void void ( ) {}  <METHOD_END>
<METHOD_START> @ ModelAttribute void void ( ) {}  <METHOD_END>
<METHOD_START> @ ExceptionHandler void void ( java.lang.IllegalStateException java.lang.IllegalStateException ) {}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.web.reactive.result.method.annotation.MethodParameter ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.reactive.result.method.annotation.Mono<java.lang.Object> < java.lang.Object > org.springframework.web.reactive.result.method.annotation.Mono<java.lang.Object> ( MethodParameter org.springframework.web.reactive.result.method.annotation.MethodParameter , BindingContext org.springframework.web.reactive.result.method.annotation.BindingContext , ServerWebExchange org.springframework.web.reactive.result.method.annotation.ServerWebExchange ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> ( MethodParameter org.springframework.web.reactive.result.method.annotation.MethodParameter , BindingContext org.springframework.web.reactive.result.method.annotation.BindingContext , ServerWebExchange org.springframework.web.reactive.result.method.annotation.ServerWebExchange ) { return null ; }  <METHOD_END>
