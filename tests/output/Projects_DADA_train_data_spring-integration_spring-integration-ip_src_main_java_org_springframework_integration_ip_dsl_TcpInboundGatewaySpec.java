<METHOD_START> void ( AbstractConnectionFactory org.springframework.integration.ip.dsl.AbstractConnectionFactory ) { super( new TcpInboundGateway ( ) ); this . org.springframework.integration.ip.dsl.AbstractConnectionFactory = null ; this . target . setConnectionFactory ( org.springframework.integration.ip.dsl.AbstractConnectionFactory ) ; }  <METHOD_END>
<METHOD_START> void ( AbstractConnectionFactorySpec < ? , ? > org.springframework.integration.ip.dsl.AbstractConnectionFactorySpec<?,?> ) { super( new TcpInboundGateway ( ) ); this . org.springframework.integration.ip.dsl.AbstractConnectionFactory = org.springframework.integration.ip.dsl.AbstractConnectionFactorySpec<,> . get ( ) ; this . target . setConnectionFactory ( this . org.springframework.integration.ip.dsl.AbstractConnectionFactory ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.ip.dsl.TcpInboundGatewaySpec org.springframework.integration.ip.dsl.TcpInboundGatewaySpec ( boolean boolean ) { this . target . setClientMode ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.ip.dsl.TcpInboundGatewaySpec org.springframework.integration.ip.dsl.TcpInboundGatewaySpec ( long long ) { this . target . setRetryInterval ( long ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.ip.dsl.TcpInboundGatewaySpec org.springframework.integration.ip.dsl.TcpInboundGatewaySpec ( TaskScheduler org.springframework.integration.ip.dsl.TaskScheduler ) { this . target . setTaskScheduler ( org.springframework.integration.ip.dsl.TaskScheduler ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { return this . org.springframework.integration.ip.dsl.AbstractConnectionFactory == null ? java.util.Collections . java.util.List<java.lang.Object> ( ) : java.util.Collections . java.util.List ( this . org.springframework.integration.ip.dsl.AbstractConnectionFactory ) ; }  <METHOD_END>
