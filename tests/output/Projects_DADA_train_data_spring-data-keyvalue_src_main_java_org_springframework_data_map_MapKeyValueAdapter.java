<METHOD_START> public void ( ) { this( java.util.concurrent.ConcurrentHashMap .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( java.lang.Class<? extends java.util.Map> < ? extends java.util.Map > java.lang.Class<? extends java.util.Map> ) { this( CollectionFactory .< java.io.Serializable , java.util.Map<java.io.Serializable,java.lang.Object> < java.io.Serializable , java.lang.Object > > createMap ( java.lang.Class<> , NUMBER ) , java.lang.Class<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void ( java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> < java.io.Serializable , java.util.Map<java.io.Serializable,java.lang.Object> < java.io.Serializable , java.lang.Object > > java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> ) { this( java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> , ( java.lang.Class<? extends java.util.Map> < ? extends java.util.Map > ) ClassUtils . getUserClass ( java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> ) ); }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private void ( java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> < java.io.Serializable , java.util.Map<java.io.Serializable,java.lang.Object> < java.io.Serializable , java.lang.Object > > java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> , java.lang.Class<? extends java.util.Map> < ? extends java.util.Map > java.lang.Class<? extends java.util.Map> ) { Assert . notNull ( java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> , STRING ) ; Assert . notNull ( java.lang.Class<> , STRING ) ; this . java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> = java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> ; this . java.lang.Class<? extends java.util.Map> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.io.Serializable java.io.Serializable , java.lang.Object java.lang.Object , java.io.Serializable java.io.Serializable ) { Assert . notNull ( java.io.Serializable , STRING ) ; Assert . notNull ( java.io.Serializable , STRING ) ; return java.util.Map<java.io.Serializable,java.lang.Object> ( java.io.Serializable ) . java.lang.Object ( java.io.Serializable , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.io.Serializable java.io.Serializable , java.io.Serializable java.io.Serializable ) { return java.lang.Object ( java.io.Serializable , java.io.Serializable ) != null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( java.io.Serializable java.io.Serializable ) { return java.util.Map<java.io.Serializable,java.lang.Object> ( java.io.Serializable ) . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.io.Serializable java.io.Serializable , java.io.Serializable java.io.Serializable ) { Assert . notNull ( java.io.Serializable , STRING ) ; return java.util.Map<java.io.Serializable,java.lang.Object> ( java.io.Serializable ) . java.lang.Object ( java.io.Serializable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.io.Serializable java.io.Serializable , java.io.Serializable java.io.Serializable ) { Assert . notNull ( java.io.Serializable , STRING ) ; return java.util.Map<java.io.Serializable,java.lang.Object> ( java.io.Serializable ) . java.lang.Object ( java.io.Serializable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<?> < ? > java.util.Collection<?> ( java.io.Serializable java.io.Serializable ) { return java.util.Map<java.io.Serializable,java.lang.Object> ( java.io.Serializable ) . java.util.Collection<java.lang.Object> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.map.CloseableIterator<java.util.Map.Entry<java.io.Serializable,java.lang.Object>> < java.util.Map.Entry<java.io.Serializable,java.lang.Object> < java.io.Serializable , java.lang.Object > > org.springframework.data.map.CloseableIterator<java.util.Map.Entry<java.io.Serializable,java.lang.Object>> ( java.io.Serializable java.io.Serializable ) { return new ForwardingCloseableIterator < java.util.Map.Entry<java.io.Serializable,java.lang.Object> < java.io.Serializable , java.lang.Object > > ( java.util.Map<java.io.Serializable,java.lang.Object> ( java.io.Serializable ) . java.util.Set<java.util.Map.Entry<java.io.Serializable,java.lang.Object>> ( ) . java.util.Iterator<java.util.Map.Entry<java.io.Serializable,java.lang.Object>> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.io.Serializable java.io.Serializable ) { java.util.Map<java.io.Serializable,java.lang.Object> ( java.io.Serializable ) . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { void ( ) ; }  <METHOD_END>
<METHOD_START> protected java.util.Map<java.io.Serializable,java.lang.Object> < java.io.Serializable , java.lang.Object > java.util.Map<java.io.Serializable,java.lang.Object> ( java.io.Serializable java.io.Serializable ) { Assert . notNull ( java.io.Serializable , STRING ) ; java.util.Map<java.io.Serializable,java.lang.Object> < java.io.Serializable , java.lang.Object > java.util.Map<java.io.Serializable,java.lang.Object> = java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> . java.util.Map<java.io.Serializable,java.lang.Object> ( java.io.Serializable ) ; if ( java.util.Map<java.io.Serializable,java.lang.Object> != null ) { return java.util.Map<java.io.Serializable,java.lang.Object> ; } void ( java.io.Serializable ) ; return java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> . java.util.Map<java.io.Serializable,java.lang.Object> ( java.io.Serializable ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.io.Serializable java.io.Serializable ) { java.util.Map<java.io.Serializable,java.util.Map<java.io.Serializable,java.lang.Object>> . java.util.Map<java.io.Serializable,java.lang.Object> ( java.io.Serializable , CollectionFactory .< java.io.Serializable , java.lang.Object > createMap ( java.lang.Class<> , NUMBER ) ) ; }  <METHOD_END>
