<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override protected org.springframework.statemachine.redis.Kryo org.springframework.statemachine.redis.Kryo ( ) { Kryo org.springframework.statemachine.redis.Kryo = new Kryo ( ) ; org.springframework.statemachine.redis.Kryo . addDefaultSerializer ( StateMachineContext .class , new StateMachineContextSerializer ( ) ) ; org.springframework.statemachine.redis.Kryo . addDefaultSerializer ( MessageHeaders .class , new MessageHeadersSerializer ( ) ) ; org.springframework.statemachine.redis.Kryo . addDefaultSerializer ( java.util.UUID .class , new UUIDSerializer ( ) ) ; return org.springframework.statemachine.redis.Kryo ; }  <METHOD_END>
<METHOD_START> public void ( RedisConnectionFactory org.springframework.statemachine.redis.RedisConnectionFactory ) { org.springframework.statemachine.redis.RedisOperations<java.lang.String,byte[]> = org.springframework.statemachine.redis.RedisTemplate<java.lang.String,byte[]> ( org.springframework.statemachine.redis.RedisConnectionFactory ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineContext < S , E > org.springframework.statemachine.redis.StateMachineContext<S,E> , java.lang.String java.lang.String ) { org.springframework.statemachine.redis.RedisOperations<java.lang.String,byte[]> . opsForValue ( ) . set ( java.lang.String , byte[] ( org.springframework.statemachine.redis.StateMachineContext<S,E> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.redis.StateMachineContext<S,E> < S , E > org.springframework.statemachine.redis.StateMachineContext<S,E> ( java.lang.String java.lang.String ) { return org.springframework.statemachine.redis.StateMachineContext<S,E> ( org.springframework.statemachine.redis.RedisOperations<java.lang.String,byte[]> . opsForValue ( ) . get ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.statemachine.redis.RedisTemplate<java.lang.String,byte[]> < java.lang.String , byte [] > org.springframework.statemachine.redis.RedisTemplate<java.lang.String,byte[]> ( RedisConnectionFactory org.springframework.statemachine.redis.RedisConnectionFactory ) { RedisTemplate < java.lang.String , byte [] > org.springframework.statemachine.redis.RedisTemplate<java.lang.String,byte[]> = new RedisTemplate < java.lang.String , byte [] > ( ) ; org.springframework.statemachine.redis.RedisTemplate<java.lang.String,byte[]> . setKeySerializer ( new StringRedisSerializer ( ) ) ; org.springframework.statemachine.redis.RedisTemplate<java.lang.String,byte[]> . setHashKeySerializer ( new StringRedisSerializer ( ) ) ; org.springframework.statemachine.redis.RedisTemplate<java.lang.String,byte[]> . setConnectionFactory ( org.springframework.statemachine.redis.RedisConnectionFactory ) ; org.springframework.statemachine.redis.RedisTemplate<java.lang.String,byte[]> . afterPropertiesSet ( ) ; return org.springframework.statemachine.redis.RedisTemplate<java.lang.String,byte[]> ; }  <METHOD_END>
<METHOD_START> private byte [] byte[] ( StateMachineContext < S , E > org.springframework.statemachine.redis.StateMachineContext<S,E> ) { Kryo org.springframework.statemachine.redis.Kryo = java.lang.ThreadLocal<org.springframework.statemachine.redis.Kryo> . get ( ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; Output org.springframework.statemachine.redis.Output = new Output ( java.io.ByteArrayOutputStream ) ; org.springframework.statemachine.redis.Kryo . writeObject ( org.springframework.statemachine.redis.Output , org.springframework.statemachine.redis.StateMachineContext<S,E> ) ; org.springframework.statemachine.redis.Output . close ( ) ; return java.io.ByteArrayOutputStream . byte[] ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private org.springframework.statemachine.redis.StateMachineContext<S,E> < S , E > org.springframework.statemachine.redis.StateMachineContext<S,E> ( byte [] byte[] ) { if ( byte[] == null || byte[] . int == NUMBER ) { return null ; } Kryo org.springframework.statemachine.redis.Kryo = java.lang.ThreadLocal<org.springframework.statemachine.redis.Kryo> . get ( ) ; java.io.ByteArrayInputStream java.io.ByteArrayInputStream = new java.io.ByteArrayInputStream ( byte[] ) ; Input org.springframework.statemachine.redis.Input = new Input ( java.io.ByteArrayInputStream ) ; return org.springframework.statemachine.redis.Kryo . readObject ( org.springframework.statemachine.redis.Input , StateMachineContext .class ) ; }  <METHOD_END>
