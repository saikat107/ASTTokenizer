<METHOD_START> public void ( ) { this . org.springframework.integration.util.ConversionService = DefaultConversionService . getSharedInstance ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ConversionService org.springframework.integration.util.ConversionService ) { this . org.springframework.integration.util.ConversionService = org.springframework.integration.util.ConversionService ; }  <METHOD_END>
<METHOD_START> public void void ( ConversionService org.springframework.integration.util.ConversionService ) { this . org.springframework.integration.util.ConversionService = org.springframework.integration.util.ConversionService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.util.BeanFactory ) throws org.springframework.integration.util.BeansException { if ( org.springframework.integration.util.BeanFactory instanceof ConfigurableBeanFactory ) { java.lang.Object java.lang.Object = ( ( ConfigurableBeanFactory ) org.springframework.integration.util.BeanFactory ) . getTypeConverter ( ) ; if ( java.lang.Object instanceof SimpleTypeConverter ) { this . org.springframework.integration.util.SimpleTypeConverter = ( SimpleTypeConverter ) java.lang.Object ; } } }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Class<?> < ? > java.lang.Class<?> ) { if ( this . org.springframework.integration.util.ConversionService . canConvert ( java.lang.Class<> , java.lang.Class<> ) ) { return true ; } if ( ! java.lang.String .class . boolean ( java.lang.Class<> ) && ! java.lang.String .class . boolean ( java.lang.Class<> ) ) { return false ; } if ( ! java.lang.String .class . boolean ( java.lang.Class<> ) ) { return this . org.springframework.integration.util.SimpleTypeConverter . findCustomEditor ( java.lang.Class<> , null ) != null || this . java.beans.PropertyEditor ( java.lang.Class<> ) != null ; } return this . org.springframework.integration.util.SimpleTypeConverter . findCustomEditor ( java.lang.Class<> , null ) != null || this . java.beans.PropertyEditor ( java.lang.Class<> ) != null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( TypeDescriptor org.springframework.integration.util.TypeDescriptor , TypeDescriptor org.springframework.integration.util.TypeDescriptor ) { if ( this . org.springframework.integration.util.ConversionService . canConvert ( org.springframework.integration.util.TypeDescriptor , org.springframework.integration.util.TypeDescriptor ) ) { return true ; } java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.integration.util.TypeDescriptor . getObjectType ( ) ; java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.integration.util.TypeDescriptor . getObjectType ( ) ; return boolean ( java.lang.Class<> , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , TypeDescriptor org.springframework.integration.util.TypeDescriptor , TypeDescriptor org.springframework.integration.util.TypeDescriptor ) { if ( ( org.springframework.integration.util.TypeDescriptor . getType ( ) == java.lang.Void .class || org.springframework.integration.util.TypeDescriptor . getType ( ) == java.lang.Void . java.lang.Class<java.lang.Void> ) && java.lang.Object == null ) { return null ; } if ( org.springframework.integration.util.TypeDescriptor != null ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.integration.util.TypeDescriptor . getType ( ) ; java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.integration.util.TypeDescriptor . getType ( ) ; if ( ( java.lang.Class<> == MessageHeaders .class && java.lang.Class<> == MessageHeaders .class ) || ( java.lang.Class<> == MessageHistory .class && java.lang.Class<> == MessageHistory .class ) || ( org.springframework.integration.util.TypeDescriptor . isAssignableTo ( org.springframework.integration.util.TypeDescriptor ) && ClassUtils . isPrimitiveArray ( java.lang.Class<> ) ) ) { return java.lang.Object ; } } if ( this . org.springframework.integration.util.ConversionService . canConvert ( org.springframework.integration.util.TypeDescriptor , org.springframework.integration.util.TypeDescriptor ) ) { return this . org.springframework.integration.util.ConversionService . convert ( java.lang.Object , org.springframework.integration.util.TypeDescriptor , org.springframework.integration.util.TypeDescriptor ) ; } if ( ! java.lang.String .class . boolean ( org.springframework.integration.util.TypeDescriptor . getType ( ) ) ) { java.beans.PropertyEditor java.beans.PropertyEditor = this . org.springframework.integration.util.SimpleTypeConverter . findCustomEditor ( org.springframework.integration.util.TypeDescriptor . getType ( ) , null ) ; if ( java.beans.PropertyEditor == null ) { java.beans.PropertyEditor = this . java.beans.PropertyEditor ( org.springframework.integration.util.TypeDescriptor . getType ( ) ) ; } if ( java.beans.PropertyEditor != null ) { java.lang.String java.lang.String = null ; synchronized ( java.beans.PropertyEditor ) { java.beans.PropertyEditor . void ( java.lang.Object ) ; java.lang.String = java.beans.PropertyEditor . java.lang.String ( ) ; } if ( java.lang.String .class . boolean ( org.springframework.integration.util.TypeDescriptor . getType ( ) ) ) { return java.lang.String ; } return java.lang.Object ( java.lang.String , TypeDescriptor . valueOf ( java.lang.String .class ) , org.springframework.integration.util.TypeDescriptor ) ; } } synchronized ( this . org.springframework.integration.util.SimpleTypeConverter ) { return this . org.springframework.integration.util.SimpleTypeConverter . convertIfNecessary ( java.lang.Object , org.springframework.integration.util.TypeDescriptor . getType ( ) ) ; } }  <METHOD_END>
<METHOD_START> private java.beans.PropertyEditor java.beans.PropertyEditor ( java.lang.Class<?> < ? > java.lang.Class<?> ) { java.beans.PropertyEditor java.beans.PropertyEditor ; if ( this . boolean ) { java.beans.PropertyEditor = this . org.springframework.integration.util.SimpleTypeConverter . getDefaultEditor ( java.lang.Class<> ) ; } else { synchronized ( this ) { java.beans.PropertyEditor = this . org.springframework.integration.util.SimpleTypeConverter . getDefaultEditor ( java.lang.Class<> ) ; } this . boolean = true ; } return java.beans.PropertyEditor ; }  <METHOD_END>
