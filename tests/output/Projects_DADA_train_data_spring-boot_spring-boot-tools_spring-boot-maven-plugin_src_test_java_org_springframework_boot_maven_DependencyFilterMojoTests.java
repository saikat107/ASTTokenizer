<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.MojoExecutionException { org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo = new org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo ( java.util.Collections .< Exclude > java.util.List<org.springframework.boot.maven.Exclude> ( ) , STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; java.util.Set<org.springframework.boot.maven.Artifact> < Artifact > java.util.Set<org.springframework.boot.maven.Artifact> = org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo . java.util.Set<org.springframework.boot.maven.Artifact> ( org.springframework.boot.maven.Artifact ( STRING , STRING ) , org.springframework.boot.maven.Artifact ( STRING , STRING ) , org.springframework.boot.maven.Artifact ( STRING , STRING ) , org.springframework.boot.maven.Artifact ) ; assertThat ( java.util.Set<org.springframework.boot.maven.Artifact> ) . hasSize ( NUMBER ) ; assertThat ( java.util.Set<org.springframework.boot.maven.Artifact> . iterator ( ) . next ( ) ) . isSameAs ( org.springframework.boot.maven.Artifact ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.MojoExecutionException { org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo = new org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo ( java.util.Collections .< Exclude > java.util.List<org.springframework.boot.maven.Exclude> ( ) , STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; java.util.Set<org.springframework.boot.maven.Artifact> < Artifact > java.util.Set<org.springframework.boot.maven.Artifact> = org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo . java.util.Set<org.springframework.boot.maven.Artifact> ( org.springframework.boot.maven.Artifact ( STRING , STRING ) , org.springframework.boot.maven.Artifact ( STRING , STRING ) , org.springframework.boot.maven.Artifact ) ; assertThat ( java.util.Set<org.springframework.boot.maven.Artifact> ) . hasSize ( NUMBER ) ; assertThat ( java.util.Set<org.springframework.boot.maven.Artifact> . iterator ( ) . next ( ) ) . isSameAs ( org.springframework.boot.maven.Artifact ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.MojoExecutionException { org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo = new org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo ( java.util.Collections .< Exclude > java.util.List<org.springframework.boot.maven.Exclude> ( ) , STRING , STRING , new ScopeFilter ( null , Artifact . SCOPE_SYSTEM ) ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING , Artifact . SCOPE_SYSTEM ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING , Artifact . SCOPE_RUNTIME ) ; java.util.Set<org.springframework.boot.maven.Artifact> < Artifact > java.util.Set<org.springframework.boot.maven.Artifact> = org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo . java.util.Set<org.springframework.boot.maven.Artifact> ( org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact ) ; assertThat ( java.util.Set<org.springframework.boot.maven.Artifact> ) . containsExactly ( org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.MojoExecutionException { org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo = new org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo ( java.util.Collections .< Exclude > java.util.List<org.springframework.boot.maven.Exclude> ( ) , STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; java.util.Set<org.springframework.boot.maven.Artifact> < Artifact > java.util.Set<org.springframework.boot.maven.Artifact> = org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo . java.util.Set<org.springframework.boot.maven.Artifact> ( org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact ) ; assertThat ( java.util.Set<org.springframework.boot.maven.Artifact> ) . containsExactly ( org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.MojoExecutionException { org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo = new org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo ( java.util.Collections .< Exclude > java.util.List<org.springframework.boot.maven.Exclude> ( ) , STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; java.util.Set<org.springframework.boot.maven.Artifact> < Artifact > java.util.Set<org.springframework.boot.maven.Artifact> = org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo . java.util.Set<org.springframework.boot.maven.Artifact> ( org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact ) ; assertThat ( java.util.Set<org.springframework.boot.maven.Artifact> ) . containsExactly ( org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.MojoExecutionException { Exclude org.springframework.boot.maven.Exclude = new Exclude ( ) ; org.springframework.boot.maven.Exclude . setGroupId ( STRING ) ; org.springframework.boot.maven.Exclude . setArtifactId ( STRING ) ; org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo = new org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo ( java.util.Collections . java.util.List ( org.springframework.boot.maven.Exclude ) , STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; java.util.Set<org.springframework.boot.maven.Artifact> < Artifact > java.util.Set<org.springframework.boot.maven.Artifact> = org.springframework.boot.maven.DependencyFilterMojoTests.TestableDependencyFilterMojo . java.util.Set<org.springframework.boot.maven.Artifact> ( org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact ) ; assertThat ( java.util.Set<org.springframework.boot.maven.Artifact> ) . containsExactly ( org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact , org.springframework.boot.maven.Artifact ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.boot.maven.Artifact org.springframework.boot.maven.Artifact ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return org.springframework.boot.maven.Artifact ( java.lang.String , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.boot.maven.Artifact org.springframework.boot.maven.Artifact ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { Artifact org.springframework.boot.maven.Artifact = mock ( Artifact .class ) ; given ( org.springframework.boot.maven.Artifact . getGroupId ( ) ) . willReturn ( java.lang.String ) ; given ( org.springframework.boot.maven.Artifact . getArtifactId ( ) ) . willReturn ( java.lang.String ) ; if ( java.lang.String != null ) { given ( org.springframework.boot.maven.Artifact . getScope ( ) ) . willReturn ( java.lang.String ) ; } return org.springframework.boot.maven.Artifact ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<org.springframework.boot.maven.Exclude> < Exclude > java.util.List<org.springframework.boot.maven.Exclude> , java.lang.String java.lang.String , java.lang.String java.lang.String , ArtifactsFilter ... org.springframework.boot.maven.ArtifactsFilter[] ) { setExcludes ( java.util.List<org.springframework.boot.maven.Exclude> ) ; setExcludeGroupIds ( java.lang.String ) ; setExcludeArtifactIds ( java.lang.String ) ; this . org.springframework.boot.maven.ArtifactsFilter[] = org.springframework.boot.maven.ArtifactsFilter[] ; }  <METHOD_END>
<METHOD_START> public java.util.Set<org.springframework.boot.maven.Artifact> < Artifact > java.util.Set<org.springframework.boot.maven.Artifact> ( Artifact ... org.springframework.boot.maven.Artifact[] )				throws org.springframework.boot.maven.MojoExecutionException { java.util.Set<org.springframework.boot.maven.Artifact> < Artifact > java.util.Set<org.springframework.boot.maven.Artifact> = new java.util.LinkedHashSet <> ( java.util.Arrays . java.util.List ( org.springframework.boot.maven.Artifact[] ) ) ; return java.util.Set<org.springframework.boot.maven.Artifact> ( java.util.Set<org.springframework.boot.maven.Artifact> , getFilters ( this . org.springframework.boot.maven.ArtifactsFilter[] ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.boot.maven.MojoExecutionException , org.springframework.boot.maven.MojoFailureException {		}  <METHOD_END>
