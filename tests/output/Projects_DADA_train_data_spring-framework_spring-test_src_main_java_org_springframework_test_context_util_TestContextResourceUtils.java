<METHOD_START> private void ( ) { }  <METHOD_END>
<METHOD_START> public static java.lang.String [] java.lang.String[] ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String ... java.lang.String[] ) { java.lang.String [] java.lang.String[] = new java.lang.String [ java.lang.String[] . int ] ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { java.lang.String java.lang.String = java.lang.String[] [ int ] ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String[] [ int ] = ResourceUtils . CLASSPATH_URL_PREFIX + java.lang.String ; } else if ( ! ResourcePatternUtils . isUrl ( java.lang.String ) ) { java.lang.String[] [ int ] = ResourceUtils . CLASSPATH_URL_PREFIX + java.lang.String + StringUtils . cleanPath ( ClassUtils . classPackageAsResourcePath ( java.lang.Class<> ) + java.lang.String + java.lang.String ) ; } else { java.lang.String[] [ int ] = StringUtils . cleanPath ( java.lang.String ) ; } } return java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.context.util.Resource [] org.springframework.test.context.util.Resource[] ( ResourceLoader org.springframework.test.context.util.ResourceLoader , java.lang.String ... java.lang.String[] ) { return java.util.stream.Stream<org.springframework.test.context.util.Resource> ( org.springframework.test.context.util.ResourceLoader , java.lang.String[] ) . toArray ( Resource [] ::new ) ; }  <METHOD_END>
<METHOD_START> public static java.util.List<org.springframework.test.context.util.Resource> < Resource > java.util.List<org.springframework.test.context.util.Resource> ( ResourceLoader org.springframework.test.context.util.ResourceLoader , java.lang.String ... java.lang.String[] ) { return java.util.stream.Stream<org.springframework.test.context.util.Resource> ( org.springframework.test.context.util.ResourceLoader , java.lang.String[] ) . collect ( java.util.stream.Collectors . java.util.stream.Collector<java.lang.Object,?,java.util.List<java.lang.Object>> ( ) ) ; }  <METHOD_END>
<METHOD_START> private static java.util.stream.Stream<org.springframework.test.context.util.Resource> < Resource > java.util.stream.Stream<org.springframework.test.context.util.Resource> ( ResourceLoader org.springframework.test.context.util.ResourceLoader , java.lang.String ... java.lang.String[] ) { return java.util.Arrays . java.util.stream.Stream<java.lang.String> ( java.lang.String[] ) . java.util.stream.Stream ( org.springframework.test.context.util.ResourceLoader :: getResource ) ; }  <METHOD_END>
