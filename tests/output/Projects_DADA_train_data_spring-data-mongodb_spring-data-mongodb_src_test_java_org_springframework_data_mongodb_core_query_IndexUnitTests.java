<METHOD_START> @ Test public void void ( ) { Index org.springframework.data.mongodb.core.query.Index = new Index ( ) . on ( STRING , Direction . ASC ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.Index . getIndexKeys ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Index org.springframework.data.mongodb.core.query.Index = new Index ( ) . on ( STRING , Direction . DESC ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.Index . getIndexKeys ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Index org.springframework.data.mongodb.core.query.Index = new Index ( ) . on ( STRING , Direction . ASC ) . on ( STRING , Direction . DESC ) ; org.springframework.data.mongodb.core.query.Index . named ( STRING ) . unique ( ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.Index . getIndexKeys ( ) ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.Index . getIndexOptions ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Index org.springframework.data.mongodb.core.query.Index = new Index ( ) . on ( STRING , Direction . ASC ) ; org.springframework.data.mongodb.core.query.Index . sparse ( ) . unique ( ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.Index . getIndexKeys ( ) ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.Index . getIndexOptions ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GeospatialIndex org.springframework.data.mongodb.core.query.GeospatialIndex = new GeospatialIndex ( STRING ) . withMin ( NUMBER ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.GeospatialIndex . getIndexKeys ( ) ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.GeospatialIndex . getIndexOptions ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GeospatialIndex org.springframework.data.mongodb.core.query.GeospatialIndex = new GeospatialIndex ( STRING ) . typed ( GeoSpatialIndexType . GEO_2DSPHERE ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.GeospatialIndex . getIndexKeys ( ) ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.GeospatialIndex . getIndexOptions ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GeospatialIndex org.springframework.data.mongodb.core.query.GeospatialIndex = new GeospatialIndex ( STRING ) . typed ( GeoSpatialIndexType . GEO_HAYSTACK ) . withAdditionalField ( STRING ) . withBucketSize ( NUMBER ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.GeospatialIndex . getIndexKeys ( ) ) ; assertEquals ( Document . parse ( STRING ) , org.springframework.data.mongodb.core.query.GeospatialIndex . getIndexOptions ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Index org.springframework.data.mongodb.core.query.Index = new Index ( STRING , Direction . ASC ) . on ( STRING , Direction . ASC ) ; assertThat ( org.springframework.data.mongodb.core.query.Index . getIndexKeys ( ) , is ( Document . parse ( STRING ) ) ) ; }  <METHOD_END>
