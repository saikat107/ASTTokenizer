<METHOD_START> public void ( java.lang.Class<T> < T > java.lang.Class<T> ) { super( java.lang.Class<T> ); this . org.springframework.data.jpa.repository.support.JpaEntityMetadata<T> = new DefaultJpaEntityMetadata < T > ( java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) public static < T > org.springframework.data.jpa.repository.support.JpaEntityInformation<T,?> < T , ? > org.springframework.data.jpa.repository.support.JpaEntityInformation<T,?> ( java.lang.Class<T> < T > java.lang.Class<T> , EntityManager org.springframework.data.jpa.repository.support.EntityManager ) { Assert . notNull ( java.lang.Class<T> , STRING ) ; Assert . notNull ( org.springframework.data.jpa.repository.support.EntityManager , STRING ) ; Metamodel org.springframework.data.jpa.repository.support.Metamodel = org.springframework.data.jpa.repository.support.EntityManager . getMetamodel ( ) ; if ( Persistable .class . boolean ( java.lang.Class<T> ) ) { return new JpaPersistableEntityInformation ( java.lang.Class<T> , org.springframework.data.jpa.repository.support.Metamodel ) ; } else { return new JpaMetamodelEntityInformation ( java.lang.Class<T> , org.springframework.data.jpa.repository.support.Metamodel ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return org.springframework.data.jpa.repository.support.JpaEntityMetadata<T> . getEntityName ( ) ; }  <METHOD_END>
