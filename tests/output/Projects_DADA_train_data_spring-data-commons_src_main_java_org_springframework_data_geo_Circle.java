<METHOD_START> @ PersistenceConstructor public void ( Point org.springframework.data.geo.Point , Distance org.springframework.data.geo.Distance ) { Assert . notNull ( org.springframework.data.geo.Point , STRING ) ; Assert . notNull ( org.springframework.data.geo.Distance , STRING ) ; Assert . isTrue ( org.springframework.data.geo.Distance . getValue ( ) >= NUMBER , STRING ) ; this . org.springframework.data.geo.Point = org.springframework.data.geo.Point ; this . org.springframework.data.geo.Distance = org.springframework.data.geo.Distance ; }  <METHOD_END>
<METHOD_START> public void ( Point org.springframework.data.geo.Point , double double ) { this( org.springframework.data.geo.Point , new Distance ( double ) ); }  <METHOD_END>
<METHOD_START> public void ( double double , double double , double double ) { this( new Point ( double , double ) , new Distance ( double ) ); }  <METHOD_END>
<METHOD_START> public org.springframework.data.geo.Point org.springframework.data.geo.Point ( ) { return org.springframework.data.geo.Point ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.geo.Distance org.springframework.data.geo.Distance ( ) { return org.springframework.data.geo.Distance ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String . java.lang.String ( STRING , org.springframework.data.geo.Point , org.springframework.data.geo.Distance ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.data.geo.Circle ) ) { return false ; } org.springframework.data.geo.Circle org.springframework.data.geo.Circle = ( org.springframework.data.geo.Circle ) java.lang.Object ; return this . org.springframework.data.geo.Point . equals ( org.springframework.data.geo.Circle . org.springframework.data.geo.Point ) && this . org.springframework.data.geo.Distance . equals ( org.springframework.data.geo.Circle . org.springframework.data.geo.Distance ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ; int += NUMBER * org.springframework.data.geo.Point . hashCode ( ) ; int += NUMBER * org.springframework.data.geo.Distance . hashCode ( ) ; return int ; }  <METHOD_END>
