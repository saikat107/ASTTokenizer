<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext . refresh ( ) ; EntityScanPackages org.springframework.boot.autoconfigure.domain.EntityScanPackages = EntityScanPackages . get ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext ) ; assertThat ( org.springframework.boot.autoconfigure.domain.EntityScanPackages ) . isNotNull ( ) ; assertThat ( org.springframework.boot.autoconfigure.domain.EntityScanPackages . getPackageNames ( ) ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; EntityScanPackages . register ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext , STRING , STRING ) ; EntityScanPackages . register ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext , STRING , STRING ) ; this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext . refresh ( ) ; EntityScanPackages org.springframework.boot.autoconfigure.domain.EntityScanPackages = EntityScanPackages . get ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext ) ; assertThat ( org.springframework.boot.autoconfigure.domain.EntityScanPackages . getPackageNames ( ) ) . containsExactly ( STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.autoconfigure.domain.ExpectedException . expectMessage ( STRING ) ; EntityScanPackages . register ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.domain.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.autoconfigure.domain.ExpectedException . expectMessage ( STRING ) ; EntityScanPackages . register ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext , ( java.lang.String [] ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.autoconfigure.domain.ExpectedException . expectMessage ( STRING ) ; EntityScanPackages . register ( null , java.util.Collections .< java.lang.String > java.util.List<java.lang.String> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.domain.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.autoconfigure.domain.ExpectedException . expectMessage ( STRING ) ; EntityScanPackages . register ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext , ( java.util.Collection<java.lang.String> < java.lang.String > ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.domain.EntityScanPackagesTests.EntityScanValueConfig .class ) ; EntityScanPackages org.springframework.boot.autoconfigure.domain.EntityScanPackages = EntityScanPackages . get ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext ) ; assertThat ( org.springframework.boot.autoconfigure.domain.EntityScanPackages . getPackageNames ( ) ) . containsExactly ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext . registerBeanDefinition ( STRING , new RootBeanDefinition ( org.springframework.boot.autoconfigure.domain.EntityScanPackagesTests.EntityScanValueConfig .class . java.lang.String ( ) ) ) ; this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext . refresh ( ) ; EntityScanPackages org.springframework.boot.autoconfigure.domain.EntityScanPackages = EntityScanPackages . get ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext ) ; assertThat ( org.springframework.boot.autoconfigure.domain.EntityScanPackages . getPackageNames ( ) ) . containsExactly ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.domain.EntityScanPackagesTests.EntityScanBasePackagesConfig .class ) ; EntityScanPackages org.springframework.boot.autoconfigure.domain.EntityScanPackages = EntityScanPackages . get ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext ) ; assertThat ( org.springframework.boot.autoconfigure.domain.EntityScanPackages . getPackageNames ( ) ) . containsExactly ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.ExpectedException . expect ( AnnotationConfigurationException .class ) ; this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.domain.EntityScanPackagesTests.EntityScanValueAndBasePackagesConfig .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.domain.EntityScanPackagesTests.EntityScanBasePackageClassesConfig .class ) ; EntityScanPackages org.springframework.boot.autoconfigure.domain.EntityScanPackages = EntityScanPackages . get ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext ) ; assertThat ( org.springframework.boot.autoconfigure.domain.EntityScanPackages . getPackageNames ( ) ) . containsExactly ( java.lang.Class<? extends org.springframework.boot.autoconfigure.domain.EntityScanPackagesTests> ( ) . java.lang.Package ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.domain.EntityScanPackagesTests.EntityScanNoAttributesConfig .class ) ; EntityScanPackages org.springframework.boot.autoconfigure.domain.EntityScanPackages = EntityScanPackages . get ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext ) ; assertThat ( org.springframework.boot.autoconfigure.domain.EntityScanPackages . getPackageNames ( ) ) . containsExactly ( java.lang.Class<? extends org.springframework.boot.autoconfigure.domain.EntityScanPackagesTests> ( ) . java.lang.Package ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.autoconfigure.domain.EntityScanPackagesTests.EntityScanValueConfig .class , org.springframework.boot.autoconfigure.domain.EntityScanPackagesTests.EntityScanBasePackagesConfig .class ) ; EntityScanPackages org.springframework.boot.autoconfigure.domain.EntityScanPackages = EntityScanPackages . get ( this . org.springframework.boot.autoconfigure.domain.AnnotationConfigApplicationContext ) ; assertThat ( org.springframework.boot.autoconfigure.domain.EntityScanPackages . getPackageNames ( ) ) . containsExactly ( STRING , STRING ) ; }  <METHOD_END>
