<METHOD_START> protected abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.ObjectInstance javax.management.ObjectInstance = javax.management.ObjectInstance ( ) ; assertNotNull ( STRING , javax.management.ObjectInstance ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { IJmxTestBean org.springframework.jmx.export.assembler.IJmxTestBean = org.springframework.jmx.export.assembler.IJmxTestBean ( ) ; assertNotNull ( org.springframework.jmx.export.assembler.IJmxTestBean ) ; javax.management.MBeanInfo javax.management.MBeanInfo = javax.management.MBeanInfo ( ) ; assertEquals ( STRING , int ( ) , javax.management.MBeanInfo . javax.management.MBeanOperationInfo[] ( ) . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { IJmxTestBean org.springframework.jmx.export.assembler.IJmxTestBean = org.springframework.jmx.export.assembler.IJmxTestBean ( ) ; assertNotNull ( org.springframework.jmx.export.assembler.IJmxTestBean ) ; javax.management.MBeanInfo javax.management.MBeanInfo = javax.management.MBeanInfo ( ) ; assertEquals ( STRING , int ( ) , javax.management.MBeanInfo . javax.management.MBeanAttributeInfo[] ( ) . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = javax.management.modelmbean.ModelMBeanInfo ( ) ; assertNotNull ( STRING , javax.management.modelmbean.ModelMBeanInfo ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = javax.management.modelmbean.ModelMBeanInfo ( ) ; javax.management.MBeanAttributeInfo [] javax.management.MBeanAttributeInfo[] = javax.management.modelmbean.ModelMBeanInfo . javax.management.MBeanAttributeInfo[] ( ) ; assertEquals ( STRING , int ( ) , javax.management.MBeanAttributeInfo[] . int ) ; for ( int int = NUMBER ; int < javax.management.MBeanAttributeInfo[] . int ; int ++ ) { assertNotNull ( STRING , javax.management.MBeanAttributeInfo[] [ int ] ) ; assertNotNull ( STRING , javax.management.MBeanAttributeInfo[] [ int ] . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = javax.management.modelmbean.ModelMBeanInfo ( ) ; javax.management.MBeanOperationInfo [] javax.management.MBeanOperationInfo[] = javax.management.modelmbean.ModelMBeanInfo . javax.management.MBeanOperationInfo[] ( ) ; assertEquals ( STRING , int ( ) , javax.management.MBeanOperationInfo[] . int ) ; for ( int int = NUMBER ; int < javax.management.MBeanOperationInfo[] . int ; int ++ ) { assertNotNull ( STRING , javax.management.MBeanOperationInfo[] [ int ] ) ; assertNotNull ( STRING , javax.management.MBeanOperationInfo[] [ int ] . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = javax.management.modelmbean.ModelMBeanInfo ( ) ; assertNotNull ( STRING , javax.management.modelmbean.ModelMBeanInfo . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.ObjectName javax.management.ObjectName = ObjectNameManager . getInstance ( java.lang.String ( ) ) ; getServer ( ) . setAttribute ( javax.management.ObjectName , new javax.management.Attribute ( java.lang.String , STRING ) ) ; IJmxTestBean org.springframework.jmx.export.assembler.IJmxTestBean = ( IJmxTestBean ) getContext ( ) . getBean ( STRING ) ; assertEquals ( STRING , org.springframework.jmx.export.assembler.IJmxTestBean . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.ObjectName javax.management.ObjectName = ObjectNameManager . getInstance ( java.lang.String ( ) ) ; org.springframework.jmx.export.assembler.IJmxTestBean ( ) . setName ( STRING ) ; java.lang.Object java.lang.Object = getServer ( ) . getAttribute ( javax.management.ObjectName , java.lang.String ) ; assertEquals ( STRING , STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.ObjectName javax.management.ObjectName = ObjectNameManager . getInstance ( java.lang.String ( ) ) ; java.lang.Object java.lang.Object = getServer ( ) . invoke ( javax.management.ObjectName , STRING , new java.lang.Object [] { new java.lang.Integer ( NUMBER ) , new java.lang.Integer ( NUMBER ) } , new java.lang.String [] { STRING , STRING } ) ; assertEquals ( STRING , new java.lang.Integer ( NUMBER ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = javax.management.modelmbean.ModelMBeanInfo ( ) ; javax.management.modelmbean.ModelMBeanAttributeInfo javax.management.modelmbean.ModelMBeanAttributeInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanAttributeInfo ( java.lang.String ) ; javax.management.Descriptor javax.management.Descriptor = javax.management.modelmbean.ModelMBeanAttributeInfo . javax.management.Descriptor ( ) ; assertNotNull ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertNotNull ( STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , STRING , javax.management.Descriptor . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = javax.management.modelmbean.ModelMBeanInfo ( ) ; javax.management.modelmbean.ModelMBeanOperationInfo javax.management.modelmbean.ModelMBeanOperationInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanOperationInfo ( STRING ) ; assertNotNull ( STRING , javax.management.modelmbean.ModelMBeanOperationInfo ) ; assertEquals ( STRING , javax.management.modelmbean.ModelMBeanOperationInfo . javax.management.Descriptor ( ) . java.lang.Object ( STRING ) , new java.lang.Integer ( NUMBER ) ) ; assertEquals ( STRING , STRING , javax.management.modelmbean.ModelMBeanOperationInfo . javax.management.Descriptor ( ) . java.lang.Object ( STRING ) ) ; javax.management.modelmbean.ModelMBeanOperationInfo javax.management.modelmbean.ModelMBeanOperationInfo = javax.management.modelmbean.ModelMBeanInfo . javax.management.modelmbean.ModelMBeanOperationInfo ( STRING ) ; assertNotNull ( STRING , javax.management.modelmbean.ModelMBeanOperationInfo ) ; assertEquals ( STRING , javax.management.modelmbean.ModelMBeanOperationInfo . javax.management.Descriptor ( ) . java.lang.Object ( STRING ) , new java.lang.Integer ( NUMBER ) ) ; assertEquals ( STRING , STRING , javax.management.modelmbean.ModelMBeanOperationInfo . javax.management.Descriptor ( ) . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = ( javax.management.modelmbean.ModelMBeanInfo ) javax.management.MBeanInfo ( ) ; javax.management.MBeanNotificationInfo [] javax.management.MBeanNotificationInfo[] = javax.management.modelmbean.ModelMBeanInfo . javax.management.MBeanNotificationInfo[] ( ) ; assertEquals ( STRING , NUMBER , javax.management.MBeanNotificationInfo[] . int ) ; assertEquals ( STRING , STRING , javax.management.MBeanNotificationInfo[] [ NUMBER ] . java.lang.String ( ) ) ; java.lang.String [] java.lang.String[] = javax.management.MBeanNotificationInfo[] [ NUMBER ] . java.lang.String[] ( ) ; assertEquals ( STRING , NUMBER , java.lang.String[] . int ) ; assertEquals ( STRING , STRING , java.lang.String[] [ NUMBER ] ) ; assertEquals ( STRING , STRING , java.lang.String[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> protected javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo ( ) java.lang.Exception { IJmxTestBean org.springframework.jmx.export.assembler.IJmxTestBean = org.springframework.jmx.export.assembler.IJmxTestBean ( ) ; javax.management.modelmbean.ModelMBeanInfo javax.management.modelmbean.ModelMBeanInfo = org.springframework.jmx.export.assembler.MBeanInfoAssembler ( ) . getMBeanInfo ( org.springframework.jmx.export.assembler.IJmxTestBean , java.lang.String ( ) ) ; return javax.management.modelmbean.ModelMBeanInfo ; }  <METHOD_END>
<METHOD_START> protected org.springframework.jmx.export.assembler.IJmxTestBean org.springframework.jmx.export.assembler.IJmxTestBean ( ) { java.lang.Object java.lang.Object = getContext ( ) . getBean ( STRING ) ; return ( IJmxTestBean ) java.lang.Object ; }  <METHOD_END>
<METHOD_START> protected javax.management.MBeanInfo javax.management.MBeanInfo ( ) java.lang.Exception { return getServer ( ) . getMBeanInfo ( ObjectNameManager . getInstance ( java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> protected javax.management.ObjectInstance javax.management.ObjectInstance ( ) java.lang.Exception { return getServer ( ) . getObjectInstance ( ObjectNameManager . getInstance ( java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> protected abstract int int ( )  <METHOD_END>
<METHOD_START> protected abstract int int ( )  <METHOD_END>
<METHOD_START> protected abstract org.springframework.jmx.export.assembler.MBeanInfoAssembler org.springframework.jmx.export.assembler.MBeanInfoAssembler ( ) java.lang.Exception ;  <METHOD_END>
