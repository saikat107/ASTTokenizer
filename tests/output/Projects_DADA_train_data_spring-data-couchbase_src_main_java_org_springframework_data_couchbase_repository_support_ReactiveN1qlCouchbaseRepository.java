<METHOD_START> public void ( CouchbaseEntityInformation < T , java.lang.String > org.springframework.data.couchbase.repository.support.CouchbaseEntityInformation<T,java.lang.String> , RxJavaCouchbaseOperations org.springframework.data.couchbase.repository.support.RxJavaCouchbaseOperations ) { super( org.springframework.data.couchbase.repository.support.CouchbaseEntityInformation<T,java.lang.String> , org.springframework.data.couchbase.repository.support.RxJavaCouchbaseOperations ); }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public org.springframework.data.couchbase.repository.support.Flux<T> < T > org.springframework.data.couchbase.repository.support.Flux<T> ( Sort org.springframework.data.couchbase.repository.support.Sort ) { Assert . notNull ( org.springframework.data.couchbase.repository.support.Sort ) ; WherePath org.springframework.data.couchbase.repository.support.WherePath = N1qlUtils . createSelectFromForEntity ( getCouchbaseOperations ( ) . getCouchbaseBucket ( ) . name ( ) ) ; Expression org.springframework.data.couchbase.repository.support.Expression = N1qlUtils . createWhereFilterForEntity ( null , getCouchbaseOperations ( ) . getConverter ( ) , getEntityInformation ( ) ) ; com . com.couchbase . com.couchbase . com.couchbase . com.couchbase . com.couchbase . com.couchbase [] com.couchbase.client.java.query.dsl.Sort[] = N1qlUtils . createSort ( org.springframework.data.couchbase.repository.support.Sort , getCouchbaseOperations ( ) . getConverter ( ) ) ; Statement org.springframework.data.couchbase.repository.support.Statement = org.springframework.data.couchbase.repository.support.WherePath . where ( org.springframework.data.couchbase.repository.support.Expression ) . orderBy ( com.couchbase.client.java.query.dsl.Sort[] ) ; ScanConsistency org.springframework.data.couchbase.repository.support.ScanConsistency = getCouchbaseOperations ( ) . getDefaultConsistency ( ) . n1qlConsistency ( ) ; N1qlQuery org.springframework.data.couchbase.repository.support.N1qlQuery = N1qlQuery . simple ( org.springframework.data.couchbase.repository.support.Statement , N1qlParams . build ( ) . consistency ( org.springframework.data.couchbase.repository.support.ScanConsistency ) ) ; return mapFlux ( getCouchbaseOperations ( ) . findByN1QL ( org.springframework.data.couchbase.repository.support.N1qlQuery , getEntityInformation ( ) . getJavaType ( ) ) ) ; }  <METHOD_END>
