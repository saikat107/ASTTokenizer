<METHOD_START> @ Bean public org.springframework.data.couchbase.config.Cluster org.springframework.data.couchbase.config.Cluster ( ) { return CouchbaseCluster . create ( org.springframework.data.couchbase.config.CouchbaseEnvironment ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.couchbase.config.ClusterInfo org.springframework.data.couchbase.config.ClusterInfo ( ) { return org.springframework.data.couchbase.config.Cluster ( ) . clusterManager ( java.lang.String , java.lang.String ) . info ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.couchbase.config.Bucket org.springframework.data.couchbase.config.Bucket ( ) { Bucket org.springframework.data.couchbase.config.Bucket = org.springframework.data.couchbase.config.Cluster ( ) . openBucket ( java.lang.String , java.lang.String ) ; org.springframework.data.couchbase.config.Bucket = org.springframework.data.couchbase.config.Bucket ; return org.springframework.data.couchbase.config.Bucket ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.couchbase.config.CouchbaseEnvironment org.springframework.data.couchbase.config.CouchbaseEnvironment ( ) { return DefaultCouchbaseEnvironment . create ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.couchbase.config.CouchbaseConfigurer org.springframework.data.couchbase.config.CouchbaseConfigurer ( ) { return new org.springframework.data.couchbase.config.AbstractCouchbaseDataConfigurationTest.TestCouchbaseConfigurer ( org.springframework.data.couchbase.config.CouchbaseEnvironment , org.springframework.data.couchbase.config.Cluster , org.springframework.data.couchbase.config.ClusterInfo , org.springframework.data.couchbase.config.Bucket ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertSame ( org.springframework.data.couchbase.config.Bucket , org.springframework.data.couchbase.config.AbstractCouchbaseDataConfigurationTest.SdkConfig . org.springframework.data.couchbase.config.Bucket ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; assertNotNull ( org.springframework.data.couchbase.config.AbstractCouchbaseDataConfigurationTest.ItemRepository ) ; org.springframework.data.couchbase.config.AbstractCouchbaseDataConfigurationTest.Item org.springframework.data.couchbase.config.AbstractCouchbaseDataConfigurationTest.Item = new org.springframework.data.couchbase.config.AbstractCouchbaseDataConfigurationTest.Item ( ) ; org.springframework.data.couchbase.config.AbstractCouchbaseDataConfigurationTest.Item . java.lang.String = java.lang.String ; org.springframework.data.couchbase.config.AbstractCouchbaseDataConfigurationTest.Item . java.lang.String = STRING ; org.springframework.data.couchbase.config.AbstractCouchbaseDataConfigurationTest.ItemRepository . save ( org.springframework.data.couchbase.config.AbstractCouchbaseDataConfigurationTest.Item ) ; JsonDocument org.springframework.data.couchbase.config.JsonDocument = org.springframework.data.couchbase.config.Bucket . get ( java.lang.String ) ; assertNotNull ( org.springframework.data.couchbase.config.JsonDocument ) ; assertNotNull ( org.springframework.data.couchbase.config.JsonDocument . content ( ) ) ; assertEquals ( org.springframework.data.couchbase.config.AbstractCouchbaseDataConfigurationTest.Item . java.lang.String , org.springframework.data.couchbase.config.JsonDocument . content ( ) . getString ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void ( CouchbaseEnvironment org.springframework.data.couchbase.config.CouchbaseEnvironment , Cluster org.springframework.data.couchbase.config.Cluster , ClusterInfo org.springframework.data.couchbase.config.ClusterInfo , Bucket org.springframework.data.couchbase.config.Bucket ) { this . org.springframework.data.couchbase.config.CouchbaseEnvironment = org.springframework.data.couchbase.config.CouchbaseEnvironment ; this . org.springframework.data.couchbase.config.Cluster = org.springframework.data.couchbase.config.Cluster ; this . org.springframework.data.couchbase.config.ClusterInfo = org.springframework.data.couchbase.config.ClusterInfo ; this . org.springframework.data.couchbase.config.Bucket = org.springframework.data.couchbase.config.Bucket ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.couchbase.config.CouchbaseEnvironment org.springframework.data.couchbase.config.CouchbaseEnvironment ( ) java.lang.Exception { return this . org.springframework.data.couchbase.config.CouchbaseEnvironment ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.couchbase.config.Cluster org.springframework.data.couchbase.config.Cluster ( ) java.lang.Exception { return this . org.springframework.data.couchbase.config.Cluster ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.couchbase.config.ClusterInfo org.springframework.data.couchbase.config.ClusterInfo ( ) java.lang.Exception { return this . org.springframework.data.couchbase.config.ClusterInfo ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.couchbase.config.Bucket org.springframework.data.couchbase.config.Bucket ( ) java.lang.Exception { return this . org.springframework.data.couchbase.config.Bucket ; }  <METHOD_END>
