<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.data.jpa.JpaRepositoryTests.TestConfig .class ) ; context . refresh ( ) ; JpaStateRepository org.springframework.statemachine.data.jpa.JpaStateRepository = context . getBean ( JpaStateRepository .class ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaStateRepository . count ( ) , is ( NUMBER ) ) ; org.springframework.statemachine.data.jpa.JpaStateRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; org.springframework.statemachine.data.jpa.JpaStateRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaStateRepository . count ( ) , is ( NUMBER ) ) ; JpaTransitionRepository org.springframework.statemachine.data.jpa.JpaTransitionRepository = context . getBean ( JpaTransitionRepository .class ) ; JpaRepositoryTransition org.springframework.statemachine.data.jpa.JpaRepositoryTransition = new JpaRepositoryTransition ( org.springframework.statemachine.data.jpa.JpaRepositoryState , org.springframework.statemachine.data.jpa.JpaRepositoryState , STRING ) ; org.springframework.statemachine.data.jpa.JpaRepositoryTransition . setKind ( TransitionKind . EXTERNAL ) ; org.springframework.statemachine.data.jpa.JpaTransitionRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaStateRepository . count ( ) , is ( NUMBER ) ) ; JpaRepositoryTransition org.springframework.statemachine.data.jpa.JpaRepositoryTransition = org.springframework.statemachine.data.jpa.JpaTransitionRepository . findAll ( ) . iterator ( ) . next ( ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition . getSource ( ) . getState ( ) , is ( STRING ) ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition . getTarget ( ) . getState ( ) , is ( STRING ) ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition . getEvent ( ) , is ( STRING ) ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition . getKind ( ) , is ( TransitionKind . EXTERNAL ) ) ; context . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.data.jpa.JpaRepositoryTests.TestConfig .class ) ; context . refresh ( ) ; @ java.lang.SuppressWarnings ( STRING ) StateRepository < JpaRepositoryState > org.springframework.statemachine.data.jpa.StateRepository<org.springframework.statemachine.data.jpa.JpaRepositoryState> = context . getBean ( StateRepository .class ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING ) ; org.springframework.statemachine.data.jpa.StateRepository<org.springframework.statemachine.data.jpa.JpaRepositoryState> . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING ) ; org.springframework.statemachine.data.jpa.StateRepository<org.springframework.statemachine.data.jpa.JpaRepositoryState> . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; @ java.lang.SuppressWarnings ( STRING ) StateRepository < ? extends RepositoryState > org.springframework.statemachine.data.jpa.StateRepository<? extends org.springframework.statemachine.data.jpa.RepositoryState> = context . getBean ( StateRepository .class ) ; java.lang.Iterable<? extends org.springframework.statemachine.data.jpa.RepositoryState> < ? extends RepositoryState > java.lang.Iterable<? extends org.springframework.statemachine.data.jpa.RepositoryState> = org.springframework.statemachine.data.jpa.StateRepository<> . findAll ( ) ; assertThat ( java.lang.Iterable<> . java.util.Iterator<> ( ) . next ( ) . getState ( ) , is ( STRING ) ) ; @ java.lang.SuppressWarnings ( STRING ) TransitionRepository < RepositoryTransition > org.springframework.statemachine.data.jpa.TransitionRepository<org.springframework.statemachine.data.jpa.RepositoryTransition> = context . getBean ( TransitionRepository .class ) ; RepositoryTransition org.springframework.statemachine.data.jpa.RepositoryTransition = new JpaRepositoryTransition ( org.springframework.statemachine.data.jpa.JpaRepositoryState , org.springframework.statemachine.data.jpa.JpaRepositoryState , STRING ) ; org.springframework.statemachine.data.jpa.TransitionRepository<org.springframework.statemachine.data.jpa.RepositoryTransition> . save ( org.springframework.statemachine.data.jpa.RepositoryTransition ) ; RepositoryTransition org.springframework.statemachine.data.jpa.RepositoryTransition = org.springframework.statemachine.data.jpa.TransitionRepository<org.springframework.statemachine.data.jpa.RepositoryTransition> . findAll ( ) . iterator ( ) . next ( ) ; assertThat ( org.springframework.statemachine.data.jpa.RepositoryTransition . getSource ( ) . getState ( ) , is ( STRING ) ) ; assertThat ( org.springframework.statemachine.data.jpa.RepositoryTransition . getTarget ( ) . getState ( ) , is ( STRING ) ) ; assertThat ( org.springframework.statemachine.data.jpa.RepositoryTransition . getEvent ( ) , is ( STRING ) ) ; context . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.data.jpa.JpaRepositoryTests.TestConfig .class ) ; context . refresh ( ) ; JpaStateRepository org.springframework.statemachine.data.jpa.JpaStateRepository = context . getBean ( JpaStateRepository .class ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING , STRING , true ) ; org.springframework.statemachine.data.jpa.JpaStateRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING , STRING , false ) ; org.springframework.statemachine.data.jpa.JpaStateRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING , STRING , true ) ; org.springframework.statemachine.data.jpa.JpaStateRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING , STRING , false ) ; org.springframework.statemachine.data.jpa.JpaStateRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryState> < JpaRepositoryState > java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryState> = org.springframework.statemachine.data.jpa.JpaStateRepository . findByMachineId ( STRING ) ; java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryState> < JpaRepositoryState > java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryState> = org.springframework.statemachine.data.jpa.JpaStateRepository . findByMachineId ( STRING ) ; assertThat ( java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryState> . size ( ) , is ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryState> . size ( ) , is ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryState> . get ( NUMBER ) . getMachineId ( ) , is ( STRING ) ) ; assertThat ( java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryState> . get ( NUMBER ) . getMachineId ( ) , is ( STRING ) ) ; JpaTransitionRepository org.springframework.statemachine.data.jpa.JpaTransitionRepository = context . getBean ( JpaTransitionRepository .class ) ; JpaRepositoryTransition org.springframework.statemachine.data.jpa.JpaRepositoryTransition = new JpaRepositoryTransition ( STRING , org.springframework.statemachine.data.jpa.JpaRepositoryState , org.springframework.statemachine.data.jpa.JpaRepositoryState , STRING ) ; JpaRepositoryTransition org.springframework.statemachine.data.jpa.JpaRepositoryTransition = new JpaRepositoryTransition ( STRING , org.springframework.statemachine.data.jpa.JpaRepositoryState , org.springframework.statemachine.data.jpa.JpaRepositoryState , STRING ) ; org.springframework.statemachine.data.jpa.JpaTransitionRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition ) ; org.springframework.statemachine.data.jpa.JpaTransitionRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition ) ; java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryTransition> < JpaRepositoryTransition > java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryTransition> = org.springframework.statemachine.data.jpa.JpaTransitionRepository . findByMachineId ( STRING ) ; java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryTransition> < JpaRepositoryTransition > java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryTransition> = org.springframework.statemachine.data.jpa.JpaTransitionRepository . findByMachineId ( STRING ) ; assertThat ( java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryTransition> . size ( ) , is ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryTransition> . size ( ) , is ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryTransition> . get ( NUMBER ) . getMachineId ( ) , is ( STRING ) ) ; assertThat ( java.util.List<org.springframework.statemachine.data.jpa.JpaRepositoryTransition> . get ( NUMBER ) . getMachineId ( ) , is ( STRING ) ) ; context . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.data.jpa.JpaRepositoryTests.TestConfig .class ) ; context . refresh ( ) ; JpaActionRepository org.springframework.statemachine.data.jpa.JpaActionRepository = context . getBean ( JpaActionRepository .class ) ; JpaRepositoryAction org.springframework.statemachine.data.jpa.JpaRepositoryAction = new JpaRepositoryAction ( ) ; org.springframework.statemachine.data.jpa.JpaRepositoryAction . setSpel ( STRING ) ; org.springframework.statemachine.data.jpa.JpaRepositoryAction . setName ( STRING ) ; org.springframework.statemachine.data.jpa.JpaActionRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryAction ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaActionRepository . count ( ) , is ( NUMBER ) ) ; JpaRepositoryAction org.springframework.statemachine.data.jpa.JpaRepositoryAction = org.springframework.statemachine.data.jpa.JpaActionRepository . findAll ( ) . iterator ( ) . next ( ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaRepositoryAction . getSpel ( ) , is ( org.springframework.statemachine.data.jpa.JpaRepositoryAction . getSpel ( ) ) ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaRepositoryAction . getName ( ) , is ( org.springframework.statemachine.data.jpa.JpaRepositoryAction . getName ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.data.jpa.JpaRepositoryTests.TestConfig .class ) ; context . refresh ( ) ; JpaStateRepository org.springframework.statemachine.data.jpa.JpaStateRepository = context . getBean ( JpaStateRepository .class ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING ) ; org.springframework.statemachine.data.jpa.JpaStateRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; org.springframework.statemachine.data.jpa.JpaStateRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; JpaActionRepository org.springframework.statemachine.data.jpa.JpaActionRepository = context . getBean ( JpaActionRepository .class ) ; JpaTransitionRepository org.springframework.statemachine.data.jpa.JpaTransitionRepository = context . getBean ( JpaTransitionRepository .class ) ; JpaRepositoryTransition org.springframework.statemachine.data.jpa.JpaRepositoryTransition = new JpaRepositoryTransition ( org.springframework.statemachine.data.jpa.JpaRepositoryState , org.springframework.statemachine.data.jpa.JpaRepositoryState , STRING ) ; JpaActionRepository org.springframework.statemachine.data.jpa.JpaActionRepository = context . getBean ( JpaActionRepository .class ) ; JpaRepositoryAction org.springframework.statemachine.data.jpa.JpaRepositoryAction = new JpaRepositoryAction ( ) ; org.springframework.statemachine.data.jpa.JpaRepositoryAction . setName ( STRING ) ; org.springframework.statemachine.data.jpa.JpaActionRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryAction ) ; java.util.Set<org.springframework.statemachine.data.jpa.JpaRepositoryAction> < JpaRepositoryAction > java.util.Set<org.springframework.statemachine.data.jpa.JpaRepositoryAction> = new java.util.HashSet <> ( java.util.Arrays . java.util.List ( org.springframework.statemachine.data.jpa.JpaRepositoryAction ) ) ; org.springframework.statemachine.data.jpa.JpaRepositoryTransition . setActions ( java.util.Set<org.springframework.statemachine.data.jpa.JpaRepositoryAction> ) ; org.springframework.statemachine.data.jpa.JpaTransitionRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition ) ; JpaRepositoryTransition org.springframework.statemachine.data.jpa.JpaRepositoryTransition = org.springframework.statemachine.data.jpa.JpaTransitionRepository . findAll ( ) . iterator ( ) . next ( ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition . getSource ( ) . getState ( ) , is ( STRING ) ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition . getTarget ( ) . getState ( ) , is ( STRING ) ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition . getEvent ( ) , is ( STRING ) ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaActionRepository . count ( ) , is ( NUMBER ) ) ; JpaRepositoryAction org.springframework.statemachine.data.jpa.JpaRepositoryAction = org.springframework.statemachine.data.jpa.JpaActionRepository . findAll ( ) . iterator ( ) . next ( ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaRepositoryAction . getName ( ) , is ( org.springframework.statemachine.data.jpa.JpaRepositoryAction . getName ( ) ) ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition . getActions ( ) . size ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.data.jpa.JpaRepositoryTests.TestConfig .class ) ; context . refresh ( ) ; JpaActionRepository org.springframework.statemachine.data.jpa.JpaActionRepository = context . getBean ( JpaActionRepository .class ) ; JpaStateRepository org.springframework.statemachine.data.jpa.JpaStateRepository = context . getBean ( JpaStateRepository .class ) ; JpaTransitionRepository org.springframework.statemachine.data.jpa.JpaTransitionRepository = context . getBean ( JpaTransitionRepository .class ) ; JpaRepositoryAction org.springframework.statemachine.data.jpa.JpaRepositoryAction = new JpaRepositoryAction ( ) ; org.springframework.statemachine.data.jpa.JpaRepositoryAction . setName ( STRING ) ; org.springframework.statemachine.data.jpa.JpaActionRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryAction ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaActionRepository . count ( ) , is ( NUMBER ) ) ; JpaRepositoryAction org.springframework.statemachine.data.jpa.JpaRepositoryAction = new JpaRepositoryAction ( ) ; org.springframework.statemachine.data.jpa.JpaRepositoryAction . setName ( STRING ) ; org.springframework.statemachine.data.jpa.JpaActionRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryAction ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaActionRepository . count ( ) , is ( NUMBER ) ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING ) ; org.springframework.statemachine.data.jpa.JpaRepositoryState . setEntryActions ( new java.util.HashSet <> ( java.util.Arrays . java.util.List ( org.springframework.statemachine.data.jpa.JpaRepositoryAction , org.springframework.statemachine.data.jpa.JpaRepositoryAction ) ) ) ; org.springframework.statemachine.data.jpa.JpaRepositoryState . setExitActions ( new java.util.HashSet <> ( java.util.Arrays . java.util.List ( org.springframework.statemachine.data.jpa.JpaRepositoryAction , org.springframework.statemachine.data.jpa.JpaRepositoryAction ) ) ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING ) ; org.springframework.statemachine.data.jpa.JpaRepositoryState . setParentState ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; org.springframework.statemachine.data.jpa.JpaRepositoryState . setStateActions ( new java.util.HashSet <> ( java.util.Arrays . java.util.List ( org.springframework.statemachine.data.jpa.JpaRepositoryAction , org.springframework.statemachine.data.jpa.JpaRepositoryAction ) ) ) ; JpaRepositoryState org.springframework.statemachine.data.jpa.JpaRepositoryState = new JpaRepositoryState ( STRING ) ; org.springframework.statemachine.data.jpa.JpaRepositoryState . setParentState ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; org.springframework.statemachine.data.jpa.JpaRepositoryState . setExitActions ( new java.util.HashSet <> ( java.util.Arrays . java.util.List ( org.springframework.statemachine.data.jpa.JpaRepositoryAction , org.springframework.statemachine.data.jpa.JpaRepositoryAction ) ) ) ; org.springframework.statemachine.data.jpa.JpaStateRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; org.springframework.statemachine.data.jpa.JpaStateRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; org.springframework.statemachine.data.jpa.JpaStateRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryState ) ; JpaRepositoryTransition org.springframework.statemachine.data.jpa.JpaRepositoryTransition = new JpaRepositoryTransition ( org.springframework.statemachine.data.jpa.JpaRepositoryState , org.springframework.statemachine.data.jpa.JpaRepositoryState , STRING ) ; org.springframework.statemachine.data.jpa.JpaRepositoryTransition . setActions ( new java.util.HashSet <> ( java.util.Arrays . java.util.List ( org.springframework.statemachine.data.jpa.JpaRepositoryAction , org.springframework.statemachine.data.jpa.JpaRepositoryAction ) ) ) ; org.springframework.statemachine.data.jpa.JpaTransitionRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaTransitionRepository . count ( ) , is ( NUMBER ) ) ; JpaRepositoryTransition org.springframework.statemachine.data.jpa.JpaRepositoryTransition = new JpaRepositoryTransition ( org.springframework.statemachine.data.jpa.JpaRepositoryState , org.springframework.statemachine.data.jpa.JpaRepositoryState , STRING ) ; org.springframework.statemachine.data.jpa.JpaRepositoryTransition . setActions ( new java.util.HashSet <> ( java.util.Arrays . java.util.List ( org.springframework.statemachine.data.jpa.JpaRepositoryAction , org.springframework.statemachine.data.jpa.JpaRepositoryAction ) ) ) ; org.springframework.statemachine.data.jpa.JpaTransitionRepository . save ( org.springframework.statemachine.data.jpa.JpaRepositoryTransition ) ; assertThat ( org.springframework.statemachine.data.jpa.JpaTransitionRepository . count ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.data.jpa.AnnotationConfigApplicationContext org.springframework.statemachine.data.jpa.AnnotationConfigApplicationContext ( ) { return new AnnotationConfigApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( ) { return new java.lang.Class<?> < ? > [] { org.springframework.statemachine.data.jpa.JpaRepositoryTests.TestConfig .class } ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { context . register ( org.springframework.statemachine.data.jpa.JpaRepositoryTests.TestConfig .class , org.springframework.statemachine.data.jpa.JpaRepositoryTests.WireConfig .class ) ; context . refresh ( ) ; }  <METHOD_END>
