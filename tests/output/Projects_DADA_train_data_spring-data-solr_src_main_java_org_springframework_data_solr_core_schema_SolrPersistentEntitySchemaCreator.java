<METHOD_START> public void ( SolrClientFactory org.springframework.data.solr.core.schema.SolrClientFactory ) { this( org.springframework.data.solr.core.schema.SolrClientFactory , null ); }  <METHOD_END>
<METHOD_START> public void ( SolrClientFactory org.springframework.data.solr.core.schema.SolrClientFactory , SolrSchemaWriter org.springframework.data.solr.core.schema.SolrSchemaWriter ) { super(); this . org.springframework.data.solr.core.schema.SolrClientFactory = org.springframework.data.solr.core.schema.SolrClientFactory ; this . org.springframework.data.solr.core.schema.SolrSchemaWriter = org.springframework.data.solr.core.schema.SolrSchemaWriter != null ? org.springframework.data.solr.core.schema.SolrSchemaWriter : new SolrSchemaWriter ( this . org.springframework.data.solr.core.schema.SolrClientFactory ) ; this . org.springframework.data.solr.core.schema.SolrSchemaResolver = new SolrSchemaResolver ( ) ; this . java.util.concurrent.ConcurrentHashMap<java.lang.Class<?>,java.lang.Class<?>> = new java.util.concurrent.ConcurrentHashMap<java.lang.Class<?>,java.lang.Class<?>> <> ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( SolrPersistentEntity < ? > org.springframework.data.solr.core.schema.SolrPersistentEntity<?> ) { SchemaDefinition org.springframework.data.solr.core.schema.SchemaDefinition = org.springframework.data.solr.core.schema.SolrSchemaResolver . resolveSchemaForEntity ( org.springframework.data.solr.core.schema.SolrPersistentEntity<> ) ; void ( org.springframework.data.solr.core.schema.SolrPersistentEntity<> , org.springframework.data.solr.core.schema.SchemaDefinition ) ; org.springframework.data.solr.core.schema.SolrSchemaWriter . writeSchema ( org.springframework.data.solr.core.schema.SchemaDefinition ) ; void ( org.springframework.data.solr.core.schema.SolrPersistentEntity<> , org.springframework.data.solr.core.schema.SchemaDefinition ) ; }  <METHOD_END>
<METHOD_START> protected void void ( SolrPersistentEntity < ? > org.springframework.data.solr.core.schema.SolrPersistentEntity<?> , SchemaDefinition org.springframework.data.solr.core.schema.SchemaDefinition ) { }  <METHOD_END>
<METHOD_START> protected void void ( SolrPersistentEntity < ? > org.springframework.data.solr.core.schema.SolrPersistentEntity<?> , SchemaDefinition org.springframework.data.solr.core.schema.SchemaDefinition ) { java.util.concurrent.ConcurrentHashMap<java.lang.Class<?>,java.lang.Class<?>> . java.lang.Class<?> ( org.springframework.data.solr.core.schema.SolrPersistentEntity<> . getType ( ) , org.springframework.data.solr.core.schema.SolrPersistentEntity<> . getType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MappingContextEvent < ? , ? > org.springframework.data.solr.core.schema.MappingContextEvent<?,?> ) { if ( java.util.Set<org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature> . boolean ( org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature . org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature ) ) { if ( org.springframework.data.solr.core.schema.MappingContextEvent<,> . getPersistentEntity ( ) instanceof SolrPersistentEntity ) { SolrPersistentEntity < ? > org.springframework.data.solr.core.schema.SolrPersistentEntity<?> = ( SolrPersistentEntity < ? > ) org.springframework.data.solr.core.schema.MappingContextEvent<,> . getPersistentEntity ( ) ; if ( ! java.util.concurrent.ConcurrentHashMap<java.lang.Class<?>,java.lang.Class<?>> . boolean ( org.springframework.data.solr.core.schema.SolrPersistentEntity<> . getType ( ) ) ) { void ( org.springframework.data.solr.core.schema.SolrPersistentEntity<> ) ; } } } }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator ( org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature ) { if ( org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature != null ) { this . java.util.Set<org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature> . boolean ( org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator ( java.util.Collection<org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature> < org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature > java.util.Collection<org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature> ) { if ( ! CollectionUtils . isEmpty ( java.util.Collection<org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature> ) ) { this . java.util.Set<org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature> . boolean ( java.util.Collection<org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator ( org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature ) { java.util.Set<org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature> . boolean ( org.springframework.data.solr.core.schema.SolrPersistentEntitySchemaCreator.Feature ) ; return this ; }  <METHOD_END>
