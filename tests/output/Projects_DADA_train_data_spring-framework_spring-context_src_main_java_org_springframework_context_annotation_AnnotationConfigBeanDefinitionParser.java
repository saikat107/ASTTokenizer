<METHOD_START> @ java.lang.Override public org.springframework.context.annotation.BeanDefinition org.springframework.context.annotation.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.context.annotation.ParserContext ) { java.lang.Object java.lang.Object = org.springframework.context.annotation.ParserContext . extractSource ( org.w3c.dom.Element ) ; java.util.Set<org.springframework.context.annotation.BeanDefinitionHolder> < BeanDefinitionHolder > java.util.Set<org.springframework.context.annotation.BeanDefinitionHolder> = AnnotationConfigUtils . registerAnnotationConfigProcessors ( org.springframework.context.annotation.ParserContext . getRegistry ( ) , java.lang.Object ) ; CompositeComponentDefinition org.springframework.context.annotation.CompositeComponentDefinition = new CompositeComponentDefinition ( org.w3c.dom.Element . java.lang.String ( ) , java.lang.Object ) ; org.springframework.context.annotation.ParserContext . pushContainingComponent ( org.springframework.context.annotation.CompositeComponentDefinition ) ; for ( BeanDefinitionHolder org.springframework.context.annotation.BeanDefinitionHolder : java.util.Set<org.springframework.context.annotation.BeanDefinitionHolder> ) { org.springframework.context.annotation.ParserContext . registerComponent ( new BeanComponentDefinition ( org.springframework.context.annotation.BeanDefinitionHolder ) ) ; } org.springframework.context.annotation.ParserContext . popAndRegisterContainingComponent ( ) ; return null ; }  <METHOD_END>
