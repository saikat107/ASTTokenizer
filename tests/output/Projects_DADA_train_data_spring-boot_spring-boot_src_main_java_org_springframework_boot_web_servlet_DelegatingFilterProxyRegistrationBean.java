<METHOD_START> public void ( java.lang.String java.lang.String , org.springframework.boot.web.servlet.ServletRegistrationBean<?> < ? > ... org.springframework.boot.web.servlet.ServletRegistrationBean<?>[] ) { super( org.springframework.boot.web.servlet.ServletRegistrationBean<?>[] ); Assert . hasLength ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; setName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.boot.web.servlet.ApplicationContext )			throws org.springframework.boot.web.servlet.BeansException { this . org.springframework.boot.web.servlet.ApplicationContext = org.springframework.boot.web.servlet.ApplicationContext ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.web.servlet.DelegatingFilterProxy org.springframework.boot.web.servlet.DelegatingFilterProxy ( ) { return new DelegatingFilterProxy ( this . java.lang.String , org.springframework.boot.web.servlet.WebApplicationContext ( ) ) { @ java.lang.Override protected void void ( ) org.springframework.boot.web.servlet.ServletException { } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) org.springframework.boot.web.servlet.ServletException { }  <METHOD_END>
<METHOD_START> private org.springframework.boot.web.servlet.WebApplicationContext org.springframework.boot.web.servlet.WebApplicationContext ( ) { Assert . notNull ( this . org.springframework.boot.web.servlet.ApplicationContext , STRING ) ; Assert . isInstanceOf ( WebApplicationContext .class , this . org.springframework.boot.web.servlet.ApplicationContext ) ; return ( WebApplicationContext ) this . org.springframework.boot.web.servlet.ApplicationContext ; }  <METHOD_END>
