<METHOD_START> public static int [] int[] ( final ParsedSql org.springframework.jdbc.core.namedparam.ParsedSql , final SqlParameterSource [] org.springframework.jdbc.core.namedparam.SqlParameterSource[] , JdbcOperations org.springframework.jdbc.core.namedparam.JdbcOperations ) { if ( batchArgs . length <= NUMBER ) { return new int [] { NUMBER } ; } java.lang.String java.lang.String = NamedParameterUtils . substituteNamedParameters ( org.springframework.jdbc.core.namedparam.ParsedSql , org.springframework.jdbc.core.namedparam.SqlParameterSource[] [ NUMBER ] ) ; return org.springframework.jdbc.core.namedparam.JdbcOperations . batchUpdate ( java.lang.String , new BatchPreparedStatementSetter ( ) { @ java.lang.Override public void void ( java.sql.PreparedStatement java.sql.PreparedStatement , int int ) throws java.sql.SQLException { java.lang.Object [] java.lang.Object[] = NamedParameterUtils . buildValueArray ( org.springframework.jdbc.core.namedparam.ParsedSql , org.springframework.jdbc.core.namedparam.SqlParameterSource[] [ int ] , null ) ; int [] int[] = NamedParameterUtils . buildSqlTypeArray ( org.springframework.jdbc.core.namedparam.ParsedSql , org.springframework.jdbc.core.namedparam.SqlParameterSource[] [ int ] ) ; setStatementParameters ( java.lang.Object[] , java.sql.PreparedStatement , int[] ) ; } @ java.lang.Override public int int ( ) { return batchArgs . length ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.sql.PreparedStatement java.sql.PreparedStatement , int int ) throws java.sql.SQLException { java.lang.Object [] java.lang.Object[] = NamedParameterUtils . buildValueArray ( org.springframework.jdbc.core.namedparam.ParsedSql , org.springframework.jdbc.core.namedparam.SqlParameterSource[] [ int ] , null ) ; int [] int[] = NamedParameterUtils . buildSqlTypeArray ( org.springframework.jdbc.core.namedparam.ParsedSql , org.springframework.jdbc.core.namedparam.SqlParameterSource[] [ int ] ) ; setStatementParameters ( java.lang.Object[] , java.sql.PreparedStatement , int[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return batchArgs . length ; }  <METHOD_END>
