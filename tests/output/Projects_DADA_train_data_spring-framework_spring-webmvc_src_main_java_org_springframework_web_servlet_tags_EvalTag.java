<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.web.servlet.tags.Expression = this . org.springframework.web.servlet.tags.ExpressionParser . parseExpression ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . int = TagUtils . getScope ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) throws org.springframework.web.servlet.tags.JspException { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) org.springframework.web.servlet.tags.JspException { return EVAL_BODY_INCLUDE ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) org.springframework.web.servlet.tags.JspException { EvaluationContext org.springframework.web.servlet.tags.EvaluationContext = ( EvaluationContext ) this . pageContext . getAttribute ( java.lang.String ) ; if ( org.springframework.web.servlet.tags.EvaluationContext == null ) { org.springframework.web.servlet.tags.EvaluationContext = org.springframework.web.servlet.tags.EvaluationContext ( this . pageContext ) ; this . pageContext . setAttribute ( java.lang.String , org.springframework.web.servlet.tags.EvaluationContext ) ; } if ( this . java.lang.String != null ) { java.lang.Object java.lang.Object = this . org.springframework.web.servlet.tags.Expression . getValue ( org.springframework.web.servlet.tags.EvaluationContext ) ; this . pageContext . setAttribute ( this . java.lang.String , java.lang.Object , this . int ) ; } else { try { java.lang.String java.lang.String = this . org.springframework.web.servlet.tags.Expression . getValue ( org.springframework.web.servlet.tags.EvaluationContext , java.lang.String .class ) ; java.lang.String = ObjectUtils . getDisplayString ( java.lang.String ) ; java.lang.String = htmlEscape ( java.lang.String ) ; java.lang.String = ( this . boolean ? JavaScriptUtils . javaScriptEscape ( java.lang.String ) : java.lang.String ) ; this . pageContext . getOut ( ) . print ( java.lang.String ) ; } catch ( java.io.IOException java.io.IOException ) { throw new JspException ( java.io.IOException ) ; } } return EVAL_PAGE ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.servlet.tags.EvaluationContext org.springframework.web.servlet.tags.EvaluationContext ( PageContext org.springframework.web.servlet.tags.PageContext ) { StandardEvaluationContext org.springframework.web.servlet.tags.StandardEvaluationContext = new StandardEvaluationContext ( ) ; org.springframework.web.servlet.tags.StandardEvaluationContext . addPropertyAccessor ( new org.springframework.web.servlet.tags.EvalTag.JspPropertyAccessor ( org.springframework.web.servlet.tags.PageContext ) ) ; org.springframework.web.servlet.tags.StandardEvaluationContext . addPropertyAccessor ( new MapAccessor ( ) ) ; org.springframework.web.servlet.tags.StandardEvaluationContext . addPropertyAccessor ( new EnvironmentAccessor ( ) ) ; org.springframework.web.servlet.tags.StandardEvaluationContext . setBeanResolver ( new BeanFactoryResolver ( getRequestContext ( ) . getWebApplicationContext ( ) ) ) ; ConversionService org.springframework.web.servlet.tags.ConversionService = org.springframework.web.servlet.tags.ConversionService ( org.springframework.web.servlet.tags.PageContext ) ; if ( org.springframework.web.servlet.tags.ConversionService != null ) { org.springframework.web.servlet.tags.StandardEvaluationContext . setTypeConverter ( new StandardTypeConverter ( org.springframework.web.servlet.tags.ConversionService ) ) ; } return org.springframework.web.servlet.tags.StandardEvaluationContext ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.servlet.tags.ConversionService org.springframework.web.servlet.tags.ConversionService ( PageContext org.springframework.web.servlet.tags.PageContext ) { return ( ConversionService ) org.springframework.web.servlet.tags.PageContext . getRequest ( ) . getAttribute ( ConversionService .class . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( PageContext org.springframework.web.servlet.tags.PageContext ) { this . org.springframework.web.servlet.tags.PageContext = org.springframework.web.servlet.tags.PageContext ; this . javax.servlet.jsp.el.VariableResolver = org.springframework.web.servlet.tags.PageContext . getVariableResolver ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( EvaluationContext org.springframework.web.servlet.tags.EvaluationContext , java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.web.servlet.tags.AccessException { return ( java.lang.Object == null && ( java.lang.Object ( java.lang.String ) != null || this . org.springframework.web.servlet.tags.PageContext . findAttribute ( java.lang.String ) != null ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.tags.TypedValue org.springframework.web.servlet.tags.TypedValue ( EvaluationContext org.springframework.web.servlet.tags.EvaluationContext , java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.web.servlet.tags.AccessException { java.lang.Object java.lang.Object = java.lang.Object ( java.lang.String ) ; if ( java.lang.Object != null ) { return new TypedValue ( java.lang.Object ) ; } return new TypedValue ( this . org.springframework.web.servlet.tags.PageContext . findAttribute ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( EvaluationContext org.springframework.web.servlet.tags.EvaluationContext , java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( EvaluationContext org.springframework.web.servlet.tags.EvaluationContext , java.lang.Object java.lang.Object , java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) throws org.springframework.web.servlet.tags.AccessException { if ( this . javax.servlet.jsp.el.VariableResolver == null ) { return null ; } try { return this . javax.servlet.jsp.el.VariableResolver . resolveVariable ( java.lang.String ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new AccessException ( STRING + java.lang.String + STRING , java.lang.Exception ) ; } }  <METHOD_END>
