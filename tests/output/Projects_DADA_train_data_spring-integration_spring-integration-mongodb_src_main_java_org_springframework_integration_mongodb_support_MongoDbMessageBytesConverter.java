<METHOD_START> @ java.lang.Override public java.util.Set<org.springframework.integration.mongodb.support.ConvertiblePair> < ConvertiblePair > java.util.Set<org.springframework.integration.mongodb.support.ConvertiblePair> ( ) { java.util.Set<org.springframework.integration.mongodb.support.ConvertiblePair> < ConvertiblePair > java.util.Set<org.springframework.integration.mongodb.support.ConvertiblePair> = new java.util.HashSet<org.springframework.integration.mongodb.support.ConvertiblePair> <> ( ) ; java.util.Set<org.springframework.integration.mongodb.support.ConvertiblePair> . add ( new ConvertiblePair ( Message .class , Binary .class ) ) ; java.util.Set<org.springframework.integration.mongodb.support.ConvertiblePair> . add ( new ConvertiblePair ( Binary .class , Message .class ) ) ; return java.util.Set<org.springframework.integration.mongodb.support.ConvertiblePair> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , TypeDescriptor org.springframework.integration.mongodb.support.TypeDescriptor , TypeDescriptor org.springframework.integration.mongodb.support.TypeDescriptor ) { if ( Message .class . boolean ( org.springframework.integration.mongodb.support.TypeDescriptor . getObjectType ( ) ) ) { return new Binary ( this . org.springframework.integration.mongodb.support.Converter<java.lang.Object,byte[]> . convert ( java.lang.Object ) ) ; } else { return this . org.springframework.integration.mongodb.support.Converter<byte[],java.lang.Object> . convert ( ( ( Binary ) java.lang.Object ) . getData ( ) ) ; } }  <METHOD_END>
