<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( RequestCondition < ? > org.springframework.web.servlet.mvc.condition.RequestCondition<?> ) { this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> = ( RequestCondition < java.lang.Object > ) org.springframework.web.servlet.mvc.condition.RequestCondition<> ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.mvc.condition.RequestCondition<?> < ? > org.springframework.web.servlet.mvc.condition.RequestCondition<?> ( ) { return this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Collection<?> < ? > java.util.Collection<?> ( ) { return ( this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> != null ? java.util.Collections . java.util.Set ( this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> ) : java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.condition.RequestConditionHolder org.springframework.web.servlet.mvc.condition.RequestConditionHolder ( org.springframework.web.servlet.mvc.condition.RequestConditionHolder org.springframework.web.servlet.mvc.condition.RequestConditionHolder ) { if ( this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> == null && org.springframework.web.servlet.mvc.condition.RequestConditionHolder . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> == null ) { return this ; } else if ( this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> == null ) { return org.springframework.web.servlet.mvc.condition.RequestConditionHolder ; } else if ( org.springframework.web.servlet.mvc.condition.RequestConditionHolder . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> == null ) { return this ; } else { void ( org.springframework.web.servlet.mvc.condition.RequestConditionHolder ) ; RequestCondition < ? > org.springframework.web.servlet.mvc.condition.RequestCondition<?> = ( RequestCondition < ? > ) this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> . combine ( org.springframework.web.servlet.mvc.condition.RequestConditionHolder . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> ) ; return new org.springframework.web.servlet.mvc.condition.RequestConditionHolder ( org.springframework.web.servlet.mvc.condition.RequestCondition<> ) ; } }  <METHOD_END>
<METHOD_START> private void void ( org.springframework.web.servlet.mvc.condition.RequestConditionHolder org.springframework.web.servlet.mvc.condition.RequestConditionHolder ) { java.lang.Class<?> < ? > java.lang.Class<?> = this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> . getClass ( ) ; java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.web.servlet.mvc.condition.RequestConditionHolder . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> . getClass ( ) ; if ( ! java.lang.Class<> . boolean ( java.lang.Class<> ) ) { throw new java.lang.ClassCastException ( STRING + java.lang.Class<> + STRING + java.lang.Class<> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.condition.RequestConditionHolder org.springframework.web.servlet.mvc.condition.RequestConditionHolder ( HttpServletRequest org.springframework.web.servlet.mvc.condition.HttpServletRequest ) { if ( this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> == null ) { return this ; } RequestCondition < ? > org.springframework.web.servlet.mvc.condition.RequestCondition<?> = ( RequestCondition < ? > ) this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> . getMatchingCondition ( org.springframework.web.servlet.mvc.condition.HttpServletRequest ) ; return ( org.springframework.web.servlet.mvc.condition.RequestCondition<> != null ? new org.springframework.web.servlet.mvc.condition.RequestConditionHolder ( org.springframework.web.servlet.mvc.condition.RequestCondition<> ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( org.springframework.web.servlet.mvc.condition.RequestConditionHolder org.springframework.web.servlet.mvc.condition.RequestConditionHolder , HttpServletRequest org.springframework.web.servlet.mvc.condition.HttpServletRequest ) { if ( this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> == null && org.springframework.web.servlet.mvc.condition.RequestConditionHolder . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> == null ) { return NUMBER ; } else if ( this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> == null ) { return NUMBER ; } else if ( org.springframework.web.servlet.mvc.condition.RequestConditionHolder . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> == null ) { return - NUMBER ; } else { void ( org.springframework.web.servlet.mvc.condition.RequestConditionHolder ) ; return this . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> . compareTo ( org.springframework.web.servlet.mvc.condition.RequestConditionHolder . org.springframework.web.servlet.mvc.condition.RequestCondition<java.lang.Object> , org.springframework.web.servlet.mvc.condition.HttpServletRequest ) ; } }  <METHOD_END>
