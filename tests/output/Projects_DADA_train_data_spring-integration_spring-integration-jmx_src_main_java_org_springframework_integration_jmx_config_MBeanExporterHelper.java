<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.integration.jmx.config.BeansException { if ( STRING . boolean ( java.lang.String ) ) { @ java.lang.SuppressWarnings ( STRING ) java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = ( java.util.Collection<java.lang.String> < java.lang.String > ) new DirectFieldAccessor ( java.lang.Object ) . getPropertyValue ( STRING ) ; this . java.util.Set<java.lang.String> . boolean ( java.util.Collection<java.lang.String> ) ; if ( ! this . java.util.List<org.springframework.integration.jmx.config.MBeanExporter> . isEmpty ( ) ) { for ( java.lang.String java.lang.String : java.util.Collection<java.lang.String> ) { for ( MBeanExporter org.springframework.integration.jmx.config.MBeanExporter : this . java.util.List<org.springframework.integration.jmx.config.MBeanExporter> ) { org.springframework.integration.jmx.config.MBeanExporter . addExcludedBean ( java.lang.String ) ; } } } } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.integration.jmx.config.BeansException { if ( AnnotatedElementUtils . isAnnotated ( AopUtils . getTargetClass ( java.lang.Object ) , IntegrationManagedResource .class . java.lang.String ( ) ) ) { this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; if ( ! this . java.util.List<org.springframework.integration.jmx.config.MBeanExporter> . isEmpty ( ) ) { for ( MBeanExporter org.springframework.integration.jmx.config.MBeanExporter : this . java.util.List<org.springframework.integration.jmx.config.MBeanExporter> ) { org.springframework.integration.jmx.config.MBeanExporter . addExcludedBean ( java.lang.String ) ; } } } if ( java.lang.Object instanceof MBeanExporter && ! ( java.lang.Object instanceof IntegrationMBeanExporter ) ) { MBeanExporter org.springframework.integration.jmx.config.MBeanExporter = ( MBeanExporter ) java.lang.Object ; this . java.util.List<org.springframework.integration.jmx.config.MBeanExporter> . add ( org.springframework.integration.jmx.config.MBeanExporter ) ; for ( java.lang.String java.lang.String : this . java.util.Set<java.lang.String> ) { org.springframework.integration.jmx.config.MBeanExporter . addExcludedBean ( java.lang.String ) ; } } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return Ordered . HIGHEST_PRECEDENCE ; }  <METHOD_END>
