<METHOD_START> public void void ( MessageSource < ? > org.springframework.integration.config.MessageSource<?> ) { this . org.springframework.integration.config.MessageSource<?> = org.springframework.integration.config.MessageSource<> ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . java.lang.Long = long ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.integration.config.MessageChannel ) { this . org.springframework.integration.config.MessageChannel = org.springframework.integration.config.MessageChannel ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( PollerMetadata org.springframework.integration.config.PollerMetadata ) { this . org.springframework.integration.config.PollerMetadata = org.springframework.integration.config.PollerMetadata ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( DestinationResolver < MessageChannel > org.springframework.integration.config.DestinationResolver<org.springframework.integration.config.MessageChannel> ) { Assert . notNull ( org.springframework.integration.config.DestinationResolver<org.springframework.integration.config.MessageChannel> , STRING ) ; this . org.springframework.integration.config.DestinationResolver<org.springframework.integration.config.MessageChannel> = org.springframework.integration.config.DestinationResolver<org.springframework.integration.config.MessageChannel> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.config.BeanFactory ) { Assert . isInstanceOf ( ConfigurableBeanFactory .class , org.springframework.integration.config.BeanFactory , STRING ) ; this . org.springframework.integration.config.ConfigurableBeanFactory = ( ConfigurableBeanFactory ) org.springframework.integration.config.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( this . org.springframework.integration.config.DestinationResolver<org.springframework.integration.config.MessageChannel> == null ) { this . org.springframework.integration.config.DestinationResolver<org.springframework.integration.config.MessageChannel> = new BeanFactoryMessageChannelDestinationResolver ( this . org.springframework.integration.config.ConfigurableBeanFactory ) ; } void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.config.SourcePollingChannelAdapter org.springframework.integration.config.SourcePollingChannelAdapter ( ) java.lang.Exception { if ( this . org.springframework.integration.config.SourcePollingChannelAdapter == null ) { void ( ) ; } return this . org.springframework.integration.config.SourcePollingChannelAdapter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return SourcePollingChannelAdapter .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> private void void ( ) { synchronized ( this . java.lang.Object ) { if ( this . boolean ) { return; } Assert . notNull ( this . org.springframework.integration.config.MessageSource<> , STRING ) ; if ( StringUtils . hasText ( this . java.lang.String ) ) { Assert . isNull ( this . org.springframework.integration.config.MessageChannel , STRING ) ; this . org.springframework.integration.config.MessageChannel = this . org.springframework.integration.config.DestinationResolver<org.springframework.integration.config.MessageChannel> . resolveDestination ( this . java.lang.String ) ; } Assert . notNull ( this . org.springframework.integration.config.MessageChannel , STRING ) ; SourcePollingChannelAdapter org.springframework.integration.config.SourcePollingChannelAdapter = new SourcePollingChannelAdapter ( ) ; org.springframework.integration.config.SourcePollingChannelAdapter . setSource ( this . org.springframework.integration.config.MessageSource<> ) ; org.springframework.integration.config.SourcePollingChannelAdapter . setOutputChannel ( this . org.springframework.integration.config.MessageChannel ) ; if ( this . org.springframework.integration.config.PollerMetadata == null ) { this . org.springframework.integration.config.PollerMetadata = PollerMetadata . getDefaultPollerMetadata ( this . org.springframework.integration.config.ConfigurableBeanFactory ) ; Assert . notNull ( this . org.springframework.integration.config.PollerMetadata , STRING + this . java.lang.String + STRING ) ; } if ( this . org.springframework.integration.config.PollerMetadata . getMaxMessagesPerPoll ( ) == java.lang.Integer . int ) { this . org.springframework.integration.config.PollerMetadata . setMaxMessagesPerPoll ( NUMBER ) ; } org.springframework.integration.config.SourcePollingChannelAdapter . setMaxMessagesPerPoll ( this . org.springframework.integration.config.PollerMetadata . getMaxMessagesPerPoll ( ) ) ; if ( this . java.lang.Long != null ) { org.springframework.integration.config.SourcePollingChannelAdapter . setSendTimeout ( this . java.lang.Long ) ; } org.springframework.integration.config.SourcePollingChannelAdapter . setTaskExecutor ( this . org.springframework.integration.config.PollerMetadata . getTaskExecutor ( ) ) ; org.springframework.integration.config.SourcePollingChannelAdapter . setAdviceChain ( this . org.springframework.integration.config.PollerMetadata . getAdviceChain ( ) ) ; org.springframework.integration.config.SourcePollingChannelAdapter . setTrigger ( this . org.springframework.integration.config.PollerMetadata . getTrigger ( ) ) ; org.springframework.integration.config.SourcePollingChannelAdapter . setErrorHandler ( this . org.springframework.integration.config.PollerMetadata . getErrorHandler ( ) ) ; org.springframework.integration.config.SourcePollingChannelAdapter . setBeanClassLoader ( this . java.lang.ClassLoader ) ; org.springframework.integration.config.SourcePollingChannelAdapter . setAutoStartup ( this . boolean ) ; org.springframework.integration.config.SourcePollingChannelAdapter . setPhase ( this . int ) ; org.springframework.integration.config.SourcePollingChannelAdapter . setBeanName ( this . java.lang.String ) ; org.springframework.integration.config.SourcePollingChannelAdapter . setBeanFactory ( this . org.springframework.integration.config.ConfigurableBeanFactory ) ; org.springframework.integration.config.SourcePollingChannelAdapter . setTransactionSynchronizationFactory ( this . org.springframework.integration.config.PollerMetadata . getTransactionSynchronizationFactory ( ) ) ; org.springframework.integration.config.SourcePollingChannelAdapter . afterPropertiesSet ( ) ; this . org.springframework.integration.config.SourcePollingChannelAdapter = org.springframework.integration.config.SourcePollingChannelAdapter ; this . boolean = true ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ( this . org.springframework.integration.config.SourcePollingChannelAdapter == null ) || this . org.springframework.integration.config.SourcePollingChannelAdapter . isAutoStartup ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ( this . org.springframework.integration.config.SourcePollingChannelAdapter != null ) ? this . org.springframework.integration.config.SourcePollingChannelAdapter . getPhase ( ) : NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ( this . org.springframework.integration.config.SourcePollingChannelAdapter != null ) && this . org.springframework.integration.config.SourcePollingChannelAdapter . isRunning ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.integration.config.SourcePollingChannelAdapter != null ) { this . org.springframework.integration.config.SourcePollingChannelAdapter . start ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.integration.config.SourcePollingChannelAdapter != null ) { this . org.springframework.integration.config.SourcePollingChannelAdapter . stop ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Runnable java.lang.Runnable ) { if ( this . org.springframework.integration.config.SourcePollingChannelAdapter != null ) { this . org.springframework.integration.config.SourcePollingChannelAdapter . stop ( java.lang.Runnable ) ; } }  <METHOD_END>
