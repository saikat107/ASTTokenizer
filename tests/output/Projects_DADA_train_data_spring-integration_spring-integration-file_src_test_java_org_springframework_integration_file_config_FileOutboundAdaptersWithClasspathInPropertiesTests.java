<METHOD_START> @ Test public void void ( ) java.lang.Exception { DirectFieldAccessor org.springframework.integration.file.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.file.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) ; java.io.File java.io.File = new ClassPathResource ( STRING ) . getFile ( ) ; Expression org.springframework.integration.file.config.Expression = ( Expression ) org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; java.io.File java.io.File = new java.io.File ( org.springframework.integration.file.config.Expression . getExpressionString ( ) ) ; assertEquals ( STRING , java.io.File , java.io.File ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DirectFieldAccessor org.springframework.integration.file.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.file.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) ; java.io.File java.io.File = new ClassPathResource ( STRING ) . getFile ( ) ; Expression org.springframework.integration.file.config.Expression = ( Expression ) org.springframework.integration.file.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; java.io.File java.io.File = new java.io.File ( org.springframework.integration.file.config.Expression . getExpressionString ( ) ) ; assertEquals ( STRING , java.io.File , java.io.File ) ; }  <METHOD_END>
