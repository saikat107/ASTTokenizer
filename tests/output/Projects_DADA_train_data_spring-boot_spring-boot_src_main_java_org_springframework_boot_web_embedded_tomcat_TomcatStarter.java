<METHOD_START> void ( ServletContextInitializer [] org.springframework.boot.web.embedded.tomcat.ServletContextInitializer[] ) { this . org.springframework.boot.web.embedded.tomcat.ServletContextInitializer[] = org.springframework.boot.web.embedded.tomcat.ServletContextInitializer[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> , ServletContext org.springframework.boot.web.embedded.tomcat.ServletContext )			throws org.springframework.boot.web.embedded.tomcat.ServletException { try { for ( ServletContextInitializer org.springframework.boot.web.embedded.tomcat.ServletContextInitializer : this . org.springframework.boot.web.embedded.tomcat.ServletContextInitializer[] ) { org.springframework.boot.web.embedded.tomcat.ServletContextInitializer . onStartup ( org.springframework.boot.web.embedded.tomcat.ServletContext ) ; } } catch ( java.lang.Exception java.lang.Exception ) { this . java.lang.Exception = java.lang.Exception ; if ( org.springframework.boot.web.embedded.tomcat.Log . isErrorEnabled ( ) ) { org.springframework.boot.web.embedded.tomcat.Log . error ( STRING + java.lang.Exception . java.lang.Class<? extends java.lang.Exception> ( ) . java.lang.String ( ) + STRING + java.lang.Exception . java.lang.String ( ) ) ; } } }  <METHOD_END>
<METHOD_START> public java.lang.Exception java.lang.Exception ( ) { return this . java.lang.Exception ; }  <METHOD_END>
