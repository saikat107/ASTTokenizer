<METHOD_START> @ Test public void void ( ) java.lang.Exception { StaticApplicationContext org.springframework.web.servlet.view.xslt.StaticApplicationContext = new StaticApplicationContext ( ) ; java.lang.String java.lang.String = ClassUtils . classPackageAsResourcePath ( java.lang.Class<? extends org.springframework.web.servlet.view.xslt.XsltViewResolverTests> ( ) ) ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; XsltViewResolver org.springframework.web.servlet.view.xslt.XsltViewResolver = new XsltViewResolver ( ) ; org.springframework.web.servlet.view.xslt.XsltViewResolver . setPrefix ( java.lang.String ) ; org.springframework.web.servlet.view.xslt.XsltViewResolver . setSuffix ( java.lang.String ) ; org.springframework.web.servlet.view.xslt.XsltViewResolver . setApplicationContext ( org.springframework.web.servlet.view.xslt.StaticApplicationContext ) ; XsltView org.springframework.web.servlet.view.xslt.XsltView = ( XsltView ) org.springframework.web.servlet.view.xslt.XsltViewResolver . resolveViewName ( java.lang.String , java.util.Locale . java.util.Locale ) ; assertNotNull ( STRING , org.springframework.web.servlet.view.xslt.XsltView ) ; assertEquals ( STRING , java.lang.String + java.lang.String + java.lang.String , org.springframework.web.servlet.view.xslt.XsltView . getUrl ( ) ) ; }  <METHOD_END>
