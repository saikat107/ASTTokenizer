<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public static < T > T T ( EvaluationContext org.springframework.expression.common.EvaluationContext , TypedValue org.springframework.expression.common.TypedValue , java.lang.Class<T> < T > java.lang.Class<T> ) { java.lang.Object java.lang.Object = org.springframework.expression.common.TypedValue . getValue ( ) ; if ( java.lang.Class<T> == null ) { return ( T ) java.lang.Object ; } if ( org.springframework.expression.common.EvaluationContext != null ) { return ( T ) org.springframework.expression.common.EvaluationContext . getTypeConverter ( ) . convertValue ( java.lang.Object , org.springframework.expression.common.TypedValue . getTypeDescriptor ( ) , TypeDescriptor . valueOf ( java.lang.Class<T> ) ) ; } if ( ClassUtils . isAssignableValue ( java.lang.Class<T> , java.lang.Object ) ) { return ( T ) java.lang.Object ; } throw new EvaluationException ( STRING + java.lang.Object + STRING + java.lang.Class<T> . java.lang.String ( ) + STRING ) ; }  <METHOD_END>
<METHOD_START> public static int int ( TypeConverter org.springframework.expression.common.TypeConverter , TypedValue org.springframework.expression.common.TypedValue ) { return ( java.lang.Integer ) org.springframework.expression.common.TypeConverter . convertValue ( org.springframework.expression.common.TypedValue . getValue ( ) , org.springframework.expression.common.TypedValue . getTypeDescriptor ( ) , TypeDescriptor . valueOf ( java.lang.Integer .class ) ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( TypeConverter org.springframework.expression.common.TypeConverter , TypedValue org.springframework.expression.common.TypedValue ) { return ( java.lang.Boolean ) org.springframework.expression.common.TypeConverter . convertValue ( org.springframework.expression.common.TypedValue . getValue ( ) , org.springframework.expression.common.TypedValue . getTypeDescriptor ( ) , TypeDescriptor . valueOf ( java.lang.Boolean .class ) ) ; }  <METHOD_END>
<METHOD_START> public static double double ( TypeConverter org.springframework.expression.common.TypeConverter , TypedValue org.springframework.expression.common.TypedValue ) { return ( java.lang.Double ) org.springframework.expression.common.TypeConverter . convertValue ( org.springframework.expression.common.TypedValue . getValue ( ) , org.springframework.expression.common.TypedValue . getTypeDescriptor ( ) , TypeDescriptor . valueOf ( java.lang.Double .class ) ) ; }  <METHOD_END>
<METHOD_START> public static long long ( TypeConverter org.springframework.expression.common.TypeConverter , TypedValue org.springframework.expression.common.TypedValue ) { return ( java.lang.Long ) org.springframework.expression.common.TypeConverter . convertValue ( org.springframework.expression.common.TypedValue . getValue ( ) , org.springframework.expression.common.TypedValue . getTypeDescriptor ( ) , TypeDescriptor . valueOf ( java.lang.Long .class ) ) ; }  <METHOD_END>
<METHOD_START> public static char char ( TypeConverter org.springframework.expression.common.TypeConverter , TypedValue org.springframework.expression.common.TypedValue ) { return ( java.lang.Character ) org.springframework.expression.common.TypeConverter . convertValue ( org.springframework.expression.common.TypedValue . getValue ( ) , org.springframework.expression.common.TypedValue . getTypeDescriptor ( ) , TypeDescriptor . valueOf ( java.lang.Character .class ) ) ; }  <METHOD_END>
<METHOD_START> public static short short ( TypeConverter org.springframework.expression.common.TypeConverter , TypedValue org.springframework.expression.common.TypedValue ) { return ( java.lang.Short ) org.springframework.expression.common.TypeConverter . convertValue ( org.springframework.expression.common.TypedValue . getValue ( ) , org.springframework.expression.common.TypedValue . getTypeDescriptor ( ) , TypeDescriptor . valueOf ( java.lang.Short .class ) ) ; }  <METHOD_END>
<METHOD_START> public static float float ( TypeConverter org.springframework.expression.common.TypeConverter , TypedValue org.springframework.expression.common.TypedValue ) { return ( java.lang.Float ) org.springframework.expression.common.TypeConverter . convertValue ( org.springframework.expression.common.TypedValue . getValue ( ) , org.springframework.expression.common.TypedValue . getTypeDescriptor ( ) , TypeDescriptor . valueOf ( java.lang.Float .class ) ) ; }  <METHOD_END>
<METHOD_START> public static byte byte ( TypeConverter org.springframework.expression.common.TypeConverter , TypedValue org.springframework.expression.common.TypedValue ) { return ( java.lang.Byte ) org.springframework.expression.common.TypeConverter . convertValue ( org.springframework.expression.common.TypedValue . getValue ( ) , org.springframework.expression.common.TypedValue . getTypeDescriptor ( ) , TypeDescriptor . valueOf ( java.lang.Byte .class ) ) ; }  <METHOD_END>
