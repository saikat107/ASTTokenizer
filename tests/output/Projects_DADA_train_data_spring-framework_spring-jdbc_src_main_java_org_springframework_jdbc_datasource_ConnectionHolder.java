<METHOD_START> public void ( ConnectionHandle org.springframework.jdbc.datasource.ConnectionHandle ) { Assert . notNull ( org.springframework.jdbc.datasource.ConnectionHandle , STRING ) ; this . org.springframework.jdbc.datasource.ConnectionHandle = org.springframework.jdbc.datasource.ConnectionHandle ; }  <METHOD_END>
<METHOD_START> public void ( java.sql.Connection java.sql.Connection ) { this . org.springframework.jdbc.datasource.ConnectionHandle = new SimpleConnectionHandle ( java.sql.Connection ) ; }  <METHOD_END>
<METHOD_START> public void ( java.sql.Connection java.sql.Connection , boolean boolean ) { this( java.sql.Connection ); this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.jdbc.datasource.ConnectionHandle org.springframework.jdbc.datasource.ConnectionHandle ( ) { return this . org.springframework.jdbc.datasource.ConnectionHandle ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return ( this . org.springframework.jdbc.datasource.ConnectionHandle != null ) ; }  <METHOD_END>
<METHOD_START> protected void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> protected void void ( java.sql.Connection java.sql.Connection ) { if ( this . java.sql.Connection != null ) { this . org.springframework.jdbc.datasource.ConnectionHandle . releaseConnection ( this . java.sql.Connection ) ; this . java.sql.Connection = null ; } if ( java.sql.Connection != null ) { this . org.springframework.jdbc.datasource.ConnectionHandle = new SimpleConnectionHandle ( java.sql.Connection ) ; } else { this . org.springframework.jdbc.datasource.ConnectionHandle = null ; } }  <METHOD_END>
<METHOD_START> public java.sql.Connection java.sql.Connection ( ) { Assert . notNull ( this . org.springframework.jdbc.datasource.ConnectionHandle , STRING ) ; if ( this . java.sql.Connection == null ) { this . java.sql.Connection = this . org.springframework.jdbc.datasource.ConnectionHandle . getConnection ( ) ; } return this . java.sql.Connection ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) java.sql.SQLException { if ( this . java.lang.Boolean == null ) { this . java.lang.Boolean = java.sql.Connection ( ) . java.sql.DatabaseMetaData ( ) . boolean ( ) ; } return this . java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.sql.Savepoint java.sql.Savepoint ( ) java.sql.SQLException { this . int ++ ; return java.sql.Connection ( ) . java.sql.Savepoint ( java.lang.String + this . int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. released ( ) ; if ( ! isOpen ( ) && this . java.sql.Connection != null ) { this . org.springframework.jdbc.datasource.ConnectionHandle . releaseConnection ( this . java.sql.Connection ) ; this . java.sql.Connection = null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. clear ( ) ; this . boolean = false ; this . java.lang.Boolean = null ; this . int = NUMBER ; }  <METHOD_END>
