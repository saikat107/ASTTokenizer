<METHOD_START> @ Test public void void ( ) java.lang.Exception { Role org.springframework.data.jpa.repository.Role = new Role ( STRING ) ; Role org.springframework.data.jpa.repository.Role = org.springframework.data.jpa.repository.RoleRepository . save ( org.springframework.data.jpa.repository.Role ) ; assertThat ( org.springframework.data.jpa.repository.Role , is ( org.springframework.data.jpa.repository.Role ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Role org.springframework.data.jpa.repository.Role = new Role ( STRING ) ; Role org.springframework.data.jpa.repository.Role = org.springframework.data.jpa.repository.RoleRepository . save ( org.springframework.data.jpa.repository.Role ) ; assertThat ( org.springframework.data.jpa.repository.Role , is ( org.springframework.data.jpa.repository.Role ) ) ; ReflectionTestUtils . setField ( org.springframework.data.jpa.repository.Role , STRING , STRING ) ; org.springframework.data.jpa.repository.RoleRepository . save ( org.springframework.data.jpa.repository.Role ) ; assertThat ( org.springframework.data.jpa.repository.RoleRepository . findOne ( org.springframework.data.jpa.repository.Role . getId ( ) ) , is ( java.util.Optional . java.util.Optional ( org.springframework.data.jpa.repository.Role ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Role org.springframework.data.jpa.repository.Role = new Role ( STRING ) ; org.springframework.data.jpa.repository.RoleRepository . save ( org.springframework.data.jpa.repository.Role ) ; assertThat ( org.springframework.data.jpa.repository.RoleRepository . count ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Role org.springframework.data.jpa.repository.Role = new Role ( STRING ) ; org.springframework.data.jpa.repository.Role = org.springframework.data.jpa.repository.RoleRepository . save ( org.springframework.data.jpa.repository.Role ) ; assertThat ( org.springframework.data.jpa.repository.RoleRepository . exists ( org.springframework.data.jpa.repository.Role . getId ( ) ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Role org.springframework.data.jpa.repository.Role = new Role ( STRING ) ; org.springframework.data.jpa.repository.Role = org.springframework.data.jpa.repository.RoleRepository . save ( org.springframework.data.jpa.repository.Role ) ; assertThat ( org.springframework.data.jpa.repository.RoleRepository . countByName ( org.springframework.data.jpa.repository.Role . getName ( ) ) , is ( NUMBER ) ) ; }  <METHOD_END>
