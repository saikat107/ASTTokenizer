<METHOD_START> public void ( RedisConnectionFactory org.springframework.integration.redis.outbound.RedisConnectionFactory ) { Assert . notNull ( org.springframework.integration.redis.outbound.RedisConnectionFactory , STRING ) ; this . org.springframework.integration.redis.outbound.RedisTemplate<?,?> = new RedisTemplate < java.lang.Object , java.lang.Object > ( ) ; this . org.springframework.integration.redis.outbound.RedisTemplate<,> . setConnectionFactory ( org.springframework.integration.redis.outbound.RedisConnectionFactory ) ; this . org.springframework.integration.redis.outbound.RedisTemplate<,> . setEnableDefaultSerializer ( false ) ; this . org.springframework.integration.redis.outbound.RedisTemplate<,> . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( RedisSerializer < ? > org.springframework.integration.redis.outbound.RedisSerializer<?> ) { Assert . notNull ( org.springframework.integration.redis.outbound.RedisSerializer<> , STRING ) ; this . org.springframework.integration.redis.outbound.RedisSerializer<?> = org.springframework.integration.redis.outbound.RedisSerializer<> ; }  <METHOD_END>
<METHOD_START> public void void ( MessageConverter org.springframework.integration.redis.outbound.MessageConverter ) { Assert . notNull ( org.springframework.integration.redis.outbound.MessageConverter , STRING ) ; this . org.springframework.integration.redis.outbound.MessageConverter = org.springframework.integration.redis.outbound.MessageConverter ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . void ( new LiteralExpression ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( Expression org.springframework.integration.redis.outbound.Expression ) { Assert . notNull ( org.springframework.integration.redis.outbound.Expression , STRING ) ; this . org.springframework.integration.redis.outbound.Expression = org.springframework.integration.redis.outbound.Expression ; }  <METHOD_END>
<METHOD_START> public void void ( EvaluationContext org.springframework.integration.redis.outbound.EvaluationContext ) { this . org.springframework.integration.redis.outbound.EvaluationContext = org.springframework.integration.redis.outbound.EvaluationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { Assert . notNull ( this . org.springframework.integration.redis.outbound.Expression , STRING ) ; if ( this . org.springframework.integration.redis.outbound.MessageConverter instanceof BeanFactoryAware ) { ( ( BeanFactoryAware ) this . org.springframework.integration.redis.outbound.MessageConverter ) . setBeanFactory ( getBeanFactory ( ) ) ; } if ( this . org.springframework.integration.redis.outbound.EvaluationContext == null ) { this . org.springframework.integration.redis.outbound.EvaluationContext = ExpressionUtils . createStandardEvaluationContext ( getBeanFactory ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected void void ( Message < ? > org.springframework.integration.redis.outbound.Message<?> ) throws java.lang.Exception { java.lang.String java.lang.String = this . org.springframework.integration.redis.outbound.Expression . getValue ( this . org.springframework.integration.redis.outbound.EvaluationContext , org.springframework.integration.redis.outbound.Message<> , java.lang.String .class ) ; java.lang.Object java.lang.Object = this . org.springframework.integration.redis.outbound.MessageConverter . fromMessage ( org.springframework.integration.redis.outbound.Message<> , null ) ; if ( java.lang.Object instanceof byte [] ) { this . org.springframework.integration.redis.outbound.RedisTemplate<,> . convertAndSend ( java.lang.String , java.lang.Object ) ; } else { this . org.springframework.integration.redis.outbound.RedisTemplate<,> . convertAndSend ( java.lang.String , ( ( RedisSerializer < java.lang.Object > ) this . org.springframework.integration.redis.outbound.RedisSerializer<> ) . serialize ( java.lang.Object ) ) ; } }  <METHOD_END>
