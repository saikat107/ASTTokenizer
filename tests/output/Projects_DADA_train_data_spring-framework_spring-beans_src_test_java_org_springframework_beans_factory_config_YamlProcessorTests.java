<METHOD_START> @ Test public void void ( ) { this . org.springframework.beans.factory.config.YamlProcessor . setResources ( new ByteArrayResource ( STRING . byte[] ( ) ) ) ; this . org.springframework.beans.factory.config.YamlProcessor . process ( new MatchCallback ( ) { @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Properties . java.lang.String ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.beans.factory.config.YamlProcessor . setResources ( new ByteArrayResource ( STRING . byte[] ( ) ) ) ; this . org.springframework.beans.factory.config.YamlProcessor . process ( new MatchCallback ( ) { @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.beans.factory.config.YamlProcessor . setResources ( new ByteArrayResource ( STRING . byte[] ( ) ) ) ; this . org.springframework.beans.factory.config.ExpectedException . expect ( ParserException .class ) ; this . org.springframework.beans.factory.config.ExpectedException . expectMessage ( STRING ) ; this . org.springframework.beans.factory.config.YamlProcessor . process ( new MatchCallback ( ) { @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) {			} } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) {			}  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.beans.factory.config.YamlProcessor . setResources ( new ByteArrayResource ( STRING . byte[] ( ) ) ) ; this . org.springframework.beans.factory.config.ExpectedException . expect ( ScannerException .class ) ; this . org.springframework.beans.factory.config.ExpectedException . expectMessage ( STRING ) ; this . org.springframework.beans.factory.config.YamlProcessor . process ( new MatchCallback ( ) { @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) {			} } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) {			}  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.beans.factory.config.YamlProcessor . setResources ( new ByteArrayResource ( STRING . byte[] ( ) ) ) ; this . org.springframework.beans.factory.config.YamlProcessor . process ( new MatchCallback ( ) { @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.beans.factory.config.YamlProcessor . setResources ( new ByteArrayResource ( STRING . byte[] ( ) ) ) ; this . org.springframework.beans.factory.config.YamlProcessor . process ( new MatchCallback ( ) { @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.beans.factory.config.YamlProcessor . setResources ( new ByteArrayResource ( STRING . byte[] ( ) ) ) ; this . org.springframework.beans.factory.config.YamlProcessor . process ( new MatchCallback ( ) { @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { this . org.springframework.beans.factory.config.YamlProcessor . setResources ( new ByteArrayResource ( STRING . byte[] ( ) ) ) ; this . org.springframework.beans.factory.config.YamlProcessor . process ( new MatchCallback ( ) { @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.beans.factory.config.YamlProcessor . getFlattenedMap ( java.util.Map<java.lang.String,java.lang.Object> ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,java.lang.Object> . int ( ) ) ; assertTrue ( java.util.Map<java.lang.String,java.lang.Object> instanceof java.util.LinkedHashMap ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Properties java.util.Properties , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { assertEquals ( STRING , java.util.Properties . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Properties . int ( ) ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.beans.factory.config.YamlProcessor . getFlattenedMap ( java.util.Map<java.lang.String,java.lang.Object> ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,java.lang.Object> . int ( ) ) ; assertTrue ( java.util.Map<java.lang.String,java.lang.Object> instanceof java.util.LinkedHashMap ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
