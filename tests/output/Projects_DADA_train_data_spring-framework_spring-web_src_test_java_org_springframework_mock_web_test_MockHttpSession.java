<METHOD_START> public void ( ) { this( null ); }  <METHOD_END>
<METHOD_START> public void ( ServletContext org.springframework.mock.web.test.ServletContext ) { this( org.springframework.mock.web.test.ServletContext , null ); }  <METHOD_END>
<METHOD_START> public void ( ServletContext org.springframework.mock.web.test.ServletContext , java.lang.String java.lang.String ) { this . org.springframework.mock.web.test.ServletContext = ( org.springframework.mock.web.test.ServletContext != null ? org.springframework.mock.web.test.ServletContext : new MockServletContext ( ) ) ; this . java.lang.String = ( java.lang.String != null ? java.lang.String : java.lang.Integer . java.lang.String ( int ++ ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { void ( ) ; return this . long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { this . java.lang.String = java.lang.Integer . java.lang.String ( int ++ ) ; return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . long = java.lang.System . long ( ) ; this . boolean = false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { void ( ) ; return this . long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.mock.web.test.ServletContext org.springframework.mock.web.test.ServletContext ( ) { return this . org.springframework.mock.web.test.ServletContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax . javax.servlet . javax.servlet . javax.servlet.http.HttpSessionContext javax.servlet.http.HttpSessionContext ( ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { void ( ) ; Assert . notNull ( java.lang.String , STRING ) ; return this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { return java.lang.Object ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Enumeration<java.lang.String> < java.lang.String > java.util.Enumeration<java.lang.String> ( ) { void ( ) ; return java.util.Collections . java.util.Enumeration<java.lang.String> ( new java.util.LinkedHashSet<java.lang.String> <> ( this . java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.lang.String> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { void ( ) ; return this . java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.lang.String> ( ) . java.lang.String[] ( new java.lang.String [ this . java.util.Map<java.lang.String,java.lang.Object> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { void ( ) ; Assert . notNull ( java.lang.String , STRING ) ; if ( java.lang.Object != null ) { this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; if ( java.lang.Object instanceof HttpSessionBindingListener ) { ( ( HttpSessionBindingListener ) java.lang.Object ) . valueBound ( new HttpSessionBindingEvent ( this , java.lang.String , java.lang.Object ) ) ; } } else { void ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { void ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { void ( ) ; Assert . notNull ( java.lang.String , STRING ) ; java.lang.Object java.lang.Object = this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; if ( java.lang.Object instanceof HttpSessionBindingListener ) { ( ( HttpSessionBindingListener ) java.lang.Object ) . valueUnbound ( new HttpSessionBindingEvent ( this , java.lang.String , java.lang.Object ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { for ( java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> < java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> = this . java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) . java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ; java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> . boolean ( ) ;) { java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> = java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> . java.util.Map.Entry<java.lang.String,java.lang.Object> ( ) ; java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) ; java.lang.Object java.lang.Object = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ; java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> . void ( ) ; if ( java.lang.Object instanceof HttpSessionBindingListener ) { ( ( HttpSessionBindingListener ) java.lang.Object ) . valueUnbound ( new HttpSessionBindingEvent ( this , java.lang.String , java.lang.Object ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; this . boolean = true ; void ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> private void void ( ) { Assert . state ( ! boolean ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { void ( ) ; return this . boolean ; }  <METHOD_END>
<METHOD_START> public java.io.Serializable java.io.Serializable ( ) { java.util.HashMap<java.lang.String,java.io.Serializable> < java.lang.String , java.io.Serializable > java.util.HashMap<java.lang.String,java.io.Serializable> = new java.util.HashMap<java.lang.String,java.io.Serializable> <> ( ) ; for ( java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> < java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> = this . java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) . java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ; java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> . boolean ( ) ;) { java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> = java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> . java.util.Map.Entry<java.lang.String,java.lang.Object> ( ) ; java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) ; java.lang.Object java.lang.Object = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ; java.util.Iterator<java.util.Map.Entry<java.lang.String,java.lang.Object>> . void ( ) ; if ( java.lang.Object instanceof java.io.Serializable ) { java.util.HashMap<java.lang.String,java.io.Serializable> . java.io.Serializable ( java.lang.String , ( java.io.Serializable ) java.lang.Object ) ; } else { if ( java.lang.Object instanceof HttpSessionBindingListener ) { ( ( HttpSessionBindingListener ) java.lang.Object ) . valueUnbound ( new HttpSessionBindingEvent ( this , java.lang.String , java.lang.Object ) ) ; } } } return java.util.HashMap<java.lang.String,java.io.Serializable> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( java.io.Serializable java.io.Serializable ) { Assert . isTrue ( java.io.Serializable instanceof java.util.Map , STRING ) ; this . java.util.Map<java.lang.String,java.lang.Object> . void ( ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.io.Serializable ) ; }  <METHOD_END>
