<METHOD_START> public void ( BaseClientDetails org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails , AuthenticationManager org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthenticationManager , ObjectProvider < TokenStore > org.springframework.boot.autoconfigure.security.oauth2.authserver.ObjectProvider<org.springframework.boot.autoconfigure.security.oauth2.authserver.TokenStore> , ObjectProvider < AccessTokenConverter > org.springframework.boot.autoconfigure.security.oauth2.authserver.ObjectProvider<org.springframework.boot.autoconfigure.security.oauth2.authserver.AccessTokenConverter> , AuthorizationServerProperties org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties ) { this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails = org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails ; this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthenticationManager = org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthenticationManager ; this . org.springframework.boot.autoconfigure.security.oauth2.authserver.TokenStore = org.springframework.boot.autoconfigure.security.oauth2.authserver.ObjectProvider<org.springframework.boot.autoconfigure.security.oauth2.authserver.TokenStore> . getIfAvailable ( ) ; this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AccessTokenConverter = org.springframework.boot.autoconfigure.security.oauth2.authserver.ObjectProvider<org.springframework.boot.autoconfigure.security.oauth2.authserver.AccessTokenConverter> . getIfAvailable ( ) ; this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties = org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ClientDetailsServiceConfigurer org.springframework.boot.autoconfigure.security.oauth2.authserver.ClientDetailsServiceConfigurer ) throws java.lang.Exception { ClientDetailsServiceBuilder < InMemoryClientDetailsServiceBuilder > . ClientDetailsServiceBuilder builder = org.springframework.boot.autoconfigure.security.oauth2.authserver.ClientDetailsServiceConfigurer . inMemory ( ) . withClient ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getClientId ( ) ) ; builder . secret ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getClientSecret ( ) ) . resourceIds ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getResourceIds ( ) . toArray ( new java.lang.String [ NUMBER ] ) ) . authorizedGrantTypes ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getAuthorizedGrantTypes ( ) . toArray ( new java.lang.String [ NUMBER ] ) ) . authorities ( AuthorityUtils . authorityListToSet ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getAuthorities ( ) ) . toArray ( new java.lang.String [ NUMBER ] ) ) . scopes ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getScope ( ) . toArray ( new java.lang.String [ NUMBER ] ) ) ; if ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getAutoApproveScopes ( ) != null ) { builder . autoApprove ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getAutoApproveScopes ( ) . toArray ( new java.lang.String [ NUMBER ] ) ) ; } if ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getAccessTokenValiditySeconds ( ) != null ) { builder . accessTokenValiditySeconds ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getAccessTokenValiditySeconds ( ) ) ; } if ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getRefreshTokenValiditySeconds ( ) != null ) { builder . refreshTokenValiditySeconds ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getRefreshTokenValiditySeconds ( ) ) ; } if ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getRegisteredRedirectUri ( ) != null ) { builder . redirectUris ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getRegisteredRedirectUri ( ) . toArray ( new java.lang.String [ NUMBER ] ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AuthorizationServerEndpointsConfigurer org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerEndpointsConfigurer )			throws java.lang.Exception { if ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AccessTokenConverter != null ) { org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerEndpointsConfigurer . accessTokenConverter ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AccessTokenConverter ) ; } if ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.TokenStore != null ) { org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerEndpointsConfigurer . tokenStore ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.TokenStore ) ; } if ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . getAuthorizedGrantTypes ( ) . contains ( STRING ) ) { org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerEndpointsConfigurer . authenticationManager ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthenticationManager ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AuthorizationServerSecurityConfigurer org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerSecurityConfigurer )			throws java.lang.Exception { if ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties . getCheckTokenAccess ( ) != null ) { org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerSecurityConfigurer . checkTokenAccess ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties . getCheckTokenAccess ( ) ) ; } if ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties . getTokenKeyAccess ( ) != null ) { org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerSecurityConfigurer . tokenKeyAccess ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties . getTokenKeyAccess ( ) ) ; } if ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties . getRealm ( ) != null ) { org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerSecurityConfigurer . realm ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties . getRealm ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected void ( OAuth2ClientProperties org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties ) { this . org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties = org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties ; }  <METHOD_END>
<METHOD_START> @ javax.annotation.PostConstruct public void void ( ) { java.lang.String java.lang.String = STRING ; boolean boolean = this . org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties . isDefaultSecret ( ) ; org.springframework.boot.autoconfigure.security.oauth2.authserver.Log . info ( java.lang.String . java.lang.String ( STRING , java.lang.String , this . org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties . getClientId ( ) , java.lang.String , boolean ? this . org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties . getClientSecret ( ) : STRING ) ) ; }  <METHOD_END>
<METHOD_START> protected void ( OAuth2ClientProperties org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties ) { this . org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties = org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConfigurationProperties ( prefix = STRING ) public org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails ( ) { BaseClientDetails org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails = new BaseClientDetails ( ) ; if ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties . getClientId ( ) == null ) { this . org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties . setClientId ( java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) ) ; } org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . setClientId ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties . getClientId ( ) ) ; org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . setClientSecret ( this . org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2ClientProperties . getClientSecret ( ) ) ; org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . setAuthorizedGrantTypes ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING , STRING , STRING ) ) ; org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . setAuthorities ( AuthorityUtils . commaSeparatedStringToAuthorityList ( STRING ) ) ; org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails . setRegisteredRedirectUri ( java.util.Collections .< java.lang.String > java.util.Set<java.lang.String> ( ) ) ; return org.springframework.boot.autoconfigure.security.oauth2.authserver.BaseClientDetails ; }  <METHOD_END>
