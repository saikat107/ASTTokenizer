<METHOD_START> @ Bean public org.springframework.data.jpa.repository.EvaluationContextExtension org.springframework.data.jpa.repository.EvaluationContextExtension ( ) { return new SampleEvaluationContextExtension ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.jpa.repository.UserRepository org.springframework.data.jpa.repository.UserRepository ( ) java.lang.Exception { ExtensionAwareEvaluationContextProvider org.springframework.data.jpa.repository.ExtensionAwareEvaluationContextProvider = new ExtensionAwareEvaluationContextProvider ( java.util.List<org.springframework.data.jpa.repository.EvaluationContextExtension> ) ; org.springframework.data.jpa.repository.ExtensionAwareEvaluationContextProvider . setApplicationContext ( org.springframework.data.jpa.repository.ApplicationContext ) ; JpaRepositoryFactoryBean < UserRepository , User , java.lang.Integer > org.springframework.data.jpa.repository.JpaRepositoryFactoryBean<org.springframework.data.jpa.repository.UserRepository,org.springframework.data.jpa.repository.User,java.lang.Integer> = new JpaRepositoryFactoryBean < UserRepository , User , java.lang.Integer > ( UserRepository .class ) ; org.springframework.data.jpa.repository.JpaRepositoryFactoryBean<org.springframework.data.jpa.repository.UserRepository,org.springframework.data.jpa.repository.User,java.lang.Integer> . setEntityManager ( org.springframework.data.jpa.repository.EntityManager ) ; org.springframework.data.jpa.repository.JpaRepositoryFactoryBean<org.springframework.data.jpa.repository.UserRepository,org.springframework.data.jpa.repository.User,java.lang.Integer> . setBeanFactory ( org.springframework.data.jpa.repository.ApplicationContext ) ; org.springframework.data.jpa.repository.JpaRepositoryFactoryBean<org.springframework.data.jpa.repository.UserRepository,org.springframework.data.jpa.repository.User,java.lang.Integer> . setCustomImplementation ( new UserRepositoryImpl ( new DefaultJpaContext ( java.util.Collections . java.util.Set ( org.springframework.data.jpa.repository.EntityManager ) ) ) ) ; org.springframework.data.jpa.repository.JpaRepositoryFactoryBean<org.springframework.data.jpa.repository.UserRepository,org.springframework.data.jpa.repository.User,java.lang.Integer> . setNamedQueries ( org.springframework.data.jpa.repository.NamedQueries ( ) ) ; org.springframework.data.jpa.repository.JpaRepositoryFactoryBean<org.springframework.data.jpa.repository.UserRepository,org.springframework.data.jpa.repository.User,java.lang.Integer> . setEvaluationContextProvider ( org.springframework.data.jpa.repository.ExtensionAwareEvaluationContextProvider ) ; org.springframework.data.jpa.repository.JpaRepositoryFactoryBean<org.springframework.data.jpa.repository.UserRepository,org.springframework.data.jpa.repository.User,java.lang.Integer> . afterPropertiesSet ( ) ; return org.springframework.data.jpa.repository.JpaRepositoryFactoryBean<org.springframework.data.jpa.repository.UserRepository,org.springframework.data.jpa.repository.User,java.lang.Integer> . getObject ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.jpa.repository.NamedQueries org.springframework.data.jpa.repository.NamedQueries ( ) java.io.IOException { PropertiesFactoryBean org.springframework.data.jpa.repository.PropertiesFactoryBean = new PropertiesFactoryBean ( ) ; org.springframework.data.jpa.repository.PropertiesFactoryBean . setLocation ( new ClassPathResource ( STRING ) ) ; org.springframework.data.jpa.repository.PropertiesFactoryBean . afterPropertiesSet ( ) ; return new PropertiesBasedNamedQueries ( org.springframework.data.jpa.repository.PropertiesFactoryBean . getObject ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = NoSuchBeanDefinitionException .class ) public void void ( ) { ConfigurableApplicationContext org.springframework.data.jpa.repository.ConfigurableApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.data.jpa.repository.JavaConfigUserRepositoryTests.JpaRepositoryConfig .class ) ; org.springframework.data.jpa.repository.ConfigurableApplicationContext . getBean ( STRING ) ; org.springframework.data.jpa.repository.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
