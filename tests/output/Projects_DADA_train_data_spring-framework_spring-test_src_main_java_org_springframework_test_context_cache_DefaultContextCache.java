<METHOD_START> public void ( ) { this( ContextCacheUtils . retrieveMaxCacheSize ( ) ); }  <METHOD_END>
<METHOD_START> public void ( int int ) { Assert . isTrue ( int > NUMBER , STRING ) ; this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration ) { Assert . notNull ( org.springframework.test.context.cache.MergedContextConfiguration , STRING ) ; return this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> . containsKey ( org.springframework.test.context.cache.MergedContextConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.context.cache.ApplicationContext org.springframework.test.context.cache.ApplicationContext ( MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration ) { Assert . notNull ( org.springframework.test.context.cache.MergedContextConfiguration , STRING ) ; ApplicationContext org.springframework.test.context.cache.ApplicationContext = this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> . get ( org.springframework.test.context.cache.MergedContextConfiguration ) ; if ( org.springframework.test.context.cache.ApplicationContext == null ) { this . java.util.concurrent.atomic.AtomicInteger . int ( ) ; } else { this . java.util.concurrent.atomic.AtomicInteger . int ( ) ; } return org.springframework.test.context.cache.ApplicationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration , ApplicationContext org.springframework.test.context.cache.ApplicationContext ) { Assert . notNull ( org.springframework.test.context.cache.MergedContextConfiguration , STRING ) ; Assert . notNull ( org.springframework.test.context.cache.ApplicationContext , STRING ) ; this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> . put ( org.springframework.test.context.cache.MergedContextConfiguration , org.springframework.test.context.cache.ApplicationContext ) ; MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration = org.springframework.test.context.cache.MergedContextConfiguration ; MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration = org.springframework.test.context.cache.MergedContextConfiguration . getParent ( ) ; while ( org.springframework.test.context.cache.MergedContextConfiguration != null ) { java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> < MergedContextConfiguration > java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> = this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration>> . get ( org.springframework.test.context.cache.MergedContextConfiguration ) ; if ( java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> == null ) { java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> = new java.util.HashSet <> ( ) ; this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration>> . put ( org.springframework.test.context.cache.MergedContextConfiguration , java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> ) ; } java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> . add ( org.springframework.test.context.cache.MergedContextConfiguration ) ; org.springframework.test.context.cache.MergedContextConfiguration = org.springframework.test.context.cache.MergedContextConfiguration ; org.springframework.test.context.cache.MergedContextConfiguration = org.springframework.test.context.cache.MergedContextConfiguration . getParent ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration , HierarchyMode org.springframework.test.context.cache.HierarchyMode ) { Assert . notNull ( org.springframework.test.context.cache.MergedContextConfiguration , STRING ) ; MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration = org.springframework.test.context.cache.MergedContextConfiguration ; if ( org.springframework.test.context.cache.HierarchyMode == HierarchyMode . EXHAUSTIVE ) { while ( org.springframework.test.context.cache.MergedContextConfiguration . getParent ( ) != null ) { org.springframework.test.context.cache.MergedContextConfiguration = org.springframework.test.context.cache.MergedContextConfiguration . getParent ( ) ; } } java.util.List<org.springframework.test.context.cache.MergedContextConfiguration> < MergedContextConfiguration > java.util.List<org.springframework.test.context.cache.MergedContextConfiguration> = new java.util.ArrayList<org.springframework.test.context.cache.MergedContextConfiguration> <> ( ) ; void ( java.util.List<org.springframework.test.context.cache.MergedContextConfiguration> , org.springframework.test.context.cache.MergedContextConfiguration ) ; for ( MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration : java.util.List<org.springframework.test.context.cache.MergedContextConfiguration> ) { for ( java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> < MergedContextConfiguration > java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> : this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration>> . values ( ) ) { java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> . remove ( org.springframework.test.context.cache.MergedContextConfiguration ) ; } } for ( MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration : this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration>> . keySet ( ) ) { if ( this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration>> . get ( org.springframework.test.context.cache.MergedContextConfiguration ) . isEmpty ( ) ) { this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration>> . remove ( org.springframework.test.context.cache.MergedContextConfiguration ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( java.util.List<org.springframework.test.context.cache.MergedContextConfiguration> < MergedContextConfiguration > java.util.List<org.springframework.test.context.cache.MergedContextConfiguration> , MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration ) { Assert . notNull ( org.springframework.test.context.cache.MergedContextConfiguration , STRING ) ; java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> < MergedContextConfiguration > java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> = this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration>> . get ( org.springframework.test.context.cache.MergedContextConfiguration ) ; if ( java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> != null ) { for ( MergedContextConfiguration org.springframework.test.context.cache.MergedContextConfiguration : java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration> ) { void ( java.util.List<org.springframework.test.context.cache.MergedContextConfiguration> , org.springframework.test.context.cache.MergedContextConfiguration ) ; } this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration>> . remove ( org.springframework.test.context.cache.MergedContextConfiguration ) ; } ApplicationContext org.springframework.test.context.cache.ApplicationContext = this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> . remove ( org.springframework.test.context.cache.MergedContextConfiguration ) ; if ( org.springframework.test.context.cache.ApplicationContext instanceof ConfigurableApplicationContext ) { ( ( ConfigurableApplicationContext ) org.springframework.test.context.cache.ApplicationContext ) . close ( ) ; } java.util.List<org.springframework.test.context.cache.MergedContextConfiguration> . add ( org.springframework.test.context.cache.MergedContextConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> . size ( ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration>> . size ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.concurrent.atomic.AtomicInteger . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.concurrent.atomic.AtomicInteger . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { synchronized ( this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> ) { void ( ) ; void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { synchronized ( this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> ) { this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> . clear ( ) ; this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,java.util.Set<org.springframework.test.context.cache.MergedContextConfiguration>> . clear ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { synchronized ( this . java.util.Map<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> ) { this . java.util.concurrent.atomic.AtomicInteger . void ( NUMBER ) ; this . java.util.concurrent.atomic.AtomicInteger . void ( NUMBER ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( org.springframework.test.context.cache.Log . isDebugEnabled ( ) ) { org.springframework.test.context.cache.Log . debug ( STRING + this ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return new ToStringCreator ( this ) . append ( STRING , int ( ) ) . append ( STRING , int ( ) ) . append ( STRING , int ( ) ) . append ( STRING , int ( ) ) . append ( STRING , int ( ) ) . toString ( ) ; }  <METHOD_END>
<METHOD_START> void ( int int , float float ) { super( int , float , true ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( java.util.Map . java.util.Map.Entry<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> < MergedContextConfiguration , ApplicationContext > java.util.Map.Entry<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> ) { if ( this . int ( ) > org.springframework.test.context.cache.DefaultContextCache .this . int ( ) ) { org.springframework.test.context.cache.DefaultContextCache .this . void ( java.util.Map.Entry<org.springframework.test.context.cache.MergedContextConfiguration,org.springframework.test.context.cache.ApplicationContext> . getKey ( ) , HierarchyMode . CURRENT_LEVEL ) ; } return false ; }  <METHOD_END>
