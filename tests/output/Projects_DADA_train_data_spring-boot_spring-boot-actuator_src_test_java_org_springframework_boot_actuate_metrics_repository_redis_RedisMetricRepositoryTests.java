<METHOD_START> @ Before public void void ( ) { this . java.lang.String = STRING + java.lang.System . long ( ) ; this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository = new RedisMetricRepository ( this . org.springframework.boot.actuate.metrics.repository.redis.RedisTestServer . getConnectionFactory ( ) , this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { assertThat ( new StringRedisTemplate ( this . org.springframework.boot.actuate.metrics.repository.redis.RedisTestServer . getConnectionFactory ( ) ) . opsForValue ( ) . get ( this . java.lang.String + STRING ) ) . isNotNull ( ) ; this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . reset ( STRING ) ; this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . reset ( STRING ) ; assertThat ( new StringRedisTemplate ( this . org.springframework.boot.actuate.metrics.repository.redis.RedisTestServer . getConnectionFactory ( ) ) . opsForValue ( ) . get ( this . java.lang.String + STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . set ( new Metric < java.lang.Number > ( STRING , NUMBER ) ) ; Metric < ? > org.springframework.boot.actuate.metrics.repository.redis.Metric<?> = this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . findOne ( STRING ) ; assertThat ( org.springframework.boot.actuate.metrics.repository.redis.Metric<> . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.actuate.metrics.repository.redis.Metric<> . getValue ( ) . doubleValue ( ) ) . isEqualTo ( NUMBER , offset ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . increment ( new Delta <> ( STRING , NUMBER ) ) ; assertThat ( this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . findOne ( STRING ) . getValue ( ) . longValue ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . set ( new Metric < java.lang.Number > ( STRING , NUMBER ) ) ; this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . increment ( new Delta <> ( STRING , NUMBER ) ) ; Metric < ? > org.springframework.boot.actuate.metrics.repository.redis.Metric<?> = this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . findOne ( STRING ) ; assertThat ( org.springframework.boot.actuate.metrics.repository.redis.Metric<> . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.actuate.metrics.repository.redis.Metric<> . getValue ( ) . doubleValue ( ) ) . isEqualTo ( NUMBER , offset ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . increment ( new Delta <> ( STRING , NUMBER ) ) ; this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . set ( new Metric < java.lang.Number > ( STRING , NUMBER ) ) ; assertThat ( Iterables . collection ( this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . findAll ( ) ) ) . hasSize ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . increment ( new Delta <> ( STRING , NUMBER ) ) ; Metric < ? > org.springframework.boot.actuate.metrics.repository.redis.Metric<?> = this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . findAll ( ) . iterator ( ) . next ( ) ; assertThat ( org.springframework.boot.actuate.metrics.repository.redis.Metric<> . getName ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . increment ( new Delta <> ( STRING , NUMBER ) ) ; this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . set ( new Metric < java.lang.Number > ( STRING , NUMBER ) ) ; assertThat ( this . org.springframework.boot.actuate.metrics.repository.redis.RedisMetricRepository . count ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
