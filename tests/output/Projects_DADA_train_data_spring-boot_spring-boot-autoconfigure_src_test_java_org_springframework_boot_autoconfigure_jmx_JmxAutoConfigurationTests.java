<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . close ( ) ; if ( this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . getParent ( ) != null ) { ( ( ConfigurableApplicationContext ) this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . getParent ( ) ) . close ( ) ; } } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . register ( JmxAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . refresh ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . getBean ( MBeanExporter .class ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MockEnvironment org.springframework.boot.autoconfigure.jmx.MockEnvironment = new MockEnvironment ( ) ; org.springframework.boot.autoconfigure.jmx.MockEnvironment . setProperty ( STRING , STRING ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . setEnvironment ( org.springframework.boot.autoconfigure.jmx.MockEnvironment ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . register ( JmxAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . refresh ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . getBean ( MBeanExporter .class ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = NoSuchBeanDefinitionException .class ) public void void ( ) { MockEnvironment org.springframework.boot.autoconfigure.jmx.MockEnvironment = new MockEnvironment ( ) ; org.springframework.boot.autoconfigure.jmx.MockEnvironment . setProperty ( STRING , STRING ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . setEnvironment ( org.springframework.boot.autoconfigure.jmx.MockEnvironment ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . register ( org.springframework.boot.autoconfigure.jmx.JmxAutoConfigurationTests.TestConfiguration .class , JmxAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . refresh ( ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . getBean ( MBeanExporter .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MockEnvironment org.springframework.boot.autoconfigure.jmx.MockEnvironment = new MockEnvironment ( ) ; org.springframework.boot.autoconfigure.jmx.MockEnvironment . setProperty ( STRING , STRING ) ; org.springframework.boot.autoconfigure.jmx.MockEnvironment . setProperty ( STRING , STRING ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . setEnvironment ( org.springframework.boot.autoconfigure.jmx.MockEnvironment ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . register ( org.springframework.boot.autoconfigure.jmx.JmxAutoConfigurationTests.TestConfiguration .class , JmxAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . refresh ( ) ; MBeanExporter org.springframework.boot.autoconfigure.jmx.MBeanExporter = this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . getBean ( MBeanExporter .class ) ; assertThat ( org.springframework.boot.autoconfigure.jmx.MBeanExporter ) . isNotNull ( ) ; MetadataNamingStrategy org.springframework.boot.autoconfigure.jmx.MetadataNamingStrategy = ( MetadataNamingStrategy ) ReflectionTestUtils . getField ( org.springframework.boot.autoconfigure.jmx.MBeanExporter , STRING ) ; assertThat ( ReflectionTestUtils . getField ( org.springframework.boot.autoconfigure.jmx.MetadataNamingStrategy , STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . register ( JmxAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . refresh ( ) ; AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext = this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . setParent ( org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . register ( JmxAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . register ( JmxAutoConfiguration .class , org.springframework.boot.autoconfigure.jmx.JmxAutoConfigurationTests.TestConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . refresh ( ) ; AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext = this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . setParent ( org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . register ( JmxAutoConfiguration .class , org.springframework.boot.autoconfigure.jmx.JmxAutoConfigurationTests.TestConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . register ( org.springframework.boot.autoconfigure.jmx.JmxAutoConfigurationTests.CustomJmxDomainConfiguration .class , JmxAutoConfiguration .class , IntegrationAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . refresh ( ) ; IntegrationMBeanExporter org.springframework.boot.autoconfigure.jmx.IntegrationMBeanExporter = this . org.springframework.boot.autoconfigure.jmx.AnnotationConfigApplicationContext . getBean ( IntegrationMBeanExporter .class ) ; DirectFieldAccessor org.springframework.boot.autoconfigure.jmx.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.boot.autoconfigure.jmx.IntegrationMBeanExporter ) ; assertThat ( org.springframework.boot.autoconfigure.jmx.DirectFieldAccessor . getPropertyValue ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jmx.JmxAutoConfigurationTests.TestConfiguration.Counter org.springframework.boot.autoconfigure.jmx.JmxAutoConfigurationTests.TestConfiguration.Counter ( ) { return new org.springframework.boot.autoconfigure.jmx.JmxAutoConfigurationTests.TestConfiguration.Counter ( ) ; }  <METHOD_END>
<METHOD_START> @ ManagedAttribute public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ ManagedOperation public void void ( ) { this . int ++ ; }  <METHOD_END>
