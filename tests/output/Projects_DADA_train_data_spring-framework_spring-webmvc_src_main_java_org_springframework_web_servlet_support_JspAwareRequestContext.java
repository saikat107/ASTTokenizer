<METHOD_START> public void ( PageContext org.springframework.web.servlet.support.PageContext ) { void ( org.springframework.web.servlet.support.PageContext , null ) ; }  <METHOD_END>
<METHOD_START> public void ( PageContext org.springframework.web.servlet.support.PageContext , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { void ( org.springframework.web.servlet.support.PageContext , java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> protected void void ( PageContext org.springframework.web.servlet.support.PageContext , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { if ( ! ( org.springframework.web.servlet.support.PageContext . getRequest ( ) instanceof HttpServletRequest ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . org.springframework.web.servlet.support.PageContext = org.springframework.web.servlet.support.PageContext ; void ( ( HttpServletRequest ) org.springframework.web.servlet.support.PageContext . getRequest ( ) , ( HttpServletResponse ) org.springframework.web.servlet.support.PageContext . getResponse ( ) , org.springframework.web.servlet.support.PageContext . getServletContext ( ) , java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.web.servlet.support.PageContext org.springframework.web.servlet.support.PageContext ( ) { return this . org.springframework.web.servlet.support.PageContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Locale java.util.Locale ( ) { if ( jstlPresent ) { java.util.Locale java.util.Locale = org.springframework.web.servlet.support.JspAwareRequestContext.JstlPageLocaleResolver . java.util.Locale ( org.springframework.web.servlet.support.PageContext ( ) ) ; if ( java.util.Locale != null ) { return java.util.Locale ; } } return getRequest ( ) . getLocale ( ) ; }  <METHOD_END>
<METHOD_START> public static java.util.Locale java.util.Locale ( PageContext org.springframework.web.servlet.support.PageContext ) { java.lang.Object java.lang.Object = Config . find ( org.springframework.web.servlet.support.PageContext , Config . FMT_LOCALE ) ; return ( java.lang.Object instanceof java.util.Locale ? ( java.util.Locale ) java.lang.Object : null ) ; }  <METHOD_END>
