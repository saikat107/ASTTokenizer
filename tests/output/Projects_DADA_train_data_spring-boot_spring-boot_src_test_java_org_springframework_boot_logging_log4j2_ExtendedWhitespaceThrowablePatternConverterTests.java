<METHOD_START> @ Test public void void ( ) java.lang.Exception { LogEvent org.springframework.boot.logging.log4j2.LogEvent = Log4jLogEvent . newBuilder ( ) . build ( ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; this . org.springframework.boot.logging.log4j2.ThrowablePatternConverter . format ( org.springframework.boot.logging.log4j2.LogEvent , java.lang.StringBuilder ) ; assertThat ( java.lang.StringBuilder . java.lang.String ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LogEvent org.springframework.boot.logging.log4j2.LogEvent = Log4jLogEvent . newBuilder ( ) . setThrown ( new java.lang.Exception ( ) ) . build ( ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; this . org.springframework.boot.logging.log4j2.ThrowablePatternConverter . format ( org.springframework.boot.logging.log4j2.LogEvent , java.lang.StringBuilder ) ; assertThat ( java.lang.StringBuilder ) . startsWith ( java.lang.String ) . endsWith ( java.lang.String ) ; }  <METHOD_END>
