<METHOD_START> public void ( Codec org.springframework.integration.transformer.Codec , java.lang.Class<T> < T > java.lang.Class<T> ) { Assert . notNull ( org.springframework.integration.transformer.Codec , STRING ) ; Assert . notNull ( java.lang.Class<T> , STRING ) ; this . org.springframework.integration.transformer.Codec = org.springframework.integration.transformer.Codec ; this . java.lang.Class<T> = java.lang.Class<T> ; this . org.springframework.integration.transformer.Expression = null ; }  <METHOD_END>
<METHOD_START> public void ( Codec org.springframework.integration.transformer.Codec , Expression org.springframework.integration.transformer.Expression ) { Assert . notNull ( org.springframework.integration.transformer.Codec , STRING ) ; Assert . notNull ( org.springframework.integration.transformer.Expression , STRING ) ; this . org.springframework.integration.transformer.Codec = org.springframework.integration.transformer.Codec ; this . java.lang.Class<T> = null ; this . org.springframework.integration.transformer.Expression = org.springframework.integration.transformer.Expression ; }  <METHOD_END>
<METHOD_START> public void void ( StandardEvaluationContext org.springframework.integration.transformer.StandardEvaluationContext ) { this . org.springframework.integration.transformer.StandardEvaluationContext = org.springframework.integration.transformer.StandardEvaluationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { if ( this . org.springframework.integration.transformer.StandardEvaluationContext == null ) { this . org.springframework.integration.transformer.StandardEvaluationContext = IntegrationContextUtils . getEvaluationContext ( getBeanFactory ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected T T ( Message < ? > org.springframework.integration.transformer.Message<?> ) throws java.lang.Exception { Assert . isTrue ( org.springframework.integration.transformer.Message<> . getPayload ( ) instanceof byte [] , STRING ) ; byte [] byte[] = ( byte [] ) org.springframework.integration.transformer.Message<> . getPayload ( ) ; return this . org.springframework.integration.transformer.Codec . decode ( byte[] , this . java.lang.Class<T> != null ? this . java.lang.Class<T> : java.lang.Class<T> ( org.springframework.integration.transformer.Message<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private java.lang.Class<T> < T > java.lang.Class<T> ( Message < ? > org.springframework.integration.transformer.Message<?> ) { Assert . state ( this . org.springframework.integration.transformer.StandardEvaluationContext != null , STRING ) ; return this . org.springframework.integration.transformer.Expression . getValue ( this . org.springframework.integration.transformer.StandardEvaluationContext , org.springframework.integration.transformer.Message<> , java.lang.Class .class ) ; }  <METHOD_END>
