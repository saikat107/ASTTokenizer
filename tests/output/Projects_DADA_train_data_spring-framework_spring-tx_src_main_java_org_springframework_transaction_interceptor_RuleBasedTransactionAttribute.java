<METHOD_START> public void ( ) { super(); }  <METHOD_END>
<METHOD_START> public void ( org.springframework.transaction.interceptor.RuleBasedTransactionAttribute org.springframework.transaction.interceptor.RuleBasedTransactionAttribute ) { super( org.springframework.transaction.interceptor.RuleBasedTransactionAttribute ); this . java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> = new java.util.ArrayList <> ( org.springframework.transaction.interceptor.RuleBasedTransactionAttribute . java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> ) ; }  <METHOD_END>
<METHOD_START> public void ( int int , java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> < RollbackRuleAttribute > java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> ) { super( int ); this . java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> = java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> < RollbackRuleAttribute > java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> ) { this . java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> = java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> < RollbackRuleAttribute > java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> ( ) { if ( this . java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> == null ) { this . java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> = new java.util.LinkedList <> ( ) ; } return this . java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Throwable java.lang.Throwable ) { if ( org.springframework.transaction.interceptor.Log . isTraceEnabled ( ) ) { org.springframework.transaction.interceptor.Log . trace ( STRING + java.lang.Throwable ) ; } RollbackRuleAttribute org.springframework.transaction.interceptor.RollbackRuleAttribute = null ; int int = java.lang.Integer . int ; if ( this . java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> != null ) { for ( RollbackRuleAttribute org.springframework.transaction.interceptor.RollbackRuleAttribute : this . java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> ) { int int = org.springframework.transaction.interceptor.RollbackRuleAttribute . getDepth ( java.lang.Throwable ) ; if ( int >= NUMBER && int < int ) { int = int ; org.springframework.transaction.interceptor.RollbackRuleAttribute = org.springframework.transaction.interceptor.RollbackRuleAttribute ; } } } if ( org.springframework.transaction.interceptor.Log . isTraceEnabled ( ) ) { org.springframework.transaction.interceptor.Log . trace ( STRING + org.springframework.transaction.interceptor.RollbackRuleAttribute ) ; } if ( org.springframework.transaction.interceptor.RollbackRuleAttribute == null ) { org.springframework.transaction.interceptor.Log . trace ( STRING ) ; return super. rollbackOn ( java.lang.Throwable ) ; } return ! ( org.springframework.transaction.interceptor.RollbackRuleAttribute instanceof NoRollbackRuleAttribute ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = getAttributeDescription ( ) ; if ( this . java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> != null ) { for ( RollbackRuleAttribute org.springframework.transaction.interceptor.RollbackRuleAttribute : this . java.util.List<org.springframework.transaction.interceptor.RollbackRuleAttribute> ) { java.lang.String java.lang.String = ( org.springframework.transaction.interceptor.RollbackRuleAttribute instanceof NoRollbackRuleAttribute ? java.lang.String : java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( ',' ) . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( org.springframework.transaction.interceptor.RollbackRuleAttribute . getExceptionName ( ) ) ; } } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
