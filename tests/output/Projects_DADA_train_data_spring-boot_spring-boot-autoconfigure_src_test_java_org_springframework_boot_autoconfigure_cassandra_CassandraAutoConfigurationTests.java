<METHOD_START> @ After public void void ( ) java.lang.Exception { if ( this . org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . getBeanNamesForType ( Cluster .class ) . length ) . isEqualTo ( NUMBER ) ; Cluster org.springframework.boot.autoconfigure.cassandra.Cluster = this . org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . getBean ( Cluster .class ) ; assertThat ( org.springframework.boot.autoconfigure.cassandra.Cluster . getClusterName ( ) ) . startsWith ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . getBeanNamesForType ( Cluster .class ) . length ) . isEqualTo ( NUMBER ) ; Cluster org.springframework.boot.autoconfigure.cassandra.Cluster = this . org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . getBean ( Cluster .class ) ; assertThat ( org.springframework.boot.autoconfigure.cassandra.Cluster . getClusterName ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfigurationTests.MockCustomizerConfig .class ) ; assertThat ( this . org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . getBeanNamesForType ( Cluster .class ) . length ) . isEqualTo ( NUMBER ) ; assertThat ( this . org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . getBeanNamesForType ( ClusterBuilderCustomizer .class ) . length ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfigurationTests.SimpleCustomizerConfig .class , STRING ) ; assertThat ( this . org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . getBeanNamesForType ( Cluster .class ) . length ) . isEqualTo ( NUMBER ) ; Cluster org.springframework.boot.autoconfigure.cassandra.Cluster = this . org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . getBean ( Cluster .class ) ; assertThat ( org.springframework.boot.autoconfigure.cassandra.Cluster . getClusterName ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String ... java.lang.String[] ) { void ( null , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String ... java.lang.String[] ) { AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; if ( java.lang.Class<> != null ) { org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . register ( java.lang.Class<> ) ; } org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . register ( PropertyPlaceholderAutoConfiguration .class , CassandraAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext , java.lang.String[] ) ; org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext . refresh ( ) ; this . org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.cassandra.AnnotationConfigApplicationContext ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.cassandra.ClusterBuilderCustomizer org.springframework.boot.autoconfigure.cassandra.ClusterBuilderCustomizer ( ) { return mock ( ClusterBuilderCustomizer .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.cassandra.ClusterBuilderCustomizer org.springframework.boot.autoconfigure.cassandra.ClusterBuilderCustomizer ( ) { return new ClusterBuilderCustomizer ( ) { @ java.lang.Override public void void ( Cluster . Cluster Cluster.Builder ) { Cluster.Builder . withClusterName ( STRING ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Cluster . Cluster Cluster.Builder ) { Cluster.Builder . withClusterName ( STRING ) ; }  <METHOD_END>
