<METHOD_START> public static void void ( ) { boolean = false ; }  <METHOD_END>
<METHOD_START> public void ( ) { this . org.springframework.tests.sample.beans.TestBean = new TestBean ( ) ; this . org.springframework.tests.sample.beans.TestBean . setName ( java.lang.String ) ; this . org.springframework.tests.sample.beans.TestBean . setAge ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.tests.sample.beans.BeanFactory ) { this . org.springframework.tests.sample.beans.AutowireCapableBeanFactory = ( AutowireCapableBeanFactory ) org.springframework.tests.sample.beans.BeanFactory ; this . org.springframework.tests.sample.beans.AutowireCapableBeanFactory . applyBeanPostProcessorsBeforeInitialization ( this . org.springframework.tests.sample.beans.TestBean , this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.tests.sample.beans.BeanFactory org.springframework.tests.sample.beans.BeanFactory ( ) { return org.springframework.tests.sample.beans.AutowireCapableBeanFactory ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( TestBean org.springframework.tests.sample.beans.TestBean ) { this . org.springframework.tests.sample.beans.TestBean = org.springframework.tests.sample.beans.TestBean ; this . org.springframework.tests.sample.beans.TestBean . setSpouse ( org.springframework.tests.sample.beans.TestBean ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.tests.sample.beans.TestBean org.springframework.tests.sample.beans.TestBean ( ) { return org.springframework.tests.sample.beans.TestBean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( boolean ) { throw new java.lang.RuntimeException ( STRING ) ; } this . boolean = true ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ) org.springframework.tests.sample.beans.BeansException { if ( boolean ( ) ) { return this . org.springframework.tests.sample.beans.TestBean ; } else { TestBean org.springframework.tests.sample.beans.TestBean = new TestBean ( STRING + java.lang.System . long ( ) , NUMBER ) ; if ( this . org.springframework.tests.sample.beans.AutowireCapableBeanFactory != null ) { this . org.springframework.tests.sample.beans.AutowireCapableBeanFactory . applyBeanPostProcessorsBeforeInitialization ( org.springframework.tests.sample.beans.TestBean , this . java.lang.String ) ; } boolean = true ; return org.springframework.tests.sample.beans.TestBean ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return TestBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.tests.sample.beans.TestBean != null ) { this . org.springframework.tests.sample.beans.TestBean . setName ( null ) ; } }  <METHOD_END>
