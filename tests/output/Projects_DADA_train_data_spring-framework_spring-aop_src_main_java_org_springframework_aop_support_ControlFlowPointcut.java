<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this( java.lang.Class<> , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.Class<> , STRING ) ; this . java.lang.Class<?> = java.lang.Class<> ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Object ... java.lang.Object[] ) { this . int ++ ; for ( java.lang.StackTraceElement java.lang.StackTraceElement : new java.lang.Throwable ( ) . java.lang.StackTraceElement[] ( ) ) { if ( java.lang.StackTraceElement . java.lang.String ( ) . boolean ( this . java.lang.Class<> . java.lang.String ( ) ) && ( this . java.lang.String == null || java.lang.StackTraceElement . java.lang.String ( ) . boolean ( this . java.lang.String ) ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.support.ClassFilter org.springframework.aop.support.ClassFilter ( ) { return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.support.MethodMatcher org.springframework.aop.support.MethodMatcher ( ) { return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.aop.support.ControlFlowPointcut ) ) { return false ; } org.springframework.aop.support.ControlFlowPointcut org.springframework.aop.support.ControlFlowPointcut = ( org.springframework.aop.support.ControlFlowPointcut ) java.lang.Object ; return ( this . java.lang.Class<> . boolean ( org.springframework.aop.support.ControlFlowPointcut . java.lang.Class<> ) ) && ObjectUtils . nullSafeEquals ( org.springframework.aop.support.ControlFlowPointcut . java.lang.String , this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = this . java.lang.Class<> . int ( ) ; if ( this . java.lang.String != null ) { int = NUMBER * int + this . java.lang.String . int ( ) ; } return int ; }  <METHOD_END>
