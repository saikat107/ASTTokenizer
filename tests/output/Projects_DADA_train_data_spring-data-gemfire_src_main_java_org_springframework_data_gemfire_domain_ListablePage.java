<METHOD_START> @ java.lang.SafeVarargs public static < T > org.springframework.data.gemfire.domain.ListablePage<T> < T > org.springframework.data.gemfire.domain.ListablePage<T> ( T ... T[] ) { return new org.springframework.data.gemfire.domain.ListablePage<T> <> ( java.util.Arrays . java.util.List<T> ( T[] ) ) ; }  <METHOD_END>
<METHOD_START> public static < T > org.springframework.data.gemfire.domain.ListablePage<T> < T > org.springframework.data.gemfire.domain.ListablePage<T> ( java.util.List<T> < T > java.util.List<T> ) { return new org.springframework.data.gemfire.domain.ListablePage<T> <> ( java.util.List<T> ) ; }  <METHOD_END>
<METHOD_START> public void ( java.util.List<T> < T > java.util.List<T> ) { this . java.util.List<T> = java.util.Optional . java.util.Optional<java.util.List<T>> ( java.util.List<T> ) . java.util.List<T> ( java.util.Collections . java.util.List<T> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ! java.util.List<T> ( ) . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<T> < T > java.util.List<T> ( ) { return java.util.Collections . java.util.List<T> ( this . java.util.List<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.domain.Sort org.springframework.data.gemfire.domain.Sort ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return getSize ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<T> < T > java.util.Iterator<T> ( ) { return java.util.List<T> ( ) . java.util.Iterator<T> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < S > org.springframework.data.gemfire.domain.Page<S> < S > org.springframework.data.gemfire.domain.Page<S> ( java.util.function.Function<? super T,? extends S> < ? super T , ? extends S > java.util.function.Function<? super T,? extends S> ) { return org.springframework.data.gemfire.domain.ListablePage<> ( java.util.List<T> ( ) . java.util.stream.Stream<T> ( ) . java.util.stream.Stream<> ( java.util.function.Function<,> :: apply ) . java.util.List<> ( java.util.stream.Collectors . java.util.stream.Collector<,?,java.util.List<>> ( ) ) ) ; }  <METHOD_END>
