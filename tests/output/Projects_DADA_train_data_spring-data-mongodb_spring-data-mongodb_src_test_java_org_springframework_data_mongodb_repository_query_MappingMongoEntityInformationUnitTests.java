<METHOD_START> @ Before public void void ( ) { when ( org.springframework.data.mongodb.repository.query.MongoPersistentEntity<org.springframework.data.mongodb.repository.query.Person> . getType ( ) ) . thenReturn ( Person .class ) ; when ( org.springframework.data.mongodb.repository.query.MongoPersistentEntity<org.springframework.data.mongodb.repository.query.Person> . getCollection ( ) ) . thenReturn ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MongoEntityInformation < Person , java.lang.Long > org.springframework.data.mongodb.repository.query.MongoEntityInformation<org.springframework.data.mongodb.repository.query.Person,java.lang.Long> = new MappingMongoEntityInformation < Person , java.lang.Long > ( org.springframework.data.mongodb.repository.query.MongoPersistentEntity<org.springframework.data.mongodb.repository.query.Person> ) ; assertThat ( org.springframework.data.mongodb.repository.query.MongoEntityInformation<org.springframework.data.mongodb.repository.query.Person,java.lang.Long> . getCollectionName ( ) , is ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { MongoEntityInformation < Person , java.lang.Long > org.springframework.data.mongodb.repository.query.MongoEntityInformation<org.springframework.data.mongodb.repository.query.Person,java.lang.Long> = new MappingMongoEntityInformation < Person , java.lang.Long > ( org.springframework.data.mongodb.repository.query.MongoPersistentEntity<org.springframework.data.mongodb.repository.query.Person> , STRING ) ; assertThat ( org.springframework.data.mongodb.repository.query.MongoEntityInformation<org.springframework.data.mongodb.repository.query.Person,java.lang.Long> . getCollectionName ( ) , is ( STRING ) ) ; }  <METHOD_END>
