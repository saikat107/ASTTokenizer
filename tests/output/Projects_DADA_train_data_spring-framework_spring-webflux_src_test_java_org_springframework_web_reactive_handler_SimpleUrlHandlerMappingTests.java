<METHOD_START> @ Test public void void ( ) java.lang.Exception { AnnotationConfigApplicationContext org.springframework.web.reactive.handler.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.web.reactive.handler.AnnotationConfigApplicationContext . register ( org.springframework.web.reactive.handler.SimpleUrlHandlerMappingTests.WebConfig .class ) ; org.springframework.web.reactive.handler.AnnotationConfigApplicationContext . refresh ( ) ; HandlerMapping org.springframework.web.reactive.handler.HandlerMapping = ( HandlerMapping ) org.springframework.web.reactive.handler.AnnotationConfigApplicationContext . getBean ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.web.reactive.handler.AnnotationConfigApplicationContext . getBean ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.web.reactive.handler.AnnotationConfigApplicationContext . getBean ( STRING ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathXmlApplicationContext org.springframework.web.reactive.handler.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , java.lang.Class<? extends org.springframework.web.reactive.handler.SimpleUrlHandlerMappingTests> ( ) ) ; org.springframework.web.reactive.handler.ClassPathXmlApplicationContext . refresh ( ) ; HandlerMapping org.springframework.web.reactive.handler.HandlerMapping = org.springframework.web.reactive.handler.ClassPathXmlApplicationContext . getBean ( STRING , HandlerMapping .class ) ; java.lang.Object java.lang.Object = org.springframework.web.reactive.handler.ClassPathXmlApplicationContext . getBean ( STRING ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , java.lang.Object , org.springframework.web.reactive.handler.HandlerMapping , STRING ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; void ( STRING , null , org.springframework.web.reactive.handler.HandlerMapping , null ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , HandlerMapping org.springframework.web.reactive.handler.HandlerMapping , java.lang.String java.lang.String ) { ServerWebExchange org.springframework.web.reactive.handler.ServerWebExchange = MockServerHttpRequest . method ( HttpMethod . GET , java.net.URI . java.net.URI ( java.lang.String ) ) . toExchange ( ) ; java.lang.Object java.lang.Object = org.springframework.web.reactive.handler.HandlerMapping . getHandler ( org.springframework.web.reactive.handler.ServerWebExchange ) . block ( ) ; if ( java.lang.Object != null ) { assertNotNull ( java.lang.Object ) ; assertSame ( java.lang.Object , java.lang.Object ) ; assertEquals ( java.lang.String , org.springframework.web.reactive.handler.ServerWebExchange . getAttribute ( PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE ) . get ( ) ) ; } else { assertNull ( java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> @ Bean @ java.lang.SuppressWarnings ( STRING ) public org.springframework.web.reactive.handler.SimpleUrlHandlerMapping org.springframework.web.reactive.handler.SimpleUrlHandlerMapping ( ) { SimpleUrlHandlerMapping org.springframework.web.reactive.handler.SimpleUrlHandlerMapping = new SimpleUrlHandlerMapping ( ) ; org.springframework.web.reactive.handler.SimpleUrlHandlerMapping . setUseTrailingSlashMatch ( true ) ; org.springframework.web.reactive.handler.SimpleUrlHandlerMapping . registerHandler ( STRING , java.lang.Object ( ) ) ; org.springframework.web.reactive.handler.SimpleUrlHandlerMapping . registerHandler ( STRING , java.lang.Object ( ) ) ; org.springframework.web.reactive.handler.SimpleUrlHandlerMapping . registerHandler ( STRING , java.lang.Object ( ) ) ; org.springframework.web.reactive.handler.SimpleUrlHandlerMapping . registerHandler ( STRING , java.lang.Object ( ) ) ; return org.springframework.web.reactive.handler.SimpleUrlHandlerMapping ; }  <METHOD_END>
<METHOD_START> @ Bean public java.lang.Object java.lang.Object ( ) { return new java.lang.Object ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public java.lang.Object java.lang.Object ( ) { return new java.lang.Object ( ) ; }  <METHOD_END>
