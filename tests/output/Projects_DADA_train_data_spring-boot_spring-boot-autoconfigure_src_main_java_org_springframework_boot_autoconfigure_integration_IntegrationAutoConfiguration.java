<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.boot.autoconfigure.integration.BeanFactory ) throws org.springframework.boot.autoconfigure.integration.BeansException { this . org.springframework.boot.autoconfigure.integration.BeanFactory = org.springframework.boot.autoconfigure.integration.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Environment org.springframework.boot.autoconfigure.integration.Environment ) { this . org.springframework.boot.autoconfigure.integration.RelaxedPropertyResolver = new RelaxedPropertyResolver ( org.springframework.boot.autoconfigure.integration.Environment , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.integration.IntegrationMBeanExporter org.springframework.boot.autoconfigure.integration.IntegrationMBeanExporter ( ) { IntegrationMBeanExporter org.springframework.boot.autoconfigure.integration.IntegrationMBeanExporter = new IntegrationMBeanExporter ( ) ; java.lang.String java.lang.String = this . org.springframework.boot.autoconfigure.integration.RelaxedPropertyResolver . getProperty ( STRING ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.boot.autoconfigure.integration.IntegrationMBeanExporter . setDefaultDomain ( java.lang.String ) ; } java.lang.String java.lang.String = this . org.springframework.boot.autoconfigure.integration.RelaxedPropertyResolver . getProperty ( STRING , STRING ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.boot.autoconfigure.integration.IntegrationMBeanExporter . setServer ( this . org.springframework.boot.autoconfigure.integration.BeanFactory . getBean ( java.lang.String , javax.management.MBeanServer .class ) ) ; } return org.springframework.boot.autoconfigure.integration.IntegrationMBeanExporter ; }  <METHOD_END>
