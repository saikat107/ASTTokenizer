<METHOD_START> public void void ( ConnectionFactory org.springframework.jca.cci.connection.ConnectionFactory ) { this . org.springframework.jca.cci.connection.ConnectionFactory = org.springframework.jca.cci.connection.ConnectionFactory ; }  <METHOD_END>
<METHOD_START> public org.springframework.jca.cci.connection.ConnectionFactory org.springframework.jca.cci.connection.ConnectionFactory ( ) { return this . org.springframework.jca.cci.connection.ConnectionFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( org.springframework.jca.cci.connection.ConnectionFactory ( ) == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jca.cci.connection.Connection org.springframework.jca.cci.connection.Connection ( ) org.springframework.jca.cci.connection.ResourceException { return org.springframework.jca.cci.connection.ConnectionFactory ( ) . getConnection ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jca.cci.connection.Connection org.springframework.jca.cci.connection.Connection ( ConnectionSpec org.springframework.jca.cci.connection.ConnectionSpec ) throws org.springframework.jca.cci.connection.ResourceException { return org.springframework.jca.cci.connection.ConnectionFactory ( ) . getConnection ( org.springframework.jca.cci.connection.ConnectionSpec ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jca.cci.connection.RecordFactory org.springframework.jca.cci.connection.RecordFactory ( ) org.springframework.jca.cci.connection.ResourceException { return org.springframework.jca.cci.connection.ConnectionFactory ( ) . getRecordFactory ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jca.cci.connection.ResourceAdapterMetaData org.springframework.jca.cci.connection.ResourceAdapterMetaData ( ) org.springframework.jca.cci.connection.ResourceException { return org.springframework.jca.cci.connection.ConnectionFactory ( ) . getMetaData ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.naming.Reference javax.naming.Reference ( ) javax.naming.NamingException { return org.springframework.jca.cci.connection.ConnectionFactory ( ) . getReference ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( javax.naming.Reference javax.naming.Reference ) { org.springframework.jca.cci.connection.ConnectionFactory ( ) . setReference ( javax.naming.Reference ) ; }  <METHOD_END>
