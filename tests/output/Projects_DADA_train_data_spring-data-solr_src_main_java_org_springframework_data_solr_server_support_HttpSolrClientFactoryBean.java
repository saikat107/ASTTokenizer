<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { Assert . hasText ( java.lang.String , STRING ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( this . java.lang.String . boolean ( java.lang.String ) ) { void ( ) ; } else { void ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { HttpSolrClient org.springframework.data.solr.server.support.HttpSolrClient = new HttpSolrClient ( this . java.lang.String ) ; if ( java.lang.Integer != null ) { org.springframework.data.solr.server.support.HttpSolrClient . setConnectionTimeout ( java.lang.Integer ) ; } if ( java.lang.Integer != null ) { org.springframework.data.solr.server.support.HttpSolrClient . setMaxTotalConnections ( java.lang.Integer ) ; } this . setSolrClient ( org.springframework.data.solr.server.support.HttpSolrClient ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { try { LBHttpSolrClient org.springframework.data.solr.server.support.LBHttpSolrClient = new LBHttpSolrClient ( StringUtils . split ( this . java.lang.String , java.lang.String ) ) ; if ( java.lang.Integer != null ) { org.springframework.data.solr.server.support.LBHttpSolrClient . setConnectionTimeout ( java.lang.Integer ) ; } this . setSolrClient ( org.springframework.data.solr.server.support.LBHttpSolrClient ) ; } catch ( java.net.MalformedURLException java.net.MalformedURLException ) { throw new java.lang.IllegalArgumentException ( STRING , java.net.MalformedURLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.solr.server.support.SolrClient org.springframework.data.solr.server.support.SolrClient ( ) java.lang.Exception { return getSolrClient ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { if ( getSolrClient ( ) == null ) { return HttpSolrClient .class ; } return getSolrClient ( ) . getClass ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
