<METHOD_START> public java.util.Comparator<java.lang.Object> < java.lang.Object > java.util.Comparator<java.lang.Object> ( final org.springframework.core.OrderComparator.OrderSourceProvider org.springframework.core.OrderComparator.OrderSourceProvider ) { return new java.util.Comparator<java.lang.Object> < java.lang.Object > ( ) { @ java.lang.Override public int int ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { return int ( java.lang.Object , java.lang.Object , org.springframework.core.OrderComparator.OrderSourceProvider ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { return int ( java.lang.Object , java.lang.Object , org.springframework.core.OrderComparator.OrderSourceProvider ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { return int ( java.lang.Object , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> private int int ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object , org.springframework.core.OrderComparator.OrderSourceProvider org.springframework.core.OrderComparator.OrderSourceProvider ) { boolean boolean = ( java.lang.Object instanceof PriorityOrdered ) ; boolean boolean = ( java.lang.Object instanceof PriorityOrdered ) ; if ( boolean && ! boolean ) { return - NUMBER ; } else if ( boolean && ! boolean ) { return NUMBER ; } int int = int ( java.lang.Object , org.springframework.core.OrderComparator.OrderSourceProvider ) ; int int = int ( java.lang.Object , org.springframework.core.OrderComparator.OrderSourceProvider ) ; return ( int < int ) ? - NUMBER : ( int > int ) ? NUMBER : NUMBER ; }  <METHOD_END>
<METHOD_START> private int int ( java.lang.Object java.lang.Object , org.springframework.core.OrderComparator.OrderSourceProvider org.springframework.core.OrderComparator.OrderSourceProvider ) { java.lang.Integer java.lang.Integer = null ; if ( org.springframework.core.OrderComparator.OrderSourceProvider != null ) { java.lang.Object java.lang.Object = org.springframework.core.OrderComparator.OrderSourceProvider . java.lang.Object ( java.lang.Object ) ; if ( java.lang.Object != null && java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . boolean ( ) ) { java.lang.Object [] java.lang.Object[] = ObjectUtils . toObjectArray ( java.lang.Object ) ; for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { java.lang.Integer = java.lang.Integer ( java.lang.Object ) ; if ( java.lang.Integer != null ) { break; } } } else { java.lang.Integer = java.lang.Integer ( java.lang.Object ) ; } } return ( java.lang.Integer != null ? java.lang.Integer : int ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> protected int int ( java.lang.Object java.lang.Object ) { java.lang.Integer java.lang.Integer = java.lang.Integer ( java.lang.Object ) ; return ( java.lang.Integer != null ? java.lang.Integer : Ordered . LOWEST_PRECEDENCE ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Integer java.lang.Integer ( java.lang.Object java.lang.Object ) { return ( java.lang.Object instanceof Ordered ? ( ( Ordered ) java.lang.Object ) . getOrder ( ) : null ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( java.lang.Object java.lang.Object ) { return null ; }  <METHOD_END>
<METHOD_START> public static void void ( java.util.List<?> < ? > java.util.List<?> ) { if ( java.util.List<> . int ( ) > NUMBER ) { java.util.Collections . void ( java.util.List<> , org.springframework.core.OrderComparator ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.Object [] java.lang.Object[] ) { if ( java.lang.Object[] . int > NUMBER ) { java.util.Arrays . void ( java.lang.Object[] , org.springframework.core.OrderComparator ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof java.lang.Object [] ) { void ( ( java.lang.Object [] ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.util.List ) { void ( ( java.util.List<?> < ? > ) java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object );  <METHOD_END>
