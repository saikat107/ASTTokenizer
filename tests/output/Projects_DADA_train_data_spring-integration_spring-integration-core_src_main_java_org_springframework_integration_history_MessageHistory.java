<METHOD_START> public static org.springframework.integration.history.MessageHistory org.springframework.integration.history.MessageHistory ( Message < ? > org.springframework.integration.history.Message<?> ) { return org.springframework.integration.history.Message<> != null ? org.springframework.integration.history.Message<> . getHeaders ( ) . get ( java.lang.String , org.springframework.integration.history.MessageHistory .class ) : null ; }  <METHOD_END>
<METHOD_START> public static < T > org.springframework.integration.history.Message<T> < T > org.springframework.integration.history.Message<T> ( Message < T > org.springframework.integration.history.Message<T> , NamedComponent org.springframework.integration.history.NamedComponent ) { return org.springframework.integration.history.Message ( org.springframework.integration.history.Message<T> , org.springframework.integration.history.NamedComponent , org.springframework.integration.history.MessageBuilderFactory ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public static < T > org.springframework.integration.history.Message<T> < T > org.springframework.integration.history.Message<T> ( Message < T > org.springframework.integration.history.Message<T> , NamedComponent org.springframework.integration.history.NamedComponent , MessageBuilderFactory org.springframework.integration.history.MessageBuilderFactory ) { Assert . notNull ( org.springframework.integration.history.Message<T> , STRING ) ; Assert . notNull ( org.springframework.integration.history.NamedComponent , STRING ) ; java.util.Properties java.util.Properties = java.util.Properties ( org.springframework.integration.history.NamedComponent ) ; if ( ! java.util.Properties . boolean ( ) ) { org.springframework.integration.history.MessageHistory org.springframework.integration.history.MessageHistory = org.springframework.integration.history.Message<T> . getHeaders ( ) . get ( java.lang.String , org.springframework.integration.history.MessageHistory .class ) ; java.util.List<java.util.Properties> < java.util.Properties > java.util.List<java.util.Properties> = ( org.springframework.integration.history.MessageHistory != null ) ? new java.util.ArrayList<java.util.Properties> < java.util.Properties > ( org.springframework.integration.history.MessageHistory ) : new java.util.ArrayList<java.util.Properties> < java.util.Properties > ( ) ; java.util.List<java.util.Properties> . boolean ( java.util.Properties ) ; org.springframework.integration.history.MessageHistory org.springframework.integration.history.MessageHistory = new org.springframework.integration.history.MessageHistory ( java.util.List<java.util.Properties> ) ; if ( org.springframework.integration.history.Message<T> instanceof MutableMessage ) { org.springframework.integration.history.Message<T> . getHeaders ( ) . put ( java.lang.String , org.springframework.integration.history.MessageHistory ) ; } else if ( org.springframework.integration.history.Message<T> instanceof ErrorMessage ) { IntegrationMessageHeaderAccessor org.springframework.integration.history.IntegrationMessageHeaderAccessor = new IntegrationMessageHeaderAccessor ( org.springframework.integration.history.Message<T> ) ; org.springframework.integration.history.IntegrationMessageHeaderAccessor . setHeader ( java.lang.String , org.springframework.integration.history.MessageHistory ) ; java.lang.Throwable java.lang.Throwable = ( ( ErrorMessage ) org.springframework.integration.history.Message<T> ) . getPayload ( ) ; ErrorMessage org.springframework.integration.history.ErrorMessage = new ErrorMessage ( java.lang.Throwable , org.springframework.integration.history.IntegrationMessageHeaderAccessor . toMessageHeaders ( ) ) ; org.springframework.integration.history.Message<T> = ( Message < T > ) org.springframework.integration.history.ErrorMessage ; } else if ( org.springframework.integration.history.Message<T> instanceof AdviceMessage ) { IntegrationMessageHeaderAccessor org.springframework.integration.history.IntegrationMessageHeaderAccessor = new IntegrationMessageHeaderAccessor ( org.springframework.integration.history.Message<T> ) ; org.springframework.integration.history.IntegrationMessageHeaderAccessor . setHeader ( java.lang.String , org.springframework.integration.history.MessageHistory ) ; org.springframework.integration.history.Message<T> = new AdviceMessage < T > ( org.springframework.integration.history.Message<T> . getPayload ( ) , org.springframework.integration.history.IntegrationMessageHeaderAccessor . toMessageHeaders ( ) , ( ( AdviceMessage < ? > ) org.springframework.integration.history.Message<T> ) . getInputMessage ( ) ) ; } else { if ( ! ( org.springframework.integration.history.Message<T> instanceof GenericMessage ) && ( org.springframework.integration.history.MessageBuilderFactory instanceof DefaultMessageBuilderFactory || org.springframework.integration.history.MessageBuilderFactory instanceof MutableMessageBuilderFactory ) ) { if ( org.springframework.integration.history.Log . isWarnEnabled ( ) ) { org.springframework.integration.history.Log . warn ( STRING + org.springframework.integration.history.MessageBuilderFactory + STRING + org.springframework.integration.history.Message<T> . getClass ( ) + STRING + STRING ) ; } } org.springframework.integration.history.Message<T> = org.springframework.integration.history.MessageBuilderFactory . fromMessage ( org.springframework.integration.history.Message<T> ) . setHeader ( java.lang.String , org.springframework.integration.history.MessageHistory ) . build ( ) ; } } return org.springframework.integration.history.Message<T> ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<java.util.Properties> < java.util.Properties > java.util.List<java.util.Properties> ) { Assert . notEmpty ( java.util.List<java.util.Properties> , STRING ) ; this . java.util.List<java.util.Properties> = java.util.List<java.util.Properties> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.List<java.util.Properties> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . java.util.List<java.util.Properties> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return this . java.util.List<java.util.Properties> . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Collection<?> < ? > java.util.Collection<?> ) { return this . java.util.List<java.util.Properties> . boolean ( java.util.Collection<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Properties java.util.Properties ( int int ) { return this . java.util.List<java.util.Properties> . java.util.Properties ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<java.util.Properties> < java.util.Properties > java.util.Iterator<java.util.Properties> ( ) { return java.util.Collections . java.util.List<java.util.Properties> ( this . java.util.List<java.util.Properties> ) . java.util.Iterator<java.util.Properties> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.ListIterator<java.util.Properties> < java.util.Properties > java.util.ListIterator<java.util.Properties> ( ) { return java.util.Collections . java.util.List<java.util.Properties> ( this . java.util.List<java.util.Properties> ) . java.util.ListIterator<java.util.Properties> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.ListIterator<java.util.Properties> < java.util.Properties > java.util.ListIterator<java.util.Properties> ( int int ) { return java.util.Collections . java.util.List<java.util.Properties> ( this . java.util.List<java.util.Properties> ) . java.util.ListIterator<java.util.Properties> ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.util.Properties> < java.util.Properties > java.util.List<java.util.Properties> ( int int , int int ) { return java.util.Collections . java.util.List<java.util.Properties> ( this . java.util.List<java.util.Properties> ) . java.util.List<java.util.Properties> ( int , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object [] java.lang.Object[] ( ) { return this . java.util.List<java.util.Properties> . java.lang.Object[] ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T [] T[] ( T [] T[] ) { return this . java.util.List<java.util.Properties> . T[] ( T[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.lang.Object java.lang.Object ) { return this . java.util.List<java.util.Properties> . int ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.lang.Object java.lang.Object ) { return this . java.util.List<java.util.Properties> . int ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; for ( java.util.Properties java.util.Properties : this . java.util.List<java.util.Properties> ) { java.lang.String java.lang.String = java.util.Properties . java.lang.String ( java.lang.String ) ; if ( java.lang.String != null ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } return StringUtils . collectionToCommaDelimitedString ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Properties java.util.Properties ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , java.util.Properties java.util.Properties ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Collection<? extends java.util.Properties> < ? extends java.util.Properties > java.util.Collection<? extends java.util.Properties> ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , java.util.Collection<? extends java.util.Properties> < ? extends java.util.Properties > java.util.Collection<? extends java.util.Properties> ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Properties java.util.Properties ( int int , java.util.Properties java.util.Properties ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Properties java.util.Properties ( int int ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Collection<?> < ? > java.util.Collection<?> ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Collection<?> < ? > java.util.Collection<?> ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> private static java.util.Properties java.util.Properties ( NamedComponent org.springframework.integration.history.NamedComponent ) { org.springframework.integration.history.MessageHistory.Entry org.springframework.integration.history.MessageHistory.Entry = new org.springframework.integration.history.MessageHistory.Entry ( ) ; java.lang.String java.lang.String = org.springframework.integration.history.NamedComponent . getComponentName ( ) ; java.lang.String java.lang.String = org.springframework.integration.history.NamedComponent . getComponentType ( ) ; if ( java.lang.String != null && ! java.lang.String . boolean ( STRING ) ) { org.springframework.integration.history.MessageHistory.Entry . void ( java.lang.String ) ; if ( java.lang.String != null ) { org.springframework.integration.history.MessageHistory.Entry . void ( java.lang.String ) ; } } if ( ! org.springframework.integration.history.MessageHistory.Entry . boolean ( ) ) { org.springframework.integration.history.MessageHistory.Entry . void ( java.lang.Long . java.lang.String ( java.lang.System . long ( ) ) ) ; } return org.springframework.integration.history.MessageHistory.Entry ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { this . java.lang.Object ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { this . java.lang.Object ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { this . java.lang.Object ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
