<METHOD_START> public void ( final int int ) { this( int , null ); }  <METHOD_END>
<METHOD_START> public void ( final int int , final org.springframework.asm.MethodVisitor org.springframework.asm.MethodVisitor ) { if ( int != Opcodes . ASM4 && int != Opcodes . ASM5 ) { throw new java.lang.IllegalArgumentException ( ) ; } this . int = int ; this . org.springframework.asm.MethodVisitor = org.springframework.asm.MethodVisitor ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , int int ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( java.lang.String , int ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.asm.AnnotationVisitor org.springframework.asm.AnnotationVisitor ( ) { if ( org.springframework.asm.MethodVisitor != null ) { return org.springframework.asm.MethodVisitor . org.springframework.asm.AnnotationVisitor ( ) ; } return null ; }  <METHOD_END>
<METHOD_START> public org.springframework.asm.AnnotationVisitor org.springframework.asm.AnnotationVisitor ( java.lang.String java.lang.String , boolean boolean ) { if ( org.springframework.asm.MethodVisitor != null ) { return org.springframework.asm.MethodVisitor . org.springframework.asm.AnnotationVisitor ( java.lang.String , boolean ) ; } return null ; }  <METHOD_END>
<METHOD_START> public org.springframework.asm.AnnotationVisitor org.springframework.asm.AnnotationVisitor ( int int , TypePath org.springframework.asm.TypePath , java.lang.String java.lang.String , boolean boolean ) { if ( org.springframework.asm.MethodVisitor != null ) { return org.springframework.asm.MethodVisitor . org.springframework.asm.AnnotationVisitor ( int , org.springframework.asm.TypePath , java.lang.String , boolean ) ; } return null ; }  <METHOD_END>
<METHOD_START> public org.springframework.asm.AnnotationVisitor org.springframework.asm.AnnotationVisitor ( int int , java.lang.String java.lang.String , boolean boolean ) { if ( org.springframework.asm.MethodVisitor != null ) { return org.springframework.asm.MethodVisitor . org.springframework.asm.AnnotationVisitor ( int , java.lang.String , boolean ) ; } return null ; }  <METHOD_END>
<METHOD_START> public void void ( Attribute org.springframework.asm.Attribute ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( org.springframework.asm.Attribute ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , int int , java.lang.Object [] java.lang.Object[] , int int , java.lang.Object [] java.lang.Object[] ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , int , java.lang.Object[] , int , java.lang.Object[] ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , int int ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , int ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , int int ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , int ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , java.lang.String java.lang.String ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , java.lang.String , java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public void void ( int int , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { if ( int >= Opcodes . ASM5 ) { boolean boolean = int == Opcodes . INVOKEINTERFACE ; void ( int , java.lang.String , java.lang.String , java.lang.String , boolean ) ; return; } if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , java.lang.String , java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { if ( int < Opcodes . ASM5 ) { if ( boolean != ( int == Opcodes . INVOKEINTERFACE ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } void ( int , java.lang.String , java.lang.String , java.lang.String ) ; return; } if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , java.lang.String , java.lang.String , java.lang.String , boolean ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , Handle org.springframework.asm.Handle , java.lang.Object ... java.lang.Object[] ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( java.lang.String , java.lang.String , org.springframework.asm.Handle , java.lang.Object[] ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , Label org.springframework.asm.Label ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , org.springframework.asm.Label ) ; } }  <METHOD_END>
<METHOD_START> public void void ( Label org.springframework.asm.Label ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( org.springframework.asm.Label ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , int int ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , int ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , int int , Label org.springframework.asm.Label , Label ... org.springframework.asm.Label[] ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , int , org.springframework.asm.Label , org.springframework.asm.Label[] ) ; } }  <METHOD_END>
<METHOD_START> public void void ( Label org.springframework.asm.Label , int [] int[] , Label [] org.springframework.asm.Label[] ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( org.springframework.asm.Label , int[] , org.springframework.asm.Label[] ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , int int ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( java.lang.String , int ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.asm.AnnotationVisitor org.springframework.asm.AnnotationVisitor ( int int , TypePath org.springframework.asm.TypePath , java.lang.String java.lang.String , boolean boolean ) { if ( org.springframework.asm.MethodVisitor != null ) { return org.springframework.asm.MethodVisitor . org.springframework.asm.AnnotationVisitor ( int , org.springframework.asm.TypePath , java.lang.String , boolean ) ; } return null ; }  <METHOD_END>
<METHOD_START> public void void ( Label org.springframework.asm.Label , Label org.springframework.asm.Label , Label org.springframework.asm.Label , java.lang.String java.lang.String ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( org.springframework.asm.Label , org.springframework.asm.Label , org.springframework.asm.Label , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.asm.AnnotationVisitor org.springframework.asm.AnnotationVisitor ( int int , TypePath org.springframework.asm.TypePath , java.lang.String java.lang.String , boolean boolean ) { if ( org.springframework.asm.MethodVisitor != null ) { return org.springframework.asm.MethodVisitor . org.springframework.asm.AnnotationVisitor ( int , org.springframework.asm.TypePath , java.lang.String , boolean ) ; } return null ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , Label org.springframework.asm.Label , Label org.springframework.asm.Label , int int ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( java.lang.String , java.lang.String , java.lang.String , org.springframework.asm.Label , org.springframework.asm.Label , int ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.asm.AnnotationVisitor org.springframework.asm.AnnotationVisitor ( int int , TypePath org.springframework.asm.TypePath , Label [] org.springframework.asm.Label[] , Label [] org.springframework.asm.Label[] , int [] int[] , java.lang.String java.lang.String , boolean boolean ) { if ( org.springframework.asm.MethodVisitor != null ) { return org.springframework.asm.MethodVisitor . org.springframework.asm.AnnotationVisitor ( int , org.springframework.asm.TypePath , org.springframework.asm.Label[] , org.springframework.asm.Label[] , int[] , java.lang.String , boolean ) ; } return null ; }  <METHOD_END>
<METHOD_START> public void void ( int int , Label org.springframework.asm.Label ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , org.springframework.asm.Label ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , int int ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( int , int ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( org.springframework.asm.MethodVisitor != null ) { org.springframework.asm.MethodVisitor . void ( ) ; } }  <METHOD_END>
