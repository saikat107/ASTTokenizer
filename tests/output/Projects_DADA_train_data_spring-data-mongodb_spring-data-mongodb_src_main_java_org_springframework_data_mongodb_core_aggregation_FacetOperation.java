<METHOD_START> public void ( ) { this( org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets . org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets ); }  <METHOD_END>
<METHOD_START> private void ( org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets ) { this . org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets = org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.FacetOperation.FacetOperationBuilder org.springframework.data.mongodb.core.aggregation.FacetOperation.FacetOperationBuilder ( AggregationOperation ... org.springframework.data.mongodb.core.aggregation.AggregationOperation[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationOperation[] , STRING ) ; Assert . notEmpty ( org.springframework.data.mongodb.core.aggregation.AggregationOperation[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.FacetOperation.FacetOperationBuilder ( org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets , java.util.Arrays . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationOperation[] ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return new Document ( STRING , org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets . org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields ( ) { return org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets . org.springframework.data.mongodb.core.aggregation.ExposedFields ( ) ; }  <METHOD_END>
<METHOD_START> private void ( org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets , java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> < AggregationOperation > java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> ) { this . org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets = org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets ; this . java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> = java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.FacetOperation org.springframework.data.mongodb.core.aggregation.FacetOperation ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.FacetOperation ( org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets . org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets ( java.lang.String , java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> < org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet > java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> ) { this . java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> = java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields ( ) { ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields = ExposedFields . from ( ) ; for ( org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet : java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> ) { org.springframework.data.mongodb.core.aggregation.ExposedFields = org.springframework.data.mongodb.core.aggregation.ExposedFields . and ( org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet . org.springframework.data.mongodb.core.aggregation.ExposedField ( ) ) ; } return org.springframework.data.mongodb.core.aggregation.ExposedFields ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; for ( org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet : java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> ) { org.springframework.data.mongodb.core.aggregation.Document . put ( org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet . org.springframework.data.mongodb.core.aggregation.ExposedField ( ) . getName ( ) , org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet . java.util.List<org.springframework.data.mongodb.core.aggregation.Document> ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } return org.springframework.data.mongodb.core.aggregation.Document ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets ( java.lang.String java.lang.String , java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> < AggregationOperation > java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> , STRING ) ; java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> < org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet > java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> = new java.util.ArrayList<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> < org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet > ( this . java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> . int ( ) + NUMBER ) ; java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> . boolean ( this . java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> ) ; java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> . boolean ( new org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet ( new ExposedField ( java.lang.String , true ) , java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> ) ) ; return new org.springframework.data.mongodb.core.aggregation.FacetOperation.Facets ( java.util.List<org.springframework.data.mongodb.core.aggregation.FacetOperation.Facet> ) ; }  <METHOD_END>
<METHOD_START> void ( ExposedField org.springframework.data.mongodb.core.aggregation.ExposedField , java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> < AggregationOperation > java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ExposedField , STRING ) ; Assert . notNull ( java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.ExposedField = org.springframework.data.mongodb.core.aggregation.ExposedField ; this . java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> = java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> ; }  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.core.aggregation.ExposedField org.springframework.data.mongodb.core.aggregation.ExposedField ( ) { return org.springframework.data.mongodb.core.aggregation.ExposedField ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.data.mongodb.core.aggregation.Document> < Document > java.util.List<org.springframework.data.mongodb.core.aggregation.Document> ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return AggregationOperationRenderer . toDocument ( java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; }  <METHOD_END>
