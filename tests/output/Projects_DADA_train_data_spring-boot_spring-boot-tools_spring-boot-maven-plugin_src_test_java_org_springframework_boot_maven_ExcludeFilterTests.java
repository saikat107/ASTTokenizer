<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.ArtifactFilterException { ExcludeFilter org.springframework.boot.maven.ExcludeFilter = new ExcludeFilter ( java.util.Arrays . java.util.List ( org.springframework.boot.maven.Exclude ( STRING , STRING ) ) ) ; java.util.Set java.util.Set = org.springframework.boot.maven.ExcludeFilter . filter ( java.util.Collections . java.util.Set ( org.springframework.boot.maven.Artifact ( STRING , STRING ) ) ) ; assertThat ( java.util.Set ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.ArtifactFilterException { ExcludeFilter org.springframework.boot.maven.ExcludeFilter = new ExcludeFilter ( java.util.Arrays . java.util.List ( org.springframework.boot.maven.Exclude ( STRING , STRING ) ) ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; java.util.Set java.util.Set = org.springframework.boot.maven.ExcludeFilter . filter ( java.util.Collections . java.util.Set ( org.springframework.boot.maven.Artifact ) ) ; assertThat ( java.util.Set ) . hasSize ( NUMBER ) ; assertThat ( java.util.Set . java.util.Iterator ( ) . java.lang.Object ( ) ) . isSameAs ( org.springframework.boot.maven.Artifact ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.ArtifactFilterException { ExcludeFilter org.springframework.boot.maven.ExcludeFilter = new ExcludeFilter ( java.util.Arrays . java.util.List ( org.springframework.boot.maven.Exclude ( STRING , STRING ) ) ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; java.util.Set java.util.Set = org.springframework.boot.maven.ExcludeFilter . filter ( java.util.Collections . java.util.Set ( org.springframework.boot.maven.Artifact ) ) ; assertThat ( java.util.Set ) . hasSize ( NUMBER ) ; assertThat ( java.util.Set . java.util.Iterator ( ) . java.lang.Object ( ) ) . isSameAs ( org.springframework.boot.maven.Artifact ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.ArtifactFilterException { ExcludeFilter org.springframework.boot.maven.ExcludeFilter = new ExcludeFilter ( java.util.Arrays . java.util.List ( org.springframework.boot.maven.Exclude ( STRING , STRING , STRING ) ) ) ; java.util.Set java.util.Set = org.springframework.boot.maven.ExcludeFilter . filter ( java.util.Collections . java.util.Set ( org.springframework.boot.maven.Artifact ( STRING , STRING , STRING ) ) ) ; assertThat ( java.util.Set ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.ArtifactFilterException { ExcludeFilter org.springframework.boot.maven.ExcludeFilter = new ExcludeFilter ( java.util.Arrays . java.util.List ( org.springframework.boot.maven.Exclude ( STRING , STRING , STRING ) ) ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; java.util.Set java.util.Set = org.springframework.boot.maven.ExcludeFilter . filter ( java.util.Collections . java.util.Set ( org.springframework.boot.maven.Artifact ) ) ; assertThat ( java.util.Set ) . hasSize ( NUMBER ) ; assertThat ( java.util.Set . java.util.Iterator ( ) . java.lang.Object ( ) ) . isSameAs ( org.springframework.boot.maven.Artifact ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.ArtifactFilterException { ExcludeFilter org.springframework.boot.maven.ExcludeFilter = new ExcludeFilter ( java.util.Arrays . java.util.List ( org.springframework.boot.maven.Exclude ( STRING , STRING , STRING ) ) ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING , STRING ) ; java.util.Set java.util.Set = org.springframework.boot.maven.ExcludeFilter . filter ( java.util.Collections . java.util.Set ( org.springframework.boot.maven.Artifact ) ) ; assertThat ( java.util.Set ) . hasSize ( NUMBER ) ; assertThat ( java.util.Set . java.util.Iterator ( ) . java.lang.Object ( ) ) . isSameAs ( org.springframework.boot.maven.Artifact ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.maven.ArtifactFilterException { ExcludeFilter org.springframework.boot.maven.ExcludeFilter = new ExcludeFilter ( java.util.Arrays . java.util.List ( org.springframework.boot.maven.Exclude ( STRING , STRING ) , org.springframework.boot.maven.Exclude ( STRING , STRING ) , org.springframework.boot.maven.Exclude ( STRING , STRING ) ) ) ; java.util.Set<org.springframework.boot.maven.Artifact> < Artifact > java.util.Set<org.springframework.boot.maven.Artifact> = new java.util.HashSet<org.springframework.boot.maven.Artifact> <> ( ) ; java.util.Set<org.springframework.boot.maven.Artifact> . add ( org.springframework.boot.maven.Artifact ( STRING , STRING ) ) ; java.util.Set<org.springframework.boot.maven.Artifact> . add ( org.springframework.boot.maven.Artifact ( STRING , STRING ) ) ; Artifact org.springframework.boot.maven.Artifact = org.springframework.boot.maven.Artifact ( STRING , STRING ) ; java.util.Set<org.springframework.boot.maven.Artifact> . add ( org.springframework.boot.maven.Artifact ) ; java.util.Set java.util.Set = org.springframework.boot.maven.ExcludeFilter . filter ( java.util.Set<org.springframework.boot.maven.Artifact> ) ; assertThat ( java.util.Set ) . hasSize ( NUMBER ) ; assertThat ( java.util.Set . java.util.Iterator ( ) . java.lang.Object ( ) ) . isSameAs ( org.springframework.boot.maven.Artifact ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.maven.Exclude org.springframework.boot.maven.Exclude ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return org.springframework.boot.maven.Exclude ( java.lang.String , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.maven.Exclude org.springframework.boot.maven.Exclude ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { Exclude org.springframework.boot.maven.Exclude = new Exclude ( ) ; org.springframework.boot.maven.Exclude . setGroupId ( java.lang.String ) ; org.springframework.boot.maven.Exclude . setArtifactId ( java.lang.String ) ; if ( java.lang.String != null ) { org.springframework.boot.maven.Exclude . setClassifier ( java.lang.String ) ; } return org.springframework.boot.maven.Exclude ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.maven.Artifact org.springframework.boot.maven.Artifact ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { Artifact org.springframework.boot.maven.Artifact = mock ( Artifact .class ) ; given ( org.springframework.boot.maven.Artifact . getGroupId ( ) ) . willReturn ( java.lang.String ) ; given ( org.springframework.boot.maven.Artifact . getArtifactId ( ) ) . willReturn ( java.lang.String ) ; given ( org.springframework.boot.maven.Artifact . getClassifier ( ) ) . willReturn ( java.lang.String ) ; return org.springframework.boot.maven.Artifact ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.maven.Artifact org.springframework.boot.maven.Artifact ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return org.springframework.boot.maven.Artifact ( java.lang.String , java.lang.String , null ) ; }  <METHOD_END>
