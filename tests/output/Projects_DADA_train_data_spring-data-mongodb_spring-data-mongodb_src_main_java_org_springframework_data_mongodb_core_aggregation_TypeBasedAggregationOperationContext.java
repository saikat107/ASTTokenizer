<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , MappingContext < ? extends MongoPersistentEntity < ? > , MongoPersistentProperty > org.springframework.data.mongodb.core.aggregation.MappingContext<? extends org.springframework.data.mongodb.core.aggregation.MongoPersistentEntity<?>,org.springframework.data.mongodb.core.aggregation.MongoPersistentProperty> , QueryMapper org.springframework.data.mongodb.core.aggregation.QueryMapper ) { Assert . notNull ( java.lang.Class<> , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.core.aggregation.MappingContext<,org.springframework.data.mongodb.core.aggregation.MongoPersistentProperty> , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.core.aggregation.QueryMapper , STRING ) ; this . java.lang.Class<?> = java.lang.Class<> ; this . org.springframework.data.mongodb.core.aggregation.MappingContext<? extends org.springframework.data.mongodb.core.aggregation.MongoPersistentEntity<?>,org.springframework.data.mongodb.core.aggregation.MongoPersistentProperty> = org.springframework.data.mongodb.core.aggregation.MappingContext<,org.springframework.data.mongodb.core.aggregation.MongoPersistentProperty> ; this . org.springframework.data.mongodb.core.aggregation.QueryMapper = org.springframework.data.mongodb.core.aggregation.QueryMapper ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( Document org.springframework.data.mongodb.core.aggregation.Document ) { return org.springframework.data.mongodb.core.aggregation.QueryMapper . getMappedObject ( org.springframework.data.mongodb.core.aggregation.Document , org.springframework.data.mongodb.core.aggregation.MappingContext<,org.springframework.data.mongodb.core.aggregation.MongoPersistentProperty> . getPersistentEntity ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.FieldReference org.springframework.data.mongodb.core.aggregation.FieldReference ( Field org.springframework.data.mongodb.core.aggregation.Field ) { PropertyPath . from ( org.springframework.data.mongodb.core.aggregation.Field . getTarget ( ) , java.lang.Class<> ) ; return org.springframework.data.mongodb.core.aggregation.FieldReference ( org.springframework.data.mongodb.core.aggregation.Field ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.FieldReference org.springframework.data.mongodb.core.aggregation.FieldReference ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.FieldReference ( field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.FieldReference org.springframework.data.mongodb.core.aggregation.FieldReference ( Field org.springframework.data.mongodb.core.aggregation.Field ) { PersistentPropertyPath < MongoPersistentProperty > org.springframework.data.mongodb.core.aggregation.PersistentPropertyPath<org.springframework.data.mongodb.core.aggregation.MongoPersistentProperty> = org.springframework.data.mongodb.core.aggregation.MappingContext<,org.springframework.data.mongodb.core.aggregation.MongoPersistentProperty> . getPersistentPropertyPath ( org.springframework.data.mongodb.core.aggregation.Field . getTarget ( ) , java.lang.Class<> ) ; Field org.springframework.data.mongodb.core.aggregation.Field = field ( org.springframework.data.mongodb.core.aggregation.Field . getName ( ) , org.springframework.data.mongodb.core.aggregation.PersistentPropertyPath<org.springframework.data.mongodb.core.aggregation.MongoPersistentProperty> . toDotPath ( MongoPersistentProperty . PropertyToFieldNameConverter . INSTANCE ) ) ; return new DirectFieldReference ( new ExposedField ( org.springframework.data.mongodb.core.aggregation.Field , true ) ) ; }  <METHOD_END>
