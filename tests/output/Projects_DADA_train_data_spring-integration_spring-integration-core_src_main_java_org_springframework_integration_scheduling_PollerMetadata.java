<METHOD_START> public void void ( TransactionSynchronizationFactory org.springframework.integration.scheduling.TransactionSynchronizationFactory ) { Assert . notNull ( org.springframework.integration.scheduling.TransactionSynchronizationFactory , STRING ) ; this . org.springframework.integration.scheduling.TransactionSynchronizationFactory = org.springframework.integration.scheduling.TransactionSynchronizationFactory ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.scheduling.TransactionSynchronizationFactory org.springframework.integration.scheduling.TransactionSynchronizationFactory ( ) { return this . org.springframework.integration.scheduling.TransactionSynchronizationFactory ; }  <METHOD_END>
<METHOD_START> public void void ( Trigger org.springframework.integration.scheduling.Trigger ) { this . org.springframework.integration.scheduling.Trigger = org.springframework.integration.scheduling.Trigger ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.scheduling.Trigger org.springframework.integration.scheduling.Trigger ( ) { return this . org.springframework.integration.scheduling.Trigger ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.scheduling.ErrorHandler org.springframework.integration.scheduling.ErrorHandler ( ) { return this . org.springframework.integration.scheduling.ErrorHandler ; }  <METHOD_END>
<METHOD_START> public void void ( ErrorHandler org.springframework.integration.scheduling.ErrorHandler ) { this . org.springframework.integration.scheduling.ErrorHandler = org.springframework.integration.scheduling.ErrorHandler ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return this . long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return this . long ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.integration.scheduling.Advice> < Advice > java.util.List<org.springframework.integration.scheduling.Advice> ) { this . java.util.List<org.springframework.integration.scheduling.Advice> = java.util.List<org.springframework.integration.scheduling.Advice> ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.integration.scheduling.Advice> < Advice > java.util.List<org.springframework.integration.scheduling.Advice> ( ) { return this . java.util.List<org.springframework.integration.scheduling.Advice> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.concurrent.Executor java.util.concurrent.Executor ) { this . java.util.concurrent.Executor = java.util.concurrent.Executor ; }  <METHOD_END>
<METHOD_START> public java.util.concurrent.Executor java.util.concurrent.Executor ( ) { return this . java.util.concurrent.Executor ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return this . long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.scheduling.PollerMetadata org.springframework.integration.scheduling.PollerMetadata ( BeanFactory org.springframework.integration.scheduling.BeanFactory ) { Assert . notNull ( org.springframework.integration.scheduling.BeanFactory , STRING ) ; if ( ! org.springframework.integration.scheduling.BeanFactory . containsBean ( java.lang.String ) ) { return null ; } return org.springframework.integration.scheduling.BeanFactory . getBean ( java.lang.String , org.springframework.integration.scheduling.PollerMetadata .class ) ; }  <METHOD_END>
