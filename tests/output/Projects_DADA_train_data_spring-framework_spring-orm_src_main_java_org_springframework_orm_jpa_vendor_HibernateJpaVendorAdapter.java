<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( ) { this . org.springframework.orm.jpa.vendor.PersistenceProvider = new SpringHibernateJpaPersistenceProvider ( ) ; this . java.lang.Class<? extends org.springframework.orm.jpa.vendor.EntityManagerFactory> = org . org.hibernate . org.hibernate . org.hibernate .class ; this . java.lang.Class<? extends org.springframework.orm.jpa.vendor.EntityManager> = org . org.hibernate . org.hibernate . org.hibernate .class ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.orm.jpa.vendor.HibernateJpaDialect . setPrepareConnection ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.orm.jpa.vendor.PersistenceProvider org.springframework.orm.jpa.vendor.PersistenceProvider ( ) { return this . org.springframework.orm.jpa.vendor.PersistenceProvider ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; if ( getDatabasePlatform ( ) != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( AvailableSettings . DIALECT , getDatabasePlatform ( ) ) ; } else if ( getDatabase ( ) != null ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<?> ( getDatabase ( ) ) ; if ( java.lang.Class<> != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( AvailableSettings . DIALECT , java.lang.Class<> . java.lang.String ( ) ) ; } } if ( isGenerateDdl ( ) ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( AvailableSettings . HBM2DDL_AUTO , STRING ) ; } if ( isShowSql ( ) ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( AvailableSettings . SHOW_SQL , STRING ) ; } if ( this . org.springframework.orm.jpa.vendor.HibernateJpaDialect . prepareConnection ) { try { AvailableSettings .class . java.lang.reflect.Field ( STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; } catch ( java.lang.NoSuchFieldException java.lang.NoSuchFieldException ) { try { AvailableSettings .class . java.lang.reflect.Field ( STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; } catch ( java.lang.NoSuchFieldException java.lang.NoSuchFieldException ) { } } } return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> protected java.lang.Class<?> < ? > java.lang.Class<?> ( Database org.springframework.orm.jpa.vendor.Database ) { switch ( org.springframework.orm.jpa.vendor.Database ) { case DB2 : return DB2Dialect .class ; case DERBY : return DerbyTenSevenDialect .class ; case H2 : return H2Dialect .class ; case HSQL : return HSQLDialect .class ; case INFORMIX : return InformixDialect .class ; case MYSQL : return MySQL5Dialect .class ; case ORACLE : return Oracle12cDialect .class ; case POSTGRESQL : return PostgreSQL95Dialect .class ; case SQL_SERVER : return SQLServer2012Dialect .class ; case SYBASE : return SybaseDialect .class ; default: return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.orm.jpa.vendor.HibernateJpaDialect org.springframework.orm.jpa.vendor.HibernateJpaDialect ( ) { return this . org.springframework.orm.jpa.vendor.HibernateJpaDialect ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<? extends org.springframework.orm.jpa.vendor.EntityManagerFactory> < ? extends EntityManagerFactory > java.lang.Class<? extends org.springframework.orm.jpa.vendor.EntityManagerFactory> ( ) { return this . java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<? extends org.springframework.orm.jpa.vendor.EntityManager> < ? extends EntityManager > java.lang.Class<? extends org.springframework.orm.jpa.vendor.EntityManager> ( ) { return this . java.lang.Class<> ; }  <METHOD_END>
