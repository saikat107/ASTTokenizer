<METHOD_START> public void ( ) { this . org.springframework.core.serializer.support.Deserializer<java.lang.Object> = new DefaultDeserializer ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . org.springframework.core.serializer.support.Deserializer<java.lang.Object> = new DefaultDeserializer ( java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> public void ( Deserializer < java.lang.Object > org.springframework.core.serializer.support.Deserializer<java.lang.Object> ) { Assert . notNull ( org.springframework.core.serializer.support.Deserializer<java.lang.Object> , STRING ) ; this . org.springframework.core.serializer.support.Deserializer<java.lang.Object> = org.springframework.core.serializer.support.Deserializer<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( byte [] byte[] ) { java.io.ByteArrayInputStream java.io.ByteArrayInputStream = new java.io.ByteArrayInputStream ( byte[] ) ; try { return this . org.springframework.core.serializer.support.Deserializer<java.lang.Object> . deserialize ( java.io.ByteArrayInputStream ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { throw new SerializationFailedException ( STRING + STRING + this . org.springframework.core.serializer.support.Deserializer<java.lang.Object> . getClass ( ) . getSimpleName ( ) + STRING , java.lang.Throwable ) ; } }  <METHOD_END>
