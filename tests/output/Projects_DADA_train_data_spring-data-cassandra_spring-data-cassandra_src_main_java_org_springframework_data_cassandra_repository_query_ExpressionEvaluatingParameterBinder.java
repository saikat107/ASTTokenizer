<METHOD_START> public void ( SpelExpressionParser org.springframework.data.cassandra.repository.query.SpelExpressionParser , EvaluationContextProvider org.springframework.data.cassandra.repository.query.EvaluationContextProvider ) { Assert . notNull ( org.springframework.data.cassandra.repository.query.SpelExpressionParser , STRING ) ; Assert . notNull ( org.springframework.data.cassandra.repository.query.EvaluationContextProvider , STRING ) ; this . org.springframework.data.cassandra.repository.query.SpelExpressionParser = org.springframework.data.cassandra.repository.query.SpelExpressionParser ; this . org.springframework.data.cassandra.repository.query.EvaluationContextProvider = org.springframework.data.cassandra.repository.query.EvaluationContextProvider ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( CassandraParameterAccessor org.springframework.data.cassandra.repository.query.CassandraParameterAccessor , org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.BindingContext org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.BindingContext ) { if ( ! org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.BindingContext . boolean ( ) ) { return java.util.Collections . java.util.List<java.lang.Object> ( ) ; } java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> <> ( org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.BindingContext . java.util.List<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> ( ) . int ( ) ) ; org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.BindingContext . java.util.List<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> ( ) . java.util.stream.Stream<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> ( ) . java.util.stream.Stream<java.lang.Object> ( org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding -> java.lang.Object ( org.springframework.data.cassandra.repository.query.CassandraParameterAccessor , org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.BindingContext . org.springframework.data.cassandra.repository.query.CassandraParameters ( ) , org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding ) ) . forEach ( java.util.List<java.lang.Object> :: add ) ; return java.util.List<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( CassandraParameterAccessor org.springframework.data.cassandra.repository.query.CassandraParameterAccessor , CassandraParameters org.springframework.data.cassandra.repository.query.CassandraParameters , org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding ) { if ( org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding . boolean ( ) ) { return java.lang.Object ( org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding . java.lang.String ( ) , org.springframework.data.cassandra.repository.query.CassandraParameters , org.springframework.data.cassandra.repository.query.CassandraParameterAccessor . getValues ( ) ) ; } return org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding . boolean ( ) ? org.springframework.data.cassandra.repository.query.CassandraParameterAccessor . getBindableValue ( int ( org.springframework.data.cassandra.repository.query.CassandraParameters , org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding . java.lang.String ( ) ) ) : org.springframework.data.cassandra.repository.query.CassandraParameterAccessor . getBindableValue ( org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding . int ( ) ) ; }  <METHOD_END>
<METHOD_START> private int int ( CassandraParameters org.springframework.data.cassandra.repository.query.CassandraParameters , java.lang.String java.lang.String ) { return org.springframework.data.cassandra.repository.query.CassandraParameters . stream ( ) . filter ( cassandraParameter -> cassandraParameter . getName ( ) . filter ( s -> s . equals ( parameterName ) ) . isPresent ( ) ) . mapToInt ( Parameter :: getIndex ) . findFirst ( ) . orElseThrow ( ( ) new IllegalArgumentException ( String . format ( STRING , parameterName ) ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( java.lang.String java.lang.String , CassandraParameters org.springframework.data.cassandra.repository.query.CassandraParameters , java.lang.Object [] java.lang.Object[] ) { EvaluationContext org.springframework.data.cassandra.repository.query.EvaluationContext = org.springframework.data.cassandra.repository.query.EvaluationContextProvider . getEvaluationContext ( org.springframework.data.cassandra.repository.query.CassandraParameters , java.lang.Object[] ) ; Expression org.springframework.data.cassandra.repository.query.Expression = org.springframework.data.cassandra.repository.query.SpelExpressionParser . parseExpression ( java.lang.String ) ; return org.springframework.data.cassandra.repository.query.Expression . getValue ( org.springframework.data.cassandra.repository.query.EvaluationContext , java.lang.Object .class ) ; }  <METHOD_END>
<METHOD_START> public void ( CassandraQueryMethod org.springframework.data.cassandra.repository.query.CassandraQueryMethod , java.util.List<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> < org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding > java.util.List<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> ) { this . org.springframework.data.cassandra.repository.query.CassandraQueryMethod = org.springframework.data.cassandra.repository.query.CassandraQueryMethod ; this . java.util.List<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> = java.util.List<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> ; }  <METHOD_END>
<METHOD_START> boolean boolean ( ) { return ! CollectionUtils . isEmpty ( java.util.List<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> < org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding > java.util.List<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> ( ) { return java.util.Collections . java.util.List<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> ( java.util.List<org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.cassandra.repository.query.CassandraParameters org.springframework.data.cassandra.repository.query.CassandraParameters ( ) { return org.springframework.data.cassandra.repository.query.CassandraQueryMethod . getParameters ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.cassandra.repository.query.CassandraQueryMethod org.springframework.data.cassandra.repository.query.CassandraQueryMethod ( ) { return org.springframework.data.cassandra.repository.query.CassandraQueryMethod ; }  <METHOD_END>
<METHOD_START> private void ( int int , boolean boolean , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . int = int ; this . boolean = boolean ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding ( java.lang.String java.lang.String , boolean boolean ) { return new org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding ( - NUMBER , boolean , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding ( int int ) { return new org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding ( int , false , null , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding ( java.lang.String java.lang.String ) { return new org.springframework.data.cassandra.repository.query.ExpressionEvaluatingParameterBinder.ParameterBinding ( - NUMBER , false , null , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ( java.lang.String != null ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return ( STRING + ( boolean ( ) ? STRING : STRING ) + int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ( this . java.lang.String != null ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
