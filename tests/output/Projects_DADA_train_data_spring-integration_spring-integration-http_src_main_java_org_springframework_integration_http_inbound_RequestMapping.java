<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void void ( HttpMethod ... org.springframework.integration.http.inbound.HttpMethod[] ) { Assert . notEmpty ( org.springframework.integration.http.inbound.HttpMethod[] , STRING ) ; this . org.springframework.integration.http.inbound.HttpMethod[] = org.springframework.integration.http.inbound.HttpMethod[] ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.inbound.HttpMethod [] org.springframework.integration.http.inbound.HttpMethod[] ( ) { return this . org.springframework.integration.http.inbound.HttpMethod[] ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.inbound.RequestMethod [] org.springframework.integration.http.inbound.RequestMethod[] ( ) { RequestMethod [] org.springframework.integration.http.inbound.RequestMethod[] = new RequestMethod [ this . org.springframework.integration.http.inbound.HttpMethod[] . length ] ; for ( int int = NUMBER ; int < this . org.springframework.integration.http.inbound.HttpMethod[] . length ; int ++ ) { org.springframework.integration.http.inbound.RequestMethod[] [ int ] = RequestMethod . valueOf ( this . org.springframework.integration.http.inbound.HttpMethod[] [ int ] . name ( ) ) ; } return org.springframework.integration.http.inbound.RequestMethod[] ; }  <METHOD_END>
