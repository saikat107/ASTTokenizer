<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( ) { this( java.util.Collections . java.util.Set<java.lang.Class<?>> ( ) , true ); }  <METHOD_END>
<METHOD_START> public void ( java.util.Set<? extends java.lang.Class<?>> < ? extends java.lang.Class<?> < ? > > java.util.Set<? extends java.lang.Class<?>> , boolean boolean ) { Assert . notNull ( java.util.Set<> , STRING ) ; this . java.util.Set<java.lang.Class<?>> = new java.util.concurrent.CopyOnWriteArraySet<java.lang.Class<?>> <> ( java.util.Set<> ) ; if ( boolean ) { this . java.util.Set<java.lang.Class<?>> . boolean ( java.util.Set<java.lang.Class<?>> ) ; } }  <METHOD_END>
<METHOD_START> public void ( java.util.Set<? extends java.lang.Class<?>> < ? extends java.lang.Class<?> < ? > > java.util.Set<? extends java.lang.Class<?>> , org.springframework.data.mapping.model.SimpleTypeHolder org.springframework.data.mapping.model.SimpleTypeHolder ) { Assert . notNull ( java.util.Set<> , STRING ) ; Assert . notNull ( org.springframework.data.mapping.model.SimpleTypeHolder , STRING ) ; this . java.util.Set<java.lang.Class<?>> = new java.util.concurrent.CopyOnWriteArraySet<java.lang.Class<?>> <> ( java.util.Set<> ) ; this . java.util.Set<java.lang.Class<?>> . boolean ( org.springframework.data.mapping.model.SimpleTypeHolder . java.util.Set<java.lang.Class<?>> ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; if ( java.lang.Object .class . boolean ( java.lang.Class<> ) || java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ) { return true ; } if ( java.lang.Class<> . java.lang.String ( ) . boolean ( STRING ) ) { return true ; } for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.util.Set<java.lang.Class<?>> ) { if ( java.lang.Class<> . boolean ( java.lang.Class<> ) ) { java.util.Set<java.lang.Class<?>> . boolean ( java.lang.Class<> ) ; return true ; } } return false ; }  <METHOD_END>
