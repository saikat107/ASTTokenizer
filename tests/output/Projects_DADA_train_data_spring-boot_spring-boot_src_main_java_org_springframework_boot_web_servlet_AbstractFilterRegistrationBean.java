<METHOD_START> void ( org.springframework.boot.web.servlet.ServletRegistrationBean<?> < ? > ... org.springframework.boot.web.servlet.ServletRegistrationBean<?>[] ) { Assert . notNull ( org.springframework.boot.web.servlet.ServletRegistrationBean<?>[] , STRING ) ; java.util.Collections . boolean ( this . java.util.Set<org.springframework.boot.web.servlet.ServletRegistrationBean<?>> , org.springframework.boot.web.servlet.ServletRegistrationBean<?>[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<? extends org.springframework.boot.web.servlet.ServletRegistrationBean<?>> < ? extends ServletRegistrationBean < ? > > java.util.Collection<? extends org.springframework.boot.web.servlet.ServletRegistrationBean<?>> ) { Assert . notNull ( java.util.Collection<> , STRING ) ; this . java.util.Set<org.springframework.boot.web.servlet.ServletRegistrationBean<?>> = new java.util.LinkedHashSet <> ( java.util.Collection<> ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<org.springframework.boot.web.servlet.ServletRegistrationBean<?>> < ServletRegistrationBean < ? > > java.util.Collection<org.springframework.boot.web.servlet.ServletRegistrationBean<?>> ( ) { return this . java.util.Set<org.springframework.boot.web.servlet.ServletRegistrationBean<?>> ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.boot.web.servlet.ServletRegistrationBean<?> < ? > ... org.springframework.boot.web.servlet.ServletRegistrationBean<?>[] ) { Assert . notNull ( org.springframework.boot.web.servlet.ServletRegistrationBean<?>[] , STRING ) ; java.util.Collections . boolean ( this . java.util.Set<org.springframework.boot.web.servlet.ServletRegistrationBean<?>> , org.springframework.boot.web.servlet.ServletRegistrationBean<?>[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { Assert . notNull ( java.util.Collection<java.lang.String> , STRING ) ; this . java.util.Set<java.lang.String> = new java.util.LinkedHashSet<java.lang.String> <> ( java.util.Collection<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( ) { return this . java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { Assert . notNull ( java.lang.String[] , STRING ) ; this . java.util.Set<java.lang.String> . boolean ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { Assert . notNull ( java.util.Collection<java.lang.String> , STRING ) ; this . java.util.Set<java.lang.String> = new java.util.LinkedHashSet<java.lang.String> <> ( java.util.Collection<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( ) { return this . java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { Assert . notNull ( java.lang.String[] , STRING ) ; java.util.Collections . boolean ( this . java.util.Set<java.lang.String> , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( DispatcherType org.springframework.boot.web.servlet.DispatcherType , DispatcherType ... org.springframework.boot.web.servlet.DispatcherType[] ) { this . java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> = java.util.EnumSet . java.util.EnumSet ( org.springframework.boot.web.servlet.DispatcherType , org.springframework.boot.web.servlet.DispatcherType[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> < DispatcherType > java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> ) { this . java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> = java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContext org.springframework.boot.web.servlet.ServletContext ) throws org.springframework.boot.web.servlet.ServletException { Filter org.springframework.boot.web.servlet.Filter = T ( ) ; Assert . notNull ( org.springframework.boot.web.servlet.Filter , STRING ) ; java.lang.String java.lang.String = getOrDeduceName ( org.springframework.boot.web.servlet.Filter ) ; if ( ! isEnabled ( ) ) { this . org.springframework.boot.web.servlet.Log . info ( STRING + java.lang.String + STRING ) ; return; } FilterRegistration . FilterRegistration FilterRegistration.Dynamic = org.springframework.boot.web.servlet.ServletContext . addFilter ( java.lang.String , org.springframework.boot.web.servlet.Filter ) ; if ( FilterRegistration.Dynamic == null ) { this . org.springframework.boot.web.servlet.Log . info ( STRING + java.lang.String + STRING + STRING ) ; return; } void ( FilterRegistration.Dynamic ) ; }  <METHOD_END>
<METHOD_START> public abstract T T ( )  <METHOD_END>
<METHOD_START> protected void void ( FilterRegistration . FilterRegistration FilterRegistration.Dynamic ) { super. configure ( FilterRegistration.Dynamic ) ; java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> < DispatcherType > java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> = this . java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> ; if ( java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> == null ) { java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> = java.util.EnumSet . java.util.EnumSet ( DispatcherType . REQUEST ) ; } java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.LinkedHashSet<java.lang.String> <> ( ) ; for ( ServletRegistrationBean < ? > org.springframework.boot.web.servlet.ServletRegistrationBean<?> : this . java.util.Set<org.springframework.boot.web.servlet.ServletRegistrationBean<?>> ) { java.util.Set<java.lang.String> . boolean ( org.springframework.boot.web.servlet.ServletRegistrationBean<> . getServletName ( ) ) ; } java.util.Set<java.lang.String> . boolean ( this . java.util.Set<java.lang.String> ) ; if ( java.util.Set<java.lang.String> . boolean ( ) && this . java.util.Set<java.lang.String> . boolean ( ) ) { this . org.springframework.boot.web.servlet.Log . info ( STRING + FilterRegistration.Dynamic . getName ( ) + STRING + java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; FilterRegistration.Dynamic . addMappingForUrlPatterns ( java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> , this . boolean , java.lang.String[] ) ; } else { if ( ! java.util.Set<java.lang.String> . boolean ( ) ) { this . org.springframework.boot.web.servlet.Log . info ( STRING + FilterRegistration.Dynamic . getName ( ) + STRING + java.util.Set<java.lang.String> ) ; FilterRegistration.Dynamic . addMappingForServletNames ( java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> , this . boolean , java.util.Set<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.Set<java.lang.String> . int ( ) ] ) ) ; } if ( ! this . java.util.Set<java.lang.String> . boolean ( ) ) { this . org.springframework.boot.web.servlet.Log . info ( STRING + FilterRegistration.Dynamic . getName ( ) + STRING + this . java.util.Set<java.lang.String> ) ; FilterRegistration.Dynamic . addMappingForUrlPatterns ( java.util.EnumSet<org.springframework.boot.web.servlet.DispatcherType> , this . boolean , this . java.util.Set<java.lang.String> . java.lang.String[] ( new java.lang.String [ this . java.util.Set<java.lang.String> . int ( ) ] ) ) ; } } }  <METHOD_END>
