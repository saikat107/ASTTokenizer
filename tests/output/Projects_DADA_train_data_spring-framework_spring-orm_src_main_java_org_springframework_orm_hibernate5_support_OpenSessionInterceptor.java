<METHOD_START> public void void ( SessionFactory org.springframework.orm.hibernate5.support.SessionFactory ) { this . org.springframework.orm.hibernate5.support.SessionFactory = org.springframework.orm.hibernate5.support.SessionFactory ; }  <METHOD_END>
<METHOD_START> public org.springframework.orm.hibernate5.support.SessionFactory org.springframework.orm.hibernate5.support.SessionFactory ( ) { return this . org.springframework.orm.hibernate5.support.SessionFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( org.springframework.orm.hibernate5.support.SessionFactory ( ) == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( MethodInvocation org.springframework.orm.hibernate5.support.MethodInvocation ) throws java.lang.Throwable { SessionFactory org.springframework.orm.hibernate5.support.SessionFactory = org.springframework.orm.hibernate5.support.SessionFactory ( ) ; if ( ! TransactionSynchronizationManager . hasResource ( org.springframework.orm.hibernate5.support.SessionFactory ) ) { Session org.springframework.orm.hibernate5.support.Session = org.springframework.orm.hibernate5.support.Session ( ) ; try { TransactionSynchronizationManager . bindResource ( org.springframework.orm.hibernate5.support.SessionFactory , new SessionHolder ( org.springframework.orm.hibernate5.support.Session ) ) ; return org.springframework.orm.hibernate5.support.MethodInvocation . proceed ( ) ; } finally { SessionFactoryUtils . closeSession ( org.springframework.orm.hibernate5.support.Session ) ; TransactionSynchronizationManager . unbindResource ( org.springframework.orm.hibernate5.support.SessionFactory ) ; } } else { return org.springframework.orm.hibernate5.support.MethodInvocation . proceed ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected org.springframework.orm.hibernate5.support.Session org.springframework.orm.hibernate5.support.Session ( ) org.springframework.orm.hibernate5.support.DataAccessResourceFailureException { try { Session org.springframework.orm.hibernate5.support.Session = org.springframework.orm.hibernate5.support.SessionFactory ( ) . openSession ( ) ; org.springframework.orm.hibernate5.support.Session . setFlushMode ( FlushMode . MANUAL ) ; return org.springframework.orm.hibernate5.support.Session ; } catch ( HibernateException org.springframework.orm.hibernate5.support.HibernateException ) { throw new DataAccessResourceFailureException ( STRING , org.springframework.orm.hibernate5.support.HibernateException ) ; } }  <METHOD_END>
