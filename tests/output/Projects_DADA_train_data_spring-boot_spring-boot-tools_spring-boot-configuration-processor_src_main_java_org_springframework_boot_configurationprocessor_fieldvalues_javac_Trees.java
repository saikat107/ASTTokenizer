<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( STRING , java.lang.Object ); }  <METHOD_END>
<METHOD_START> public org.springframework.boot.configurationprocessor.fieldvalues.javac.Tree org.springframework.boot.configurationprocessor.fieldvalues.javac.Tree ( javax.lang.model.element.Element javax.lang.model.element.Element ) throws java.lang.Exception { java.lang.Object java.lang.Object = findMethod ( STRING , javax.lang.model.element.Element .class ) . invoke ( getInstance ( ) , javax.lang.model.element.Element ) ; return ( java.lang.Object == null ? null : new Tree ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.configurationprocessor.fieldvalues.javac.Trees org.springframework.boot.configurationprocessor.fieldvalues.javac.Trees ( javax.annotation.processing.ProcessingEnvironment javax.annotation.processing.ProcessingEnvironment ) throws java.lang.Exception { java.lang.ClassLoader java.lang.ClassLoader = javax.annotation.processing.ProcessingEnvironment . java.lang.Class<? extends javax.annotation.processing.ProcessingEnvironment> ( ) . java.lang.ClassLoader ( ) ; java.lang.Class<?> < ? > java.lang.Class<?> = findClass ( java.lang.ClassLoader , STRING ) ; java.lang.reflect.Method java.lang.reflect.Method = findMethod ( java.lang.Class<> , STRING , javax.annotation.processing.ProcessingEnvironment .class ) ; return new org.springframework.boot.configurationprocessor.fieldvalues.javac.Trees ( java.lang.reflect.Method . java.lang.Object ( null , javax.annotation.processing.ProcessingEnvironment ) ) ; }  <METHOD_END>
