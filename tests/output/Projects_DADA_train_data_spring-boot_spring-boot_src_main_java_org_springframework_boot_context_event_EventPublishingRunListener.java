<METHOD_START> public void ( SpringApplication org.springframework.boot.context.event.SpringApplication , java.lang.String [] java.lang.String[] ) { this . org.springframework.boot.context.event.SpringApplication = org.springframework.boot.context.event.SpringApplication ; this . java.lang.String[] = java.lang.String[] ; this . org.springframework.boot.context.event.SimpleApplicationEventMulticaster = new SimpleApplicationEventMulticaster ( ) ; for ( ApplicationListener < ? > org.springframework.boot.context.event.ApplicationListener<?> : org.springframework.boot.context.event.SpringApplication . getListeners ( ) ) { this . org.springframework.boot.context.event.SimpleApplicationEventMulticaster . addApplicationListener ( org.springframework.boot.context.event.ApplicationListener<> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { this . org.springframework.boot.context.event.SimpleApplicationEventMulticaster . multicastEvent ( new ApplicationStartedEvent ( this . org.springframework.boot.context.event.SpringApplication , this . java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableEnvironment org.springframework.boot.context.event.ConfigurableEnvironment ) { this . org.springframework.boot.context.event.SimpleApplicationEventMulticaster . multicastEvent ( new ApplicationEnvironmentPreparedEvent ( this . org.springframework.boot.context.event.SpringApplication , this . java.lang.String[] , org.springframework.boot.context.event.ConfigurableEnvironment ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableApplicationContext org.springframework.boot.context.event.ConfigurableApplicationContext ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableApplicationContext org.springframework.boot.context.event.ConfigurableApplicationContext ) { for ( ApplicationListener < ? > org.springframework.boot.context.event.ApplicationListener<?> : this . org.springframework.boot.context.event.SpringApplication . getListeners ( ) ) { if ( org.springframework.boot.context.event.ApplicationListener<> instanceof ApplicationContextAware ) { ( ( ApplicationContextAware ) org.springframework.boot.context.event.ApplicationListener<> ) . setApplicationContext ( org.springframework.boot.context.event.ConfigurableApplicationContext ) ; } org.springframework.boot.context.event.ConfigurableApplicationContext . addApplicationListener ( org.springframework.boot.context.event.ApplicationListener<> ) ; } this . org.springframework.boot.context.event.SimpleApplicationEventMulticaster . multicastEvent ( new ApplicationPreparedEvent ( this . org.springframework.boot.context.event.SpringApplication , this . java.lang.String[] , org.springframework.boot.context.event.ConfigurableApplicationContext ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableApplicationContext org.springframework.boot.context.event.ConfigurableApplicationContext , java.lang.Throwable java.lang.Throwable ) { SpringApplicationEvent org.springframework.boot.context.event.SpringApplicationEvent = org.springframework.boot.context.event.SpringApplicationEvent ( org.springframework.boot.context.event.ConfigurableApplicationContext , java.lang.Throwable ) ; if ( org.springframework.boot.context.event.ConfigurableApplicationContext != null ) { org.springframework.boot.context.event.ConfigurableApplicationContext . publishEvent ( org.springframework.boot.context.event.SpringApplicationEvent ) ; } else { if ( org.springframework.boot.context.event.SpringApplicationEvent instanceof ApplicationFailedEvent ) { this . org.springframework.boot.context.event.SimpleApplicationEventMulticaster . setErrorHandler ( new org.springframework.boot.context.event.EventPublishingRunListener.LoggingErrorHandler ( ) ) ; } this . org.springframework.boot.context.event.SimpleApplicationEventMulticaster . multicastEvent ( org.springframework.boot.context.event.SpringApplicationEvent ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.context.event.SpringApplicationEvent org.springframework.boot.context.event.SpringApplicationEvent ( ConfigurableApplicationContext org.springframework.boot.context.event.ConfigurableApplicationContext , java.lang.Throwable java.lang.Throwable ) { if ( java.lang.Throwable != null ) { return new ApplicationFailedEvent ( this . org.springframework.boot.context.event.SpringApplication , this . java.lang.String[] , org.springframework.boot.context.event.ConfigurableApplicationContext , java.lang.Throwable ) ; } return new ApplicationReadyEvent ( this . org.springframework.boot.context.event.SpringApplication , this . java.lang.String[] , org.springframework.boot.context.event.ConfigurableApplicationContext ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Throwable java.lang.Throwable ) { org.springframework.boot.context.event.Log . warn ( STRING , java.lang.Throwable ) ; }  <METHOD_END>
