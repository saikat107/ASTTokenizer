<METHOD_START> public void ( java.lang.String java.lang.String ) { this . org.springframework.integration.xml.transformer.XPathExpression = XPathExpressionFactory . createXPathExpression ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( XPathExpression org.springframework.integration.xml.transformer.XPathExpression ) { Assert . notNull ( org.springframework.integration.xml.transformer.XPathExpression , STRING ) ; this . org.springframework.integration.xml.transformer.XPathExpression = org.springframework.integration.xml.transformer.XPathExpression ; }  <METHOD_END>
<METHOD_START> public void void ( XPathEvaluationType org.springframework.integration.xml.transformer.XPathEvaluationType ) { Assert . notNull ( org.springframework.integration.xml.transformer.XPathEvaluationType , STRING ) ; this . org.springframework.integration.xml.transformer.XPathEvaluationType = org.springframework.integration.xml.transformer.XPathEvaluationType ; }  <METHOD_END>
<METHOD_START> public void void ( NodeMapper < ? > org.springframework.integration.xml.transformer.NodeMapper<?> ) { this . org.springframework.integration.xml.transformer.NodeMapper<?> = org.springframework.integration.xml.transformer.NodeMapper<> ; }  <METHOD_END>
<METHOD_START> public void void ( XmlPayloadConverter org.springframework.integration.xml.transformer.XmlPayloadConverter ) { Assert . notNull ( org.springframework.integration.xml.transformer.XmlPayloadConverter , STRING ) ; this . org.springframework.integration.xml.transformer.XmlPayloadConverter = org.springframework.integration.xml.transformer.XmlPayloadConverter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.xml.transformer.Message<?> ) throws java.lang.Exception { org.w3c.dom.Node org.w3c.dom.Node = this . org.springframework.integration.xml.transformer.XmlPayloadConverter . convertToNode ( org.springframework.integration.xml.transformer.Message<> . getPayload ( ) ) ; java.lang.Object java.lang.Object = null ; if ( this . org.springframework.integration.xml.transformer.NodeMapper<> != null ) { java.lang.Object = this . org.springframework.integration.xml.transformer.XPathExpression . evaluateAsObject ( org.w3c.dom.Node , this . org.springframework.integration.xml.transformer.NodeMapper<> ) ; } else { java.lang.Object = this . org.springframework.integration.xml.transformer.XPathEvaluationType . evaluateXPath ( this . org.springframework.integration.xml.transformer.XPathExpression , org.w3c.dom.Node ) ; } return java.lang.Object ; }  <METHOD_END>
