<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object [] java.lang.Object[] ) throws java.lang.Throwable { if ( boolean ( java.lang.reflect.Method ) ) { return java.lang.reflect.Method . java.lang.Object ( org.springframework.data.cassandra.repository.support.MapId , java.lang.Object[] ) ; } if ( java.lang.Object[] != null && java.lang.Object[] . int > NUMBER ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , java.lang.reflect.Method , java.lang.Class<> ) ) ; } boolean boolean = java.lang.Object[] != null && java.lang.Object[] . int == NUMBER ; if ( boolean ) { void ( java.lang.reflect.Method , java.lang.Object[] [ NUMBER ] ) ; return void .class . boolean ( java.lang.reflect.Method . java.lang.Class<?> ( ) ) ? null : java.lang.Object ; } return java.io.Serializable ( java.lang.reflect.Method ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method ) { return java.util.Map<org.springframework.data.cassandra.repository.support.Signature,org.springframework.data.cassandra.repository.support.Signature> . boolean ( new org.springframework.data.cassandra.repository.support.Signature ( java.lang.reflect.Method , true ) ) ; }  <METHOD_END>
<METHOD_START> public java.io.Serializable java.io.Serializable ( java.lang.reflect.Method java.lang.reflect.Method ) { java.lang.String java.lang.String = java.lang.reflect.Method . java.lang.String ( ) ; if ( java.lang.String . boolean ( STRING ) ) { if ( java.lang.String . int ( ) == NUMBER ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING + STRING + STRING , java.lang.String , java.lang.Class<> ) ) ; } java.lang.String = StringUtils . uncapitalize ( java.lang.String . java.lang.String ( NUMBER ) ) ; } return org.springframework.data.cassandra.repository.support.MapId . get ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Object java.lang.Object ) { java.lang.String java.lang.String = java.lang.reflect.Method . java.lang.String ( ) ; int int = NUMBER ; boolean boolean = java.lang.String . boolean ( STRING ) ; boolean boolean = java.lang.String . boolean ( STRING ) ; int += boolean ? NUMBER : boolean ? NUMBER : NUMBER ; int int = java.lang.String . int ( ) ; if ( boolean || boolean ) { if ( int < int ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING + STRING + STRING + STRING , java.lang.String , java.lang.Class<> ) ) ; } java.lang.String = StringUtils . uncapitalize ( java.lang.String . java.lang.String ( int - NUMBER ) ) ; } if ( java.lang.Object == null ) { org.springframework.data.cassandra.repository.support.MapId . put ( java.lang.String , null ) ; return; } if ( ! ( java.lang.Object instanceof java.io.Serializable ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , java.lang.Object , java.io.Serializable .class . java.lang.String ( ) ) ) ; } org.springframework.data.cassandra.repository.support.MapId . put ( java.lang.String , ( java.io.Serializable ) java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.reflect.Method java.lang.reflect.Method , boolean boolean ) { this( java.lang.reflect.Method . java.lang.String ( ) , java.lang.reflect.Method . java.lang.Class<?>[] ( ) , boolean ? java.lang.reflect.Method . java.lang.Class<?> ( ) : null ); }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , java.lang.Class<?> < ? > [] java.lang.Class<?>[] , java.lang.Class<?> < ? > java.lang.Class<?> ) { this . java.lang.String = java.lang.String ; this . java.lang.Class<?>[] = java.lang.Class<?>[] ; this . java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String . java.lang.String ( STRING , java.lang.Class<> , java.lang.String , java.util.Arrays . java.lang.String ( java.lang.Class<?>[] ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( java.lang.Object == null ) { return false ; } if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.data.cassandra.repository.support.Signature ) ) { return false ; } org.springframework.data.cassandra.repository.support.Signature org.springframework.data.cassandra.repository.support.Signature = ( org.springframework.data.cassandra.repository.support.Signature ) java.lang.Object ; if ( ! this . java.lang.String . boolean ( org.springframework.data.cassandra.repository.support.Signature . java.lang.String ) ) { return false ; } if ( ( this . java.lang.Class<?>[] == null && org.springframework.data.cassandra.repository.support.Signature . java.lang.Class<?>[] != null ) || ( this . java.lang.Class<?>[] != null && org.springframework.data.cassandra.repository.support.Signature . java.lang.Class<?>[] == null ) ) { return false ; } if ( this . java.lang.Class<?>[] != null ) { if ( this . java.lang.Class<?>[] . int != org.springframework.data.cassandra.repository.support.Signature . java.lang.Class<?>[] . int ) { return false ; } for ( int int = NUMBER ; int < this . java.lang.Class<?>[] . int ; int ++ ) { if ( ! this . java.lang.Class<?>[] [ int ] . boolean ( org.springframework.data.cassandra.repository.support.Signature . java.lang.Class<?>[] [ int ] ) ) { return false ; } } } if ( this . java.lang.Class<> == null ) { return org.springframework.data.cassandra.repository.support.Signature . java.lang.Class<> == null ; } return this . java.lang.Class<> . boolean ( org.springframework.data.cassandra.repository.support.Signature . java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ^ java.lang.String . int ( ) ; if ( java.lang.Class<?>[] != null ) { for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<?>[] ) { int ^= java.lang.Class<> . int ( ) ; } } if ( java.lang.Class<> != null ) { int ^= java.lang.Class<> . int ( ) ; } return int ; }  <METHOD_END>
