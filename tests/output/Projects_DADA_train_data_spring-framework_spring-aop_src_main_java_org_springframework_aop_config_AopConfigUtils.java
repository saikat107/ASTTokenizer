<METHOD_START> public static org.springframework.aop.config.BeanDefinition org.springframework.aop.config.BeanDefinition ( BeanDefinitionRegistry org.springframework.aop.config.BeanDefinitionRegistry ) { return org.springframework.aop.config.BeanDefinition ( org.springframework.aop.config.BeanDefinitionRegistry , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.aop.config.BeanDefinition org.springframework.aop.config.BeanDefinition ( BeanDefinitionRegistry org.springframework.aop.config.BeanDefinitionRegistry , java.lang.Object java.lang.Object ) { return org.springframework.aop.config.BeanDefinition ( InfrastructureAdvisorAutoProxyCreator .class , org.springframework.aop.config.BeanDefinitionRegistry , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.aop.config.BeanDefinition org.springframework.aop.config.BeanDefinition ( BeanDefinitionRegistry org.springframework.aop.config.BeanDefinitionRegistry ) { return org.springframework.aop.config.BeanDefinition ( org.springframework.aop.config.BeanDefinitionRegistry , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.aop.config.BeanDefinition org.springframework.aop.config.BeanDefinition ( BeanDefinitionRegistry org.springframework.aop.config.BeanDefinitionRegistry , java.lang.Object java.lang.Object ) { return org.springframework.aop.config.BeanDefinition ( AspectJAwareAdvisorAutoProxyCreator .class , org.springframework.aop.config.BeanDefinitionRegistry , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.aop.config.BeanDefinition org.springframework.aop.config.BeanDefinition ( BeanDefinitionRegistry org.springframework.aop.config.BeanDefinitionRegistry ) { return org.springframework.aop.config.BeanDefinition ( org.springframework.aop.config.BeanDefinitionRegistry , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.aop.config.BeanDefinition org.springframework.aop.config.BeanDefinition ( BeanDefinitionRegistry org.springframework.aop.config.BeanDefinitionRegistry , java.lang.Object java.lang.Object ) { return org.springframework.aop.config.BeanDefinition ( AnnotationAwareAspectJAutoProxyCreator .class , org.springframework.aop.config.BeanDefinitionRegistry , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public static void void ( BeanDefinitionRegistry org.springframework.aop.config.BeanDefinitionRegistry ) { if ( org.springframework.aop.config.BeanDefinitionRegistry . containsBeanDefinition ( java.lang.String ) ) { BeanDefinition org.springframework.aop.config.BeanDefinition = org.springframework.aop.config.BeanDefinitionRegistry . getBeanDefinition ( java.lang.String ) ; org.springframework.aop.config.BeanDefinition . getPropertyValues ( ) . add ( STRING , java.lang.Boolean . java.lang.Boolean ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( BeanDefinitionRegistry org.springframework.aop.config.BeanDefinitionRegistry ) { if ( org.springframework.aop.config.BeanDefinitionRegistry . containsBeanDefinition ( java.lang.String ) ) { BeanDefinition org.springframework.aop.config.BeanDefinition = org.springframework.aop.config.BeanDefinitionRegistry . getBeanDefinition ( java.lang.String ) ; org.springframework.aop.config.BeanDefinition . getPropertyValues ( ) . add ( STRING , java.lang.Boolean . java.lang.Boolean ) ; } }  <METHOD_END>
<METHOD_START> private static org.springframework.aop.config.BeanDefinition org.springframework.aop.config.BeanDefinition ( java.lang.Class<?> < ? > java.lang.Class<?> , BeanDefinitionRegistry org.springframework.aop.config.BeanDefinitionRegistry , java.lang.Object java.lang.Object ) { Assert . notNull ( org.springframework.aop.config.BeanDefinitionRegistry , STRING ) ; if ( org.springframework.aop.config.BeanDefinitionRegistry . containsBeanDefinition ( java.lang.String ) ) { BeanDefinition org.springframework.aop.config.BeanDefinition = org.springframework.aop.config.BeanDefinitionRegistry . getBeanDefinition ( java.lang.String ) ; if ( ! java.lang.Class<> . java.lang.String ( ) . boolean ( org.springframework.aop.config.BeanDefinition . getBeanClassName ( ) ) ) { int int = int ( org.springframework.aop.config.BeanDefinition . getBeanClassName ( ) ) ; int int = int ( java.lang.Class<> ) ; if ( int < int ) { org.springframework.aop.config.BeanDefinition . setBeanClassName ( java.lang.Class<> . java.lang.String ( ) ) ; } } return null ; } RootBeanDefinition org.springframework.aop.config.RootBeanDefinition = new RootBeanDefinition ( java.lang.Class<> ) ; org.springframework.aop.config.RootBeanDefinition . setSource ( java.lang.Object ) ; org.springframework.aop.config.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , Ordered . HIGHEST_PRECEDENCE ) ; org.springframework.aop.config.RootBeanDefinition . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) ; org.springframework.aop.config.BeanDefinitionRegistry . registerBeanDefinition ( java.lang.String , org.springframework.aop.config.RootBeanDefinition ) ; return org.springframework.aop.config.RootBeanDefinition ; }  <METHOD_END>
<METHOD_START> private static int int ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return java.util.List<java.lang.Class<?>> . int ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> private static int int ( java.lang.String java.lang.String ) { for ( int int = NUMBER ; int < java.util.List<java.lang.Class<?>> . int ( ) ; int ++ ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.util.List<java.lang.Class<?>> . java.lang.Class<?> ( int ) ; if ( java.lang.Class<> . java.lang.String ( ) . boolean ( java.lang.String ) ) { return int ; } } throw new java.lang.IllegalArgumentException ( STRING + java.lang.String + STRING ) ; }  <METHOD_END>
