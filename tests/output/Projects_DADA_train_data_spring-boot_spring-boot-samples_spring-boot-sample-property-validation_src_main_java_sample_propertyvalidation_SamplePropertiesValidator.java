<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return java.lang.Class<> == SampleProperties .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , Errors sample.propertyvalidation.Errors ) { ValidationUtils . rejectIfEmpty ( sample.propertyvalidation.Errors , STRING , STRING ) ; ValidationUtils . rejectIfEmpty ( sample.propertyvalidation.Errors , STRING , STRING ) ; SampleProperties sample.propertyvalidation.SampleProperties = ( SampleProperties ) java.lang.Object ; if ( sample.propertyvalidation.SampleProperties . getHost ( ) != null && ! this . java.util.regex.Pattern . java.util.regex.Matcher ( sample.propertyvalidation.SampleProperties . getHost ( ) ) . matches ( ) ) { sample.propertyvalidation.Errors . rejectValue ( STRING , STRING ) ; } }  <METHOD_END>
