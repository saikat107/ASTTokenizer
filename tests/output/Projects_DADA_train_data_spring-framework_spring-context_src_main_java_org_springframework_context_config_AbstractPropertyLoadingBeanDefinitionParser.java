<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.context.config.ParserContext , BeanDefinitionBuilder org.springframework.context.config.BeanDefinitionBuilder ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.String = org.springframework.context.config.ParserContext . getReaderContext ( ) . getEnvironment ( ) . resolvePlaceholders ( java.lang.String ) ; java.lang.String [] java.lang.String[] = StringUtils . commaDelimitedListToStringArray ( java.lang.String ) ; org.springframework.context.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String[] ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.context.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.context.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.context.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.Integer . java.lang.Integer ( java.lang.String ) ) ; } org.springframework.context.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.Boolean . java.lang.Boolean ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ) ; org.springframework.context.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.Boolean . java.lang.Boolean ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ) ; org.springframework.context.config.BeanDefinitionBuilder . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) ; }  <METHOD_END>
