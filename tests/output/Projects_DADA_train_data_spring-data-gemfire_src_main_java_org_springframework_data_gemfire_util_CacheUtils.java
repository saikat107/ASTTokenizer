<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public static boolean boolean ( GemFireCache org.springframework.data.gemfire.util.GemFireCache ) { boolean boolean = ( org.springframework.data.gemfire.util.GemFireCache instanceof ClientCache ) ; if ( org.springframework.data.gemfire.util.GemFireCache instanceof GemFireCacheImpl ) { boolean &= ( ( GemFireCacheImpl ) org.springframework.data.gemfire.util.GemFireCache ) . isClient ( ) ; } return boolean ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ClientCache org.springframework.data.gemfire.util.ClientCache ) { DistributedSystem org.springframework.data.gemfire.util.DistributedSystem = getDistributedSystem ( org.springframework.data.gemfire.util.ClientCache ) ; return ( isConnected ( org.springframework.data.gemfire.util.DistributedSystem ) && StringUtils . hasText ( org.springframework.data.gemfire.util.DistributedSystem . getProperties ( ) . getProperty ( DURABLE_CLIENT_ID_PROPERTY_NAME , null ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public static boolean boolean ( GemFireCache org.springframework.data.gemfire.util.GemFireCache ) { boolean boolean = ( org.springframework.data.gemfire.util.GemFireCache instanceof Cache ) ; if ( org.springframework.data.gemfire.util.GemFireCache instanceof GemFireCacheImpl ) { boolean &= ! ( ( GemFireCacheImpl ) org.springframework.data.gemfire.util.GemFireCache ) . isClient ( ) ; } return boolean ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ) { try { CacheFactory . getAnyInstance ( ) . close ( ) ; return true ; } catch ( java.lang.Exception java.lang.Exception ) { return false ; } }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ) { try { ClientCacheFactory . getAnyInstance ( ) . close ( ) ; return true ; } catch ( java.lang.Exception java.lang.Exception ) { return false ; } }  <METHOD_END>
<METHOD_START> public static org.springframework.data.gemfire.util.Cache org.springframework.data.gemfire.util.Cache ( ) { try { return CacheFactory . getAnyInstance ( ) ; } catch ( CacheClosedException org.springframework.data.gemfire.util.CacheClosedException ) { return null ; } }  <METHOD_END>
<METHOD_START> public static org.springframework.data.gemfire.util.ClientCache org.springframework.data.gemfire.util.ClientCache ( ) { try { return ClientCacheFactory . getAnyInstance ( ) ; } catch ( CacheClosedException org.springframework.data.gemfire.util.CacheClosedException ) { return null ; } }  <METHOD_END>
<METHOD_START> public static org.springframework.data.gemfire.util.GemFireCache org.springframework.data.gemfire.util.GemFireCache ( ) { return defaultIfNull ( org.springframework.data.gemfire.util.Cache ( ) , org.springframework.data.gemfire.util.CacheUtils :: org.springframework.data.gemfire.util.ClientCache ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.lang.String . java.lang.String ( STRING , Region . SEPARATOR , java.lang.String ) ; }  <METHOD_END>
