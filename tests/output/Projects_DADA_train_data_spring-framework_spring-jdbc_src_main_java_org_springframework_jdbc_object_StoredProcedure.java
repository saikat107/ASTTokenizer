<METHOD_START> protected void ( ) {	}  <METHOD_END>
<METHOD_START> protected void ( javax.sql.DataSource javax.sql.DataSource , java.lang.String java.lang.String ) { setDataSource ( javax.sql.DataSource ) ; setSql ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected void ( JdbcTemplate org.springframework.jdbc.object.JdbcTemplate , java.lang.String java.lang.String ) { setJdbcTemplate ( org.springframework.jdbc.object.JdbcTemplate ) ; setSql ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SqlParameter org.springframework.jdbc.object.SqlParameter ) throws org.springframework.jdbc.object.InvalidDataAccessApiUsageException { if ( org.springframework.jdbc.object.SqlParameter . getName ( ) == null ) { throw new InvalidDataAccessApiUsageException ( STRING ) ; } super. declareParameter ( org.springframework.jdbc.object.SqlParameter ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( java.lang.Object ... java.lang.Object[] ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; validateParameters ( java.lang.Object[] ) ; int int = NUMBER ; for ( SqlParameter org.springframework.jdbc.object.SqlParameter : getDeclaredParameters ( ) ) { if ( org.springframework.jdbc.object.SqlParameter . isInputValueProvided ( ) ) { if ( int < java.lang.Object[] . int ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( org.springframework.jdbc.object.SqlParameter . getName ( ) , java.lang.Object[] [ int ++ ] ) ; } } } return getJdbcTemplate ( ) . call ( newCallableStatementCreator ( java.util.Map<java.lang.String,java.lang.Object> ) , getDeclaredParameters ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) throws org.springframework.jdbc.object.DataAccessException { validateParameters ( java.util.Map<java.lang.String,> . java.util.Collection<> ( ) . java.lang.Object[] ( ) ) ; return getJdbcTemplate ( ) . call ( newCallableStatementCreator ( java.util.Map<java.lang.String,> ) , getDeclaredParameters ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ParameterMapper org.springframework.jdbc.object.ParameterMapper ) throws org.springframework.jdbc.object.DataAccessException { checkCompiled ( ) ; return getJdbcTemplate ( ) . call ( newCallableStatementCreator ( org.springframework.jdbc.object.ParameterMapper ) , getDeclaredParameters ( ) ) ; }  <METHOD_END>
