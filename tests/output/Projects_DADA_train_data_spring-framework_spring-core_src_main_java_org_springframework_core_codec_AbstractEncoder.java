<METHOD_START> protected void ( MimeType ... org.springframework.core.codec.MimeType[] ) { this . java.util.List<org.springframework.core.codec.MimeType> = java.util.Arrays . java.util.List ( org.springframework.core.codec.MimeType[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.core.codec.MimeType> < MimeType > java.util.List<org.springframework.core.codec.MimeType> ( ) { return this . java.util.List<org.springframework.core.codec.MimeType> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ResolvableType org.springframework.core.codec.ResolvableType , MimeType org.springframework.core.codec.MimeType ) { if ( org.springframework.core.codec.MimeType == null ) { return true ; } return this . java.util.List<org.springframework.core.codec.MimeType> . stream ( ) . anyMatch ( candidate -> candidate . isCompatibleWith ( mimeType ) ) ; }  <METHOD_END>
