<METHOD_START> public void ( org.springframework.boot.cli.command.CommandException.Option ... org.springframework.boot.cli.command.CommandException.Option[] ) { this . java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> = java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> ( org.springframework.boot.cli.command.CommandException.Option[] ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , org.springframework.boot.cli.command.CommandException.Option ... org.springframework.boot.cli.command.CommandException.Option[] ) { super( java.lang.String ); this . java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> = java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> ( org.springframework.boot.cli.command.CommandException.Option[] ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.Throwable java.lang.Throwable , org.springframework.boot.cli.command.CommandException.Option ... org.springframework.boot.cli.command.CommandException.Option[] ) { super( java.lang.String , java.lang.Throwable ); this . java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> = java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> ( org.springframework.boot.cli.command.CommandException.Option[] ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Throwable java.lang.Throwable , org.springframework.boot.cli.command.CommandException.Option ... org.springframework.boot.cli.command.CommandException.Option[] ) { super( java.lang.Throwable ); this . java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> = java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> ( org.springframework.boot.cli.command.CommandException.Option[] ) ; }  <METHOD_END>
<METHOD_START> private java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> < org.springframework.boot.cli.command.CommandException.Option > java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> ( org.springframework.boot.cli.command.CommandException.Option [] org.springframework.boot.cli.command.CommandException.Option[] ) { if ( org.springframework.boot.cli.command.CommandException.Option[] == null || org.springframework.boot.cli.command.CommandException.Option[] . int == NUMBER ) { return java.util.EnumSet . java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> ( org.springframework.boot.cli.command.CommandException.Option .class ) ; } return java.util.EnumSet . java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> ( java.util.Arrays . java.util.List<org.springframework.boot.cli.command.CommandException.Option> ( org.springframework.boot.cli.command.CommandException.Option[] ) ) ; }  <METHOD_END>
<METHOD_START> public java.util.Set<org.springframework.boot.cli.command.CommandException.Option> < org.springframework.boot.cli.command.CommandException.Option > java.util.Set<org.springframework.boot.cli.command.CommandException.Option> ( ) { return java.util.Collections . java.util.Set<org.springframework.boot.cli.command.CommandException.Option> ( this . java.util.EnumSet<org.springframework.boot.cli.command.CommandException.Option> ) ; }  <METHOD_END>
