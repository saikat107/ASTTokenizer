<METHOD_START> public void ( javax.annotation.processing.RoundEnvironment javax.annotation.processing.RoundEnvironment , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> , java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> , java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ) { super( javax.annotation.processing.RoundEnvironment , java.util.Map<java.lang.String,java.lang.String> , java.util.Collection<java.lang.String> , java.lang.Class<> , java.lang.Class<> , java.lang.Class<> , java.lang.Class<> , java.lang.Class<> , java.lang.Class<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( javax.lang.model.element.VariableElement javax.lang.model.element.VariableElement ) { return super. isBlockedField ( javax.lang.model.element.VariableElement ) || javax.lang.model.element.VariableElement . A ( Id .class ) != null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( javax.lang.model.element.VariableElement javax.lang.model.element.VariableElement ) { return super. isValidField ( javax.lang.model.element.VariableElement ) && javax.lang.model.element.VariableElement . A ( Id .class ) == null ; }  <METHOD_END>
