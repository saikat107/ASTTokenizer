<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String , Environment org.springframework.boot.autoconfigure.freemarker.Environment , java.lang.ClassLoader java.lang.ClassLoader , ResourceLoader org.springframework.boot.autoconfigure.freemarker.ResourceLoader ) { if ( ClassUtils . isPresent ( STRING , java.lang.ClassLoader ) ) { org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider.FreeMarkerTemplateAvailabilityProperties org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider.FreeMarkerTemplateAvailabilityProperties = new org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider.FreeMarkerTemplateAvailabilityProperties ( ) ; RelaxedDataBinder org.springframework.boot.autoconfigure.freemarker.RelaxedDataBinder = new RelaxedDataBinder ( org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider.FreeMarkerTemplateAvailabilityProperties , STRING ) ; org.springframework.boot.autoconfigure.freemarker.RelaxedDataBinder . bind ( new PropertySourcesPropertyValues ( ( ( ConfigurableEnvironment ) org.springframework.boot.autoconfigure.freemarker.Environment ) . getPropertySources ( ) ) ) ; for ( java.lang.String java.lang.String : org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider.FreeMarkerTemplateAvailabilityProperties . java.util.List<java.lang.String> ( ) ) { if ( org.springframework.boot.autoconfigure.freemarker.ResourceLoader . getResource ( java.lang.String + org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider.FreeMarkerTemplateAvailabilityProperties . java.lang.String ( ) + java.lang.String + org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider.FreeMarkerTemplateAvailabilityProperties . java.lang.String ( ) ) . exists ( ) ) { return true ; } } } return false ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return this . java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
