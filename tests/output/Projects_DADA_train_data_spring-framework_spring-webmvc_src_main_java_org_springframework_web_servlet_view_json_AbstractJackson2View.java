<METHOD_START> protected void ( ObjectMapper org.springframework.web.servlet.view.json.ObjectMapper , java.lang.String java.lang.String ) { void ( org.springframework.web.servlet.view.json.ObjectMapper ) ; setContentType ( java.lang.String ) ; setExposePathVariables ( false ) ; }  <METHOD_END>
<METHOD_START> public void void ( ObjectMapper org.springframework.web.servlet.view.json.ObjectMapper ) { Assert . notNull ( org.springframework.web.servlet.view.json.ObjectMapper , STRING ) ; this . org.springframework.web.servlet.view.json.ObjectMapper = org.springframework.web.servlet.view.json.ObjectMapper ; void ( ) ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.servlet.view.json.ObjectMapper org.springframework.web.servlet.view.json.ObjectMapper ( ) { return this . org.springframework.web.servlet.view.json.ObjectMapper ; }  <METHOD_END>
<METHOD_START> public void void ( JsonEncoding org.springframework.web.servlet.view.json.JsonEncoding ) { Assert . notNull ( org.springframework.web.servlet.view.json.JsonEncoding , STRING ) ; this . org.springframework.web.servlet.view.json.JsonEncoding = org.springframework.web.servlet.view.json.JsonEncoding ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.servlet.view.json.JsonEncoding org.springframework.web.servlet.view.json.JsonEncoding ( ) { return this . org.springframework.web.servlet.view.json.JsonEncoding ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . java.lang.Boolean = boolean ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( this . java.lang.Boolean != null ) { this . org.springframework.web.servlet.view.json.ObjectMapper . configure ( SerializationFeature . INDENT_OUTPUT , this . java.lang.Boolean ) ; } }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( HttpServletRequest org.springframework.web.servlet.view.json.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.view.json.HttpServletResponse ) { setResponseContentType ( org.springframework.web.servlet.view.json.HttpServletRequest , org.springframework.web.servlet.view.json.HttpServletResponse ) ; org.springframework.web.servlet.view.json.HttpServletResponse . setCharacterEncoding ( this . org.springframework.web.servlet.view.json.JsonEncoding . getJavaName ( ) ) ; if ( this . boolean ) { org.springframework.web.servlet.view.json.HttpServletResponse . addHeader ( STRING , STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , HttpServletRequest org.springframework.web.servlet.view.json.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.view.json.HttpServletResponse ) throws java.lang.Exception { java.io.OutputStream java.io.OutputStream = ( this . boolean ? createTemporaryOutputStream ( ) : org.springframework.web.servlet.view.json.HttpServletResponse . getOutputStream ( ) ) ; java.lang.Object java.lang.Object = java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> , org.springframework.web.servlet.view.json.HttpServletRequest ) ; void ( java.io.OutputStream , java.lang.Object ) ; if ( this . boolean ) { writeToResponse ( org.springframework.web.servlet.view.json.HttpServletResponse , ( java.io.ByteArrayOutputStream ) java.io.OutputStream ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , HttpServletRequest org.springframework.web.servlet.view.json.HttpServletRequest ) { java.lang.Object java.lang.Object = java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> ) ; java.lang.Class<?> < ? > java.lang.Class<?> = ( java.lang.Class<?> < ? > ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JsonView .class . java.lang.String ( ) ) ; FilterProvider org.springframework.web.servlet.view.json.FilterProvider = ( FilterProvider ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( FilterProvider .class . java.lang.String ( ) ) ; if ( java.lang.Class<> != null || org.springframework.web.servlet.view.json.FilterProvider != null ) { MappingJacksonValue org.springframework.web.servlet.view.json.MappingJacksonValue = new MappingJacksonValue ( java.lang.Object ) ; org.springframework.web.servlet.view.json.MappingJacksonValue . setSerializationView ( java.lang.Class<> ) ; org.springframework.web.servlet.view.json.MappingJacksonValue . setFilters ( org.springframework.web.servlet.view.json.FilterProvider ) ; java.lang.Object = org.springframework.web.servlet.view.json.MappingJacksonValue ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> protected void void ( java.io.OutputStream java.io.OutputStream , java.lang.Object java.lang.Object ) throws java.io.IOException { JsonGenerator org.springframework.web.servlet.view.json.JsonGenerator = this . org.springframework.web.servlet.view.json.ObjectMapper . getFactory ( ) . createGenerator ( java.io.OutputStream , this . org.springframework.web.servlet.view.json.JsonEncoding ) ; void ( org.springframework.web.servlet.view.json.JsonGenerator , java.lang.Object ) ; java.lang.Class<?> < ? > java.lang.Class<?> = null ; FilterProvider org.springframework.web.servlet.view.json.FilterProvider = null ; java.lang.Object java.lang.Object = java.lang.Object ; if ( java.lang.Object instanceof MappingJacksonValue ) { MappingJacksonValue org.springframework.web.servlet.view.json.MappingJacksonValue = ( MappingJacksonValue ) java.lang.Object ; java.lang.Object = org.springframework.web.servlet.view.json.MappingJacksonValue . getValue ( ) ; java.lang.Class<?> = org.springframework.web.servlet.view.json.MappingJacksonValue . getSerializationView ( ) ; org.springframework.web.servlet.view.json.FilterProvider = org.springframework.web.servlet.view.json.MappingJacksonValue . getFilters ( ) ; } if ( java.lang.Class<> != null ) { this . org.springframework.web.servlet.view.json.ObjectMapper . writerWithView ( java.lang.Class<> ) . writeValue ( org.springframework.web.servlet.view.json.JsonGenerator , java.lang.Object ) ; } else if ( org.springframework.web.servlet.view.json.FilterProvider != null ) { this . org.springframework.web.servlet.view.json.ObjectMapper . writer ( org.springframework.web.servlet.view.json.FilterProvider ) . writeValue ( org.springframework.web.servlet.view.json.JsonGenerator , java.lang.Object ) ; } else { this . org.springframework.web.servlet.view.json.ObjectMapper . writeValue ( org.springframework.web.servlet.view.json.JsonGenerator , java.lang.Object ) ; } void ( org.springframework.web.servlet.view.json.JsonGenerator , java.lang.Object ) ; org.springframework.web.servlet.view.json.JsonGenerator . flush ( ) ; }  <METHOD_END>
<METHOD_START> public abstract void void ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> protected abstract java.lang.Object java.lang.Object ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> );  <METHOD_END>
<METHOD_START> protected void void ( JsonGenerator org.springframework.web.servlet.view.json.JsonGenerator , java.lang.Object java.lang.Object ) throws java.io.IOException {	}  <METHOD_END>
<METHOD_START> protected void void ( JsonGenerator org.springframework.web.servlet.view.json.JsonGenerator , java.lang.Object java.lang.Object ) throws java.io.IOException {	}  <METHOD_END>
