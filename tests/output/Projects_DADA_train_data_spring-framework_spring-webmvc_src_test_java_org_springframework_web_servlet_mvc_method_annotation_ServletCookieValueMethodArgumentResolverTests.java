<METHOD_START> @ Before public void void ( ) java.lang.Exception { org.springframework.web.servlet.mvc.method.annotation.ServletCookieValueMethodArgumentResolver = new ServletCookieValueMethodArgumentResolver ( null ) ; org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest = new MockHttpServletRequest ( ) ; org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest = new ServletWebRequest ( org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest , new MockHttpServletResponse ( ) ) ; java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.ServletCookieValueMethodArgumentResolverTests> ( ) . java.lang.reflect.Method ( STRING , Cookie .class , java.lang.String .class ) ; org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new SynthesizingMethodParameter ( java.lang.reflect.Method , NUMBER ) ; org.springframework.web.servlet.mvc.method.annotation.MethodParameter = new SynthesizingMethodParameter ( java.lang.reflect.Method , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Cookie org.springframework.web.servlet.mvc.method.annotation.Cookie = new Cookie ( STRING , STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setCookies ( org.springframework.web.servlet.mvc.method.annotation.Cookie ) ; Cookie org.springframework.web.servlet.mvc.method.annotation.Cookie = ( Cookie ) org.springframework.web.servlet.mvc.method.annotation.ServletCookieValueMethodArgumentResolver . resolveArgument ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter , null , org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , null ) ; assertEquals ( STRING , org.springframework.web.servlet.mvc.method.annotation.Cookie , org.springframework.web.servlet.mvc.method.annotation.Cookie ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Cookie org.springframework.web.servlet.mvc.method.annotation.Cookie = new Cookie ( STRING , STRING ) ; org.springframework.web.servlet.mvc.method.annotation.MockHttpServletRequest . setCookies ( org.springframework.web.servlet.mvc.method.annotation.Cookie ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.web.servlet.mvc.method.annotation.ServletCookieValueMethodArgumentResolver . resolveArgument ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter , null , org.springframework.web.servlet.mvc.method.annotation.ServletWebRequest , null ) ; assertEquals ( STRING , org.springframework.web.servlet.mvc.method.annotation.Cookie . getValue ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ CookieValue ( STRING ) Cookie org.springframework.web.servlet.mvc.method.annotation.Cookie , @ CookieValue ( name = STRING , defaultValue = STRING ) java.lang.String java.lang.String ) {	}  <METHOD_END>
