<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( HttpServletRequest org.springframework.web.filter.HttpServletRequest , HttpServletResponse org.springframework.web.filter.HttpServletResponse , FilterChain org.springframework.web.filter.FilterChain )			throws org.springframework.web.filter.ServletException , java.io.IOException { HttpServletRequest org.springframework.web.filter.HttpServletRequest = org.springframework.web.filter.HttpServletRequest ; if ( STRING . boolean ( org.springframework.web.filter.HttpServletRequest . getMethod ( ) ) && org.springframework.web.filter.HttpServletRequest . getAttribute ( WebUtils . ERROR_EXCEPTION_ATTRIBUTE ) == null ) { java.lang.String java.lang.String = org.springframework.web.filter.HttpServletRequest . getParameter ( this . java.lang.String ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.web.filter.HttpServletRequest = new org.springframework.web.filter.HiddenHttpMethodFilter.HttpMethodRequestWrapper ( org.springframework.web.filter.HttpServletRequest , java.lang.String ) ; } } org.springframework.web.filter.FilterChain . doFilter ( org.springframework.web.filter.HttpServletRequest , org.springframework.web.filter.HttpServletResponse ) ; }  <METHOD_END>
<METHOD_START> public void ( HttpServletRequest org.springframework.web.filter.HttpServletRequest , java.lang.String java.lang.String ) { super( org.springframework.web.filter.HttpServletRequest ); this . java.lang.String = java.lang.String . java.lang.String ( java.util.Locale . java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
