<METHOD_START> @ Before public void void ( ) { org.springframework.data.cassandra.core.CassandraAdminTemplate = new CassandraAdminTemplate ( session , new MappingCassandraConverter ( ) ) ; KeyspaceMetadata org.springframework.data.cassandra.core.KeyspaceMetadata = org.springframework.data.cassandra.core.KeyspaceMetadata ( ) ; java.util.Collection<org.springframework.data.cassandra.core.TableMetadata> < TableMetadata > java.util.Collection<org.springframework.data.cassandra.core.TableMetadata> = org.springframework.data.cassandra.core.KeyspaceMetadata . getTables ( ) ; for ( TableMetadata org.springframework.data.cassandra.core.TableMetadata : java.util.Collection<org.springframework.data.cassandra.core.TableMetadata> ) { org.springframework.data.cassandra.core.CassandraAdminTemplate . getCqlOperations ( ) . execute ( DropTableCqlGenerator . toCql ( DropTableSpecification . dropTable ( org.springframework.data.cassandra.core.TableMetadata . getName ( ) ) ) ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.data.cassandra.core.KeyspaceMetadata org.springframework.data.cassandra.core.KeyspaceMetadata ( ) { Metadata org.springframework.data.cassandra.core.Metadata = getSession ( ) . getCluster ( ) . getMetadata ( ) ; return org.springframework.data.cassandra.core.Metadata . getKeyspace ( getSession ( ) . getLoggedKeyspace ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.data.cassandra.core.KeyspaceMetadata ( ) . getTables ( ) ) . hasSize ( NUMBER ) ; org.springframework.data.cassandra.core.CassandraAdminTemplate . createTable ( true , CqlIdentifier . cqlId ( STRING ) , Book .class , null ) ; assertThat ( org.springframework.data.cassandra.core.KeyspaceMetadata ( ) . getTables ( ) ) . hasSize ( NUMBER ) ; org.springframework.data.cassandra.core.CassandraAdminTemplate . createTable ( true , CqlIdentifier . cqlId ( STRING ) , Book .class , null ) ; assertThat ( org.springframework.data.cassandra.core.KeyspaceMetadata ( ) . getTables ( ) ) . hasSize ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.cassandra.core.CassandraAdminTemplate . createTable ( true , CqlIdentifier . cqlId ( STRING ) , Book .class , null ) ; assertThat ( org.springframework.data.cassandra.core.KeyspaceMetadata ( ) . getTables ( ) ) . hasSize ( NUMBER ) ; org.springframework.data.cassandra.core.CassandraAdminTemplate . dropTable ( Book .class ) ; assertThat ( org.springframework.data.cassandra.core.KeyspaceMetadata ( ) . getTables ( ) ) . hasSize ( NUMBER ) ; org.springframework.data.cassandra.core.CassandraAdminTemplate . createTable ( true , CqlIdentifier . cqlId ( STRING ) , Book .class , null ) ; org.springframework.data.cassandra.core.CassandraAdminTemplate . dropTable ( CqlIdentifier . cqlId ( STRING ) ) ; assertThat ( org.springframework.data.cassandra.core.KeyspaceMetadata ( ) . getTables ( ) ) . hasSize ( NUMBER ) ; }  <METHOD_END>
