<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return PartitionedRegionFactoryBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , boolean boolean ) { validateDataPolicyShortcutAttributesMutualExclusion ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext ) ; BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( RegionAttributesFactoryBean .class ) ; doParseRegionConfiguration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , boolean ) ; org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( PartitionAttributesFactoryBean .class ) ; void ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; void ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; if ( org.w3c.dom.Element != null ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.Object ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ) ; } org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; if ( org.w3c.dom.Element != null ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.Object ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ) ; } java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING ) ; if ( ! CollectionUtils . isEmpty ( java.util.List<org.w3c.dom.Element> ) ) { @ java.lang.SuppressWarnings ( STRING ) ManagedList org.springframework.data.gemfire.config.xml.ManagedList = new ManagedList ( ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( FixedPartitionAttributesFactoryBean .class ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; org.springframework.data.gemfire.config.xml.ManagedList . add ( org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; } org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.data.gemfire.config.xml.ManagedList ) ; } org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; }  <METHOD_END>
<METHOD_START> void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) { java.lang.String java.lang.String = getParentName ( org.w3c.dom.Element ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( org.springframework.data.gemfire.config.xml.ParserContext . getRegistry ( ) . containsBeanDefinition ( java.lang.String ) ) { BeanDefinition org.springframework.data.gemfire.config.xml.BeanDefinition = org.springframework.data.gemfire.config.xml.ParserContext . getRegistry ( ) . getBeanDefinition ( java.lang.String ) ; BeanDefinition org.springframework.data.gemfire.config.xml.BeanDefinition = getRegionAttributesBeanDefinition ( org.springframework.data.gemfire.config.xml.BeanDefinition ) ; if ( org.springframework.data.gemfire.config.xml.BeanDefinition != null ) { if ( org.springframework.data.gemfire.config.xml.BeanDefinition . getPropertyValues ( ) . contains ( STRING ) ) { PropertyValue org.springframework.data.gemfire.config.xml.PropertyValue = org.springframework.data.gemfire.config.xml.BeanDefinition . getPropertyValues ( ) . getPropertyValue ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.data.gemfire.config.xml.PropertyValue . getValue ( ) ; if ( java.lang.Object instanceof BeanDefinition ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getRawBeanDefinition ( ) . overrideFrom ( ( BeanDefinition ) java.lang.Object ) ; } } } } else { org.springframework.data.gemfire.config.xml.ParserContext . getReaderContext ( ) . error ( java.lang.String . java.lang.String ( STRING , java.lang.String , resolveId ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getRawBeanDefinition ( ) , org.springframework.data.gemfire.config.xml.ParserContext ) ) , org.w3c.dom.Element ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , java.lang.String java.lang.String ) { ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addDependsOn ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) { return ParsingUtils . parseRefOrSingleNestedBeanDeclaration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) { return ParsingUtils . parseRefOrNestedBeanDeclaration ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.ParserContext , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; }  <METHOD_END>
