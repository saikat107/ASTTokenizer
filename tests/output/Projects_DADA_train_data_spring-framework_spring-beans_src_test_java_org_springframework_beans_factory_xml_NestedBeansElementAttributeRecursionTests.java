<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) . loadBeanDefinitions ( new ClassPathResource ( STRING , this . java.lang.Class<? extends org.springframework.beans.factory.xml.NestedBeansElementAttributeRecursionTests> ( ) ) ) ; BeanDefinition org.springframework.beans.factory.xml.BeanDefinition = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) ; BeanDefinition org.springframework.beans.factory.xml.BeanDefinition = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) ; BeanDefinition org.springframework.beans.factory.xml.BeanDefinition = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) ; BeanDefinition org.springframework.beans.factory.xml.BeanDefinition = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) ; BeanDefinition org.springframework.beans.factory.xml.BeanDefinition = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinition . isLazyInit ( ) , is ( false ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinition . isLazyInit ( ) , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinition . isLazyInit ( ) , is ( false ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinition . isLazyInit ( ) , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinition . isLazyInit ( ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) . loadBeanDefinitions ( new ClassPathResource ( STRING , this . java.lang.Class<? extends org.springframework.beans.factory.xml.NestedBeansElementAttributeRecursionTests> ( ) ) ) ; TestBean org.springframework.beans.factory.xml.TestBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , TestBean .class ) ; assertThat ( ( java.lang.Iterable<java.lang.String> < java.lang.String > ) org.springframework.beans.factory.xml.TestBean . getSomeList ( ) , hasItems ( STRING , STRING ) ) ; assertThat ( ( java.lang.Iterable<java.lang.String> < java.lang.String > ) org.springframework.beans.factory.xml.TestBean . getSomeList ( ) , not ( hasItems ( STRING , STRING ) ) ) ; TestBean org.springframework.beans.factory.xml.TestBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , TestBean .class ) ; assertThat ( ( java.lang.Iterable<java.lang.String> < java.lang.String > ) org.springframework.beans.factory.xml.TestBean . getSomeList ( ) , hasItems ( STRING , STRING , STRING , STRING ) ) ; TestBean org.springframework.beans.factory.xml.TestBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , TestBean .class ) ; assertThat ( ( java.lang.Iterable<java.lang.String> < java.lang.String > ) org.springframework.beans.factory.xml.TestBean . getSomeList ( ) , hasItems ( STRING , STRING , STRING , STRING , STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) . loadBeanDefinitions ( new ClassPathResource ( STRING , this . java.lang.Class<? extends org.springframework.beans.factory.xml.NestedBeansElementAttributeRecursionTests> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( false ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( false ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( false ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( false ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( false ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( false ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBeanDefinition ( STRING ) . isAutowireCandidate ( ) , is ( false ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) . loadBeanDefinitions ( new ClassPathResource ( STRING , this . java.lang.Class<? extends org.springframework.beans.factory.xml.NestedBeansElementAttributeRecursionTests> ( ) ) ) ; org.springframework.beans.factory.xml.InitDestroyBean org.springframework.beans.factory.xml.InitDestroyBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , org.springframework.beans.factory.xml.InitDestroyBean .class ) ; org.springframework.beans.factory.xml.InitDestroyBean org.springframework.beans.factory.xml.InitDestroyBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , org.springframework.beans.factory.xml.InitDestroyBean .class ) ; org.springframework.beans.factory.xml.InitDestroyBean org.springframework.beans.factory.xml.InitDestroyBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , org.springframework.beans.factory.xml.InitDestroyBean .class ) ; org.springframework.beans.factory.xml.InitDestroyBean org.springframework.beans.factory.xml.InitDestroyBean = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING , org.springframework.beans.factory.xml.InitDestroyBean .class ) ; assertThat ( org.springframework.beans.factory.xml.InitDestroyBean . boolean , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.InitDestroyBean . boolean , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.InitDestroyBean . boolean , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.InitDestroyBean . boolean , is ( true ) ) ; org.springframework.beans.factory.xml.DefaultListableBeanFactory . destroySingletons ( ) ; assertThat ( org.springframework.beans.factory.xml.InitDestroyBean . boolean , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.InitDestroyBean . boolean , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.InitDestroyBean . boolean , is ( true ) ) ; assertThat ( org.springframework.beans.factory.xml.InitDestroyBean . boolean , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> void void ( ) { this . boolean = true ; }  <METHOD_END>
