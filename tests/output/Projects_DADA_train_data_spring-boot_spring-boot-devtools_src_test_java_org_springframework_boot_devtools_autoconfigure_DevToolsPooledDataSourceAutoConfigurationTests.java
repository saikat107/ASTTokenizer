<METHOD_START> @ Test public void void ( ) java.sql.SQLException { ConfigurableApplicationContext org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext = createContext ( DataSourceAutoConfiguration .class , DataSourceSpyConfiguration .class ) ; java.sql.Statement java.sql.Statement = configureDataSourceBehaviour ( org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . getBean ( javax.sql.DataSource .class ) ) ; org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . close ( ) ; verify ( java.sql.Statement ) . execute ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { ConfigurableApplicationContext org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext = createContext ( STRING , DataSourceAutoConfiguration .class , DataSourceSpyConfiguration .class ) ; java.sql.Statement java.sql.Statement = configureDataSourceBehaviour ( org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . getBean ( javax.sql.DataSource .class ) ) ; org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . close ( ) ; verify ( java.sql.Statement , times ( NUMBER ) ) . execute ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { ConfigurableApplicationContext org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext = createContext ( STRING , STRING , DataSourceAutoConfiguration .class , DataSourceSpyConfiguration .class ) ; java.sql.Statement java.sql.Statement = configureDataSourceBehaviour ( org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . getBean ( javax.sql.DataSource .class ) ) ; org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . close ( ) ; verify ( java.sql.Statement , times ( NUMBER ) ) . execute ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { ConfigurableApplicationContext org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext = createContext ( STRING , STRING , DataSourceAutoConfiguration .class , DataSourceSpyConfiguration .class ) ; java.sql.Statement java.sql.Statement = configureDataSourceBehaviour ( org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . getBean ( javax.sql.DataSource .class ) ) ; org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . close ( ) ; verify ( java.sql.Statement , times ( NUMBER ) ) . execute ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { ConfigurableApplicationContext org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext = createContext ( STRING , STRING , DataSourceAutoConfiguration .class , DataSourceSpyConfiguration .class ) ; java.sql.Statement java.sql.Statement = configureDataSourceBehaviour ( org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . getBean ( javax.sql.DataSource .class ) ) ; org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . close ( ) ; verify ( java.sql.Statement , times ( NUMBER ) ) . execute ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { ConfigurableApplicationContext org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext = createContext ( STRING , STRING , DataSourceAutoConfiguration .class , DataSourceSpyConfiguration .class ) ; java.sql.Statement java.sql.Statement = configureDataSourceBehaviour ( org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . getBean ( javax.sql.DataSource .class ) ) ; org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . close ( ) ; verify ( java.sql.Statement , times ( NUMBER ) ) . execute ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { ConfigurableApplicationContext org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext = createContext ( STRING , STRING , DataSourceAutoConfiguration .class , DataSourceSpyConfiguration .class ) ; java.sql.Statement java.sql.Statement = configureDataSourceBehaviour ( org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . getBean ( javax.sql.DataSource .class ) ) ; org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . close ( ) ; verify ( java.sql.Statement , times ( NUMBER ) ) . execute ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.sql.SQLException { ConfigurableApplicationContext org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext = createContext ( STRING , STRING , DataSourceAutoConfiguration .class , DataSourceSpyConfiguration .class ) ; java.sql.Statement java.sql.Statement = configureDataSourceBehaviour ( org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . getBean ( javax.sql.DataSource .class ) ) ; org.springframework.boot.devtools.autoconfigure.ConfigurableApplicationContext . close ( ) ; verify ( java.sql.Statement , times ( NUMBER ) ) . execute ( STRING ) ; }  <METHOD_END>
