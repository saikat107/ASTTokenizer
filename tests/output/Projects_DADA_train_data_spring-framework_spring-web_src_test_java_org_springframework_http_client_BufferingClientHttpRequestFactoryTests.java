<METHOD_START> @ java.lang.Override protected org.springframework.http.client.ClientHttpRequestFactory org.springframework.http.client.ClientHttpRequestFactory ( ) { return new BufferingClientHttpRequestFactory ( new HttpComponentsClientHttpRequestFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClientHttpRequest org.springframework.http.client.ClientHttpRequest = factory . createRequest ( new java.net.URI ( baseUrl + STRING ) , HttpMethod . PUT ) ; assertEquals ( STRING , HttpMethod . PUT , org.springframework.http.client.ClientHttpRequest . getMethod ( ) ) ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; org.springframework.http.client.ClientHttpRequest . getHeaders ( ) . add ( java.lang.String , java.lang.String ) ; java.lang.String java.lang.String = STRING ; org.springframework.http.client.ClientHttpRequest . getHeaders ( ) . add ( java.lang.String , java.lang.String ) ; byte [] byte[] = STRING . byte[] ( STRING ) ; org.springframework.http.client.ClientHttpRequest . getHeaders ( ) . setContentLength ( byte[] . int ) ; FileCopyUtils . copy ( byte[] , org.springframework.http.client.ClientHttpRequest . getBody ( ) ) ; ClientHttpResponse org.springframework.http.client.ClientHttpResponse = org.springframework.http.client.ClientHttpRequest . execute ( ) ; try { assertEquals ( STRING , HttpStatus . OK , org.springframework.http.client.ClientHttpResponse . getStatusCode ( ) ) ; assertEquals ( STRING , HttpStatus . OK , org.springframework.http.client.ClientHttpResponse . getStatusCode ( ) ) ; assertTrue ( STRING , org.springframework.http.client.ClientHttpResponse . getHeaders ( ) . containsKey ( java.lang.String ) ) ; assertTrue ( STRING , org.springframework.http.client.ClientHttpResponse . getHeaders ( ) . containsKey ( java.lang.String ) ) ; assertEquals ( STRING , java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String ) , org.springframework.http.client.ClientHttpResponse . getHeaders ( ) . get ( java.lang.String ) ) ; assertEquals ( STRING , java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String , java.lang.String ) , org.springframework.http.client.ClientHttpResponse . getHeaders ( ) . get ( java.lang.String ) ) ; byte [] byte[] = FileCopyUtils . copyToByteArray ( org.springframework.http.client.ClientHttpResponse . getBody ( ) ) ; assertTrue ( STRING , java.util.Arrays . boolean ( byte[] , byte[] ) ) ; FileCopyUtils . copyToByteArray ( org.springframework.http.client.ClientHttpResponse . getBody ( ) ) ; assertTrue ( STRING , java.util.Arrays . boolean ( byte[] , byte[] ) ) ; } finally { org.springframework.http.client.ClientHttpResponse . close ( ) ; } }  <METHOD_END>
