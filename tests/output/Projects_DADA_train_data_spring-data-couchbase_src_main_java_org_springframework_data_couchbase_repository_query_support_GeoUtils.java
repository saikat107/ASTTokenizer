<METHOD_START> public static double [] double[] ( Point org.springframework.data.couchbase.repository.query.support.Point , Distance org.springframework.data.couchbase.repository.query.support.Distance ) { if ( org.springframework.data.couchbase.repository.query.support.Point == null || org.springframework.data.couchbase.repository.query.support.Distance == null ) throw new java.lang.NullPointerException ( STRING ) ; double double = java.lang.Math . int ( org.springframework.data.couchbase.repository.query.support.Distance . getNormalizedValue ( ) ) ; double double = org.springframework.data.couchbase.repository.query.support.Point . getX ( ) - double ; double double = org.springframework.data.couchbase.repository.query.support.Point . getY ( ) - double ; double double = org.springframework.data.couchbase.repository.query.support.Point . getX ( ) + double ; double double = org.springframework.data.couchbase.repository.query.support.Point . getY ( ) + double ; return new double [] { double , double , double , double } ; }  <METHOD_END>
<METHOD_START> public static void void ( JsonArray org.springframework.data.couchbase.repository.query.support.JsonArray , JsonArray org.springframework.data.couchbase.repository.query.support.JsonArray , boolean boolean , Point ... org.springframework.data.couchbase.repository.query.support.Point[] ) { if ( org.springframework.data.couchbase.repository.query.support.Point[] == null || points . length == NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( boolean ) { if ( points . length != NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( org.springframework.data.couchbase.repository.query.support.Point[] [ NUMBER ] . getX ( ) > org.springframework.data.couchbase.repository.query.support.Point[] [ NUMBER ] . getX ( ) || org.springframework.data.couchbase.repository.query.support.Point[] [ NUMBER ] . getY ( ) > org.springframework.data.couchbase.repository.query.support.Point[] [ NUMBER ] . getY ( ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } org.springframework.data.couchbase.repository.query.support.JsonArray . add ( org.springframework.data.couchbase.repository.query.support.Point[] [ NUMBER ] . getX ( ) ) . add ( org.springframework.data.couchbase.repository.query.support.Point[] [ NUMBER ] . getY ( ) ) ; org.springframework.data.couchbase.repository.query.support.JsonArray . add ( org.springframework.data.couchbase.repository.query.support.Point[] [ NUMBER ] . getX ( ) ) . add ( org.springframework.data.couchbase.repository.query.support.Point[] [ NUMBER ] . getY ( ) ) ; } else { double double = java.lang.Double . double ; double double = java.lang.Double . double ; double double = java.lang.Double . double ; double double = java.lang.Double . double ; for ( Point org.springframework.data.couchbase.repository.query.support.Point : org.springframework.data.couchbase.repository.query.support.Point[] ) { double = org.springframework.data.couchbase.repository.query.support.Point . getX ( ) < double ? org.springframework.data.couchbase.repository.query.support.Point . getX ( ) : double ; double = org.springframework.data.couchbase.repository.query.support.Point . getX ( ) > double ? org.springframework.data.couchbase.repository.query.support.Point . getX ( ) : double ; double = org.springframework.data.couchbase.repository.query.support.Point . getY ( ) < double ? org.springframework.data.couchbase.repository.query.support.Point . getY ( ) : double ; double = org.springframework.data.couchbase.repository.query.support.Point . getY ( ) > double ? org.springframework.data.couchbase.repository.query.support.Point . getY ( ) : double ; } org.springframework.data.couchbase.repository.query.support.JsonArray . add ( double ) . add ( double ) ; org.springframework.data.couchbase.repository.query.support.JsonArray . add ( double ) . add ( double ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( JsonArray org.springframework.data.couchbase.repository.query.support.JsonArray , JsonArray org.springframework.data.couchbase.repository.query.support.JsonArray , Shape org.springframework.data.couchbase.repository.query.support.Shape ) { if ( org.springframework.data.couchbase.repository.query.support.Shape instanceof Box ) { Box org.springframework.data.couchbase.repository.query.support.Box = ( Box ) org.springframework.data.couchbase.repository.query.support.Shape ; org.springframework.data.couchbase.repository.query.support.JsonArray . add ( org.springframework.data.couchbase.repository.query.support.Box . getFirst ( ) . getX ( ) ) . add ( org.springframework.data.couchbase.repository.query.support.Box . getFirst ( ) . getY ( ) ) ; org.springframework.data.couchbase.repository.query.support.JsonArray . add ( org.springframework.data.couchbase.repository.query.support.Box . getSecond ( ) . getX ( ) ) . add ( org.springframework.data.couchbase.repository.query.support.Box . getSecond ( ) . getY ( ) ) ; } else if ( org.springframework.data.couchbase.repository.query.support.Shape instanceof Polygon ) { double double = java.lang.Double . double ; double double = java.lang.Double . double ; double double = java.lang.Double . double ; double double = java.lang.Double . double ; for ( Point org.springframework.data.couchbase.repository.query.support.Point : ( Polygon ) org.springframework.data.couchbase.repository.query.support.Shape ) { double = org.springframework.data.couchbase.repository.query.support.Point . getX ( ) < double ? org.springframework.data.couchbase.repository.query.support.Point . getX ( ) : double ; double = org.springframework.data.couchbase.repository.query.support.Point . getX ( ) > double ? org.springframework.data.couchbase.repository.query.support.Point . getX ( ) : double ; double = org.springframework.data.couchbase.repository.query.support.Point . getY ( ) < double ? org.springframework.data.couchbase.repository.query.support.Point . getY ( ) : double ; double = org.springframework.data.couchbase.repository.query.support.Point . getY ( ) > double ? org.springframework.data.couchbase.repository.query.support.Point . getY ( ) : double ; } org.springframework.data.couchbase.repository.query.support.JsonArray . add ( double ) . add ( double ) ; org.springframework.data.couchbase.repository.query.support.JsonArray . add ( double ) . add ( double ) ; } else if ( org.springframework.data.couchbase.repository.query.support.Shape instanceof Circle ) { Circle org.springframework.data.couchbase.repository.query.support.Circle = ( Circle ) org.springframework.data.couchbase.repository.query.support.Shape ; Point org.springframework.data.couchbase.repository.query.support.Point = org.springframework.data.couchbase.repository.query.support.Circle . getCenter ( ) ; double double = org.springframework.data.couchbase.repository.query.support.Circle . getRadius ( ) . getNormalizedValue ( ) ; double double = org.springframework.data.couchbase.repository.query.support.Point . getX ( ) - double ; double double = org.springframework.data.couchbase.repository.query.support.Point . getX ( ) + double ; double double = org.springframework.data.couchbase.repository.query.support.Point . getY ( ) - double ; double double = org.springframework.data.couchbase.repository.query.support.Point . getY ( ) + double ; org.springframework.data.couchbase.repository.query.support.JsonArray . add ( double ) . add ( double ) ; org.springframework.data.couchbase.repository.query.support.JsonArray . add ( double ) . add ( double ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.data.couchbase.repository.query.support.Shape . getClass ( ) . getName ( ) ) ; } }  <METHOD_END>
