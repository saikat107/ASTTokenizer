<METHOD_START> @ Test public void void ( ) java.lang.Exception { ApplicationContext org.springframework.boot.test.mock.mockito.ApplicationContext = this . org.springframework.boot.test.mock.mockito.MockBeanOnContextHierarchyIntegrationTests.ChildConfig . org.springframework.boot.test.mock.mockito.ApplicationContext ( ) ; ApplicationContext org.springframework.boot.test.mock.mockito.ApplicationContext = org.springframework.boot.test.mock.mockito.ApplicationContext . getParent ( ) ; assertThat ( org.springframework.boot.test.mock.mockito.ApplicationContext . getBeanNamesForType ( ExampleService .class ) ) . hasSize ( NUMBER ) ; assertThat ( org.springframework.boot.test.mock.mockito.ApplicationContext . getBeanNamesForType ( ExampleServiceCaller .class ) ) . hasSize ( NUMBER ) ; assertThat ( org.springframework.boot.test.mock.mockito.ApplicationContext . getBeanNamesForType ( ExampleService .class ) ) . hasSize ( NUMBER ) ; assertThat ( org.springframework.boot.test.mock.mockito.ApplicationContext . getBeanNamesForType ( ExampleServiceCaller .class ) ) . hasSize ( NUMBER ) ; assertThat ( org.springframework.boot.test.mock.mockito.ApplicationContext . getBean ( ExampleService .class ) ) . isNotNull ( ) ; assertThat ( org.springframework.boot.test.mock.mockito.ApplicationContext . getBean ( ExampleServiceCaller .class ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.boot.test.mock.mockito.ApplicationContext )				throws org.springframework.boot.test.mock.mockito.BeansException { this . org.springframework.boot.test.mock.mockito.ApplicationContext = org.springframework.boot.test.mock.mockito.ApplicationContext ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.mock.mockito.ApplicationContext org.springframework.boot.test.mock.mockito.ApplicationContext ( ) { return this . org.springframework.boot.test.mock.mockito.ApplicationContext ; }  <METHOD_END>
