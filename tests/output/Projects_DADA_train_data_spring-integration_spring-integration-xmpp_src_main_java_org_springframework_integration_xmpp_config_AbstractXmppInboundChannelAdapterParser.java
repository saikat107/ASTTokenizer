<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element );  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.xmpp.config.AbstractBeanDefinition org.springframework.integration.xmpp.config.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.xmpp.config.ParserContext , java.lang.String java.lang.String ) { BeanDefinitionBuilder org.springframework.integration.xmpp.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( java.lang.String ( org.w3c.dom.Element ) ) ; IntegrationNamespaceUtils . configureHeaderMapper ( org.w3c.dom.Element , org.springframework.integration.xmpp.config.BeanDefinitionBuilder , org.springframework.integration.xmpp.config.ParserContext , DefaultXmppHeaderMapper .class , null ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.xmpp.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } else if ( org.springframework.integration.xmpp.config.ParserContext . getRegistry ( ) . containsBeanDefinition ( XmppNamespaceHandler . XMPP_CONNECTION_BEAN_NAME ) ) { org.springframework.integration.xmpp.config.BeanDefinitionBuilder . addConstructorArgReference ( XmppNamespaceHandler . XMPP_CONNECTION_BEAN_NAME ) ; } else { throw new BeanCreationException ( STRING + STRING + STRING ) ; } org.springframework.integration.xmpp.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.xmpp.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; this . void ( org.w3c.dom.Element , org.springframework.integration.xmpp.config.ParserContext , org.springframework.integration.xmpp.config.BeanDefinitionBuilder ) ; return org.springframework.integration.xmpp.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.xmpp.config.ParserContext , BeanDefinitionBuilder org.springframework.integration.xmpp.config.BeanDefinitionBuilder ) { }  <METHOD_END>
