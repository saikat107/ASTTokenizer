<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { this( java.lang.Class<> , java.lang.String , java.lang.Class<> , new DelegatePerTargetObjectIntroductionInterceptor ( java.lang.Class<> , java.lang.Class<> ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { this( java.lang.Class<> , java.lang.String , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) , new DelegatingIntroductionInterceptor ( java.lang.Object ) ); }  <METHOD_END>
<METHOD_START> private void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> , Advice org.springframework.aop.aspectj.Advice ) { this . java.lang.Class<?> = java.lang.Class<> ; ClassFilter org.springframework.aop.aspectj.ClassFilter = new TypePatternClassFilter ( java.lang.String ) ; ClassFilter org.springframework.aop.aspectj.ClassFilter = new ClassFilter ( ) { @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return ! ( java.lang.Class<> . boolean ( java.lang.Class<> ) ) ; } } ; this . org.springframework.aop.aspectj.ClassFilter = ClassFilters . intersection ( org.springframework.aop.aspectj.ClassFilter , org.springframework.aop.aspectj.ClassFilter ) ; this . org.springframework.aop.aspectj.Advice = org.springframework.aop.aspectj.Advice ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return ! ( java.lang.Class<> . boolean ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.aspectj.ClassFilter org.springframework.aop.aspectj.ClassFilter ( ) { return this . org.springframework.aop.aspectj.ClassFilter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.IllegalArgumentException { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.aspectj.Advice org.springframework.aop.aspectj.Advice ( ) { return this . org.springframework.aop.aspectj.Advice ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( ) { return new java.lang.Class<?> < ? > [] { this . java.lang.Class<> } ; }  <METHOD_END>
