<METHOD_START> public void ( MBeanExporter org.springframework.boot.actuate.metrics.jmx.MBeanExporter ) { this . org.springframework.boot.actuate.metrics.jmx.MBeanExporter = org.springframework.boot.actuate.metrics.jmx.MBeanExporter ; }  <METHOD_END>
<METHOD_START> public void void ( ObjectNamingStrategy org.springframework.boot.actuate.metrics.jmx.ObjectNamingStrategy ) { this . org.springframework.boot.actuate.metrics.jmx.ObjectNamingStrategy = org.springframework.boot.actuate.metrics.jmx.ObjectNamingStrategy ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ ManagedOperation public void void ( java.lang.String java.lang.String , long long ) { void ( new Delta <> ( java.lang.String , long ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Delta < ? > org.springframework.boot.actuate.metrics.jmx.Delta<?> ) { org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue = org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ( org.springframework.boot.actuate.metrics.jmx.Delta<> . getName ( ) ) ; org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue . void ( org.springframework.boot.actuate.metrics.jmx.Delta<> . getValue ( ) . longValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ ManagedOperation public void void ( java.lang.String java.lang.String , double double ) { void ( new Metric <> ( java.lang.String , double ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Metric < ? > org.springframework.boot.actuate.metrics.jmx.Metric<?> ) { org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue = org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ( org.springframework.boot.actuate.metrics.jmx.Metric<> . getName ( ) ) ; org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue . void ( org.springframework.boot.actuate.metrics.jmx.Metric<> . getValue ( ) . doubleValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ ManagedOperation public void void ( java.lang.String java.lang.String ) { org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue = this . java.util.concurrent.ConcurrentMap<java.lang.String,org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue> . org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ( java.lang.String ) ; if ( org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue != null ) { try { this . org.springframework.boot.actuate.metrics.jmx.MBeanExporter . unregisterManagedResource ( javax.management.ObjectName ( java.lang.String , org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ) ) ; } catch ( javax.management.MalformedObjectNameException javax.management.MalformedObjectNameException ) { org.springframework.boot.actuate.metrics.jmx.Log . warn ( STRING + java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ( java.lang.String java.lang.String ) { org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue = this . java.util.concurrent.ConcurrentMap<java.lang.String,org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue> . org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ( java.lang.String ) ; if ( org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue == null ) { org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue = new org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ( ) ; org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue = this . java.util.concurrent.ConcurrentMap<java.lang.String,org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue> . org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ( java.lang.String , org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ) ; if ( org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue != null ) { org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue = org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ; } try { this . org.springframework.boot.actuate.metrics.jmx.MBeanExporter . registerManagedResource ( org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue , javax.management.ObjectName ( java.lang.String , org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { } } return org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue ; }  <METHOD_END>
<METHOD_START> private javax.management.ObjectName javax.management.ObjectName ( java.lang.String java.lang.String , org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue )			throws javax.management.MalformedObjectNameException { java.lang.String java.lang.String = java.lang.String . java.lang.String ( this . java.lang.String + STRING , java.lang.String ) ; return this . org.springframework.boot.actuate.metrics.jmx.ObjectNamingStrategy . getObjectName ( org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter.MetricValue , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( double double ) { if ( this . double != double ) { this . long = java.lang.System . long ( ) ; } this . double = double ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = java.lang.System . long ( ) ; this . double += long ; }  <METHOD_END>
<METHOD_START> @ ManagedAttribute public double double ( ) { return this . double ; }  <METHOD_END>
<METHOD_START> @ ManagedAttribute public java.util.Date java.util.Date ( ) { return new java.util.Date ( this . long ) ; }  <METHOD_END>
