<METHOD_START> @ java.lang.Override public java.lang.reflect.Method java.lang.reflect.Method ( ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object [] java.lang.Object[] ( final FunctionContext org.springframework.data.gemfire.function.FunctionContext ) { return ( boolean ( org.springframework.data.gemfire.function.FunctionContext . getArguments ( ) ) ) ? java.lang.Object[] ( ( java.lang.Object [] ) org.springframework.data.gemfire.function.FunctionContext . getArguments ( ) ) : java.lang.Object[] ( org.springframework.data.gemfire.function.FunctionContext ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( final java.lang.Object java.lang.Object ) { return ( java.lang.Object != null && java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object [] java.lang.Object[] ( final java.lang.Object [] java.lang.Object[] ) { java.lang.Object [] java.lang.Object[] = new java.lang.Object [ java.lang.Object[] . int ] ; java.lang.System . void ( java.lang.Object[] , NUMBER , java.lang.Object[] , NUMBER , java.lang.Object[] . int ) ; return java.lang.Object[] ; }  <METHOD_END>
<METHOD_START> private java.lang.Object [] java.lang.Object[] ( final FunctionContext org.springframework.data.gemfire.function.FunctionContext ) { java.lang.Object java.lang.Object = org.springframework.data.gemfire.function.FunctionContext . getArguments ( ) ; return ( java.lang.Object != null ? new java.lang.Object [] { java.lang.Object } : java.lang.Object[] ) ; }  <METHOD_END>
