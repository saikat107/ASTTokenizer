<METHOD_START> protected void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected S S ( java.lang.String java.lang.String ) { return super. id ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) { Assert . notNull ( java.lang.Class<?>[] , STRING ) ; Assert . noNullElements ( java.lang.Class<?>[] , STRING ) ; this . java.util.List<java.lang.Class<?>> . boolean ( java.util.Arrays . java.util.List<java.lang.Class<?>> ( java.lang.Class<?>[] ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( ChannelInterceptor ... org.springframework.integration.dsl.channel.ChannelInterceptor[] ) { Assert . notNull ( org.springframework.integration.dsl.channel.ChannelInterceptor[] , STRING ) ; Assert . noNullElements ( org.springframework.integration.dsl.channel.ChannelInterceptor[] , STRING ) ; this . java.util.List<org.springframework.integration.dsl.channel.ChannelInterceptor> . addAll ( java.util.Arrays . java.util.List ( org.springframework.integration.dsl.channel.ChannelInterceptor[] ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( java.lang.String java.lang.String ) { return S ( new WireTapSpec ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public S S ( MessageChannel org.springframework.integration.dsl.channel.MessageChannel ) { return S ( new WireTapSpec ( org.springframework.integration.dsl.channel.MessageChannel ) ) ; }  <METHOD_END>
<METHOD_START> public S S ( WireTapSpec org.springframework.integration.dsl.channel.WireTapSpec ) { WireTap org.springframework.integration.dsl.channel.WireTap = org.springframework.integration.dsl.channel.WireTapSpec . get ( ) ; this . java.util.List<java.lang.Object> . boolean ( org.springframework.integration.dsl.channel.WireTap ) ; return S ( org.springframework.integration.dsl.channel.WireTap ) ; }  <METHOD_END>
<METHOD_START> public S S ( MessageConverter org.springframework.integration.dsl.channel.MessageConverter ) { this . org.springframework.integration.dsl.channel.MessageConverter = org.springframework.integration.dsl.channel.MessageConverter ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { return this . java.util.List<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected C C ( ) { this . C . setDatatypes ( this . java.util.List<java.lang.Class<?>> . java.lang.Class<?>[] ( new java.lang.Class<?> < ? > [ this . java.util.List<java.lang.Class<?>> . int ( ) ] ) ) ; this . C . setBeanName ( getId ( ) ) ; this . C . setInterceptors ( this . java.util.List<org.springframework.integration.dsl.channel.ChannelInterceptor> ) ; this . C . setMessageConverter ( this . org.springframework.integration.dsl.channel.MessageConverter ) ; return this . C ; }  <METHOD_END>
