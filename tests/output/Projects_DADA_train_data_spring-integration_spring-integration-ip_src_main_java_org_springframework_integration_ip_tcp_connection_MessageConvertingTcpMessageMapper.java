<METHOD_START> public void ( MessageConverter org.springframework.integration.ip.tcp.connection.MessageConverter ) { Assert . notNull ( org.springframework.integration.ip.tcp.connection.MessageConverter , STRING ) ; this . org.springframework.integration.ip.tcp.connection.MessageConverter = org.springframework.integration.ip.tcp.connection.MessageConverter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.ip.tcp.connection.Message<?> < ? > org.springframework.integration.ip.tcp.connection.Message<?> ( TcpConnection org.springframework.integration.ip.tcp.connection.TcpConnection ) throws java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.integration.ip.tcp.connection.TcpConnection . getPayload ( ) ; if ( java.lang.Object != null ) { Message < ? > org.springframework.integration.ip.tcp.connection.Message<?> = this . org.springframework.integration.ip.tcp.connection.MessageConverter . toMessage ( java.lang.Object , null ) ; AbstractIntegrationMessageBuilder < ? > org.springframework.integration.ip.tcp.connection.AbstractIntegrationMessageBuilder<?> = this . getMessageBuilderFactory ( ) . fromMessage ( org.springframework.integration.ip.tcp.connection.Message<> ) ; this . addStandardHeaders ( org.springframework.integration.ip.tcp.connection.TcpConnection , org.springframework.integration.ip.tcp.connection.AbstractIntegrationMessageBuilder<> ) ; this . addCustomHeaders ( org.springframework.integration.ip.tcp.connection.TcpConnection , org.springframework.integration.ip.tcp.connection.AbstractIntegrationMessageBuilder<> ) ; return org.springframework.integration.ip.tcp.connection.AbstractIntegrationMessageBuilder<> . build ( ) ; } else { if ( logger . isWarnEnabled ( ) ) { logger . warn ( STRING + org.springframework.integration.ip.tcp.connection.TcpConnection . getConnectionId ( ) ) ; } return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.ip.tcp.connection.Message<?> ) throws java.lang.Exception { return this . org.springframework.integration.ip.tcp.connection.MessageConverter . fromMessage ( org.springframework.integration.ip.tcp.connection.Message<> , java.lang.Object .class ) ; }  <METHOD_END>
