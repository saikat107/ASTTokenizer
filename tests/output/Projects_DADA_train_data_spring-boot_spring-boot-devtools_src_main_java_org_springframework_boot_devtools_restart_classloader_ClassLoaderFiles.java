<METHOD_START> public void ( ) { this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> = new java.util.LinkedHashMap<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> <> ( ) ; }  <METHOD_END>
<METHOD_START> public void ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles ) { Assert . notNull ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles , STRING ) ; this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> = new java.util.LinkedHashMap<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> <> ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles ) { Assert . notNull ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles , STRING ) ; for ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder : org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles . java.util.Collection<org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> ( ) ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> < java.lang.String , ClassLoaderFile > java.util.Map.Entry<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> : org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder . java.util.Set<java.util.Map.Entry<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile>> ( ) ) { void ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> . getKey ( ) , java.util.Map.Entry<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> . getValue ( ) ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , ClassLoaderFile org.springframework.boot.devtools.restart.classloader.ClassLoaderFile ) { void ( STRING , java.lang.String , org.springframework.boot.devtools.restart.classloader.ClassLoaderFile ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , ClassLoaderFile org.springframework.boot.devtools.restart.classloader.ClassLoaderFile ) { Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFile , STRING ) ; void ( java.lang.String ) ; org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder ( java.lang.String ) . void ( java.lang.String , org.springframework.boot.devtools.restart.classloader.ClassLoaderFile ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { for ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder : this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> . java.util.Collection<org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> ( ) ) { org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder . void ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> protected final org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder ( java.lang.String java.lang.String ) { org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder = this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> . org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder ( java.lang.String ) ; if ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder == null ) { org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder = new org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder ( java.lang.String ) ; this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> . org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder ( java.lang.String , org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder ) ; } return org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> < org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder > java.util.Collection<org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> ( ) { return java.util.Collections . java.util.Collection<org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> ( this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> . java.util.Collection<org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> ( ) ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { int int = NUMBER ; for ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder : this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> . java.util.Collection<org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> ( ) ) { int += org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder . java.util.Collection<org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> ( ) . size ( ) ; } return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.devtools.restart.classloader.ClassLoaderFile org.springframework.boot.devtools.restart.classloader.ClassLoaderFile ( java.lang.String java.lang.String ) { for ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder : this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> . java.util.Collection<org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder> ( ) ) { ClassLoaderFile org.springframework.boot.devtools.restart.classloader.ClassLoaderFile = org.springframework.boot.devtools.restart.classloader.ClassLoaderFiles.SourceFolder . org.springframework.boot.devtools.restart.classloader.ClassLoaderFile ( java.lang.String ) ; if ( org.springframework.boot.devtools.restart.classloader.ClassLoaderFile != null ) { return org.springframework.boot.devtools.restart.classloader.ClassLoaderFile ; } } return null ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.util.Map.Entry<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile>> < java.util.Map.Entry<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> < java.lang.String , ClassLoaderFile > > java.util.Set<java.util.Map.Entry<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile>> ( ) { return this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> . entrySet ( ) ; }  <METHOD_END>
<METHOD_START> protected final void void ( java.lang.String java.lang.String , ClassLoaderFile org.springframework.boot.devtools.restart.classloader.ClassLoaderFile ) { this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> . put ( java.lang.String , org.springframework.boot.devtools.restart.classloader.ClassLoaderFile ) ; }  <METHOD_END>
<METHOD_START> protected final void void ( java.lang.String java.lang.String ) { this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> . remove ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.boot.devtools.restart.classloader.ClassLoaderFile org.springframework.boot.devtools.restart.classloader.ClassLoaderFile ( java.lang.String java.lang.String ) { return this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> . get ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> < ClassLoaderFile > java.util.Collection<org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> ( ) { return java.util.Collections . java.util.Collection ( this . java.util.Map<java.lang.String,org.springframework.boot.devtools.restart.classloader.ClassLoaderFile> . values ( ) ) ; }  <METHOD_END>
