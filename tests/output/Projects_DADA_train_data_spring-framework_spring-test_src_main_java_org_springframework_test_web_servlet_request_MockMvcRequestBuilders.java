<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new MockHttpServletRequestBuilder ( HttpMethod . GET , java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.net.URI java.net.URI ) { return new MockHttpServletRequestBuilder ( HttpMethod . GET , java.net.URI ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new MockHttpServletRequestBuilder ( HttpMethod . POST , java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.net.URI java.net.URI ) { return new MockHttpServletRequestBuilder ( HttpMethod . POST , java.net.URI ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new MockHttpServletRequestBuilder ( HttpMethod . PUT , java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.net.URI java.net.URI ) { return new MockHttpServletRequestBuilder ( HttpMethod . PUT , java.net.URI ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new MockHttpServletRequestBuilder ( HttpMethod . PATCH , java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.net.URI java.net.URI ) { return new MockHttpServletRequestBuilder ( HttpMethod . PATCH , java.net.URI ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new MockHttpServletRequestBuilder ( HttpMethod . DELETE , java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.net.URI java.net.URI ) { return new MockHttpServletRequestBuilder ( HttpMethod . DELETE , java.net.URI ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new MockHttpServletRequestBuilder ( HttpMethod . OPTIONS , java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.net.URI java.net.URI ) { return new MockHttpServletRequestBuilder ( HttpMethod . OPTIONS , java.net.URI ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new MockHttpServletRequestBuilder ( HttpMethod . HEAD , java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.net.URI java.net.URI ) { return new MockHttpServletRequestBuilder ( HttpMethod . HEAD , java.net.URI ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( HttpMethod org.springframework.test.web.servlet.request.HttpMethod , java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new MockHttpServletRequestBuilder ( org.springframework.test.web.servlet.request.HttpMethod , java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( HttpMethod org.springframework.test.web.servlet.request.HttpMethod , java.net.URI java.net.URI ) { return new MockHttpServletRequestBuilder ( org.springframework.test.web.servlet.request.HttpMethod , java.net.URI ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder ( java.lang.String java.lang.String , java.net.URI java.net.URI ) { return new MockHttpServletRequestBuilder ( java.lang.String , java.net.URI ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new MockMultipartHttpServletRequestBuilder ( java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder ( java.net.URI java.net.URI ) { return new MockMultipartHttpServletRequestBuilder ( java.net.URI ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public static org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new MockMultipartHttpServletRequestBuilder ( java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public static org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder ( java.net.URI java.net.URI ) { return new MockMultipartHttpServletRequestBuilder ( java.net.URI ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.request.RequestBuilder org.springframework.test.web.servlet.request.RequestBuilder ( final MvcResult org.springframework.test.web.servlet.request.MvcResult ) { org.springframework.test.web.servlet.request.MvcResult . getAsyncResult ( ) ; return new RequestBuilder ( ) { @ java.lang.Override public org.springframework.test.web.servlet.request.MockHttpServletRequest org.springframework.test.web.servlet.request.MockHttpServletRequest ( ServletContext org.springframework.test.web.servlet.request.ServletContext ) { MockHttpServletRequest org.springframework.test.web.servlet.request.MockHttpServletRequest = org.springframework.test.web.servlet.request.MvcResult . getRequest ( ) ; org.springframework.test.web.servlet.request.MockHttpServletRequest . setDispatcherType ( DispatcherType . ASYNC ) ; org.springframework.test.web.servlet.request.MockHttpServletRequest . setAsyncStarted ( false ) ; return org.springframework.test.web.servlet.request.MockHttpServletRequest ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.web.servlet.request.MockHttpServletRequest org.springframework.test.web.servlet.request.MockHttpServletRequest ( ServletContext org.springframework.test.web.servlet.request.ServletContext ) { MockHttpServletRequest org.springframework.test.web.servlet.request.MockHttpServletRequest = org.springframework.test.web.servlet.request.MvcResult . getRequest ( ) ; org.springframework.test.web.servlet.request.MockHttpServletRequest . setDispatcherType ( DispatcherType . ASYNC ) ; org.springframework.test.web.servlet.request.MockHttpServletRequest . setAsyncStarted ( false ) ; return org.springframework.test.web.servlet.request.MockHttpServletRequest ; }  <METHOD_END>
