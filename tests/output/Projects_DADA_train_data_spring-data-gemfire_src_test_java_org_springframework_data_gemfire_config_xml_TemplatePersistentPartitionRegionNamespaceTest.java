<METHOD_START> @ After public void void ( ) { for ( java.io.File java.io.File : org.springframework.data.gemfire.config.xml.DiskStore . getDiskDirs ( ) ) { FileSystemUtils . deleteRecursive ( FileSystemUtils . getRootRelativeToWorkingDirectoryOrPath ( java.io.File . java.io.File ( ) ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertNotNull ( STRING , org.springframework.data.gemfire.config.xml.Region<,> ) ; assertEquals ( STRING , org.springframework.data.gemfire.config.xml.Region<,> . getName ( ) ) ; assertEquals ( STRING , org.springframework.data.gemfire.config.xml.Region<,> . getFullPath ( ) ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) ) ; assertEquals ( DataPolicy . PERSISTENT_PARTITION , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getDataPolicy ( ) ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getEvictionAttributes ( ) ) ; assertEquals ( EvictionAlgorithm . LRU_HEAP , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getEvictionAttributes ( ) . getAlgorithm ( ) ) ; assertEquals ( EvictionAction . OVERFLOW_TO_DISK , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getEvictionAttributes ( ) . getAction ( ) ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getPartitionAttributes ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getPartitionAttributes ( ) . getRedundantCopies ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getPartitionAttributes ( ) . getTotalNumBuckets ( ) ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getPartitionAttributes ( ) . getPartitionResolver ( ) ) ; assertEquals ( STRING , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getPartitionAttributes ( ) . getPartitionResolver ( ) . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( final EntryOperation < K , V > org.springframework.data.gemfire.config.xml.EntryOperation<K,V> ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
