<METHOD_START> public void void ( java.lang.Throwable java.lang.Throwable , ExitCodeExceptionMapper ... org.springframework.boot.ExitCodeExceptionMapper[] ) { Assert . notNull ( java.lang.Throwable , STRING ) ; Assert . notNull ( org.springframework.boot.ExitCodeExceptionMapper[] , STRING ) ; void ( java.lang.Throwable , java.util.Arrays . java.util.List ( org.springframework.boot.ExitCodeExceptionMapper[] ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Throwable java.lang.Throwable , java.lang.Iterable<? extends org.springframework.boot.ExitCodeExceptionMapper> < ? extends ExitCodeExceptionMapper > java.lang.Iterable<? extends org.springframework.boot.ExitCodeExceptionMapper> ) { Assert . notNull ( java.lang.Throwable , STRING ) ; Assert . notNull ( java.lang.Iterable<> , STRING ) ; for ( ExitCodeExceptionMapper org.springframework.boot.ExitCodeExceptionMapper : java.lang.Iterable<> ) { void ( java.lang.Throwable , org.springframework.boot.ExitCodeExceptionMapper ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Throwable java.lang.Throwable , ExitCodeExceptionMapper org.springframework.boot.ExitCodeExceptionMapper ) { Assert . notNull ( java.lang.Throwable , STRING ) ; Assert . notNull ( org.springframework.boot.ExitCodeExceptionMapper , STRING ) ; void ( new org.springframework.boot.ExitCodeGenerators.MappedExitCodeGenerator ( java.lang.Throwable , org.springframework.boot.ExitCodeExceptionMapper ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ExitCodeGenerator ... org.springframework.boot.ExitCodeGenerator[] ) { Assert . notNull ( org.springframework.boot.ExitCodeGenerator[] , STRING ) ; void ( java.util.Arrays . java.util.List ( org.springframework.boot.ExitCodeGenerator[] ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Iterable<? extends org.springframework.boot.ExitCodeGenerator> < ? extends ExitCodeGenerator > java.lang.Iterable<? extends org.springframework.boot.ExitCodeGenerator> ) { Assert . notNull ( java.lang.Iterable<> , STRING ) ; for ( ExitCodeGenerator org.springframework.boot.ExitCodeGenerator : java.lang.Iterable<> ) { void ( org.springframework.boot.ExitCodeGenerator ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ExitCodeGenerator org.springframework.boot.ExitCodeGenerator ) { Assert . notNull ( org.springframework.boot.ExitCodeGenerator , STRING ) ; this . java.util.List<org.springframework.boot.ExitCodeGenerator> . add ( org.springframework.boot.ExitCodeGenerator ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.boot.ExitCodeGenerator> < ExitCodeGenerator > java.util.Iterator<org.springframework.boot.ExitCodeGenerator> ( ) { return this . java.util.List<org.springframework.boot.ExitCodeGenerator> . iterator ( ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { int int = NUMBER ; for ( ExitCodeGenerator org.springframework.boot.ExitCodeGenerator : this . java.util.List<org.springframework.boot.ExitCodeGenerator> ) { try { int int = org.springframework.boot.ExitCodeGenerator . getExitCode ( ) ; if ( int > NUMBER && int > int || int < NUMBER && int < int ) { int = int ; } } catch ( java.lang.Exception java.lang.Exception ) { int = ( int == NUMBER ? NUMBER : int ) ; java.lang.Exception . void ( ) ; } } return int ; }  <METHOD_END>
<METHOD_START> void ( java.lang.Throwable java.lang.Throwable , ExitCodeExceptionMapper org.springframework.boot.ExitCodeExceptionMapper ) { this . java.lang.Throwable = java.lang.Throwable ; this . org.springframework.boot.ExitCodeExceptionMapper = org.springframework.boot.ExitCodeExceptionMapper ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.boot.ExitCodeExceptionMapper . getExitCode ( this . java.lang.Throwable ) ; }  <METHOD_END>
