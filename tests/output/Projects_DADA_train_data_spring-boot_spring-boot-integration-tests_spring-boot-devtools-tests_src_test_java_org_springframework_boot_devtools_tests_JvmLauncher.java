<METHOD_START> @ java.lang.Override public org.springframework.boot.devtools.tests.Statement org.springframework.boot.devtools.tests.Statement ( Statement org.springframework.boot.devtools.tests.Statement , Description org.springframework.boot.devtools.tests.Description ) { this . java.io.File = new java.io.File ( STRING + org.springframework.boot.devtools.tests.Description . getMethodName ( ) . replaceAll ( STRING , STRING ) ) ; this . java.io.File . boolean ( ) ; return org.springframework.boot.devtools.tests.Statement ; }  <METHOD_END>
<METHOD_START> org.springframework.boot.devtools.tests.JvmLauncher.LaunchedJvm org.springframework.boot.devtools.tests.JvmLauncher.LaunchedJvm ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String ... java.lang.String[] ) throws java.io.IOException { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.System . java.lang.String ( STRING ) + STRING , STRING , java.lang.String ) ) ; java.util.List<java.lang.String> . boolean ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; java.io.File java.io.File = new java.io.File ( this . java.io.File , java.lang.String + STRING ) ; java.lang.Process java.lang.Process = new java.lang.ProcessBuilder ( java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ) . java.lang.ProcessBuilder ( new java.io.File ( this . java.io.File , java.lang.String + STRING ) ) . java.lang.ProcessBuilder ( java.io.File ) . java.lang.Process ( ) ; return new org.springframework.boot.devtools.tests.JvmLauncher.LaunchedJvm ( java.lang.Process , java.io.File ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.Process java.lang.Process , java.io.File java.io.File ) { this . java.lang.Process = java.lang.Process ; this . java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> java.lang.Process java.lang.Process ( ) { return this . java.lang.Process ; }  <METHOD_END>
<METHOD_START> java.io.File java.io.File ( ) { return this . java.io.File ; }  <METHOD_END>
