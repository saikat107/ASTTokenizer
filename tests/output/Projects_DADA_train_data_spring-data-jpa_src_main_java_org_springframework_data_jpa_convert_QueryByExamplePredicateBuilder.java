<METHOD_START> public static < T > org.springframework.data.jpa.convert.Predicate org.springframework.data.jpa.convert.Predicate ( Root < T > org.springframework.data.jpa.convert.Root<T> , CriteriaBuilder org.springframework.data.jpa.convert.CriteriaBuilder , Example < T > org.springframework.data.jpa.convert.Example<T> ) { Assert . notNull ( org.springframework.data.jpa.convert.Root<T> , STRING ) ; Assert . notNull ( org.springframework.data.jpa.convert.CriteriaBuilder , STRING ) ; Assert . notNull ( org.springframework.data.jpa.convert.Example<T> , STRING ) ; ExampleMatcher org.springframework.data.jpa.convert.ExampleMatcher = org.springframework.data.jpa.convert.Example<T> . getMatcher ( ) ; java.util.List<org.springframework.data.jpa.convert.Predicate> < Predicate > java.util.List<org.springframework.data.jpa.convert.Predicate> = java.util.List<org.springframework.data.jpa.convert.Predicate> ( STRING , org.springframework.data.jpa.convert.CriteriaBuilder , org.springframework.data.jpa.convert.Root<T> , org.springframework.data.jpa.convert.Root<T> . getModel ( ) , org.springframework.data.jpa.convert.Example<T> . getProbe ( ) , org.springframework.data.jpa.convert.Example<T> . getProbeType ( ) , new ExampleMatcherAccessor ( org.springframework.data.jpa.convert.ExampleMatcher ) , new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ( STRING , null , org.springframework.data.jpa.convert.Example<T> . getProbe ( ) ) ) ; if ( java.util.List<org.springframework.data.jpa.convert.Predicate> . isEmpty ( ) ) { return org.springframework.data.jpa.convert.CriteriaBuilder . isTrue ( org.springframework.data.jpa.convert.CriteriaBuilder . literal ( true ) ) ; } if ( java.util.List<org.springframework.data.jpa.convert.Predicate> . size ( ) == NUMBER ) { return java.util.List<org.springframework.data.jpa.convert.Predicate> . iterator ( ) . next ( ) ; } Predicate [] org.springframework.data.jpa.convert.Predicate[] = java.util.List<org.springframework.data.jpa.convert.Predicate> . toArray ( new Predicate [ java.util.List<org.springframework.data.jpa.convert.Predicate> . size ( ) ] ) ; return org.springframework.data.jpa.convert.ExampleMatcher . isAllMatching ( ) ? org.springframework.data.jpa.convert.CriteriaBuilder . and ( org.springframework.data.jpa.convert.Predicate[] ) : org.springframework.data.jpa.convert.CriteriaBuilder . or ( org.springframework.data.jpa.convert.Predicate[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) static java.util.List<org.springframework.data.jpa.convert.Predicate> < Predicate > java.util.List<org.springframework.data.jpa.convert.Predicate> ( java.lang.String java.lang.String , CriteriaBuilder org.springframework.data.jpa.convert.CriteriaBuilder , Path < ? > org.springframework.data.jpa.convert.Path<?> , ManagedType < ? > org.springframework.data.jpa.convert.ManagedType<?> , java.lang.Object java.lang.Object , java.lang.Class<?> < ? > java.lang.Class<?> , ExampleMatcherAccessor org.springframework.data.jpa.convert.ExampleMatcherAccessor , org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ) { java.util.List<org.springframework.data.jpa.convert.Predicate> < Predicate > java.util.List<org.springframework.data.jpa.convert.Predicate> = new java.util.ArrayList<org.springframework.data.jpa.convert.Predicate> < Predicate > ( ) ; DirectFieldAccessFallbackBeanWrapper org.springframework.data.jpa.convert.DirectFieldAccessFallbackBeanWrapper = new DirectFieldAccessFallbackBeanWrapper ( java.lang.Object ) ; for ( SingularAttribute org.springframework.data.jpa.convert.SingularAttribute : org.springframework.data.jpa.convert.ManagedType<> . getSingularAttributes ( ) ) { java.lang.String java.lang.String = ! StringUtils . hasText ( java.lang.String ) ? org.springframework.data.jpa.convert.SingularAttribute . getName ( ) : java.lang.String + STRING + org.springframework.data.jpa.convert.SingularAttribute . getName ( ) ; if ( org.springframework.data.jpa.convert.ExampleMatcherAccessor . isIgnoredPath ( java.lang.String ) ) { continue; } java.lang.Object java.lang.Object = org.springframework.data.jpa.convert.ExampleMatcherAccessor . getValueTransformerForPath ( java.lang.String ) . convert ( org.springframework.data.jpa.convert.DirectFieldAccessFallbackBeanWrapper . getPropertyValue ( org.springframework.data.jpa.convert.SingularAttribute . getName ( ) ) ) ; if ( java.lang.Object == null ) { if ( org.springframework.data.jpa.convert.ExampleMatcherAccessor . getNullHandler ( ) . equals ( ExampleMatcher . NullHandler . INCLUDE ) ) { java.util.List<org.springframework.data.jpa.convert.Predicate> . add ( org.springframework.data.jpa.convert.CriteriaBuilder . isNull ( org.springframework.data.jpa.convert.Path<> . get ( org.springframework.data.jpa.convert.SingularAttribute ) ) ) ; } continue; } if ( org.springframework.data.jpa.convert.SingularAttribute . getPersistentAttributeType ( ) . equals ( PersistentAttributeType . EMBEDDED ) ) { java.util.List<org.springframework.data.jpa.convert.Predicate> . addAll ( java.util.List<org.springframework.data.jpa.convert.Predicate> ( java.lang.String , org.springframework.data.jpa.convert.CriteriaBuilder , org.springframework.data.jpa.convert.Path<> . get ( org.springframework.data.jpa.convert.SingularAttribute . getName ( ) ) , ( ManagedType < ? > ) org.springframework.data.jpa.convert.SingularAttribute . getType ( ) , java.lang.Object , java.lang.Class<> , org.springframework.data.jpa.convert.ExampleMatcherAccessor , org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ) ) ; continue; } if ( boolean ( org.springframework.data.jpa.convert.SingularAttribute ) ) { if ( ! ( org.springframework.data.jpa.convert.Path<> instanceof From ) ) { throw new JpaSystemException ( new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , java.lang.String , org.springframework.data.jpa.convert.Path<> ) ) ) ; } org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode = org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode . org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ( org.springframework.data.jpa.convert.SingularAttribute . getName ( ) , java.lang.Object ) ; if ( org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode . boolean ( ) ) { throw new InvalidDataAccessApiUsageException ( java.lang.String . java.lang.String ( STRING , java.lang.String , ClassUtils . getShortName ( java.lang.Class<> ) , org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ) ) ; } java.util.List<org.springframework.data.jpa.convert.Predicate> . addAll ( java.util.List<org.springframework.data.jpa.convert.Predicate> ( java.lang.String , org.springframework.data.jpa.convert.CriteriaBuilder , ( ( From < ? , ? > ) org.springframework.data.jpa.convert.Path<> ) . join ( org.springframework.data.jpa.convert.SingularAttribute . getName ( ) ) , ( ManagedType < ? > ) org.springframework.data.jpa.convert.SingularAttribute . getType ( ) , java.lang.Object , java.lang.Class<> , org.springframework.data.jpa.convert.ExampleMatcherAccessor , org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ) ) ; continue; } if ( org.springframework.data.jpa.convert.SingularAttribute . getJavaType ( ) . equals ( java.lang.String .class ) ) { Expression < java.lang.String > org.springframework.data.jpa.convert.Expression<java.lang.String> = org.springframework.data.jpa.convert.Path<> . get ( org.springframework.data.jpa.convert.SingularAttribute ) ; if ( org.springframework.data.jpa.convert.ExampleMatcherAccessor . isIgnoreCaseForPath ( java.lang.String ) ) { org.springframework.data.jpa.convert.Expression<java.lang.String> = org.springframework.data.jpa.convert.CriteriaBuilder . lower ( org.springframework.data.jpa.convert.Expression<java.lang.String> ) ; java.lang.Object = java.lang.Object . java.lang.String ( ) . java.lang.String ( ) ; } switch ( org.springframework.data.jpa.convert.ExampleMatcherAccessor . getStringMatcherForPath ( java.lang.String ) ) { case DEFAULT : case EXACT : java.util.List<org.springframework.data.jpa.convert.Predicate> . add ( org.springframework.data.jpa.convert.CriteriaBuilder . equal ( org.springframework.data.jpa.convert.Expression<java.lang.String> , java.lang.Object ) ) ; break; case CONTAINING : java.util.List<org.springframework.data.jpa.convert.Predicate> . add ( org.springframework.data.jpa.convert.CriteriaBuilder . like ( org.springframework.data.jpa.convert.Expression<java.lang.String> , STRING + java.lang.Object + STRING ) ) ; break; case STARTING : java.util.List<org.springframework.data.jpa.convert.Predicate> . add ( org.springframework.data.jpa.convert.CriteriaBuilder . like ( org.springframework.data.jpa.convert.Expression<java.lang.String> , java.lang.Object + STRING ) ) ; break; case ENDING : java.util.List<org.springframework.data.jpa.convert.Predicate> . add ( org.springframework.data.jpa.convert.CriteriaBuilder . like ( org.springframework.data.jpa.convert.Expression<java.lang.String> , STRING + java.lang.Object ) ) ; break; default: throw new java.lang.IllegalArgumentException ( STRING + org.springframework.data.jpa.convert.ExampleMatcherAccessor . getStringMatcherForPath ( java.lang.String ) ) ; } } else { java.util.List<org.springframework.data.jpa.convert.Predicate> . add ( org.springframework.data.jpa.convert.CriteriaBuilder . equal ( org.springframework.data.jpa.convert.Path<> . get ( org.springframework.data.jpa.convert.SingularAttribute ) , java.lang.Object ) ) ; } } return java.util.List<org.springframework.data.jpa.convert.Predicate> ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( Attribute < ? , ? > org.springframework.data.jpa.convert.Attribute<?,?> ) { return java.util.Set<org.springframework.data.jpa.convert.PersistentAttributeType> . contains ( org.springframework.data.jpa.convert.Attribute<,> . getPersistentAttributeType ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode , java.lang.Object java.lang.Object ) { this . java.lang.String = java.lang.String ; this . org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode = org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ; this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ( java.lang.String , this , java.lang.Object ) ; java.util.List<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode> . boolean ( org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ) ; return org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ; }  <METHOD_END>
<METHOD_START> boolean boolean ( ) { if ( java.lang.Object == null ) { return false ; } java.lang.String java.lang.String = ObjectUtils . getIdentityHexString ( java.lang.Object ) ; org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode = org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ; while ( org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode != null ) { if ( ObjectUtils . getIdentityHexString ( org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode . java.lang.Object ) . equals ( java.lang.String ) ) { return true ; } org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode = org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode . org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; if ( org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( org.springframework.data.jpa.convert.QueryByExamplePredicateBuilder.PathNode . java.lang.String ( ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( ObjectUtils . nullSafeToString ( java.lang.Object ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
