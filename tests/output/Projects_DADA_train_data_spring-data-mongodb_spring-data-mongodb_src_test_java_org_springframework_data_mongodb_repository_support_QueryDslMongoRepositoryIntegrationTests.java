<METHOD_START> @ Before public void void ( ) { MongoRepositoryFactory org.springframework.data.mongodb.repository.support.MongoRepositoryFactory = new MongoRepositoryFactory ( org.springframework.data.mongodb.repository.support.MongoOperations ) ; MongoEntityInformation < Person , java.lang.String > org.springframework.data.mongodb.repository.support.MongoEntityInformation<org.springframework.data.mongodb.repository.support.Person,java.lang.String> = org.springframework.data.mongodb.repository.support.MongoRepositoryFactory . getEntityInformation ( Person .class ) ; org.springframework.data.mongodb.repository.support.QueryDslMongoRepository<org.springframework.data.mongodb.repository.support.Person,java.lang.String> = new QueryDslMongoRepository < Person , java.lang.String > ( org.springframework.data.mongodb.repository.support.MongoEntityInformation<org.springframework.data.mongodb.repository.support.Person,java.lang.String> , org.springframework.data.mongodb.repository.support.MongoOperations ) ; org.springframework.data.mongodb.repository.support.MongoOperations . dropCollection ( Person .class ) ; org.springframework.data.mongodb.repository.support.Person = new Person ( STRING , STRING , NUMBER ) ; org.springframework.data.mongodb.repository.support.Person = new Person ( STRING , STRING , NUMBER ) ; org.springframework.data.mongodb.repository.support.Person = new Person ( STRING , STRING , NUMBER ) ; org.springframework.data.mongodb.repository.support.QPerson = new QPerson ( STRING ) ; org.springframework.data.mongodb.repository.support.QueryDslMongoRepository<org.springframework.data.mongodb.repository.support.Person,java.lang.String> . save ( java.util.Arrays . java.util.List ( org.springframework.data.mongodb.repository.support.Person , org.springframework.data.mongodb.repository.support.Person , org.springframework.data.mongodb.repository.support.Person ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.data.mongodb.repository.support.QueryDslMongoRepository<org.springframework.data.mongodb.repository.support.Person,java.lang.String> . exists ( org.springframework.data.mongodb.repository.support.QPerson . firstname . eq ( STRING ) ) , is ( true ) ) ; assertThat ( org.springframework.data.mongodb.repository.support.QueryDslMongoRepository<org.springframework.data.mongodb.repository.support.Person,java.lang.String> . exists ( org.springframework.data.mongodb.repository.support.QPerson . firstname . eq ( STRING ) ) , is ( false ) ) ; assertThat ( org.springframework.data.mongodb.repository.support.QueryDslMongoRepository<org.springframework.data.mongodb.repository.support.Person,java.lang.String> . exists ( ( Predicate ) null ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.data.mongodb.repository.support.Person> < Person > java.util.List<org.springframework.data.mongodb.repository.support.Person> = org.springframework.data.mongodb.repository.support.QueryDslMongoRepository<org.springframework.data.mongodb.repository.support.Person,java.lang.String> . findAll ( org.springframework.data.mongodb.repository.support.QPerson . lastname . isNotNull ( ) , new Sort ( Direction . ASC , STRING ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.support.Person> , hasSize ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.support.Person> . get ( NUMBER ) . getFirstname ( ) , is ( org.springframework.data.mongodb.repository.support.Person . getFirstname ( ) ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.support.Person> . get ( NUMBER ) . getFirstname ( ) , is ( org.springframework.data.mongodb.repository.support.Person . getFirstname ( ) ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.support.Person> , hasItems ( org.springframework.data.mongodb.repository.support.Person , org.springframework.data.mongodb.repository.support.Person , org.springframework.data.mongodb.repository.support.Person ) ) ; }  <METHOD_END>
