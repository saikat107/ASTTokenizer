<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { ExposedFields . from ( ( ExposedField ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { ExposedFields . synthetic ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { ExposedFields . nonSynthetic ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields = ExposedFields . synthetic ( Fields . fields ( STRING ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.ExposedFields . exposesSingleFieldOnly ( ) , is ( true ) ) ; org.springframework.data.mongodb.core.aggregation.ExposedFields = org.springframework.data.mongodb.core.aggregation.ExposedFields . and ( new ExposedField ( STRING , true ) ) ; assertThat ( org.springframework.data.mongodb.core.aggregation.ExposedFields . exposesSingleFieldOnly ( ) , is ( false ) ) ; }  <METHOD_END>
