<METHOD_START> public void ( ResourcePatternResolver org.springframework.orm.jpa.persistenceunit.ResourcePatternResolver , DataSourceLookup org.springframework.orm.jpa.persistenceunit.DataSourceLookup ) { Assert . notNull ( org.springframework.orm.jpa.persistenceunit.ResourcePatternResolver , STRING ) ; Assert . notNull ( org.springframework.orm.jpa.persistenceunit.DataSourceLookup , STRING ) ; this . org.springframework.orm.jpa.persistenceunit.ResourcePatternResolver = org.springframework.orm.jpa.persistenceunit.ResourcePatternResolver ; this . org.springframework.orm.jpa.persistenceunit.DataSourceLookup = org.springframework.orm.jpa.persistenceunit.DataSourceLookup ; }  <METHOD_END>
<METHOD_START> public org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[] ( java.lang.String java.lang.String ) { return org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[] ( new java.lang.String [] { java.lang.String } ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[] ( java.lang.String [] java.lang.String[] ) { org.xml.sax.ErrorHandler org.xml.sax.ErrorHandler = new SimpleSaxErrorHandler ( org.springframework.orm.jpa.persistenceunit.Log ) ; java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> < SpringPersistenceUnitInfo > java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> = new java.util.LinkedList<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> <> ( ) ; java.lang.String java.lang.String = null ; try { for ( java.lang.String java.lang.String : java.lang.String[] ) { Resource [] org.springframework.orm.jpa.persistenceunit.Resource[] = this . org.springframework.orm.jpa.persistenceunit.ResourcePatternResolver . getResources ( java.lang.String ) ; for ( Resource org.springframework.orm.jpa.persistenceunit.Resource : org.springframework.orm.jpa.persistenceunit.Resource[] ) { java.lang.String = org.springframework.orm.jpa.persistenceunit.Resource . toString ( ) ; java.io.InputStream java.io.InputStream = org.springframework.orm.jpa.persistenceunit.Resource . getInputStream ( ) ; try { org.w3c.dom.Document org.w3c.dom.Document = org.w3c.dom.Document ( org.xml.sax.ErrorHandler , java.io.InputStream ) ; java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> ( org.springframework.orm.jpa.persistenceunit.Resource , org.w3c.dom.Document , java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> ) ; } finally { java.io.InputStream . void ( ) ; } } } } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String , java.io.IOException ) ; } catch ( org.xml.sax.SAXException org.xml.sax.SAXException ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String , org.xml.sax.SAXException ) ; } catch ( javax.xml.parsers.ParserConfigurationException javax.xml.parsers.ParserConfigurationException ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String ) ; } return java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> . toArray ( new SpringPersistenceUnitInfo [ java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> . size ( ) ] ) ; }  <METHOD_END>
<METHOD_START> protected org.w3c.dom.Document org.w3c.dom.Document ( org.xml.sax.ErrorHandler org.xml.sax.ErrorHandler , java.io.InputStream java.io.InputStream )			throws javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException , java.io.IOException { javax.xml.parsers.DocumentBuilderFactory javax.xml.parsers.DocumentBuilderFactory = javax.xml.parsers.DocumentBuilderFactory . javax.xml.parsers.DocumentBuilderFactory ( ) ; javax.xml.parsers.DocumentBuilderFactory . void ( true ) ; javax.xml.parsers.DocumentBuilder javax.xml.parsers.DocumentBuilder = javax.xml.parsers.DocumentBuilderFactory . javax.xml.parsers.DocumentBuilder ( ) ; javax.xml.parsers.DocumentBuilder . void ( org.xml.sax.ErrorHandler ) ; return javax.xml.parsers.DocumentBuilder . org.w3c.dom.Document ( java.io.InputStream ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> < SpringPersistenceUnitInfo > java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> ( Resource org.springframework.orm.jpa.persistenceunit.Resource , org.w3c.dom.Document org.w3c.dom.Document , java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> < SpringPersistenceUnitInfo > java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> ) throws java.io.IOException { org.w3c.dom.Element org.w3c.dom.Element = org.w3c.dom.Document . org.w3c.dom.Element ( ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.net.URL java.net.URL = java.net.URL ( org.springframework.orm.jpa.persistenceunit.Resource ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> . add ( org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo ( org.w3c.dom.Element , java.lang.String , java.net.URL ) ) ; } return java.util.List<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo ( org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String , java.net.URL java.net.URL )			throws java.io.IOException { SpringPersistenceUnitInfo org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo = new SpringPersistenceUnitInfo ( ) ; org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . setPersistenceXMLSchemaVersion ( java.lang.String ) ; org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . setPersistenceUnitRootUrl ( java.net.URL ) ; org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . setPersistenceUnitName ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) . java.lang.String ( ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) . java.lang.String ( ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . setTransactionType ( PersistenceUnitTransactionType . valueOf ( java.lang.String ) ) ; } java.lang.String java.lang.String = DomUtils . getChildElementValueByTagName ( org.w3c.dom.Element , java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . setJtaDataSource ( this . org.springframework.orm.jpa.persistenceunit.DataSourceLookup . getDataSource ( java.lang.String . java.lang.String ( ) ) ) ; } java.lang.String java.lang.String = DomUtils . getChildElementValueByTagName ( org.w3c.dom.Element , java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . setNonJtaDataSource ( this . org.springframework.orm.jpa.persistenceunit.DataSourceLookup . getDataSource ( java.lang.String . java.lang.String ( ) ) ) ; } java.lang.String java.lang.String = DomUtils . getChildElementValueByTagName ( org.w3c.dom.Element , java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . setPersistenceProviderClassName ( java.lang.String . java.lang.String ( ) ) ; } org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , java.lang.String ) ; if ( org.w3c.dom.Element != null ) { java.lang.String java.lang.String = DomUtils . getTextValue ( org.w3c.dom.Element ) ; org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . setExcludeUnlistedClasses ( ! StringUtils . hasText ( java.lang.String ) || java.lang.Boolean . java.lang.Boolean ( java.lang.String ) ) ; } java.lang.String java.lang.String = DomUtils . getChildElementValueByTagName ( org.w3c.dom.Element , java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . setSharedCacheMode ( SharedCacheMode . valueOf ( java.lang.String ) ) ; } java.lang.String java.lang.String = DomUtils . getChildElementValueByTagName ( org.w3c.dom.Element , java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . setValidationMode ( ValidationMode . valueOf ( java.lang.String ) ) ; } void ( org.w3c.dom.Element , org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo ) ; void ( org.w3c.dom.Element , org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo ) ; void ( org.w3c.dom.Element , org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo ) ; void ( org.w3c.dom.Element , org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo ) ; return org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo ; }  <METHOD_END>
<METHOD_START> protected void void ( org.w3c.dom.Element org.w3c.dom.Element , SpringPersistenceUnitInfo org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo ) { org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , java.lang.String ) ; if ( org.w3c.dom.Element == null ) { return; } java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . addProperty ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( org.w3c.dom.Element org.w3c.dom.Element , SpringPersistenceUnitInfo org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo ) { java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = DomUtils . getTextValue ( org.w3c.dom.Element ) . trim ( ) ; if ( StringUtils . hasText ( java.lang.String ) ) org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . addManagedClassName ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( org.w3c.dom.Element org.w3c.dom.Element , SpringPersistenceUnitInfo org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo ) { java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = DomUtils . getTextValue ( org.w3c.dom.Element ) . trim ( ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . addMappingFileName ( java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> protected void void ( org.w3c.dom.Element org.w3c.dom.Element , SpringPersistenceUnitInfo org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo ) throws java.io.IOException { java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = DomUtils . getTextValue ( org.w3c.dom.Element ) . trim ( ) ; if ( StringUtils . hasText ( java.lang.String ) ) { Resource [] org.springframework.orm.jpa.persistenceunit.Resource[] = this . org.springframework.orm.jpa.persistenceunit.ResourcePatternResolver . getResources ( java.lang.String ) ; boolean boolean = false ; for ( Resource org.springframework.orm.jpa.persistenceunit.Resource : org.springframework.orm.jpa.persistenceunit.Resource[] ) { if ( org.springframework.orm.jpa.persistenceunit.Resource . exists ( ) ) { boolean = true ; org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . addJarFileUrl ( org.springframework.orm.jpa.persistenceunit.Resource . getURL ( ) ) ; } } if ( ! boolean ) { java.net.URL java.net.URL = org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . getPersistenceUnitRootUrl ( ) ; if ( java.net.URL != null ) { org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . addJarFileUrl ( new java.net.URL ( java.net.URL , java.lang.String ) ) ; } else { org.springframework.orm.jpa.persistenceunit.Log . warn ( STRING + java.lang.String + STRING + org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo . getPersistenceUnitName ( ) + STRING ) ; } } } } }  <METHOD_END>
<METHOD_START> static java.net.URL java.net.URL ( Resource org.springframework.orm.jpa.persistenceunit.Resource ) throws java.io.IOException { java.net.URL java.net.URL = org.springframework.orm.jpa.persistenceunit.Resource . getURL ( ) ; if ( ResourceUtils . isJarURL ( java.net.URL ) ) { return ResourceUtils . extractJarFileURL ( java.net.URL ) ; } java.lang.String java.lang.String = java.net.URL . java.lang.String ( ) ; if ( ! java.lang.String . boolean ( java.lang.String ) ) { if ( org.springframework.orm.jpa.persistenceunit.Log . isInfoEnabled ( ) ) { org.springframework.orm.jpa.persistenceunit.Log . info ( org.springframework.orm.jpa.persistenceunit.Resource . getFilename ( ) + STRING + org.springframework.orm.jpa.persistenceunit.Resource ) ; } return null ; } if ( java.lang.String . int ( java.lang.String ) == java.lang.String . int ( '/' ) - ( NUMBER + java.lang.String . int ( ) ) ) { if ( org.springframework.orm.jpa.persistenceunit.Log . isInfoEnabled ( ) ) { org.springframework.orm.jpa.persistenceunit.Log . info ( org.springframework.orm.jpa.persistenceunit.Resource . getFilename ( ) + STRING + org.springframework.orm.jpa.persistenceunit.Resource ) ; } return null ; } java.lang.String java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( java.lang.String ) ) ; if ( java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - NUMBER ) ; } return new java.net.URL ( java.lang.String ) ; }  <METHOD_END>
