<METHOD_START> @ java.lang.Override public void void ( ) { org.springframework.cassandra.config.KeyspaceAction = null ; java.lang.String = null ; java.util.List<java.lang.String> = null ; java.util.List<java.lang.String> = null ; org.springframework.cassandra.config.ReplicationStrategy = null ; java.util.Set<org.springframework.cassandra.config.KeyspaceActionSpecification<?>> = null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.cassandra.config.KeyspaceAction , STRING ) ; switch ( org.springframework.cassandra.config.KeyspaceAction ) { case CREATE_DROP : java.util.Set<org.springframework.cassandra.config.KeyspaceActionSpecification<?>> . add ( org.springframework.cassandra.config.DropKeyspaceSpecification ( ) ) ; case CREATE : java.util.Set<org.springframework.cassandra.config.KeyspaceActionSpecification<?>> . add ( org.springframework.cassandra.config.CreateKeyspaceSpecification ( ) ) ; break; case ALTER : break; } }  <METHOD_END>
<METHOD_START> private org.springframework.cassandra.config.CreateKeyspaceSpecification org.springframework.cassandra.config.CreateKeyspaceSpecification ( ) { CreateKeyspaceSpecification org.springframework.cassandra.config.CreateKeyspaceSpecification = new CreateKeyspaceSpecification ( ) ; org.springframework.cassandra.config.CreateKeyspaceSpecification . name ( java.lang.String ) . ifNotExists ( boolean ) . with ( KeyspaceOption . DURABLE_WRITES , boolean ) ; java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> < Option , java.lang.Object > java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> = new java.util.HashMap<org.springframework.cassandra.config.Option,java.lang.Object> <> ( ) ; java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> . put ( new DefaultOption ( STRING , java.lang.String .class , true , false , true ) , org.springframework.cassandra.config.ReplicationStrategy . getValue ( ) ) ; if ( org.springframework.cassandra.config.ReplicationStrategy == ReplicationStrategy . SIMPLE_STRATEGY ) { java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> . put ( new DefaultOption ( STRING , java.lang.Long .class , true , false , false ) , long ) ; } if ( org.springframework.cassandra.config.ReplicationStrategy == ReplicationStrategy . NETWORK_TOPOLOGY_STRATEGY ) { int int = NUMBER ; for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> . put ( new DefaultOption ( java.lang.String , java.lang.Long .class , true , false , false ) , java.util.List<java.lang.String> . java.lang.String ( int ++ ) ) ; } } org.springframework.cassandra.config.CreateKeyspaceSpecification . with ( KeyspaceOption . REPLICATION , java.util.Map<org.springframework.cassandra.config.Option,java.lang.Object> ) ; return org.springframework.cassandra.config.CreateKeyspaceSpecification ; }  <METHOD_END>
<METHOD_START> private org.springframework.cassandra.config.DropKeyspaceSpecification org.springframework.cassandra.config.DropKeyspaceSpecification ( ) { DropKeyspaceSpecification org.springframework.cassandra.config.DropKeyspaceSpecification = new DropKeyspaceSpecification ( ) ; org.springframework.cassandra.config.DropKeyspaceSpecification . name ( java.lang.String ( ) ) ; return org.springframework.cassandra.config.DropKeyspaceSpecification ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<org.springframework.cassandra.config.KeyspaceActionSpecification<?>> < KeyspaceActionSpecification < ? > > java.util.Set<org.springframework.cassandra.config.KeyspaceActionSpecification<?>> ( ) java.lang.Exception { return java.util.Set<org.springframework.cassandra.config.KeyspaceActionSpecification<?>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return java.util.Set .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.cassandra.config.KeyspaceAction org.springframework.cassandra.config.KeyspaceAction ( ) { return org.springframework.cassandra.config.KeyspaceAction ; }  <METHOD_END>
<METHOD_START> public void void ( KeyspaceAction org.springframework.cassandra.config.KeyspaceAction ) { this . org.springframework.cassandra.config.KeyspaceAction = org.springframework.cassandra.config.KeyspaceAction ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.cassandra.config.ReplicationStrategy org.springframework.cassandra.config.ReplicationStrategy ( ) { return org.springframework.cassandra.config.ReplicationStrategy ; }  <METHOD_END>
<METHOD_START> public void void ( ReplicationStrategy org.springframework.cassandra.config.ReplicationStrategy ) { this . org.springframework.cassandra.config.ReplicationStrategy = org.springframework.cassandra.config.ReplicationStrategy ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
