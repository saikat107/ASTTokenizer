<METHOD_START> @ Test public void void ( ) { when ( org.springframework.data.jpa.repository.query.JpaEntityMetadata<> . getEntityName ( ) ) . thenReturn ( STRING ) ; java.lang.String java.lang.String = STRING ; StringQuery org.springframework.data.jpa.repository.query.StringQuery = new ExpressionBasedStringQuery ( java.lang.String , org.springframework.data.jpa.repository.query.JpaEntityMetadata<> , org.springframework.data.jpa.repository.query.SpelExpressionParser ) ; assertThat ( org.springframework.data.jpa.repository.query.StringQuery . getQueryString ( ) , is ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { when ( org.springframework.data.jpa.repository.query.JpaEntityMetadata<> . getEntityName ( ) ) . thenReturn ( STRING ) ; StringQuery org.springframework.data.jpa.repository.query.StringQuery = new ExpressionBasedStringQuery ( STRING , org.springframework.data.jpa.repository.query.JpaEntityMetadata<> , org.springframework.data.jpa.repository.query.SpelExpressionParser ) ; assertThat ( org.springframework.data.jpa.repository.query.StringQuery . getAlias ( ) , is ( STRING ) ) ; assertThat ( org.springframework.data.jpa.repository.query.StringQuery . getQueryString ( ) , is ( STRING ) ) ; }  <METHOD_END>
