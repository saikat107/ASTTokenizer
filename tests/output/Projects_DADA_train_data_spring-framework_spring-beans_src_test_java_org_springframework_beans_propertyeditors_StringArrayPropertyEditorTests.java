<METHOD_START> @ Test public void void ( ) java.lang.Exception { StringArrayPropertyEditor org.springframework.beans.propertyeditors.StringArrayPropertyEditor = new StringArrayPropertyEditor ( ) ; org.springframework.beans.propertyeditors.StringArrayPropertyEditor . setAsText ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getValue ( ) ; assertNotNull ( java.lang.Object ) ; assertTrue ( java.lang.Object instanceof java.lang.String [] ) ; java.lang.String [] java.lang.String[] = ( java.lang.String [] ) java.lang.Object ; for ( int int = NUMBER ; int < java.lang.String[] . int ; ++ int ) { assertEquals ( STRING + int , java.lang.String[] [ int ] ) ; } assertEquals ( STRING , org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getAsText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { StringArrayPropertyEditor org.springframework.beans.propertyeditors.StringArrayPropertyEditor = new StringArrayPropertyEditor ( ) ; org.springframework.beans.propertyeditors.StringArrayPropertyEditor . setAsText ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getValue ( ) ; java.lang.String [] java.lang.String[] = ( java.lang.String [] ) java.lang.Object ; for ( int int = NUMBER ; int < java.lang.String[] . int ; ++ int ) { assertEquals ( STRING + int , java.lang.String[] [ int ] ) ; } assertEquals ( STRING , org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getAsText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { StringArrayPropertyEditor org.springframework.beans.propertyeditors.StringArrayPropertyEditor = new StringArrayPropertyEditor ( STRING , false , false ) ; org.springframework.beans.propertyeditors.StringArrayPropertyEditor . setAsText ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getValue ( ) ; java.lang.String [] java.lang.String[] = ( java.lang.String [] ) java.lang.Object ; for ( int int = NUMBER ; int < java.lang.String[] . int ; ++ int ) { assertEquals ( NUMBER , java.lang.String[] [ int ] . int ( ) ) ; assertEquals ( STRING + int , java.lang.String[] [ int ] . java.lang.String ( ) ) ; } assertEquals ( STRING , org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getAsText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { StringArrayPropertyEditor org.springframework.beans.propertyeditors.StringArrayPropertyEditor = new StringArrayPropertyEditor ( STRING ) ; org.springframework.beans.propertyeditors.StringArrayPropertyEditor . setAsText ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getValue ( ) ; assertTrue ( java.lang.Object instanceof java.lang.String [] ) ; java.lang.String [] java.lang.String[] = ( java.lang.String [] ) java.lang.Object ; for ( int int = NUMBER ; int < java.lang.String[] . int ; ++ int ) { assertEquals ( STRING + int , java.lang.String[] [ int ] ) ; } assertEquals ( STRING , org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getAsText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { StringArrayPropertyEditor org.springframework.beans.propertyeditors.StringArrayPropertyEditor = new StringArrayPropertyEditor ( STRING , STRING , false ) ; org.springframework.beans.propertyeditors.StringArrayPropertyEditor . setAsText ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getValue ( ) ; assertTrue ( java.lang.Object instanceof java.lang.String [] ) ; java.lang.String [] java.lang.String[] = ( java.lang.String [] ) java.lang.Object ; for ( int int = NUMBER ; int < java.lang.String[] . int ; ++ int ) { assertEquals ( STRING + int , java.lang.String[] [ int ] ) ; } assertEquals ( STRING , org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getAsText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { StringArrayPropertyEditor org.springframework.beans.propertyeditors.StringArrayPropertyEditor = new StringArrayPropertyEditor ( ) ; org.springframework.beans.propertyeditors.StringArrayPropertyEditor . setAsText ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getValue ( ) ; assertTrue ( java.lang.Object instanceof java.lang.String [] ) ; assertEquals ( NUMBER , ( ( java.lang.String [] ) java.lang.Object ) . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { StringArrayPropertyEditor org.springframework.beans.propertyeditors.StringArrayPropertyEditor = new StringArrayPropertyEditor ( STRING , true ) ; org.springframework.beans.propertyeditors.StringArrayPropertyEditor . setAsText ( STRING ) ; assertNull ( org.springframework.beans.propertyeditors.StringArrayPropertyEditor . getValue ( ) ) ; }  <METHOD_END>
