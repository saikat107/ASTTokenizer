<METHOD_START> public void ( SolrQueryMethod org.springframework.data.solr.repository.query.SolrQueryMethod , SolrOperations org.springframework.data.solr.repository.query.SolrOperations ) { this( org.springframework.data.solr.repository.query.SolrQueryMethod . getAnnotatedQuery ( ) , org.springframework.data.solr.repository.query.SolrQueryMethod , org.springframework.data.solr.repository.query.SolrOperations ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , SolrQueryMethod org.springframework.data.solr.repository.query.SolrQueryMethod , SolrOperations org.springframework.data.solr.repository.query.SolrOperations ) { super( org.springframework.data.solr.repository.query.SolrOperations , org.springframework.data.solr.repository.query.SolrQueryMethod ); this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.solr.repository.query.Query org.springframework.data.solr.repository.query.Query ( SolrParameterAccessor org.springframework.data.solr.repository.query.SolrParameterAccessor ) { SimpleQuery org.springframework.data.solr.repository.query.SimpleQuery = createQueryFromString ( this . java.lang.String , org.springframework.data.solr.repository.query.SolrParameterAccessor ) ; appendProjection ( org.springframework.data.solr.repository.query.SimpleQuery ) ; org.springframework.data.solr.repository.query.SimpleQuery . addSort ( org.springframework.data.solr.repository.query.SolrParameterAccessor . getSort ( ) ) ; return org.springframework.data.solr.repository.query.SimpleQuery ; }  <METHOD_END>
