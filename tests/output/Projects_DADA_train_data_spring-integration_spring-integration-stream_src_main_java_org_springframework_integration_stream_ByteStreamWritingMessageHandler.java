<METHOD_START> public void ( java.io.OutputStream java.io.OutputStream ) { this( java.io.OutputStream , - NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( java.io.OutputStream java.io.OutputStream , int int ) { if ( int > NUMBER ) { this . java.io.BufferedOutputStream = new java.io.BufferedOutputStream ( java.io.OutputStream , int ) ; } else { this . java.io.BufferedOutputStream = new java.io.BufferedOutputStream ( java.io.OutputStream ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Message < ? > org.springframework.integration.stream.Message<?> ) { java.lang.Object java.lang.Object = org.springframework.integration.stream.Message<> . getPayload ( ) ; if ( java.lang.Object == null ) { if ( this . org.springframework.integration.stream.Log . isWarnEnabled ( ) ) { this . org.springframework.integration.stream.Log . warn ( this . java.lang.Class<? extends org.springframework.integration.stream.ByteStreamWritingMessageHandler> ( ) . java.lang.String ( ) + STRING ) ; } return; } try { if ( java.lang.Object instanceof java.lang.String ) { this . java.io.BufferedOutputStream . void ( ( ( java.lang.String ) java.lang.Object ) . byte[] ( ) ) ; } else if ( java.lang.Object instanceof byte [] ) { this . java.io.BufferedOutputStream . void ( ( byte [] ) java.lang.Object ) ; } else { throw new MessagingException ( this . java.lang.Class<? extends org.springframework.integration.stream.ByteStreamWritingMessageHandler> ( ) . java.lang.String ( ) + STRING ) ; } this . java.io.BufferedOutputStream . void ( ) ; } catch ( java.io.IOException java.io.IOException ) { throw new MessagingException ( STRING , java.io.IOException ) ; } }  <METHOD_END>
