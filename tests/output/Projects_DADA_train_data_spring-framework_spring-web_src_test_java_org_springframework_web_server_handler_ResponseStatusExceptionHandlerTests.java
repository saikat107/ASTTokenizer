<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Throwable java.lang.Throwable = new ResponseStatusException ( HttpStatus . BAD_REQUEST , STRING ) ; this . org.springframework.web.server.handler.ResponseStatusExceptionHandler . handle ( this . org.springframework.web.server.handler.MockServerWebExchange , java.lang.Throwable ) . block ( java.time.Duration . java.time.Duration ( NUMBER ) ) ; assertEquals ( HttpStatus . BAD_REQUEST , this . org.springframework.web.server.handler.MockServerWebExchange . getResponse ( ) . getStatusCode ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Throwable java.lang.Throwable = new java.lang.IllegalStateException ( ) ; Mono < java.lang.Void > org.springframework.web.server.handler.Mono<java.lang.Void> = this . org.springframework.web.server.handler.ResponseStatusExceptionHandler . handle ( this . org.springframework.web.server.handler.MockServerWebExchange , java.lang.Throwable ) ; StepVerifier . create ( org.springframework.web.server.handler.Mono<java.lang.Void> ) . consumeErrorWith ( actual -> assertSame ( expected , actual ) ) . verify ( ) ; }  <METHOD_END>
