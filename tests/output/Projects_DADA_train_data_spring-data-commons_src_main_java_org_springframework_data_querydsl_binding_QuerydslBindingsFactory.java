<METHOD_START> public void ( EntityPathResolver org.springframework.data.querydsl.binding.EntityPathResolver ) { Assert . notNull ( org.springframework.data.querydsl.binding.EntityPathResolver , STRING ) ; this . org.springframework.data.querydsl.binding.EntityPathResolver = org.springframework.data.querydsl.binding.EntityPathResolver ; this . java.util.Map<org.springframework.data.querydsl.binding.TypeInformation<?>,org.springframework.data.querydsl.binding.EntityPath<?>> = new ConcurrentReferenceHashMap <> ( ) ; this . java.util.Optional<org.springframework.data.querydsl.binding.AutowireCapableBeanFactory> = java.util.Optional . java.util.Optional<java.lang.Object> ( ) ; this . java.util.Optional<org.springframework.data.querydsl.binding.Repositories> = java.util.Optional . java.util.Optional<java.lang.Object> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.data.querydsl.binding.ApplicationContext ) throws org.springframework.data.querydsl.binding.BeansException { this . java.util.Optional<org.springframework.data.querydsl.binding.AutowireCapableBeanFactory> = java.util.Optional . java.util.Optional ( org.springframework.data.querydsl.binding.ApplicationContext . getAutowireCapableBeanFactory ( ) ) ; this . java.util.Optional<org.springframework.data.querydsl.binding.Repositories> = java.util.Optional . java.util.Optional<T> ( new Repositories ( org.springframework.data.querydsl.binding.ApplicationContext ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.querydsl.binding.EntityPathResolver org.springframework.data.querydsl.binding.EntityPathResolver ( ) { return org.springframework.data.querydsl.binding.EntityPathResolver ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.querydsl.binding.QuerydslBindings org.springframework.data.querydsl.binding.QuerydslBindings ( TypeInformation < ? > org.springframework.data.querydsl.binding.TypeInformation<?> ) { return org.springframework.data.querydsl.binding.QuerydslBindings ( org.springframework.data.querydsl.binding.TypeInformation<> , java.util.Optional . java.util.Optional<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.querydsl.binding.QuerydslBindings org.springframework.data.querydsl.binding.QuerydslBindings ( TypeInformation < ? > org.springframework.data.querydsl.binding.TypeInformation<?> , java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<?>> < ? extends QuerydslBinderCustomizer < ? > > java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<?>> ) { return org.springframework.data.querydsl.binding.QuerydslBindings ( org.springframework.data.querydsl.binding.TypeInformation<> , java.util.Optional . java.util.Optional<java.lang.Class<>> ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.querydsl.binding.QuerydslBindings org.springframework.data.querydsl.binding.QuerydslBindings ( TypeInformation < ? > org.springframework.data.querydsl.binding.TypeInformation<?> , java.util.Optional<java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<?>>> < java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<?>> < ? extends QuerydslBinderCustomizer < ? > > > java.util.Optional<java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<?>>> ) { Assert . notNull ( java.util.Optional<java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<?>>> , STRING ) ; Assert . notNull ( org.springframework.data.querydsl.binding.TypeInformation<> , STRING ) ; EntityPath < ? > org.springframework.data.querydsl.binding.EntityPath<?> = org.springframework.data.querydsl.binding.EntityPath<?> ( org.springframework.data.querydsl.binding.TypeInformation<> ) ; QuerydslBindings org.springframework.data.querydsl.binding.QuerydslBindings = new QuerydslBindings ( ) ; org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<org.springframework.data.querydsl.binding.EntityPath<?>> ( java.util.Optional<java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<?>>> , org.springframework.data.querydsl.binding.TypeInformation<> . getType ( ) ) . customize ( org.springframework.data.querydsl.binding.QuerydslBindings , org.springframework.data.querydsl.binding.EntityPath<> ) ; return org.springframework.data.querydsl.binding.QuerydslBindings ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.querydsl.binding.EntityPath<?> < ? > org.springframework.data.querydsl.binding.EntityPath<?> ( TypeInformation < ? > org.springframework.data.querydsl.binding.TypeInformation<?> ) { return java.util.Map<org.springframework.data.querydsl.binding.TypeInformation<?>,org.springframework.data.querydsl.binding.EntityPath<?>> . computeIfAbsent ( org.springframework.data.querydsl.binding.TypeInformation<> , key -> { try { return entityPathResolver . createPath ( key . getType ( ) ) ; } catch ( IllegalArgumentException o_O ) { throw new IllegalStateException ( String . format ( INVALID_DOMAIN_TYPE , key . getType ( ) , QuerydslPredicate .class . getSimpleName ( ) ) , o_O ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) private org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<org.springframework.data.querydsl.binding.EntityPath<?>> < EntityPath < ? > > org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<org.springframework.data.querydsl.binding.EntityPath<?>> ( java.util.Optional<? extends java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer>> < ? extends java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer> < ? extends QuerydslBinderCustomizer > > java.util.Optional<? extends java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer>> , java.lang.Class<?> < ? > java.lang.Class<?> ) { return java.util.Optional<> . java.util.Optional<> ( it -> ! QuerydslBinderCustomizer .class . boolean ( it ) ) . java.util.Optional<U> ( this :: createQuerydslBinderCustomizer ) . orElseGet ( ( ) repositories . flatMap ( it -> it . getRepositoryFor ( domainType ) ) . map ( it -> it instanceof QuerydslBinderCustomizer ? ( QuerydslBinderCustomizer < EntityPath < ? > > ) it : null ) . orElse ( NoOpCustomizer . INSTANCE ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) private org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<org.springframework.data.querydsl.binding.EntityPath<?>> < EntityPath < ? > > org.springframework.data.querydsl.binding.QuerydslBinderCustomizer<org.springframework.data.querydsl.binding.EntityPath<?>> ( java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer> < ? extends QuerydslBinderCustomizer > java.lang.Class<? extends org.springframework.data.querydsl.binding.QuerydslBinderCustomizer> ) { return java.util.Optional<org.springframework.data.querydsl.binding.AutowireCapableBeanFactory> . map ( it -> { try { return it . getBean ( type ) ; } catch ( NoSuchBeanDefinitionException e ) { return it . createBean ( type ) ; } } ) . orElseGet ( ( ) BeanUtils . instantiateClass ( type ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( QuerydslBindings org.springframework.data.querydsl.binding.QuerydslBindings , EntityPath < ? > org.springframework.data.querydsl.binding.EntityPath<?> ) {}  <METHOD_END>
