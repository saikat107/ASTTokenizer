<METHOD_START> @ Bean public org.springframework.data.neo4j.repository.config.Repositories org.springframework.data.neo4j.repository.config.Repositories ( ) { return new Repositories ( org.springframework.data.neo4j.repository.config.ApplicationContext ) ; }  <METHOD_END>
<METHOD_START> @ Bean public TransactionalRepositoryTests . TransactionalRepositoryTests.DelegatingTransactionManager TransactionalRepositoryTests.DelegatingTransactionManager ( ) java.lang.Exception { return new TransactionalRepositoryTests . TransactionalRepositoryTests ( new Neo4jTransactionManager ( org.springframework.data.neo4j.repository.config.SessionFactory ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.neo4j.repository.config.SessionFactory org.springframework.data.neo4j.repository.config.SessionFactory ( ) { return new SessionFactory ( getBaseConfiguration ( ) . build ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.neo4j.repository.config.Repositories . hasRepositoryFor ( User .class ) , is ( true ) ) ; }  <METHOD_END>
