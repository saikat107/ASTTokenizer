<METHOD_START> void ( ) {	}  <METHOD_END>
<METHOD_START> void ( CloseableHttpClient org.springframework.boot.cli.command.init.CloseableHttpClient ) { this . org.springframework.boot.cli.command.init.CloseableHttpClient = org.springframework.boot.cli.command.init.CloseableHttpClient ; }  <METHOD_END>
<METHOD_START> protected org.springframework.boot.cli.command.init.CloseableHttpClient org.springframework.boot.cli.command.init.CloseableHttpClient ( ) { if ( this . org.springframework.boot.cli.command.init.CloseableHttpClient == null ) { this . org.springframework.boot.cli.command.init.CloseableHttpClient = HttpClientBuilder . create ( ) . useSystemProperties ( ) . build ( ) ; } return this . org.springframework.boot.cli.command.init.CloseableHttpClient ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.command.init.ProjectGenerationResponse org.springframework.boot.cli.command.init.ProjectGenerationResponse ( ProjectGenerationRequest org.springframework.boot.cli.command.init.ProjectGenerationRequest )			throws java.io.IOException { Log . info ( STRING + org.springframework.boot.cli.command.init.ProjectGenerationRequest . getServiceUrl ( ) ) ; InitializrServiceMetadata org.springframework.boot.cli.command.init.InitializrServiceMetadata = org.springframework.boot.cli.command.init.InitializrServiceMetadata ( org.springframework.boot.cli.command.init.ProjectGenerationRequest . getServiceUrl ( ) ) ; java.net.URI java.net.URI = org.springframework.boot.cli.command.init.ProjectGenerationRequest . generateUrl ( org.springframework.boot.cli.command.init.InitializrServiceMetadata ) ; CloseableHttpResponse org.springframework.boot.cli.command.init.CloseableHttpResponse = org.springframework.boot.cli.command.init.CloseableHttpResponse ( java.net.URI ) ; HttpEntity org.springframework.boot.cli.command.init.HttpEntity = org.springframework.boot.cli.command.init.CloseableHttpResponse . getEntity ( ) ; void ( org.springframework.boot.cli.command.init.CloseableHttpResponse , org.springframework.boot.cli.command.init.ProjectGenerationRequest . getServiceUrl ( ) ) ; return org.springframework.boot.cli.command.init.ProjectGenerationResponse ( org.springframework.boot.cli.command.init.CloseableHttpResponse , org.springframework.boot.cli.command.init.HttpEntity ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.cli.command.init.InitializrServiceMetadata org.springframework.boot.cli.command.init.InitializrServiceMetadata ( java.lang.String java.lang.String ) throws java.io.IOException { CloseableHttpResponse org.springframework.boot.cli.command.init.CloseableHttpResponse = org.springframework.boot.cli.command.init.CloseableHttpResponse ( java.lang.String ) ; void ( org.springframework.boot.cli.command.init.CloseableHttpResponse , java.lang.String ) ; return org.springframework.boot.cli.command.init.InitializrServiceMetadata ( org.springframework.boot.cli.command.init.CloseableHttpResponse . getEntity ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) throws java.io.IOException { HttpGet org.springframework.boot.cli.command.init.HttpGet = new HttpGet ( java.lang.String ) ; org.springframework.boot.cli.command.init.HttpGet . setHeader ( new BasicHeader ( HttpHeaders . ACCEPT , java.lang.String ) ) ; CloseableHttpResponse org.springframework.boot.cli.command.init.CloseableHttpResponse = org.springframework.boot.cli.command.init.CloseableHttpResponse ( org.springframework.boot.cli.command.init.HttpGet , java.lang.String , STRING ) ; void ( org.springframework.boot.cli.command.init.CloseableHttpResponse , java.lang.String ) ; HttpEntity org.springframework.boot.cli.command.init.HttpEntity = org.springframework.boot.cli.command.init.CloseableHttpResponse . getEntity ( ) ; ContentType org.springframework.boot.cli.command.init.ContentType = ContentType . getOrDefault ( org.springframework.boot.cli.command.init.HttpEntity ) ; if ( org.springframework.boot.cli.command.init.ContentType . getMimeType ( ) . equals ( STRING ) ) { return java.lang.String ( org.springframework.boot.cli.command.init.HttpEntity ) ; } return org.springframework.boot.cli.command.init.InitializrServiceMetadata ( org.springframework.boot.cli.command.init.HttpEntity ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.command.init.InitializrServiceMetadata org.springframework.boot.cli.command.init.InitializrServiceMetadata ( HttpEntity org.springframework.boot.cli.command.init.HttpEntity )			throws java.io.IOException { try { return new InitializrServiceMetadata ( org.springframework.boot.cli.command.init.JSONObject ( org.springframework.boot.cli.command.init.HttpEntity ) ) ; } catch ( JSONException org.springframework.boot.cli.command.init.JSONException ) { throw new ReportableException ( STRING + org.springframework.boot.cli.command.init.JSONException . getMessage ( ) + STRING , org.springframework.boot.cli.command.init.JSONException ) ; } }  <METHOD_END>
<METHOD_START> private void void ( CloseableHttpResponse org.springframework.boot.cli.command.init.CloseableHttpResponse , java.lang.String java.lang.String ) { if ( org.springframework.boot.cli.command.init.CloseableHttpResponse . getEntity ( ) == null ) { throw new ReportableException ( STRING + java.lang.String + STRING ) ; } if ( org.springframework.boot.cli.command.init.CloseableHttpResponse . getStatusLine ( ) . getStatusCode ( ) != NUMBER ) { throw org.springframework.boot.cli.command.init.ReportableException ( java.lang.String , org.springframework.boot.cli.command.init.CloseableHttpResponse ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.command.init.ProjectGenerationResponse org.springframework.boot.cli.command.init.ProjectGenerationResponse ( CloseableHttpResponse org.springframework.boot.cli.command.init.CloseableHttpResponse , HttpEntity org.springframework.boot.cli.command.init.HttpEntity ) throws java.io.IOException { ProjectGenerationResponse org.springframework.boot.cli.command.init.ProjectGenerationResponse = new ProjectGenerationResponse ( ContentType . getOrDefault ( org.springframework.boot.cli.command.init.HttpEntity ) ) ; org.springframework.boot.cli.command.init.ProjectGenerationResponse . setContent ( FileCopyUtils . copyToByteArray ( org.springframework.boot.cli.command.init.HttpEntity . getContent ( ) ) ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.cli.command.init.CloseableHttpResponse . getFirstHeader ( STRING ) ) ; if ( java.lang.String != null ) { org.springframework.boot.cli.command.init.ProjectGenerationResponse . setFileName ( java.lang.String ) ; } return org.springframework.boot.cli.command.init.ProjectGenerationResponse ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.command.init.CloseableHttpResponse org.springframework.boot.cli.command.init.CloseableHttpResponse ( java.net.URI java.net.URI ) { return org.springframework.boot.cli.command.init.CloseableHttpResponse ( new HttpGet ( java.net.URI ) , java.net.URI , STRING ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.command.init.CloseableHttpResponse org.springframework.boot.cli.command.init.CloseableHttpResponse ( java.lang.String java.lang.String ) { HttpGet org.springframework.boot.cli.command.init.HttpGet = new HttpGet ( java.lang.String ) ; org.springframework.boot.cli.command.init.HttpGet . setHeader ( new BasicHeader ( HttpHeaders . ACCEPT , java.lang.String ) ) ; return org.springframework.boot.cli.command.init.CloseableHttpResponse ( org.springframework.boot.cli.command.init.HttpGet , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.command.init.CloseableHttpResponse org.springframework.boot.cli.command.init.CloseableHttpResponse ( HttpUriRequest org.springframework.boot.cli.command.init.HttpUriRequest , java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { try { org.springframework.boot.cli.command.init.HttpUriRequest . addHeader ( STRING , STRING + java.lang.Class<? extends org.springframework.boot.cli.command.init.InitializrService> ( ) . java.lang.Package ( ) . java.lang.String ( ) ) ; return org.springframework.boot.cli.command.init.CloseableHttpClient ( ) . execute ( org.springframework.boot.cli.command.init.HttpUriRequest ) ; } catch ( java.io.IOException java.io.IOException ) { throw new ReportableException ( STRING + java.lang.String + STRING + java.lang.Object + STRING + java.io.IOException . java.lang.String ( ) + STRING ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.command.init.ReportableException org.springframework.boot.cli.command.init.ReportableException ( java.lang.String java.lang.String , CloseableHttpResponse org.springframework.boot.cli.command.init.CloseableHttpResponse ) { java.lang.String java.lang.String = STRING + java.lang.String + STRING + org.springframework.boot.cli.command.init.CloseableHttpResponse . getStatusLine ( ) . getReasonPhrase ( ) ; java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.cli.command.init.CloseableHttpResponse . getEntity ( ) ) ; if ( StringUtils . hasText ( java.lang.String ) ) { java.lang.String += STRING + java.lang.String + STRING ; } else { int int = org.springframework.boot.cli.command.init.CloseableHttpResponse . getStatusLine ( ) . getStatusCode ( ) ; java.lang.String += STRING + int + STRING ; } throw new ReportableException ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( HttpEntity org.springframework.boot.cli.command.init.HttpEntity ) { if ( org.springframework.boot.cli.command.init.HttpEntity != null ) { try { JSONObject org.springframework.boot.cli.command.init.JSONObject = org.springframework.boot.cli.command.init.JSONObject ( org.springframework.boot.cli.command.init.HttpEntity ) ; if ( org.springframework.boot.cli.command.init.JSONObject . has ( STRING ) ) { return org.springframework.boot.cli.command.init.JSONObject . getString ( STRING ) ; } } catch ( java.lang.Exception java.lang.Exception ) { } } return null ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.cli.command.init.JSONObject org.springframework.boot.cli.command.init.JSONObject ( HttpEntity org.springframework.boot.cli.command.init.HttpEntity )			throws java.io.IOException , org.springframework.boot.cli.command.init.JSONException { return new JSONObject ( java.lang.String ( org.springframework.boot.cli.command.init.HttpEntity ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( HttpEntity org.springframework.boot.cli.command.init.HttpEntity ) throws java.io.IOException { ContentType org.springframework.boot.cli.command.init.ContentType = ContentType . getOrDefault ( org.springframework.boot.cli.command.init.HttpEntity ) ; java.nio.charset.Charset java.nio.charset.Charset = org.springframework.boot.cli.command.init.ContentType . getCharset ( ) ; java.nio.charset.Charset = ( java.nio.charset.Charset != null ? java.nio.charset.Charset : java.nio.charset.Charset ) ; byte [] byte[] = FileCopyUtils . copyToByteArray ( org.springframework.boot.cli.command.init.HttpEntity . getContent ( ) ) ; return new java.lang.String ( byte[] , java.nio.charset.Charset ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( Header org.springframework.boot.cli.command.init.Header ) { if ( org.springframework.boot.cli.command.init.Header != null ) { java.lang.String java.lang.String = org.springframework.boot.cli.command.init.Header . getValue ( ) ; int int = java.lang.String . int ( java.lang.String ) ; if ( int != - NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( int + java.lang.String . int ( ) ) ; int int = java.lang.String . int ( STRING ) ; if ( int != - NUMBER ) { return java.lang.String . java.lang.String ( NUMBER , int ) ; } } } return null ; }  <METHOD_END>
