<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertFalse ( TestUtils . getPropertyValue ( this . org.springframework.integration.sftp.config.SourcePollingChannelAdapter , STRING , java.lang.Boolean .class ) ) ; assertEquals ( STRING , this . org.springframework.integration.sftp.config.SourcePollingChannelAdapter . getComponentName ( ) ) ; assertEquals ( STRING , this . org.springframework.integration.sftp.config.SourcePollingChannelAdapter . getComponentType ( ) ) ; assertSame ( this . org.springframework.integration.sftp.config.MessageChannel , TestUtils . getPropertyValue ( this . org.springframework.integration.sftp.config.SourcePollingChannelAdapter , STRING ) ) ; SftpStreamingMessageSource org.springframework.integration.sftp.config.SftpStreamingMessageSource = TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SourcePollingChannelAdapter , STRING , SftpStreamingMessageSource .class ) ; assertNotNull ( TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpStreamingMessageSource , STRING ) ) ; assertThat ( TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpStreamingMessageSource , STRING , java.lang.String .class ) , equalTo ( STRING ) ) ; FileListFilter < ? > org.springframework.integration.sftp.config.FileListFilter<?> = TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpStreamingMessageSource , STRING , FileListFilter .class ) ; assertNotNull ( org.springframework.integration.sftp.config.FileListFilter<> ) ; assertThat ( org.springframework.integration.sftp.config.FileListFilter<> , instanceOf ( CompositeFileListFilter .class ) ) ; java.util.Set<?> < ? > java.util.Set<?> = TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.FileListFilter<> , STRING , java.util.Set .class ) ; java.util.Iterator<?> < ? > java.util.Iterator<?> = java.util.Set<> . java.util.Iterator<> ( ) ; assertThat ( java.util.Iterator<> . next ( ) , instanceOf ( SftpSimplePatternFileListFilter .class ) ) ; assertThat ( java.util.Iterator<> . next ( ) , instanceOf ( SftpPersistentAcceptOnceFileListFilter .class ) ) ; assertSame ( this . org.springframework.integration.sftp.config.CachingSessionFactory<> , TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpStreamingMessageSource , STRING ) ) ; assertEquals ( NUMBER , TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpStreamingMessageSource , STRING ) ) ; org.springframework.integration.sftp.config.SftpStreamingMessageSource = TestUtils . getPropertyValue ( this . org.springframework.integration.sftp.config.SourcePollingChannelAdapter , STRING , SftpStreamingMessageSource .class ) ; assertThat ( TestUtils . getPropertyValue ( org.springframework.integration.sftp.config.SftpStreamingMessageSource , STRING ) , instanceOf ( ExpressionFileListFilter .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.sftp.config.DefaultSftpSessionFactory org.springframework.integration.sftp.config.DefaultSftpSessionFactory ( ) java.lang.Exception { DefaultSftpSessionFactory org.springframework.integration.sftp.config.DefaultSftpSessionFactory = mock ( DefaultSftpSessionFactory .class ) ; SftpSession org.springframework.integration.sftp.config.SftpSession = mock ( SftpSession .class ) ; when ( org.springframework.integration.sftp.config.DefaultSftpSessionFactory . getSession ( ) ) . thenReturn ( org.springframework.integration.sftp.config.SftpSession ) ; return org.springframework.integration.sftp.config.DefaultSftpSessionFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return DefaultSftpSessionFactory .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
