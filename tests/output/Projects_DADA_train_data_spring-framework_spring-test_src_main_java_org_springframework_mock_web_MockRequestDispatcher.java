<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletRequest org.springframework.mock.web.ServletRequest , ServletResponse org.springframework.mock.web.ServletResponse ) { Assert . notNull ( org.springframework.mock.web.ServletRequest , STRING ) ; Assert . notNull ( org.springframework.mock.web.ServletResponse , STRING ) ; Assert . state ( ! org.springframework.mock.web.ServletResponse . isCommitted ( ) , STRING ) ; org.springframework.mock.web.MockHttpServletResponse ( org.springframework.mock.web.ServletResponse ) . setForwardedUrl ( this . java.lang.String ) ; if ( org.springframework.mock.web.Log . isDebugEnabled ( ) ) { org.springframework.mock.web.Log . debug ( STRING + this . java.lang.String + STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletRequest org.springframework.mock.web.ServletRequest , ServletResponse org.springframework.mock.web.ServletResponse ) { Assert . notNull ( org.springframework.mock.web.ServletRequest , STRING ) ; Assert . notNull ( org.springframework.mock.web.ServletResponse , STRING ) ; org.springframework.mock.web.MockHttpServletResponse ( org.springframework.mock.web.ServletResponse ) . addIncludedUrl ( this . java.lang.String ) ; if ( org.springframework.mock.web.Log . isDebugEnabled ( ) ) { org.springframework.mock.web.Log . debug ( STRING + this . java.lang.String + STRING ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.mock.web.MockHttpServletResponse org.springframework.mock.web.MockHttpServletResponse ( ServletResponse org.springframework.mock.web.ServletResponse ) { if ( org.springframework.mock.web.ServletResponse instanceof MockHttpServletResponse ) { return ( MockHttpServletResponse ) org.springframework.mock.web.ServletResponse ; } if ( org.springframework.mock.web.ServletResponse instanceof HttpServletResponseWrapper ) { return org.springframework.mock.web.MockHttpServletResponse ( ( ( HttpServletResponseWrapper ) org.springframework.mock.web.ServletResponse ) . getResponse ( ) ) ; } throw new java.lang.IllegalArgumentException ( STRING ) ; }  <METHOD_END>
