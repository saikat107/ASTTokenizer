<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( java.lang.String ); this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.String java.lang.String ) { super( java.lang.reflect.Method . java.lang.String ( ) ); this . java.lang.reflect.Method = java.lang.reflect.Method ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method ) { if ( this . java.lang.reflect.Method != null ) { return java.lang.reflect.Method . boolean ( this . java.lang.reflect.Method ) ; } else { return ( java.lang.reflect.Method . java.lang.String ( ) . boolean ( getMethodName ( ) ) && ( ! isOverloaded ( ) || java.lang.reflect.Modifier . boolean ( java.lang.reflect.Method . int ( ) ) || java.lang.reflect.Method . int ( ) == NUMBER ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( ! ( java.lang.Object instanceof org.springframework.beans.factory.support.LookupOverride ) || ! super. boolean ( java.lang.Object ) ) { return false ; } org.springframework.beans.factory.support.LookupOverride org.springframework.beans.factory.support.LookupOverride = ( org.springframework.beans.factory.support.LookupOverride ) java.lang.Object ; return ( ObjectUtils . nullSafeEquals ( this . java.lang.reflect.Method , org.springframework.beans.factory.support.LookupOverride . java.lang.reflect.Method ) && ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.beans.factory.support.LookupOverride . java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ( NUMBER * super. int ( ) + ObjectUtils . nullSafeHashCode ( this . java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + getMethodName ( ) + STRING ; }  <METHOD_END>
