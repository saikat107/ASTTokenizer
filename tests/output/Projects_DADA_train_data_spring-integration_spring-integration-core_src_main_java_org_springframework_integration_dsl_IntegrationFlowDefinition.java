<METHOD_START> void ( ) {	}  <METHOD_END>
<METHOD_START> B B ( java.lang.Object java.lang.Object ) { this . java.util.Set<java.lang.Object> . boolean ( java.lang.Object ) ; return B ( ) ; }  <METHOD_END>
<METHOD_START> B B ( java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ) { if ( java.util.Collection<java.lang.Object> != null ) { this . java.util.Set<java.lang.Object> . boolean ( java.util.Collection<java.lang.Object> ) ; } return B ( ) ; }  <METHOD_END>
<METHOD_START> B B ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; return B ( ) ; }  <METHOD_END>
<METHOD_START> public B B ( ) { return B ( null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String ) { return B ( new FixedSubscriberChannelPrototype ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String ) { return B ( new MessageChannelReference ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageChannelSpec < ? , ? > org.springframework.integration.dsl.MessageChannelSpec<?,?> ) { Assert . notNull ( org.springframework.integration.dsl.MessageChannelSpec<,> , STRING ) ; return B ( org.springframework.integration.dsl.MessageChannelSpec<,> . get ( ) ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageChannel org.springframework.integration.dsl.MessageChannel ) { Assert . notNull ( org.springframework.integration.dsl.MessageChannel , STRING ) ; if ( this . org.springframework.integration.dsl.MessageChannel != null ) { B ( ) ; } this . org.springframework.integration.dsl.MessageChannel = org.springframework.integration.dsl.MessageChannel ; return B ( this . org.springframework.integration.dsl.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Function<org.springframework.integration.dsl.Channels,org.springframework.integration.dsl.MessageChannelSpec<?,?>> < Channels , MessageChannelSpec < ? , ? > > java.util.function.Function<org.springframework.integration.dsl.Channels,org.springframework.integration.dsl.MessageChannelSpec<?,?>> ) { Assert . notNull ( java.util.function.Function<org.springframework.integration.dsl.Channels,org.springframework.integration.dsl.MessageChannelSpec<?,?>> , STRING ) ; return B ( java.util.function.Function<org.springframework.integration.dsl.Channels,org.springframework.integration.dsl.MessageChannelSpec<?,?>> . apply ( new Channels ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.PublishSubscribeSpec> < PublishSubscribeSpec > java.util.function.Consumer<org.springframework.integration.dsl.PublishSubscribeSpec> ) { return B ( null , java.util.function.Consumer<org.springframework.integration.dsl.PublishSubscribeSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.concurrent.Executor java.util.concurrent.Executor , java.util.function.Consumer<org.springframework.integration.dsl.PublishSubscribeSpec> < PublishSubscribeSpec > java.util.function.Consumer<org.springframework.integration.dsl.PublishSubscribeSpec> ) { Assert . notNull ( java.util.function.Consumer<org.springframework.integration.dsl.PublishSubscribeSpec> , STRING ) ; PublishSubscribeSpec org.springframework.integration.dsl.PublishSubscribeSpec = new PublishSubscribeSpec ( java.util.concurrent.Executor ) ; java.util.function.Consumer<org.springframework.integration.dsl.PublishSubscribeSpec> . accept ( org.springframework.integration.dsl.PublishSubscribeSpec ) ; return B ( org.springframework.integration.dsl.PublishSubscribeSpec . getComponentsToRegister ( ) ) . channel ( org.springframework.integration.dsl.PublishSubscribeSpec ) ; }  <METHOD_END>
<METHOD_START> public B B ( IntegrationFlow org.springframework.integration.dsl.IntegrationFlow ) { return B ( org.springframework.integration.dsl.IntegrationFlow , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String ) { return B ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageChannel org.springframework.integration.dsl.MessageChannel ) { return B ( org.springframework.integration.dsl.MessageChannel , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( IntegrationFlow org.springframework.integration.dsl.IntegrationFlow , java.util.function.Consumer<org.springframework.integration.dsl.WireTapSpec> < WireTapSpec > java.util.function.Consumer<org.springframework.integration.dsl.WireTapSpec> ) { DirectChannel org.springframework.integration.dsl.DirectChannel = new DirectChannel ( ) ; IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder = IntegrationFlows . from ( org.springframework.integration.dsl.DirectChannel ) ; org.springframework.integration.dsl.IntegrationFlow . configure ( org.springframework.integration.dsl.IntegrationFlowBuilder ) ; B ( org.springframework.integration.dsl.IntegrationFlowBuilder . get ( ) ) ; return B ( org.springframework.integration.dsl.DirectChannel , java.util.function.Consumer<org.springframework.integration.dsl.WireTapSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.WireTapSpec> < WireTapSpec > java.util.function.Consumer<org.springframework.integration.dsl.WireTapSpec> ) { DirectChannel org.springframework.integration.dsl.DirectChannel = new DirectChannel ( ) ; B ( IntegrationFlows . from ( org.springframework.integration.dsl.DirectChannel ) . channel ( java.lang.String ) . get ( ) ) ; return B ( org.springframework.integration.dsl.DirectChannel , java.util.function.Consumer<org.springframework.integration.dsl.WireTapSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageChannel org.springframework.integration.dsl.MessageChannel , java.util.function.Consumer<org.springframework.integration.dsl.WireTapSpec> < WireTapSpec > java.util.function.Consumer<org.springframework.integration.dsl.WireTapSpec> ) { WireTapSpec org.springframework.integration.dsl.WireTapSpec = new WireTapSpec ( org.springframework.integration.dsl.MessageChannel ) ; if ( java.util.function.Consumer<org.springframework.integration.dsl.WireTapSpec> != null ) { java.util.function.Consumer<org.springframework.integration.dsl.WireTapSpec> . accept ( org.springframework.integration.dsl.WireTapSpec ) ; } B ( org.springframework.integration.dsl.MessageChannel ) ; return B ( org.springframework.integration.dsl.WireTapSpec ) ; }  <METHOD_END>
<METHOD_START> public B B ( WireTapSpec org.springframework.integration.dsl.WireTapSpec ) { WireTap org.springframework.integration.dsl.WireTap = org.springframework.integration.dsl.WireTapSpec . get ( ) ; if ( this . org.springframework.integration.dsl.MessageChannel == null || ! ( this . org.springframework.integration.dsl.MessageChannel instanceof ChannelInterceptorAware ) ) { this . boolean = true ; B ( new DirectChannel ( ) ) ; } B ( org.springframework.integration.dsl.WireTapSpec ) ; ( ( ChannelInterceptorAware ) this . org.springframework.integration.dsl.MessageChannel ) . addInterceptor ( org.springframework.integration.dsl.WireTap ) ; return B ( ) ; }  <METHOD_END>
<METHOD_START> public B B ( ) { return B ( null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> < GenericEndpointSpec < ServiceActivatingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) { return this . B ( new ServiceActivatingHandler ( new ExpressionCommandMessageProcessor ( new ControlBusMethodFilter ( ) ) ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String ) { return B ( java.lang.String , ( java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) { Assert . hasText ( java.lang.String , STRING ) ; return B ( new ExpressionEvaluatingTransformer ( org.springframework.integration.dsl.SpelExpressionParser . parseExpression ( java.lang.String ) ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object ) { return B ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return B ( java.lang.Object , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object , java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) { MethodInvokingTransformer org.springframework.integration.dsl.MethodInvokingTransformer ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.dsl.MethodInvokingTransformer = new MethodInvokingTransformer ( java.lang.Object , java.lang.String ) ; } else { org.springframework.integration.dsl.MethodInvokingTransformer = new MethodInvokingTransformer ( java.lang.Object ) ; } return B ( org.springframework.integration.dsl.MethodInvokingTransformer , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public < S , T > B B ( GenericTransformer < S , T > org.springframework.integration.dsl.GenericTransformer<S,T> ) { return this . B ( null , org.springframework.integration.dsl.GenericTransformer<S,T> ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageProcessorSpec < ? > org.springframework.integration.dsl.MessageProcessorSpec<?> ) { return B ( org.springframework.integration.dsl.MessageProcessorSpec<> , ( java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageProcessorSpec < ? > org.springframework.integration.dsl.MessageProcessorSpec<?> , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) { Assert . notNull ( org.springframework.integration.dsl.MessageProcessorSpec<> , STRING ) ; MessageProcessor < ? > org.springframework.integration.dsl.MessageProcessor<?> = org.springframework.integration.dsl.MessageProcessorSpec<> . get ( ) ; return B ( org.springframework.integration.dsl.MessageProcessor<> ) . transform ( new MethodInvokingTransformer ( org.springframework.integration.dsl.MessageProcessor<> ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public < P , T > B B ( java.lang.Class<P> < P > java.lang.Class<P> , GenericTransformer < P , T > org.springframework.integration.dsl.GenericTransformer<P,T> ) { return this . B ( java.lang.Class<P> , org.springframework.integration.dsl.GenericTransformer<P,T> , null ) ; }  <METHOD_END>
<METHOD_START> public < S , T > B B ( GenericTransformer < S , T > org.springframework.integration.dsl.GenericTransformer<S,T> , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) { return this . B ( null , org.springframework.integration.dsl.GenericTransformer<S,T> , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public < P , T > B B ( java.lang.Class<P> < P > java.lang.Class<P> , GenericTransformer < P , T > org.springframework.integration.dsl.GenericTransformer<P,T> , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) { Assert . notNull ( org.springframework.integration.dsl.GenericTransformer<P,T> , STRING ) ; Transformer org.springframework.integration.dsl.Transformer = org.springframework.integration.dsl.GenericTransformer<P,T> instanceof Transformer ? ( Transformer ) org.springframework.integration.dsl.GenericTransformer<P,T> : ( boolean ( org.springframework.integration.dsl.GenericTransformer<P,T> ) ? new MethodInvokingTransformer ( new LambdaMessageProcessor ( org.springframework.integration.dsl.GenericTransformer<P,T> , java.lang.Class<P> ) ) : new MethodInvokingTransformer ( org.springframework.integration.dsl.GenericTransformer<P,T> ) ) ; return B ( org.springframework.integration.dsl.Transformer ) . handle ( new MessageTransformingHandler ( org.springframework.integration.dsl.Transformer ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String ) { return B ( java.lang.String , ( java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> < FilterEndpointSpec > ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> < FilterEndpointSpec > java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> ) { Assert . hasText ( java.lang.String , STRING ) ; return B ( new ExpressionEvaluatingSelector ( java.lang.String ) , java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object ) { return B ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return B ( java.lang.Object , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object , java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> < FilterEndpointSpec > java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> ) { MethodInvokingSelector org.springframework.integration.dsl.MethodInvokingSelector ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.dsl.MethodInvokingSelector = new MethodInvokingSelector ( java.lang.Object , java.lang.String ) ; } else { org.springframework.integration.dsl.MethodInvokingSelector = new MethodInvokingSelector ( java.lang.Object ) ; } return B ( org.springframework.integration.dsl.MethodInvokingSelector , java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( GenericSelector < P > org.springframework.integration.dsl.GenericSelector<P> ) { return B ( null , org.springframework.integration.dsl.GenericSelector<P> ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageProcessorSpec < ? > org.springframework.integration.dsl.MessageProcessorSpec<?> ) { return B ( org.springframework.integration.dsl.MessageProcessorSpec<> , ( java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> < FilterEndpointSpec > ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageProcessorSpec < ? > org.springframework.integration.dsl.MessageProcessorSpec<?> , java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> < FilterEndpointSpec > java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> ) { Assert . notNull ( org.springframework.integration.dsl.MessageProcessorSpec<> , STRING ) ; MessageProcessor < ? > org.springframework.integration.dsl.MessageProcessor<?> = org.springframework.integration.dsl.MessageProcessorSpec<> . get ( ) ; return B ( org.springframework.integration.dsl.MessageProcessor<> ) . filter ( new MethodInvokingSelector ( org.springframework.integration.dsl.MessageProcessor<> ) , java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( java.lang.Class<P> < P > java.lang.Class<P> , GenericSelector < P > org.springframework.integration.dsl.GenericSelector<P> ) { return this . B ( java.lang.Class<P> , org.springframework.integration.dsl.GenericSelector<P> , null ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( GenericSelector < P > org.springframework.integration.dsl.GenericSelector<P> , java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> < FilterEndpointSpec > java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> ) { return B ( null , org.springframework.integration.dsl.GenericSelector<P> , java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( java.lang.Class<P> < P > java.lang.Class<P> , GenericSelector < P > org.springframework.integration.dsl.GenericSelector<P> , java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> < FilterEndpointSpec > java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> ) { Assert . notNull ( org.springframework.integration.dsl.GenericSelector<P> , STRING ) ; MessageSelector org.springframework.integration.dsl.MessageSelector = org.springframework.integration.dsl.GenericSelector<P> instanceof MessageSelector ? ( MessageSelector ) org.springframework.integration.dsl.GenericSelector<P> : ( boolean ( org.springframework.integration.dsl.GenericSelector<P> ) ? new MethodInvokingSelector ( new LambdaMessageProcessor ( org.springframework.integration.dsl.GenericSelector<P> , java.lang.Class<P> ) ) : new MethodInvokingSelector ( org.springframework.integration.dsl.GenericSelector<P> ) ) ; return this . B ( new FilterEndpointSpec ( new MessageFilter ( org.springframework.integration.dsl.MessageSelector ) ) , java.util.function.Consumer<org.springframework.integration.dsl.FilterEndpointSpec> ) ; }  <METHOD_END>
<METHOD_START> public < H extends org.springframework.integration.dsl.MessageHandler > B B ( MessageHandlerSpec < ? , H > org.springframework.integration.dsl.MessageHandlerSpec<?,H> ) { return B ( org.springframework.integration.dsl.MessageHandlerSpec<,H> , ( java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<H>> < GenericEndpointSpec < H > > ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageHandler org.springframework.integration.dsl.MessageHandler ) { return B ( org.springframework.integration.dsl.MessageHandler , ( java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageHandler>> < GenericEndpointSpec < MessageHandler > > ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return this . B ( java.lang.String , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> < GenericEndpointSpec < ServiceActivatingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) { return B ( new ServiceActivatingHandler ( new BeanNameMessageProcessor < java.lang.Object > ( java.lang.String , java.lang.String ) ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object ) { return B ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return B ( java.lang.Object , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object , java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> < GenericEndpointSpec < ServiceActivatingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) { ServiceActivatingHandler org.springframework.integration.dsl.ServiceActivatingHandler ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.dsl.ServiceActivatingHandler = new ServiceActivatingHandler ( java.lang.Object , java.lang.String ) ; } else { org.springframework.integration.dsl.ServiceActivatingHandler = new ServiceActivatingHandler ( java.lang.Object ) ; } return B ( org.springframework.integration.dsl.ServiceActivatingHandler , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( GenericHandler < P > org.springframework.integration.dsl.GenericHandler<P> ) { return B ( null , org.springframework.integration.dsl.GenericHandler<P> ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( GenericHandler < P > org.springframework.integration.dsl.GenericHandler<P> , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> < GenericEndpointSpec < ServiceActivatingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) { return this . B ( null , org.springframework.integration.dsl.GenericHandler<P> , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( java.lang.Class<P> < P > java.lang.Class<P> , GenericHandler < P > org.springframework.integration.dsl.GenericHandler<P> ) { return this . B ( java.lang.Class<P> , org.springframework.integration.dsl.GenericHandler<P> , null ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( java.lang.Class<P> < P > java.lang.Class<P> , GenericHandler < P > org.springframework.integration.dsl.GenericHandler<P> , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> < GenericEndpointSpec < ServiceActivatingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) { ServiceActivatingHandler org.springframework.integration.dsl.ServiceActivatingHandler = null ; if ( boolean ( org.springframework.integration.dsl.GenericHandler<P> ) ) { org.springframework.integration.dsl.ServiceActivatingHandler = new ServiceActivatingHandler ( new LambdaMessageProcessor ( org.springframework.integration.dsl.GenericHandler<P> , java.lang.Class<P> ) ) ; } else { org.springframework.integration.dsl.ServiceActivatingHandler = new ServiceActivatingHandler ( org.springframework.integration.dsl.GenericHandler<P> , STRING ) ; } return this . B ( org.springframework.integration.dsl.ServiceActivatingHandler , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageProcessorSpec < ? > org.springframework.integration.dsl.MessageProcessorSpec<?> ) { return B ( org.springframework.integration.dsl.MessageProcessorSpec<> , ( java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> < GenericEndpointSpec < ServiceActivatingHandler > > ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageProcessorSpec < ? > org.springframework.integration.dsl.MessageProcessorSpec<?> , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> < GenericEndpointSpec < ServiceActivatingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) { Assert . notNull ( org.springframework.integration.dsl.MessageProcessorSpec<> , STRING ) ; MessageProcessor < ? > org.springframework.integration.dsl.MessageProcessor<?> = org.springframework.integration.dsl.MessageProcessorSpec<> . get ( ) ; return B ( org.springframework.integration.dsl.MessageProcessor<> ) . handle ( new ServiceActivatingHandler ( org.springframework.integration.dsl.MessageProcessor<> ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public < H extends org.springframework.integration.dsl.MessageHandler > B B ( MessageHandlerSpec < ? , H > org.springframework.integration.dsl.MessageHandlerSpec<?,H> , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<H>> < GenericEndpointSpec < H > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<H>> ) { Assert . notNull ( org.springframework.integration.dsl.MessageHandlerSpec<,H> , STRING ) ; if ( org.springframework.integration.dsl.MessageHandlerSpec<,H> instanceof ComponentsRegistration ) { B ( ( ( ComponentsRegistration ) org.springframework.integration.dsl.MessageHandlerSpec<,H> ) . getComponentsToRegister ( ) ) ; } return B ( org.springframework.integration.dsl.MessageHandlerSpec<,H> . get ( ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<H>> ) ; }  <METHOD_END>
<METHOD_START> public < H extends org.springframework.integration.dsl.MessageHandler > B B ( H H , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<H>> < GenericEndpointSpec < H > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<H>> ) { Assert . notNull ( H , STRING ) ; return this . B ( new GenericEndpointSpec <> ( H ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<H>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( ) { return B ( null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.BridgeHandler>> < GenericEndpointSpec < BridgeHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.BridgeHandler>> ) { return B ( new GenericEndpointSpec <> ( new BridgeHandler ( ) ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.BridgeHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String ) { return this . B ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.DelayerEndpointSpec> < DelayerEndpointSpec > java.util.function.Consumer<org.springframework.integration.dsl.DelayerEndpointSpec> ) { return B ( new DelayerEndpointSpec ( new DelayHandler ( java.lang.String ) ) , java.util.function.Consumer<org.springframework.integration.dsl.DelayerEndpointSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.EnricherSpec> < EnricherSpec > java.util.function.Consumer<org.springframework.integration.dsl.EnricherSpec> ) { return B ( new EnricherSpec ( ) , java.util.function.Consumer<org.springframework.integration.dsl.EnricherSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( MapBuilder < ? , java.lang.String , java.lang.Object > org.springframework.integration.dsl.MapBuilder<?,java.lang.String,java.lang.Object> ) { return B ( org.springframework.integration.dsl.MapBuilder<,java.lang.String,java.lang.Object> , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MapBuilder < ? , java.lang.String , java.lang.Object > org.springframework.integration.dsl.MapBuilder<?,java.lang.String,java.lang.Object> , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) { return B ( org.springframework.integration.dsl.MapBuilder<,java.lang.String,java.lang.Object> . get ( ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { return B ( java.util.Map<java.lang.String,java.lang.Object> , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( final java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) { HeaderEnricherSpec org.springframework.integration.dsl.HeaderEnricherSpec = new HeaderEnricherSpec ( ) ; org.springframework.integration.dsl.HeaderEnricherSpec . headers ( java.util.Map<java.lang.String,java.lang.Object> ) ; Tuple2 < ConsumerEndpointFactoryBean , MessageTransformingHandler > org.springframework.integration.dsl.Tuple2<org.springframework.integration.dsl.ConsumerEndpointFactoryBean,org.springframework.integration.dsl.MessageTransformingHandler> = org.springframework.integration.dsl.HeaderEnricherSpec . get ( ) ; return B ( org.springframework.integration.dsl.HeaderEnricherSpec . getComponentsToRegister ( ) ) . handle ( org.springframework.integration.dsl.Tuple2<org.springframework.integration.dsl.ConsumerEndpointFactoryBean,org.springframework.integration.dsl.MessageTransformingHandler> . getT2 ( ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.HeaderEnricherSpec> < HeaderEnricherSpec > java.util.function.Consumer<org.springframework.integration.dsl.HeaderEnricherSpec> ) { Assert . notNull ( java.util.function.Consumer<org.springframework.integration.dsl.HeaderEnricherSpec> , STRING ) ; return B ( new HeaderEnricherSpec ( ) , java.util.function.Consumer<org.springframework.integration.dsl.HeaderEnricherSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( ) { return this . B ( ( java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.DefaultMessageSplitter>> < SplitterEndpointSpec < DefaultMessageSplitter > > ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.DefaultMessageSplitter>> < SplitterEndpointSpec < DefaultMessageSplitter > > java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.DefaultMessageSplitter>> ) { return this . B ( new DefaultMessageSplitter ( ) , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.DefaultMessageSplitter>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String ) { return B ( java.lang.String , ( java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.ExpressionEvaluatingSplitter>> < SplitterEndpointSpec < ExpressionEvaluatingSplitter > > ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.ExpressionEvaluatingSplitter>> < SplitterEndpointSpec < ExpressionEvaluatingSplitter > > java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.ExpressionEvaluatingSplitter>> ) { Assert . hasText ( java.lang.String , STRING ) ; return B ( new ExpressionEvaluatingSplitter ( org.springframework.integration.dsl.SpelExpressionParser . parseExpression ( java.lang.String ) ) , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.ExpressionEvaluatingSplitter>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object ) { return B ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return B ( java.lang.Object , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object , java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> < SplitterEndpointSpec < MethodInvokingSplitter > > java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> ) { MethodInvokingSplitter org.springframework.integration.dsl.MethodInvokingSplitter ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.dsl.MethodInvokingSplitter = new MethodInvokingSplitter ( java.lang.Object , java.lang.String ) ; } else { org.springframework.integration.dsl.MethodInvokingSplitter = new MethodInvokingSplitter ( java.lang.Object ) ; } return B ( org.springframework.integration.dsl.MethodInvokingSplitter , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return this . B ( java.lang.String , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> < SplitterEndpointSpec < MethodInvokingSplitter > > java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> ) { return B ( new MethodInvokingSplitter ( new BeanNameMessageProcessor < java.lang.Object > ( java.lang.String , java.lang.String ) ) , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageProcessorSpec < ? > org.springframework.integration.dsl.MessageProcessorSpec<?> ) { return B ( org.springframework.integration.dsl.MessageProcessorSpec<> , ( java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> < SplitterEndpointSpec < MethodInvokingSplitter > > ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageProcessorSpec < ? > org.springframework.integration.dsl.MessageProcessorSpec<?> , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> < SplitterEndpointSpec < MethodInvokingSplitter > > java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> ) { Assert . notNull ( org.springframework.integration.dsl.MessageProcessorSpec<> , STRING ) ; MessageProcessor < ? > org.springframework.integration.dsl.MessageProcessor<?> = org.springframework.integration.dsl.MessageProcessorSpec<> . get ( ) ; return B ( org.springframework.integration.dsl.MessageProcessor<> ) . split ( new MethodInvokingSplitter ( org.springframework.integration.dsl.MessageProcessor<> ) , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( java.lang.Class<P> < P > java.lang.Class<P> , java.util.function.Function<P,?> < P , ? > java.util.function.Function<P,?> ) { return B ( java.lang.Class<P> , java.util.function.Function<P,> , null ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( java.util.function.Function<P,?> < P , ? > java.util.function.Function<P,?> , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> < SplitterEndpointSpec < MethodInvokingSplitter > > java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> ) { return B ( null , java.util.function.Function<P,> , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( java.lang.Class<P> < P > java.lang.Class<P> , java.util.function.Function<P,?> < P , ? > java.util.function.Function<P,?> , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> < SplitterEndpointSpec < MethodInvokingSplitter > > java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> ) { MethodInvokingSplitter org.springframework.integration.dsl.MethodInvokingSplitter = boolean ( java.util.function.Function<P,> ) ? new MethodInvokingSplitter ( new LambdaMessageProcessor ( java.util.function.Function<P,> , java.lang.Class<P> ) ) : new MethodInvokingSplitter ( java.util.function.Function<P,> ) ; return this . B ( org.springframework.integration.dsl.MethodInvokingSplitter , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.MethodInvokingSplitter>> ) ; }  <METHOD_END>
<METHOD_START> public < S extends org.springframework.integration.dsl.AbstractMessageSplitter > B B ( MessageHandlerSpec < ? , S > org.springframework.integration.dsl.MessageHandlerSpec<?,S> ) { return B ( org.springframework.integration.dsl.MessageHandlerSpec<,S> , ( java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<S>> < SplitterEndpointSpec < S > > ) null ) ; }  <METHOD_END>
<METHOD_START> public < S extends org.springframework.integration.dsl.AbstractMessageSplitter > B B ( MessageHandlerSpec < ? , S > org.springframework.integration.dsl.MessageHandlerSpec<?,S> , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<S>> < SplitterEndpointSpec < S > > java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<S>> ) { Assert . notNull ( org.springframework.integration.dsl.MessageHandlerSpec<,S> , STRING ) ; return B ( org.springframework.integration.dsl.MessageHandlerSpec<,S> . get ( ) , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<S>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( AbstractMessageSplitter org.springframework.integration.dsl.AbstractMessageSplitter ) { return B ( org.springframework.integration.dsl.AbstractMessageSplitter , ( java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<org.springframework.integration.dsl.AbstractMessageSplitter>> < SplitterEndpointSpec < AbstractMessageSplitter > > ) null ) ; }  <METHOD_END>
<METHOD_START> public < S extends org.springframework.integration.dsl.AbstractMessageSplitter > B B ( S S , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<S>> < SplitterEndpointSpec < S > > java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<S>> ) { Assert . notNull ( S , STRING ) ; return this . B ( new SplitterEndpointSpec <> ( S ) , java.util.function.Consumer<org.springframework.integration.dsl.SplitterEndpointSpec<S>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String ... java.lang.String[] ) { return this . B ( new HeaderFilter ( java.lang.String[] ) , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , boolean boolean ) { HeaderFilter org.springframework.integration.dsl.HeaderFilter = new HeaderFilter ( StringUtils . delimitedListToStringArray ( java.lang.String , STRING , STRING ) ) ; org.springframework.integration.dsl.HeaderFilter . setPatternMatch ( boolean ) ; return this . B ( org.springframework.integration.dsl.HeaderFilter , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( HeaderFilter org.springframework.integration.dsl.HeaderFilter , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) { return this . B ( org.springframework.integration.dsl.HeaderFilter , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageStore org.springframework.integration.dsl.MessageStore ) { return this . B ( org.springframework.integration.dsl.MessageStore , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageStore org.springframework.integration.dsl.MessageStore , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) { return this . B ( new ClaimCheckInTransformer ( org.springframework.integration.dsl.MessageStore ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageStore org.springframework.integration.dsl.MessageStore ) { return this . B ( org.springframework.integration.dsl.MessageStore , false ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageStore org.springframework.integration.dsl.MessageStore , boolean boolean ) { return this . B ( org.springframework.integration.dsl.MessageStore , boolean , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageStore org.springframework.integration.dsl.MessageStore , boolean boolean , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> < GenericEndpointSpec < MessageTransformingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) { ClaimCheckOutTransformer org.springframework.integration.dsl.ClaimCheckOutTransformer = new ClaimCheckOutTransformer ( org.springframework.integration.dsl.MessageStore ) ; org.springframework.integration.dsl.ClaimCheckOutTransformer . setRemoveMessage ( boolean ) ; return this . B ( org.springframework.integration.dsl.ClaimCheckOutTransformer , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.MessageTransformingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( ) { return B ( null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.ResequencerSpec> < ResequencerSpec > java.util.function.Consumer<org.springframework.integration.dsl.ResequencerSpec> ) { return B ( new ResequencerSpec ( ) , java.util.function.Consumer<org.springframework.integration.dsl.ResequencerSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( ) { return B ( null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> < AggregatorSpec > java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> ) { return B ( new AggregatorSpec ( ) , java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return B ( java.lang.String , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<java.lang.Object,org.springframework.integration.dsl.MethodInvokingRouter>> < RouterSpec < java.lang.Object , MethodInvokingRouter > > java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<java.lang.Object,org.springframework.integration.dsl.MethodInvokingRouter>> ) { MethodInvokingRouter org.springframework.integration.dsl.MethodInvokingRouter = new MethodInvokingRouter ( new BeanNameMessageProcessor <> ( java.lang.String , java.lang.String ) ) ; return B ( new RouterSpec <> ( org.springframework.integration.dsl.MethodInvokingRouter ) , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<java.lang.Object,org.springframework.integration.dsl.MethodInvokingRouter>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object ) { return B ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return B ( java.lang.Object , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.Object java.lang.Object , java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<java.lang.Object,org.springframework.integration.dsl.MethodInvokingRouter>> < RouterSpec < java.lang.Object , MethodInvokingRouter > > java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<java.lang.Object,org.springframework.integration.dsl.MethodInvokingRouter>> ) { MethodInvokingRouter org.springframework.integration.dsl.MethodInvokingRouter ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.dsl.MethodInvokingRouter = new MethodInvokingRouter ( java.lang.Object , java.lang.String ) ; } else { org.springframework.integration.dsl.MethodInvokingRouter = new MethodInvokingRouter ( java.lang.Object ) ; } return B ( new RouterSpec <> ( org.springframework.integration.dsl.MethodInvokingRouter ) , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<java.lang.Object,org.springframework.integration.dsl.MethodInvokingRouter>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String ) { return B ( java.lang.String , ( java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<java.lang.Object,org.springframework.integration.dsl.ExpressionEvaluatingRouter>> < RouterSpec < java.lang.Object , ExpressionEvaluatingRouter > > ) null ) ; }  <METHOD_END>
<METHOD_START> public < T > B B ( java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<T,org.springframework.integration.dsl.ExpressionEvaluatingRouter>> < RouterSpec < T , ExpressionEvaluatingRouter > > java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<T,org.springframework.integration.dsl.ExpressionEvaluatingRouter>> ) { return B ( new RouterSpec <> ( new ExpressionEvaluatingRouter ( org.springframework.integration.dsl.SpelExpressionParser . parseExpression ( java.lang.String ) ) ) , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<T,org.springframework.integration.dsl.ExpressionEvaluatingRouter>> ) ; }  <METHOD_END>
<METHOD_START> public < S , T > B B ( java.util.function.Function<S,T> < S , T > java.util.function.Function<S,T> ) { return B ( null , java.util.function.Function<S,T> ) ; }  <METHOD_END>
<METHOD_START> public < S , T > B B ( java.lang.Class<S> < S > java.lang.Class<S> , java.util.function.Function<S,T> < S , T > java.util.function.Function<S,T> ) { return B ( java.lang.Class<S> , java.util.function.Function<S,T> , null ) ; }  <METHOD_END>
<METHOD_START> public < S , T > B B ( java.util.function.Function<S,T> < S , T > java.util.function.Function<S,T> , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<T,org.springframework.integration.dsl.MethodInvokingRouter>> < RouterSpec < T , MethodInvokingRouter > > java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<T,org.springframework.integration.dsl.MethodInvokingRouter>> ) { return B ( null , java.util.function.Function<S,T> , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<T,org.springframework.integration.dsl.MethodInvokingRouter>> ) ; }  <METHOD_END>
<METHOD_START> public < P , T > B B ( java.lang.Class<P> < P > java.lang.Class<P> , java.util.function.Function<P,T> < P , T > java.util.function.Function<P,T> , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<T,org.springframework.integration.dsl.MethodInvokingRouter>> < RouterSpec < T , MethodInvokingRouter > > java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<T,org.springframework.integration.dsl.MethodInvokingRouter>> ) { MethodInvokingRouter org.springframework.integration.dsl.MethodInvokingRouter = boolean ( java.util.function.Function<P,T> ) ? new MethodInvokingRouter ( new LambdaMessageProcessor ( java.util.function.Function<P,T> , java.lang.Class<P> ) ) : new MethodInvokingRouter ( java.util.function.Function<P,T> ) ; return B ( new RouterSpec <> ( org.springframework.integration.dsl.MethodInvokingRouter ) , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<T,org.springframework.integration.dsl.MethodInvokingRouter>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageProcessorSpec < ? > org.springframework.integration.dsl.MessageProcessorSpec<?> ) { return B ( org.springframework.integration.dsl.MessageProcessorSpec<> , ( java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<java.lang.Object,org.springframework.integration.dsl.MethodInvokingRouter>> < RouterSpec < java.lang.Object , MethodInvokingRouter > > ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageProcessorSpec < ? > org.springframework.integration.dsl.MessageProcessorSpec<?> , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<java.lang.Object,org.springframework.integration.dsl.MethodInvokingRouter>> < RouterSpec < java.lang.Object , MethodInvokingRouter > > java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<java.lang.Object,org.springframework.integration.dsl.MethodInvokingRouter>> ) { Assert . notNull ( org.springframework.integration.dsl.MessageProcessorSpec<> , STRING ) ; MessageProcessor < ? > org.springframework.integration.dsl.MessageProcessor<?> = org.springframework.integration.dsl.MessageProcessorSpec<> . get ( ) ; B ( org.springframework.integration.dsl.MessageProcessor<> ) ; return B ( new RouterSpec <> ( new MethodInvokingRouter ( org.springframework.integration.dsl.MessageProcessor<> ) ) , java.util.function.Consumer<org.springframework.integration.dsl.RouterSpec<java.lang.Object,org.springframework.integration.dsl.MethodInvokingRouter>> ) ; }  <METHOD_END>
<METHOD_START> private < R extends org.springframework.integration.dsl.AbstractMessageRouter , S extends org.springframework.integration.dsl.AbstractRouterSpec<S,R> < S , R > > B B ( S S , java.util.function.Consumer<S> < S > java.util.function.Consumer<S> ) { if ( java.util.function.Consumer<S> != null ) { java.util.function.Consumer<S> . void ( S ) ; } BridgeHandler org.springframework.integration.dsl.BridgeHandler = new BridgeHandler ( ) ; boolean boolean = false ; java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> = S . getComponentsToRegister ( ) ; if ( ! CollectionUtils . isEmpty ( java.util.Collection<java.lang.Object> ) ) { for ( java.lang.Object java.lang.Object : java.util.Collection<java.lang.Object> ) { if ( java.lang.Object instanceof org.springframework.integration.dsl.IntegrationFlowDefinition ) { org.springframework.integration.dsl.IntegrationFlowDefinition<?> < ? > org.springframework.integration.dsl.IntegrationFlowDefinition<?> = ( org.springframework.integration.dsl.IntegrationFlowDefinition<?> < ? > ) java.lang.Object ; if ( org.springframework.integration.dsl.IntegrationFlowDefinition<> . boolean ( ) ) { boolean = true ; org.springframework.integration.dsl.IntegrationFlowDefinition<> . channel ( new FixedSubscriberChannel ( org.springframework.integration.dsl.BridgeHandler ) ) ; } B ( org.springframework.integration.dsl.IntegrationFlowDefinition<> . org.springframework.integration.dsl.StandardIntegrationFlow ( ) ) ; } else { B ( java.lang.Object ) ; } } } if ( java.util.Collection<java.lang.Object> != null ) { java.util.Collection<java.lang.Object> . void ( ) ; } B ( S , null ) ; if ( S . isDefaultToParentFlow ( ) ) { S . defaultOutputChannel ( new FixedSubscriberChannel ( org.springframework.integration.dsl.BridgeHandler ) ) ; boolean = true ; } if ( boolean ) { this . java.lang.Object = null ; B ( org.springframework.integration.dsl.BridgeHandler ) ; } return B ( ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> < RecipientListRouterSpec > java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> ) { return B ( new RecipientListRouterSpec ( ) , java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( AbstractMessageRouter org.springframework.integration.dsl.AbstractMessageRouter ) { return B ( org.springframework.integration.dsl.AbstractMessageRouter , ( java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.AbstractMessageRouter>> < GenericEndpointSpec < AbstractMessageRouter > > ) null ) ; }  <METHOD_END>
<METHOD_START> public < R extends org.springframework.integration.dsl.AbstractMessageRouter > B B ( R R , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<R>> < GenericEndpointSpec < R > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<R>> ) { return B ( R , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<R>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String ) { return B ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.GatewayEndpointSpec> < GatewayEndpointSpec > java.util.function.Consumer<org.springframework.integration.dsl.GatewayEndpointSpec> ) { return B ( new GatewayEndpointSpec ( java.lang.String ) , java.util.function.Consumer<org.springframework.integration.dsl.GatewayEndpointSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageChannel org.springframework.integration.dsl.MessageChannel ) { return B ( org.springframework.integration.dsl.MessageChannel , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageChannel org.springframework.integration.dsl.MessageChannel , java.util.function.Consumer<org.springframework.integration.dsl.GatewayEndpointSpec> < GatewayEndpointSpec > java.util.function.Consumer<org.springframework.integration.dsl.GatewayEndpointSpec> ) { return B ( new GatewayEndpointSpec ( org.springframework.integration.dsl.MessageChannel ) , java.util.function.Consumer<org.springframework.integration.dsl.GatewayEndpointSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( IntegrationFlow org.springframework.integration.dsl.IntegrationFlow ) { return B ( org.springframework.integration.dsl.IntegrationFlow , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( IntegrationFlow org.springframework.integration.dsl.IntegrationFlow , java.util.function.Consumer<org.springframework.integration.dsl.GatewayEndpointSpec> < GatewayEndpointSpec > java.util.function.Consumer<org.springframework.integration.dsl.GatewayEndpointSpec> ) { Assert . notNull ( org.springframework.integration.dsl.IntegrationFlow , STRING ) ; final DirectChannel org.springframework.integration.dsl.DirectChannel = new DirectChannel ( ) ; IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder = IntegrationFlows . from ( org.springframework.integration.dsl.DirectChannel ) ; org.springframework.integration.dsl.IntegrationFlow . configure ( org.springframework.integration.dsl.IntegrationFlowBuilder ) ; B ( org.springframework.integration.dsl.IntegrationFlowBuilder . get ( ) ) ; return B ( org.springframework.integration.dsl.DirectChannel , java.util.function.Consumer<org.springframework.integration.dsl.GatewayEndpointSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( ) { return B ( LoggingHandler . Level . INFO ) ; }  <METHOD_END>
<METHOD_START> public B B ( LoggingHandler . LoggingHandler LoggingHandler.Level ) { return B ( LoggingHandler.Level , ( java.lang.String ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String ) { return B ( LoggingHandler . Level . INFO , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public B B ( LoggingHandler . LoggingHandler LoggingHandler.Level , java.lang.String java.lang.String ) { return B ( LoggingHandler.Level , java.lang.String , ( Expression ) null ) ; }  <METHOD_END>
<METHOD_START> public B B ( LoggingHandler . LoggingHandler LoggingHandler.Level , java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return B ( LoggingHandler.Level , java.lang.String , org.springframework.integration.dsl.SpelExpressionParser . parseExpression ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> < Message < P > , java.lang.Object > java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) { Assert . notNull ( java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> , STRING ) ; return B ( new FunctionExpression <> ( java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) ) ; }  <METHOD_END>
<METHOD_START> public B B ( Expression org.springframework.integration.dsl.Expression ) { return B ( LoggingHandler . Level . INFO , org.springframework.integration.dsl.Expression ) ; }  <METHOD_END>
<METHOD_START> public B B ( LoggingHandler . LoggingHandler LoggingHandler.Level , Expression org.springframework.integration.dsl.Expression ) { return B ( LoggingHandler.Level , null , org.springframework.integration.dsl.Expression ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , Expression org.springframework.integration.dsl.Expression ) { return B ( LoggingHandler . Level . INFO , java.lang.String , org.springframework.integration.dsl.Expression ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( LoggingHandler . LoggingHandler LoggingHandler.Level , java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> < Message < P > , java.lang.Object > java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) { return B ( LoggingHandler.Level , null , java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( java.lang.String java.lang.String , java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> < Message < P > , java.lang.Object > java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) { return B ( LoggingHandler . Level . INFO , java.lang.String , java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> public < P > B B ( LoggingHandler . LoggingHandler LoggingHandler.Level , java.lang.String java.lang.String , java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> < Message < P > , java.lang.Object > java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) { Assert . notNull ( java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> , STRING ) ; return B ( LoggingHandler.Level , java.lang.String , new FunctionExpression <> ( java.util.function.Function<org.springframework.integration.dsl.Message<P>,java.lang.Object> ) ) ; }  <METHOD_END>
<METHOD_START> public B B ( LoggingHandler . LoggingHandler LoggingHandler.Level , java.lang.String java.lang.String , Expression org.springframework.integration.dsl.Expression ) { LoggingHandler org.springframework.integration.dsl.LoggingHandler = new LoggingHandler ( LoggingHandler.Level ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.dsl.LoggingHandler . setLoggerName ( java.lang.String ) ; } if ( org.springframework.integration.dsl.Expression != null ) { org.springframework.integration.dsl.LoggingHandler . setLogExpression ( org.springframework.integration.dsl.Expression ) ; } else { org.springframework.integration.dsl.LoggingHandler . setShouldLogFullMessage ( true ) ; } B ( org.springframework.integration.dsl.LoggingHandler ) ; MessageChannel org.springframework.integration.dsl.MessageChannel = new FixedSubscriberChannel ( org.springframework.integration.dsl.LoggingHandler ) ; return B ( org.springframework.integration.dsl.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageChannel org.springframework.integration.dsl.MessageChannel ) { return B ( org.springframework.integration.dsl.MessageChannel , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageChannel org.springframework.integration.dsl.MessageChannel , java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> < AggregatorSpec > java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> ) { return B ( org.springframework.integration.dsl.MessageChannel , java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageChannel org.springframework.integration.dsl.MessageChannel , java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> < AggregatorSpec > java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> , java.util.function.Consumer<org.springframework.integration.dsl.ScatterGatherSpec> < ScatterGatherSpec > java.util.function.Consumer<org.springframework.integration.dsl.ScatterGatherSpec> ) { AggregatorSpec org.springframework.integration.dsl.AggregatorSpec = new AggregatorSpec ( ) ; if ( java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> != null ) { java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> . accept ( org.springframework.integration.dsl.AggregatorSpec ) ; } AggregatingMessageHandler org.springframework.integration.dsl.AggregatingMessageHandler = org.springframework.integration.dsl.AggregatorSpec . get ( ) . getT2 ( ) ; B ( org.springframework.integration.dsl.AggregatingMessageHandler ) ; ScatterGatherHandler org.springframework.integration.dsl.ScatterGatherHandler = new ScatterGatherHandler ( org.springframework.integration.dsl.MessageChannel , org.springframework.integration.dsl.AggregatingMessageHandler ) ; return B ( new ScatterGatherSpec ( org.springframework.integration.dsl.ScatterGatherHandler ) , java.util.function.Consumer<org.springframework.integration.dsl.ScatterGatherSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> < RecipientListRouterSpec > java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> ) { return B ( java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> < RecipientListRouterSpec > java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> , java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> < AggregatorSpec > java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> ) { return B ( java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> , java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> < RecipientListRouterSpec > java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> , java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> < AggregatorSpec > java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> , java.util.function.Consumer<org.springframework.integration.dsl.ScatterGatherSpec> < ScatterGatherSpec > java.util.function.Consumer<org.springframework.integration.dsl.ScatterGatherSpec> ) { Assert . notNull ( java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> , STRING ) ; RecipientListRouterSpec org.springframework.integration.dsl.RecipientListRouterSpec = new RecipientListRouterSpec ( ) ; java.util.function.Consumer<org.springframework.integration.dsl.RecipientListRouterSpec> . accept ( org.springframework.integration.dsl.RecipientListRouterSpec ) ; AggregatorSpec org.springframework.integration.dsl.AggregatorSpec = new AggregatorSpec ( ) ; if ( java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> != null ) { java.util.function.Consumer<org.springframework.integration.dsl.AggregatorSpec> . accept ( org.springframework.integration.dsl.AggregatorSpec ) ; } RecipientListRouter org.springframework.integration.dsl.RecipientListRouter = org.springframework.integration.dsl.RecipientListRouterSpec . get ( ) . getT2 ( ) ; B ( org.springframework.integration.dsl.RecipientListRouter ) . addComponents ( org.springframework.integration.dsl.RecipientListRouterSpec . getComponentsToRegister ( ) ) ; AggregatingMessageHandler org.springframework.integration.dsl.AggregatingMessageHandler = org.springframework.integration.dsl.AggregatorSpec . get ( ) . getT2 ( ) ; B ( org.springframework.integration.dsl.AggregatingMessageHandler ) ; ScatterGatherHandler org.springframework.integration.dsl.ScatterGatherHandler = new ScatterGatherHandler ( org.springframework.integration.dsl.RecipientListRouter , org.springframework.integration.dsl.AggregatingMessageHandler ) ; return B ( new ScatterGatherSpec ( org.springframework.integration.dsl.ScatterGatherHandler ) , java.util.function.Consumer<org.springframework.integration.dsl.ScatterGatherSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( long long ) { return B ( long , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( long long , java.util.function.Consumer<org.springframework.integration.dsl.BarrierSpec> < BarrierSpec > java.util.function.Consumer<org.springframework.integration.dsl.BarrierSpec> ) { return B ( new BarrierSpec ( long ) , java.util.function.Consumer<org.springframework.integration.dsl.BarrierSpec> ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String ) { return B ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( java.lang.String java.lang.String , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> < GenericEndpointSpec < ServiceActivatingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) { MessageProcessor < java.lang.Void > org.springframework.integration.dsl.MessageProcessor<java.lang.Void> = new BeanNameMessageProcessor <> ( java.lang.String , STRING ) ; return B ( new ServiceActivatingHandler ( org.springframework.integration.dsl.MessageProcessor<java.lang.Void> ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageTriggerAction org.springframework.integration.dsl.MessageTriggerAction ) { return B ( org.springframework.integration.dsl.MessageTriggerAction , null ) ; }  <METHOD_END>
<METHOD_START> public B B ( MessageTriggerAction org.springframework.integration.dsl.MessageTriggerAction , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> < GenericEndpointSpec < ServiceActivatingHandler > > java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) { return B ( new ServiceActivatingHandler ( org.springframework.integration.dsl.MessageTriggerAction , STRING ) , java.util.function.Consumer<org.springframework.integration.dsl.GenericEndpointSpec<org.springframework.integration.dsl.ServiceActivatingHandler>> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public < T > org.springframework.integration.dsl.Publisher<org.springframework.integration.dsl.Message<T>> < Message < T > > org.springframework.integration.dsl.Publisher<org.springframework.integration.dsl.Message<T>> ( ) { MessageChannel org.springframework.integration.dsl.MessageChannel = this . org.springframework.integration.dsl.MessageChannel ; Publisher < Message < T > > org.springframework.integration.dsl.Publisher<org.springframework.integration.dsl.Message<T>> ; if ( org.springframework.integration.dsl.MessageChannel instanceof Publisher ) { org.springframework.integration.dsl.Publisher<org.springframework.integration.dsl.Message<T>> = ( Publisher < Message < T > > ) org.springframework.integration.dsl.MessageChannel ; } else { if ( org.springframework.integration.dsl.MessageChannel != null ) { org.springframework.integration.dsl.Publisher<org.springframework.integration.dsl.Message<T>> = MessageChannelReactiveUtils . toPublisher ( org.springframework.integration.dsl.MessageChannel ) ; } else { MessageChannel org.springframework.integration.dsl.MessageChannel = new ReactiveChannel ( ) ; org.springframework.integration.dsl.Publisher<org.springframework.integration.dsl.Message<T>> = ( Publisher < Message < T > > ) org.springframework.integration.dsl.MessageChannel ; B ( org.springframework.integration.dsl.MessageChannel ) ; } } org.springframework.integration.dsl.StandardIntegrationFlow ( ) ; return new PublisherIntegrationFlow <> ( this . java.util.Set<java.lang.Object> , org.springframework.integration.dsl.Publisher<org.springframework.integration.dsl.Message<T>> ) ; }  <METHOD_END>
<METHOD_START> private < S extends org.springframework.integration.dsl.ConsumerEndpointSpec<S,? extends org.springframework.integration.dsl.MessageHandler> < S , ? extends MessageHandler > > B B ( S S , java.util.function.Consumer<S> < S > java.util.function.Consumer<S> ) { if ( java.util.function.Consumer<S> != null ) { java.util.function.Consumer<S> . void ( S ) ; } MessageChannel org.springframework.integration.dsl.MessageChannel = this . org.springframework.integration.dsl.MessageChannel ; this . org.springframework.integration.dsl.MessageChannel = null ; if ( org.springframework.integration.dsl.MessageChannel == null ) { org.springframework.integration.dsl.MessageChannel = new DirectChannel ( ) ; this . B ( org.springframework.integration.dsl.MessageChannel ) ; } Tuple2 < ConsumerEndpointFactoryBean , ? extends MessageHandler > org.springframework.integration.dsl.Tuple2<org.springframework.integration.dsl.ConsumerEndpointFactoryBean,? extends org.springframework.integration.dsl.MessageHandler> = S . get ( ) ; B ( S . getComponentsToRegister ( ) ) ; if ( org.springframework.integration.dsl.MessageChannel instanceof MessageChannelReference ) { org.springframework.integration.dsl.Tuple2<org.springframework.integration.dsl.ConsumerEndpointFactoryBean,> . getT1 ( ) . setInputChannelName ( ( ( MessageChannelReference ) org.springframework.integration.dsl.MessageChannel ) . getName ( ) ) ; } else { if ( org.springframework.integration.dsl.MessageChannel instanceof FixedSubscriberChannelPrototype ) { java.lang.String java.lang.String = ( ( FixedSubscriberChannelPrototype ) org.springframework.integration.dsl.MessageChannel ) . getName ( ) ; org.springframework.integration.dsl.MessageChannel = new FixedSubscriberChannel ( org.springframework.integration.dsl.Tuple2<org.springframework.integration.dsl.ConsumerEndpointFactoryBean,> . getT2 ( ) ) ; if ( java.lang.String != null ) { ( ( FixedSubscriberChannel ) org.springframework.integration.dsl.MessageChannel ) . setBeanName ( java.lang.String ) ; } B ( org.springframework.integration.dsl.MessageChannel ) ; } org.springframework.integration.dsl.Tuple2<org.springframework.integration.dsl.ConsumerEndpointFactoryBean,> . getT1 ( ) . setInputChannel ( org.springframework.integration.dsl.MessageChannel ) ; } return B ( S ) . B ( org.springframework.integration.dsl.Tuple2<org.springframework.integration.dsl.ConsumerEndpointFactoryBean,> . getT2 ( ) ) ; }  <METHOD_END>
<METHOD_START> private B B ( MessageChannel org.springframework.integration.dsl.MessageChannel ) { if ( ! ( org.springframework.integration.dsl.MessageChannel instanceof FixedSubscriberChannelPrototype ) ) { this . java.util.Set<java.lang.Object> . boolean ( org.springframework.integration.dsl.MessageChannel ) ; if ( this . java.lang.Object != null ) { java.lang.String java.lang.String = null ; if ( org.springframework.integration.dsl.MessageChannel instanceof MessageChannelReference ) { java.lang.String = ( ( MessageChannelReference ) org.springframework.integration.dsl.MessageChannel ) . getName ( ) ; } java.lang.Object java.lang.Object = this . java.lang.Object ; if ( AopUtils . isAopProxy ( java.lang.Object ) ) { java.lang.Object = java.lang.Object ( java.lang.Object ) ; } if ( java.lang.Object instanceof MessageProducer ) { MessageProducer org.springframework.integration.dsl.MessageProducer = ( MessageProducer ) java.lang.Object ; void ( org.springframework.integration.dsl.MessageProducer ) ; if ( java.lang.String != null ) { if ( org.springframework.integration.dsl.MessageProducer instanceof AbstractMessageProducingHandler ) { ( ( AbstractMessageProducingHandler ) org.springframework.integration.dsl.MessageProducer ) . setOutputChannelName ( java.lang.String ) ; } else { throw new BeanCreationException ( STRING + java.lang.Object + STRING + STRING + STRING + STRING + STRING ) ; } } else { org.springframework.integration.dsl.MessageProducer . setOutputChannel ( org.springframework.integration.dsl.MessageChannel ) ; } } else if ( java.lang.Object instanceof SourcePollingChannelAdapterSpec ) { SourcePollingChannelAdapterFactoryBean org.springframework.integration.dsl.SourcePollingChannelAdapterFactoryBean = ( ( SourcePollingChannelAdapterSpec ) java.lang.Object ) . get ( ) . getT1 ( ) ; if ( java.lang.String != null ) { org.springframework.integration.dsl.SourcePollingChannelAdapterFactoryBean . setOutputChannelName ( java.lang.String ) ; } else { org.springframework.integration.dsl.SourcePollingChannelAdapterFactoryBean . setOutputChannel ( org.springframework.integration.dsl.MessageChannel ) ; } } else { throw new BeanCreationException ( STRING + java.lang.Object + STRING + STRING ) ; } this . java.lang.Object = null ; } } return B ( ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { if ( this . java.lang.Object != null ) { java.lang.Object java.lang.Object = this . java.lang.Object ; if ( AopUtils . isAopProxy ( java.lang.Object ) ) { java.lang.Object = java.lang.Object ( java.lang.Object ) ; } return java.lang.Object instanceof AbstractMessageProducingHandler || java.lang.Object instanceof SourcePollingChannelAdapterSpec ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected final B B ( ) { return ( B ) this ; }  <METHOD_END>
<METHOD_START> protected org.springframework.integration.dsl.StandardIntegrationFlow org.springframework.integration.dsl.StandardIntegrationFlow ( ) { if ( this . org.springframework.integration.dsl.StandardIntegrationFlow == null ) { if ( this . org.springframework.integration.dsl.MessageChannel instanceof FixedSubscriberChannelPrototype ) { throw new BeanCreationException ( STRING + this . org.springframework.integration.dsl.MessageChannel + STRING + STRING + STRING ) ; } if ( this . java.util.Set<java.lang.Object> . int ( ) == NUMBER ) { if ( this . java.lang.Object != null ) { if ( this . java.lang.Object instanceof SourcePollingChannelAdapterSpec ) { throw new BeanCreationException ( STRING + this . java.lang.Object + STRING + STRING ) ; } } else if ( this . org.springframework.integration.dsl.MessageChannel != null ) { throw new BeanCreationException ( STRING + STRING ) ; } } if ( this . boolean ) { java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> = this . java.util.Set<java.lang.Object> . java.util.stream.Stream<java.lang.Object> ( ) . java.util.Optional<java.lang.Object> ( ( java.lang.Object , java.lang.Object ) -> java.lang.Object ) ; if ( java.util.Optional<java.lang.Object> . java.lang.Object ( ) instanceof WireTapSpec ) { B ( IntegrationContextUtils . NULL_CHANNEL_BEAN_NAME ) ; } } this . org.springframework.integration.dsl.StandardIntegrationFlow = new StandardIntegrationFlow ( this . java.util.Set<java.lang.Object> ) ; } return this . org.springframework.integration.dsl.StandardIntegrationFlow ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.Object java.lang.Object ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ; return java.lang.Class<> . boolean ( ) && ! java.lang.Class<> . boolean ( ) && ! java.lang.Class<> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { if ( ! ( java.lang.Object instanceof Advised ) ) { return java.lang.Object ; } Advised org.springframework.integration.dsl.Advised = ( Advised ) java.lang.Object ; if ( org.springframework.integration.dsl.Advised . getTargetSource ( ) == null ) { return null ; } try { return java.lang.Object ( org.springframework.integration.dsl.Advised . getTargetSource ( ) . getTarget ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new BeanCreationException ( STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private void void ( MessageProducer org.springframework.integration.dsl.MessageProducer ) { Assert . isTrue ( ! java.util.Set<org.springframework.integration.dsl.MessageProducer> . contains ( org.springframework.integration.dsl.MessageProducer ) , STRING + org.springframework.integration.dsl.MessageProducer + STRING ) ; java.util.Set<org.springframework.integration.dsl.MessageProducer> . add ( org.springframework.integration.dsl.MessageProducer ) ; }  <METHOD_END>
