<METHOD_START> void ( JtaProperties org.springframework.boot.autoconfigure.transaction.jta.JtaProperties , ObjectProvider < TransactionManagerCustomizers > org.springframework.boot.autoconfigure.transaction.jta.ObjectProvider<org.springframework.boot.autoconfigure.transaction.jta.TransactionManagerCustomizers> ) { this . org.springframework.boot.autoconfigure.transaction.jta.JtaProperties = org.springframework.boot.autoconfigure.transaction.jta.JtaProperties ; this . org.springframework.boot.autoconfigure.transaction.jta.TransactionManagerCustomizers = org.springframework.boot.autoconfigure.transaction.jta.ObjectProvider<org.springframework.boot.autoconfigure.transaction.jta.TransactionManagerCustomizers> . getIfAvailable ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean @ ConfigurationProperties ( prefix = STRING ) public bitronix . bitronix . bitronix.tm.Configuration bitronix.tm.Configuration ( ) { bitronix . bitronix . bitronix bitronix.tm.Configuration = TransactionManagerServices . getConfiguration ( ) ; if ( StringUtils . hasText ( this . org.springframework.boot.autoconfigure.transaction.jta.JtaProperties . getTransactionManagerId ( ) ) ) { bitronix.tm.Configuration . setServerId ( this . org.springframework.boot.autoconfigure.transaction.jta.JtaProperties . getTransactionManagerId ( ) ) ; } java.io.File java.io.File = java.io.File ( ) ; bitronix.tm.Configuration . setLogPart1Filename ( new java.io.File ( java.io.File , STRING ) . java.lang.String ( ) ) ; bitronix.tm.Configuration . setLogPart2Filename ( new java.io.File ( java.io.File , STRING ) . java.lang.String ( ) ) ; bitronix.tm.Configuration . setDisableJmx ( true ) ; return bitronix.tm.Configuration ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( ) { if ( StringUtils . hasLength ( this . org.springframework.boot.autoconfigure.transaction.jta.JtaProperties . getLogDir ( ) ) ) { return new java.io.File ( this . org.springframework.boot.autoconfigure.transaction.jta.JtaProperties . getLogDir ( ) ) ; } java.io.File java.io.File = new ApplicationHome ( ) . getDir ( ) ; return new java.io.File ( java.io.File , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( TransactionManager .class ) public org.springframework.boot.autoconfigure.transaction.jta.BitronixTransactionManager org.springframework.boot.autoconfigure.transaction.jta.BitronixTransactionManager ( bitronix . bitronix . bitronix bitronix.tm.Configuration ) { return TransactionManagerServices . getTransactionManager ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( XADataSourceWrapper .class ) public org.springframework.boot.autoconfigure.transaction.jta.BitronixXADataSourceWrapper org.springframework.boot.autoconfigure.transaction.jta.BitronixXADataSourceWrapper ( ) { return new BitronixXADataSourceWrapper ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public static org.springframework.boot.autoconfigure.transaction.jta.BitronixDependentBeanFactoryPostProcessor org.springframework.boot.autoconfigure.transaction.jta.BitronixDependentBeanFactoryPostProcessor ( ) { return new BitronixDependentBeanFactoryPostProcessor ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.transaction.jta.JtaTransactionManager org.springframework.boot.autoconfigure.transaction.jta.JtaTransactionManager ( TransactionManager org.springframework.boot.autoconfigure.transaction.jta.TransactionManager ) { JtaTransactionManager org.springframework.boot.autoconfigure.transaction.jta.JtaTransactionManager = new JtaTransactionManager ( org.springframework.boot.autoconfigure.transaction.jta.TransactionManager ) ; if ( this . org.springframework.boot.autoconfigure.transaction.jta.TransactionManagerCustomizers != null ) { this . org.springframework.boot.autoconfigure.transaction.jta.TransactionManagerCustomizers . customize ( org.springframework.boot.autoconfigure.transaction.jta.JtaTransactionManager ) ; } return org.springframework.boot.autoconfigure.transaction.jta.JtaTransactionManager ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( XAConnectionFactoryWrapper .class ) public org.springframework.boot.autoconfigure.transaction.jta.BitronixXAConnectionFactoryWrapper org.springframework.boot.autoconfigure.transaction.jta.BitronixXAConnectionFactoryWrapper ( ) { return new BitronixXAConnectionFactoryWrapper ( ) ; }  <METHOD_END>
