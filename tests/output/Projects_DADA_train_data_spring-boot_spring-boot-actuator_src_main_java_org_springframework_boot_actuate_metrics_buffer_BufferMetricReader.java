<METHOD_START> public void ( CounterBuffers org.springframework.boot.actuate.metrics.buffer.CounterBuffers , GaugeBuffers org.springframework.boot.actuate.metrics.buffer.GaugeBuffers ) { this . org.springframework.boot.actuate.metrics.buffer.CounterBuffers = org.springframework.boot.actuate.metrics.buffer.CounterBuffers ; this . org.springframework.boot.actuate.metrics.buffer.GaugeBuffers = org.springframework.boot.actuate.metrics.buffer.GaugeBuffers ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.actuate.metrics.buffer.Metric<?> < ? > org.springframework.boot.actuate.metrics.buffer.Metric<?> ( final java.lang.String java.lang.String ) { Buffer < ? > org.springframework.boot.actuate.metrics.buffer.Buffer<?> = this . org.springframework.boot.actuate.metrics.buffer.CounterBuffers . find ( java.lang.String ) ; if ( org.springframework.boot.actuate.metrics.buffer.Buffer<> == null ) { org.springframework.boot.actuate.metrics.buffer.Buffer<?> = this . org.springframework.boot.actuate.metrics.buffer.GaugeBuffers . find ( java.lang.String ) ; } return ( org.springframework.boot.actuate.metrics.buffer.Buffer<> == null ? null : org.springframework.boot.actuate.metrics.buffer.Metric ( java.lang.String , org.springframework.boot.actuate.metrics.buffer.Buffer<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Iterable<org.springframework.boot.actuate.metrics.buffer.Metric<?>> < Metric < ? > > java.lang.Iterable<org.springframework.boot.actuate.metrics.buffer.Metric<?>> ( ) { return java.lang.Iterable<org.springframework.boot.actuate.metrics.buffer.Metric<?>> ( org.springframework.boot.actuate.metrics.buffer.BufferMetricReader . java.util.function.Predicate<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Iterable<org.springframework.boot.actuate.metrics.buffer.Metric<?>> < Metric < ? > > java.lang.Iterable<org.springframework.boot.actuate.metrics.buffer.Metric<?>> ( java.lang.String java.lang.String ) { return java.lang.Iterable<org.springframework.boot.actuate.metrics.buffer.Metric<?>> ( java.util.regex.Pattern . java.util.regex.Pattern ( java.lang.String + STRING ) . java.util.function.Predicate<java.lang.String> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . org.springframework.boot.actuate.metrics.buffer.CounterBuffers . count ( ) + this . org.springframework.boot.actuate.metrics.buffer.GaugeBuffers . count ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Iterable<org.springframework.boot.actuate.metrics.buffer.Metric<?>> < Metric < ? > > java.lang.Iterable<org.springframework.boot.actuate.metrics.buffer.Metric<?>> ( java.util.function.Predicate<java.lang.String> < java.lang.String > java.util.function.Predicate<java.lang.String> ) { final java.util.List<org.springframework.boot.actuate.metrics.buffer.Metric<?>> < Metric < ? > > java.util.List<org.springframework.boot.actuate.metrics.buffer.Metric<?>> = new java.util.ArrayList<org.springframework.boot.actuate.metrics.buffer.Metric<?>> <> ( ) ; void ( this . org.springframework.boot.actuate.metrics.buffer.GaugeBuffers , java.util.function.Predicate<java.lang.String> , java.util.List<org.springframework.boot.actuate.metrics.buffer.Metric<?>> ) ; void ( this . org.springframework.boot.actuate.metrics.buffer.CounterBuffers , java.util.function.Predicate<java.lang.String> , java.util.List<org.springframework.boot.actuate.metrics.buffer.Metric<?>> ) ; return java.util.List<org.springframework.boot.actuate.metrics.buffer.Metric<?>> ; }  <METHOD_END>
<METHOD_START> private < T extends java.lang.Number , B extends org.springframework.boot.actuate.metrics.buffer.Buffer<T> < T > > void void ( Buffers < B > org.springframework.boot.actuate.metrics.buffer.Buffers<B> , java.util.function.Predicate<java.lang.String> < java.lang.String > java.util.function.Predicate<java.lang.String> , final java.util.List<org.springframework.boot.actuate.metrics.buffer.Metric<?>> < Metric < ? > > java.util.List<org.springframework.boot.actuate.metrics.buffer.Metric<?>> ) { org.springframework.boot.actuate.metrics.buffer.Buffers<B> . forEach ( java.util.function.Predicate<java.lang.String> , new java.util.function.BiConsumer<java.lang.String,B> < java.lang.String , B > ( ) { @ java.lang.Override public void void ( java.lang.String java.lang.String , B B ) { java.util.List<org.springframework.boot.actuate.metrics.buffer.Metric<?>> . add ( org.springframework.boot.actuate.metrics.buffer.Metric<T> ( java.lang.String , B ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , B B ) { java.util.List<org.springframework.boot.actuate.metrics.buffer.Metric<?>> . add ( org.springframework.boot.actuate.metrics.buffer.Metric<T> ( java.lang.String , B ) ) ; }  <METHOD_END>
<METHOD_START> private < T extends java.lang.Number > org.springframework.boot.actuate.metrics.buffer.Metric<T> < T > org.springframework.boot.actuate.metrics.buffer.Metric<T> ( final java.lang.String java.lang.String , Buffer < T > org.springframework.boot.actuate.metrics.buffer.Buffer<T> ) { return new Metric <> ( java.lang.String , org.springframework.boot.actuate.metrics.buffer.Buffer<T> . getValue ( ) , new java.util.Date ( org.springframework.boot.actuate.metrics.buffer.Buffer<T> . getTimestamp ( ) ) ) ; }  <METHOD_END>
