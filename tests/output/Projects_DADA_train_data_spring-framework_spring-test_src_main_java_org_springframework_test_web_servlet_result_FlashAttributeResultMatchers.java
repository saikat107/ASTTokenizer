<METHOD_START> protected void ( ) {	}  <METHOD_END>
<METHOD_START> public < T > org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final Matcher < T > org.springframework.test.web.servlet.result.Matcher<T> ) { return new ResultMatcher ( ) { @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { assertThat ( STRING , ( T ) org.springframework.test.web.servlet.result.MvcResult . getFlashMap ( ) . get ( java.lang.String ) , org.springframework.test.web.servlet.result.Matcher<T> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { assertThat ( STRING , ( T ) org.springframework.test.web.servlet.result.MvcResult . getFlashMap ( ) . get ( java.lang.String ) , org.springframework.test.web.servlet.result.Matcher<T> ) ; }  <METHOD_END>
<METHOD_START> public < T > org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String java.lang.String , final java.lang.Object java.lang.Object ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { assertEquals ( STRING , java.lang.Object , org.springframework.test.web.servlet.result.MvcResult . getFlashMap ( ) . get ( java.lang.String ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { assertEquals ( STRING , java.lang.Object , org.springframework.test.web.servlet.result.MvcResult . getFlashMap ( ) . get ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public < T > org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final java.lang.String ... java.lang.String[] ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { for ( java.lang.String java.lang.String : java.lang.String[] ) { assertTrue ( STRING + java.lang.String + STRING , org.springframework.test.web.servlet.result.MvcResult . getFlashMap ( ) . get ( java.lang.String ) != null ) ; } } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { for ( java.lang.String java.lang.String : java.lang.String[] ) { assertTrue ( STRING + java.lang.String + STRING , org.springframework.test.web.servlet.result.MvcResult . getFlashMap ( ) . get ( java.lang.String ) != null ) ; } }  <METHOD_END>
<METHOD_START> public < T > org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( final int int ) { return new ResultMatcher ( ) { @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { assertEquals ( STRING , int , org.springframework.test.web.servlet.result.MvcResult . getFlashMap ( ) . size ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MvcResult org.springframework.test.web.servlet.result.MvcResult ) throws java.lang.Exception { assertEquals ( STRING , int , org.springframework.test.web.servlet.result.MvcResult . getFlashMap ( ) . size ( ) ) ; }  <METHOD_END>
