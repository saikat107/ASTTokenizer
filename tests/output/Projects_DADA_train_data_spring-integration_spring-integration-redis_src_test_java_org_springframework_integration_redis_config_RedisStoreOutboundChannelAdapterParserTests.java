<METHOD_START> @ Test public void void ( ) java.lang.Exception { RedisStoreWritingMessageHandler org.springframework.integration.redis.config.RedisStoreWritingMessageHandler = org.springframework.integration.redis.config.ApplicationContext . getBean ( STRING , RedisStoreWritingMessageHandler .class ) ; assertEquals ( STRING , ( ( LiteralExpression ) TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) ) . getExpressionString ( ) ) ; assertEquals ( STRING , ( TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) ) . toString ( ) ) ; assertTrue ( TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) instanceof StringRedisTemplate ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( org.springframework.integration.redis.config.ApplicationContext . getBean ( STRING ) , STRING ) ; assertTrue ( AopUtils . isAopProxy ( java.lang.Object ) ) ; assertSame ( ( ( Advised ) java.lang.Object ) . getTargetSource ( ) . getTarget ( ) , org.springframework.integration.redis.config.RedisStoreWritingMessageHandler ) ; assertThat ( TestUtils . getPropertyValue ( java.lang.Object , STRING ) , Matchers . instanceOf ( RequestHandlerRetryAdvice .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RedisStoreWritingMessageHandler org.springframework.integration.redis.config.RedisStoreWritingMessageHandler = TestUtils . getPropertyValue ( org.springframework.integration.redis.config.ApplicationContext . getBean ( STRING ) , STRING , RedisStoreWritingMessageHandler .class ) ; assertEquals ( STRING , ( ( LiteralExpression ) TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) ) . getExpressionString ( ) ) ; assertEquals ( STRING , ( TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) ) . toString ( ) ) ; assertFalse ( TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) instanceof StringRedisTemplate ) ; assertTrue ( TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) instanceof StringRedisSerializer ) ; assertTrue ( TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) instanceof StringRedisSerializer ) ; assertTrue ( TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) instanceof JdkSerializationRedisSerializer ) ; assertTrue ( TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) instanceof JdkSerializationRedisSerializer ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RedisStoreWritingMessageHandler org.springframework.integration.redis.config.RedisStoreWritingMessageHandler = TestUtils . getPropertyValue ( org.springframework.integration.redis.config.ApplicationContext . getBean ( STRING ) , STRING , RedisStoreWritingMessageHandler .class ) ; assertEquals ( STRING , ( ( LiteralExpression ) TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) ) . getExpressionString ( ) ) ; assertEquals ( STRING , ( TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) ) . toString ( ) ) ; assertSame ( org.springframework.integration.redis.config.RedisTemplate<,> , TestUtils . getPropertyValue ( org.springframework.integration.redis.config.RedisStoreWritingMessageHandler , STRING ) ) ; }  <METHOD_END>
