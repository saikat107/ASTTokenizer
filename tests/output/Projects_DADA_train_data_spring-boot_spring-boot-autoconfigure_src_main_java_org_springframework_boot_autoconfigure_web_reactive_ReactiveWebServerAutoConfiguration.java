<METHOD_START> @ ConditionalOnMissingBean @ Bean public org.springframework.boot.autoconfigure.web.reactive.DefaultReactiveWebServerCustomizer org.springframework.boot.autoconfigure.web.reactive.DefaultReactiveWebServerCustomizer ( ServerProperties org.springframework.boot.autoconfigure.web.reactive.ServerProperties ) { return new DefaultReactiveWebServerCustomizer ( org.springframework.boot.autoconfigure.web.reactive.ServerProperties ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.boot.autoconfigure.web.reactive.BeanFactory ) throws org.springframework.boot.autoconfigure.web.reactive.BeansException { if ( org.springframework.boot.autoconfigure.web.reactive.BeanFactory instanceof ConfigurableListableBeanFactory ) { this . org.springframework.boot.autoconfigure.web.reactive.ConfigurableListableBeanFactory = ( ConfigurableListableBeanFactory ) org.springframework.boot.autoconfigure.web.reactive.BeanFactory ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AnnotationMetadata org.springframework.boot.autoconfigure.web.reactive.AnnotationMetadata , BeanDefinitionRegistry org.springframework.boot.autoconfigure.web.reactive.BeanDefinitionRegistry ) { if ( this . org.springframework.boot.autoconfigure.web.reactive.ConfigurableListableBeanFactory == null ) { return; } if ( ObjectUtils . isEmpty ( this . org.springframework.boot.autoconfigure.web.reactive.ConfigurableListableBeanFactory . getBeanNamesForType ( WebServerFactoryCustomizerBeanPostProcessor .class , true , false ) ) ) { RootBeanDefinition org.springframework.boot.autoconfigure.web.reactive.RootBeanDefinition = new RootBeanDefinition ( WebServerFactoryCustomizerBeanPostProcessor .class ) ; org.springframework.boot.autoconfigure.web.reactive.RootBeanDefinition . setSynthetic ( true ) ; org.springframework.boot.autoconfigure.web.reactive.BeanDefinitionRegistry . registerBeanDefinition ( STRING , org.springframework.boot.autoconfigure.web.reactive.RootBeanDefinition ) ; } }  <METHOD_END>
