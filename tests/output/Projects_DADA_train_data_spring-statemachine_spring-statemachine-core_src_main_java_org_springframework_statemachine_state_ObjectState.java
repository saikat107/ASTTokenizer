<METHOD_START> public void ( S S ) { super( S ); }  <METHOD_END>
<METHOD_START> public void ( S S , PseudoState < S , E > org.springframework.statemachine.state.PseudoState<S,E> ) { super( S , org.springframework.statemachine.state.PseudoState<S,E> ); }  <METHOD_END>
<METHOD_START> public void ( S S , java.util.Collection<E> < E > java.util.Collection<E> ) { super( S , java.util.Collection<E> ); }  <METHOD_END>
<METHOD_START> public void ( S S , java.util.Collection<E> < E > java.util.Collection<E> , java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> < ? extends Action < S , E > > java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> , java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> < ? extends Action < S , E > > java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> ) { super( S , java.util.Collection<E> , java.util.Collection<> , java.util.Collection<> ); }  <METHOD_END>
<METHOD_START> public void ( S S , java.util.Collection<E> < E > java.util.Collection<E> , java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> < ? extends Action < S , E > > java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> , java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> < ? extends Action < S , E > > java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> , PseudoState < S , E > org.springframework.statemachine.state.PseudoState<S,E> ) { super( S , java.util.Collection<E> , java.util.Collection<> , java.util.Collection<> , org.springframework.statemachine.state.PseudoState<S,E> ); }  <METHOD_END>
<METHOD_START> public void ( S S , java.util.Collection<E> < E > java.util.Collection<E> , java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> < ? extends Action < S , E > > java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> , java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> < ? extends Action < S , E > > java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> , PseudoState < S , E > org.springframework.statemachine.state.PseudoState<S,E> , java.util.Collection<org.springframework.statemachine.state.Region<S,E>> < Region < S , E > > java.util.Collection<org.springframework.statemachine.state.Region<S,E>> ) { super( S , java.util.Collection<E> , java.util.Collection<> , java.util.Collection<> , org.springframework.statemachine.state.PseudoState<S,E> , java.util.Collection<org.springframework.statemachine.state.Region<S,E>> ); }  <METHOD_END>
<METHOD_START> public void ( S S , java.util.Collection<E> < E > java.util.Collection<E> , java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> < ? extends Action < S , E > > java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> , java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> < ? extends Action < S , E > > java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> , PseudoState < S , E > org.springframework.statemachine.state.PseudoState<S,E> , StateMachine < S , E > org.springframework.statemachine.state.StateMachine<S,E> ) { super( S , java.util.Collection<E> , java.util.Collection<> , java.util.Collection<> , org.springframework.statemachine.state.PseudoState<S,E> , org.springframework.statemachine.state.StateMachine<S,E> ); }  <METHOD_END>
<METHOD_START> public void ( S S , java.util.Collection<E> < E > java.util.Collection<E> , java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> < ? extends Action < S , E > > java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> , java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> < ? extends Action < S , E > > java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> , java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> < ? extends Action < S , E > > java.util.Collection<? extends org.springframework.statemachine.state.Action<S,E>> , PseudoState < S , E > org.springframework.statemachine.state.PseudoState<S,E> , java.util.Collection<org.springframework.statemachine.state.Region<S,E>> < Region < S , E > > java.util.Collection<org.springframework.statemachine.state.Region<S,E>> , StateMachine < S , E > org.springframework.statemachine.state.StateMachine<S,E> ) { super( S , java.util.Collection<E> , java.util.Collection<> , java.util.Collection<> , java.util.Collection<> , org.springframework.statemachine.state.PseudoState<S,E> , java.util.Collection<org.springframework.statemachine.state.Region<S,E>> , org.springframework.statemachine.state.StateMachine<S,E> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < S , E > org.springframework.statemachine.state.StateContext<S,E> ) { super. exit ( org.springframework.statemachine.state.StateContext<S,E> ) ; for ( Action < S , E > org.springframework.statemachine.state.Action<S,E> : getExitActions ( ) ) { try { executeAction ( org.springframework.statemachine.state.Action<S,E> , org.springframework.statemachine.state.StateContext<S,E> ) ; } catch ( java.lang.Exception java.lang.Exception ) { org.springframework.statemachine.state.Log . error ( STRING , java.lang.Exception ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < S , E > org.springframework.statemachine.state.StateContext<S,E> ) { super. entry ( org.springframework.statemachine.state.StateContext<S,E> ) ; for ( Action < S , E > org.springframework.statemachine.state.Action<S,E> : getEntryActions ( ) ) { try { executeAction ( org.springframework.statemachine.state.Action<S,E> , org.springframework.statemachine.state.StateContext<S,E> ) ; } catch ( java.lang.Exception java.lang.Exception ) { org.springframework.statemachine.state.Log . error ( STRING , java.lang.Exception ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + getIds ( ) + STRING + java.lang.Class<? extends org.springframework.statemachine.state.ObjectState> ( ) + STRING + int ( ) + STRING + super. java.lang.String ( ) + STRING ; }  <METHOD_END>
