<METHOD_START> void ( EmbeddedDatabaseType org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseType , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseType = org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseType ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseType org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseType ( ) { return this . org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseType ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return java.lang.String . java.lang.String ( this . java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( java.lang.String java.lang.String ) { return java.lang.String != null && ( java.lang.String . boolean ( org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection . java.lang.String ) || java.lang.String . boolean ( org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection . java.lang.String ) || java.lang.String . boolean ( org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection . java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( javax.sql.DataSource javax.sql.DataSource ) { try { return new JdbcTemplate ( javax.sql.DataSource ) . execute ( new org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection.IsEmbedded ( ) ) ; } catch ( DataAccessException org.springframework.boot.autoconfigure.jdbc.DataAccessException ) { return false ; } }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection ( java.lang.ClassLoader java.lang.ClassLoader ) { if ( org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection != null ) { return org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection ; } for ( org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection : org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection . org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection[] ( ) ) { if ( org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection != org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection && ClassUtils . isPresent ( org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection . java.lang.String ( ) , java.lang.ClassLoader ) ) { return org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection ; } } return org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Boolean java.lang.Boolean ( java.sql.Connection java.sql.Connection )				throws java.sql.SQLException , org.springframework.boot.autoconfigure.jdbc.DataAccessException { java.lang.String java.lang.String = java.sql.Connection . java.sql.DatabaseMetaData ( ) . java.lang.String ( ) ; if ( java.lang.String == null ) { return false ; } java.lang.String = java.lang.String . java.lang.String ( ) ; org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection [] org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection[] = org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection . org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection[] ( ) ; for ( org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection : org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection[] ) { if ( org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection != org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection && java.lang.String . boolean ( org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection . java.lang.String ( ) ) ) { return true ; } } return false ; }  <METHOD_END>
