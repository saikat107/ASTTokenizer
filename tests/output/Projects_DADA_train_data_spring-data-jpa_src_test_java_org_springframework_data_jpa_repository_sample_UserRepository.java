<METHOD_START> @ QueryHints ( { @ QueryHint ( name = STRING , value = STRING ) } ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Transactional java . util . java.util.Optional<org.springframework.data.jpa.repository.sample.User> < User > java.util.Optional<org.springframework.data.jpa.repository.sample.User> ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> void void ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> ( Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) @ Transactional ( readOnly = true ) org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> ( Pageable org.springframework.data.jpa.repository.sample.Pageable , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String , Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> ( Pageable org.springframework.data.jpa.repository.sample.Pageable , java.lang.String ... java.lang.String[] );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( @ Param ( STRING ) java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Modifying @ Query ( STRING ) void void ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.lang.Long java.lang.Long ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( @ Param ( STRING ) java.lang.String java.lang.String , @ Param ( STRING ) java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( @ Param ( STRING ) java.lang.String java.lang.String , @ Param ( STRING ) java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String , Sort org.springframework.data.jpa.repository.sample.Sort );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.SpecialUser> < SpecialUser > java.util.List<org.springframework.data.jpa.repository.sample.SpecialUser> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> ( Pageable org.springframework.data.jpa.repository.sample.Pageable , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( int int );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( int int );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.jpa.repository.sample.Page<java.lang.String> < java.lang.String > org.springframework.data.jpa.repository.sample.Page<java.lang.String> ( Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , nativeQuery = true ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.util.Date java.util.Date );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.util.Date java.util.Date );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , nativeQuery = true ) java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ( )  <METHOD_END>
<METHOD_START> long long ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> int int ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> boolean boolean ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.Collection<org.springframework.data.jpa.repository.sample.User> < User > java.util.Collection<org.springframework.data.jpa.repository.sample.User> ( @ Param ( STRING ) java.lang.Integer ... java.lang.Integer[] );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.Collection<org.springframework.data.jpa.repository.sample.User> < User > java.util.Collection<org.springframework.data.jpa.repository.sample.User> ( java.lang.Integer ... java.lang.Integer[] );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.Collection<org.springframework.data.jpa.repository.sample.User> < User > java.util.Collection<org.springframework.data.jpa.repository.sample.User> ( @ Param ( STRING ) java.lang.Integer ... java.lang.Integer[] );  <METHOD_END>
<METHOD_START> @ Modifying @ Query ( STRING ) void void ( @ Param ( STRING ) boolean boolean , @ Param ( STRING ) java.lang.Integer ... java.lang.Integer[] );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( byte [] byte[] );  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.Slice<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Slice<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String , Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> );  <METHOD_END>
<METHOD_START> java.lang.Long java.lang.Long ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Procedure ( STRING ) java.lang.Integer java.lang.Integer ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> @ Procedure ( procedureName = STRING ) java.lang.Integer java.lang.Integer ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> @ Procedure ( name = STRING ) java.lang.Integer java.lang.Integer ( @ Param ( STRING ) java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> @ Procedure java.lang.Integer java.lang.Integer ( @ Param ( STRING ) java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , countProjection = STRING ) org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String , Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( name = STRING , countProjection = STRING ) org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String , Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( )  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( )  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( )  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( )  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.User org.springframework.data.jpa.repository.sample.User ( )  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( Sort org.springframework.data.jpa.repository.sample.Sort );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( Sort org.springframework.data.jpa.repository.sample.Sort );  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> ( Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> ( Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.Slice<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Slice<org.springframework.data.jpa.repository.sample.User> ( Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> org.springframework.data.jpa.repository.sample.Slice<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Slice<org.springframework.data.jpa.repository.sample.User> ( Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , nativeQuery = true ) byte [] byte[] ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.jpa.repository.sample.Optional<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Optional<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( @ Param ( STRING ) java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( int int );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( @ Param ( STRING ) java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( @ Param ( STRING ) java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , countQuery = STRING , nativeQuery = true ) org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> < User > org.springframework.data.jpa.repository.sample.Page<org.springframework.data.jpa.repository.sample.User> ( Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.util.Collection<java.lang.Integer> < java.lang.Integer > java.util.Collection<java.lang.Integer> );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.Integer [] java.lang.Integer[] );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.Integer [] java.lang.Integer[] , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.stream.Stream<org.springframework.data.jpa.repository.sample.User> < User > java.util.stream.Stream<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> java.util.stream.Stream<org.springframework.data.jpa.repository.sample.User> < User > java.util.stream.Stream<org.springframework.data.jpa.repository.sample.User> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.stream.Stream<org.springframework.data.jpa.repository.sample.User> < User > java.util.stream.Stream<org.springframework.data.jpa.repository.sample.User> ( Pageable org.springframework.data.jpa.repository.sample.Pageable );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( Role org.springframework.data.jpa.repository.sample.Role );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( Role org.springframework.data.jpa.repository.sample.Role );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.User> < User > java.util.List<org.springframework.data.jpa.repository.sample.User> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.jpa.repository.sample.UserRepository.RolesAndFirstname> < org.springframework.data.jpa.repository.sample.UserRepository.RolesAndFirstname > java.util.List<org.springframework.data.jpa.repository.sample.UserRepository.RolesAndFirstname> ( )  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> java.util.Set<org.springframework.data.jpa.repository.sample.Role> < Role > java.util.Set<org.springframework.data.jpa.repository.sample.Role> ( )  <METHOD_END>
