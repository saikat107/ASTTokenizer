<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.xml.transform.Transformer javax.xml.transform.Transformer = new org.springframework.util.xml.TransformerUtilsTests.StubTransformer ( ) ; TransformerUtils . enableIndenting ( javax.xml.transform.Transformer ) ; java.lang.String java.lang.String = javax.xml.transform.Transformer . java.lang.String ( javax.xml.transform.OutputKeys . java.lang.String ) ; assertNotNull ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; java.lang.String java.lang.String = javax.xml.transform.Transformer . java.lang.String ( STRING ) ; assertNotNull ( java.lang.String ) ; assertEquals ( java.lang.String . java.lang.String ( TransformerUtils . DEFAULT_INDENT_AMOUNT ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; javax.xml.transform.Transformer javax.xml.transform.Transformer = new org.springframework.util.xml.TransformerUtilsTests.StubTransformer ( ) ; TransformerUtils . enableIndenting ( javax.xml.transform.Transformer , java.lang.Integer . java.lang.Integer ( java.lang.String ) ) ; java.lang.String java.lang.String = javax.xml.transform.Transformer . java.lang.String ( javax.xml.transform.OutputKeys . java.lang.String ) ; assertNotNull ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; java.lang.String java.lang.String = javax.xml.transform.Transformer . java.lang.String ( STRING ) ; assertNotNull ( java.lang.String ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.xml.transform.Transformer javax.xml.transform.Transformer = new org.springframework.util.xml.TransformerUtilsTests.StubTransformer ( ) ; TransformerUtils . disableIndenting ( javax.xml.transform.Transformer ) ; java.lang.String java.lang.String = javax.xml.transform.Transformer . java.lang.String ( javax.xml.transform.OutputKeys . java.lang.String ) ; assertNotNull ( java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { TransformerUtils . enableIndenting ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { TransformerUtils . disableIndenting ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { TransformerUtils . enableIndenting ( new org.springframework.util.xml.TransformerUtilsTests.StubTransformer ( ) , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { TransformerUtils . enableIndenting ( new org.springframework.util.xml.TransformerUtilsTests.StubTransformer ( ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( javax.xml.transform.Source javax.xml.transform.Source , javax.xml.transform.Result javax.xml.transform.Result ) throws javax.xml.transform.TransformerException { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( javax.xml.transform.URIResolver javax.xml.transform.URIResolver ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.xml.transform.URIResolver javax.xml.transform.URIResolver ( ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Properties java.util.Properties ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Properties java.util.Properties ( ) { return this . java.util.Properties ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { this . java.util.Properties . java.lang.Object ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { return this . java.util.Properties . java.lang.String ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( javax.xml.transform.ErrorListener javax.xml.transform.ErrorListener ) throws java.lang.IllegalArgumentException { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.xml.transform.ErrorListener javax.xml.transform.ErrorListener ( ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
