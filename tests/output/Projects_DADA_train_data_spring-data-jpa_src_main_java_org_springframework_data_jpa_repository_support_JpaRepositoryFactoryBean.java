<METHOD_START> public void ( java.lang.Class<? extends T> < ? extends T > java.lang.Class<? extends T> ) { super( java.lang.Class<> ); }  <METHOD_END>
<METHOD_START> @ PersistenceContext public void void ( EntityManager org.springframework.data.jpa.repository.support.EntityManager ) { this . org.springframework.data.jpa.repository.support.EntityManager = org.springframework.data.jpa.repository.support.EntityManager ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MappingContext < ? , ? > org.springframework.data.jpa.repository.support.MappingContext<?,?> ) { super. setMappingContext ( org.springframework.data.jpa.repository.support.MappingContext<,> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.jpa.repository.support.RepositoryFactorySupport org.springframework.data.jpa.repository.support.RepositoryFactorySupport ( ) { return org.springframework.data.jpa.repository.support.RepositoryFactorySupport ( org.springframework.data.jpa.repository.support.EntityManager ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.jpa.repository.support.RepositoryFactorySupport org.springframework.data.jpa.repository.support.RepositoryFactorySupport ( EntityManager org.springframework.data.jpa.repository.support.EntityManager ) { return new JpaRepositoryFactory ( org.springframework.data.jpa.repository.support.EntityManager ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Assert . notNull ( org.springframework.data.jpa.repository.support.EntityManager , STRING ) ; super. afterPropertiesSet ( ) ; }  <METHOD_END>
