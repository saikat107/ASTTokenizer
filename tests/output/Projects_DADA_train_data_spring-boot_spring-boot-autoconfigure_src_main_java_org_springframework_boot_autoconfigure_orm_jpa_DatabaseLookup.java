<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> public static org.springframework.boot.autoconfigure.orm.jpa.Database org.springframework.boot.autoconfigure.orm.jpa.Database ( javax.sql.DataSource javax.sql.DataSource ) { if ( javax.sql.DataSource == null ) { return Database . DEFAULT ; } try { java.lang.String java.lang.String = ( java.lang.String ) JdbcUtils . extractDatabaseMetaData ( javax.sql.DataSource , STRING ) ; DatabaseDriver org.springframework.boot.autoconfigure.orm.jpa.DatabaseDriver = DatabaseDriver . fromJdbcUrl ( java.lang.String ) ; Database org.springframework.boot.autoconfigure.orm.jpa.Database = java.util.Map<org.springframework.boot.autoconfigure.orm.jpa.DatabaseDriver,org.springframework.boot.autoconfigure.orm.jpa.Database> . get ( org.springframework.boot.autoconfigure.orm.jpa.DatabaseDriver ) ; if ( org.springframework.boot.autoconfigure.orm.jpa.Database != null ) { return org.springframework.boot.autoconfigure.orm.jpa.Database ; } } catch ( MetaDataAccessException org.springframework.boot.autoconfigure.orm.jpa.MetaDataAccessException ) { org.springframework.boot.autoconfigure.orm.jpa.Log . warn ( STRING , org.springframework.boot.autoconfigure.orm.jpa.MetaDataAccessException ) ; } return Database . DEFAULT ; }  <METHOD_END>
