<METHOD_START> public void void ( ConfigurationMetadata org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata , java.io.OutputStream java.io.OutputStream )			throws java.io.IOException { try { JSONObject org.springframework.boot.configurationprocessor.metadata.JSONObject = new JSONOrderedObject ( ) ; JsonConverter org.springframework.boot.configurationprocessor.metadata.JsonConverter = new JsonConverter ( ) ; org.springframework.boot.configurationprocessor.metadata.JSONObject . put ( STRING , org.springframework.boot.configurationprocessor.metadata.JsonConverter . toJsonArray ( org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata , ItemType . GROUP ) ) ; org.springframework.boot.configurationprocessor.metadata.JSONObject . put ( STRING , org.springframework.boot.configurationprocessor.metadata.JsonConverter . toJsonArray ( org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata , ItemType . PROPERTY ) ) ; org.springframework.boot.configurationprocessor.metadata.JSONObject . put ( STRING , org.springframework.boot.configurationprocessor.metadata.JsonConverter . toJsonArray ( org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata . getHints ( ) ) ) ; java.io.OutputStream . void ( org.springframework.boot.configurationprocessor.metadata.JSONObject . toString ( NUMBER ) . getBytes ( java.nio.charset.Charset ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( java.lang.Exception instanceof java.io.IOException ) { throw ( java.io.IOException ) java.lang.Exception ; } if ( java.lang.Exception instanceof java.lang.RuntimeException ) { throw ( java.lang.RuntimeException ) java.lang.Exception ; } throw new java.lang.IllegalStateException ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata ( java.io.InputStream java.io.InputStream ) throws java.lang.Exception { ConfigurationMetadata org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata = new ConfigurationMetadata ( ) ; JSONObject org.springframework.boot.configurationprocessor.metadata.JSONObject = new JSONObject ( java.lang.String ( java.io.InputStream ) ) ; JSONArray org.springframework.boot.configurationprocessor.metadata.JSONArray = org.springframework.boot.configurationprocessor.metadata.JSONObject . optJSONArray ( STRING ) ; if ( org.springframework.boot.configurationprocessor.metadata.JSONArray != null ) { for ( int int = NUMBER ; int < org.springframework.boot.configurationprocessor.metadata.JSONArray . length ( ) ; int ++ ) { org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata . add ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata ( ( JSONObject ) org.springframework.boot.configurationprocessor.metadata.JSONArray . get ( int ) , ItemType . GROUP ) ) ; } } JSONArray org.springframework.boot.configurationprocessor.metadata.JSONArray = org.springframework.boot.configurationprocessor.metadata.JSONObject . optJSONArray ( STRING ) ; if ( org.springframework.boot.configurationprocessor.metadata.JSONArray != null ) { for ( int int = NUMBER ; int < org.springframework.boot.configurationprocessor.metadata.JSONArray . length ( ) ; int ++ ) { org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata . add ( org.springframework.boot.configurationprocessor.metadata.ItemMetadata ( ( JSONObject ) org.springframework.boot.configurationprocessor.metadata.JSONArray . get ( int ) , ItemType . PROPERTY ) ) ; } } JSONArray org.springframework.boot.configurationprocessor.metadata.JSONArray = org.springframework.boot.configurationprocessor.metadata.JSONObject . optJSONArray ( STRING ) ; if ( org.springframework.boot.configurationprocessor.metadata.JSONArray != null ) { for ( int int = NUMBER ; int < org.springframework.boot.configurationprocessor.metadata.JSONArray . length ( ) ; int ++ ) { org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata . add ( org.springframework.boot.configurationprocessor.metadata.ItemHint ( ( JSONObject ) org.springframework.boot.configurationprocessor.metadata.JSONArray . get ( int ) ) ) ; } } return org.springframework.boot.configurationprocessor.metadata.ConfigurationMetadata ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.configurationprocessor.metadata.ItemMetadata org.springframework.boot.configurationprocessor.metadata.ItemMetadata ( JSONObject org.springframework.boot.configurationprocessor.metadata.JSONObject , ItemType org.springframework.boot.configurationprocessor.metadata.ItemType )			throws java.lang.Exception { java.lang.String java.lang.String = org.springframework.boot.configurationprocessor.metadata.JSONObject . getString ( STRING ) ; java.lang.String java.lang.String = org.springframework.boot.configurationprocessor.metadata.JSONObject . optString ( STRING , null ) ; java.lang.String java.lang.String = org.springframework.boot.configurationprocessor.metadata.JSONObject . optString ( STRING , null ) ; java.lang.String java.lang.String = org.springframework.boot.configurationprocessor.metadata.JSONObject . optString ( STRING , null ) ; java.lang.String java.lang.String = org.springframework.boot.configurationprocessor.metadata.JSONObject . optString ( STRING , null ) ; java.lang.Object java.lang.Object = java.lang.Object ( org.springframework.boot.configurationprocessor.metadata.JSONObject . opt ( STRING ) ) ; ItemDeprecation org.springframework.boot.configurationprocessor.metadata.ItemDeprecation = org.springframework.boot.configurationprocessor.metadata.ItemDeprecation ( org.springframework.boot.configurationprocessor.metadata.JSONObject ) ; return new ItemMetadata ( org.springframework.boot.configurationprocessor.metadata.ItemType , java.lang.String , null , java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.Object , org.springframework.boot.configurationprocessor.metadata.ItemDeprecation ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.configurationprocessor.metadata.ItemDeprecation org.springframework.boot.configurationprocessor.metadata.ItemDeprecation ( JSONObject org.springframework.boot.configurationprocessor.metadata.JSONObject ) throws java.lang.Exception { if ( org.springframework.boot.configurationprocessor.metadata.JSONObject . has ( STRING ) ) { JSONObject org.springframework.boot.configurationprocessor.metadata.JSONObject = org.springframework.boot.configurationprocessor.metadata.JSONObject . getJSONObject ( STRING ) ; ItemDeprecation org.springframework.boot.configurationprocessor.metadata.ItemDeprecation = new ItemDeprecation ( ) ; org.springframework.boot.configurationprocessor.metadata.ItemDeprecation . setReason ( org.springframework.boot.configurationprocessor.metadata.JSONObject . optString ( STRING , null ) ) ; org.springframework.boot.configurationprocessor.metadata.ItemDeprecation . setReplacement ( org.springframework.boot.configurationprocessor.metadata.JSONObject . optString ( STRING , null ) ) ; return org.springframework.boot.configurationprocessor.metadata.ItemDeprecation ; } return ( org.springframework.boot.configurationprocessor.metadata.JSONObject . optBoolean ( STRING ) ? new ItemDeprecation ( ) : null ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.configurationprocessor.metadata.ItemHint org.springframework.boot.configurationprocessor.metadata.ItemHint ( JSONObject org.springframework.boot.configurationprocessor.metadata.JSONObject ) throws java.lang.Exception { java.lang.String java.lang.String = org.springframework.boot.configurationprocessor.metadata.JSONObject . getString ( STRING ) ; java.util.List<ItemHint.ValueHint> < ItemHint . ItemHint > java.util.List<ItemHint.ValueHint> = new java.util.ArrayList<ItemHint.ValueHint> <> ( ) ; if ( org.springframework.boot.configurationprocessor.metadata.JSONObject . has ( STRING ) ) { JSONArray org.springframework.boot.configurationprocessor.metadata.JSONArray = org.springframework.boot.configurationprocessor.metadata.JSONObject . getJSONArray ( STRING ) ; for ( int int = NUMBER ; int < org.springframework.boot.configurationprocessor.metadata.JSONArray . length ( ) ; int ++ ) { java.util.List<ItemHint.ValueHint> . add ( ItemHint.ValueHint ( ( JSONObject ) org.springframework.boot.configurationprocessor.metadata.JSONArray . get ( int ) ) ) ; } } java.util.List<ItemHint.ValueProvider> < ItemHint . ItemHint > java.util.List<ItemHint.ValueProvider> = new java.util.ArrayList<ItemHint.ValueProvider> <> ( ) ; if ( org.springframework.boot.configurationprocessor.metadata.JSONObject . has ( STRING ) ) { JSONArray org.springframework.boot.configurationprocessor.metadata.JSONArray = org.springframework.boot.configurationprocessor.metadata.JSONObject . getJSONArray ( STRING ) ; for ( int int = NUMBER ; int < org.springframework.boot.configurationprocessor.metadata.JSONArray . length ( ) ; int ++ ) { java.util.List<ItemHint.ValueProvider> . add ( ItemHint.ValueProvider ( ( JSONObject ) org.springframework.boot.configurationprocessor.metadata.JSONArray . get ( int ) ) ) ; } } return new ItemHint ( java.lang.String , java.util.List<ItemHint.ValueHint> , java.util.List<ItemHint.ValueProvider> ) ; }  <METHOD_END>
<METHOD_START> private ItemHint . ItemHint.ValueHint ItemHint.ValueHint ( JSONObject org.springframework.boot.configurationprocessor.metadata.JSONObject ) throws java.lang.Exception { java.lang.Object java.lang.Object = java.lang.Object ( org.springframework.boot.configurationprocessor.metadata.JSONObject . get ( STRING ) ) ; java.lang.String java.lang.String = org.springframework.boot.configurationprocessor.metadata.JSONObject . optString ( STRING , null ) ; return new ItemHint . ItemHint ( java.lang.Object , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private ItemHint . ItemHint.ValueProvider ItemHint.ValueProvider ( JSONObject org.springframework.boot.configurationprocessor.metadata.JSONObject ) throws java.lang.Exception { java.lang.String java.lang.String = org.springframework.boot.configurationprocessor.metadata.JSONObject . getString ( STRING ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; if ( org.springframework.boot.configurationprocessor.metadata.JSONObject . has ( STRING ) ) { JSONObject org.springframework.boot.configurationprocessor.metadata.JSONObject = org.springframework.boot.configurationprocessor.metadata.JSONObject . getJSONObject ( STRING ) ; for ( java.util.Iterator<?> < ? > java.util.Iterator<?> = org.springframework.boot.configurationprocessor.metadata.JSONObject . keys ( ) ; java.util.Iterator<> . boolean ( ) ;) { java.lang.String java.lang.String = ( java.lang.String ) java.util.Iterator<> . next ( ) ; java.lang.Object java.lang.Object = java.lang.Object ( org.springframework.boot.configurationprocessor.metadata.JSONObject . get ( java.lang.String ) ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; } } return new ItemHint . ItemHint ( java.lang.String , java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) throws java.lang.Exception { if ( java.lang.Object instanceof JSONArray ) { JSONArray org.springframework.boot.configurationprocessor.metadata.JSONArray = ( JSONArray ) java.lang.Object ; java.lang.Object [] java.lang.Object[] = new java.lang.Object [ org.springframework.boot.configurationprocessor.metadata.JSONArray . length ( ) ] ; for ( int int = NUMBER ; int < org.springframework.boot.configurationprocessor.metadata.JSONArray . length ( ) ; int ++ ) { java.lang.Object[] [ int ] = org.springframework.boot.configurationprocessor.metadata.JSONArray . get ( int ) ; } return java.lang.Object[] ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.io.InputStream java.io.InputStream ) throws java.io.IOException { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.io.InputStreamReader java.io.InputStreamReader = new java.io.InputStreamReader ( java.io.InputStream , java.nio.charset.Charset ) ; char [] char[] = new char [ int ] ; int int ; while ( ( int = java.io.InputStreamReader . int ( char[] ) ) != - NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( char[] , NUMBER , int ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
