<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( PersistenceExceptionTranslationAutoConfiguration .class ) ; java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationPostProcessor> < java.lang.String , PersistenceExceptionTranslationPostProcessor > java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationPostProcessor> = this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext . getBeansOfType ( PersistenceExceptionTranslationPostProcessor .class ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationPostProcessor> ) . hasSize ( NUMBER ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationPostProcessor> . values ( ) . iterator ( ) . next ( ) . isProxyTargetClass ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext . register ( PersistenceExceptionTranslationAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext . refresh ( ) ; java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationPostProcessor> < java.lang.String , PersistenceExceptionTranslationPostProcessor > java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationPostProcessor> = this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext . getBeansOfType ( PersistenceExceptionTranslationPostProcessor .class ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationPostProcessor> . entrySet ( ) ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( EmbeddedDataSourceConfiguration .class , HibernateJpaAutoConfiguration .class , org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfigurationTests.TestConfiguration .class ) ; this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext . getBean ( org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfigurationTests.TestRepository .class ) . doSomething ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = InvalidDataAccessApiUsageException .class ) public void void ( ) { this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( EmbeddedDataSourceConfiguration .class , HibernateJpaAutoConfiguration .class , org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfigurationTests.TestConfiguration .class , PersistenceExceptionTranslationAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.dao.AnnotationConfigApplicationContext . getBean ( org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfigurationTests.TestRepository .class ) . doSomething ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfigurationTests.TestRepository org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfigurationTests.TestRepository ( EntityManagerFactory org.springframework.boot.autoconfigure.dao.EntityManagerFactory ) { return new org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfigurationTests.TestRepository ( org.springframework.boot.autoconfigure.dao.EntityManagerFactory . createEntityManager ( ) ) ; }  <METHOD_END>
<METHOD_START> void ( EntityManager org.springframework.boot.autoconfigure.dao.EntityManager ) { this . org.springframework.boot.autoconfigure.dao.EntityManager = org.springframework.boot.autoconfigure.dao.EntityManager ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . org.springframework.boot.autoconfigure.dao.EntityManager . persist ( null ) ; }  <METHOD_END>
