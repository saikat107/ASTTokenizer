<METHOD_START> @ java.lang.Override public void void ( StateMachineConfigurationConfigurer < demo.scope.StateMachineConfig.States , demo.scope.StateMachineConfig.Events > demo.scope.StateMachineConfigurationConfigurer<demo.scope.StateMachineConfig.States,demo.scope.StateMachineConfig.Events> )				throws java.lang.Exception { demo.scope.StateMachineConfigurationConfigurer<demo.scope.StateMachineConfig.States,demo.scope.StateMachineConfig.Events> . withConfiguration ( ) . autoStartup ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < demo.scope.StateMachineConfig.States , demo.scope.StateMachineConfig.Events > demo.scope.StateMachineStateConfigurer<demo.scope.StateMachineConfig.States,demo.scope.StateMachineConfig.Events> )				throws java.lang.Exception { demo.scope.StateMachineStateConfigurer<demo.scope.StateMachineConfig.States,demo.scope.StateMachineConfig.Events> . withStates ( ) . initial ( demo.scope.StateMachineConfig.States . demo.scope.StateMachineConfig.States ) . states ( java.util.EnumSet . java.util.EnumSet<demo.scope.StateMachineConfig.States> ( demo.scope.StateMachineConfig.States .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < demo.scope.StateMachineConfig.States , demo.scope.StateMachineConfig.Events > demo.scope.StateMachineTransitionConfigurer<demo.scope.StateMachineConfig.States,demo.scope.StateMachineConfig.Events> )				throws java.lang.Exception { demo.scope.StateMachineTransitionConfigurer<demo.scope.StateMachineConfig.States,demo.scope.StateMachineConfig.Events> . withExternal ( ) . source ( demo.scope.StateMachineConfig.States . demo.scope.StateMachineConfig.States ) . target ( demo.scope.StateMachineConfig.States . demo.scope.StateMachineConfig.States ) . event ( demo.scope.StateMachineConfig.Events . demo.scope.StateMachineConfig.Events ) . and ( ) . withExternal ( ) . source ( demo.scope.StateMachineConfig.States . demo.scope.StateMachineConfig.States ) . target ( demo.scope.StateMachineConfig.States . demo.scope.StateMachineConfig.States ) . event ( demo.scope.StateMachineConfig.Events . demo.scope.StateMachineConfig.Events ) . and ( ) . withExternal ( ) . source ( demo.scope.StateMachineConfig.States . demo.scope.StateMachineConfig.States ) . target ( demo.scope.StateMachineConfig.States . demo.scope.StateMachineConfig.States ) . event ( demo.scope.StateMachineConfig.Events . demo.scope.StateMachineConfig.Events ) ; }  <METHOD_END>
<METHOD_START> @ Bean public java.lang.String java.lang.String ( ) java.io.IOException { ClassPathResource demo.scope.ClassPathResource = new ClassPathResource ( STRING ) ; java.io.InputStream java.io.InputStream = demo.scope.ClassPathResource . getInputStream ( ) ; java.util.Scanner java.util.Scanner = new java.util.Scanner ( java.io.InputStream ) ; java.lang.String java.lang.String = java.util.Scanner . java.util.Scanner ( STRING ) . java.lang.String ( ) ; java.util.Scanner . void ( ) ; return java.lang.String ; }  <METHOD_END>
