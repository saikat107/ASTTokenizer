<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.web.method.support.HandlerMethodArgumentResolver> < HandlerMethodArgumentResolver > java.util.List<org.springframework.web.method.support.HandlerMethodArgumentResolver> = new java.util.ArrayList<org.springframework.web.method.support.HandlerMethodArgumentResolver> <> ( ) ; java.util.List<org.springframework.web.method.support.HandlerMethodArgumentResolver> . add ( new RequestParamMethodArgumentResolver ( false ) ) ; java.util.List<org.springframework.web.method.support.HandlerMethodArgumentResolver> . add ( new RequestHeaderMethodArgumentResolver ( null ) ) ; java.util.List<org.springframework.web.method.support.HandlerMethodArgumentResolver> . add ( new RequestParamMethodArgumentResolver ( true ) ) ; java.lang.reflect.Method java.lang.reflect.Method = ClassUtils . getMethod ( this . java.lang.Class<? extends org.springframework.web.method.support.CompositeUriComponentsContributorTests> ( ) , STRING , java.lang.String .class , java.lang.String .class , java.lang.String .class ) ; CompositeUriComponentsContributor org.springframework.web.method.support.CompositeUriComponentsContributor = new CompositeUriComponentsContributor ( java.util.List<org.springframework.web.method.support.HandlerMethodArgumentResolver> ) ; assertTrue ( org.springframework.web.method.support.CompositeUriComponentsContributor . supportsParameter ( new MethodParameter ( java.lang.reflect.Method , NUMBER ) ) ) ; assertTrue ( org.springframework.web.method.support.CompositeUriComponentsContributor . supportsParameter ( new MethodParameter ( java.lang.reflect.Method , NUMBER ) ) ) ; assertFalse ( org.springframework.web.method.support.CompositeUriComponentsContributor . supportsParameter ( new MethodParameter ( java.lang.reflect.Method , NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ RequestParam java.lang.String java.lang.String , java.lang.String java.lang.String , @ RequestHeader java.lang.String java.lang.String ) {	}  <METHOD_END>
