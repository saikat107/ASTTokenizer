<METHOD_START> public void void ( ResourceAdapter org.springframework.jms.config.ResourceAdapter ) { this . org.springframework.jms.config.ResourceAdapter = org.springframework.jms.config.ResourceAdapter ; }  <METHOD_END>
<METHOD_START> public void void ( JmsActivationSpecFactory org.springframework.jms.config.JmsActivationSpecFactory ) { this . org.springframework.jms.config.JmsActivationSpecFactory = org.springframework.jms.config.JmsActivationSpecFactory ; }  <METHOD_END>
<METHOD_START> public void void ( DestinationResolver org.springframework.jms.config.DestinationResolver ) { this . org.springframework.jms.config.DestinationResolver = org.springframework.jms.config.DestinationResolver ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . java.lang.Integer = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jms.config.JmsMessageEndpointManager org.springframework.jms.config.JmsMessageEndpointManager ( JmsListenerEndpoint org.springframework.jms.config.JmsListenerEndpoint ) { if ( this . org.springframework.jms.config.DestinationResolver != null && this . org.springframework.jms.config.JmsActivationSpecFactory != null ) { throw new java.lang.IllegalStateException ( STRING + STRING + STRING ) ; } JmsMessageEndpointManager org.springframework.jms.config.JmsMessageEndpointManager = org.springframework.jms.config.JmsMessageEndpointManager ( ) ; if ( this . org.springframework.jms.config.ResourceAdapter != null ) { org.springframework.jms.config.JmsMessageEndpointManager . setResourceAdapter ( this . org.springframework.jms.config.ResourceAdapter ) ; } if ( this . org.springframework.jms.config.JmsActivationSpecFactory != null ) { org.springframework.jms.config.JmsMessageEndpointManager . setActivationSpecFactory ( this . org.springframework.jms.config.JmsActivationSpecFactory ) ; } if ( this . org.springframework.jms.config.DestinationResolver != null ) { org.springframework.jms.config.JmsMessageEndpointManager . setDestinationResolver ( this . org.springframework.jms.config.DestinationResolver ) ; } if ( this . java.lang.Object != null ) { org.springframework.jms.config.JmsMessageEndpointManager . setTransactionManager ( this . java.lang.Object ) ; } if ( this . java.lang.Integer != null ) { org.springframework.jms.config.JmsMessageEndpointManager . setPhase ( this . java.lang.Integer ) ; } org.springframework.jms.config.JmsMessageEndpointManager . setActivationSpecConfig ( this ) ; org.springframework.jms.config.JmsListenerEndpoint . setupListenerContainer ( org.springframework.jms.config.JmsMessageEndpointManager ) ; return org.springframework.jms.config.JmsMessageEndpointManager ; }  <METHOD_END>
<METHOD_START> protected org.springframework.jms.config.JmsMessageEndpointManager org.springframework.jms.config.JmsMessageEndpointManager ( ) { return new JmsMessageEndpointManager ( ) ; }  <METHOD_END>
