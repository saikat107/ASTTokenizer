<METHOD_START> public void ( ) { this( STRING ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String ... java.lang.String[] ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { this . java.util.Collection<org.springframework.integration.test.support.Logger> . add ( LogManager . getLogger ( java.lang.String ) ) ; } }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) { for ( Logger org.springframework.integration.test.support.Logger : this . java.util.Collection<org.springframework.integration.test.support.Logger> ) { this . java.util.Collection<org.springframework.integration.test.support.Level> . add ( org.springframework.integration.test.support.Logger . getEffectiveLevel ( ) ) ; org.springframework.integration.test.support.Logger . setLevel ( Level . TRACE ) ; } this . org.springframework.integration.test.support.Log . warn ( STRING + this . org.springframework.integration.test.support.TestName . getMethodName ( ) + STRING ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { org.springframework.integration.test.support.Log . warn ( STRING + this . org.springframework.integration.test.support.TestName . getMethodName ( ) + STRING ) ; java.util.Iterator<org.springframework.integration.test.support.Level> < Level > java.util.Iterator<org.springframework.integration.test.support.Level> = this . java.util.Collection<org.springframework.integration.test.support.Level> . iterator ( ) ; for ( Logger org.springframework.integration.test.support.Logger : this . java.util.Collection<org.springframework.integration.test.support.Logger> ) { org.springframework.integration.test.support.Logger . setLevel ( java.util.Iterator<org.springframework.integration.test.support.Level> . next ( ) ) ; } }  <METHOD_END>
