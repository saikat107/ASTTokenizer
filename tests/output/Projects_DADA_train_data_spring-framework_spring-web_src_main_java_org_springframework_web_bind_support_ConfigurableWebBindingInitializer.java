<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public final void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public final void void ( MessageCodesResolver org.springframework.web.bind.support.MessageCodesResolver ) { this . org.springframework.web.bind.support.MessageCodesResolver = org.springframework.web.bind.support.MessageCodesResolver ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.bind.support.MessageCodesResolver org.springframework.web.bind.support.MessageCodesResolver ( ) { return this . org.springframework.web.bind.support.MessageCodesResolver ; }  <METHOD_END>
<METHOD_START> public final void void ( BindingErrorProcessor org.springframework.web.bind.support.BindingErrorProcessor ) { this . org.springframework.web.bind.support.BindingErrorProcessor = org.springframework.web.bind.support.BindingErrorProcessor ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.bind.support.BindingErrorProcessor org.springframework.web.bind.support.BindingErrorProcessor ( ) { return this . org.springframework.web.bind.support.BindingErrorProcessor ; }  <METHOD_END>
<METHOD_START> public final void void ( Validator org.springframework.web.bind.support.Validator ) { this . org.springframework.web.bind.support.Validator = org.springframework.web.bind.support.Validator ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.bind.support.Validator org.springframework.web.bind.support.Validator ( ) { return this . org.springframework.web.bind.support.Validator ; }  <METHOD_END>
<METHOD_START> public final void void ( ConversionService org.springframework.web.bind.support.ConversionService ) { this . org.springframework.web.bind.support.ConversionService = org.springframework.web.bind.support.ConversionService ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.bind.support.ConversionService org.springframework.web.bind.support.ConversionService ( ) { return this . org.springframework.web.bind.support.ConversionService ; }  <METHOD_END>
<METHOD_START> public final void void ( PropertyEditorRegistrar org.springframework.web.bind.support.PropertyEditorRegistrar ) { this . org.springframework.web.bind.support.PropertyEditorRegistrar[] = new PropertyEditorRegistrar [] { org.springframework.web.bind.support.PropertyEditorRegistrar } ; }  <METHOD_END>
<METHOD_START> public final void void ( PropertyEditorRegistrar [] org.springframework.web.bind.support.PropertyEditorRegistrar[] ) { this . org.springframework.web.bind.support.PropertyEditorRegistrar[] = org.springframework.web.bind.support.PropertyEditorRegistrar[] ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.bind.support.PropertyEditorRegistrar [] org.springframework.web.bind.support.PropertyEditorRegistrar[] ( ) { return this . org.springframework.web.bind.support.PropertyEditorRegistrar[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( WebDataBinder org.springframework.web.bind.support.WebDataBinder ) { org.springframework.web.bind.support.WebDataBinder . setAutoGrowNestedPaths ( this . boolean ) ; if ( this . boolean ) { org.springframework.web.bind.support.WebDataBinder . initDirectFieldAccess ( ) ; } if ( this . org.springframework.web.bind.support.MessageCodesResolver != null ) { org.springframework.web.bind.support.WebDataBinder . setMessageCodesResolver ( this . org.springframework.web.bind.support.MessageCodesResolver ) ; } if ( this . org.springframework.web.bind.support.BindingErrorProcessor != null ) { org.springframework.web.bind.support.WebDataBinder . setBindingErrorProcessor ( this . org.springframework.web.bind.support.BindingErrorProcessor ) ; } if ( this . org.springframework.web.bind.support.Validator != null && org.springframework.web.bind.support.WebDataBinder . getTarget ( ) != null && this . org.springframework.web.bind.support.Validator . supports ( org.springframework.web.bind.support.WebDataBinder . getTarget ( ) . getClass ( ) ) ) { org.springframework.web.bind.support.WebDataBinder . setValidator ( this . org.springframework.web.bind.support.Validator ) ; } if ( this . org.springframework.web.bind.support.ConversionService != null ) { org.springframework.web.bind.support.WebDataBinder . setConversionService ( this . org.springframework.web.bind.support.ConversionService ) ; } if ( this . org.springframework.web.bind.support.PropertyEditorRegistrar[] != null ) { for ( PropertyEditorRegistrar org.springframework.web.bind.support.PropertyEditorRegistrar : this . org.springframework.web.bind.support.PropertyEditorRegistrar[] ) { org.springframework.web.bind.support.PropertyEditorRegistrar . registerCustomEditors ( org.springframework.web.bind.support.WebDataBinder ) ; } } }  <METHOD_END>
