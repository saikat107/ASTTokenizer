<METHOD_START> public void ( java.sql.ResultSetMetaData java.sql.ResultSetMetaData ) { this . java.sql.ResultSetMetaData = java.sql.ResultSetMetaData ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . java.lang.String ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . java.lang.String ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . int ( ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { if ( this . java.lang.String[] == null ) { this . java.lang.String[] = new java.lang.String [ int ( ) ] ; for ( int int = NUMBER ; int < int ( ) ; int ++ ) { this . java.lang.String[] [ int ] = java.lang.String ( int + NUMBER ) ; } } return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . int ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . java.lang.String ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . java.lang.String ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . int ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . java.lang.String ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . int ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . int ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . java.lang.String ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . java.lang.String ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . boolean ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . boolean ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int ) throws org.springframework.jdbc.support.rowset.InvalidResultSetAccessException { try { return this . java.sql.ResultSetMetaData . boolean ( int ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new InvalidResultSetAccessException ( java.sql.SQLException ) ; } }  <METHOD_END>
