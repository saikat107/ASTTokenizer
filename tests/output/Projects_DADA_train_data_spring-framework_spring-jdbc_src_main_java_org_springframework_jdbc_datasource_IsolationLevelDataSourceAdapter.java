<METHOD_START> public final void void ( java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { if ( java.lang.String == null || ! java.lang.String . boolean ( DefaultTransactionDefinition . PREFIX_ISOLATION ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } void ( org.springframework.jdbc.datasource.Constants . asNumber ( java.lang.String ) . intValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { if ( ! org.springframework.jdbc.datasource.Constants . getValues ( DefaultTransactionDefinition . PREFIX_ISOLATION ) . contains ( int ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . java.lang.Integer = ( int != TransactionDefinition . ISOLATION_DEFAULT ? int : null ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.sql.Connection java.sql.Connection ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.sql.SQLException { java.sql.Connection java.sql.Connection = super. doGetConnection ( java.lang.String , java.lang.String ) ; java.lang.Boolean java.lang.Boolean = java.lang.Boolean ( ) ; if ( java.lang.Boolean != null ) { java.sql.Connection . void ( java.lang.Boolean ) ; } java.lang.Integer java.lang.Integer = java.lang.Integer ( ) ; if ( java.lang.Integer != null ) { java.sql.Connection . void ( java.lang.Integer ) ; } return java.sql.Connection ; }  <METHOD_END>
<METHOD_START> protected java.lang.Integer java.lang.Integer ( ) { java.lang.Integer java.lang.Integer = TransactionSynchronizationManager . getCurrentTransactionIsolationLevel ( ) ; if ( java.lang.Integer == null ) { java.lang.Integer = java.lang.Integer ( ) ; } return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> protected java.lang.Boolean java.lang.Boolean ( ) { boolean boolean = TransactionSynchronizationManager . isCurrentTransactionReadOnly ( ) ; return ( boolean ? java.lang.Boolean . java.lang.Boolean : null ) ; }  <METHOD_END>
