<METHOD_START> protected java.lang.Integer java.lang.Integer ( java.lang.Object java.lang.Object ) { java.lang.Integer java.lang.Integer = super. findOrder ( java.lang.Object ) ; if ( java.lang.Integer != null ) { return java.lang.Integer ; } if ( java.lang.Object instanceof java.lang.Class ) { return OrderUtils . getOrder ( ( java.lang.Class<?> < ? > ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.reflect.Method ) { Order org.springframework.core.annotation.Order = AnnotationUtils . findAnnotation ( ( java.lang.reflect.Method ) java.lang.Object , Order .class ) ; if ( org.springframework.core.annotation.Order != null ) { return org.springframework.core.annotation.Order . value ( ) ; } } else if ( java.lang.Object instanceof java.lang.reflect.AnnotatedElement ) { Order org.springframework.core.annotation.Order = AnnotationUtils . getAnnotation ( ( java.lang.reflect.AnnotatedElement ) java.lang.Object , Order .class ) ; if ( org.springframework.core.annotation.Order != null ) { return org.springframework.core.annotation.Order . value ( ) ; } } else if ( java.lang.Object != null ) { java.lang.Integer = OrderUtils . getOrder ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; if ( java.lang.Integer == null && java.lang.Object instanceof DecoratingProxy ) { java.lang.Integer = OrderUtils . getOrder ( ( ( DecoratingProxy ) java.lang.Object ) . getDecoratedClass ( ) ) ; } } return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( java.lang.Object java.lang.Object ) { java.lang.Integer java.lang.Integer = null ; if ( java.lang.Object instanceof java.lang.Class ) { java.lang.Integer = OrderUtils . getPriority ( ( java.lang.Class<?> < ? > ) java.lang.Object ) ; } else if ( java.lang.Object != null ) { java.lang.Integer = OrderUtils . getPriority ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; if ( java.lang.Integer == null && java.lang.Object instanceof DecoratingProxy ) { java.lang.Integer = OrderUtils . getOrder ( ( ( DecoratingProxy ) java.lang.Object ) . getDecoratedClass ( ) ) ; } } return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public static void void ( java.util.List<?> < ? > java.util.List<?> ) { if ( java.util.List<> . int ( ) > NUMBER ) { java.util.Collections . void ( java.util.List<> , org.springframework.core.annotation.AnnotationAwareOrderComparator ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.Object [] java.lang.Object[] ) { if ( java.lang.Object[] . int > NUMBER ) { java.util.Arrays . void ( java.lang.Object[] , org.springframework.core.annotation.AnnotationAwareOrderComparator ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof java.lang.Object [] ) { void ( ( java.lang.Object [] ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.util.List ) { void ( ( java.util.List<?> < ? > ) java.lang.Object ) ; } }  <METHOD_END>
