<METHOD_START> @ Test void void ( ApplicationContext org.springframework.test.context.junit.jupiter.ApplicationContext ) { assertNotNull ( org.springframework.test.context.junit.jupiter.ApplicationContext , STRING ) ; assertEquals ( this . org.springframework.test.context.junit.jupiter.Person , org.springframework.test.context.junit.jupiter.ApplicationContext . getBean ( STRING , Person .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( GenericApplicationContext org.springframework.test.context.junit.jupiter.GenericApplicationContext ) { assertNotNull ( org.springframework.test.context.junit.jupiter.GenericApplicationContext , STRING ) ; assertEquals ( this . org.springframework.test.context.junit.jupiter.Person , org.springframework.test.context.junit.jupiter.GenericApplicationContext . getBean ( STRING , Person .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( ) { assertNotNull ( this . org.springframework.test.context.junit.jupiter.Person , STRING ) ; assertEquals ( STRING , this . org.springframework.test.context.junit.jupiter.Person . getName ( ) , STRING ) ; assertEquals ( NUMBER , this . java.util.List<org.springframework.test.context.junit.jupiter.Person> . size ( ) , STRING ) ; assertNotNull ( this . org.springframework.test.context.junit.jupiter.Dog , STRING ) ; assertEquals ( STRING , this . org.springframework.test.context.junit.jupiter.Dog . getName ( ) , STRING ) ; assertNotNull ( this . org.springframework.test.context.junit.jupiter.Cat , STRING ) ; assertEquals ( STRING , this . org.springframework.test.context.junit.jupiter.Cat . getName ( ) , STRING ) ; assertEquals ( NUMBER , this . java.util.List<org.springframework.test.context.junit.jupiter.Cat> . size ( ) , STRING ) ; assertNotNull ( this . java.lang.Integer , STRING ) ; assertEquals ( new java.lang.Integer ( NUMBER ) , this . java.lang.Integer , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Autowired Dog org.springframework.test.context.junit.jupiter.Dog ) { assertNotNull ( org.springframework.test.context.junit.jupiter.Dog , STRING ) ; assertEquals ( STRING , org.springframework.test.context.junit.jupiter.Dog . getName ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Autowired Cat org.springframework.test.context.junit.jupiter.Cat ) { assertNotNull ( org.springframework.test.context.junit.jupiter.Cat , STRING ) ; assertEquals ( STRING , org.springframework.test.context.junit.jupiter.Cat . getName ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Qualifier ( STRING ) Person org.springframework.test.context.junit.jupiter.Person ) { assertNotNull ( org.springframework.test.context.junit.jupiter.Person , STRING ) ; assertEquals ( STRING , org.springframework.test.context.junit.jupiter.Person . getName ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Autowired Person org.springframework.test.context.junit.jupiter.Person ) { assertNotNull ( org.springframework.test.context.junit.jupiter.Person , STRING ) ; assertEquals ( STRING , org.springframework.test.context.junit.jupiter.Person . getName ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Autowired java.util.Optional<org.springframework.test.context.junit.jupiter.Dog> < Dog > java.util.Optional<org.springframework.test.context.junit.jupiter.Dog> ) { assertNotNull ( java.util.Optional<org.springframework.test.context.junit.jupiter.Dog> , STRING ) ; assertTrue ( java.util.Optional<org.springframework.test.context.junit.jupiter.Dog> . isPresent ( ) , STRING ) ; assertEquals ( STRING , java.util.Optional<org.springframework.test.context.junit.jupiter.Dog> . get ( ) . getName ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Autowired java.util.Optional<java.lang.Number> < java.lang.Number > java.util.Optional<java.lang.Number> ) { assertNotNull ( java.util.Optional<java.lang.Number> , STRING ) ; assertFalse ( java.util.Optional<java.lang.Number> . boolean ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Autowired ( required = false ) java.lang.Number java.lang.Number ) { assertNull ( java.lang.Number , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Autowired java.util.List<org.springframework.test.context.junit.jupiter.Person> < Person > java.util.List<org.springframework.test.context.junit.jupiter.Person> ) { assertNotNull ( java.util.List<org.springframework.test.context.junit.jupiter.Person> , STRING ) ; assertEquals ( NUMBER , java.util.List<org.springframework.test.context.junit.jupiter.Person> . size ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Value ( STRING ) int int ) { assertEquals ( NUMBER , int ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Value ( STRING ) java.lang.Integer java.lang.Integer ) { assertNotNull ( java.lang.Integer , STRING ) ; assertEquals ( new java.lang.Integer ( NUMBER ) , java.lang.Integer , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Value ( STRING ) java.lang.Boolean java.lang.Boolean ) { assertNotNull ( java.lang.Boolean , STRING ) ; assertEquals ( false , java.lang.Boolean , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Value ( STRING ) java.lang.String java.lang.String ) { assertNotNull ( java.lang.String , STRING ) ; assertEquals ( STRING , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Value ( STRING ) java.lang.String java.lang.String ) { assertNotNull ( java.lang.String , STRING ) ; assertEquals ( STRING , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test void void ( @ Autowired Cat org.springframework.test.context.junit.jupiter.Cat , TestInfo org.springframework.test.context.junit.jupiter.TestInfo , ApplicationContext org.springframework.test.context.junit.jupiter.ApplicationContext , TestReporter org.springframework.test.context.junit.jupiter.TestReporter ) { assertNotNull ( org.springframework.test.context.junit.jupiter.TestInfo , STRING ) ; assertNotNull ( org.springframework.test.context.junit.jupiter.TestReporter , STRING ) ; assertNotNull ( org.springframework.test.context.junit.jupiter.ApplicationContext , STRING ) ; assertNotNull ( org.springframework.test.context.junit.jupiter.Cat , STRING ) ; }  <METHOD_END>
