<METHOD_START> public void ( ApplicationContext org.springframework.data.rest.webmvc.config.ApplicationContext , @ Qualifier ( STRING ) ObjectFactory < ConversionService > org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.ConversionService> ) { super( org.springframework.data.rest.webmvc.config.ApplicationContext , org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.ConversionService> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { this . org.springframework.data.rest.webmvc.config.RepositoryRestConfigurerDelegate = new RepositoryRestConfigurerDelegate ( java.util.List<org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.Repositories org.springframework.data.rest.webmvc.config.Repositories ( ) { return new Repositories ( org.springframework.data.rest.webmvc.config.ApplicationContext ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.RepositoryRelProvider org.springframework.data.rest.webmvc.config.RepositoryRelProvider ( ObjectFactory < ResourceMappings > org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.ResourceMappings> ) { return new RepositoryRelProvider ( org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.ResourceMappings> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.PersistentEntities org.springframework.data.rest.webmvc.config.PersistentEntities ( ) { java.util.List<org.springframework.data.rest.webmvc.config.MappingContext<?,?>> < MappingContext < ? , ? > > java.util.List<org.springframework.data.rest.webmvc.config.MappingContext<?,?>> = new java.util.ArrayList<org.springframework.data.rest.webmvc.config.MappingContext<?,?>> < MappingContext < ? , ? > > ( ) ; for ( MappingContext < ? , ? > org.springframework.data.rest.webmvc.config.MappingContext<?,?> : BeanFactoryUtils . beansOfTypeIncludingAncestors ( org.springframework.data.rest.webmvc.config.ApplicationContext , MappingContext .class ) . values ( ) ) { java.util.List<org.springframework.data.rest.webmvc.config.MappingContext<?,?>> . add ( org.springframework.data.rest.webmvc.config.MappingContext<,> ) ; } return new PersistentEntities ( java.util.List<org.springframework.data.rest.webmvc.config.MappingContext<?,?>> ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Qualifier public org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ( ) { DefaultFormattingConversionService org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService = new DefaultFormattingConversionService ( ) ; org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService . addConverter ( org.springframework.data.rest.webmvc.config.UriToEntityConverter ( org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ) ) ; addFormatters ( org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ) ; org.springframework.data.rest.webmvc.config.RepositoryRestConfigurerDelegate . configureConversionService ( org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ) ; return org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.ValidatingRepositoryEventListener org.springframework.data.rest.webmvc.config.ValidatingRepositoryEventListener ( ObjectFactory < PersistentEntities > org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.PersistentEntities> ) { ValidatingRepositoryEventListener org.springframework.data.rest.webmvc.config.ValidatingRepositoryEventListener = new ValidatingRepositoryEventListener ( org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.PersistentEntities> ) ; org.springframework.data.rest.webmvc.config.RepositoryRestConfigurerDelegate . configureValidatingRepositoryEventListener ( org.springframework.data.rest.webmvc.config.ValidatingRepositoryEventListener ) ; return org.springframework.data.rest.webmvc.config.ValidatingRepositoryEventListener ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.JpaHelper org.springframework.data.rest.webmvc.config.JpaHelper ( ) { if ( boolean ) { return new JpaHelper ( ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) { ProjectionDefinitionConfiguration org.springframework.data.rest.webmvc.config.ProjectionDefinitionConfiguration = new ProjectionDefinitionConfiguration ( ) ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.util.Set<java.lang.Class<?>> ( org.springframework.data.rest.webmvc.config.Repositories ( ) ) ) { org.springframework.data.rest.webmvc.config.ProjectionDefinitionConfiguration . addProjection ( java.lang.Class<> ) ; } RepositoryRestConfiguration org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration = new RepositoryRestConfiguration ( org.springframework.data.rest.webmvc.config.ProjectionDefinitionConfiguration , org.springframework.data.rest.webmvc.config.MetadataConfiguration ( ) , org.springframework.data.rest.webmvc.config.EnumTranslator ( ) ) ; org.springframework.data.rest.webmvc.config.RepositoryRestConfigurerDelegate . configureRepositoryRestConfiguration ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ) ; return org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ; }  <METHOD_END>
<METHOD_START> @ Bean public static org.springframework.data.rest.webmvc.config.ProjectionDefinitionRegistar org.springframework.data.rest.webmvc.config.ProjectionDefinitionRegistar ( ObjectFactory < RepositoryRestConfiguration > org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration> ) { return new ProjectionDefinitionRegistar ( org.springframework.data.rest.webmvc.config.ObjectFactory<org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.MetadataConfiguration org.springframework.data.rest.webmvc.config.MetadataConfiguration ( ) { return new MetadataConfiguration ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.BaseUri org.springframework.data.rest.webmvc.config.BaseUri ( ) { return new BaseUri ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getBaseUri ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public static org.springframework.data.rest.webmvc.config.AnnotatedEventHandlerInvoker org.springframework.data.rest.webmvc.config.AnnotatedEventHandlerInvoker ( ) { return new AnnotatedEventHandlerInvoker ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.DomainObjectMerger org.springframework.data.rest.webmvc.config.DomainObjectMerger ( ) java.lang.Exception { return new DomainObjectMerger ( org.springframework.data.rest.webmvc.config.Repositories ( ) , org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.ServerHttpRequestMethodArgumentResolver org.springframework.data.rest.webmvc.config.ServerHttpRequestMethodArgumentResolver ( ) { return new ServerHttpRequestMethodArgumentResolver ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.RootResourceInformationHandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.RootResourceInformationHandlerMethodArgumentResolver ( ) { if ( QuerydslUtils . QUERY_DSL_PRESENT ) { QuerydslBindingsFactory org.springframework.data.rest.webmvc.config.QuerydslBindingsFactory = org.springframework.data.rest.webmvc.config.ApplicationContext . getBean ( QuerydslBindingsFactory .class ) ; QuerydslPredicateBuilder org.springframework.data.rest.webmvc.config.QuerydslPredicateBuilder = new QuerydslPredicateBuilder ( org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ( ) , org.springframework.data.rest.webmvc.config.QuerydslBindingsFactory . getEntityPathResolver ( ) ) ; return new QuerydslAwareRootResourceInformationHandlerMethodArgumentResolver ( org.springframework.data.rest.webmvc.config.Repositories ( ) , org.springframework.data.rest.webmvc.config.RepositoryInvokerFactory ( org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ( ) ) , org.springframework.data.rest.webmvc.config.ResourceMetadataHandlerMethodArgumentResolver ( ) , org.springframework.data.rest.webmvc.config.QuerydslPredicateBuilder , org.springframework.data.rest.webmvc.config.QuerydslBindingsFactory ) ; } return new RootResourceInformationHandlerMethodArgumentResolver ( org.springframework.data.rest.webmvc.config.Repositories ( ) , org.springframework.data.rest.webmvc.config.RepositoryInvokerFactory ( org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ( ) ) , org.springframework.data.rest.webmvc.config.ResourceMetadataHandlerMethodArgumentResolver ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.ResourceMetadataHandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.ResourceMetadataHandlerMethodArgumentResolver ( ) { return new ResourceMetadataHandlerMethodArgumentResolver ( org.springframework.data.rest.webmvc.config.Repositories ( ) , org.springframework.data.rest.webmvc.config.RepositoryResourceMappings ( ) , org.springframework.data.rest.webmvc.config.BaseUri ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.BackendIdHandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.BackendIdHandlerMethodArgumentResolver ( ) { return new BackendIdHandlerMethodArgumentResolver ( Java8PluginRegistry . of ( org.springframework.data.rest.webmvc.config.PluginRegistry<org.springframework.data.rest.webmvc.config.BackendIdConverter,java.lang.Class<?>> ( ) ) , org.springframework.data.rest.webmvc.config.ResourceMetadataHandlerMethodArgumentResolver ( ) , org.springframework.data.rest.webmvc.config.BaseUri ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.ETagArgumentResolver org.springframework.data.rest.webmvc.config.ETagArgumentResolver ( ) { return new ETagArgumentResolver ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.RepositoryEntityLinks org.springframework.data.rest.webmvc.config.RepositoryEntityLinks ( ) { PagingAndSortingTemplateVariables org.springframework.data.rest.webmvc.config.PagingAndSortingTemplateVariables = new ArgumentResolverPagingAndSortingTemplateVariables ( org.springframework.data.rest.webmvc.config.HateoasPageableHandlerMethodArgumentResolver ( ) , org.springframework.data.rest.webmvc.config.HateoasSortHandlerMethodArgumentResolver ( ) ) ; return new RepositoryEntityLinks ( org.springframework.data.rest.webmvc.config.Repositories ( ) , org.springframework.data.rest.webmvc.config.RepositoryResourceMappings ( ) , org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) , org.springframework.data.rest.webmvc.config.PagingAndSortingTemplateVariables , Java8PluginRegistry . of ( org.springframework.data.rest.webmvc.config.PluginRegistry<org.springframework.data.rest.webmvc.config.BackendIdConverter,java.lang.Class<?>> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.PersistentEntityResourceHandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.PersistentEntityResourceHandlerMethodArgumentResolver ( ) { return new PersistentEntityResourceHandlerMethodArgumentResolver ( java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> ( ) , org.springframework.data.rest.webmvc.config.RootResourceInformationHandlerMethodArgumentResolver ( ) , org.springframework.data.rest.webmvc.config.BackendIdHandlerMethodArgumentResolver ( ) , new DomainObjectReader ( org.springframework.data.rest.webmvc.config.PersistentEntities ( ) , org.springframework.data.rest.webmvc.config.Associations ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.PersistentEntityToJsonSchemaConverter org.springframework.data.rest.webmvc.config.PersistentEntityToJsonSchemaConverter ( ) { return new PersistentEntityToJsonSchemaConverter ( org.springframework.data.rest.webmvc.config.PersistentEntities ( ) , org.springframework.data.rest.webmvc.config.Associations ( ) , org.springframework.data.rest.webmvc.config.MessageSourceAccessor ( ) , org.springframework.data.rest.webmvc.config.ObjectMapper ( ) , org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) , new ValueTypeSchemaPropertyCustomizerFactory ( org.springframework.data.rest.webmvc.config.RepositoryInvokerFactory ( org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.MessageSourceAccessor org.springframework.data.rest.webmvc.config.MessageSourceAccessor ( ) { try { PropertiesFactoryBean org.springframework.data.rest.webmvc.config.PropertiesFactoryBean = new PropertiesFactoryBean ( ) ; org.springframework.data.rest.webmvc.config.PropertiesFactoryBean . setLocation ( new ClassPathResource ( STRING ) ) ; org.springframework.data.rest.webmvc.config.PropertiesFactoryBean . afterPropertiesSet ( ) ; ReloadableResourceBundleMessageSource org.springframework.data.rest.webmvc.config.ReloadableResourceBundleMessageSource = new ReloadableResourceBundleMessageSource ( ) ; org.springframework.data.rest.webmvc.config.ReloadableResourceBundleMessageSource . setBasename ( STRING ) ; org.springframework.data.rest.webmvc.config.ReloadableResourceBundleMessageSource . setCommonMessages ( org.springframework.data.rest.webmvc.config.PropertiesFactoryBean . getObject ( ) ) ; org.springframework.data.rest.webmvc.config.ReloadableResourceBundleMessageSource . setDefaultEncoding ( STRING ) ; return new MessageSourceAccessor ( org.springframework.data.rest.webmvc.config.ReloadableResourceBundleMessageSource ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new BeanCreationException ( STRING , STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.ObjectMapper org.springframework.data.rest.webmvc.config.ObjectMapper ( ) { Jdk8Module org.springframework.data.rest.webmvc.config.Jdk8Module = new Jdk8Module ( ) ; org.springframework.data.rest.webmvc.config.Jdk8Module . configureAbsentsAsNulls ( true ) ; ObjectMapper org.springframework.data.rest.webmvc.config.ObjectMapper = org.springframework.data.rest.webmvc.config.ObjectMapper ( ) ; org.springframework.data.rest.webmvc.config.ObjectMapper . registerModule ( org.springframework.data.rest.webmvc.config.Module ( ) ) ; org.springframework.data.rest.webmvc.config.ObjectMapper . registerModule ( org.springframework.data.rest.webmvc.config.Jdk8Module ) ; return org.springframework.data.rest.webmvc.config.ObjectMapper ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter ( ) { java.util.List<org.springframework.data.rest.webmvc.config.MediaType> < MediaType > java.util.List<org.springframework.data.rest.webmvc.config.MediaType> = new java.util.ArrayList<org.springframework.data.rest.webmvc.config.MediaType> < MediaType > ( ) ; if ( ! org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . useHalAsDefaultJsonMediaType ( ) ) { java.util.List<org.springframework.data.rest.webmvc.config.MediaType> . add ( MediaType . APPLICATION_JSON ) ; } int int = org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . useHalAsDefaultJsonMediaType ( ) ? Ordered . LOWEST_PRECEDENCE - NUMBER : Ordered . LOWEST_PRECEDENCE - NUMBER ; java.util.List<org.springframework.data.rest.webmvc.config.MediaType> . addAll ( java.util.Arrays . java.util.List ( RestMediaTypes . SCHEMA_JSON , RestMediaTypes . JSON_PATCH_JSON , RestMediaTypes . MERGE_PATCH_JSON , RestMediaTypes . SPRING_DATA_VERBOSE_JSON , RestMediaTypes . SPRING_DATA_COMPACT_JSON ) ) ; TypeConstrainedMappingJackson2HttpMessageConverter org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter = new org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration.ResourceSupportHttpMessageConverter ( int ) ; org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter . setObjectMapper ( org.springframework.data.rest.webmvc.config.ObjectMapper ( ) ) ; org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter . setSupportedMediaTypes ( java.util.List<org.springframework.data.rest.webmvc.config.MediaType> ) ; return org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter ( ) { java.util.ArrayList<org.springframework.data.rest.webmvc.config.MediaType> < MediaType > java.util.ArrayList<org.springframework.data.rest.webmvc.config.MediaType> = new java.util.ArrayList<org.springframework.data.rest.webmvc.config.MediaType> < MediaType > ( ) ; java.util.ArrayList<org.springframework.data.rest.webmvc.config.MediaType> . add ( MediaTypes . HAL_JSON ) ; if ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . useHalAsDefaultJsonMediaType ( ) ) { java.util.ArrayList<org.springframework.data.rest.webmvc.config.MediaType> . add ( MediaType . APPLICATION_JSON ) ; } int int = org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . useHalAsDefaultJsonMediaType ( ) ? Ordered . LOWEST_PRECEDENCE - NUMBER : Ordered . LOWEST_PRECEDENCE - NUMBER ; TypeConstrainedMappingJackson2HttpMessageConverter org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter = new org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration.ResourceSupportHttpMessageConverter ( int ) ; org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter . setObjectMapper ( org.springframework.data.rest.webmvc.config.ObjectMapper ( ) ) ; org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter . setSupportedMediaTypes ( java.util.ArrayList<org.springframework.data.rest.webmvc.config.MediaType> ) ; return org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.ObjectMapper org.springframework.data.rest.webmvc.config.ObjectMapper ( ) { RelProvider org.springframework.data.rest.webmvc.config.RelProvider = this . org.springframework.data.rest.webmvc.config.RelProvider != null ? this . org.springframework.data.rest.webmvc.config.RelProvider : new EvoInflectorRelProvider ( ) ; HalHandlerInstantiator org.springframework.data.rest.webmvc.config.HalHandlerInstantiator = new HalHandlerInstantiator ( org.springframework.data.rest.webmvc.config.RelProvider , org.springframework.data.rest.webmvc.config.CurieProvider , org.springframework.data.rest.webmvc.config.MessageSourceAccessor ( ) , org.springframework.data.rest.webmvc.config.ApplicationContext . getAutowireCapableBeanFactory ( ) ) ; ObjectMapper org.springframework.data.rest.webmvc.config.ObjectMapper = org.springframework.data.rest.webmvc.config.ObjectMapper ( ) ; org.springframework.data.rest.webmvc.config.ObjectMapper . registerModule ( org.springframework.data.rest.webmvc.config.Module ( ) ) ; org.springframework.data.rest.webmvc.config.ObjectMapper . registerModule ( new Jackson2HalModule ( ) ) ; org.springframework.data.rest.webmvc.config.ObjectMapper . setHandlerInstantiator ( org.springframework.data.rest.webmvc.config.HalHandlerInstantiator ) ; return org.springframework.data.rest.webmvc.config.ObjectMapper ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.UriListHttpMessageConverter org.springframework.data.rest.webmvc.config.UriListHttpMessageConverter ( ) { return new UriListHttpMessageConverter ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ java.lang.SuppressWarnings ( STRING ) public org.springframework.data.rest.webmvc.config.ResourceProcessorInvoker org.springframework.data.rest.webmvc.config.ResourceProcessorInvoker ( ) { java.util.Collection<org.springframework.data.rest.webmvc.config.ResourceProcessor> < ResourceProcessor > java.util.Collection<org.springframework.data.rest.webmvc.config.ResourceProcessor> = org.springframework.data.rest.webmvc.config.ApplicationContext . getBeansOfType ( ResourceProcessor .class , false , false ) . values ( ) ; java.util.List<org.springframework.data.rest.webmvc.config.ResourceProcessor<?>> < ResourceProcessor < ? > > java.util.List<org.springframework.data.rest.webmvc.config.ResourceProcessor<?>> = new java.util.ArrayList<org.springframework.data.rest.webmvc.config.ResourceProcessor<?>> < ResourceProcessor < ? > > ( java.util.Collection<org.springframework.data.rest.webmvc.config.ResourceProcessor> . size ( ) ) ; for ( ResourceProcessor < ? > org.springframework.data.rest.webmvc.config.ResourceProcessor<?> : java.util.Collection<org.springframework.data.rest.webmvc.config.ResourceProcessor> ) { java.util.List<org.springframework.data.rest.webmvc.config.ResourceProcessor<?>> . add ( org.springframework.data.rest.webmvc.config.ResourceProcessor<> ) ; } return new ResourceProcessorInvoker ( java.util.List<org.springframework.data.rest.webmvc.config.ResourceProcessor<?>> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.RequestMappingHandlerAdapter org.springframework.data.rest.webmvc.config.RequestMappingHandlerAdapter ( ) { ConfigurableWebBindingInitializer org.springframework.data.rest.webmvc.config.ConfigurableWebBindingInitializer = new ConfigurableWebBindingInitializer ( ) ; org.springframework.data.rest.webmvc.config.ConfigurableWebBindingInitializer . setConversionService ( org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ( ) ) ; RepositoryRestHandlerAdapter org.springframework.data.rest.webmvc.config.RepositoryRestHandlerAdapter = new RepositoryRestHandlerAdapter ( java.util.List<org.springframework.data.rest.webmvc.config.HandlerMethodArgumentResolver> ( ) , org.springframework.data.rest.webmvc.config.ResourceProcessorInvoker ( ) ) ; org.springframework.data.rest.webmvc.config.RepositoryRestHandlerAdapter . setWebBindingInitializer ( org.springframework.data.rest.webmvc.config.ConfigurableWebBindingInitializer ) ; org.springframework.data.rest.webmvc.config.RepositoryRestHandlerAdapter . setMessageConverters ( java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> ( ) ) ; if ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getMetadataConfiguration ( ) . alpsEnabled ( ) ) { org.springframework.data.rest.webmvc.config.RepositoryRestHandlerAdapter . setResponseBodyAdvice ( java.util.Arrays .< ResponseBodyAdvice < ? > > java.util.List<org.springframework.data.rest.webmvc.config.ResponseBodyAdvice<?>> ( org.springframework.data.rest.webmvc.config.AlpsJsonHttpMessageConverter ( ) ) ) ; } return org.springframework.data.rest.webmvc.config.RepositoryRestHandlerAdapter ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.HttpRequestHandlerAdapter org.springframework.data.rest.webmvc.config.HttpRequestHandlerAdapter ( ) { return new HttpRequestHandlerAdapter ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.DelegatingHandlerMapping org.springframework.data.rest.webmvc.config.DelegatingHandlerMapping ( ) { java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.config.CorsConfiguration> < java.lang.String , CorsConfiguration > java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.config.CorsConfiguration> = org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getCorsRegistry ( ) . getCorsConfigurations ( ) ; RepositoryRestHandlerMapping org.springframework.data.rest.webmvc.config.RepositoryRestHandlerMapping = new RepositoryRestHandlerMapping ( org.springframework.data.rest.webmvc.config.RepositoryResourceMappings ( ) , org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) , org.springframework.data.rest.webmvc.config.Repositories ( ) ) ; org.springframework.data.rest.webmvc.config.RepositoryRestHandlerMapping . setJpaHelper ( org.springframework.data.rest.webmvc.config.JpaHelper ( ) ) ; org.springframework.data.rest.webmvc.config.RepositoryRestHandlerMapping . setApplicationContext ( org.springframework.data.rest.webmvc.config.ApplicationContext ) ; org.springframework.data.rest.webmvc.config.RepositoryRestHandlerMapping . setCorsConfigurations ( java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.config.CorsConfiguration> ) ; org.springframework.data.rest.webmvc.config.RepositoryRestHandlerMapping . afterPropertiesSet ( ) ; BasePathAwareHandlerMapping org.springframework.data.rest.webmvc.config.BasePathAwareHandlerMapping = new BasePathAwareHandlerMapping ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) ) ; org.springframework.data.rest.webmvc.config.BasePathAwareHandlerMapping . setApplicationContext ( org.springframework.data.rest.webmvc.config.ApplicationContext ) ; org.springframework.data.rest.webmvc.config.BasePathAwareHandlerMapping . setCorsConfigurations ( java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.config.CorsConfiguration> ) ; org.springframework.data.rest.webmvc.config.BasePathAwareHandlerMapping . afterPropertiesSet ( ) ; java.util.List<org.springframework.data.rest.webmvc.config.HandlerMapping> < HandlerMapping > java.util.List<org.springframework.data.rest.webmvc.config.HandlerMapping> = new java.util.ArrayList<org.springframework.data.rest.webmvc.config.HandlerMapping> < HandlerMapping > ( ) ; java.util.List<org.springframework.data.rest.webmvc.config.HandlerMapping> . add ( org.springframework.data.rest.webmvc.config.BasePathAwareHandlerMapping ) ; java.util.List<org.springframework.data.rest.webmvc.config.HandlerMapping> . add ( org.springframework.data.rest.webmvc.config.RepositoryRestHandlerMapping ) ; return new DelegatingHandlerMapping ( java.util.List<org.springframework.data.rest.webmvc.config.HandlerMapping> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.RepositoryResourceMappings org.springframework.data.rest.webmvc.config.RepositoryResourceMappings ( ) { return new RepositoryResourceMappings ( org.springframework.data.rest.webmvc.config.Repositories ( ) , org.springframework.data.rest.webmvc.config.PersistentEntities ( ) , org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getRepositoryDetectionStrategy ( ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.rest.webmvc.config.Module org.springframework.data.rest.webmvc.config.Module ( ) { PersistentEntities org.springframework.data.rest.webmvc.config.PersistentEntities = org.springframework.data.rest.webmvc.config.PersistentEntities ( ) ; ConversionService org.springframework.data.rest.webmvc.config.ConversionService = org.springframework.data.rest.webmvc.config.DefaultFormattingConversionService ( ) ; UriToEntityConverter org.springframework.data.rest.webmvc.config.UriToEntityConverter = org.springframework.data.rest.webmvc.config.UriToEntityConverter ( org.springframework.data.rest.webmvc.config.ConversionService ) ; RepositoryInvokerFactory org.springframework.data.rest.webmvc.config.RepositoryInvokerFactory = org.springframework.data.rest.webmvc.config.RepositoryInvokerFactory ( org.springframework.data.rest.webmvc.config.ConversionService ) ; EmbeddedResourcesAssembler org.springframework.data.rest.webmvc.config.EmbeddedResourcesAssembler = new EmbeddedResourcesAssembler ( org.springframework.data.rest.webmvc.config.PersistentEntities , org.springframework.data.rest.webmvc.config.Associations ( ) , org.springframework.data.rest.webmvc.config.ExcerptProjector ( ) ) ; LookupObjectSerializer org.springframework.data.rest.webmvc.config.LookupObjectSerializer = new LookupObjectSerializer ( Java8PluginRegistry . of ( java.util.List<org.springframework.data.rest.webmvc.config.EntityLookup<?>> ( ) ) ) ; return new PersistentEntityJackson2Module ( org.springframework.data.rest.webmvc.config.Associations ( ) , org.springframework.data.rest.webmvc.config.PersistentEntities , org.springframework.data.rest.webmvc.config.UriToEntityConverter , org.springframework.data.rest.webmvc.config.LinkCollector ( ) , org.springframework.data.rest.webmvc.config.RepositoryInvokerFactory , org.springframework.data.rest.webmvc.config.LookupObjectSerializer , org.springframework.data.rest.webmvc.config.ResourceProcessorInvoker ( ) , org.springframework.data.rest.webmvc.config.EmbeddedResourcesAssembler ) ; }  <METHOD_END>
<METHOD_START> @ Bean protected org.springframework.data.rest.webmvc.config.LinkCollector org.springframework.data.rest.webmvc.config.LinkCollector ( ) { return new LinkCollector ( org.springframework.data.rest.webmvc.config.PersistentEntities ( ) , org.springframework.data.rest.webmvc.config.SelfLinkProvider ( ) , org.springframework.data.rest.webmvc.config.Associations ( ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.rest.webmvc.config.UriToEntityConverter org.springframework.data.rest.webmvc.config.UriToEntityConverter ( ConversionService org.springframework.data.rest.webmvc.config.ConversionService ) { return new UriToEntityConverter ( org.springframework.data.rest.webmvc.config.PersistentEntities ( ) , org.springframework.data.rest.webmvc.config.RepositoryInvokerFactory ( org.springframework.data.rest.webmvc.config.ConversionService ) , org.springframework.data.rest.webmvc.config.Repositories ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.ExcerptProjector org.springframework.data.rest.webmvc.config.ExcerptProjector ( ) { SpelAwareProxyProjectionFactory org.springframework.data.rest.webmvc.config.SpelAwareProxyProjectionFactory = new SpelAwareProxyProjectionFactory ( ) ; org.springframework.data.rest.webmvc.config.SpelAwareProxyProjectionFactory . setBeanFactory ( org.springframework.data.rest.webmvc.config.ApplicationContext ) ; return new DefaultExcerptProjector ( org.springframework.data.rest.webmvc.config.SpelAwareProxyProjectionFactory , org.springframework.data.rest.webmvc.config.RepositoryResourceMappings ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.List<org.springframework.data.rest.webmvc.config.HandlerExceptionResolver> < HandlerExceptionResolver > java.util.List<org.springframework.data.rest.webmvc.config.HandlerExceptionResolver> ) { ExceptionHandlerExceptionResolver org.springframework.data.rest.webmvc.config.ExceptionHandlerExceptionResolver = new ExceptionHandlerExceptionResolver ( ) ; org.springframework.data.rest.webmvc.config.ExceptionHandlerExceptionResolver . setCustomArgumentResolvers ( java.util.List<org.springframework.data.rest.webmvc.config.HandlerMethodArgumentResolver> ( ) ) ; org.springframework.data.rest.webmvc.config.ExceptionHandlerExceptionResolver . setMessageConverters ( java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> ( ) ) ; org.springframework.data.rest.webmvc.config.RepositoryRestConfigurerDelegate . configureExceptionHandlerExceptionResolver ( org.springframework.data.rest.webmvc.config.ExceptionHandlerExceptionResolver ) ; java.util.List<org.springframework.data.rest.webmvc.config.HandlerExceptionResolver> . add ( NUMBER , org.springframework.data.rest.webmvc.config.ExceptionHandlerExceptionResolver ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.RepositoryRestExceptionHandler org.springframework.data.rest.webmvc.config.RepositoryRestExceptionHandler ( ) { return new RepositoryRestExceptionHandler ( org.springframework.data.rest.webmvc.config.ApplicationContext ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.RepositoryInvokerFactory org.springframework.data.rest.webmvc.config.RepositoryInvokerFactory ( @ Qualifier ConversionService org.springframework.data.rest.webmvc.config.ConversionService ) { return new UnwrappingRepositoryInvokerFactory ( new DefaultRepositoryInvokerFactory ( org.springframework.data.rest.webmvc.config.Repositories ( ) , org.springframework.data.rest.webmvc.config.ConversionService ) , java.util.List<org.springframework.data.rest.webmvc.config.EntityLookup<?>> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> ( ) { java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> = new java.util.ArrayList<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> < HttpMessageConverter < ? > > ( ) ; if ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getMetadataConfiguration ( ) . alpsEnabled ( ) ) { java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> . add ( org.springframework.data.rest.webmvc.config.AlpsJsonHttpMessageConverter ( ) ) ; } if ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getDefaultMediaType ( ) . equals ( MediaTypes . HAL_JSON ) ) { java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> . add ( org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter ( ) ) ; java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> . add ( org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter ( ) ) ; } else { java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> . add ( org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter ( ) ) ; java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> . add ( org.springframework.data.rest.webmvc.config.TypeConstrainedMappingJackson2HttpMessageConverter ( ) ) ; } MappingJackson2HttpMessageConverter org.springframework.data.rest.webmvc.config.MappingJackson2HttpMessageConverter = new MappingJackson2HttpMessageConverter ( ) ; org.springframework.data.rest.webmvc.config.MappingJackson2HttpMessageConverter . setObjectMapper ( org.springframework.data.rest.webmvc.config.ObjectMapper ( ) ) ; java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> . add ( org.springframework.data.rest.webmvc.config.MappingJackson2HttpMessageConverter ) ; java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> . add ( org.springframework.data.rest.webmvc.config.UriListHttpMessageConverter ( ) ) ; org.springframework.data.rest.webmvc.config.RepositoryRestConfigurerDelegate . configureHttpMessageConverters ( java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> ) ; return java.util.List<org.springframework.data.rest.webmvc.config.HttpMessageConverter<?>> ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.AlpsJsonHttpMessageConverter org.springframework.data.rest.webmvc.config.AlpsJsonHttpMessageConverter ( ) { return new AlpsJsonHttpMessageConverter ( org.springframework.data.rest.webmvc.config.RootResourceInformationToAlpsDescriptorConverter ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ java.lang.Override public org.springframework.data.rest.webmvc.config.HateoasPageableHandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.HateoasPageableHandlerMethodArgumentResolver ( ) { HateoasPageableHandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.HateoasPageableHandlerMethodArgumentResolver = super. pageableResolver ( ) ; org.springframework.data.rest.webmvc.config.HateoasPageableHandlerMethodArgumentResolver . setPageParameterName ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getPageParamName ( ) ) ; org.springframework.data.rest.webmvc.config.HateoasPageableHandlerMethodArgumentResolver . setSizeParameterName ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getLimitParamName ( ) ) ; org.springframework.data.rest.webmvc.config.HateoasPageableHandlerMethodArgumentResolver . setFallbackPageable ( PageRequest . of ( NUMBER , org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getDefaultPageSize ( ) ) ) ; org.springframework.data.rest.webmvc.config.HateoasPageableHandlerMethodArgumentResolver . setMaxPageSize ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getMaxPageSize ( ) ) ; return org.springframework.data.rest.webmvc.config.HateoasPageableHandlerMethodArgumentResolver ; }  <METHOD_END>
<METHOD_START> @ Bean @ java.lang.Override public org.springframework.data.rest.webmvc.config.HateoasSortHandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.HateoasSortHandlerMethodArgumentResolver ( ) { HateoasSortHandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.HateoasSortHandlerMethodArgumentResolver = super. sortResolver ( ) ; org.springframework.data.rest.webmvc.config.HateoasSortHandlerMethodArgumentResolver . setSortParameter ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getSortParamName ( ) ) ; return org.springframework.data.rest.webmvc.config.HateoasSortHandlerMethodArgumentResolver ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.PluginRegistry<org.springframework.data.rest.webmvc.config.BackendIdConverter,java.lang.Class<?>> < BackendIdConverter , java.lang.Class<?> < ? > > org.springframework.data.rest.webmvc.config.PluginRegistry<org.springframework.data.rest.webmvc.config.BackendIdConverter,java.lang.Class<?>> ( ) { java.util.List<org.springframework.data.rest.webmvc.config.BackendIdConverter> < BackendIdConverter > java.util.List<org.springframework.data.rest.webmvc.config.BackendIdConverter> = new java.util.ArrayList<org.springframework.data.rest.webmvc.config.BackendIdConverter> < BackendIdConverter > ( java.util.List<org.springframework.data.rest.webmvc.config.BackendIdConverter> . size ( ) ) ; java.util.List<org.springframework.data.rest.webmvc.config.BackendIdConverter> . addAll ( this . java.util.List<org.springframework.data.rest.webmvc.config.BackendIdConverter> ) ; java.util.List<org.springframework.data.rest.webmvc.config.BackendIdConverter> . add ( DefaultIdConverter . INSTANCE ) ; return OrderAwarePluginRegistry . create ( java.util.List<org.springframework.data.rest.webmvc.config.BackendIdConverter> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.AuditableBeanWrapperFactory org.springframework.data.rest.webmvc.config.AuditableBeanWrapperFactory ( ) { return new MappingAuditableBeanWrapperFactory ( org.springframework.data.rest.webmvc.config.PersistentEntities ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.HttpHeadersPreparer org.springframework.data.rest.webmvc.config.HttpHeadersPreparer ( ) { return new HttpHeadersPreparer ( org.springframework.data.rest.webmvc.config.AuditableBeanWrapperFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.SelfLinkProvider org.springframework.data.rest.webmvc.config.SelfLinkProvider ( ) { return new DefaultSelfLinkProvider ( org.springframework.data.rest.webmvc.config.PersistentEntities ( ) , org.springframework.data.rest.webmvc.config.RepositoryEntityLinks ( ) , java.util.List<org.springframework.data.rest.webmvc.config.EntityLookup<?>> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.Associations org.springframework.data.rest.webmvc.config.Associations ( ) { return new Associations ( org.springframework.data.rest.webmvc.config.RepositoryResourceMappings ( ) , org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.data.rest.webmvc.config.EntityLookup<?>> < EntityLookup < ? > > java.util.List<org.springframework.data.rest.webmvc.config.EntityLookup<?>> ( ) { java.util.List<org.springframework.data.rest.webmvc.config.EntityLookup<?>> < EntityLookup < ? > > java.util.List<org.springframework.data.rest.webmvc.config.EntityLookup<?>> = new java.util.ArrayList<org.springframework.data.rest.webmvc.config.EntityLookup<?>> < EntityLookup < ? > > ( ) ; java.util.List<org.springframework.data.rest.webmvc.config.EntityLookup<?>> . addAll ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getEntityLookups ( org.springframework.data.rest.webmvc.config.Repositories ( ) ) ) ; java.util.List<org.springframework.data.rest.webmvc.config.EntityLookup<?>> . addAll ( this . java.util.List<org.springframework.data.rest.webmvc.config.EntityLookup<?>> ) ; return java.util.List<org.springframework.data.rest.webmvc.config.EntityLookup<?>> ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.data.rest.webmvc.config.HandlerMethodArgumentResolver> < HandlerMethodArgumentResolver > java.util.List<org.springframework.data.rest.webmvc.config.HandlerMethodArgumentResolver> ( ) { SpelAwareProxyProjectionFactory org.springframework.data.rest.webmvc.config.SpelAwareProxyProjectionFactory = new SpelAwareProxyProjectionFactory ( ) ; org.springframework.data.rest.webmvc.config.SpelAwareProxyProjectionFactory . setBeanFactory ( org.springframework.data.rest.webmvc.config.ApplicationContext ) ; org.springframework.data.rest.webmvc.config.SpelAwareProxyProjectionFactory . setResourceLoader ( org.springframework.data.rest.webmvc.config.ApplicationContext ) ; PersistentEntityResourceAssemblerArgumentResolver org.springframework.data.rest.webmvc.config.PersistentEntityResourceAssemblerArgumentResolver = new PersistentEntityResourceAssemblerArgumentResolver ( org.springframework.data.rest.webmvc.config.PersistentEntities ( ) , org.springframework.data.rest.webmvc.config.SelfLinkProvider ( ) , org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getProjectionConfiguration ( ) , org.springframework.data.rest.webmvc.config.SpelAwareProxyProjectionFactory , org.springframework.data.rest.webmvc.config.Associations ( ) ) ; PageableHandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.PageableHandlerMethodArgumentResolver = org.springframework.data.rest.webmvc.config.HateoasPageableHandlerMethodArgumentResolver ( ) ; JacksonMappingAwareSortTranslator org.springframework.data.rest.webmvc.config.JacksonMappingAwareSortTranslator = new JacksonMappingAwareSortTranslator ( org.springframework.data.rest.webmvc.config.ObjectMapper ( ) , org.springframework.data.rest.webmvc.config.Repositories ( ) , DomainClassResolver . of ( org.springframework.data.rest.webmvc.config.Repositories ( ) , org.springframework.data.rest.webmvc.config.RepositoryResourceMappings ( ) , org.springframework.data.rest.webmvc.config.BaseUri ( ) ) , org.springframework.data.rest.webmvc.config.PersistentEntities ( ) , org.springframework.data.rest.webmvc.config.Associations ( ) ) ; HandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.HandlerMethodArgumentResolver = new MappingAwareSortArgumentResolver ( org.springframework.data.rest.webmvc.config.JacksonMappingAwareSortTranslator , org.springframework.data.rest.webmvc.config.HateoasSortHandlerMethodArgumentResolver ( ) ) ; HandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.HandlerMethodArgumentResolver = new MappingAwarePageableArgumentResolver ( org.springframework.data.rest.webmvc.config.JacksonMappingAwareSortTranslator , org.springframework.data.rest.webmvc.config.PageableHandlerMethodArgumentResolver ) ; HandlerMethodArgumentResolver org.springframework.data.rest.webmvc.config.HandlerMethodArgumentResolver = new MappingAwareDefaultedPageableArgumentResolver ( org.springframework.data.rest.webmvc.config.JacksonMappingAwareSortTranslator , org.springframework.data.rest.webmvc.config.PageableHandlerMethodArgumentResolver ) ; return java.util.Arrays . java.util.List ( org.springframework.data.rest.webmvc.config.HandlerMethodArgumentResolver , org.springframework.data.rest.webmvc.config.HandlerMethodArgumentResolver , org.springframework.data.rest.webmvc.config.HandlerMethodArgumentResolver , org.springframework.data.rest.webmvc.config.ServerHttpRequestMethodArgumentResolver ( ) , org.springframework.data.rest.webmvc.config.RootResourceInformationHandlerMethodArgumentResolver ( ) , org.springframework.data.rest.webmvc.config.PersistentEntityResourceHandlerMethodArgumentResolver ( ) , org.springframework.data.rest.webmvc.config.ResourceMetadataHandlerMethodArgumentResolver ( ) , HttpMethodHandlerMethodArgumentResolver . INSTANCE , org.springframework.data.rest.webmvc.config.PersistentEntityResourceAssemblerArgumentResolver , org.springframework.data.rest.webmvc.config.BackendIdHandlerMethodArgumentResolver ( ) , org.springframework.data.rest.webmvc.config.ETagArgumentResolver ( ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.rest.webmvc.config.ObjectMapper org.springframework.data.rest.webmvc.config.ObjectMapper ( ) { ObjectMapper org.springframework.data.rest.webmvc.config.ObjectMapper = new ObjectMapper ( ) ; org.springframework.data.rest.webmvc.config.ObjectMapper . configure ( SerializationFeature . INDENT_OUTPUT , true ) ; org.springframework.data.rest.webmvc.config.ObjectMapper . configure ( SerializationFeature . WRITE_DATES_AS_TIMESTAMPS , false ) ; org.springframework.data.rest.webmvc.config.ObjectMapper . configure ( DeserializationFeature . FAIL_ON_UNKNOWN_PROPERTIES , false ) ; org.springframework.data.rest.webmvc.config.RepositoryRestConfigurerDelegate . configureJacksonObjectMapper ( org.springframework.data.rest.webmvc.config.ObjectMapper ) ; org.springframework.data.rest.webmvc.config.ObjectMapper . registerModule ( org.springframework.data.rest.webmvc.config.GeoModule ) ; if ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . isEnableEnumTranslation ( ) ) { org.springframework.data.rest.webmvc.config.ObjectMapper . registerModule ( new JacksonSerializers ( org.springframework.data.rest.webmvc.config.EnumTranslator ( ) ) ) ; } Jackson2DatatypeHelper . configureObjectMapper ( org.springframework.data.rest.webmvc.config.ObjectMapper ) ; return org.springframework.data.rest.webmvc.config.ObjectMapper ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.EnumTranslator org.springframework.data.rest.webmvc.config.EnumTranslator ( ) { return new EnumTranslator ( org.springframework.data.rest.webmvc.config.MessageSourceAccessor ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( Repositories org.springframework.data.rest.webmvc.config.Repositories ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : org.springframework.data.rest.webmvc.config.Repositories ) { java.util.Set<java.lang.String> . boolean ( java.lang.Class<> . java.lang.Package ( ) . java.lang.String ( ) ) ; } AnnotatedTypeScanner org.springframework.data.rest.webmvc.config.AnnotatedTypeScanner = new AnnotatedTypeScanner ( Projection .class ) ; org.springframework.data.rest.webmvc.config.AnnotatedTypeScanner . setEnvironment ( org.springframework.data.rest.webmvc.config.ApplicationContext . getEnvironment ( ) ) ; org.springframework.data.rest.webmvc.config.AnnotatedTypeScanner . setResourceLoader ( org.springframework.data.rest.webmvc.config.ApplicationContext ) ; return org.springframework.data.rest.webmvc.config.AnnotatedTypeScanner . findTypes ( java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.RootResourceInformationToAlpsDescriptorConverter org.springframework.data.rest.webmvc.config.RootResourceInformationToAlpsDescriptorConverter ( ) { Repositories org.springframework.data.rest.webmvc.config.Repositories = org.springframework.data.rest.webmvc.config.Repositories ( ) ; PersistentEntities org.springframework.data.rest.webmvc.config.PersistentEntities = org.springframework.data.rest.webmvc.config.PersistentEntities ( ) ; RepositoryEntityLinks org.springframework.data.rest.webmvc.config.RepositoryEntityLinks = org.springframework.data.rest.webmvc.config.RepositoryEntityLinks ( ) ; MessageSourceAccessor org.springframework.data.rest.webmvc.config.MessageSourceAccessor = org.springframework.data.rest.webmvc.config.MessageSourceAccessor ( ) ; RepositoryRestConfiguration org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration = org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) ; return new RootResourceInformationToAlpsDescriptorConverter ( org.springframework.data.rest.webmvc.config.Associations ( ) , org.springframework.data.rest.webmvc.config.Repositories , org.springframework.data.rest.webmvc.config.PersistentEntities , org.springframework.data.rest.webmvc.config.RepositoryEntityLinks , org.springframework.data.rest.webmvc.config.MessageSourceAccessor , org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration , org.springframework.data.rest.webmvc.config.ObjectMapper ( ) , org.springframework.data.rest.webmvc.config.EnumTranslator ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.webmvc.config.ProfileResourceProcessor org.springframework.data.rest.webmvc.config.ProfileResourceProcessor ( RepositoryRestConfiguration org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ) { return new ProfileResourceProcessor ( org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ResourceHandlerRegistry org.springframework.data.rest.webmvc.config.ResourceHandlerRegistry ) { if ( ClassUtils . isPresent ( STRING , java.lang.Class<? extends org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration> ( ) . java.lang.ClassLoader ( ) ) ) { java.lang.String java.lang.String = org.springframework.data.rest.webmvc.config.RepositoryRestConfiguration ( ) . getBasePath ( ) . toString ( ) . concat ( STRING ) ; java.lang.String java.lang.String = STRING ; org.springframework.data.rest.webmvc.config.ResourceHandlerRegistry . addResourceHandler ( java.lang.String . java.lang.String ( STRING ) ) . addResourceLocations ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public void ( int int ) { super( ResourceSupport .class ); this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return int ; }  <METHOD_END>
