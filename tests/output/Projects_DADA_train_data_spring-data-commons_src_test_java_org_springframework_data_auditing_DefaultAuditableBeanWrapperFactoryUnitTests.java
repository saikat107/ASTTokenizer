<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.data.auditing.DefaultAuditableBeanWrapperFactory . getBeanWrapperFor ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.auditing.DefaultAuditableBeanWrapperFactory . getBeanWrapperFor ( new AuditedUser ( ) ) ) . hasValueSatisfying ( it -> assertThat ( it ) . isInstanceOf ( AuditableInterfaceBeanWrapper .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.auditing.DefaultAuditableBeanWrapperFactory . getBeanWrapperFor ( new AnnotatedUser ( ) ) ) . hasValueSatisfying ( it -> assertThat ( it ) . isInstanceOf ( ReflectionAuditingBeanWrapper .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.auditing.DefaultAuditableBeanWrapperFactory . getBeanWrapperFor ( new java.lang.Object ( ) ) ) . isNotPresent ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Jsr310ThreeTenBpAuditedUser org.springframework.data.auditing.Jsr310ThreeTenBpAuditedUser = new Jsr310ThreeTenBpAuditedUser ( ) ; java.time.Instant java.time.Instant = java.time.Instant . java.time.Instant ( ) ; java.util.Optional<org.springframework.data.auditing.AuditableBeanWrapper> < AuditableBeanWrapper > java.util.Optional<org.springframework.data.auditing.AuditableBeanWrapper> = org.springframework.data.auditing.DefaultAuditableBeanWrapperFactory . getBeanWrapperFor ( org.springframework.data.auditing.Jsr310ThreeTenBpAuditedUser ) ; assertThat ( java.util.Optional<org.springframework.data.auditing.AuditableBeanWrapper> ) . hasValueSatisfying ( it -> { it . setCreatedDate ( instant ) ; it . setLastModifiedDate ( instant ) ; assertThat ( user . createdDate ) . isNotNull ( ) ; assertThat ( user . lastModifiedDate ) . isNotNull ( ) ; } ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { Jsr310ThreeTenBpAuditedUser org.springframework.data.auditing.Jsr310ThreeTenBpAuditedUser = new Jsr310ThreeTenBpAuditedUser ( ) ; java.time.ZonedDateTime java.time.ZonedDateTime = java.time.ZonedDateTime . java.time.ZonedDateTime ( ) ; java.util.Optional<org.springframework.data.auditing.AuditableBeanWrapper> < AuditableBeanWrapper > java.util.Optional<org.springframework.data.auditing.AuditableBeanWrapper> = org.springframework.data.auditing.DefaultAuditableBeanWrapperFactory . getBeanWrapperFor ( org.springframework.data.auditing.Jsr310ThreeTenBpAuditedUser ) ; assertThat ( java.util.Optional<org.springframework.data.auditing.AuditableBeanWrapper> ) . hasValueSatisfying ( it -> it . setLastModifiedDate ( zonedDateTime ) ) ; }  <METHOD_END>
