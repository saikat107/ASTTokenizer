<METHOD_START> @ Test public void void ( ) { SerializingConverter org.springframework.core.serializer.SerializingConverter = new SerializingConverter ( ) ; byte [] byte[] = org.springframework.core.serializer.SerializingConverter . convert ( STRING ) ; DeserializingConverter org.springframework.core.serializer.DeserializingConverter = new DeserializingConverter ( ) ; assertEquals ( STRING , org.springframework.core.serializer.DeserializingConverter . convert ( byte[] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SerializingConverter org.springframework.core.serializer.SerializingConverter = new SerializingConverter ( ) ; try { org.springframework.core.serializer.SerializingConverter . convert ( new java.lang.Object ( ) ) ; fail ( STRING ) ; } catch ( SerializationFailedException org.springframework.core.serializer.SerializationFailedException ) { assertNotNull ( org.springframework.core.serializer.SerializationFailedException . getCause ( ) ) ; assertTrue ( org.springframework.core.serializer.SerializationFailedException . getCause ( ) instanceof java.lang.IllegalArgumentException ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SerializingConverter org.springframework.core.serializer.SerializingConverter = new SerializingConverter ( ) ; try { org.springframework.core.serializer.SerializingConverter . convert ( new org.springframework.core.serializer.SerializationConverterTests.UnSerializable ( ) ) ; fail ( STRING ) ; } catch ( SerializationFailedException org.springframework.core.serializer.SerializationFailedException ) { assertNotNull ( org.springframework.core.serializer.SerializationFailedException . getCause ( ) ) ; assertTrue ( org.springframework.core.serializer.SerializationFailedException . getCause ( ) instanceof java.io.NotSerializableException ) ; } }  <METHOD_END>
<METHOD_START> @ Test ( expected = SerializationFailedException .class ) public void void ( ) { DeserializingConverter org.springframework.core.serializer.DeserializingConverter = new DeserializingConverter ( ) ; org.springframework.core.serializer.DeserializingConverter . convert ( STRING . byte[] ( ) ) ; }  <METHOD_END>
