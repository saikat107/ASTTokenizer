<METHOD_START> @ Test public void void ( ) java.lang.Exception { ApplicationTemp org.springframework.boot.ApplicationTemp = new ApplicationTemp ( ) ; ApplicationTemp org.springframework.boot.ApplicationTemp = new ApplicationTemp ( ) ; assertThat ( org.springframework.boot.ApplicationTemp . getDir ( ) ) . isNotNull ( ) ; assertThat ( org.springframework.boot.ApplicationTemp . getDir ( ) ) . isEqualTo ( org.springframework.boot.ApplicationTemp . getDir ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = java.lang.System . java.lang.String ( STRING ) ; try { java.io.File java.io.File = new ApplicationTemp ( ) . getDir ( ) ; java.lang.System . java.lang.String ( STRING , STRING ) ; java.io.File java.io.File = new ApplicationTemp ( ) . getDir ( ) ; assertThat ( java.io.File ) . isNotEqualTo ( java.io.File ) ; } finally { java.lang.System . java.lang.String ( STRING , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ApplicationTemp org.springframework.boot.ApplicationTemp = new ApplicationTemp ( ) ; assertThat ( org.springframework.boot.ApplicationTemp . getDir ( STRING ) ) . isEqualTo ( new java.io.File ( org.springframework.boot.ApplicationTemp . getDir ( ) , STRING ) ) ; }  <METHOD_END>
