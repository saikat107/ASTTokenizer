<METHOD_START> public void ( java.lang.String java.lang.String , Endpoint org.springframework.web.reactive.socket.server.upgrade.Endpoint ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.web.reactive.socket.server.upgrade.Endpoint , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.web.reactive.socket.server.upgrade.Endpoint = org.springframework.web.reactive.socket.server.upgrade.Endpoint ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.Class<? extends org.springframework.web.reactive.socket.server.upgrade.Encoder>> < java.lang.Class<? extends org.springframework.web.reactive.socket.server.upgrade.Encoder> < ? extends Encoder > > java.util.List<java.lang.Class<? extends org.springframework.web.reactive.socket.server.upgrade.Encoder>> ( ) { return new java.util.ArrayList<java.lang.Class<? extends org.springframework.web.reactive.socket.server.upgrade.Encoder>> <> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.Class<? extends org.springframework.web.reactive.socket.server.upgrade.Decoder>> < java.lang.Class<? extends org.springframework.web.reactive.socket.server.upgrade.Decoder> < ? extends Decoder > > java.util.List<java.lang.Class<? extends org.springframework.web.reactive.socket.server.upgrade.Decoder>> ( ) { return new java.util.ArrayList<java.lang.Class<? extends org.springframework.web.reactive.socket.server.upgrade.Decoder>> <> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { return new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return this . org.springframework.web.reactive.socket.server.upgrade.Endpoint . getClass ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return this . java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.web.reactive.socket.server.upgrade.Extension> < Extension > java.util.List<org.springframework.web.reactive.socket.server.upgrade.Extension> ( ) { return new java.util.ArrayList<org.springframework.web.reactive.socket.server.upgrade.Extension> <> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.reactive.socket.server.upgrade.Configurator org.springframework.web.reactive.socket.server.upgrade.Configurator ( ) { return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) throws java.lang.InstantiationException { return ( T ) this . org.springframework.web.reactive.socket.server.upgrade.Endpoint ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + java.lang.String ( ) + STRING + java.lang.Class<?> ( ) ; }  <METHOD_END>
