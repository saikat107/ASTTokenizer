<METHOD_START> public void ( java.lang.Object [] java.lang.Object[] , int [] int[] ) { if ( ( java.lang.Object[] != null && int[] == null ) || ( java.lang.Object[] == null && int[] != null ) || ( java.lang.Object[] != null && java.lang.Object[] . int != int[] . int ) ) { throw new InvalidDataAccessApiUsageException ( STRING ) ; } this . java.lang.Object[] = java.lang.Object[] ; this . int[] = int[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.sql.PreparedStatement java.sql.PreparedStatement ) throws java.sql.SQLException { int int = NUMBER ; if ( this . java.lang.Object[] != null ) { for ( int int = NUMBER ; int < this . java.lang.Object[] . int ; int ++ ) { java.lang.Object java.lang.Object = this . java.lang.Object[] [ int ] ; if ( java.lang.Object instanceof java.util.Collection && this . int[] [ int ] != java.sql.Types . int ) { java.util.Collection<?> < ? > java.util.Collection<?> = ( java.util.Collection<?> < ? > ) java.lang.Object ; for ( java.lang.Object java.lang.Object : java.util.Collection<> ) { if ( java.lang.Object instanceof java.lang.Object [] ) { java.lang.Object [] java.lang.Object[] = ( ( java.lang.Object [] ) java.lang.Object ) ; for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { void ( java.sql.PreparedStatement , int , this . int[] [ int ] , java.lang.Object ) ; int ++ ; } } else { void ( java.sql.PreparedStatement , int , this . int[] [ int ] , java.lang.Object ) ; int ++ ; } } } else { void ( java.sql.PreparedStatement , int , this . int[] [ int ] , java.lang.Object ) ; int ++ ; } } } }  <METHOD_END>
<METHOD_START> protected void void ( java.sql.PreparedStatement java.sql.PreparedStatement , int int , int int , java.lang.Object java.lang.Object )			throws java.sql.SQLException { StatementCreatorUtils . setParameterValue ( java.sql.PreparedStatement , int , int , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { StatementCreatorUtils . cleanupParameters ( this . java.lang.Object[] ) ; }  <METHOD_END>
