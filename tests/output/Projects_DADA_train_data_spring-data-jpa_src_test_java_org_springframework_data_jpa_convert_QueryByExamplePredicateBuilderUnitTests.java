<METHOD_START> @ Before public void void ( ) { org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,java.lang.Long> = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.SingluarAttributeStub<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,java.lang.Long> < org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person , java.lang.Long > ( STRING , PersistentAttributeType . BASIC , java.lang.Long .class ) ; org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,java.lang.String> = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.SingluarAttributeStub<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,java.lang.String> < org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person , java.lang.String > ( STRING , PersistentAttributeType . BASIC , java.lang.String .class ) ; org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,java.lang.Long> = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.SingluarAttributeStub<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,java.lang.Long> < org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person , java.lang.Long > ( STRING , PersistentAttributeType . BASIC , java.lang.Long .class ) ; org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person> = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.SingluarAttributeStub<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person> < org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person , org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person > ( STRING , PersistentAttributeType . MANY_TO_ONE , org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person .class , org.springframework.data.jpa.convert.EntityType<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person> ) ; org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Skill> = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.SingluarAttributeStub<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Skill> < org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person , org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Skill > ( STRING , PersistentAttributeType . MANY_TO_ONE , org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Skill .class ) ; org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Address> = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.SingluarAttributeStub<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Address> < org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person , org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Address > ( STRING , PersistentAttributeType . EMBEDDED , org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Address .class ) ; java.util.Set<org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,?>> = new java.util.LinkedHashSet<org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,?>> < SingularAttribute < ? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person , ? > > ( ) ; java.util.Set<org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,?>> . add ( org.springframework.data.jpa.convert.SingularAttribute<,java.lang.Long> ) ; java.util.Set<org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,?>> . add ( org.springframework.data.jpa.convert.SingularAttribute<,java.lang.String> ) ; java.util.Set<org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,?>> . add ( org.springframework.data.jpa.convert.SingularAttribute<,java.lang.Long> ) ; java.util.Set<org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,?>> . add ( org.springframework.data.jpa.convert.SingularAttribute<,org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person> ) ; java.util.Set<org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,?>> . add ( org.springframework.data.jpa.convert.SingularAttribute<,org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Address> ) ; java.util.Set<org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,?>> . add ( org.springframework.data.jpa.convert.SingularAttribute<,org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Skill> ) ; doReturn ( org.springframework.data.jpa.convert.Path ) . when ( org.springframework.data.jpa.convert.Root ) . get ( any ( SingularAttribute .class ) ) ; doReturn ( org.springframework.data.jpa.convert.EntityType<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person> ) . when ( org.springframework.data.jpa.convert.Root ) . getModel ( ) ; doReturn ( java.util.Set<org.springframework.data.jpa.convert.SingularAttribute<? super org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person,?>> ) . when ( org.springframework.data.jpa.convert.EntityType<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person> ) . getSingularAttributes ( ) ; doReturn ( org.springframework.data.jpa.convert.Predicate ) . when ( org.springframework.data.jpa.convert.CriteriaBuilder ) . equal ( any ( Expression .class ) , any ( java.lang.String .class ) ) ; doReturn ( org.springframework.data.jpa.convert.Predicate ) . when ( org.springframework.data.jpa.convert.CriteriaBuilder ) . equal ( any ( Expression .class ) , any ( java.lang.Long .class ) ) ; doReturn ( org.springframework.data.jpa.convert.Predicate ) . when ( org.springframework.data.jpa.convert.CriteriaBuilder ) . like ( any ( Expression .class ) , any ( java.lang.String .class ) ) ; doReturn ( org.springframework.data.jpa.convert.Expression ) . when ( org.springframework.data.jpa.convert.CriteriaBuilder ) . literal ( any ( java.lang.Boolean .class ) ) ; doReturn ( org.springframework.data.jpa.convert.Predicate ) . when ( org.springframework.data.jpa.convert.CriteriaBuilder ) . isTrue ( eq ( org.springframework.data.jpa.convert.Expression ) ) ; doReturn ( org.springframework.data.jpa.convert.Predicate ) . when ( org.springframework.data.jpa.convert.CriteriaBuilder ) . and ( ArgumentMatchers . any ( ) ) ; doReturn ( org.springframework.data.jpa.convert.Predicate ) . when ( org.springframework.data.jpa.convert.CriteriaBuilder ) . or ( ArgumentMatchers . any ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { QueryByExamplePredicateBuilder . getPredicate ( null , org.springframework.data.jpa.convert.CriteriaBuilder , of ( new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { QueryByExamplePredicateBuilder . getPredicate ( org.springframework.data.jpa.convert.Root , null , of ( new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { QueryByExamplePredicateBuilder . getPredicate ( org.springframework.data.jpa.convert.Root , null , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( QueryByExamplePredicateBuilder . getPredicate ( org.springframework.data.jpa.convert.Root , org.springframework.data.jpa.convert.CriteriaBuilder , of ( new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ( ) ) ) , equalTo ( org.springframework.data.jpa.convert.Predicate ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ( ) ; org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person . java.lang.String = STRING ; assertThat ( QueryByExamplePredicateBuilder . getPredicate ( org.springframework.data.jpa.convert.Root , org.springframework.data.jpa.convert.CriteriaBuilder , of ( org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ) ) , equalTo ( org.springframework.data.jpa.convert.Predicate ) ) ; verify ( org.springframework.data.jpa.convert.CriteriaBuilder , times ( NUMBER ) ) . equal ( any ( Expression .class ) , eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ( ) ; org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ( ) ; org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person . org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ( ) ; org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person . org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person = org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ; org.springframework.data.jpa.convert.ExpectedException . expectCause ( IsInstanceOf .< java.lang.Throwable > instanceOf ( java.lang.IllegalArgumentException .class ) ) ; org.springframework.data.jpa.convert.ExpectedException . expectMessage ( STRING ) ; QueryByExamplePredicateBuilder . getPredicate ( org.springframework.data.jpa.convert.Root , org.springframework.data.jpa.convert.CriteriaBuilder , of ( org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ( ) ; org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person . java.lang.String = STRING ; org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person . java.lang.Long = NUMBER ; assertThat ( QueryByExamplePredicateBuilder . getPredicate ( org.springframework.data.jpa.convert.Root , org.springframework.data.jpa.convert.CriteriaBuilder , of ( org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ) ) , equalTo ( org.springframework.data.jpa.convert.Predicate ) ) ; verify ( org.springframework.data.jpa.convert.CriteriaBuilder , times ( NUMBER ) ) . equal ( any ( Expression .class ) , eq ( STRING ) ) ; verify ( org.springframework.data.jpa.convert.CriteriaBuilder , times ( NUMBER ) ) . equal ( any ( Expression .class ) , eq ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person = new org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person ( ) ; org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person . java.lang.String = STRING ; org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person . java.lang.Long = NUMBER ; Example < org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person > org.springframework.data.jpa.convert.Example<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person> = of ( org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person , ExampleMatcher . matchingAny ( ) ) ; assertThat ( QueryByExamplePredicateBuilder . getPredicate ( org.springframework.data.jpa.convert.Root , org.springframework.data.jpa.convert.CriteriaBuilder , org.springframework.data.jpa.convert.Example<org.springframework.data.jpa.convert.QueryByExamplePredicateBuilderUnitTests.Person> ) , equalTo ( org.springframework.data.jpa.convert.Predicate ) ) ; verify ( org.springframework.data.jpa.convert.CriteriaBuilder , times ( NUMBER ) ) . or ( ArgumentMatchers . any ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , javax . javax.persistence . javax.persistence . javax.persistence . javax.persistence javax.persistence.metamodel.Attribute.PersistentAttributeType , java.lang.Class<T> < T > java.lang.Class<T> ) { this( java.lang.String , javax.persistence.metamodel.Attribute.PersistentAttributeType , java.lang.Class<T> , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , javax . javax.persistence . javax.persistence . javax.persistence . javax.persistence javax.persistence.metamodel.Attribute.PersistentAttributeType , java.lang.Class<T> < T > java.lang.Class<T> , Type < T > org.springframework.data.jpa.convert.Type<T> ) { this . java.lang.String = java.lang.String ; this . org.springframework.data.jpa.convert.PersistentAttributeType = javax.persistence.metamodel.Attribute.PersistentAttributeType ; this . java.lang.Class<T> = java.lang.Class<T> ; this . org.springframework.data.jpa.convert.Type<T> = org.springframework.data.jpa.convert.Type<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax . javax.persistence . javax.persistence . javax.persistence . javax.persistence.metamodel.Attribute.PersistentAttributeType javax.persistence.metamodel.Attribute.PersistentAttributeType ( ) { return org.springframework.data.jpa.convert.PersistentAttributeType ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.jpa.convert.ManagedType<X> < X > org.springframework.data.jpa.convert.ManagedType<X> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<T> < T > java.lang.Class<T> ( ) { return java.lang.Class<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.reflect.Member java.lang.reflect.Member ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ! org.springframework.data.jpa.convert.PersistentAttributeType . equals ( PersistentAttributeType . BASIC ) && ! org.springframework.data.jpa.convert.PersistentAttributeType . equals ( PersistentAttributeType . EMBEDDED ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax . javax.persistence . javax.persistence . javax.persistence . javax.persistence.metamodel.Bindable.BindableType javax.persistence.metamodel.Bindable.BindableType ( ) { return BindableType . SINGULAR_ATTRIBUTE ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<T> < T > java.lang.Class<T> ( ) { return java.lang.Class<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ObjectUtils . nullSafeEquals ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.jpa.convert.Type<T> < T > org.springframework.data.jpa.convert.Type<T> ( ) { return org.springframework.data.jpa.convert.Type<T> ; }  <METHOD_END>
