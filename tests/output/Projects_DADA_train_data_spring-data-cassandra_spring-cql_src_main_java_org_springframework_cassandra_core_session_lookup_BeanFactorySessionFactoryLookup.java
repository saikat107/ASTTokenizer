<METHOD_START> public void ( ) {}  <METHOD_END>
<METHOD_START> public void ( BeanFactory org.springframework.cassandra.core.session.lookup.BeanFactory ) { Assert . notNull ( org.springframework.cassandra.core.session.lookup.BeanFactory , STRING ) ; this . org.springframework.cassandra.core.session.lookup.BeanFactory = org.springframework.cassandra.core.session.lookup.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.cassandra.core.session.lookup.BeanFactory ) { this . org.springframework.cassandra.core.session.lookup.BeanFactory = org.springframework.cassandra.core.session.lookup.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.cassandra.core.session.lookup.SessionFactory org.springframework.cassandra.core.session.lookup.SessionFactory ( java.lang.String java.lang.String ) throws org.springframework.cassandra.core.session.lookup.SessionFactoryLookupFailureException { Assert . notNull ( this . org.springframework.cassandra.core.session.lookup.BeanFactory , STRING ) ; try { return this . org.springframework.cassandra.core.session.lookup.BeanFactory . getBean ( java.lang.String , SessionFactory .class ) ; } catch ( BeansException org.springframework.cassandra.core.session.lookup.BeansException ) { throw new SessionFactoryLookupFailureException ( java.lang.String . java.lang.String ( STRING , java.lang.String ) , org.springframework.cassandra.core.session.lookup.BeansException ) ; } }  <METHOD_END>
