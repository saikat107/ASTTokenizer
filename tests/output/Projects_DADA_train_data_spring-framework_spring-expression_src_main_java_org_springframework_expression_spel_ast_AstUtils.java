<METHOD_START> public static java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> < PropertyAccessor > java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> ( java.lang.Class<?> < ? > java.lang.Class<?> , java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> < PropertyAccessor > java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> ) { java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> < PropertyAccessor > java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> = new java.util.ArrayList<org.springframework.expression.spel.ast.PropertyAccessor> <> ( ) ; java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> < PropertyAccessor > java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> = new java.util.ArrayList<org.springframework.expression.spel.ast.PropertyAccessor> <> ( ) ; for ( PropertyAccessor org.springframework.expression.spel.ast.PropertyAccessor : java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.expression.spel.ast.PropertyAccessor . getSpecificTargetClasses ( ) ; if ( java.lang.Class<?>[] == null ) { java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> . add ( org.springframework.expression.spel.ast.PropertyAccessor ) ; } else { if ( java.lang.Class<> != null ) { int int = NUMBER ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<?>[] ) { if ( java.lang.Class<> == java.lang.Class<> ) { java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> . add ( int ++ , org.springframework.expression.spel.ast.PropertyAccessor ) ; } else if ( java.lang.Class<> . boolean ( java.lang.Class<> ) ) { java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> . add ( org.springframework.expression.spel.ast.PropertyAccessor ) ; } } } } } java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> < PropertyAccessor > java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> = new java.util.LinkedList<org.springframework.expression.spel.ast.PropertyAccessor> <> ( ) ; java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> . addAll ( java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> ) ; java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> . addAll ( java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> ) ; return java.util.List<org.springframework.expression.spel.ast.PropertyAccessor> ; }  <METHOD_END>
