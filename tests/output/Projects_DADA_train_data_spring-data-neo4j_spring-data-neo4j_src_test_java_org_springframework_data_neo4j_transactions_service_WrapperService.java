<METHOD_START> @ Transactional public void void ( ) { org.springframework.data.neo4j.transactions.service.BusinessService . successMethodInTransaction ( ) ; org.springframework.data.neo4j.transactions.service.BusinessService . failMethodInTransaction ( ) ; }  <METHOD_END>
<METHOD_START> @ Transactional public void void ( ) { org.springframework.data.neo4j.transactions.service.BusinessService . successMethodInTransaction ( ) ; org.springframework.data.neo4j.transactions.service.BusinessService . successMethodInTransaction ( ) ; }  <METHOD_END>
<METHOD_START> @ Transactional public void void ( ) { org.springframework.data.neo4j.transactions.service.BusinessService . failMethodInTransaction ( ) ; org.springframework.data.neo4j.transactions.service.BusinessService . successMethodInTransaction ( ) ; }  <METHOD_END>
<METHOD_START> @ Transactional public void void ( ) { org.springframework.data.neo4j.transactions.service.BusinessService . failMethodInTransaction ( ) ; org.springframework.data.neo4j.transactions.service.BusinessService . failMethodInTransaction ( ) ; }  <METHOD_END>
<METHOD_START> @ Transactional ( rollbackFor = java.lang.Exception .class ) public void void ( ) java.lang.Exception { org.springframework.data.neo4j.transactions.service.BusinessService . throwsException ( ) ; }  <METHOD_END>
<METHOD_START> @ Transactional ( readOnly = true ) public java.lang.Iterable<java.util.Map<java.lang.String,java.lang.Object>> < java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.lang.Iterable<java.util.Map<java.lang.String,java.lang.Object>> ( ) { return org.springframework.data.neo4j.transactions.service.BusinessService . fetch ( ) ; }  <METHOD_END>
