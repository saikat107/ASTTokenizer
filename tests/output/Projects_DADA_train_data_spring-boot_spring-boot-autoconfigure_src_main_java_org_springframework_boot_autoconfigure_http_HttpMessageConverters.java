<METHOD_START> public void ( org.springframework.boot.autoconfigure.http.HttpMessageConverter<?> < ? > ... org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>[] ) { this( java.util.Arrays . java.util.List ( org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>[] ) ); }  <METHOD_END>
<METHOD_START> public void ( java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) { this( true , java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ); }  <METHOD_END>
<METHOD_START> public void ( boolean boolean , java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) { java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> , boolean ? java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( ) : java.util.Collections .< HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( ) ) ; java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) ; this . java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = java.util.Collections . java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> , java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) { java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = new java.util.ArrayList<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> <> ( ) ; java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = new java.util.ArrayList <> ( java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) ; for ( HttpMessageConverter < ? > org.springframework.boot.autoconfigure.http.HttpMessageConverter<?> : java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) { java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . iterator ( ) ; while ( java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . hasNext ( ) ) { HttpMessageConverter < ? > org.springframework.boot.autoconfigure.http.HttpMessageConverter<?> = java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . next ( ) ; if ( boolean ( org.springframework.boot.autoconfigure.http.HttpMessageConverter<> , org.springframework.boot.autoconfigure.http.HttpMessageConverter<> ) ) { java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . add ( org.springframework.boot.autoconfigure.http.HttpMessageConverter<> ) ; java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . remove ( ) ; } } java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . add ( org.springframework.boot.autoconfigure.http.HttpMessageConverter<> ) ; if ( org.springframework.boot.autoconfigure.http.HttpMessageConverter<> instanceof AllEncompassingFormHttpMessageConverter ) { void ( ( AllEncompassingFormHttpMessageConverter ) org.springframework.boot.autoconfigure.http.HttpMessageConverter<> , java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) ; } } java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . addAll ( NUMBER , java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) ; return java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( HttpMessageConverter < ? > org.springframework.boot.autoconfigure.http.HttpMessageConverter<?> , HttpMessageConverter < ? > org.springframework.boot.autoconfigure.http.HttpMessageConverter<?> ) { for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.util.List<java.lang.Class<?>> ) { if ( java.lang.Class<> . boolean ( org.springframework.boot.autoconfigure.http.HttpMessageConverter<> ) ) { return false ; } } return ClassUtils . isAssignableValue ( org.springframework.boot.autoconfigure.http.HttpMessageConverter<> . getClass ( ) , org.springframework.boot.autoconfigure.http.HttpMessageConverter<> ) ; }  <METHOD_END>
<METHOD_START> private void void ( AllEncompassingFormHttpMessageConverter org.springframework.boot.autoconfigure.http.AllEncompassingFormHttpMessageConverter , java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) { java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( org.springframework.boot.autoconfigure.http.AllEncompassingFormHttpMessageConverter ) ; java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( java.util.Collection<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> , java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) ; java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) ; org.springframework.boot.autoconfigure.http.AllEncompassingFormHttpMessageConverter . setPartConverters ( java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( FormHttpMessageConverter org.springframework.boot.autoconfigure.http.FormHttpMessageConverter ) { java.lang.reflect.Field java.lang.reflect.Field = ReflectionUtils . findField ( FormHttpMessageConverter .class , STRING ) ; ReflectionUtils . makeAccessible ( java.lang.reflect.Field ) ; return ( java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > ) ReflectionUtils . getField ( java.lang.reflect.Field , org.springframework.boot.autoconfigure.http.FormHttpMessageConverter ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) { return java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) { return java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( ) { java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = new java.util.ArrayList<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> <> ( ) ; if ( ClassUtils . isPresent ( STRING + STRING , null ) ) { java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . addAll ( new WebMvcConfigurationSupport ( ) { public java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( ) { return super. getMessageConverters ( ) ; } } . java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( ) ) ; } else { java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . addAll ( new RestTemplate ( ) . getMessageConverters ( ) ) ; } void ( java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) ; return java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( ) { return super. getMessageConverters ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) { java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = new java.util.ArrayList<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> <> ( ) ; for ( java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> = java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . iterator ( ) ; java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . hasNext ( ) ;) { HttpMessageConverter < ? > org.springframework.boot.autoconfigure.http.HttpMessageConverter<?> = java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . next ( ) ; if ( ( org.springframework.boot.autoconfigure.http.HttpMessageConverter<> instanceof AbstractXmlHttpMessageConverter ) || ( org.springframework.boot.autoconfigure.http.HttpMessageConverter<> instanceof MappingJackson2XmlHttpMessageConverter ) ) { java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . add ( org.springframework.boot.autoconfigure.http.HttpMessageConverter<> ) ; java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . remove ( ) ; } } java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> . addAll ( java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.Iterator<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( ) { return java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( ) . iterator ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> < HttpMessageConverter < ? > > java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ( ) { return this . java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>> ; }  <METHOD_END>
<METHOD_START> private static void void ( java.util.List<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.List<java.lang.Class<?>> , java.lang.String java.lang.String ) { try { java.util.List<java.lang.Class<?>> . boolean ( java.lang.Class . java.lang.Class<?> ( java.lang.String ) ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { } catch ( java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError ) { } }  <METHOD_END>
