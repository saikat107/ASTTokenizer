<METHOD_START> @ Test public void void ( ) { org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . setParameters ( java.util.Collections . java.util.List ( new JpaParameter ( STRING , STRING , null ) ) ) ; ParameterSource org.springframework.integration.jpa.support.parametersource.ParameterSource = org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . createParameterSource ( null ) ; assertTrue ( org.springframework.integration.jpa.support.parametersource.ParameterSource . hasValue ( STRING ) ) ; assertEquals ( STRING , org.springframework.integration.jpa.support.parametersource.ParameterSource . getValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ParameterSource org.springframework.integration.jpa.support.parametersource.ParameterSource = org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . createParameterSource ( java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , STRING ) ) ; assertTrue ( org.springframework.integration.jpa.support.parametersource.ParameterSource . hasValue ( STRING ) ) ; assertEquals ( STRING , org.springframework.integration.jpa.support.parametersource.ParameterSource . getValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { @ java.lang.SuppressWarnings ( STRING ) ParameterSource org.springframework.integration.jpa.support.parametersource.ParameterSource = org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . createParameterSource ( java.util.Arrays . java.util.List<java.util.Map<java.lang.String,java.lang.String>> ( java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , STRING ) , java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , STRING ) ) ) ; java.lang.String java.lang.String = STRING ; assertTrue ( org.springframework.integration.jpa.support.parametersource.ParameterSource . hasValue ( java.lang.String ) ) ; assertEquals ( STRING , org.springframework.integration.jpa.support.parametersource.ParameterSource . getValue ( java.lang.String ) . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ParameterSource org.springframework.integration.jpa.support.parametersource.ParameterSource = org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . createParameterSource ( java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , STRING ) ) ; assertTrue ( org.springframework.integration.jpa.support.parametersource.ParameterSource . hasValue ( STRING ) ) ; assertEquals ( STRING , org.springframework.integration.jpa.support.parametersource.ParameterSource . getValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . setParameters ( java.util.Collections . java.util.List ( new JpaParameter ( STRING , null , STRING ) ) ) ; ParameterSource org.springframework.integration.jpa.support.parametersource.ParameterSource = org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . createParameterSource ( java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , STRING ) ) ; assertTrue ( org.springframework.integration.jpa.support.parametersource.ParameterSource . hasValue ( STRING ) ) ; assertEquals ( STRING , org.springframework.integration.jpa.support.parametersource.ParameterSource . getValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> < JpaParameter > java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> = new java.util.ArrayList<org.springframework.integration.jpa.support.parametersource.JpaParameter> < JpaParameter > ( ) ; java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> . add ( new JpaParameter ( STRING , null , STRING ) ) ; java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> . add ( new JpaParameter ( STRING , STRING , null ) ) ; org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . setParameters ( java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> ) ; ParameterSource org.springframework.integration.jpa.support.parametersource.ParameterSource = org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . createParameterSource ( java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , STRING ) ) ; assertTrue ( org.springframework.integration.jpa.support.parametersource.ParameterSource . hasValue ( STRING ) ) ; assertEquals ( STRING , org.springframework.integration.jpa.support.parametersource.ParameterSource . getValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . setParameters ( java.util.Collections . java.util.List ( new JpaParameter ( STRING , null , STRING ) ) ) ; @ java.lang.SuppressWarnings ( STRING ) ParameterSource org.springframework.integration.jpa.support.parametersource.ParameterSource = org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . createParameterSource ( java.util.Arrays . java.util.List<java.util.Map<java.lang.String,java.lang.String>> ( java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , STRING ) , java.util.Collections . java.util.Map<java.lang.String,java.lang.String> ( STRING , STRING ) ) ) ; java.lang.String java.lang.String = STRING ; assertTrue ( org.springframework.integration.jpa.support.parametersource.ParameterSource . hasValue ( java.lang.String ) ) ; assertEquals ( STRING , org.springframework.integration.jpa.support.parametersource.ParameterSource . getValue ( java.lang.String ) . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> < JpaParameter > java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> = new java.util.ArrayList<org.springframework.integration.jpa.support.parametersource.JpaParameter> < JpaParameter > ( ) ; java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> . add ( new JpaParameter ( STRING , null ) ) ; java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> . add ( new JpaParameter ( STRING , null ) ) ; org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . setParameters ( java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> ) ; PositionSupportingParameterSource org.springframework.integration.jpa.support.parametersource.PositionSupportingParameterSource = org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . createParameterSource ( STRING ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.integration.jpa.support.parametersource.PositionSupportingParameterSource . getValueByPosition ( NUMBER ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.integration.jpa.support.parametersource.PositionSupportingParameterSource . getValueByPosition ( NUMBER ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> < JpaParameter > java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> = new java.util.ArrayList<org.springframework.integration.jpa.support.parametersource.JpaParameter> < JpaParameter > ( ) ; java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> . add ( new JpaParameter ( null , STRING ) ) ; java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> . add ( new JpaParameter ( STRING , null ) ) ; org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . setParameters ( java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> ) ; PositionSupportingParameterSource org.springframework.integration.jpa.support.parametersource.PositionSupportingParameterSource = org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . createParameterSource ( STRING ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.integration.jpa.support.parametersource.PositionSupportingParameterSource . getValueByPosition ( NUMBER ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.integration.jpa.support.parametersource.PositionSupportingParameterSource . getValueByPosition ( NUMBER ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> < JpaParameter > java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> = new java.util.ArrayList<org.springframework.integration.jpa.support.parametersource.JpaParameter> < JpaParameter > ( ) ; java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> . add ( new JpaParameter ( STRING , null ) ) ; java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> . add ( new JpaParameter ( null , STRING ) ) ; org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . setParameters ( java.util.List<org.springframework.integration.jpa.support.parametersource.JpaParameter> ) ; PositionSupportingParameterSource org.springframework.integration.jpa.support.parametersource.PositionSupportingParameterSource = org.springframework.integration.jpa.support.parametersource.ExpressionEvaluatingParameterSourceFactory . createParameterSource ( STRING ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.integration.jpa.support.parametersource.PositionSupportingParameterSource . getValueByPosition ( NUMBER ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.integration.jpa.support.parametersource.PositionSupportingParameterSource . getValueByPosition ( NUMBER ) ; assertEquals ( STRING , java.lang.String ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
