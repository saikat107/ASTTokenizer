<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.context.support.ConfigurableApplicationContext = new GenericApplicationContext ( ) ; org.springframework.context.support.ConfigurableApplicationContext . refresh ( ) ; AnnotationConfigApplicationContext org.springframework.context.support.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.support.AnnotationConfigApplicationContext . setParent ( org.springframework.context.support.ConfigurableApplicationContext ) ; org.springframework.context.support.AnnotationConfigApplicationContext . refresh ( ) ; ConfigurableEnvironment org.springframework.context.support.ConfigurableEnvironment = org.springframework.context.support.AnnotationConfigApplicationContext . getBean ( ConfigurableEnvironment .class ) ; assertThat ( STRING , org.springframework.context.support.ConfigurableEnvironment , anyOf ( sameInstance ( org.springframework.context.support.ConfigurableApplicationContext . getEnvironment ( ) ) , sameInstance ( org.springframework.context.support.AnnotationConfigApplicationContext . getEnvironment ( ) ) ) ) ; assertThat ( STRING , org.springframework.context.support.ConfigurableEnvironment , sameInstance ( org.springframework.context.support.AnnotationConfigApplicationContext . getEnvironment ( ) ) ) ; org.springframework.context.support.AnnotationConfigApplicationContext . close ( ) ; org.springframework.context.support.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
