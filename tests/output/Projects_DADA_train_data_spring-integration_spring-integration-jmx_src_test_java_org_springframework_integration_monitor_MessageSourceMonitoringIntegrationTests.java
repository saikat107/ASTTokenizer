<METHOD_START> public void void ( IntegrationMBeanExporter org.springframework.integration.monitor.IntegrationMBeanExporter ) { this . org.springframework.integration.monitor.IntegrationMBeanExporter = org.springframework.integration.monitor.IntegrationMBeanExporter ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.integration.monitor.MessageSourceMonitoringIntegrationTests.Service org.springframework.integration.monitor.MessageSourceMonitoringIntegrationTests.Service ) { this . org.springframework.integration.monitor.MessageSourceMonitoringIntegrationTests.Service = org.springframework.integration.monitor.MessageSourceMonitoringIntegrationTests.Service ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.lang.Exception { ClassPathXmlApplicationContext org.springframework.integration.monitor.ClassPathXmlApplicationContext = org.springframework.integration.monitor.ClassPathXmlApplicationContext ( java.lang.String , java.lang.String ) ; try { int int = org.springframework.integration.monitor.MessageSourceMonitoringIntegrationTests.Service . int ( ) ; org.springframework.integration.monitor.PollableChannel . receive ( NUMBER ) ; org.springframework.integration.monitor.PollableChannel . receive ( NUMBER ) ; assertTrue ( int < org.springframework.integration.monitor.MessageSourceMonitoringIntegrationTests.Service . int ( ) ) ; int int = org.springframework.integration.monitor.IntegrationMBeanExporter . getSourceMessageCount ( java.lang.String ) ; assertTrue ( STRING , int > NUMBER ) ; } finally { org.springframework.integration.monitor.ClassPathXmlApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.integration.monitor.ClassPathXmlApplicationContext org.springframework.integration.monitor.ClassPathXmlApplicationContext ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { ClassPathXmlApplicationContext org.springframework.integration.monitor.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( java.lang.String , java.lang.Class<? extends org.springframework.integration.monitor.MessageSourceMonitoringIntegrationTests> ( ) ) ; org.springframework.integration.monitor.ClassPathXmlApplicationContext . getAutowireCapableBeanFactory ( ) . autowireBeanProperties ( this , AutowireCapableBeanFactory . AUTOWIRE_BY_TYPE , false ) ; org.springframework.integration.monitor.PollableChannel = org.springframework.integration.monitor.ClassPathXmlApplicationContext . getBean ( java.lang.String , PollableChannel .class ) ; return org.springframework.integration.monitor.ClassPathXmlApplicationContext ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) java.lang.Exception ;  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) java.lang.Exception { java.lang.Thread . void ( NUMBER ) ; int ++ ; return STRING + int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
