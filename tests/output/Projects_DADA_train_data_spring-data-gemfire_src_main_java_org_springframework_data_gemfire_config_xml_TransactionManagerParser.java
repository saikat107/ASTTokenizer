<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( org.w3c.dom.Element org.w3c.dom.Element ) { return GemfireTransactionManager .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) { super. doParse ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyReference ( STRING , ParsingUtils . resolveCacheReference ( org.w3c.dom.Element ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element , AbstractBeanDefinition org.springframework.data.gemfire.config.xml.AbstractBeanDefinition , ParserContext org.springframework.data.gemfire.config.xml.ParserContext )			throws org.springframework.data.gemfire.config.xml.BeanDefinitionStoreException { java.lang.String java.lang.String = super. resolveId ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.AbstractBeanDefinition , org.springframework.data.gemfire.config.xml.ParserContext ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { java.lang.String = GemfireConstants . DEFAULT_GEMFIRE_TRANSACTION_MANAGER_NAME ; org.springframework.data.gemfire.config.xml.ParserContext . getRegistry ( ) . registerAlias ( GemfireConstants . DEFAULT_GEMFIRE_TRANSACTION_MANAGER_NAME , STRING ) ; } return java.lang.String ; }  <METHOD_END>
