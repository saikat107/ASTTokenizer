<METHOD_START> @ Bean public org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.SampleController org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.SampleController ( ) { return new org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.SampleController ( ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) { WebTestUtils . initWebTest ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { WebApplicationContext org.springframework.data.web.config.WebApplicationContext = WebTestUtils . createApplicationContext ( org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Config .class ) ; org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.SampleController org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.SampleController = org.springframework.data.web.config.WebApplicationContext . getBean ( org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.SampleController .class ) ; assertThat ( org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.SampleController . org.springframework.data.web.config.PagedResourcesAssembler<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person> ) . isNotNull ( ) ; PagedResources < Resource < org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person > > org.springframework.data.web.config.PagedResources<org.springframework.data.web.config.Resource<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person>> = org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.SampleController . org.springframework.data.web.config.PagedResources<org.springframework.data.web.config.Resource<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person>> ( PageRequest . of ( NUMBER , NUMBER ) ) ; assertThat ( org.springframework.data.web.config.PagedResources<org.springframework.data.web.config.Resource<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person>> . getLink ( Link . REL_PREVIOUS ) ) . isNotNull ( ) ; assertThat ( org.springframework.data.web.config.PagedResources<org.springframework.data.web.config.Resource<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person>> . getLink ( Link . REL_NEXT ) ) . isNotNull ( ) ; assertThat ( org.springframework.data.web.config.PagedResources<org.springframework.data.web.config.Resource<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person>> . getLink ( Link . REL_SELF ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.data.web.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , java.lang.Class<? extends org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests> ( ) ) ; assertThat ( org.springframework.data.web.config.ClassPathXmlApplicationContext . getBean ( PagedResourcesAssembler .class ) ) . isNotNull ( ) ; org.springframework.data.web.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.data.web.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , java.lang.Class<? extends org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests> ( ) ) ; assertThat ( org.springframework.data.web.config.ClassPathXmlApplicationContext . getBean ( PagedResourcesAssembler .class ) ) . isNotNull ( ) ; org.springframework.data.web.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( STRING ) org.springframework.data.web.config.PagedResources<org.springframework.data.web.config.Resource<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person>> < Resource < org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person > > org.springframework.data.web.config.PagedResources<org.springframework.data.web.config.Resource<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person>> ( Pageable org.springframework.data.web.config.Pageable ) { Page < org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person > org.springframework.data.web.config.Page<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person> = new PageImpl <> ( java.util.Collections . java.util.List<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person> ( new org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person ( ) ) , org.springframework.data.web.config.Pageable , org.springframework.data.web.config.Pageable . getOffset ( ) + org.springframework.data.web.config.Pageable . getPageSize ( ) + NUMBER ) ; return org.springframework.data.web.config.PagedResourcesAssembler<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person> . toResource ( org.springframework.data.web.config.Page<org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests.Person> ) ; }  <METHOD_END>
