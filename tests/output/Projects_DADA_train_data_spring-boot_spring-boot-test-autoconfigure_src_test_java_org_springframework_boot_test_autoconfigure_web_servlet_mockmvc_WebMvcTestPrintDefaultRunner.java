<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) throws org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.InitializationError { super( java.lang.Class<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.Statement org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.Statement ( FrameworkMethod org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.FrameworkMethod ) { Statement org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.Statement = super. methodBlock ( org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.FrameworkMethod ) ; org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.Statement = new org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestPrintDefaultRunner.AlwaysPassStatement ( org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.Statement ) ; OutputCapture org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.OutputCapture = new OutputCapture ( ) ; if ( org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.FrameworkMethod . getName ( ) . equals ( STRING ) ) { org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.OutputCapture . expect ( containsString ( STRING ) ) ; } else if ( org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.FrameworkMethod . getName ( ) . equals ( STRING ) ) { org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.OutputCapture . expect ( not ( containsString ( STRING ) ) ) ; } else { throw new java.lang.IllegalStateException ( STRING ) ; } java.lang.System . java.io.PrintStream . void ( org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.FrameworkMethod . getName ( ) ) ; return org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.OutputCapture . apply ( org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.Statement , null ) ; }  <METHOD_END>
<METHOD_START> void ( Statement org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.Statement ) { this . org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.Statement = org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.Statement ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Throwable { try { this . org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.Statement . evaluate ( ) ; } catch ( java.lang.AssertionError java.lang.AssertionError ) {			} }  <METHOD_END>
