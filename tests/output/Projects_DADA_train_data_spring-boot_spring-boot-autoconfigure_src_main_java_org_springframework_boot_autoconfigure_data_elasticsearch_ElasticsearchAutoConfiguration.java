<METHOD_START> public void ( ElasticsearchProperties org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties ) { this . org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties = org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean public org.springframework.boot.autoconfigure.data.elasticsearch.Client org.springframework.boot.autoconfigure.data.elasticsearch.Client ( ) { try { return org.springframework.boot.autoconfigure.data.elasticsearch.Client ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.IllegalStateException ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.data.elasticsearch.Client org.springframework.boot.autoconfigure.data.elasticsearch.Client ( ) java.lang.Exception { if ( StringUtils . hasLength ( this . org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties . getClusterNodes ( ) ) ) { return org.springframework.boot.autoconfigure.data.elasticsearch.Client ( ) ; } return org.springframework.boot.autoconfigure.data.elasticsearch.Client ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.data.elasticsearch.Client org.springframework.boot.autoconfigure.data.elasticsearch.Client ( ) java.lang.Exception { Settings . Settings Settings.Builder = Settings . settingsBuilder ( ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { if ( ! this . org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties . getProperties ( ) . containsKey ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ) { Settings.Builder . put ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } } Settings.Builder . put ( this . org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties . getProperties ( ) ) ; Node org.springframework.boot.autoconfigure.data.elasticsearch.Node = new NodeBuilder ( ) . settings ( Settings.Builder ) . clusterName ( this . org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties . getClusterName ( ) ) . node ( ) ; this . org.springframework.boot.autoconfigure.data.elasticsearch.Releasable = org.springframework.boot.autoconfigure.data.elasticsearch.Node ; return org.springframework.boot.autoconfigure.data.elasticsearch.Node . client ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.data.elasticsearch.Client org.springframework.boot.autoconfigure.data.elasticsearch.Client ( ) java.lang.Exception { TransportClientFactoryBean org.springframework.boot.autoconfigure.data.elasticsearch.TransportClientFactoryBean = new TransportClientFactoryBean ( ) ; org.springframework.boot.autoconfigure.data.elasticsearch.TransportClientFactoryBean . setClusterNodes ( this . org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties . getClusterNodes ( ) ) ; org.springframework.boot.autoconfigure.data.elasticsearch.TransportClientFactoryBean . setProperties ( java.util.Properties ( ) ) ; org.springframework.boot.autoconfigure.data.elasticsearch.TransportClientFactoryBean . afterPropertiesSet ( ) ; TransportClient org.springframework.boot.autoconfigure.data.elasticsearch.TransportClient = org.springframework.boot.autoconfigure.data.elasticsearch.TransportClientFactoryBean . getObject ( ) ; this . org.springframework.boot.autoconfigure.data.elasticsearch.Releasable = org.springframework.boot.autoconfigure.data.elasticsearch.TransportClient ; return org.springframework.boot.autoconfigure.data.elasticsearch.TransportClient ; }  <METHOD_END>
<METHOD_START> private java.util.Properties java.util.Properties ( ) { java.util.Properties java.util.Properties = new java.util.Properties ( ) ; java.util.Properties . java.lang.Object ( STRING , this . org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties . getClusterName ( ) ) ; java.util.Properties . void ( this . org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties . getProperties ( ) ) ; return java.util.Properties ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( this . org.springframework.boot.autoconfigure.data.elasticsearch.Releasable != null ) { try { if ( org.springframework.boot.autoconfigure.data.elasticsearch.Log . isInfoEnabled ( ) ) { org.springframework.boot.autoconfigure.data.elasticsearch.Log . info ( STRING ) ; } try { this . org.springframework.boot.autoconfigure.data.elasticsearch.Releasable . close ( ) ; } catch ( java.lang.NoSuchMethodError java.lang.NoSuchMethodError ) { ReflectionUtils . invokeMethod ( ReflectionUtils . findMethod ( Releasable .class , STRING ) , this . org.springframework.boot.autoconfigure.data.elasticsearch.Releasable ) ; } } catch ( final java.lang.Exception java.lang.Exception ) { if ( org.springframework.boot.autoconfigure.data.elasticsearch.Log . isErrorEnabled ( ) ) { org.springframework.boot.autoconfigure.data.elasticsearch.Log . error ( STRING , java.lang.Exception ) ; } } } }  <METHOD_END>
