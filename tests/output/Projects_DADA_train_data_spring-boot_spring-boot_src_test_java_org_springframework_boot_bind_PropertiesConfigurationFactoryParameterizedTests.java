<METHOD_START> @ Parameters public static java.lang.Object [] java.lang.Object[] ( ) { return new java.lang.Object [] { new java.lang.Object [] { false } , new java.lang.Object [] { true } } ; }  <METHOD_END>
<METHOD_START> public void ( boolean boolean ) { this . org.springframework.boot.bind.PropertiesConfigurationFactory<org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo> . setIgnoreUnknownFields ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo = org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo ( STRING ) ; assertThat ( org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo . java.lang.String ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo . java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo = org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo ( STRING ) ; assertThat ( org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo . java.lang.String ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo . java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo = org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo ( STRING ) ; assertThat ( org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo . java.lang.String ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo . java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . java.lang.String = STRING ; org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo = org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo ( STRING ) ; assertThat ( org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo . java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . java.lang.String = STRING ; org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo = org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo ( STRING ) ; assertThat ( org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo . java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo ( final java.lang.String java.lang.String ) throws java.lang.Exception { void ( ) ; return org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo ( final java.lang.String java.lang.String ) throws java.lang.Exception { java.util.Properties java.util.Properties = PropertiesLoaderUtils . loadProperties ( new ByteArrayResource ( java.lang.String . byte[] ( ) ) ) ; MutablePropertySources org.springframework.boot.bind.MutablePropertySources = new MutablePropertySources ( ) ; org.springframework.boot.bind.MutablePropertySources . addFirst ( new PropertiesPropertySource ( STRING , java.util.Properties ) ) ; this . org.springframework.boot.bind.PropertiesConfigurationFactory<org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo> . setPropertySources ( org.springframework.boot.bind.MutablePropertySources ) ; this . org.springframework.boot.bind.PropertiesConfigurationFactory<org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo> . afterPropertiesSet ( ) ; return this . org.springframework.boot.bind.PropertiesConfigurationFactory<org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo> . getObject ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) java.io.IOException { this . org.springframework.boot.bind.PropertiesConfigurationFactory<org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo> . setTargetName ( this . java.lang.String ) ; this . org.springframework.boot.bind.PropertiesConfigurationFactory<org.springframework.boot.bind.PropertiesConfigurationFactoryParameterizedTests.Foo> . setMessageSource ( new StaticMessageSource ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
