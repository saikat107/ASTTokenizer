<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfigurationTests.WriterConfig .class , MetricRepositoryAutoConfiguration .class , MetricExportAutoConfiguration .class , PropertyPlaceholderAutoConfiguration .class ) ; GaugeService org.springframework.boot.actuate.autoconfigure.GaugeService = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( GaugeService .class ) ; assertThat ( org.springframework.boot.actuate.autoconfigure.GaugeService ) . isNotNull ( ) ; org.springframework.boot.actuate.autoconfigure.GaugeService . submit ( STRING , NUMBER ) ; MetricExporters org.springframework.boot.actuate.autoconfigure.MetricExporters = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( MetricExporters .class ) ; org.springframework.boot.actuate.autoconfigure.MetricExporters . close ( ) ; MetricWriter org.springframework.boot.actuate.autoconfigure.MetricWriter = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( STRING , MetricWriter .class ) ; verify ( org.springframework.boot.actuate.autoconfigure.MetricWriter , atLeastOnce ( ) ) . set ( any ( Metric .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfigurationTests.MessageChannelConfiguration .class , MetricRepositoryAutoConfiguration .class , MetricsChannelAutoConfiguration .class , MetricExportAutoConfiguration .class , PropertyPlaceholderAutoConfiguration .class ) ; MetricExporters org.springframework.boot.actuate.autoconfigure.MetricExporters = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( MetricExporters .class ) ; assertThat ( org.springframework.boot.actuate.autoconfigure.MetricExporters ) . isNotNull ( ) ; assertThat ( org.springframework.boot.actuate.autoconfigure.MetricExporters . getExporters ( ) ) . containsKey ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfigurationTests.WriterConfig .class , MetricRepositoryAutoConfiguration .class , MetricExportAutoConfiguration .class , PropertyPlaceholderAutoConfiguration .class ) ; GaugeService org.springframework.boot.actuate.autoconfigure.GaugeService = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( GaugeService .class ) ; assertThat ( org.springframework.boot.actuate.autoconfigure.GaugeService ) . isNotNull ( ) ; org.springframework.boot.actuate.autoconfigure.GaugeService . submit ( STRING , NUMBER ) ; MetricExporters org.springframework.boot.actuate.autoconfigure.MetricExporters = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( MetricExporters .class ) ; MetricCopyExporter org.springframework.boot.actuate.autoconfigure.MetricCopyExporter = ( MetricCopyExporter ) org.springframework.boot.actuate.autoconfigure.MetricExporters . getExporters ( ) . get ( STRING ) ; org.springframework.boot.actuate.autoconfigure.MetricCopyExporter . setIgnoreTimestamps ( true ) ; org.springframework.boot.actuate.autoconfigure.MetricCopyExporter . export ( ) ; MetricWriter org.springframework.boot.actuate.autoconfigure.MetricWriter = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( STRING , MetricWriter .class ) ; Mockito . verify ( org.springframework.boot.actuate.autoconfigure.MetricWriter , Mockito . atLeastOnce ( ) ) . set ( any ( Metric .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfigurationTests.WriterConfig .class , org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfigurationTests.MetricEndpointConfiguration .class , MetricExportAutoConfiguration .class , PropertyPlaceholderAutoConfiguration .class ) ; MetricExporters org.springframework.boot.actuate.autoconfigure.MetricExporters = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( MetricExporters .class ) ; MetricCopyExporter org.springframework.boot.actuate.autoconfigure.MetricCopyExporter = ( MetricCopyExporter ) org.springframework.boot.actuate.autoconfigure.MetricExporters . getExporters ( ) . get ( STRING ) ; org.springframework.boot.actuate.autoconfigure.MetricCopyExporter . setIgnoreTimestamps ( true ) ; org.springframework.boot.actuate.autoconfigure.MetricCopyExporter . export ( ) ; MetricsEndpointMetricReader org.springframework.boot.actuate.autoconfigure.MetricsEndpointMetricReader = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( STRING , MetricsEndpointMetricReader .class ) ; Mockito . verify ( org.springframework.boot.actuate.autoconfigure.MetricsEndpointMetricReader , Mockito . atLeastOnce ( ) ) . findAll ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . register ( org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfigurationTests.WriterConfig .class , org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfigurationTests.MetricEndpointConfiguration .class , MetricExportAutoConfiguration .class , PropertyPlaceholderAutoConfiguration .class ) ; this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . refresh ( ) ; this . org.springframework.boot.actuate.autoconfigure.ExpectedException . expect ( NoSuchBeanDefinitionException .class ) ; this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( StatsdMetricWriter .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . register ( org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfigurationTests.MetricEndpointConfiguration .class , MetricExportAutoConfiguration .class , PropertyPlaceholderAutoConfiguration .class ) ; this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . refresh ( ) ; StatsdMetricWriter org.springframework.boot.actuate.autoconfigure.StatsdMetricWriter = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( StatsdMetricWriter .class ) ; assertThat ( org.springframework.boot.actuate.autoconfigure.StatsdMetricWriter ) . isNotNull ( ) ; SchedulingConfigurer org.springframework.boot.actuate.autoconfigure.SchedulingConfigurer = this . org.springframework.boot.actuate.autoconfigure.AnnotationConfigApplicationContext . getBean ( SchedulingConfigurer .class ) ; java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> < java.lang.String , GaugeWriter > java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> = ( java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> < java.lang.String , GaugeWriter > ) ReflectionTestUtils . getField ( org.springframework.boot.actuate.autoconfigure.SchedulingConfigurer , STRING ) ; assertThat ( java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.GaugeWriter> ) . containsValue ( org.springframework.boot.actuate.autoconfigure.StatsdMetricWriter ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.autoconfigure.SubscribableChannel org.springframework.boot.actuate.autoconfigure.SubscribableChannel ( ) { return new FixedSubscriberChannel ( new MessageHandler ( ) { @ java.lang.Override public void void ( Message < ? > org.springframework.boot.actuate.autoconfigure.Message<?> ) throws org.springframework.boot.actuate.autoconfigure.MessagingException {				} } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message < ? > org.springframework.boot.actuate.autoconfigure.Message<?> ) throws org.springframework.boot.actuate.autoconfigure.MessagingException {				}  <METHOD_END>
<METHOD_START> @ Bean @ ExportMetricWriter public org.springframework.boot.actuate.autoconfigure.MetricWriter org.springframework.boot.actuate.autoconfigure.MetricWriter ( ) { return Mockito . mock ( MetricWriter .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ExportMetricReader public org.springframework.boot.actuate.autoconfigure.MetricsEndpointMetricReader org.springframework.boot.actuate.autoconfigure.MetricsEndpointMetricReader ( ) { return Mockito . mock ( MetricsEndpointMetricReader .class ) ; }  <METHOD_END>
