<METHOD_START> @ Before public void void ( ) { org.springframework.data.mongodb.core.convert.MongoOperations . dropCollection ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper = new org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper ( ) ; org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper . java.util.UUID = java.util.UUID . java.util.UUID ( ) ; org.springframework.data.mongodb.core.convert.MongoOperations . save ( org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper ) ; assertThat ( org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper . java.lang.String , is ( notNullValue ( ) ) ) ; org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper = org.springframework.data.mongodb.core.convert.MongoOperations . findOne ( Query . query ( Criteria . where ( STRING ) . is ( org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper . java.lang.String ) ) , org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper .class ) ; assertThat ( org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper . java.util.UUID , is ( org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests.Wrapper . java.util.UUID ) ) ; }  <METHOD_END>
