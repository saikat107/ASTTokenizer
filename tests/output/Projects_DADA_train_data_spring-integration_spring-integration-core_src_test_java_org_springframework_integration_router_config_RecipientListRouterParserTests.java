<METHOD_START> @ Test public void void ( ) { org.springframework.integration.router.config.ConfigurableApplicationContext . start ( ) ; Message < ? > org.springframework.integration.router.config.Message<?> = new GenericMessage < java.lang.Integer > ( NUMBER ) ; org.springframework.integration.router.config.MessageChannel . send ( org.springframework.integration.router.config.Message<> ) ; PollableChannel org.springframework.integration.router.config.PollableChannel = ( PollableChannel ) org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; PollableChannel org.springframework.integration.router.config.PollableChannel = ( PollableChannel ) org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; assertTrue ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) . getPayload ( ) . equals ( NUMBER ) ) ; assertTrue ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) . getPayload ( ) . equals ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( java.lang.Object , STRING ) ; assertEquals ( RecipientListRouter .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; RecipientListRouter org.springframework.integration.router.config.RecipientListRouter = ( RecipientListRouter ) java.lang.Object ; DirectFieldAccessor org.springframework.integration.router.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.router.config.RecipientListRouter ) ; assertEquals ( new java.lang.Long ( - NUMBER ) , new DirectFieldAccessor ( org.springframework.integration.router.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) . getPropertyValue ( STRING ) ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.router.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.router.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( java.lang.Object , STRING ) ; assertEquals ( RecipientListRouter .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; RecipientListRouter org.springframework.integration.router.config.RecipientListRouter = ( RecipientListRouter ) java.lang.Object ; DirectFieldAccessor org.springframework.integration.router.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.router.config.RecipientListRouter ) ; assertEquals ( new java.lang.Long ( NUMBER ) , new DirectFieldAccessor ( org.springframework.integration.router.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) . getPropertyValue ( STRING ) ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.router.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.router.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.integration.router.config.ConfigurableApplicationContext . start ( ) ; Message < ? > org.springframework.integration.router.config.Message<?> = new GenericMessage < java.lang.Integer > ( NUMBER ) ; org.springframework.integration.router.config.MessageChannel . send ( org.springframework.integration.router.config.Message<> ) ; PollableChannel org.springframework.integration.router.config.PollableChannel = ( PollableChannel ) org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; PollableChannel org.springframework.integration.router.config.PollableChannel = ( PollableChannel ) org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; assertTrue ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) . getPayload ( ) . equals ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.integration.router.config.ConfigurableApplicationContext . start ( ) ; Message < ? > org.springframework.integration.router.config.Message<?> = new GenericMessage < java.lang.Integer > ( NUMBER ) ; org.springframework.integration.router.config.MessageChannel . send ( org.springframework.integration.router.config.Message<> ) ; PollableChannel org.springframework.integration.router.config.PollableChannel = ( PollableChannel ) org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; PollableChannel org.springframework.integration.router.config.PollableChannel = ( PollableChannel ) org.springframework.integration.router.config.ConfigurableApplicationContext . getBean ( STRING ) ; Message < ? > org.springframework.integration.router.config.Message<?> = org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.router.config.Message<> ) ; assertTrue ( org.springframework.integration.router.config.Message<> . getPayload ( ) . equals ( NUMBER ) ) ; assertNull ( org.springframework.integration.router.config.PollableChannel . receive ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( int int ) { return int == NUMBER ; }  <METHOD_END>
