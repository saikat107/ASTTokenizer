<METHOD_START> @ java.lang.Override protected org.springframework.integration.config.xml.BeanDefinition org.springframework.integration.config.xml.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( RecipientListRouter .class ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING ) ; ManagedList < BeanDefinition > org.springframework.integration.config.xml.ManagedList<org.springframework.integration.config.xml.BeanDefinition> = new ManagedList < BeanDefinition > ( ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( Recipient .class ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgReference ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { BeanDefinition org.springframework.integration.config.xml.BeanDefinition = new RootBeanDefinition ( ExpressionEvaluatingSelector .class ) ; org.springframework.integration.config.xml.BeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( java.lang.String ) ; java.lang.String java.lang.String = org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . registerWithGeneratedName ( org.springframework.integration.config.xml.BeanDefinition ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } org.springframework.integration.config.xml.ManagedList<org.springframework.integration.config.xml.BeanDefinition> . add ( org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; } if ( org.springframework.integration.config.xml.ManagedList<org.springframework.integration.config.xml.BeanDefinition> . size ( ) > NUMBER ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.config.xml.ManagedList<org.springframework.integration.config.xml.BeanDefinition> ) ; } return org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
