<METHOD_START> public void ( PersistentEntities org.springframework.data.rest.core.support.PersistentEntities , EntityLinks org.springframework.data.rest.core.support.EntityLinks , java.util.List<? extends org.springframework.data.rest.core.support.EntityLookup<?>> < ? extends EntityLookup < ? > > java.util.List<? extends org.springframework.data.rest.core.support.EntityLookup<?>> ) { Assert . notNull ( org.springframework.data.rest.core.support.PersistentEntities , STRING ) ; Assert . notNull ( org.springframework.data.rest.core.support.EntityLinks , STRING ) ; Assert . notNull ( java.util.List<> , STRING ) ; this . org.springframework.data.rest.core.support.PersistentEntities = org.springframework.data.rest.core.support.PersistentEntities ; this . org.springframework.data.rest.core.support.EntityLinks = org.springframework.data.rest.core.support.EntityLinks ; this . org.springframework.data.rest.core.support.Java8PluginRegistry<org.springframework.data.rest.core.support.EntityLookup<?>,java.lang.Class<?>> = Java8PluginRegistry . of ( java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.core.support.Link org.springframework.data.rest.core.support.Link ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return org.springframework.data.rest.core.support.EntityLinks . linkToSingleResource ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) , java.lang.Object ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { java.lang.Class<? extends java.lang.Object> < ? extends java.lang.Object > java.lang.Class<? extends java.lang.Object> = java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ; return org.springframework.data.rest.core.support.Java8PluginRegistry<org.springframework.data.rest.core.support.EntityLookup<?>,java.lang.Class<?>> . getPluginFor ( java.lang.Class<> ) . map ( it -> it . getClass ( ) . cast ( it ) ) . map ( it -> ( Object ) it . getResourceIdentifier ( instance ) ) . orElseGet ( ( ) identifierOrNull ( instance ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { return org.springframework.data.rest.core.support.PersistentEntities . getRequiredPersistentEntity ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) . getIdentifierAccessor ( java.lang.Object ) . getIdentifier ( ) . orElse ( null ) ; }  <METHOD_END>
