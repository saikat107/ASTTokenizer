<METHOD_START> public void ( Part org.springframework.data.neo4j.repository.query.derived.builder.Part , BooleanOperator org.springframework.data.neo4j.repository.query.derived.builder.BooleanOperator , java.lang.Class<?> < ? > java.lang.Class<?> ) { super( org.springframework.data.neo4j.repository.query.derived.builder.Part , org.springframework.data.neo4j.repository.query.derived.builder.BooleanOperator , java.lang.Class<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.data.neo4j.repository.query.derived.builder.Filter> < Filter > java.util.List<org.springframework.data.neo4j.repository.query.derived.builder.Filter> ( java.util.Stack<java.lang.Object> < java.lang.Object > java.util.Stack<java.lang.Object> ) { Filter org.springframework.data.neo4j.repository.query.derived.builder.Filter = new Filter ( propertyName ( ) , ComparisonOperator . IS_TRUE ) ; org.springframework.data.neo4j.repository.query.derived.builder.Filter . setOwnerEntityType ( entityType ) ; org.springframework.data.neo4j.repository.query.derived.builder.Filter . setBooleanOperator ( booleanOperator ) ; org.springframework.data.neo4j.repository.query.derived.builder.Filter . setNegated ( isNegated ( ) || part . getType ( ) == FALSE ) ; setNestedAttributes ( part , org.springframework.data.neo4j.repository.query.derived.builder.Filter ) ; return java.util.Collections . java.util.List ( org.springframework.data.neo4j.repository.query.derived.builder.Filter ) ; }  <METHOD_END>
