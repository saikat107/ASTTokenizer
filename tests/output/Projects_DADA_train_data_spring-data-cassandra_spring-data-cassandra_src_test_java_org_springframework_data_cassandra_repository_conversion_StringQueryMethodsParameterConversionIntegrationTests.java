<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> < Contact > java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> = org.springframework.data.cassandra.repository.conversion.StringQueryMethodsParameterConversionIntegrationTests.ContactStringQueryRepository . java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( walter . getAddress ( ) ) ; assertThat ( java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ) . contains ( walter , flynn ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = AddressWriteConverter . INSTANCE . convert ( walter . getAddress ( ) ) ; java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> < Contact > java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> = org.springframework.data.cassandra.repository.conversion.StringQueryMethodsParameterConversionIntegrationTests.ContactStringQueryRepository . java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( java.lang.String ) ; assertThat ( java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ) . contains ( walter , flynn ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.cassandra.repository.conversion.StringQueryMethodsParameterConversionIntegrationTests.ContactStringQueryRepository . java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( flynn . address ) ) . contains ( flynn , walter ) ; assertThat ( org.springframework.data.cassandra.repository.conversion.StringQueryMethodsParameterConversionIntegrationTests.ContactStringQueryRepository . java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( walter . addresses . get ( NUMBER ) ) ) . contains ( walter ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.cassandra.repository.conversion.StringQueryMethodsParameterConversionIntegrationTests.ContactStringQueryRepository . java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( walter . getMainPhone ( ) ) ) . contains ( walter ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { KeyspaceMetadata org.springframework.data.cassandra.repository.conversion.KeyspaceMetadata = adminOperations . getKeyspaceMetadata ( ) ; UDTValue org.springframework.data.cassandra.repository.conversion.UDTValue = org.springframework.data.cassandra.repository.conversion.KeyspaceMetadata . getUserType ( STRING ) . newValue ( ) ; org.springframework.data.cassandra.repository.conversion.UDTValue . setString ( STRING , walter . getMainPhone ( ) . getNumber ( ) ) ; assertThat ( org.springframework.data.cassandra.repository.conversion.StringQueryMethodsParameterConversionIntegrationTests.ContactStringQueryRepository . java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( org.springframework.data.cassandra.repository.conversion.UDTValue ) ) . contains ( walter ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Phone org.springframework.data.cassandra.repository.conversion.Phone = walter . getAlternativePhones ( ) . get ( NUMBER ) ; assertThat ( org.springframework.data.cassandra.repository.conversion.StringQueryMethodsParameterConversionIntegrationTests.ContactStringQueryRepository . java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( org.springframework.data.cassandra.repository.conversion.Phone ) ) . contains ( walter ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Phone org.springframework.data.cassandra.repository.conversion.Phone = walter . getAlternativePhones ( ) . get ( NUMBER ) ; KeyspaceMetadata org.springframework.data.cassandra.repository.conversion.KeyspaceMetadata = adminOperations . getKeyspaceMetadata ( ) ; UDTValue org.springframework.data.cassandra.repository.conversion.UDTValue = org.springframework.data.cassandra.repository.conversion.KeyspaceMetadata . getUserType ( STRING ) . newValue ( ) ; org.springframework.data.cassandra.repository.conversion.UDTValue . setString ( STRING , org.springframework.data.cassandra.repository.conversion.Phone . getNumber ( ) ) ; assertThat ( org.springframework.data.cassandra.repository.conversion.StringQueryMethodsParameterConversionIntegrationTests.ContactStringQueryRepository . java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( org.springframework.data.cassandra.repository.conversion.UDTValue ) ) . contains ( walter ) ; }  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> < Contact > java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( Address org.springframework.data.cassandra.repository.conversion.Address );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> < Contact > java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> < Contact > java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( Address org.springframework.data.cassandra.repository.conversion.Address );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> < Contact > java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( Phone org.springframework.data.cassandra.repository.conversion.Phone );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> < Contact > java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( UDTValue org.springframework.data.cassandra.repository.conversion.UDTValue );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> < Contact > java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( Phone org.springframework.data.cassandra.repository.conversion.Phone );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> < Contact > java.util.List<org.springframework.data.cassandra.repository.conversion.Contact> ( UDTValue org.springframework.data.cassandra.repository.conversion.UDTValue );  <METHOD_END>
