<METHOD_START> @ Test public void void ( ) { void ( ResetMocksTestExecutionListenerTests .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( SpyBeanWithAopProxyTests .class ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Result org.springframework.boot.test.mock.mockito.Result = new JUnitCore ( ) . run ( java.lang.Class<> ) ; for ( Failure org.springframework.boot.test.mock.mockito.Failure : org.springframework.boot.test.mock.mockito.Result . getFailures ( ) ) { java.lang.System . java.io.PrintStream . void ( org.springframework.boot.test.mock.mockito.Failure . getTrace ( ) ) ; } assertThat ( org.springframework.boot.test.mock.mockito.Result . getFailureCount ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.boot.test.mock.mockito.Result . getRunCount ( ) ) . isGreaterThan ( NUMBER ) ; }  <METHOD_END>
