<METHOD_START> @ Test public void void ( ) { assertNotNull ( STRING , org.springframework.data.gemfire.repository.sample.AlgorithmRepository ) ; assertNotNull ( STRING , org.springframework.data.gemfire.repository.sample.Region ) ; assertEquals ( STRING , org.springframework.data.gemfire.repository.sample.Region . getName ( ) ) ; assertEquals ( STRING , org.springframework.data.gemfire.repository.sample.Region . getFullPath ( ) ) ; assertTrue ( org.springframework.data.gemfire.repository.sample.Region . isEmpty ( ) ) ; org.springframework.data.gemfire.repository.sample.AlgorithmRepository . save ( new org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.BinarySearch ( ) ) ; org.springframework.data.gemfire.repository.sample.AlgorithmRepository . save ( new org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.HeapSort ( ) ) ; assertFalse ( org.springframework.data.gemfire.repository.sample.Region . isEmpty ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.repository.sample.Region . size ( ) ) ; assertTrue ( org.springframework.data.gemfire.repository.sample.Region . get ( org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.BinarySearch .class . java.lang.String ( ) ) instanceof org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.BinarySearch ) ; assertTrue ( org.springframework.data.gemfire.repository.sample.Region . get ( org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.HeapSort .class . java.lang.String ( ) ) instanceof org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.HeapSort ) ; org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.HeapSort org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.HeapSort = org.springframework.data.gemfire.repository.sample.AlgorithmRepository . findByName ( org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.HeapSort .class . java.lang.String ( ) ) ; assertNotNull ( org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.HeapSort ) ; assertEquals ( org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.HeapSort .class . java.lang.String ( ) , org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.HeapSort . java.lang.String ( ) ) ; org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.BinarySearch org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.BinarySearch = org.springframework.data.gemfire.repository.sample.AlgorithmRepository . findByName ( org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.BinarySearch .class . java.lang.String ( ) ) ; assertNotNull ( org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.BinarySearch ) ; assertEquals ( org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.BinarySearch .class . java.lang.String ( ) , org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.BinarySearch . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.Class<? extends org.springframework.data.gemfire.repository.sample.AlgorithmRepositoryTest.AbstractAlgorithm> ( ) . java.lang.String ( ) ; }  <METHOD_END>
