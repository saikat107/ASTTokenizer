<METHOD_START> @ BeforeClass public static void void ( ) { MappingPdxSerializer org.springframework.data.gemfire.mapping.MappingPdxSerializer = new MappingPdxSerializer ( new GemfireMappingContext ( ) , new DefaultConversionService ( ) ) ; org.springframework.data.gemfire.mapping.Cache = new CacheFactory ( ) . set ( STRING , org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests .class . java.lang.String ( ) ) . set ( STRING , STRING ) . set ( STRING , STRING ) . setPdxSerializer ( org.springframework.data.gemfire.mapping.MappingPdxSerializer ) . setPdxPersistent ( true ) . create ( ) ; org.springframework.data.gemfire.mapping.Region<java.lang.Object,java.lang.Object> = org.springframework.data.gemfire.mapping.Cache . createRegionFactory ( ) . setDataPolicy ( DataPolicy . PERSISTENT_REPLICATE ) . create ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ AfterClass @ java.lang.SuppressWarnings ( STRING ) public static void void ( ) { try { org.springframework.data.gemfire.mapping.Cache . close ( ) ; } catch ( java.lang.Exception java.lang.Exception ) {		} finally { for ( java.lang.String java.lang.String : new java.io.File ( STRING ) . java.lang.String[] ( new java.io.FilenameFilter ( ) { public boolean boolean ( java.io.File java.io.File , java.lang.String java.lang.String ) { return java.lang.String . boolean ( STRING ) ; } } ) ) { new java.io.File ( java.lang.String ) . boolean ( ) ; } } }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.io.File java.io.File , java.lang.String java.lang.String ) { return java.lang.String . boolean ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Address org.springframework.data.gemfire.mapping.Address = new Address ( ) ; address . zipCode = STRING ; address . city = STRING ; Person org.springframework.data.gemfire.mapping.Person = new Person ( NUMBER , STRING , STRING ) ; person . address = org.springframework.data.gemfire.mapping.Address ; org.springframework.data.gemfire.mapping.Region<java.lang.Object,java.lang.Object> . put ( NUMBER , org.springframework.data.gemfire.mapping.Person ) ; java.lang.Object java.lang.Object = org.springframework.data.gemfire.mapping.Region<java.lang.Object,java.lang.Object> . get ( NUMBER ) ; assertThat ( java.lang.Object instanceof Person , is ( true ) ) ; Person org.springframework.data.gemfire.mapping.Person = org.springframework.data.gemfire.mapping.Person ; assertThat ( org.springframework.data.gemfire.mapping.Person . getFirstname ( ) , is ( org.springframework.data.gemfire.mapping.Person . getFirstname ( ) ) ) ; assertThat ( org.springframework.data.gemfire.mapping.Person . getLastname ( ) , is ( org.springframework.data.gemfire.mapping.Person . getLastname ( ) ) ) ; assertThat ( reference . address , is ( person . address ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Address org.springframework.data.gemfire.mapping.Address = new Address ( ) ; address . zipCode = STRING ; address . city = STRING ; org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty = new org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty ( NUMBER , STRING , STRING , new org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.DataSerializableProperty ( STRING ) ) ; org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty . address = org.springframework.data.gemfire.mapping.Address ; org.springframework.data.gemfire.mapping.Region<java.lang.Object,java.lang.Object> . put ( NUMBER , org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty ) ; java.lang.Object java.lang.Object = org.springframework.data.gemfire.mapping.Region<java.lang.Object,java.lang.Object> . get ( NUMBER ) ; assertThat ( java.lang.Object instanceof org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty , is ( true ) ) ; org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty = org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty ; assertThat ( org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty . getFirstname ( ) , is ( org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty . getFirstname ( ) ) ) ; assertThat ( org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty . getLastname ( ) , is ( org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty . getLastname ( ) ) ) ; assertThat ( org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty . address , is ( org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty . address ) ) ; assertThat ( org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.PersonWithDataSerializableProperty . org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.DataSerializableProperty . java.lang.String ( ) , is ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Long java.lang.Long , java.lang.String java.lang.String , java.lang.String java.lang.String , org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.DataSerializableProperty org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.DataSerializableProperty ) { super( java.lang.Long , java.lang.String , java.lang.String ); this . org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.DataSerializableProperty = org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.DataSerializableProperty ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.DataSerializableProperty org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.DataSerializableProperty ( ) { return this . org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.DataSerializableProperty ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.mapping.DataSerializable org.springframework.data.gemfire.mapping.DataSerializable ( ) { return new org.springframework.data.gemfire.mapping.MappingPdxSerializerIntegrationTests.DataSerializableProperty ( STRING ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.io.DataInput java.io.DataInput ) throws java.io.IOException , java.lang.ClassNotFoundException { java.lang.String = java.io.DataInput . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.io.DataOutput java.io.DataOutput ) throws java.io.IOException { java.io.DataOutput . void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
