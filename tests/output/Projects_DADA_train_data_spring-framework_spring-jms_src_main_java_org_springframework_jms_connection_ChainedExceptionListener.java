<METHOD_START> public final void void ( ExceptionListener org.springframework.jms.connection.ExceptionListener ) { Assert . notNull ( org.springframework.jms.connection.ExceptionListener , STRING ) ; this . java.util.List<org.springframework.jms.connection.ExceptionListener> . add ( org.springframework.jms.connection.ExceptionListener ) ; }  <METHOD_END>
<METHOD_START> public final org.springframework.jms.connection.ExceptionListener [] org.springframework.jms.connection.ExceptionListener[] ( ) { return this . java.util.List<org.springframework.jms.connection.ExceptionListener> . toArray ( new ExceptionListener [ this . java.util.List<org.springframework.jms.connection.ExceptionListener> . size ( ) ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( JMSException org.springframework.jms.connection.JMSException ) { for ( ExceptionListener org.springframework.jms.connection.ExceptionListener : this . java.util.List<org.springframework.jms.connection.ExceptionListener> ) { org.springframework.jms.connection.ExceptionListener . onException ( org.springframework.jms.connection.JMSException ) ; } }  <METHOD_END>
