<METHOD_START> public void ( MimeMessageHelper org.springframework.mail.javamail.MimeMessageHelper ) { this . org.springframework.mail.javamail.MimeMessageHelper = org.springframework.mail.javamail.MimeMessageHelper ; }  <METHOD_END>
<METHOD_START> public void ( MimeMessage org.springframework.mail.javamail.MimeMessage ) { this . org.springframework.mail.javamail.MimeMessageHelper = new MimeMessageHelper ( org.springframework.mail.javamail.MimeMessage ) ; }  <METHOD_END>
<METHOD_START> public final org.springframework.mail.javamail.MimeMessageHelper org.springframework.mail.javamail.MimeMessageHelper ( ) { return this . org.springframework.mail.javamail.MimeMessageHelper ; }  <METHOD_END>
<METHOD_START> public final org.springframework.mail.javamail.MimeMessage org.springframework.mail.javamail.MimeMessage ( ) { return this . org.springframework.mail.javamail.MimeMessageHelper . getMimeMessage ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.mail.javamail.MailParseException { try { this . org.springframework.mail.javamail.MimeMessageHelper . setFrom ( java.lang.String ) ; } catch ( MessagingException org.springframework.mail.javamail.MessagingException ) { throw new MailParseException ( org.springframework.mail.javamail.MessagingException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.mail.javamail.MailParseException { try { this . org.springframework.mail.javamail.MimeMessageHelper . setReplyTo ( java.lang.String ) ; } catch ( MessagingException org.springframework.mail.javamail.MessagingException ) { throw new MailParseException ( org.springframework.mail.javamail.MessagingException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.mail.javamail.MailParseException { try { this . org.springframework.mail.javamail.MimeMessageHelper . setTo ( java.lang.String ) ; } catch ( MessagingException org.springframework.mail.javamail.MessagingException ) { throw new MailParseException ( org.springframework.mail.javamail.MessagingException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String [] java.lang.String[] ) throws org.springframework.mail.javamail.MailParseException { try { this . org.springframework.mail.javamail.MimeMessageHelper . setTo ( java.lang.String[] ) ; } catch ( MessagingException org.springframework.mail.javamail.MessagingException ) { throw new MailParseException ( org.springframework.mail.javamail.MessagingException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.mail.javamail.MailParseException { try { this . org.springframework.mail.javamail.MimeMessageHelper . setCc ( java.lang.String ) ; } catch ( MessagingException org.springframework.mail.javamail.MessagingException ) { throw new MailParseException ( org.springframework.mail.javamail.MessagingException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String [] java.lang.String[] ) throws org.springframework.mail.javamail.MailParseException { try { this . org.springframework.mail.javamail.MimeMessageHelper . setCc ( java.lang.String[] ) ; } catch ( MessagingException org.springframework.mail.javamail.MessagingException ) { throw new MailParseException ( org.springframework.mail.javamail.MessagingException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.mail.javamail.MailParseException { try { this . org.springframework.mail.javamail.MimeMessageHelper . setBcc ( java.lang.String ) ; } catch ( MessagingException org.springframework.mail.javamail.MessagingException ) { throw new MailParseException ( org.springframework.mail.javamail.MessagingException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String [] java.lang.String[] ) throws org.springframework.mail.javamail.MailParseException { try { this . org.springframework.mail.javamail.MimeMessageHelper . setBcc ( java.lang.String[] ) ; } catch ( MessagingException org.springframework.mail.javamail.MessagingException ) { throw new MailParseException ( org.springframework.mail.javamail.MessagingException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Date java.util.Date ) throws org.springframework.mail.javamail.MailParseException { try { this . org.springframework.mail.javamail.MimeMessageHelper . setSentDate ( java.util.Date ) ; } catch ( MessagingException org.springframework.mail.javamail.MessagingException ) { throw new MailParseException ( org.springframework.mail.javamail.MessagingException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.mail.javamail.MailParseException { try { this . org.springframework.mail.javamail.MimeMessageHelper . setSubject ( java.lang.String ) ; } catch ( MessagingException org.springframework.mail.javamail.MessagingException ) { throw new MailParseException ( org.springframework.mail.javamail.MessagingException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws org.springframework.mail.javamail.MailParseException { try { this . org.springframework.mail.javamail.MimeMessageHelper . setText ( java.lang.String ) ; } catch ( MessagingException org.springframework.mail.javamail.MessagingException ) { throw new MailParseException ( org.springframework.mail.javamail.MessagingException ) ; } }  <METHOD_END>
