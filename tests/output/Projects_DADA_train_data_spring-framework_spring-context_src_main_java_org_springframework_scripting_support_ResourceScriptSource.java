<METHOD_START> public void ( EncodedResource org.springframework.scripting.support.EncodedResource ) { Assert . notNull ( org.springframework.scripting.support.EncodedResource , STRING ) ; this . org.springframework.scripting.support.EncodedResource = org.springframework.scripting.support.EncodedResource ; }  <METHOD_END>
<METHOD_START> public void ( Resource org.springframework.scripting.support.Resource ) { Assert . notNull ( org.springframework.scripting.support.Resource , STRING ) ; this . org.springframework.scripting.support.EncodedResource = new EncodedResource ( org.springframework.scripting.support.Resource , STRING ) ; }  <METHOD_END>
<METHOD_START> public final org.springframework.scripting.support.Resource org.springframework.scripting.support.Resource ( ) { return this . org.springframework.scripting.support.EncodedResource . getResource ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.scripting.support.EncodedResource = new EncodedResource ( this . org.springframework.scripting.support.EncodedResource . getResource ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) java.io.IOException { synchronized ( this . java.lang.Object ) { this . long = long ( ) ; } java.io.Reader java.io.Reader = this . org.springframework.scripting.support.EncodedResource . getReader ( ) ; return FileCopyUtils . copyToString ( java.io.Reader ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { synchronized ( this . java.lang.Object ) { return ( this . long < NUMBER || long ( ) > this . long ) ; } }  <METHOD_END>
<METHOD_START> protected long long ( ) { try { return org.springframework.scripting.support.Resource ( ) . lastModified ( ) ; } catch ( java.io.IOException java.io.IOException ) { if ( org.springframework.scripting.support.Log . isDebugEnabled ( ) ) { org.springframework.scripting.support.Log . debug ( org.springframework.scripting.support.Resource ( ) + STRING + STRING , java.io.IOException ) ; } return NUMBER ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return StringUtils . stripFilenameExtension ( org.springframework.scripting.support.Resource ( ) . getFilename ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.scripting.support.EncodedResource . toString ( ) ; }  <METHOD_END>
