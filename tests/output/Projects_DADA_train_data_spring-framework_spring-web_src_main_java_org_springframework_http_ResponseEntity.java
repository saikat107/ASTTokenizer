<METHOD_START> public void ( HttpStatus org.springframework.http.HttpStatus ) { this( null , null , org.springframework.http.HttpStatus ); }  <METHOD_END>
<METHOD_START> public void ( T T , HttpStatus org.springframework.http.HttpStatus ) { this( T , null , org.springframework.http.HttpStatus ); }  <METHOD_END>
<METHOD_START> public void ( MultiValueMap < java.lang.String , java.lang.String > org.springframework.http.MultiValueMap<java.lang.String,java.lang.String> , HttpStatus org.springframework.http.HttpStatus ) { this( null , org.springframework.http.MultiValueMap<java.lang.String,java.lang.String> , org.springframework.http.HttpStatus ); }  <METHOD_END>
<METHOD_START> public void ( T T , MultiValueMap < java.lang.String , java.lang.String > org.springframework.http.MultiValueMap<java.lang.String,java.lang.String> , HttpStatus org.springframework.http.HttpStatus ) { super( T , org.springframework.http.MultiValueMap<java.lang.String,java.lang.String> ); Assert . notNull ( org.springframework.http.HttpStatus , STRING ) ; this . java.lang.Object = org.springframework.http.HttpStatus ; }  <METHOD_END>
<METHOD_START> private void ( T T , MultiValueMap < java.lang.String , java.lang.String > org.springframework.http.MultiValueMap<java.lang.String,java.lang.String> , java.lang.Object java.lang.Object ) { super( T , org.springframework.http.MultiValueMap<java.lang.String,java.lang.String> ); this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.HttpStatus org.springframework.http.HttpStatus ( ) { if ( this . java.lang.Object instanceof HttpStatus ) { return ( HttpStatus ) this . java.lang.Object ; } else { return HttpStatus . valueOf ( ( java.lang.Integer ) this . java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> public int int ( ) { if ( this . java.lang.Object instanceof HttpStatus ) { return ( ( HttpStatus ) this . java.lang.Object ) . value ( ) ; } else { return ( java.lang.Integer ) this . java.lang.Object ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! super. boolean ( java.lang.Object ) ) { return false ; } org.springframework.http.ResponseEntity<?> < ? > org.springframework.http.ResponseEntity<?> = ( org.springframework.http.ResponseEntity<?> < ? > ) java.lang.Object ; return ObjectUtils . nullSafeEquals ( this . java.lang.Object , org.springframework.http.ResponseEntity<> . java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ( super. int ( ) * NUMBER + ObjectUtils . nullSafeHashCode ( this . java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( this . java.lang.Object . java.lang.String ( ) ) ; if ( this . java.lang.Object instanceof HttpStatus ) { java.lang.StringBuilder . java.lang.StringBuilder ( ' ' ) ; java.lang.StringBuilder . java.lang.StringBuilder ( ( ( HttpStatus ) this . java.lang.Object ) . getReasonPhrase ( ) ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( ',' ) ; T T = getBody ( ) ; HttpHeaders org.springframework.http.HttpHeaders = getHeaders ( ) ; if ( T != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( T ) ; if ( org.springframework.http.HttpHeaders != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( ',' ) ; } } if ( org.springframework.http.HttpHeaders != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( org.springframework.http.HttpHeaders ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( '>' ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( HttpStatus org.springframework.http.HttpStatus ) { Assert . notNull ( org.springframework.http.HttpStatus , STRING ) ; return new org.springframework.http.ResponseEntity.DefaultBuilder ( org.springframework.http.HttpStatus ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( int int ) { return new org.springframework.http.ResponseEntity.DefaultBuilder ( int ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( ) { return org.springframework.http.ResponseEntity.BodyBuilder ( HttpStatus . OK ) ; }  <METHOD_END>
<METHOD_START> public static < T > org.springframework.http.ResponseEntity<T> < T > org.springframework.http.ResponseEntity<T> ( T T ) { org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder = org.springframework.http.ResponseEntity.BodyBuilder ( ) ; return org.springframework.http.ResponseEntity.BodyBuilder . org.springframework.http.ResponseEntity<T> ( T ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( java.net.URI java.net.URI ) { org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder = org.springframework.http.ResponseEntity.BodyBuilder ( HttpStatus . CREATED ) ; return org.springframework.http.ResponseEntity.BodyBuilder . org.springframework.http.ResponseEntity.BodyBuilder ( java.net.URI ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( ) { return org.springframework.http.ResponseEntity.BodyBuilder ( HttpStatus . ACCEPTED ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.ResponseEntity.HeadersBuilder<?> < ? > org.springframework.http.ResponseEntity.HeadersBuilder<?> ( ) { return org.springframework.http.ResponseEntity.BodyBuilder ( HttpStatus . NO_CONTENT ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( ) { return org.springframework.http.ResponseEntity.BodyBuilder ( HttpStatus . BAD_REQUEST ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.ResponseEntity.HeadersBuilder<?> < ? > org.springframework.http.ResponseEntity.HeadersBuilder<?> ( ) { return org.springframework.http.ResponseEntity.BodyBuilder ( HttpStatus . NOT_FOUND ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( ) { return org.springframework.http.ResponseEntity.BodyBuilder ( HttpStatus . UNPROCESSABLE_ENTITY ) ; }  <METHOD_END>
<METHOD_START> B B ( java.lang.String java.lang.String , java.lang.String ... java.lang.String[] );  <METHOD_END>
<METHOD_START> B B ( HttpHeaders org.springframework.http.HttpHeaders );  <METHOD_END>
<METHOD_START> B B ( HttpMethod ... org.springframework.http.HttpMethod[] );  <METHOD_END>
<METHOD_START> B B ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> B B ( long long );  <METHOD_END>
<METHOD_START> B B ( java.net.URI java.net.URI );  <METHOD_END>
<METHOD_START> B B ( CacheControl org.springframework.http.CacheControl );  <METHOD_END>
<METHOD_START> B B ( java.lang.String ... java.lang.String[] );  <METHOD_END>
<METHOD_START> < T > org.springframework.http.ResponseEntity<T> < T > org.springframework.http.ResponseEntity<T> ( )  <METHOD_END>
<METHOD_START> org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( long long );  <METHOD_END>
<METHOD_START> org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( MediaType org.springframework.http.MediaType );  <METHOD_END>
<METHOD_START> < T > org.springframework.http.ResponseEntity<T> < T > org.springframework.http.ResponseEntity<T> ( T T );  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( java.lang.String java.lang.String , java.lang.String ... java.lang.String[] ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { this . org.springframework.http.HttpHeaders . add ( java.lang.String , java.lang.String ) ; } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( HttpHeaders org.springframework.http.HttpHeaders ) { if ( org.springframework.http.HttpHeaders != null ) { this . org.springframework.http.HttpHeaders . putAll ( org.springframework.http.HttpHeaders ) ; } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( HttpMethod ... org.springframework.http.HttpMethod[] ) { this . org.springframework.http.HttpHeaders . setAllow ( new java.util.LinkedHashSet <> ( java.util.Arrays . java.util.List ( org.springframework.http.HttpMethod[] ) ) ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( long long ) { this . org.springframework.http.HttpHeaders . setContentLength ( long ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( MediaType org.springframework.http.MediaType ) { this . org.springframework.http.HttpHeaders . setContentType ( org.springframework.http.MediaType ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( java.lang.String java.lang.String ) { if ( java.lang.String != null ) { if ( ! java.lang.String . boolean ( STRING ) && ! java.lang.String . boolean ( STRING ) ) { java.lang.String = STRING + java.lang.String ; } if ( ! java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String + STRING ; } } this . org.springframework.http.HttpHeaders . setETag ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( long long ) { this . org.springframework.http.HttpHeaders . setLastModified ( long ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( java.net.URI java.net.URI ) { this . org.springframework.http.HttpHeaders . setLocation ( java.net.URI ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( CacheControl org.springframework.http.CacheControl ) { java.lang.String java.lang.String = org.springframework.http.CacheControl . getHeaderValue ( ) ; if ( java.lang.String != null ) { this . org.springframework.http.HttpHeaders . setCacheControl ( org.springframework.http.CacheControl . getHeaderValue ( ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.ResponseEntity.BodyBuilder org.springframework.http.ResponseEntity.BodyBuilder ( java.lang.String ... java.lang.String[] ) { this . org.springframework.http.HttpHeaders . setVary ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > org.springframework.http.ResponseEntity<T> < T > org.springframework.http.ResponseEntity<T> ( ) { return org.springframework.http.ResponseEntity<T> ( null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > org.springframework.http.ResponseEntity<T> < T > org.springframework.http.ResponseEntity<T> ( T T ) { return new org.springframework.http.ResponseEntity <> ( T , this . org.springframework.http.HttpHeaders , this . java.lang.Object ) ; }  <METHOD_END>
