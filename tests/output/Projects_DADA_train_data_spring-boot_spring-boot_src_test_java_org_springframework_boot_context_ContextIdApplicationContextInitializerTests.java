<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.boot.context.ConfigurableApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.context.ContextIdApplicationContextInitializer . initialize ( org.springframework.boot.context.ConfigurableApplicationContext ) ; assertThat ( org.springframework.boot.context.ConfigurableApplicationContext . getId ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.boot.context.ConfigurableApplicationContext = new AnnotationConfigApplicationContext ( ) ; TestPropertySourceUtils . addInlinedPropertiesToEnvironment ( org.springframework.boot.context.ConfigurableApplicationContext , STRING , STRING ) ; this . org.springframework.boot.context.ContextIdApplicationContextInitializer . initialize ( org.springframework.boot.context.ConfigurableApplicationContext ) ; assertThat ( org.springframework.boot.context.ConfigurableApplicationContext . getId ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.boot.context.ConfigurableApplicationContext = new AnnotationConfigApplicationContext ( ) ; TestPropertySourceUtils . addInlinedPropertiesToEnvironment ( org.springframework.boot.context.ConfigurableApplicationContext , STRING , STRING , STRING ) ; this . org.springframework.boot.context.ContextIdApplicationContextInitializer . initialize ( org.springframework.boot.context.ConfigurableApplicationContext ) ; assertThat ( org.springframework.boot.context.ConfigurableApplicationContext . getId ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.boot.context.ConfigurableApplicationContext = new AnnotationConfigApplicationContext ( ) ; TestPropertySourceUtils . addInlinedPropertiesToEnvironment ( org.springframework.boot.context.ConfigurableApplicationContext , STRING , STRING , STRING , STRING ) ; this . org.springframework.boot.context.ContextIdApplicationContextInitializer . initialize ( org.springframework.boot.context.ConfigurableApplicationContext ) ; assertThat ( org.springframework.boot.context.ConfigurableApplicationContext . getId ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.boot.context.ConfigurableApplicationContext = new AnnotationConfigApplicationContext ( ) ; TestPropertySourceUtils . addInlinedPropertiesToEnvironment ( org.springframework.boot.context.ConfigurableApplicationContext , STRING , STRING , STRING , STRING , STRING ) ; this . org.springframework.boot.context.ContextIdApplicationContextInitializer . initialize ( org.springframework.boot.context.ConfigurableApplicationContext ) ; assertThat ( org.springframework.boot.context.ConfigurableApplicationContext . getId ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
