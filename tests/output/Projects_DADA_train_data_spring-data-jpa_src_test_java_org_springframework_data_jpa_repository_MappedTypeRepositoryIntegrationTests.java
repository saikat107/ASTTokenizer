<METHOD_START> @ Test public void void ( ) { org.springframework.data.jpa.repository.ConcreteRepository1 . save ( new ConcreteType1 ( STRING ) ) ; org.springframework.data.jpa.repository.ConcreteRepository2 . save ( new ConcreteType2 ( STRING ) ) ; java.util.List<org.springframework.data.jpa.repository.ConcreteType1> < ConcreteType1 > java.util.List<org.springframework.data.jpa.repository.ConcreteType1> = org.springframework.data.jpa.repository.ConcreteRepository1 . findAllByAttribute1 ( STRING ) ; java.util.List<org.springframework.data.jpa.repository.ConcreteType2> < ConcreteType2 > java.util.List<org.springframework.data.jpa.repository.ConcreteType2> = org.springframework.data.jpa.repository.ConcreteRepository2 . findAllByAttribute1 ( STRING ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.ConcreteType1> . size ( ) , is ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.jpa.repository.ConcreteType2> . size ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.jpa.repository.ConcreteRepository1 . save ( new ConcreteType1 ( STRING ) ) ; org.springframework.data.jpa.repository.ConcreteRepository2 . save ( new ConcreteType2 ( STRING ) ) ; Page < ConcreteType2 > org.springframework.data.jpa.repository.Page<org.springframework.data.jpa.repository.ConcreteType2> = org.springframework.data.jpa.repository.ConcreteRepository2 . findByAttribute1Custom ( STRING , PageRequest . of ( NUMBER , NUMBER , Sort . Direction . DESC , STRING ) ) ; assertThat ( org.springframework.data.jpa.repository.Page<org.springframework.data.jpa.repository.ConcreteType2> . getNumberOfElements ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
