<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected java.lang.Object java.lang.Object ( final java.lang.String java.lang.String ) { return java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.System . java.io.PrintStream . java.io.PrintStream ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ; assertNotNull ( STRING , org.springframework.data.gemfire.DiskStore ) ; assertEquals ( java.lang.Object ( STRING ) , org.springframework.data.gemfire.DiskStore . getAllowForceCompaction ( ) ) ; assertEquals ( java.lang.Object ( STRING ) , org.springframework.data.gemfire.DiskStore . getAutoCompact ( ) ) ; assertEquals ( java.lang.Object ( STRING ) , org.springframework.data.gemfire.DiskStore . getCompactionThreshold ( ) ) ; assertEquals ( java.lang.Object ( STRING ) , org.springframework.data.gemfire.DiskStore . getMaxOplogSize ( ) ) ; assertEquals ( STRING , org.springframework.data.gemfire.DiskStore . getName ( ) ) ; assertEquals ( java.lang.Object ( STRING ) , org.springframework.data.gemfire.DiskStore . getQueueSize ( ) ) ; assertEquals ( java.lang.Object ( STRING ) , org.springframework.data.gemfire.DiskStore . getTimeInterval ( ) ) ; assertEquals ( java.lang.Object ( STRING ) , org.springframework.data.gemfire.DiskStore . getWriteBufferSize ( ) ) ; }  <METHOD_END>
