<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( ) { java.lang.String java.lang.String = java.lang.String ( ) ; try { java.lang.Class<? extends org.springframework.transaction.config.JtaTransactionManager> < ? extends JtaTransactionManager > java.lang.Class<? extends org.springframework.transaction.config.JtaTransactionManager> = ( java.lang.Class<? extends org.springframework.transaction.config.JtaTransactionManager> < ? extends JtaTransactionManager > ) ClassUtils . forName ( java.lang.String , org.springframework.transaction.config.JtaTransactionManagerFactoryBean .class . java.lang.ClassLoader ( ) ) ; this . org.springframework.transaction.config.JtaTransactionManager = BeanUtils . instantiateClass ( java.lang.Class<> ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { throw new java.lang.IllegalStateException ( STRING + java.lang.String , java.lang.ClassNotFoundException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.transaction.config.JtaTransactionManager org.springframework.transaction.config.JtaTransactionManager ( ) { return this . org.springframework.transaction.config.JtaTransactionManager ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return ( this . org.springframework.transaction.config.JtaTransactionManager != null ? this . org.springframework.transaction.config.JtaTransactionManager . getClass ( ) : JtaTransactionManager .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> static java.lang.String java.lang.String ( ) { if ( boolean ) { return java.lang.String ; } else if ( boolean ) { return java.lang.String ; } else { return java.lang.String ; } }  <METHOD_END>
