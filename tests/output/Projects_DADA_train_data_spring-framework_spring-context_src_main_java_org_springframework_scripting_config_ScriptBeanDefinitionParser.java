<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected org.springframework.scripting.config.AbstractBeanDefinition org.springframework.scripting.config.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.scripting.config.ParserContext ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( org.w3c.dom.Element , org.springframework.scripting.config.ParserContext . getReaderContext ( ) ) ; if ( java.lang.String == null ) { return null ; } LangNamespaceUtils . registerScriptFactoryPostProcessorIfNecessary ( org.springframework.scripting.config.ParserContext . getRegistry ( ) ) ; GenericBeanDefinition org.springframework.scripting.config.GenericBeanDefinition = new GenericBeanDefinition ( ) ; org.springframework.scripting.config.GenericBeanDefinition . setBeanClassName ( this . java.lang.String ) ; org.springframework.scripting.config.GenericBeanDefinition . setSource ( org.springframework.scripting.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; org.springframework.scripting.config.GenericBeanDefinition . setAttribute ( ScriptFactoryPostProcessor . LANGUAGE_ATTRIBUTE , org.w3c.dom.Element . java.lang.String ( ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.scripting.config.GenericBeanDefinition . setScope ( java.lang.String ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; int int = org.springframework.scripting.config.ParserContext . getDelegate ( ) . getAutowireMode ( java.lang.String ) ; if ( int == GenericBeanDefinition . AUTOWIRE_AUTODETECT ) { int = GenericBeanDefinition . AUTOWIRE_BY_TYPE ; } else if ( int == GenericBeanDefinition . AUTOWIRE_CONSTRUCTOR ) { int = GenericBeanDefinition . AUTOWIRE_NO ; } org.springframework.scripting.config.GenericBeanDefinition . setAutowireMode ( int ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.scripting.config.GenericBeanDefinition . setDependsOn ( StringUtils . tokenizeToStringArray ( java.lang.String , BeanDefinitionParserDelegate . MULTI_VALUE_ATTRIBUTE_DELIMITERS ) ) ; } BeanDefinitionDefaults org.springframework.scripting.config.BeanDefinitionDefaults = org.springframework.scripting.config.ParserContext . getDelegate ( ) . getBeanDefinitionDefaults ( ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.scripting.config.GenericBeanDefinition . setInitMethodName ( java.lang.String ) ; } else if ( org.springframework.scripting.config.BeanDefinitionDefaults . getInitMethodName ( ) != null ) { org.springframework.scripting.config.GenericBeanDefinition . setInitMethodName ( org.springframework.scripting.config.BeanDefinitionDefaults . getInitMethodName ( ) ) ; } if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; org.springframework.scripting.config.GenericBeanDefinition . setDestroyMethodName ( java.lang.String ) ; } else if ( org.springframework.scripting.config.BeanDefinitionDefaults . getDestroyMethodName ( ) != null ) { org.springframework.scripting.config.GenericBeanDefinition . setDestroyMethodName ( org.springframework.scripting.config.BeanDefinitionDefaults . getDestroyMethodName ( ) ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.scripting.config.GenericBeanDefinition . setAttribute ( ScriptFactoryPostProcessor . REFRESH_CHECK_DELAY_ATTRIBUTE , java.lang.Long . java.lang.Long ( java.lang.String ) ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.scripting.config.GenericBeanDefinition . setAttribute ( ScriptFactoryPostProcessor . PROXY_TARGET_CLASS_ATTRIBUTE , java.lang.Boolean . java.lang.Boolean ( java.lang.String ) ) ; } ConstructorArgumentValues org.springframework.scripting.config.ConstructorArgumentValues = org.springframework.scripting.config.GenericBeanDefinition . getConstructorArgumentValues ( ) ; int int = NUMBER ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.scripting.config.ConstructorArgumentValues . addIndexedArgumentValue ( int ++ , java.lang.String ) ; } org.springframework.scripting.config.ConstructorArgumentValues . addIndexedArgumentValue ( int ++ , java.lang.String ) ; if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { org.springframework.scripting.config.ConstructorArgumentValues . addIndexedArgumentValue ( int ++ , org.w3c.dom.Element . java.lang.String ( java.lang.String ) , STRING ) ; } if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { org.springframework.scripting.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } else { org.springframework.scripting.config.ConstructorArgumentValues . addIndexedArgumentValue ( int ++ , new RuntimeBeanReference ( java.lang.String ) ) ; } } org.springframework.scripting.config.ParserContext . getDelegate ( ) . parsePropertyElements ( org.w3c.dom.Element , org.springframework.scripting.config.GenericBeanDefinition ) ; return org.springframework.scripting.config.GenericBeanDefinition ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element , XmlReaderContext org.springframework.scripting.config.XmlReaderContext ) { boolean boolean = org.w3c.dom.Element . boolean ( java.lang.String ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; if ( boolean && ! java.util.List<org.w3c.dom.Element> . boolean ( ) ) { org.springframework.scripting.config.XmlReaderContext . error ( STRING , org.w3c.dom.Element ) ; return null ; } else if ( boolean ) { return org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; } else if ( ! java.util.List<org.w3c.dom.Element> . boolean ( ) ) { org.w3c.dom.Element org.w3c.dom.Element = java.util.List<org.w3c.dom.Element> . org.w3c.dom.Element ( NUMBER ) ; return STRING + DomUtils . getTextValue ( org.w3c.dom.Element ) ; } else { org.springframework.scripting.config.XmlReaderContext . error ( STRING , org.w3c.dom.Element ) ; return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
