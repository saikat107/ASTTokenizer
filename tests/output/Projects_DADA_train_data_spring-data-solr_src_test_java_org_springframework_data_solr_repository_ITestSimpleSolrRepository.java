<METHOD_START> @ Before public void void ( ) { SolrTemplate org.springframework.data.solr.repository.SolrTemplate = new SolrTemplate ( server ) ; org.springframework.data.solr.repository.SolrTemplate . afterPropertiesSet ( ) ; org.springframework.data.solr.repository.ExampleSolrBeanRepository = new ExampleSolrBeanRepository ( org.springframework.data.solr.repository.SolrTemplate , ExampleSolrBean .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ExampleSolrBean org.springframework.data.solr.repository.ExampleSolrBean = createDefaultExampleBean ( ) ; ExampleSolrBean org.springframework.data.solr.repository.ExampleSolrBean = org.springframework.data.solr.repository.ExampleSolrBeanRepository . save ( org.springframework.data.solr.repository.ExampleSolrBean ) ; Assert . assertSame ( org.springframework.data.solr.repository.ExampleSolrBean , org.springframework.data.solr.repository.ExampleSolrBean ) ; Assert . assertTrue ( org.springframework.data.solr.repository.ExampleSolrBeanRepository . exists ( org.springframework.data.solr.repository.ExampleSolrBean . getId ( ) ) ) ; ExampleSolrBean org.springframework.data.solr.repository.ExampleSolrBean = org.springframework.data.solr.repository.ExampleSolrBeanRepository . findOne ( org.springframework.data.solr.repository.ExampleSolrBean . getId ( ) ) . get ( ) ; Assert . assertNotNull ( org.springframework.data.solr.repository.ExampleSolrBean ) ; Assert . assertTrue ( EqualsBuilder . reflectionEquals ( org.springframework.data.solr.repository.ExampleSolrBean , org.springframework.data.solr.repository.ExampleSolrBean , new java.lang.String [] { STRING } ) ) ; Assert . assertEquals ( NUMBER , org.springframework.data.solr.repository.ExampleSolrBeanRepository . count ( ) ) ; Assert . assertTrue ( org.springframework.data.solr.repository.ExampleSolrBeanRepository . exists ( org.springframework.data.solr.repository.ExampleSolrBean . getId ( ) ) ) ; org.springframework.data.solr.repository.ExampleSolrBeanRepository . delete ( org.springframework.data.solr.repository.ExampleSolrBean ) ; Assert . assertEquals ( NUMBER , org.springframework.data.solr.repository.ExampleSolrBeanRepository . count ( ) ) ; Assert . assertFalse ( org.springframework.data.solr.repository.ExampleSolrBeanRepository . findOne ( org.springframework.data.solr.repository.ExampleSolrBean . getId ( ) ) . isPresent ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { int int = NUMBER ; java.util.List<org.springframework.data.solr.repository.ExampleSolrBean> < ExampleSolrBean > java.util.List<org.springframework.data.solr.repository.ExampleSolrBean> = new java.util.ArrayList<org.springframework.data.solr.repository.ExampleSolrBean> <> ( int ) ; for ( int int = NUMBER ; int < NUMBER ; int ++ ) { java.util.List<org.springframework.data.solr.repository.ExampleSolrBean> . add ( createExampleBeanWithId ( java.lang.Integer . java.lang.String ( int ) ) ) ; } org.springframework.data.solr.repository.ExampleSolrBeanRepository . save ( java.util.List<org.springframework.data.solr.repository.ExampleSolrBean> ) ; Assert . assertEquals ( int , org.springframework.data.solr.repository.ExampleSolrBeanRepository . count ( ) ) ; int int = NUMBER ; for ( ExampleSolrBean org.springframework.data.solr.repository.ExampleSolrBean : org.springframework.data.solr.repository.ExampleSolrBeanRepository . findAll ( ) ) { Assert . assertTrue ( EqualsBuilder . reflectionEquals ( java.util.List<org.springframework.data.solr.repository.ExampleSolrBean> . get ( int ) , org.springframework.data.solr.repository.ExampleSolrBean , new java.lang.String [] { STRING } ) ) ; int ++ ; if ( int > int ) { Assert . fail ( STRING ) ; } } org.springframework.data.solr.repository.ExampleSolrBeanRepository . delete ( java.util.List<org.springframework.data.solr.repository.ExampleSolrBean> . get ( NUMBER ) ) ; Assert . assertEquals ( NUMBER , org.springframework.data.solr.repository.ExampleSolrBeanRepository . count ( ) ) ; org.springframework.data.solr.repository.ExampleSolrBeanRepository . deleteAll ( ) ; Assert . assertEquals ( NUMBER , org.springframework.data.solr.repository.ExampleSolrBeanRepository . count ( ) ) ; }  <METHOD_END>
