<METHOD_START> @ java.lang.Override public < T extends java.lang.Number > org.springframework.core.convert.support.Converter<java.lang.Character,T> < java.lang.Character , T > org.springframework.core.convert.support.Converter<java.lang.Character,T> ( java.lang.Class<T> < T > java.lang.Class<T> ) { return new org.springframework.core.convert.support.CharacterToNumberFactory.CharacterToNumber <> ( java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<T> < T > java.lang.Class<T> ) { this . java.lang.Class<T> = java.lang.Class<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( java.lang.Character java.lang.Character ) { return NumberUtils . convertNumberToTargetClass ( ( short ) java.lang.Character . char ( ) , this . java.lang.Class<T> ) ; }  <METHOD_END>
