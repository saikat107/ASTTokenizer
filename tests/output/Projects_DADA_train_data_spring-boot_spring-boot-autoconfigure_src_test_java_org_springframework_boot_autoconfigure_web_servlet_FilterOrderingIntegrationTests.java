<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.web.servlet.AnnotationConfigServletWebServerApplicationContext != null ) { this . org.springframework.boot.autoconfigure.web.servlet.AnnotationConfigServletWebServerApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; java.util.List<org.springframework.boot.autoconfigure.web.servlet.RegisteredFilter> < RegisteredFilter > java.util.List<org.springframework.boot.autoconfigure.web.servlet.RegisteredFilter> = this . org.springframework.boot.autoconfigure.web.servlet.AnnotationConfigServletWebServerApplicationContext . getBean ( MockServletWebServerFactory .class ) . getWebServer ( ) . getRegisteredFilters ( ) ; java.util.List<org.springframework.boot.autoconfigure.web.servlet.Filter> < Filter > java.util.List<org.springframework.boot.autoconfigure.web.servlet.Filter> = new java.util.ArrayList <> ( java.util.List<org.springframework.boot.autoconfigure.web.servlet.RegisteredFilter> . size ( ) ) ; for ( RegisteredFilter org.springframework.boot.autoconfigure.web.servlet.RegisteredFilter : java.util.List<org.springframework.boot.autoconfigure.web.servlet.RegisteredFilter> ) { java.util.List<org.springframework.boot.autoconfigure.web.servlet.Filter> . add ( org.springframework.boot.autoconfigure.web.servlet.RegisteredFilter . getFilter ( ) ) ; } java.util.Iterator<org.springframework.boot.autoconfigure.web.servlet.Filter> < Filter > java.util.Iterator<org.springframework.boot.autoconfigure.web.servlet.Filter> = java.util.List<org.springframework.boot.autoconfigure.web.servlet.Filter> . iterator ( ) ; assertThat ( java.util.Iterator<org.springframework.boot.autoconfigure.web.servlet.Filter> . next ( ) ) . isInstanceOf ( OrderedCharacterEncodingFilter .class ) ; assertThat ( java.util.Iterator<org.springframework.boot.autoconfigure.web.servlet.Filter> . next ( ) ) . isInstanceOf ( SessionRepositoryFilter .class ) ; assertThat ( java.util.Iterator<org.springframework.boot.autoconfigure.web.servlet.Filter> . next ( ) ) . isInstanceOf ( Filter .class ) ; assertThat ( java.util.Iterator<org.springframework.boot.autoconfigure.web.servlet.Filter> . next ( ) ) . isInstanceOf ( Filter .class ) ; assertThat ( java.util.Iterator<org.springframework.boot.autoconfigure.web.servlet.Filter> . next ( ) ) . isInstanceOf ( OrderedRequestContextFilter .class ) ; assertThat ( java.util.Iterator<org.springframework.boot.autoconfigure.web.servlet.Filter> . next ( ) ) . isInstanceOf ( FilterChainProxy .class ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { this . org.springframework.boot.autoconfigure.web.servlet.AnnotationConfigServletWebServerApplicationContext = new AnnotationConfigServletWebServerApplicationContext ( ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.web.servlet.AnnotationConfigServletWebServerApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.web.servlet.AnnotationConfigServletWebServerApplicationContext . register ( org.springframework.boot.autoconfigure.web.servlet.FilterOrderingIntegrationTests.MockWebServerConfiguration .class , org.springframework.boot.autoconfigure.web.servlet.FilterOrderingIntegrationTests.TestRedisConfiguration .class , WebMvcAutoConfiguration .class , SecurityAutoConfiguration .class , SessionAutoConfiguration .class , HttpMessageConvertersAutoConfiguration .class , PropertyPlaceholderAutoConfiguration .class , HttpEncodingAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.web.servlet.AnnotationConfigServletWebServerApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.web.servlet.MockServletWebServerFactory org.springframework.boot.autoconfigure.web.servlet.MockServletWebServerFactory ( ) { return new MockServletWebServerFactory ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.web.servlet.WebServerFactoryCustomizerBeanPostProcessor org.springframework.boot.autoconfigure.web.servlet.WebServerFactoryCustomizerBeanPostProcessor ( ) { return new WebServerFactoryCustomizerBeanPostProcessor ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.web.servlet.RedisConnectionFactory org.springframework.boot.autoconfigure.web.servlet.RedisConnectionFactory ( ) { RedisConnectionFactory org.springframework.boot.autoconfigure.web.servlet.RedisConnectionFactory = mock ( RedisConnectionFactory .class ) ; RedisConnection org.springframework.boot.autoconfigure.web.servlet.RedisConnection = mock ( RedisConnection .class ) ; given ( org.springframework.boot.autoconfigure.web.servlet.RedisConnectionFactory . getConnection ( ) ) . willReturn ( org.springframework.boot.autoconfigure.web.servlet.RedisConnection ) ; return org.springframework.boot.autoconfigure.web.servlet.RedisConnectionFactory ; }  <METHOD_END>
