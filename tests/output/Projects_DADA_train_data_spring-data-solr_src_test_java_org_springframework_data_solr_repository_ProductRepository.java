<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> @ Query ( name = STRING ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( boolean boolean , Sort org.springframework.data.solr.repository.Sort );  <METHOD_END>
<METHOD_START> @ Query ( name = STRING ) org.springframework.data.solr.repository.Page<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.Page<org.springframework.data.solr.repository.ProductBean> ( boolean boolean , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( )  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( )  <METHOD_END>
<METHOD_START> org.springframework.data.solr.repository.ProductBean org.springframework.data.solr.repository.ProductBean ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( )  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( boolean boolean );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.Integer java.lang.Integer , java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.util.Date java.util.Date );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.util.Date java.util.Date );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , fields = { STRING , STRING } ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( fields = { STRING , STRING } ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.util.Collection<java.lang.Integer> < java.lang.Integer > java.util.Collection<java.lang.Integer> );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.util.Collection<java.lang.Integer> < java.lang.Integer > java.util.Collection<java.lang.Integer> );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( @ Boost ( NUMBER ) java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( Point org.springframework.data.solr.repository.Point , Distance org.springframework.data.solr.repository.Distance );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( Point org.springframework.data.solr.repository.Point , Distance org.springframework.data.solr.repository.Distance );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( Box org.springframework.data.solr.repository.Box );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( )  <METHOD_END>
<METHOD_START> @ Query ( STRING ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( boolean boolean , Sort org.springframework.data.solr.repository.Sort );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) org.springframework.data.solr.repository.Page<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.Page<org.springframework.data.solr.repository.ProductBean> ( boolean boolean , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( )  <METHOD_END>
<METHOD_START> org.springframework.data.solr.repository.ProductBean org.springframework.data.solr.repository.ProductBean ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.solr.repository.Page<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.Page<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING ) @ Facet ( fields = { STRING } ) org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> ( Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING ) @ Facet ( fields = { STRING , STRING } ) org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> ( Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING ) @ Facet ( queries = { STRING } ) org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> ( Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING ) @ Facet ( queries = { STRING } ) org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> ( java.lang.Integer java.lang.Integer , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING ) @ Facet ( queries = { STRING , STRING } ) org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> ( Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING ) @ Facet ( fields = STRING , prefix = STRING ) org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> ( Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING ) @ Facet ( fields = STRING , prefix = STRING ) org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.FacetPage<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , filters = STRING ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( )  <METHOD_END>
<METHOD_START> @ Query ( filters = STRING ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.Integer java.lang.Integer , boolean boolean );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , filters = { STRING , STRING } ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( )  <METHOD_END>
<METHOD_START> @ Query ( defaultOperator = org . springframework . data . solr . core . query . Query . Operator . AND ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.util.List<java.lang.Boolean> < java.lang.Boolean > java.util.List<java.lang.Boolean> );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , defaultOperator = org . springframework . data . solr . core . query . Query . Operator . OR ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.util.List<java.lang.Boolean> < java.lang.Boolean > java.util.List<java.lang.Boolean> );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , timeAllowed = NUMBER ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( )  <METHOD_END>
<METHOD_START> @ Query ( defType = STRING ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> );  <METHOD_END>
<METHOD_START> @ Query ( requestHandler = STRING ) java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) @ Highlight org.springframework.data.solr.repository.HighlightPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.HighlightPage<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) @ Highlight ( prefix = STRING , postfix = STRING ) org.springframework.data.solr.repository.HighlightPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.HighlightPage<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) @ Highlight ( fields = { STRING } ) org.springframework.data.solr.repository.HighlightPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.HighlightPage<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) @ Highlight ( query = STRING ) org.springframework.data.solr.repository.HighlightPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.HighlightPage<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) @ Highlight @ Facet ( fields = STRING ) org.springframework.data.solr.repository.FacetAndHighlightPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.FacetAndHighlightPage<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) @ Highlight ( prefix = STRING , postfix = STRING ) @ Facet ( fields = STRING ) org.springframework.data.solr.repository.FacetAndHighlightPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.FacetAndHighlightPage<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) @ Highlight ( fields = { STRING } ) @ Facet ( fields = STRING , prefix = STRING ) org.springframework.data.solr.repository.FacetAndHighlightPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.FacetAndHighlightPage<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) @ Highlight ( query = STRING ) @ Facet ( fields = STRING ) org.springframework.data.solr.repository.FacetAndHighlightPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.FacetAndHighlightPage<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> java.lang.Long java.lang.Long ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.lang.Long java.lang.Long ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> long long ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Query ( value = STRING , delete = true ) void void ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.solr.repository.ProductBean> < ProductBean > java.util.List<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> org.springframework.data.solr.repository.Page<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.Page<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> org.springframework.data.solr.repository.Slice<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.Slice<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( STRING ) @ Stats ( value = { STRING , STRING } , facets = { STRING , STRING } , selective = @ SelectiveStats ( field = STRING , facets = STRING ) ) org.springframework.data.solr.repository.StatsPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.StatsPage<org.springframework.data.solr.repository.ProductBean> ( Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
<METHOD_START> @ Query ( requestHandler = STRING ) @ Spellcheck ( dictionaries = { STRING , STRING } , extendedResults = true , collateExtendedResults = true , count = NUMBER , alternativeTermCount = NUMBER , maxResultsForSuggest = NUMBER , collate = true , maxCollationsTries = NUMBER , maxCollations = NUMBER ) org.springframework.data.solr.repository.SpellcheckedPage<org.springframework.data.solr.repository.ProductBean> < ProductBean > org.springframework.data.solr.repository.SpellcheckedPage<org.springframework.data.solr.repository.ProductBean> ( java.lang.String java.lang.String , Pageable org.springframework.data.solr.repository.Pageable );  <METHOD_END>
