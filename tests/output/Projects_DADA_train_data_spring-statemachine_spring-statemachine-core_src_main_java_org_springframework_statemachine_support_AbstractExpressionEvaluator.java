<METHOD_START> @ java.lang.Override public void void ( final BeanFactory org.springframework.statemachine.support.BeanFactory ) { if ( org.springframework.statemachine.support.BeanFactory != null ) { this . org.springframework.statemachine.support.BeanFactory = org.springframework.statemachine.support.BeanFactory ; this . org.springframework.statemachine.support.BeanFactoryTypeConverter . setBeanFactory ( org.springframework.statemachine.support.BeanFactory ) ; if ( this . org.springframework.statemachine.support.StandardEvaluationContext != null && this . org.springframework.statemachine.support.StandardEvaluationContext . getBeanResolver ( ) == null ) { this . org.springframework.statemachine.support.StandardEvaluationContext . setBeanResolver ( new BeanFactoryResolver ( org.springframework.statemachine.support.BeanFactory ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { org.springframework.statemachine.support.StandardEvaluationContext ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ConversionService org.springframework.statemachine.support.ConversionService ) { if ( org.springframework.statemachine.support.ConversionService != null ) { this . org.springframework.statemachine.support.BeanFactoryTypeConverter . setConversionService ( org.springframework.statemachine.support.ConversionService ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.statemachine.support.StandardEvaluationContext org.springframework.statemachine.support.StandardEvaluationContext ( ) { return this . org.springframework.statemachine.support.StandardEvaluationContext ( true ) ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.statemachine.support.StandardEvaluationContext org.springframework.statemachine.support.StandardEvaluationContext ( boolean boolean ) { if ( this . org.springframework.statemachine.support.StandardEvaluationContext == null ) { if ( this . org.springframework.statemachine.support.BeanFactory == null && ! boolean ) { this . org.springframework.statemachine.support.StandardEvaluationContext = ExpressionUtils . createStandardEvaluationContext ( ) ; } else { this . org.springframework.statemachine.support.StandardEvaluationContext = ExpressionUtils . createStandardEvaluationContext ( this . org.springframework.statemachine.support.BeanFactory ) ; } if ( this . org.springframework.statemachine.support.BeanFactoryTypeConverter != null ) { this . org.springframework.statemachine.support.StandardEvaluationContext . setTypeConverter ( this . org.springframework.statemachine.support.BeanFactoryTypeConverter ) ; } } return this . org.springframework.statemachine.support.StandardEvaluationContext ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { return this . evaluateExpression ( java.lang.String , java.lang.Object , ( java.lang.Class<?> < ? > ) null ) ; }  <METHOD_END>
<METHOD_START> protected < T > T T ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> ) { return this . org.springframework.statemachine.support.ExpressionParser . parseExpression ( java.lang.String ) . getValue ( this . org.springframework.statemachine.support.StandardEvaluationContext ( ) , java.lang.Object , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( Expression org.springframework.statemachine.support.Expression , java.lang.Object java.lang.Object ) { return this . java.lang.Object ( org.springframework.statemachine.support.Expression , java.lang.Object , ( java.lang.Class<?> < ? > ) null ) ; }  <METHOD_END>
<METHOD_START> protected < T > T T ( Expression org.springframework.statemachine.support.Expression , java.lang.Class<T> < T > java.lang.Class<T> ) { return org.springframework.statemachine.support.Expression . getValue ( this . org.springframework.statemachine.support.StandardEvaluationContext ( ) , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( Expression org.springframework.statemachine.support.Expression ) { return org.springframework.statemachine.support.Expression . getValue ( this . org.springframework.statemachine.support.StandardEvaluationContext ( ) ) ; }  <METHOD_END>
<METHOD_START> protected < T > T T ( Expression org.springframework.statemachine.support.Expression , java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> ) { return org.springframework.statemachine.support.Expression . getValue ( this . org.springframework.statemachine.support.StandardEvaluationContext ( ) , java.lang.Object , java.lang.Class<T> ) ; }  <METHOD_END>
