<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = new java.lang.Object ( ) ; EntityManager org.springframework.orm.jpa.support.EntityManager = mock ( EntityManager .class ) ; given ( org.springframework.orm.jpa.support.EntityManager . isOpen ( ) ) . willReturn ( true ) ; EntityManagerFactory org.springframework.orm.jpa.support.EntityManagerFactory = mock ( EntityManagerFactory .class ) ; given ( org.springframework.orm.jpa.support.EntityManagerFactory . createEntityManager ( ) ) . willReturn ( org.springframework.orm.jpa.support.EntityManager ) ; SharedEntityManagerBean org.springframework.orm.jpa.support.SharedEntityManagerBean = new SharedEntityManagerBean ( ) ; org.springframework.orm.jpa.support.SharedEntityManagerBean . setEntityManagerFactory ( org.springframework.orm.jpa.support.EntityManagerFactory ) ; org.springframework.orm.jpa.support.SharedEntityManagerBean . afterPropertiesSet ( ) ; assertTrue ( EntityManager .class . boolean ( org.springframework.orm.jpa.support.SharedEntityManagerBean . getObjectType ( ) ) ) ; assertTrue ( org.springframework.orm.jpa.support.SharedEntityManagerBean . isSingleton ( ) ) ; EntityManager org.springframework.orm.jpa.support.EntityManager = org.springframework.orm.jpa.support.SharedEntityManagerBean . getObject ( ) ; assertSame ( org.springframework.orm.jpa.support.EntityManager , org.springframework.orm.jpa.support.SharedEntityManagerBean . getObject ( ) ) ; assertFalse ( org.springframework.orm.jpa.support.EntityManager . contains ( java.lang.Object ) ) ; assertTrue ( org.springframework.orm.jpa.support.EntityManager instanceof EntityManagerProxy ) ; EntityManagerProxy org.springframework.orm.jpa.support.EntityManagerProxy = ( EntityManagerProxy ) org.springframework.orm.jpa.support.EntityManager ; try { org.springframework.orm.jpa.support.EntityManagerProxy . getTargetEntityManager ( ) ; fail ( STRING ) ; } catch ( java.lang.IllegalStateException java.lang.IllegalStateException ) { } TransactionSynchronizationManager . bindResource ( org.springframework.orm.jpa.support.EntityManagerFactory , new EntityManagerHolder ( org.springframework.orm.jpa.support.EntityManager ) ) ; try { assertSame ( org.springframework.orm.jpa.support.EntityManager , org.springframework.orm.jpa.support.EntityManagerProxy . getTargetEntityManager ( ) ) ; } finally { TransactionSynchronizationManager . unbindResource ( org.springframework.orm.jpa.support.EntityManagerFactory ) ; } assertTrue ( TransactionSynchronizationManager . getResourceMap ( ) . isEmpty ( ) ) ; verify ( org.springframework.orm.jpa.support.EntityManager ) . contains ( java.lang.Object ) ; verify ( org.springframework.orm.jpa.support.EntityManager ) . close ( ) ; }  <METHOD_END>
