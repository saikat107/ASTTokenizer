<METHOD_START> public void ( ReactiveTypeDescriptor org.springframework.core.ReactiveTypeDescriptor , java.util.function.Function<java.lang.Object,org.springframework.core.Publisher<?>> < java.lang.Object , Publisher < ? > > java.util.function.Function<java.lang.Object,org.springframework.core.Publisher<?>> , java.util.function.Function<org.springframework.core.Publisher<?>,java.lang.Object> < Publisher < ? > , java.lang.Object > java.util.function.Function<org.springframework.core.Publisher<?>,java.lang.Object> ) { Assert . notNull ( org.springframework.core.ReactiveTypeDescriptor , STRING ) ; Assert . notNull ( java.util.function.Function<java.lang.Object,org.springframework.core.Publisher<?>> , STRING ) ; Assert . notNull ( java.util.function.Function<org.springframework.core.Publisher<?>,java.lang.Object> , STRING ) ; this . org.springframework.core.ReactiveTypeDescriptor = org.springframework.core.ReactiveTypeDescriptor ; this . java.util.function.Function<java.lang.Object,org.springframework.core.Publisher<?>> = java.util.function.Function<java.lang.Object,org.springframework.core.Publisher<?>> ; this . java.util.function.Function<org.springframework.core.Publisher<?>,java.lang.Object> = java.util.function.Function<org.springframework.core.Publisher<?>,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> public org.springframework.core.ReactiveTypeDescriptor org.springframework.core.ReactiveTypeDescriptor ( ) { return this . org.springframework.core.ReactiveTypeDescriptor ; }  <METHOD_END>
<METHOD_START> public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.core.ReactiveTypeDescriptor ( ) . getReactiveType ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.springframework.core.ReactiveTypeDescriptor ( ) . isMultiValue ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.springframework.core.ReactiveTypeDescriptor ( ) . supportsEmpty ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.springframework.core.ReactiveTypeDescriptor ( ) . isNoValue ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public < T > org.springframework.core.Publisher<T> < T > org.springframework.core.Publisher<T> ( java.lang.Object java.lang.Object ) { java.lang.Object = ( java.lang.Object instanceof java.util.Optional ? ( ( java.util.Optional<?> < ? > ) java.lang.Object ) . orElse ( null ) : java.lang.Object ) ; if ( java.lang.Object == null ) { java.lang.Object = org.springframework.core.ReactiveTypeDescriptor ( ) . getEmptyValue ( ) ; } return ( Publisher < T > ) this . java.util.function.Function<java.lang.Object,org.springframework.core.Publisher<?>> . apply ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( Publisher < ? > org.springframework.core.Publisher<?> ) { return ( org.springframework.core.Publisher<> != null ? this . java.util.function.Function<org.springframework.core.Publisher<?>,java.lang.Object> . apply ( org.springframework.core.Publisher<> ) : null ) ; }  <METHOD_END>
