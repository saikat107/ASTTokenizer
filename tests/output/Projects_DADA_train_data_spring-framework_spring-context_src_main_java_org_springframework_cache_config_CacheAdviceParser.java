<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( org.w3c.dom.Element org.w3c.dom.Element ) { return CacheInterceptor .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.cache.config.ParserContext , BeanDefinitionBuilder org.springframework.cache.config.BeanDefinitionBuilder ) { org.springframework.cache.config.BeanDefinitionBuilder . addPropertyReference ( STRING , CacheNamespaceHandler . extractCacheManager ( org.w3c.dom.Element ) ) ; CacheNamespaceHandler . parseKeyGenerator ( org.w3c.dom.Element , org.springframework.cache.config.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; if ( java.util.List<org.w3c.dom.Element> . int ( ) >= NUMBER ) { java.util.List<org.springframework.cache.config.RootBeanDefinition> < RootBeanDefinition > java.util.List<org.springframework.cache.config.RootBeanDefinition> = java.util.List<org.springframework.cache.config.RootBeanDefinition> ( java.util.List<org.w3c.dom.Element> , org.springframework.cache.config.ParserContext ) ; org.springframework.cache.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.util.List<org.springframework.cache.config.RootBeanDefinition> ) ; } else { org.springframework.cache.config.BeanDefinitionBuilder . addPropertyValue ( STRING , new RootBeanDefinition ( STRING ) ) ; } }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.cache.config.RootBeanDefinition> < RootBeanDefinition > java.util.List<org.springframework.cache.config.RootBeanDefinition> ( java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> , ParserContext org.springframework.cache.config.ParserContext ) { ManagedList < RootBeanDefinition > org.springframework.cache.config.ManagedList<org.springframework.cache.config.RootBeanDefinition> = new ManagedList <> ( java.util.List<org.w3c.dom.Element> . int ( ) ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { org.springframework.cache.config.ManagedList<org.springframework.cache.config.RootBeanDefinition> . add ( org.springframework.cache.config.RootBeanDefinition ( org.w3c.dom.Element , org.springframework.cache.config.ParserContext ) ) ; } return org.springframework.cache.config.ManagedList<org.springframework.cache.config.RootBeanDefinition> ; }  <METHOD_END>
<METHOD_START> private org.springframework.cache.config.RootBeanDefinition org.springframework.cache.config.RootBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.cache.config.ParserContext ) { org.springframework.cache.config.CacheAdviceParser.Props org.springframework.cache.config.CacheAdviceParser.Props = new org.springframework.cache.config.CacheAdviceParser.Props ( org.w3c.dom.Element ) ; ManagedMap < TypedStringValue , java.util.Collection<org.springframework.cache.config.CacheOperation> < CacheOperation > > org.springframework.cache.config.ManagedMap<org.springframework.cache.config.TypedStringValue,java.util.Collection<org.springframework.cache.config.CacheOperation>> = new ManagedMap <> ( ) ; org.springframework.cache.config.ManagedMap<org.springframework.cache.config.TypedStringValue,java.util.Collection<org.springframework.cache.config.CacheOperation>> . setSource ( org.springframework.cache.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = org.springframework.cache.config.CacheAdviceParser.Props . java.lang.String ( org.w3c.dom.Element , org.springframework.cache.config.ParserContext . getReaderContext ( ) ) ; TypedStringValue org.springframework.cache.config.TypedStringValue = new TypedStringValue ( java.lang.String ) ; org.springframework.cache.config.TypedStringValue . setSource ( org.springframework.cache.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; CacheableOperation . CacheableOperation CacheableOperation.Builder = org.springframework.cache.config.CacheAdviceParser.Props . CacheOperation.Builder ( org.w3c.dom.Element , org.springframework.cache.config.ParserContext . getReaderContext ( ) , new CacheableOperation . CacheableOperation ( ) ) ; CacheableOperation.Builder . setUnless ( java.lang.String ( org.w3c.dom.Element , STRING , STRING ) ) ; CacheableOperation.Builder . setSync ( java.lang.Boolean . java.lang.Boolean ( java.lang.String ( org.w3c.dom.Element , STRING , STRING ) ) ) ; java.util.Collection<org.springframework.cache.config.CacheOperation> < CacheOperation > java.util.Collection<org.springframework.cache.config.CacheOperation> = org.springframework.cache.config.ManagedMap<org.springframework.cache.config.TypedStringValue,java.util.Collection<org.springframework.cache.config.CacheOperation>> . get ( org.springframework.cache.config.TypedStringValue ) ; if ( java.util.Collection<org.springframework.cache.config.CacheOperation> == null ) { java.util.Collection<org.springframework.cache.config.CacheOperation> = new java.util.ArrayList <> ( NUMBER ) ; org.springframework.cache.config.ManagedMap<org.springframework.cache.config.TypedStringValue,java.util.Collection<org.springframework.cache.config.CacheOperation>> . put ( org.springframework.cache.config.TypedStringValue , java.util.Collection<org.springframework.cache.config.CacheOperation> ) ; } java.util.Collection<org.springframework.cache.config.CacheOperation> . add ( CacheableOperation.Builder . build ( ) ) ; } java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = org.springframework.cache.config.CacheAdviceParser.Props . java.lang.String ( org.w3c.dom.Element , org.springframework.cache.config.ParserContext . getReaderContext ( ) ) ; TypedStringValue org.springframework.cache.config.TypedStringValue = new TypedStringValue ( java.lang.String ) ; org.springframework.cache.config.TypedStringValue . setSource ( org.springframework.cache.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; CacheEvictOperation . CacheEvictOperation CacheEvictOperation.Builder = org.springframework.cache.config.CacheAdviceParser.Props . CacheOperation.Builder ( org.w3c.dom.Element , org.springframework.cache.config.ParserContext . getReaderContext ( ) , new CacheEvictOperation . CacheEvictOperation ( ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { CacheEvictOperation.Builder . setCacheWide ( java.lang.Boolean . java.lang.Boolean ( java.lang.String . java.lang.String ( ) ) ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { CacheEvictOperation.Builder . setBeforeInvocation ( java.lang.Boolean . java.lang.Boolean ( java.lang.String . java.lang.String ( ) ) ) ; } java.util.Collection<org.springframework.cache.config.CacheOperation> < CacheOperation > java.util.Collection<org.springframework.cache.config.CacheOperation> = org.springframework.cache.config.ManagedMap<org.springframework.cache.config.TypedStringValue,java.util.Collection<org.springframework.cache.config.CacheOperation>> . get ( org.springframework.cache.config.TypedStringValue ) ; if ( java.util.Collection<org.springframework.cache.config.CacheOperation> == null ) { java.util.Collection<org.springframework.cache.config.CacheOperation> = new java.util.ArrayList <> ( NUMBER ) ; org.springframework.cache.config.ManagedMap<org.springframework.cache.config.TypedStringValue,java.util.Collection<org.springframework.cache.config.CacheOperation>> . put ( org.springframework.cache.config.TypedStringValue , java.util.Collection<org.springframework.cache.config.CacheOperation> ) ; } java.util.Collection<org.springframework.cache.config.CacheOperation> . add ( CacheEvictOperation.Builder . build ( ) ) ; } java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = org.springframework.cache.config.CacheAdviceParser.Props . java.lang.String ( org.w3c.dom.Element , org.springframework.cache.config.ParserContext . getReaderContext ( ) ) ; TypedStringValue org.springframework.cache.config.TypedStringValue = new TypedStringValue ( java.lang.String ) ; org.springframework.cache.config.TypedStringValue . setSource ( org.springframework.cache.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; CachePutOperation . CachePutOperation CachePutOperation.Builder = org.springframework.cache.config.CacheAdviceParser.Props . CacheOperation.Builder ( org.w3c.dom.Element , org.springframework.cache.config.ParserContext . getReaderContext ( ) , new CachePutOperation . CachePutOperation ( ) ) ; CachePutOperation.Builder . setUnless ( java.lang.String ( org.w3c.dom.Element , STRING , STRING ) ) ; java.util.Collection<org.springframework.cache.config.CacheOperation> < CacheOperation > java.util.Collection<org.springframework.cache.config.CacheOperation> = org.springframework.cache.config.ManagedMap<org.springframework.cache.config.TypedStringValue,java.util.Collection<org.springframework.cache.config.CacheOperation>> . get ( org.springframework.cache.config.TypedStringValue ) ; if ( java.util.Collection<org.springframework.cache.config.CacheOperation> == null ) { java.util.Collection<org.springframework.cache.config.CacheOperation> = new java.util.ArrayList <> ( NUMBER ) ; org.springframework.cache.config.ManagedMap<org.springframework.cache.config.TypedStringValue,java.util.Collection<org.springframework.cache.config.CacheOperation>> . put ( org.springframework.cache.config.TypedStringValue , java.util.Collection<org.springframework.cache.config.CacheOperation> ) ; } java.util.Collection<org.springframework.cache.config.CacheOperation> . add ( CachePutOperation.Builder . build ( ) ) ; } RootBeanDefinition org.springframework.cache.config.RootBeanDefinition = new RootBeanDefinition ( NameMatchCacheOperationSource .class ) ; org.springframework.cache.config.RootBeanDefinition . setSource ( org.springframework.cache.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; org.springframework.cache.config.RootBeanDefinition . getPropertyValues ( ) . add ( STRING , org.springframework.cache.config.ManagedMap<org.springframework.cache.config.TypedStringValue,java.util.Collection<org.springframework.cache.config.CacheOperation>> ) ; return org.springframework.cache.config.RootBeanDefinition ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { return java.lang.String . java.lang.String ( ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> void ( org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; this . java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; this . java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; this . java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; this . java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; this . java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { this . java.lang.String[] = StringUtils . commaDelimitedListToStringArray ( java.lang.String . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> < T extends CacheOperation . CacheOperation.Builder > T T ( org.w3c.dom.Element org.w3c.dom.Element , ReaderContext org.springframework.cache.config.ReaderContext , T T ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String [] java.lang.String[] = this . java.lang.String[] ; if ( StringUtils . hasText ( java.lang.String ) ) { java.lang.String[] = StringUtils . commaDelimitedListToStringArray ( java.lang.String . java.lang.String ( ) ) ; } else { if ( this . java.lang.String[] == null ) { org.springframework.cache.config.ReaderContext . error ( STRING + org.w3c.dom.Element . java.lang.String ( ) , org.w3c.dom.Element ) ; } } T . setCacheNames ( java.lang.String[] ) ; T . setKey ( java.lang.String ( org.w3c.dom.Element , STRING , this . java.lang.String ) ) ; T . setKeyGenerator ( java.lang.String ( org.w3c.dom.Element , STRING , this . java.lang.String ) ) ; T . setCacheManager ( java.lang.String ( org.w3c.dom.Element , STRING , this . java.lang.String ) ) ; T . setCondition ( java.lang.String ( org.w3c.dom.Element , STRING , this . java.lang.String ) ) ; if ( StringUtils . hasText ( T . getKey ( ) ) && StringUtils . hasText ( T . getKeyGenerator ( ) ) ) { throw new java.lang.IllegalStateException ( STRING + org.w3c.dom.Element . java.lang.String ( ) + STRING + STRING + STRING ) ; } return T ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element , ReaderContext org.springframework.cache.config.ReaderContext ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { return java.lang.String . java.lang.String ( ) ; } if ( StringUtils . hasText ( this . java.lang.String ) ) { return this . java.lang.String ; } org.springframework.cache.config.ReaderContext . error ( STRING + org.w3c.dom.Element . java.lang.String ( ) , org.w3c.dom.Element ) ; return null ; }  <METHOD_END>
