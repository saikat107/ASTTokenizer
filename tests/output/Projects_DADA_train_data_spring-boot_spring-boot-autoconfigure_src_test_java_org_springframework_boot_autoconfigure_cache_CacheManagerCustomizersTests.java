<METHOD_START> @ Test public void void ( ) { new CacheManagerCustomizers ( null ) . customize ( mock ( CacheManager .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CacheManagerCustomizers org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers = new CacheManagerCustomizers ( java.util.Collections . java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.CacheNamesCacheManagerCustomizer> ( new org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.CacheNamesCacheManagerCustomizer ( ) ) ) ; ConcurrentMapCacheManager org.springframework.boot.autoconfigure.cache.ConcurrentMapCacheManager = new ConcurrentMapCacheManager ( ) ; org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers . customize ( org.springframework.boot.autoconfigure.cache.ConcurrentMapCacheManager ) ; assertThat ( org.springframework.boot.autoconfigure.cache.ConcurrentMapCacheManager . getCacheNames ( ) ) . containsOnly ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> < org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?> < ? > > java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> = new java.util.ArrayList<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> <> ( ) ; java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> . boolean ( new org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<org.springframework.boot.autoconfigure.cache.CacheManager> <> ( ) ) ; java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> . boolean ( new org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestConcurrentMapCacheManagerCustomizer ( ) ) ; CacheManagerCustomizers org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers = new CacheManagerCustomizers ( java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> ) ; org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers . customize ( mock ( CacheManager .class ) ) ; assertThat ( java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> . org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?> ( NUMBER ) . int ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> . org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?> ( NUMBER ) . int ( ) ) . isEqualTo ( NUMBER ) ; org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers . customize ( mock ( ConcurrentMapCacheManager .class ) ) ; assertThat ( java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> . org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?> ( NUMBER ) . int ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> . org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?> ( NUMBER ) . int ( ) ) . isEqualTo ( NUMBER ) ; org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers . customize ( mock ( CaffeineCacheManager .class ) ) ; assertThat ( java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> . org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?> ( NUMBER ) . int ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( java.util.List<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?>> . org.springframework.boot.autoconfigure.cache.CacheManagerCustomizersTests.TestCustomizer<?> ( NUMBER ) . int ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConcurrentMapCacheManager org.springframework.boot.autoconfigure.cache.ConcurrentMapCacheManager ) { org.springframework.boot.autoconfigure.cache.ConcurrentMapCacheManager . setCacheNames ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( T T ) { this . int ++ ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
