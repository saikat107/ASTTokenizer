<METHOD_START> @ Test public void void ( ) { Message < java.lang.String > org.springframework.integration.transformer.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , NUMBER ) . setHeader ( STRING , NUMBER ) . setHeader ( STRING , NUMBER ) . build ( ) ; HeaderFilter org.springframework.integration.transformer.HeaderFilter = new HeaderFilter ( STRING , STRING ) ; Message < ? > org.springframework.integration.transformer.Message<?> = org.springframework.integration.transformer.HeaderFilter . transform ( org.springframework.integration.transformer.Message<java.lang.String> ) ; assertNotNull ( org.springframework.integration.transformer.Message<> ) ; assertNotNull ( org.springframework.integration.transformer.Message<> . getHeaders ( ) . get ( STRING ) ) ; assertNull ( org.springframework.integration.transformer.Message<> . getHeaders ( ) . get ( STRING ) ) ; assertNull ( org.springframework.integration.transformer.Message<> . getHeaders ( ) . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.UUID java.util.UUID = java.util.UUID . java.util.UUID ( ) ; QueueChannel org.springframework.integration.transformer.QueueChannel = new QueueChannel ( ) ; Message < java.lang.String > org.springframework.integration.transformer.Message<java.lang.String> = MessageBuilder . withPayload ( STRING ) . setHeader ( STRING , NUMBER ) . setHeader ( STRING , NUMBER ) . setHeader ( STRING , NUMBER ) . setCorrelationId ( java.util.UUID ) . setReplyChannel ( org.springframework.integration.transformer.QueueChannel ) . setErrorChannelName ( STRING ) . build ( ) ; HeaderFilter org.springframework.integration.transformer.HeaderFilter = new HeaderFilter ( STRING , STRING ) ; MessageTransformingHandler org.springframework.integration.transformer.MessageTransformingHandler = new MessageTransformingHandler ( org.springframework.integration.transformer.HeaderFilter ) ; org.springframework.integration.transformer.MessageTransformingHandler . setBeanFactory ( mock ( BeanFactory .class ) ) ; org.springframework.integration.transformer.MessageTransformingHandler . afterPropertiesSet ( ) ; org.springframework.integration.transformer.MessageTransformingHandler . handleMessage ( org.springframework.integration.transformer.Message<java.lang.String> ) ; Message < ? > org.springframework.integration.transformer.Message<?> = org.springframework.integration.transformer.QueueChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.transformer.Message<> ) ; assertNotNull ( org.springframework.integration.transformer.Message<> . getHeaders ( ) . get ( STRING ) ) ; assertNull ( org.springframework.integration.transformer.Message<> . getHeaders ( ) . get ( STRING ) ) ; assertNull ( org.springframework.integration.transformer.Message<> . getHeaders ( ) . get ( STRING ) ) ; assertEquals ( STRING , org.springframework.integration.transformer.Message<> . getHeaders ( ) . getErrorChannel ( ) ) ; assertEquals ( org.springframework.integration.transformer.QueueChannel , org.springframework.integration.transformer.Message<> . getHeaders ( ) . getReplyChannel ( ) ) ; assertEquals ( java.util.UUID , new IntegrationMessageHeaderAccessor ( org.springframework.integration.transformer.Message<> ) . getCorrelationId ( ) ) ; }  <METHOD_END>
