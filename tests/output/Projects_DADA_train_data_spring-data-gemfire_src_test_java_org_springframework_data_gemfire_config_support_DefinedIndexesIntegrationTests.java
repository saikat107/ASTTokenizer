<METHOD_START> protected static org.springframework.data.gemfire.config.support.Person org.springframework.data.gemfire.config.support.Person ( Region < java.lang.Long , Person > org.springframework.data.gemfire.config.support.Region<java.lang.Long,org.springframework.data.gemfire.config.support.Person> , Person org.springframework.data.gemfire.config.support.Person ) { org.springframework.data.gemfire.config.support.Region<java.lang.Long,org.springframework.data.gemfire.config.support.Person> . put ( org.springframework.data.gemfire.config.support.Person . getId ( ) , org.springframework.data.gemfire.config.support.Person ) ; return org.springframework.data.gemfire.config.support.Person ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) { org.springframework.data.gemfire.config.support.Person ( org.springframework.data.gemfire.config.support.Region<java.lang.Long,org.springframework.data.gemfire.config.support.Person> , newPerson ( STRING , STRING , newBirthDate ( NUMBER , java.util.Calendar . int , NUMBER ) , Gender . MALE ) ) ; org.springframework.data.gemfire.config.support.Person ( org.springframework.data.gemfire.config.support.Region<java.lang.Long,org.springframework.data.gemfire.config.support.Person> , newPerson ( STRING , STRING , newBirthDate ( NUMBER , java.util.Calendar . int , NUMBER ) , Gender . FEMALE ) ) ; org.springframework.data.gemfire.config.support.Person ( org.springframework.data.gemfire.config.support.Region<java.lang.Long,org.springframework.data.gemfire.config.support.Person> , newPerson ( STRING , STRING , newBirthDate ( NUMBER , java.util.Calendar . int , NUMBER ) , Gender . FEMALE ) ) ; org.springframework.data.gemfire.config.support.Person ( org.springframework.data.gemfire.config.support.Region<java.lang.Long,org.springframework.data.gemfire.config.support.Person> , newPerson ( STRING , STRING , newBirthDate ( NUMBER , java.util.Calendar . int , NUMBER ) , Gender . FEMALE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { QueryService org.springframework.data.gemfire.config.support.QueryService = org.springframework.data.gemfire.config.support.Cache . getQueryService ( ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List ( org.springframework.data.gemfire.config.support.Index . getName ( ) , org.springframework.data.gemfire.config.support.Index . getName ( ) , org.springframework.data.gemfire.config.support.Index . getName ( ) ) ; assertThat ( java.util.List<java.lang.String> ) . isEqualTo ( java.util.List<java.lang.String> ) ; assertThat ( org.springframework.data.gemfire.config.support.Index ) . isEqualTo ( org.springframework.data.gemfire.config.support.QueryService . getIndex ( org.springframework.data.gemfire.config.support.Region<java.lang.Long,org.springframework.data.gemfire.config.support.Person> , org.springframework.data.gemfire.config.support.Index . getName ( ) ) ) ; assertThat ( org.springframework.data.gemfire.config.support.Index ) . isEqualTo ( org.springframework.data.gemfire.config.support.QueryService . getIndex ( org.springframework.data.gemfire.config.support.Region<java.lang.Long,org.springframework.data.gemfire.config.support.Person> , org.springframework.data.gemfire.config.support.Index . getName ( ) ) ) ; assertThat ( org.springframework.data.gemfire.config.support.Index ) . isEqualTo ( org.springframework.data.gemfire.config.support.QueryService . getIndex ( org.springframework.data.gemfire.config.support.Region<java.lang.Long,org.springframework.data.gemfire.config.support.Person> , org.springframework.data.gemfire.config.support.Index . getName ( ) ) ) ; assertThat ( org.springframework.data.gemfire.config.support.Index ) . isEqualTo ( org.springframework.data.gemfire.config.support.QueryService . getIndex ( org.springframework.data.gemfire.config.support.Region<java.lang.Long,org.springframework.data.gemfire.config.support.Person> , org.springframework.data.gemfire.config.support.Index . getName ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.data.gemfire.config.support.DefinedIndexesApplicationListener org.springframework.data.gemfire.config.support.DefinedIndexesApplicationListener ( ) { return new DefinedIndexesApplicationListener ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.data.gemfire.config.support.BeanPostProcessor org.springframework.data.gemfire.config.support.BeanPostProcessor ( ) { return new BeanPostProcessor ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.data.gemfire.config.support.BeansException { return java.lang.Object ; } @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.data.gemfire.config.support.BeansException { if ( java.lang.Object instanceof Index ) { if ( STRING . boolean ( java.lang.String ) ) { assertThat ( CacheFactory . getAnyInstance ( ) . getQueryService ( ) . getIndexes ( ) . contains ( java.lang.Object ) ) . isTrue ( ) ; assertThat ( java.lang.String ) . isEqualToIgnoringCase ( ( ( Index ) java.lang.Object ) . getName ( ) ) ; } else { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } return java.lang.Object ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.data.gemfire.config.support.BeansException { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.data.gemfire.config.support.BeansException { if ( java.lang.Object instanceof Index ) { if ( STRING . boolean ( java.lang.String ) ) { assertThat ( CacheFactory . getAnyInstance ( ) . getQueryService ( ) . getIndexes ( ) . contains ( java.lang.Object ) ) . isTrue ( ) ; assertThat ( java.lang.String ) . isEqualToIgnoringCase ( ( ( Index ) java.lang.Object ) . getName ( ) ) ; } else { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) org.springframework.data.gemfire.config.support.PartitionedRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.config.support.Person> < java.lang.Long , Person > org.springframework.data.gemfire.config.support.PartitionedRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.config.support.Person> ( Cache org.springframework.data.gemfire.config.support.Cache ) { PartitionedRegionFactoryBean < java.lang.Long , Person > org.springframework.data.gemfire.config.support.PartitionedRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.config.support.Person> = new PartitionedRegionFactoryBean < java.lang.Long , Person > ( ) ; org.springframework.data.gemfire.config.support.PartitionedRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.config.support.Person> . setCache ( org.springframework.data.gemfire.config.support.Cache ) ; org.springframework.data.gemfire.config.support.PartitionedRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.config.support.Person> . setClose ( false ) ; org.springframework.data.gemfire.config.support.PartitionedRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.config.support.Person> . setPersistent ( false ) ; return org.springframework.data.gemfire.config.support.PartitionedRegionFactoryBean<java.lang.Long,org.springframework.data.gemfire.config.support.Person> ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) @ DependsOn ( STRING ) org.springframework.data.gemfire.config.support.IndexFactoryBean org.springframework.data.gemfire.config.support.IndexFactoryBean ( GemFireCache org.springframework.data.gemfire.config.support.GemFireCache ) { IndexFactoryBean org.springframework.data.gemfire.config.support.IndexFactoryBean = new IndexFactoryBean ( ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setCache ( org.springframework.data.gemfire.config.support.GemFireCache ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setDefine ( true ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setExpression ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setFrom ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setName ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setType ( IndexType . KEY ) ; return org.springframework.data.gemfire.config.support.IndexFactoryBean ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) @ DependsOn ( STRING ) org.springframework.data.gemfire.config.support.IndexFactoryBean org.springframework.data.gemfire.config.support.IndexFactoryBean ( GemFireCache org.springframework.data.gemfire.config.support.GemFireCache ) { IndexFactoryBean org.springframework.data.gemfire.config.support.IndexFactoryBean = new IndexFactoryBean ( ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setCache ( org.springframework.data.gemfire.config.support.GemFireCache ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setDefine ( true ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setExpression ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setFrom ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setName ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setType ( IndexType . HASH ) ; return org.springframework.data.gemfire.config.support.IndexFactoryBean ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) @ DependsOn ( STRING ) org.springframework.data.gemfire.config.support.IndexFactoryBean org.springframework.data.gemfire.config.support.IndexFactoryBean ( GemFireCache org.springframework.data.gemfire.config.support.GemFireCache ) { IndexFactoryBean org.springframework.data.gemfire.config.support.IndexFactoryBean = new IndexFactoryBean ( ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setCache ( org.springframework.data.gemfire.config.support.GemFireCache ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setExpression ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setFrom ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setName ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setType ( IndexType . HASH ) ; return org.springframework.data.gemfire.config.support.IndexFactoryBean ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) @ DependsOn ( STRING ) org.springframework.data.gemfire.config.support.IndexFactoryBean org.springframework.data.gemfire.config.support.IndexFactoryBean ( GemFireCache org.springframework.data.gemfire.config.support.GemFireCache ) { IndexFactoryBean org.springframework.data.gemfire.config.support.IndexFactoryBean = new IndexFactoryBean ( ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setCache ( org.springframework.data.gemfire.config.support.GemFireCache ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setDefine ( true ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setExpression ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setFrom ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setName ( STRING ) ; org.springframework.data.gemfire.config.support.IndexFactoryBean . setType ( IndexType . FUNCTIONAL ) ; return org.springframework.data.gemfire.config.support.IndexFactoryBean ; }  <METHOD_END>
