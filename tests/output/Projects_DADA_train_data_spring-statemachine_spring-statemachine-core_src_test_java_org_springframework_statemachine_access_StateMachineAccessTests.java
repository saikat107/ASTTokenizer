<METHOD_START> @ Test public void void ( ) { org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine = new org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine ( ) ; final StateMachine < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine ; org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> . getStateMachineAccessor ( ) . doWithAllRegions ( new StateMachineFunction < StateMachineAccess < java.lang.String , java.lang.String > > ( ) { @ java.lang.Override public void void ( StateMachineAccess < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String> ) { org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String> . setRelay ( org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> ) ; } } ) ; assertThat ( org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine . org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> , sameInstance ( org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineAccess < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String> ) { org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String> . setRelay ( org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine = new org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine ( ) ; final StateMachine < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine ; org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> . getStateMachineAccessor ( ) . withAllRegions ( ) . stream ( ) . forEach ( access -> access . setRelay ( stateMachine ) ) ; assertThat ( org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine . org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> , sameInstance ( org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.access.StateMachineAccessor<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachineAccessor<java.lang.String,java.lang.String> ( ) { return new StateMachineAccessor < java.lang.String , java.lang.String > ( ) { @ java.lang.Override public void void ( StateMachineFunction < StateMachineAccess < java.lang.String , java.lang.String > > org.springframework.statemachine.access.StateMachineFunction<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> ) { org.springframework.statemachine.access.StateMachineFunction<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> . apply ( org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine .this ) ; } @ java.lang.Override public java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> < StateMachineAccess < java.lang.String , java.lang.String > > java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> ( ) { java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> < StateMachineAccess < java.lang.String , java.lang.String > > java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> = new java.util.ArrayList<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> < StateMachineAccess < java.lang.String , java.lang.String > > ( ) ; java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> . add ( org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine .this ) ; return java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> ; } @ java.lang.Override public void void ( StateMachineFunction < StateMachineAccess < java.lang.String , java.lang.String > > org.springframework.statemachine.access.StateMachineFunction<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> ) {				} @ java.lang.Override public org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String> ( ) { return null ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineFunction < StateMachineAccess < java.lang.String , java.lang.String > > org.springframework.statemachine.access.StateMachineFunction<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> ) { org.springframework.statemachine.access.StateMachineFunction<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> . apply ( org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine .this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> < StateMachineAccess < java.lang.String , java.lang.String > > java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> ( ) { java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> < StateMachineAccess < java.lang.String , java.lang.String > > java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> = new java.util.ArrayList<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> < StateMachineAccess < java.lang.String , java.lang.String > > ( ) ; java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> . add ( org.springframework.statemachine.access.StateMachineAccessTests.MockStateMachine .this ) ; return java.util.List<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineFunction < StateMachineAccess < java.lang.String , java.lang.String > > org.springframework.statemachine.access.StateMachineFunction<org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String>> ) {				}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachineAccess<java.lang.String,java.lang.String> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineInterceptor < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachineInterceptor<java.lang.String,java.lang.String> ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineMonitor < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachineMonitor<java.lang.String,java.lang.String> ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachine < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> ) { this . org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachine < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachine<java.lang.String,java.lang.String> ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineContext < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachineContext<java.lang.String,java.lang.String> ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Message < java.lang.String > org.springframework.statemachine.access.Message<java.lang.String> ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.access.State<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.access.State<java.lang.String,java.lang.String> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<org.springframework.statemachine.access.State<java.lang.String,java.lang.String>> < State < java.lang.String , java.lang.String > > java.util.Collection<org.springframework.statemachine.access.State<java.lang.String,java.lang.String>> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<org.springframework.statemachine.access.Transition<java.lang.String,java.lang.String>> < Transition < java.lang.String , java.lang.String > > java.util.Collection<org.springframework.statemachine.access.Transition<java.lang.String,java.lang.String>> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Exception java.lang.Exception ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineListener < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachineListener<java.lang.String,java.lang.String> ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineListener < java.lang.String , java.lang.String > org.springframework.statemachine.access.StateMachineListener<java.lang.String,java.lang.String> ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.access.State<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.access.State<java.lang.String,java.lang.String> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.access.ExtendedState org.springframework.statemachine.access.ExtendedState ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.UUID java.util.UUID ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message < java.lang.String > org.springframework.statemachine.access.Message<java.lang.String> ) {		}  <METHOD_END>
