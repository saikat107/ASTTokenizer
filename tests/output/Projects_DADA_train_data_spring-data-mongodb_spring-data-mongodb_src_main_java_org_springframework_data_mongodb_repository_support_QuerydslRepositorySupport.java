<METHOD_START> public void ( MongoOperations org.springframework.data.mongodb.repository.support.MongoOperations ) { Assert . notNull ( org.springframework.data.mongodb.repository.support.MongoOperations , STRING ) ; this . org.springframework.data.mongodb.repository.support.MongoOperations = org.springframework.data.mongodb.repository.support.MongoOperations ; this . org.springframework.data.mongodb.repository.support.MappingContext<? extends org.springframework.data.mongodb.repository.support.MongoPersistentEntity<?>,?> = org.springframework.data.mongodb.repository.support.MongoOperations . getConverter ( ) . getMappingContext ( ) ; }  <METHOD_END>
<METHOD_START> protected < T > org.springframework.data.mongodb.repository.support.AbstractMongodbQuery<T,org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery<T>> < T , SpringDataMongodbQuery < T > > org.springframework.data.mongodb.repository.support.AbstractMongodbQuery<T,org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery<T>> ( final EntityPath < T > org.springframework.data.mongodb.repository.support.EntityPath<T> ) { Assert . notNull ( org.springframework.data.mongodb.repository.support.EntityPath<T> , STRING ) ; MongoPersistentEntity < ? > org.springframework.data.mongodb.repository.support.MongoPersistentEntity<?> = org.springframework.data.mongodb.repository.support.MappingContext<,> . getRequiredPersistentEntity ( org.springframework.data.mongodb.repository.support.EntityPath<T> . getType ( ) ) ; return org.springframework.data.mongodb.repository.support.AbstractMongodbQuery ( org.springframework.data.mongodb.repository.support.EntityPath<T> , org.springframework.data.mongodb.repository.support.MongoPersistentEntity<> . getCollection ( ) ) ; }  <METHOD_END>
<METHOD_START> protected < T > org.springframework.data.mongodb.repository.support.AbstractMongodbQuery<T,org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery<T>> < T , SpringDataMongodbQuery < T > > org.springframework.data.mongodb.repository.support.AbstractMongodbQuery<T,org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery<T>> ( final EntityPath < T > org.springframework.data.mongodb.repository.support.EntityPath<T> , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.data.mongodb.repository.support.EntityPath<T> , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; return new SpringDataMongodbQuery < T > ( org.springframework.data.mongodb.repository.support.MongoOperations , org.springframework.data.mongodb.repository.support.EntityPath<T> . getType ( ) , java.lang.String ) ; }  <METHOD_END>
