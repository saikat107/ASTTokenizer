<METHOD_START> public void ( TypeInformation < T > org.springframework.data.keyvalue.core.mapping.TypeInformation<T> , KeySpaceResolver org.springframework.data.keyvalue.core.mapping.KeySpaceResolver ) { super( org.springframework.data.keyvalue.core.mapping.TypeInformation<T> ); this . java.lang.String = java.lang.String ( org.springframework.data.keyvalue.core.mapping.TypeInformation<T> . getType ( ) , org.springframework.data.keyvalue.core.mapping.KeySpaceResolver ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.Class<?> < ? > java.lang.Class<?> , KeySpaceResolver org.springframework.data.keyvalue.core.mapping.KeySpaceResolver ) { java.lang.String java.lang.String = AnnotationBasedKeySpaceResolver . INSTANCE . resolveKeySpace ( java.lang.Class<> ) ; if ( StringUtils . hasText ( java.lang.String ) ) return java.lang.String ; return ( org.springframework.data.keyvalue.core.mapping.KeySpaceResolver == null ? org.springframework.data.keyvalue.core.mapping.KeySpaceResolver : org.springframework.data.keyvalue.core.mapping.KeySpaceResolver ) . resolveKeySpace ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
