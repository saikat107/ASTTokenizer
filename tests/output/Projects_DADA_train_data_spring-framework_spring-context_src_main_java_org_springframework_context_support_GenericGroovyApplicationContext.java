<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( Resource ... org.springframework.context.support.Resource[] ) { void ( org.springframework.context.support.Resource[] ) ; refresh ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String ... java.lang.String[] ) { void ( java.lang.String[] ) ; refresh ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String ... java.lang.String[] ) { void ( java.lang.Class<> , java.lang.String[] ) ; refresh ( ) ; }  <METHOD_END>
<METHOD_START> public final org.springframework.context.support.GroovyBeanDefinitionReader org.springframework.context.support.GroovyBeanDefinitionReader ( ) { return this . org.springframework.context.support.GroovyBeanDefinitionReader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableEnvironment org.springframework.context.support.ConfigurableEnvironment ) { super. setEnvironment ( org.springframework.context.support.ConfigurableEnvironment ) ; this . org.springframework.context.support.GroovyBeanDefinitionReader . setEnvironment ( getEnvironment ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( Resource ... org.springframework.context.support.Resource[] ) { this . org.springframework.context.support.GroovyBeanDefinitionReader . loadBeanDefinitions ( org.springframework.context.support.Resource[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . org.springframework.context.support.GroovyBeanDefinitionReader . loadBeanDefinitions ( java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String ... java.lang.String[] ) { Resource [] org.springframework.context.support.Resource[] = new Resource [ java.lang.String[] . int ] ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { org.springframework.context.support.Resource[] [ int ] = new ClassPathResource ( java.lang.String[] [ int ] , java.lang.Class<> ) ; } void ( org.springframework.context.support.Resource[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( MetaClass org.springframework.context.support.MetaClass ) { this . org.springframework.context.support.MetaClass = org.springframework.context.support.MetaClass ; }  <METHOD_END>
<METHOD_START> public org.springframework.context.support.MetaClass org.springframework.context.support.MetaClass ( ) { return this . org.springframework.context.support.MetaClass ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { return this . org.springframework.context.support.MetaClass . invokeMethod ( this , java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof BeanDefinition ) { registerBeanDefinition ( java.lang.String , ( BeanDefinition ) java.lang.Object ) ; } else { this . org.springframework.context.support.MetaClass . setProperty ( this , java.lang.String , java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { if ( containsBean ( java.lang.String ) ) { return getBean ( java.lang.String ) ; } else if ( this . org.springframework.context.support.BeanWrapper . isReadableProperty ( java.lang.String ) ) { return this . org.springframework.context.support.BeanWrapper . getPropertyValue ( java.lang.String ) ; } throw new NoSuchBeanDefinitionException ( java.lang.String ) ; }  <METHOD_END>
