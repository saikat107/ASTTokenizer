<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.data.mongodb.core.index.IndexInfo> < IndexInfo > java.util.List<org.springframework.data.mongodb.core.index.IndexInfo> = org.springframework.data.mongodb.core.index.MongoOperations . indexOps ( SampleEntity .class ) . getIndexInfo ( ) ; assertThat ( java.util.List<org.springframework.data.mongodb.core.index.IndexInfo> , hasSize ( greaterThan ( NUMBER ) ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.core.index.IndexInfo> , Matchers .< IndexInfo > hasItem ( hasProperty ( STRING , is ( STRING ) ) ) ) ; java.util.List<org.springframework.data.mongodb.core.index.IndexInfo> = org.springframework.data.mongodb.core.index.MongoOperations . indexOps ( java.lang.String ) . getIndexInfo ( ) ; assertThat ( java.util.List<org.springframework.data.mongodb.core.index.IndexInfo> , hasSize ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.data.mongodb.core.index.IndexInfo> < IndexInfo > java.util.List<org.springframework.data.mongodb.core.index.IndexInfo> = org.springframework.data.mongodb.core.index.MongoOperations . indexOps ( org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreatorIntegrationTests.RecursiveConcreteType .class ) . getIndexInfo ( ) ; assertThat ( java.util.List<org.springframework.data.mongodb.core.index.IndexInfo> , hasSize ( greaterThan ( NUMBER ) ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.core.index.IndexInfo> , Matchers .< IndexInfo > hasItem ( hasProperty ( STRING , is ( STRING ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.UnknownHostException { org.springframework.data.mongodb.core.index.ExpectedException . expect ( DataIntegrityViolationException .class ) ; org.springframework.data.mongodb.core.index.ExpectedException . expectMessage ( STRING ) ; org.springframework.data.mongodb.core.index.ExpectedException . expectMessage ( STRING ) ; org.springframework.data.mongodb.core.index.ExpectedException . expectMessage ( STRING ) ; org.springframework.data.mongodb.core.index.ExpectedException . expectCause ( IsInstanceOf .< java.lang.Throwable > instanceOf ( MongoCommandException .class ) ) ; MongoTemplate org.springframework.data.mongodb.core.index.MongoTemplate = new MongoTemplate ( new MongoClient ( ) , STRING ) ; MongoPersistentEntityIndexCreator org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator = new MongoPersistentEntityIndexCreator ( new MongoMappingContext ( ) , org.springframework.data.mongodb.core.index.MongoTemplate ) ; org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator . createIndex ( new IndexDefinitionHolder ( STRING , new Index ( ) . named ( STRING ) . on ( STRING , Direction . ASC ) . unique ( ) , STRING ) ) ; org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator . createIndex ( new IndexDefinitionHolder ( STRING , new Index ( ) . named ( STRING ) . on ( STRING , Direction . ASC ) . sparse ( ) , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Long java.lang.Long , java.lang.String java.lang.String , RGT RGT ) { this . java.lang.String = java.lang.String ; this . java.lang.Long = java.lang.Long ; this . RGT = RGT ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Long java.lang.Long , java.lang.String java.lang.String , org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreatorIntegrationTests.RecursiveConcreteType org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreatorIntegrationTests.RecursiveConcreteType ) { super( java.lang.Long , java.lang.String , org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreatorIntegrationTests.RecursiveConcreteType ); }  <METHOD_END>
