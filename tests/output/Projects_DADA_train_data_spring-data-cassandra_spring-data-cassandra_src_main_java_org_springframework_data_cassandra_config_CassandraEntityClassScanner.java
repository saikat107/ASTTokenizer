<METHOD_START> public static java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( java.lang.String ... java.lang.String[] ) throws java.lang.ClassNotFoundException { return new org.springframework.data.cassandra.config.CassandraEntityClassScanner ( java.lang.String[] ) . java.util.Set<java.lang.Class<?>> ( ) ; }  <METHOD_END>
<METHOD_START> public static java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) throws java.lang.ClassNotFoundException { return new org.springframework.data.cassandra.config.CassandraEntityClassScanner ( java.lang.Class<?>[] ) . java.util.Set<java.lang.Class<?>> ( ) ; }  <METHOD_END>
<METHOD_START> public static java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) throws java.lang.ClassNotFoundException { return new org.springframework.data.cassandra.config.CassandraEntityClassScanner ( java.util.Collection<java.lang.String> ) . java.util.Set<java.lang.Class<?>> ( ) ; }  <METHOD_END>
<METHOD_START> public static java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> , java.util.Collection<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Collection<java.lang.Class<?>> )			throws java.lang.ClassNotFoundException { return new org.springframework.data.cassandra.config.CassandraEntityClassScanner ( java.util.Collection<java.lang.String> , java.util.Collection<java.lang.Class<?>> ) . java.util.Set<java.lang.Class<?>> ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {}  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) { this( null , java.util.Arrays . java.util.List<java.lang.Class<?>> ( java.lang.Class<?>[] ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String ... java.lang.String[] ) { this( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ); }  <METHOD_END>
<METHOD_START> public void ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { this( java.util.Collection<java.lang.String> , null ); }  <METHOD_END>
<METHOD_START> public void ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> , java.util.Collection<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Collection<java.lang.Class<?>> ) { void ( java.util.Collection<java.lang.String> ) ; void ( java.util.Collection<java.lang.Class<?>> ) ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return java.util.Collections . java.util.Set<java.lang.String> ( java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { this . java.util.Set<java.lang.String> = java.util.Collection<java.lang.String> == null ? new java.util.HashSet<java.lang.String> <> ( ) : new java.util.HashSet<java.lang.String> <> ( java.util.Collection<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( ) { return java.util.Collections . java.util.Set<java.lang.Class<?>> ( java.util.Set<java.lang.Class<?>> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Collection<java.lang.Class<?>> ) { this . java.util.Set<java.lang.Class<?>> = java.util.Collection<java.lang.Class<?>> == null ? new java.util.HashSet<java.lang.Class<?>> <> ( ) : new java.util.HashSet<java.lang.Class<?>> <> ( java.util.Collection<java.lang.Class<?>> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( ) java.lang.ClassNotFoundException { java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> = new java.util.HashSet<java.lang.Class<?>> <> ( ) ; for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ( ) ) { java.util.Set<java.lang.Class<?>> . boolean ( java.util.Set<java.lang.Class<?>> ( java.lang.String ) ) ; } for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.util.Set<java.lang.Class<?>> ( ) ) { java.util.Set<java.lang.Class<?>> . boolean ( java.util.Set<java.lang.Class<?>> ( java.lang.Class<> . java.lang.Package ( ) . java.lang.String ( ) ) ) ; } return java.util.Set<java.lang.Class<?>> ; }  <METHOD_END>
<METHOD_START> protected java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( java.lang.String java.lang.String ) throws java.lang.ClassNotFoundException { java.util.HashSet<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.HashSet<java.lang.Class<?>> = new java.util.HashSet<java.lang.Class<?>> <> ( ) ; if ( StringUtils . hasText ( java.lang.String ) ) { ClassPathScanningCandidateComponentProvider org.springframework.data.cassandra.config.ClassPathScanningCandidateComponentProvider = new ClassPathScanningCandidateComponentProvider ( false ) ; for ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> : java.lang.Class<? extends java.lang.annotation.Annotation>[] ( ) ) { org.springframework.data.cassandra.config.ClassPathScanningCandidateComponentProvider . addIncludeFilter ( new AnnotationTypeFilter ( java.lang.Class<> ) ) ; } for ( BeanDefinition org.springframework.data.cassandra.config.BeanDefinition : org.springframework.data.cassandra.config.ClassPathScanningCandidateComponentProvider . findCandidateComponents ( java.lang.String ) ) { java.util.HashSet<java.lang.Class<?>> . boolean ( ClassUtils . forName ( org.springframework.data.cassandra.config.BeanDefinition . getBeanClassName ( ) , java.lang.ClassLoader ) ) ; } } return java.util.HashSet<java.lang.Class<?>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > [] java.lang.Class<? extends java.lang.annotation.Annotation>[] ( ) { return new java.lang.Class [] { Table .class , Persistent .class , PrimaryKeyClass .class } ; }  <METHOD_END>
