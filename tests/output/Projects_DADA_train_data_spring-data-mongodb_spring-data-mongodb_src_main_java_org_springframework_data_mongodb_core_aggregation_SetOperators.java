<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetOperatorFactory org.springframework.data.mongodb.core.aggregation.SetOperators.SetOperatorFactory ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetOperatorFactory ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetOperatorFactory org.springframework.data.mongodb.core.aggregation.SetOperators.SetOperatorFactory ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetOperatorFactory ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = null ; }  <METHOD_END>
<METHOD_START> public void ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; this . java.lang.String = null ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( java.lang.String ... java.lang.String[] ) { return org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( ) . org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( AggregationExpression ... org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) { return org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( ) . org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals . org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals . org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( java.lang.String ... java.lang.String[] ) { return org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( ) . org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( AggregationExpression ... org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) { return org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( ) . org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection . org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection . org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( java.lang.String ... java.lang.String[] ) { return org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( ) . org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( AggregationExpression ... org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) { return org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( ) . org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion . org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion . org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( ) . org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( ) . org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference . org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference . org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( ) . org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( ) . org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset . org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset . org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue . org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue . org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue . org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue . org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return this . java.lang.String != null ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( java.lang.String ... java.lang.String[] ) { Assert . notNull ( java.lang.String[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( append ( Fields . fields ( java.lang.String[] ) . asList ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( AggregationExpression ... org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( append ( java.util.Arrays . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( java.lang.Object [] java.lang.Object[] ) { Assert . notNull ( java.lang.Object[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetEquals ( append ( java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( java.lang.String ... java.lang.String[] ) { Assert . notNull ( java.lang.String[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( append ( asFields ( java.lang.String[] ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( AggregationExpression ... org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetIntersection ( append ( java.util.Arrays . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( java.lang.String ... java.lang.String[] ) { Assert . notNull ( java.lang.String[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( append ( asFields ( java.lang.String[] ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( AggregationExpression ... org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetUnion ( append ( java.util.Arrays . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression[] ) ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetDifference ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.SetIsSubset ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue org.springframework.data.mongodb.core.aggregation.SetOperators.AnyElementTrue ( ) { return this ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue org.springframework.data.mongodb.core.aggregation.SetOperators.AllElementsTrue ( ) { return this ; }  <METHOD_END>
