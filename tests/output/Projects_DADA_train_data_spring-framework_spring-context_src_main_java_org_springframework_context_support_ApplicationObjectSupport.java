<METHOD_START> @ java.lang.Override public final void void ( ApplicationContext org.springframework.context.support.ApplicationContext ) throws org.springframework.context.support.BeansException { if ( org.springframework.context.support.ApplicationContext == null && ! boolean ( ) ) { this . org.springframework.context.support.ApplicationContext = null ; this . org.springframework.context.support.MessageSourceAccessor = null ; } else if ( this . org.springframework.context.support.ApplicationContext == null ) { if ( ! java.lang.Class<?> ( ) . boolean ( org.springframework.context.support.ApplicationContext ) ) { throw new ApplicationContextException ( STRING + java.lang.Class<?> ( ) . java.lang.String ( ) + STRING ) ; } this . org.springframework.context.support.ApplicationContext = org.springframework.context.support.ApplicationContext ; this . org.springframework.context.support.MessageSourceAccessor = new MessageSourceAccessor ( org.springframework.context.support.ApplicationContext ) ; void ( org.springframework.context.support.ApplicationContext ) ; } else { if ( this . org.springframework.context.support.ApplicationContext != org.springframework.context.support.ApplicationContext ) { throw new ApplicationContextException ( STRING + this . org.springframework.context.support.ApplicationContext + STRING + org.springframework.context.support.ApplicationContext + STRING ) ; } } }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> protected java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return ApplicationContext .class ; }  <METHOD_END>
<METHOD_START> protected void void ( ApplicationContext org.springframework.context.support.ApplicationContext ) throws org.springframework.context.support.BeansException { void ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) org.springframework.context.support.BeansException {	}  <METHOD_END>
<METHOD_START> public final org.springframework.context.support.ApplicationContext org.springframework.context.support.ApplicationContext ( ) java.lang.IllegalStateException { if ( this . org.springframework.context.support.ApplicationContext == null && boolean ( ) ) { throw new java.lang.IllegalStateException ( STRING + this + STRING ) ; } return this . org.springframework.context.support.ApplicationContext ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.context.support.MessageSourceAccessor org.springframework.context.support.MessageSourceAccessor ( ) java.lang.IllegalStateException { if ( this . org.springframework.context.support.MessageSourceAccessor == null && boolean ( ) ) { throw new java.lang.IllegalStateException ( STRING + this + STRING ) ; } return this . org.springframework.context.support.MessageSourceAccessor ; }  <METHOD_END>
