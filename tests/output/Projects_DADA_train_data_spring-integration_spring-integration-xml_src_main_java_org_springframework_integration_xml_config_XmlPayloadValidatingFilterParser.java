<METHOD_START> @ java.lang.Override protected org.springframework.integration.xml.config.BeanDefinitionBuilder org.springframework.integration.xml.config.BeanDefinitionBuilder ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.xml.config.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.xml.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( FilterFactoryBean .class ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; BeanDefinitionBuilder org.springframework.integration.xml.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( XmlValidatingMessageSelector .class ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; if ( ! ( boolean ^ boolean ) ) { throw new BeanDefinitionStoreException ( STRING ) ; } if ( boolean ) { org.springframework.integration.xml.config.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; org.springframework.integration.xml.config.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; } else { org.springframework.integration.xml.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; org.springframework.integration.xml.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.xml.config.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; return org.springframework.integration.xml.config.BeanDefinitionBuilder ; }  <METHOD_END>
