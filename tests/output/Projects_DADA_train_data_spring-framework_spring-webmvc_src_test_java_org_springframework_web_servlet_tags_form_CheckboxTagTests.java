<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected void void ( ) { this . org.springframework.web.servlet.tags.form.CheckboxTag = new CheckboxTag ( ) { @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; } } ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setPageContext ( getPageContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TagWriter org.springframework.web.servlet.tags.form.TagWriter ( ) { return new TagWriter ( getWriter ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = org.springframework.web.servlet.tags.form.Document . getRootElement ( ) ; assertEquals ( STRING , NUMBER , org.springframework.web.servlet.tags.form.Element . elements ( ) . size ( ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Element . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = org.springframework.web.servlet.tags.form.Document . getRootElement ( ) ; assertEquals ( STRING , NUMBER , org.springframework.web.servlet.tags.form.Element . elements ( ) . size ( ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Element . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setDynamicAttribute ( null , java.lang.String , java.lang.String ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = org.springframework.web.servlet.tags.form.Document . getRootElement ( ) ; assertEquals ( STRING , NUMBER , org.springframework.web.servlet.tags.form.Element . elements ( ) . size ( ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Element . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( java.lang.String , org.springframework.web.servlet.tags.form.Element . attribute ( java.lang.String ) . getValue ( ) ) ; assertEquals ( java.lang.String , org.springframework.web.servlet.tags.form.Element . attribute ( java.lang.String ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.TestBean . setSomeBoolean ( java.lang.Boolean . java.lang.Boolean ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertNull ( org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.TestBean . setJedi ( false ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertNull ( org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.TestBean . setName ( null ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertNull ( org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; BeanPropertyBindingResult org.springframework.web.servlet.tags.form.BeanPropertyBindingResult = new BeanPropertyBindingResult ( this . org.springframework.web.servlet.tags.form.TestBean , COMMAND_NAME ) ; org.springframework.web.servlet.tags.form.BeanPropertyBindingResult . getPropertyEditorRegistry ( ) . registerCustomEditor ( java.lang.String .class , new StringTrimmerEditor ( false ) ) ; getPageContext ( ) . getRequest ( ) . setAttribute ( BindingResult . MODEL_KEY_PREFIX + COMMAND_NAME , org.springframework.web.servlet.tags.form.BeanPropertyBindingResult ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertNull ( org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; BeanPropertyBindingResult org.springframework.web.servlet.tags.form.BeanPropertyBindingResult = new BeanPropertyBindingResult ( this . org.springframework.web.servlet.tags.form.TestBean , COMMAND_NAME ) ; org.springframework.web.servlet.tags.form.CheckboxTagTests.MyStringTrimmerEditor org.springframework.web.servlet.tags.form.CheckboxTagTests.MyStringTrimmerEditor = new org.springframework.web.servlet.tags.form.CheckboxTagTests.MyStringTrimmerEditor ( ) ; org.springframework.web.servlet.tags.form.BeanPropertyBindingResult . getPropertyEditorRegistry ( ) . registerCustomEditor ( java.lang.String .class , org.springframework.web.servlet.tags.form.CheckboxTagTests.MyStringTrimmerEditor ) ; getPageContext ( ) . getRequest ( ) . setAttribute ( BindingResult . MODEL_KEY_PREFIX + COMMAND_NAME , org.springframework.web.servlet.tags.form.BeanPropertyBindingResult ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; assertEquals ( NUMBER , org.springframework.web.servlet.tags.form.CheckboxTagTests.MyStringTrimmerEditor . int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; BeanPropertyBindingResult org.springframework.web.servlet.tags.form.BeanPropertyBindingResult = new BeanPropertyBindingResult ( this . org.springframework.web.servlet.tags.form.TestBean , COMMAND_NAME ) ; org.springframework.web.servlet.tags.form.CheckboxTagTests.MyIntegerEditor org.springframework.web.servlet.tags.form.CheckboxTagTests.MyIntegerEditor = new org.springframework.web.servlet.tags.form.CheckboxTagTests.MyIntegerEditor ( ) ; org.springframework.web.servlet.tags.form.BeanPropertyBindingResult . getPropertyEditorRegistry ( ) . registerCustomEditor ( java.lang.Integer .class , org.springframework.web.servlet.tags.form.CheckboxTagTests.MyIntegerEditor ) ; getPageContext ( ) . getRequest ( ) . setAttribute ( BindingResult . MODEL_KEY_PREFIX + COMMAND_NAME , org.springframework.web.servlet.tags.form.BeanPropertyBindingResult ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; assertEquals ( NUMBER , org.springframework.web.servlet.tags.form.CheckboxTagTests.MyIntegerEditor . int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( java.util.Date ( ) ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( java.util.Date ( ) . java.lang.String ( ) , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; java.util.Date java.util.Date = new java.util.Date ( ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( java.util.Date ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertNull ( org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) ) ; assertEquals ( java.util.Date . java.lang.String ( ) , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertNull ( org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( STRING ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertNull ( org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( new Pet ( STRING ) ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( new Pet ( STRING ) ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertNull ( org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setValue ( new ItemPet ( STRING ) ) ; BeanPropertyBindingResult org.springframework.web.servlet.tags.form.BeanPropertyBindingResult = new BeanPropertyBindingResult ( this . org.springframework.web.servlet.tags.form.TestBean , COMMAND_NAME ) ; java.beans.PropertyEditorSupport java.beans.PropertyEditorSupport = new ItemPet . ItemPet ( ) ; org.springframework.web.servlet.tags.form.BeanPropertyBindingResult . getPropertyEditorRegistry ( ) . registerCustomEditor ( ItemPet .class , java.beans.PropertyEditorSupport ) ; getPageContext ( ) . getRequest ( ) . setAttribute ( BindingResult . MODEL_KEY_PREFIX + COMMAND_NAME , org.springframework.web.servlet.tags.form.BeanPropertyBindingResult ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Document . getRootElement ( ) . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { try { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; fail ( STRING ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.web.servlet.tags.form.CheckboxTag . setPath ( STRING ) ; this . org.springframework.web.servlet.tags.form.CheckboxTag . setDisabled ( true ) ; int int = this . org.springframework.web.servlet.tags.form.CheckboxTag . doStartTag ( ) ; assertEquals ( Tag . SKIP_BODY , int ) ; java.lang.String java.lang.String = getOutput ( ) ; java.lang.String = STRING + java.lang.String + STRING ; SAXReader org.springframework.web.servlet.tags.form.SAXReader = new SAXReader ( ) ; Document org.springframework.web.servlet.tags.form.Document = org.springframework.web.servlet.tags.form.SAXReader . read ( new java.io.StringReader ( java.lang.String ) ) ; Element org.springframework.web.servlet.tags.form.Element = org.springframework.web.servlet.tags.form.Document . getRootElement ( ) ; assertEquals ( STRING , NUMBER , org.springframework.web.servlet.tags.form.Element . elements ( ) . size ( ) ) ; Element org.springframework.web.servlet.tags.form.Element = ( Element ) org.springframework.web.servlet.tags.form.Element . elements ( ) . get ( NUMBER ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . getName ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; assertEquals ( STRING , org.springframework.web.servlet.tags.form.Element . attribute ( STRING ) . getValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.web.servlet.tags.form.JspException { try { this . org.springframework.web.servlet.tags.form.CheckboxTag . setDynamicAttribute ( null , STRING , STRING ) ; fail ( STRING ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { assertEquals ( STRING , java.lang.IllegalArgumentException . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> private java.util.Date java.util.Date ( ) { java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; java.util.Calendar . void ( java.util.Calendar . int , NUMBER ) ; java.util.Calendar . void ( java.util.Calendar . int , NUMBER ) ; java.util.Calendar . void ( java.util.Calendar . int , NUMBER ) ; java.util.Calendar . void ( java.util.Calendar . int , NUMBER ) ; java.util.Calendar . void ( java.util.Calendar . int , NUMBER ) ; java.util.Calendar . void ( java.util.Calendar . int , NUMBER ) ; return java.util.Calendar . java.util.Date ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.tags.form.TestBean org.springframework.web.servlet.tags.form.TestBean ( ) { java.util.List java.util.List = new java.util.ArrayList ( ) ; java.util.List . boolean ( Colour . BLUE ) ; java.util.List . boolean ( Colour . RED ) ; java.util.List . boolean ( Colour . GREEN ) ; java.util.List java.util.List = new java.util.ArrayList ( ) ; java.util.List . boolean ( new Pet ( STRING ) ) ; java.util.List . boolean ( new Pet ( STRING ) ) ; java.util.List . boolean ( new Pet ( STRING ) ) ; java.util.List . boolean ( new Pet ( STRING ) ) ; java.util.List java.util.List = new java.util.ArrayList ( ) ; java.util.List . boolean ( STRING ) ; java.util.List . boolean ( STRING ) ; java.util.Map java.util.Map = new java.util.LinkedHashMap ( ) ; java.util.Map . java.lang.Object ( STRING , java.lang.Boolean . java.lang.Boolean ) ; this . org.springframework.web.servlet.tags.form.TestBean = new TestBean ( ) ; this . org.springframework.web.servlet.tags.form.TestBean . setDate ( java.util.Date ( ) ) ; this . org.springframework.web.servlet.tags.form.TestBean . setName ( STRING ) ; this . org.springframework.web.servlet.tags.form.TestBean . setJedi ( true ) ; this . org.springframework.web.servlet.tags.form.TestBean . setSomeBoolean ( java.lang.Boolean . java.lang.Boolean ) ; this . org.springframework.web.servlet.tags.form.TestBean . setStringArray ( new java.lang.String [] { STRING , STRING } ) ; this . org.springframework.web.servlet.tags.form.TestBean . setSomeIntegerArray ( new java.lang.Integer [] { new java.lang.Integer ( NUMBER ) , new java.lang.Integer ( NUMBER ) } ) ; this . org.springframework.web.servlet.tags.form.TestBean . setOtherColours ( java.util.List ) ; this . org.springframework.web.servlet.tags.form.TestBean . setPets ( java.util.List ) ; this . org.springframework.web.servlet.tags.form.TestBean . setSomeList ( java.util.List ) ; this . org.springframework.web.servlet.tags.form.TestBean . setSomeMap ( java.util.Map ) ; return this . org.springframework.web.servlet.tags.form.TestBean ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( false ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . int ++ ; super. setAsText ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . int ++ ; void ( new java.lang.Integer ( java.lang.String . java.lang.String ( ) ) ) ; }  <METHOD_END>
