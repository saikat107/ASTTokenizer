<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( ConnectionFactory org.springframework.jms.core.ConnectionFactory ) { this . org.springframework.jms.core.JmsTemplate = new JmsTemplate ( org.springframework.jms.core.ConnectionFactory ) ; }  <METHOD_END>
<METHOD_START> public void ( JmsTemplate org.springframework.jms.core.JmsTemplate ) { Assert . notNull ( org.springframework.jms.core.JmsTemplate , STRING ) ; this . org.springframework.jms.core.JmsTemplate = org.springframework.jms.core.JmsTemplate ; }  <METHOD_END>
<METHOD_START> public void void ( ConnectionFactory org.springframework.jms.core.ConnectionFactory ) { if ( this . org.springframework.jms.core.JmsTemplate != null ) { this . org.springframework.jms.core.JmsTemplate . setConnectionFactory ( org.springframework.jms.core.ConnectionFactory ) ; } else { this . org.springframework.jms.core.JmsTemplate = new JmsTemplate ( org.springframework.jms.core.ConnectionFactory ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.jms.core.ConnectionFactory org.springframework.jms.core.ConnectionFactory ( ) { return ( this . org.springframework.jms.core.JmsTemplate != null ? this . org.springframework.jms.core.JmsTemplate . getConnectionFactory ( ) : null ) ; }  <METHOD_END>
<METHOD_START> public void void ( JmsTemplate org.springframework.jms.core.JmsTemplate ) { this . org.springframework.jms.core.JmsTemplate = org.springframework.jms.core.JmsTemplate ; }  <METHOD_END>
<METHOD_START> public org.springframework.jms.core.JmsTemplate org.springframework.jms.core.JmsTemplate ( ) { return this . org.springframework.jms.core.JmsTemplate ; }  <METHOD_END>
<METHOD_START> public void void ( MessageConverter org.springframework.jms.core.MessageConverter ) { Assert . notNull ( org.springframework.jms.core.MessageConverter , STRING ) ; this . org.springframework.jms.core.MessageConverter = org.springframework.jms.core.MessageConverter ; }  <METHOD_END>
<METHOD_START> public org.springframework.jms.core.MessageConverter org.springframework.jms.core.MessageConverter ( ) { return this . org.springframework.jms.core.MessageConverter ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Assert . notNull ( org.springframework.jms.core.JmsTemplate ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message < ? > org.springframework.jms.core.Message<?> ) { Destination org.springframework.jms.core.Destination = getDefaultDestination ( ) ; if ( org.springframework.jms.core.Destination != null ) { void ( org.springframework.jms.core.Destination , org.springframework.jms.core.Message<> ) ; } else { void ( java.lang.String ( ) , org.springframework.jms.core.Message<> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) throws org.springframework.jms.core.MessagingException { void ( java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , MessagePostProcessor org.springframework.jms.core.MessagePostProcessor ) throws org.springframework.jms.core.MessagingException { Destination org.springframework.jms.core.Destination = getDefaultDestination ( ) ; if ( org.springframework.jms.core.Destination != null ) { void ( org.springframework.jms.core.Destination , java.lang.Object , org.springframework.jms.core.MessagePostProcessor ) ; } else { void ( java.lang.String ( ) , java.lang.Object , org.springframework.jms.core.MessagePostProcessor ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , Message < ? > org.springframework.jms.core.Message<?> ) throws org.springframework.jms.core.MessagingException { void ( java.lang.String , org.springframework.jms.core.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) throws org.springframework.jms.core.MessagingException { void ( java.lang.String , java.lang.Object , ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> )			throws org.springframework.jms.core.MessagingException { void ( java.lang.String , java.lang.Object , java.util.Map<java.lang.String,java.lang.Object> , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , MessagePostProcessor org.springframework.jms.core.MessagePostProcessor )			throws org.springframework.jms.core.MessagingException { void ( java.lang.String , java.lang.Object , null , org.springframework.jms.core.MessagePostProcessor ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , MessagePostProcessor org.springframework.jms.core.MessagePostProcessor ) throws org.springframework.jms.core.MessagingException { Message < ? > org.springframework.jms.core.Message<?> = doConvert ( java.lang.Object , java.util.Map<java.lang.String,java.lang.Object> , org.springframework.jms.core.MessagePostProcessor ) ; void ( java.lang.String , org.springframework.jms.core.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jms.core.Message<?> < ? > org.springframework.jms.core.Message<?> ( ) { Destination org.springframework.jms.core.Destination = getDefaultDestination ( ) ; if ( org.springframework.jms.core.Destination != null ) { return org.springframework.jms.core.Message<?> ( org.springframework.jms.core.Destination ) ; } else { return org.springframework.jms.core.Message<?> ( java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) { Destination org.springframework.jms.core.Destination = getDefaultDestination ( ) ; if ( org.springframework.jms.core.Destination != null ) { return java.lang.Object ( org.springframework.jms.core.Destination , java.lang.Class<T> ) ; } else { return T ( java.lang.String ( ) , java.lang.Class<T> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jms.core.Message<?> < ? > org.springframework.jms.core.Message<?> ( java.lang.String java.lang.String ) throws org.springframework.jms.core.MessagingException { return org.springframework.jms.core.Message<?> ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.String java.lang.String , java.lang.Class<T> < T > java.lang.Class<T> ) throws org.springframework.jms.core.MessagingException { Message < ? > org.springframework.jms.core.Message<?> = org.springframework.jms.core.Message<?> ( java.lang.String ) ; if ( org.springframework.jms.core.Message<> != null ) { return doConvert ( org.springframework.jms.core.Message<> , java.lang.Class<T> ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jms.core.Message<?> < ? > org.springframework.jms.core.Message<?> ( Message < ? > org.springframework.jms.core.Message<?> ) { Destination org.springframework.jms.core.Destination = getDefaultDestination ( ) ; if ( org.springframework.jms.core.Destination != null ) { return org.springframework.jms.core.Message<?> ( org.springframework.jms.core.Destination , org.springframework.jms.core.Message<> ) ; } else { return org.springframework.jms.core.Message<?> ( java.lang.String ( ) , org.springframework.jms.core.Message<> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jms.core.Message<?> < ? > org.springframework.jms.core.Message<?> ( java.lang.String java.lang.String , Message < ? > org.springframework.jms.core.Message<?> ) throws org.springframework.jms.core.MessagingException { return org.springframework.jms.core.Message<?> ( java.lang.String , org.springframework.jms.core.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> )			throws org.springframework.jms.core.MessagingException { return T ( java.lang.String , java.lang.Object , null , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> ) { return T ( java.lang.Object , java.lang.Class<T> , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , java.lang.Class<T> < T > java.lang.Class<T> ) throws org.springframework.jms.core.MessagingException { return T ( java.lang.String , java.lang.Object , java.util.Map<java.lang.String,java.lang.Object> , java.lang.Class<T> , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> , MessagePostProcessor org.springframework.jms.core.MessagePostProcessor ) { Destination org.springframework.jms.core.Destination = getDefaultDestination ( ) ; if ( org.springframework.jms.core.Destination != null ) { return java.lang.Object ( org.springframework.jms.core.Destination , java.lang.Object , java.lang.Class<T> , org.springframework.jms.core.MessagePostProcessor ) ; } else { return java.lang.Object ( java.lang.String ( ) , java.lang.Object , java.lang.Class<T> , org.springframework.jms.core.MessagePostProcessor ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> , MessagePostProcessor org.springframework.jms.core.MessagePostProcessor ) throws org.springframework.jms.core.MessagingException { return java.lang.Object ( java.lang.String , java.lang.Object , null , java.lang.Class<T> , org.springframework.jms.core.MessagePostProcessor ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T > T T ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , java.lang.Class<T> < T > java.lang.Class<T> , MessagePostProcessor org.springframework.jms.core.MessagePostProcessor ) { Message < ? > org.springframework.jms.core.Message<?> = doConvert ( java.lang.Object , java.util.Map<java.lang.String,java.lang.Object> , org.springframework.jms.core.MessagePostProcessor ) ; Message < ? > org.springframework.jms.core.Message<?> = org.springframework.jms.core.Message<?> ( java.lang.String , org.springframework.jms.core.Message<> ) ; return ( org.springframework.jms.core.Message<> != null ? ( T ) getMessageConverter ( ) . fromMessage ( org.springframework.jms.core.Message<> , java.lang.Class<T> ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Destination org.springframework.jms.core.Destination , Message < ? > org.springframework.jms.core.Message<?> ) { try { this . org.springframework.jms.core.JmsTemplate . send ( org.springframework.jms.core.Destination , org.springframework.jms.core.JmsMessagingTemplate.MessagingMessageCreator ( org.springframework.jms.core.Message<> ) ) ; } catch ( JmsException org.springframework.jms.core.JmsException ) { throw org.springframework.jms.core.MessagingException ( org.springframework.jms.core.JmsException ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , Message < ? > org.springframework.jms.core.Message<?> ) { try { this . org.springframework.jms.core.JmsTemplate . send ( java.lang.String , org.springframework.jms.core.JmsMessagingTemplate.MessagingMessageCreator ( org.springframework.jms.core.Message<> ) ) ; } catch ( JmsException org.springframework.jms.core.JmsException ) { throw org.springframework.jms.core.MessagingException ( org.springframework.jms.core.JmsException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.jms.core.Message<?> < ? > org.springframework.jms.core.Message<?> ( Destination org.springframework.jms.core.Destination ) { try { javax . javax.jms . javax.jms javax.jms.Message = this . org.springframework.jms.core.JmsTemplate . receive ( org.springframework.jms.core.Destination ) ; return org.springframework.jms.core.Message<?> ( javax.jms.Message ) ; } catch ( JmsException org.springframework.jms.core.JmsException ) { throw org.springframework.jms.core.MessagingException ( org.springframework.jms.core.JmsException ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.jms.core.Message<?> < ? > org.springframework.jms.core.Message<?> ( java.lang.String java.lang.String ) { try { javax . javax.jms . javax.jms javax.jms.Message = this . org.springframework.jms.core.JmsTemplate . receive ( java.lang.String ) ; return org.springframework.jms.core.Message<?> ( javax.jms.Message ) ; } catch ( JmsException org.springframework.jms.core.JmsException ) { throw org.springframework.jms.core.MessagingException ( org.springframework.jms.core.JmsException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.jms.core.Message<?> < ? > org.springframework.jms.core.Message<?> ( Destination org.springframework.jms.core.Destination , Message < ? > org.springframework.jms.core.Message<?> ) { try { javax . javax.jms . javax.jms javax.jms.Message = this . org.springframework.jms.core.JmsTemplate . sendAndReceive ( org.springframework.jms.core.Destination , org.springframework.jms.core.JmsMessagingTemplate.MessagingMessageCreator ( org.springframework.jms.core.Message<> ) ) ; return org.springframework.jms.core.Message<?> ( javax.jms.Message ) ; } catch ( JmsException org.springframework.jms.core.JmsException ) { throw org.springframework.jms.core.MessagingException ( org.springframework.jms.core.JmsException ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.jms.core.Message<?> < ? > org.springframework.jms.core.Message<?> ( java.lang.String java.lang.String , Message < ? > org.springframework.jms.core.Message<?> ) { try { javax . javax.jms . javax.jms javax.jms.Message = this . org.springframework.jms.core.JmsTemplate . sendAndReceive ( java.lang.String , org.springframework.jms.core.JmsMessagingTemplate.MessagingMessageCreator ( org.springframework.jms.core.Message<> ) ) ; return org.springframework.jms.core.Message<?> ( javax.jms.Message ) ; } catch ( JmsException org.springframework.jms.core.JmsException ) { throw org.springframework.jms.core.MessagingException ( org.springframework.jms.core.JmsException ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.jms.core.JmsMessagingTemplate.MessagingMessageCreator org.springframework.jms.core.JmsMessagingTemplate.MessagingMessageCreator ( Message < ? > org.springframework.jms.core.Message<?> ) { return new org.springframework.jms.core.JmsMessagingTemplate.MessagingMessageCreator ( org.springframework.jms.core.Message<> , org.springframework.jms.core.MessageConverter ( ) ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = java.lang.String ( ) ; if ( java.lang.String == null ) { throw new java.lang.IllegalStateException ( STRING + STRING ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected org.springframework.jms.core.Message<?> < ? > org.springframework.jms.core.Message<?> ( javax . javax.jms . javax.jms javax.jms.Message ) { if ( javax.jms.Message == null ) { return null ; } try { return ( Message < ? > ) org.springframework.jms.core.MessageConverter ( ) . fromMessage ( javax.jms.Message ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new MessageConversionException ( STRING + javax.jms.Message + STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.jms.core.MessagingException org.springframework.jms.core.MessagingException ( JmsException org.springframework.jms.core.JmsException ) { if ( org.springframework.jms.core.JmsException instanceof org . springframework . jms . org.springframework.jms.support . org.springframework.jms.support . org.springframework.jms.support || org.springframework.jms.core.JmsException instanceof InvalidDestinationException ) { return new DestinationResolutionException ( org.springframework.jms.core.JmsException . getMessage ( ) , org.springframework.jms.core.JmsException ) ; } if ( org.springframework.jms.core.JmsException instanceof org . springframework . jms . org.springframework.jms.support . org.springframework.jms.support . org.springframework.jms.support ) { return new MessageConversionException ( org.springframework.jms.core.JmsException . getMessage ( ) , org.springframework.jms.core.JmsException ) ; } return new MessagingException ( org.springframework.jms.core.JmsException . getMessage ( ) , org.springframework.jms.core.JmsException ) ; }  <METHOD_END>
<METHOD_START> public void ( Message < ? > org.springframework.jms.core.Message<?> , MessageConverter org.springframework.jms.core.MessageConverter ) { this . org.springframework.jms.core.Message<?> = org.springframework.jms.core.Message<> ; this . org.springframework.jms.core.MessageConverter = org.springframework.jms.core.MessageConverter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax . javax.jms . javax.jms.Message javax.jms.Message ( Session org.springframework.jms.core.Session ) throws org.springframework.jms.core.JMSException { try { return this . org.springframework.jms.core.MessageConverter . toMessage ( this . org.springframework.jms.core.Message<> , org.springframework.jms.core.Session ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new MessageConversionException ( STRING + this . org.springframework.jms.core.Message<> + STRING , java.lang.Exception ) ; } }  <METHOD_END>
