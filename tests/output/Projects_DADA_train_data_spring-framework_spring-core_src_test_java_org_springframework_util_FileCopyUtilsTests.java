<METHOD_START> @ Test public void void ( ) java.io.IOException { byte [] byte[] = STRING . byte[] ( ) ; java.io.ByteArrayInputStream java.io.ByteArrayInputStream = new java.io.ByteArrayInputStream ( byte[] ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( byte[] . int ) ; int int = FileCopyUtils . copy ( java.io.ByteArrayInputStream , java.io.ByteArrayOutputStream ) ; assertEquals ( byte[] . int , int ) ; assertTrue ( java.util.Arrays . boolean ( byte[] , java.io.ByteArrayOutputStream . byte[] ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { byte [] byte[] = STRING . byte[] ( ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( byte[] . int ) ; FileCopyUtils . copy ( byte[] , java.io.ByteArrayOutputStream ) ; assertTrue ( java.util.Arrays . boolean ( byte[] , java.io.ByteArrayOutputStream . byte[] ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { byte [] byte[] = STRING . byte[] ( ) ; java.io.ByteArrayInputStream java.io.ByteArrayInputStream = new java.io.ByteArrayInputStream ( byte[] ) ; byte [] byte[] = FileCopyUtils . copyToByteArray ( java.io.ByteArrayInputStream ) ; assertTrue ( java.util.Arrays . boolean ( byte[] , byte[] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { java.lang.String java.lang.String = STRING ; java.io.StringReader java.io.StringReader = new java.io.StringReader ( java.lang.String ) ; java.io.StringWriter java.io.StringWriter = new java.io.StringWriter ( ) ; int int = FileCopyUtils . copy ( java.io.StringReader , java.io.StringWriter ) ; assertEquals ( java.lang.String . int ( ) , int ) ; assertEquals ( java.lang.String , java.io.StringWriter . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { java.lang.String java.lang.String = STRING ; java.io.StringWriter java.io.StringWriter = new java.io.StringWriter ( ) ; FileCopyUtils . copy ( java.lang.String , java.io.StringWriter ) ; assertEquals ( java.lang.String , java.io.StringWriter . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { java.lang.String java.lang.String = STRING ; java.io.StringReader java.io.StringReader = new java.io.StringReader ( java.lang.String ) ; java.lang.String java.lang.String = FileCopyUtils . copyToString ( java.io.StringReader ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
