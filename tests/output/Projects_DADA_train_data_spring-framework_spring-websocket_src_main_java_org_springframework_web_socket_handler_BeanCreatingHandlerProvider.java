<METHOD_START> public void ( java.lang.Class<? extends T> < ? extends T > java.lang.Class<? extends T> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; this . java.lang.Class<? extends T> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.web.socket.handler.BeanFactory ) { if ( org.springframework.web.socket.handler.BeanFactory instanceof AutowireCapableBeanFactory ) { this . org.springframework.web.socket.handler.AutowireCapableBeanFactory = ( AutowireCapableBeanFactory ) org.springframework.web.socket.handler.BeanFactory ; } }  <METHOD_END>
<METHOD_START> public void void ( T T ) { if ( this . org.springframework.web.socket.handler.AutowireCapableBeanFactory != null ) { this . org.springframework.web.socket.handler.AutowireCapableBeanFactory . destroyBean ( T ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.Class<? extends T> < ? extends T > java.lang.Class<? extends T> ( ) { return this . java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public T T ( ) { if ( this . org.springframework.web.socket.handler.AutowireCapableBeanFactory != null ) { return this . org.springframework.web.socket.handler.AutowireCapableBeanFactory . createBean ( this . java.lang.Class<> ) ; } else { return BeanUtils . instantiateClass ( this . java.lang.Class<> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.Class<> + STRING ; }  <METHOD_END>
