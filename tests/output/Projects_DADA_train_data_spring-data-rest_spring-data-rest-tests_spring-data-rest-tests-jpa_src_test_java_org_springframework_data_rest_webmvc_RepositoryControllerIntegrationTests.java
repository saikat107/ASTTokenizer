<METHOD_START> @ Test public void void ( ) { HttpEntity < ? > org.springframework.data.rest.webmvc.HttpEntity<?> = org.springframework.data.rest.webmvc.RepositoryController . optionsForRepositories ( ) ; assertAllowHeaders ( org.springframework.data.rest.webmvc.HttpEntity<> , HttpMethod . GET ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.rest.webmvc.RepositoryController . headForRepositories ( ) . getStatusCode ( ) ) . isEqualTo ( HttpStatus . NO_CONTENT ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryLinksResource org.springframework.data.rest.webmvc.RepositoryLinksResource = org.springframework.data.rest.webmvc.RepositoryController . listRepositories ( ) . getBody ( ) ; assertThat ( org.springframework.data.rest.webmvc.RepositoryLinksResource . getLinks ( ) ) . hasSize ( NUMBER ) ; assertThat ( org.springframework.data.rest.webmvc.RepositoryLinksResource . hasLink ( STRING ) ) . isTrue ( ) ; assertThat ( org.springframework.data.rest.webmvc.RepositoryLinksResource . hasLink ( STRING ) ) . isTrue ( ) ; assertThat ( org.springframework.data.rest.webmvc.RepositoryLinksResource . hasLink ( STRING ) ) . isTrue ( ) ; assertThat ( org.springframework.data.rest.webmvc.RepositoryLinksResource . hasLink ( STRING ) ) . isTrue ( ) ; assertThat ( org.springframework.data.rest.webmvc.RepositoryLinksResource . hasLink ( STRING ) ) . isTrue ( ) ; assertThat ( org.springframework.data.rest.webmvc.RepositoryLinksResource . hasLink ( STRING ) ) . isTrue ( ) ; assertThat ( org.springframework.data.rest.webmvc.RepositoryLinksResource . hasLink ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
