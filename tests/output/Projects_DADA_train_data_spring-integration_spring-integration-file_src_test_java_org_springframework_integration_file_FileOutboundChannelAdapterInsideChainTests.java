<METHOD_START> @ BeforeClass public static void void ( ) { java.io.File = new java.io.File ( java.lang.String ) ; java.io.File . boolean ( ) ; java.io.File . void ( ) ; }  <METHOD_END>
<METHOD_START> @ AfterClass public static void void ( ) { if ( java.io.File != null && java.io.File . boolean ( ) ) { for ( java.io.File java.io.File : java.io.File . java.io.File[] ( ) ) { java.io.File . boolean ( ) ; } } java.io.File . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { Message < java.lang.String > org.springframework.integration.file.Message<java.lang.String> = MessageBuilder . withPayload ( java.lang.String ) . build ( ) ; org.springframework.integration.file.MessageChannel . send ( org.springframework.integration.file.Message<java.lang.String> ) ; java.io.File java.io.File = new java.io.File ( java.io.File , java.lang.String ) ; assertTrue ( java.io.File . boolean ( ) ) ; byte [] byte[] = FileCopyUtils . copyToByteArray ( java.io.File ) ; assertEquals ( new java.lang.String ( byte[] ) , java.lang.String ) ; }  <METHOD_END>
