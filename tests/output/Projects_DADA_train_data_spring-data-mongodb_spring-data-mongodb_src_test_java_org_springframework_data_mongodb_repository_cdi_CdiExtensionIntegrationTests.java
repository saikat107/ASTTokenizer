<METHOD_START> @ BeforeClass public static void void ( ) java.lang.Exception { org.springframework.data.mongodb.repository.cdi.CdiTestContainer = CdiTestContainerLoader . getCdiContainer ( ) ; org.springframework.data.mongodb.repository.cdi.CdiTestContainer . bootContainer ( ) ; }  <METHOD_END>
<METHOD_START> @ AfterClass public static void void ( ) java.lang.Exception { org.springframework.data.mongodb.repository.cdi.CdiTestContainer . shutdownContainer ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryClient org.springframework.data.mongodb.repository.cdi.RepositoryClient = org.springframework.data.mongodb.repository.cdi.CdiTestContainer . getInstance ( RepositoryClient .class ) ; CdiPersonRepository org.springframework.data.mongodb.repository.cdi.CdiPersonRepository = org.springframework.data.mongodb.repository.cdi.RepositoryClient . getRepository ( ) ; assertThat ( org.springframework.data.mongodb.repository.cdi.CdiPersonRepository , is ( notNullValue ( ) ) ) ; org.springframework.data.mongodb.repository.cdi.CdiPersonRepository . deleteAll ( ) ; Person org.springframework.data.mongodb.repository.cdi.Person = new Person ( STRING , STRING ) ; Person org.springframework.data.mongodb.repository.cdi.Person = org.springframework.data.mongodb.repository.cdi.CdiPersonRepository . save ( org.springframework.data.mongodb.repository.cdi.Person ) ; assertThat ( org.springframework.data.mongodb.repository.cdi.Person , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.mongodb.repository.cdi.CdiPersonRepository . findOne ( org.springframework.data.mongodb.repository.cdi.Person . getId ( ) ) . get ( ) . getId ( ) , is ( org.springframework.data.mongodb.repository.cdi.Person . getId ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryClient org.springframework.data.mongodb.repository.cdi.RepositoryClient = org.springframework.data.mongodb.repository.cdi.CdiTestContainer . getInstance ( RepositoryClient .class ) ; assertThat ( org.springframework.data.mongodb.repository.cdi.RepositoryClient . getSamplePersonRepository ( ) . returnOne ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
