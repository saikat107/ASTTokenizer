<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( T T , java.lang.String ... java.lang.String[] ) { this( T , true , java.lang.String[] ); }  <METHOD_END>
<METHOD_START> public void ( T T , boolean boolean , java.lang.String ... java.lang.String[] ) { Assert . notNull ( T , STRING ) ; Assert . notNull ( java.lang.String[] , STRING ) ; this . T = T ; this . boolean = boolean ; this . java.util.Set<java.lang.String> . boolean ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> protected T T ( ) { return this . T ; }  <METHOD_END>
<METHOD_START> public void void ( T T ) { Assert . notNull ( T , STRING ) ; this . T = T ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { Assert . notNull ( java.util.Collection<java.lang.String> , STRING ) ; this . java.util.Set<java.lang.String> = new java.util.LinkedHashSet<java.lang.String> <> ( java.util.Collection<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( ) { return this . java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { Assert . notNull ( java.lang.String[] , STRING ) ; this . java.util.Set<java.lang.String> . boolean ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( MultipartConfigElement org.springframework.boot.web.servlet.MultipartConfigElement ) { this . org.springframework.boot.web.servlet.MultipartConfigElement = org.springframework.boot.web.servlet.MultipartConfigElement ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.servlet.MultipartConfigElement org.springframework.boot.web.servlet.MultipartConfigElement ( ) { return this . org.springframework.boot.web.servlet.MultipartConfigElement ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return getOrDeduceName ( this . T ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContext org.springframework.boot.web.servlet.ServletContext ) throws org.springframework.boot.web.servlet.ServletException { Assert . notNull ( this . T , STRING ) ; java.lang.String java.lang.String = java.lang.String ( ) ; if ( ! isEnabled ( ) ) { org.springframework.boot.web.servlet.Log . info ( STRING + java.lang.String + STRING ) ; return; } org.springframework.boot.web.servlet.Log . info ( STRING + java.lang.String + STRING + this . java.util.Set<java.lang.String> ) ; Dynamic org.springframework.boot.web.servlet.Dynamic = org.springframework.boot.web.servlet.ServletContext . addServlet ( java.lang.String , this . T ) ; if ( org.springframework.boot.web.servlet.Dynamic == null ) { org.springframework.boot.web.servlet.Log . info ( STRING + java.lang.String + STRING + STRING ) ; return; } void ( org.springframework.boot.web.servlet.Dynamic ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ServletRegistration . ServletRegistration ServletRegistration.Dynamic ) { super. configure ( ServletRegistration.Dynamic ) ; java.lang.String [] java.lang.String[] = this . java.util.Set<java.lang.String> . java.lang.String[] ( new java.lang.String [ this . java.util.Set<java.lang.String> . int ( ) ] ) ; if ( java.lang.String[] . int == NUMBER && this . boolean ) { java.lang.String[] = java.lang.String[] ; } if ( ! ObjectUtils . isEmpty ( java.lang.String[] ) ) { ServletRegistration.Dynamic . addMapping ( java.lang.String[] ) ; } ServletRegistration.Dynamic . setLoadOnStartup ( this . int ) ; if ( this . org.springframework.boot.web.servlet.MultipartConfigElement != null ) { ServletRegistration.Dynamic . setMultipartConfig ( this . org.springframework.boot.web.servlet.MultipartConfigElement ) ; } }  <METHOD_END>
