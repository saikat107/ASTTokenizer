<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( this . org.springframework.boot.env.PropertiesPropertySourceLoader . getFileExtensions ( ) ) . isEqualTo ( new java.lang.String [] { STRING , STRING } ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertySource < ? > org.springframework.boot.env.PropertySource<?> = this . org.springframework.boot.env.PropertiesPropertySourceLoader . load ( STRING , new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.boot.env.PropertiesPropertySourceLoaderTests> ( ) ) , null ) ; assertThat ( org.springframework.boot.env.PropertySource<> . getProperty ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { PropertySource < ? > org.springframework.boot.env.PropertySource<?> = this . org.springframework.boot.env.PropertiesPropertySourceLoader . load ( STRING , new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.boot.env.PropertiesPropertySourceLoaderTests> ( ) ) , null ) ; assertThat ( org.springframework.boot.env.PropertySource<> . getProperty ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
