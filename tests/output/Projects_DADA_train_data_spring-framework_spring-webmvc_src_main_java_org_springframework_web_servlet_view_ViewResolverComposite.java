<METHOD_START> public void void ( java.util.List<org.springframework.web.servlet.view.ViewResolver> < ViewResolver > java.util.List<org.springframework.web.servlet.view.ViewResolver> ) { this . java.util.List<org.springframework.web.servlet.view.ViewResolver> . clear ( ) ; if ( ! CollectionUtils . isEmpty ( java.util.List<org.springframework.web.servlet.view.ViewResolver> ) ) { this . java.util.List<org.springframework.web.servlet.view.ViewResolver> . addAll ( java.util.List<org.springframework.web.servlet.view.ViewResolver> ) ; } }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.web.servlet.view.ViewResolver> < ViewResolver > java.util.List<org.springframework.web.servlet.view.ViewResolver> ( ) { return java.util.Collections . java.util.List<org.springframework.web.servlet.view.ViewResolver> ( this . java.util.List<org.springframework.web.servlet.view.ViewResolver> ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.web.servlet.view.ApplicationContext ) throws org.springframework.web.servlet.view.BeansException { for ( ViewResolver org.springframework.web.servlet.view.ViewResolver : this . java.util.List<org.springframework.web.servlet.view.ViewResolver> ) { if ( org.springframework.web.servlet.view.ViewResolver instanceof ApplicationContextAware ) { ( ( ApplicationContextAware ) org.springframework.web.servlet.view.ViewResolver ) . setApplicationContext ( org.springframework.web.servlet.view.ApplicationContext ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContext org.springframework.web.servlet.view.ServletContext ) { for ( ViewResolver org.springframework.web.servlet.view.ViewResolver : this . java.util.List<org.springframework.web.servlet.view.ViewResolver> ) { if ( org.springframework.web.servlet.view.ViewResolver instanceof ServletContextAware ) { ( ( ServletContextAware ) org.springframework.web.servlet.view.ViewResolver ) . setServletContext ( org.springframework.web.servlet.view.ServletContext ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { for ( ViewResolver org.springframework.web.servlet.view.ViewResolver : this . java.util.List<org.springframework.web.servlet.view.ViewResolver> ) { if ( org.springframework.web.servlet.view.ViewResolver instanceof InitializingBean ) { ( ( InitializingBean ) org.springframework.web.servlet.view.ViewResolver ) . afterPropertiesSet ( ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.view.View org.springframework.web.servlet.view.View ( java.lang.String java.lang.String , java.util.Locale java.util.Locale ) throws java.lang.Exception { for ( ViewResolver org.springframework.web.servlet.view.ViewResolver : this . java.util.List<org.springframework.web.servlet.view.ViewResolver> ) { View org.springframework.web.servlet.view.View = org.springframework.web.servlet.view.ViewResolver . resolveViewName ( java.lang.String , java.util.Locale ) ; if ( org.springframework.web.servlet.view.View != null ) { return org.springframework.web.servlet.view.View ; } } return null ; }  <METHOD_END>
