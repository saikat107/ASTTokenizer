<METHOD_START> public void ( java.lang.String [] java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.test.autoconfigure.data.neo4j.Statement org.springframework.boot.test.autoconfigure.data.neo4j.Statement ( Statement org.springframework.boot.test.autoconfigure.data.neo4j.Statement , Description org.springframework.boot.test.autoconfigure.data.neo4j.Description ) { try { this . org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory = org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory ( ) ; return new org.springframework.boot.test.autoconfigure.data.neo4j.Neo4jTestServer.Neo4jStatement ( org.springframework.boot.test.autoconfigure.data.neo4j.Statement , this . org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory ) ; } catch ( java.lang.Exception java.lang.Exception ) { org.springframework.boot.test.autoconfigure.data.neo4j.Log . error ( STRING , java.lang.Exception ) ; return new org.springframework.boot.test.autoconfigure.data.neo4j.Neo4jTestServer.SkipStatement ( ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory ( ) { return this . org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory ( ) { Configuration org.springframework.boot.test.autoconfigure.data.neo4j.Configuration = new Configuration . Configuration ( ) . uri ( STRING ) . build ( ) ; SessionFactory org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory = new SessionFactory ( org.springframework.boot.test.autoconfigure.data.neo4j.Configuration , this . java.lang.String[] ) ; void ( org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory ) ; return org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory ; }  <METHOD_END>
<METHOD_START> private void void ( SessionFactory org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory ) { org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory . openSession ( ) . beginTransaction ( ) . close ( ) ; }  <METHOD_END>
<METHOD_START> void ( Statement org.springframework.boot.test.autoconfigure.data.neo4j.Statement , SessionFactory org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory ) { this . org.springframework.boot.test.autoconfigure.data.neo4j.Statement = org.springframework.boot.test.autoconfigure.data.neo4j.Statement ; this . org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory = org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Throwable { try { this . org.springframework.boot.test.autoconfigure.data.neo4j.Statement . evaluate ( ) ; } finally { try { this . org.springframework.boot.test.autoconfigure.data.neo4j.SessionFactory . close ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { org.springframework.boot.test.autoconfigure.data.neo4j.Log . warn ( STRING , java.lang.Exception ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Throwable { Assume . assumeTrue ( STRING + STRING , false ) ; }  <METHOD_END>
