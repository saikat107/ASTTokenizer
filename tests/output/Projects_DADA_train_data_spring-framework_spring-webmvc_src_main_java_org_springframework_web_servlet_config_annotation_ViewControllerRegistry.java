<METHOD_START> public org.springframework.web.servlet.config.annotation.ViewControllerRegistration org.springframework.web.servlet.config.annotation.ViewControllerRegistration ( java.lang.String java.lang.String ) { ViewControllerRegistration org.springframework.web.servlet.config.annotation.ViewControllerRegistration = new ViewControllerRegistration ( java.lang.String ) ; org.springframework.web.servlet.config.annotation.ViewControllerRegistration . setApplicationContext ( this . org.springframework.web.servlet.config.annotation.ApplicationContext ) ; this . java.util.List<org.springframework.web.servlet.config.annotation.ViewControllerRegistration> . add ( org.springframework.web.servlet.config.annotation.ViewControllerRegistration ) ; return org.springframework.web.servlet.config.annotation.ViewControllerRegistration ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { RedirectViewControllerRegistration org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration = new RedirectViewControllerRegistration ( java.lang.String , java.lang.String ) ; org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration . setApplicationContext ( this . org.springframework.web.servlet.config.annotation.ApplicationContext ) ; this . java.util.List<org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration> . add ( org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration ) ; return org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , HttpStatus org.springframework.web.servlet.config.annotation.HttpStatus ) { ViewControllerRegistration org.springframework.web.servlet.config.annotation.ViewControllerRegistration = new ViewControllerRegistration ( java.lang.String ) ; org.springframework.web.servlet.config.annotation.ViewControllerRegistration . setApplicationContext ( this . org.springframework.web.servlet.config.annotation.ApplicationContext ) ; org.springframework.web.servlet.config.annotation.ViewControllerRegistration . setStatusCode ( org.springframework.web.servlet.config.annotation.HttpStatus ) ; org.springframework.web.servlet.config.annotation.ViewControllerRegistration . getViewController ( ) . setStatusOnly ( true ) ; this . java.util.List<org.springframework.web.servlet.config.annotation.ViewControllerRegistration> . add ( org.springframework.web.servlet.config.annotation.ViewControllerRegistration ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> protected void void ( ApplicationContext org.springframework.web.servlet.config.annotation.ApplicationContext ) { this . org.springframework.web.servlet.config.annotation.ApplicationContext = org.springframework.web.servlet.config.annotation.ApplicationContext ; }  <METHOD_END>
<METHOD_START> protected org.springframework.web.servlet.config.annotation.AbstractHandlerMapping org.springframework.web.servlet.config.annotation.AbstractHandlerMapping ( ) { if ( this . java.util.List<org.springframework.web.servlet.config.annotation.ViewControllerRegistration> . isEmpty ( ) && this . java.util.List<org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration> . isEmpty ( ) ) { return null ; } java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; for ( ViewControllerRegistration org.springframework.web.servlet.config.annotation.ViewControllerRegistration : this . java.util.List<org.springframework.web.servlet.config.annotation.ViewControllerRegistration> ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( org.springframework.web.servlet.config.annotation.ViewControllerRegistration . getUrlPath ( ) , org.springframework.web.servlet.config.annotation.ViewControllerRegistration . getViewController ( ) ) ; } for ( RedirectViewControllerRegistration org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration : this . java.util.List<org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration> ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration . getUrlPath ( ) , org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration . getViewController ( ) ) ; } SimpleUrlHandlerMapping org.springframework.web.servlet.config.annotation.SimpleUrlHandlerMapping = new SimpleUrlHandlerMapping ( ) ; org.springframework.web.servlet.config.annotation.SimpleUrlHandlerMapping . setOrder ( this . int ) ; org.springframework.web.servlet.config.annotation.SimpleUrlHandlerMapping . setUrlMap ( java.util.Map<java.lang.String,java.lang.Object> ) ; return org.springframework.web.servlet.config.annotation.SimpleUrlHandlerMapping ; }  <METHOD_END>
