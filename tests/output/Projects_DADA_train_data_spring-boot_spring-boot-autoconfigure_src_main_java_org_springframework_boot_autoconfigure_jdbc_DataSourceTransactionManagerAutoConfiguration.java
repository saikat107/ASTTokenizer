<METHOD_START> void ( javax.sql.DataSource javax.sql.DataSource , ObjectProvider < TransactionManagerCustomizers > org.springframework.boot.autoconfigure.jdbc.ObjectProvider<org.springframework.boot.autoconfigure.jdbc.TransactionManagerCustomizers> ) { this . javax.sql.DataSource = javax.sql.DataSource ; this . org.springframework.boot.autoconfigure.jdbc.TransactionManagerCustomizers = org.springframework.boot.autoconfigure.jdbc.ObjectProvider<org.springframework.boot.autoconfigure.jdbc.TransactionManagerCustomizers> . getIfAvailable ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnMissingBean ( PlatformTransactionManager .class ) public org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManager org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManager ( DataSourceProperties org.springframework.boot.autoconfigure.jdbc.DataSourceProperties ) { DataSourceTransactionManager org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManager = new DataSourceTransactionManager ( this . javax.sql.DataSource ) ; if ( this . org.springframework.boot.autoconfigure.jdbc.TransactionManagerCustomizers != null ) { this . org.springframework.boot.autoconfigure.jdbc.TransactionManagerCustomizers . customize ( org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManager ) ; } return org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManager ; }  <METHOD_END>
