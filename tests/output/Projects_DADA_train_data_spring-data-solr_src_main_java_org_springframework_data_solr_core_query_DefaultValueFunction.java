<METHOD_START> private void ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { super( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object , java.lang.Object ) ); }  <METHOD_END>
<METHOD_START> public static org.springframework.data.solr.core.query.DefaultValueFunction org.springframework.data.solr.core.query.DefaultValueFunction ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.solr.core.query.DefaultValueFunction ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.solr.core.query.DefaultValueFunction org.springframework.data.solr.core.query.DefaultValueFunction ( Field org.springframework.data.solr.core.query.Field , java.lang.Object java.lang.Object ) { Assert . notNull ( org.springframework.data.solr.core.query.Field , STRING ) ; return org.springframework.data.solr.core.query.DefaultValueFunction ( org.springframework.data.solr.core.query.Field . getName ( ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.solr.core.query.DefaultValueFunction org.springframework.data.solr.core.query.DefaultValueFunction ( Function org.springframework.data.solr.core.query.Function , java.lang.Object java.lang.Object ) { Assert . notNull ( org.springframework.data.solr.core.query.Function , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.solr.core.query.DefaultValueFunction ( org.springframework.data.solr.core.query.Function , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
