<METHOD_START> @ Test public void void ( ) { org.springframework.jdbc.support.KeyHolder . getKeyList ( ) . addAll ( java.util.List<java.util.Map<java.lang.String,java.lang.Integer>> ( java.util.Map<java.lang.String,java.lang.Integer> ( STRING , NUMBER ) ) ) ; assertEquals ( STRING , NUMBER , org.springframework.jdbc.support.KeyHolder . getKey ( ) . intValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.jdbc.support.KeyHolder . getKeyList ( ) . addAll ( java.util.List<java.util.Map<java.lang.String,java.lang.String>> ( java.util.Map<java.lang.String,java.lang.String> ( STRING , STRING ) ) ) ; org.springframework.jdbc.support.ExpectedException . expect ( DataRetrievalFailureException .class ) ; org.springframework.jdbc.support.ExpectedException . expectMessage ( startsWith ( STRING ) ) ; org.springframework.jdbc.support.KeyHolder . getKey ( ) . intValue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.jdbc.support.KeyHolder . getKeyList ( ) . addAll ( java.util.List<java.util.Map<java.lang.Object,java.lang.Object>> ( java.util.Map<java.lang.Object,java.lang.Object> ( ) ) ) ; org.springframework.jdbc.support.ExpectedException . expect ( DataRetrievalFailureException .class ) ; org.springframework.jdbc.support.ExpectedException . expectMessage ( startsWith ( STRING ) ) ; org.springframework.jdbc.support.KeyHolder . getKey ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) { { java.lang.Object ( STRING , NUMBER ) ; java.lang.Object ( STRING , NUMBER ) ; } } ; org.springframework.jdbc.support.KeyHolder . getKeyList ( ) . addAll ( java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ( java.util.Map<java.lang.String,java.lang.Object> ) ) ; assertEquals ( STRING , NUMBER , org.springframework.jdbc.support.KeyHolder . getKeys ( ) . size ( ) ) ; org.springframework.jdbc.support.ExpectedException . expect ( InvalidDataAccessApiUsageException .class ) ; org.springframework.jdbc.support.ExpectedException . expectMessage ( startsWith ( STRING ) ) ; org.springframework.jdbc.support.KeyHolder . getKey ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) { { java.lang.Object ( STRING , NUMBER ) ; java.lang.Object ( STRING , NUMBER ) ; } } ; org.springframework.jdbc.support.KeyHolder . getKeyList ( ) . addAll ( java.util.List<java.util.Map<java.lang.String,java.lang.Object>> ( java.util.Map<java.lang.String,java.lang.Object> , java.util.Map<java.lang.String,java.lang.Object> ) ) ; assertEquals ( STRING , NUMBER , org.springframework.jdbc.support.KeyHolder . getKeyList ( ) . size ( ) ) ; org.springframework.jdbc.support.ExpectedException . expect ( InvalidDataAccessApiUsageException .class ) ; org.springframework.jdbc.support.ExpectedException . expectMessage ( startsWith ( STRING ) ) ; org.springframework.jdbc.support.KeyHolder . getKeys ( ) ; }  <METHOD_END>
