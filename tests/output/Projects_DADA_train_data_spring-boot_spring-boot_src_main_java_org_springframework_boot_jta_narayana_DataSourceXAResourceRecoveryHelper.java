<METHOD_START> public void ( javax.sql.XADataSource javax.sql.XADataSource ) { this( javax.sql.XADataSource , null , null ); }  <METHOD_END>
<METHOD_START> public void ( javax.sql.XADataSource javax.sql.XADataSource , java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( javax.sql.XADataSource , STRING ) ; this . javax.sql.XADataSource = javax.sql.XADataSource ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.transaction.xa.XAResource [] javax.transaction.xa.XAResource[] ( ) { if ( boolean ( ) ) { return new javax.transaction.xa.XAResource [] { this } ; } return javax.transaction.xa.XAResource[] ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { if ( this . javax.transaction.xa.XAResource == null ) { try { this . javax.sql.XAConnection = javax.sql.XAConnection ( ) ; this . javax.transaction.xa.XAResource = this . javax.sql.XAConnection . javax.transaction.xa.XAResource ( ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { org.springframework.boot.jta.narayana.Log . warn ( STRING , java.sql.SQLException ) ; return false ; } } return true ; }  <METHOD_END>
<METHOD_START> private javax.sql.XAConnection javax.sql.XAConnection ( ) java.sql.SQLException { if ( this . java.lang.String == null && this . java.lang.String == null ) { return this . javax.sql.XADataSource . javax.sql.XAConnection ( ) ; } return this . javax.sql.XADataSource . javax.sql.XAConnection ( this . java.lang.String , this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.transaction.xa.Xid [] javax.transaction.xa.Xid[] ( int int ) throws javax.transaction.xa.XAException { try { return javax.transaction.xa.XAResource ( true ) . javax.transaction.xa.Xid[] ( int ) ; } finally { if ( int == javax.transaction.xa.XAResource . int ) { void ( ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ) javax.transaction.xa.XAException { try { this . javax.sql.XAConnection . void ( ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { org.springframework.boot.jta.narayana.Log . warn ( STRING , java.sql.SQLException ) ; } finally { this . javax.sql.XAConnection = null ; this . javax.transaction.xa.XAResource = null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( javax.transaction.xa.Xid javax.transaction.xa.Xid , int int ) throws javax.transaction.xa.XAException { javax.transaction.xa.XAResource ( true ) . void ( javax.transaction.xa.Xid , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( javax.transaction.xa.Xid javax.transaction.xa.Xid , int int ) throws javax.transaction.xa.XAException { javax.transaction.xa.XAResource ( true ) . void ( javax.transaction.xa.Xid , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( javax.transaction.xa.Xid javax.transaction.xa.Xid ) throws javax.transaction.xa.XAException { return javax.transaction.xa.XAResource ( true ) . int ( javax.transaction.xa.Xid ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( javax.transaction.xa.Xid javax.transaction.xa.Xid , boolean boolean ) throws javax.transaction.xa.XAException { javax.transaction.xa.XAResource ( true ) . void ( javax.transaction.xa.Xid , boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( javax.transaction.xa.Xid javax.transaction.xa.Xid ) throws javax.transaction.xa.XAException { javax.transaction.xa.XAResource ( true ) . void ( javax.transaction.xa.Xid ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( javax.transaction.xa.XAResource javax.transaction.xa.XAResource ) throws javax.transaction.xa.XAException { return javax.transaction.xa.XAResource ( true ) . boolean ( javax.transaction.xa.XAResource ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( javax.transaction.xa.Xid javax.transaction.xa.Xid ) throws javax.transaction.xa.XAException { javax.transaction.xa.XAResource ( true ) . void ( javax.transaction.xa.Xid ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) javax.transaction.xa.XAException { return javax.transaction.xa.XAResource ( true ) . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int ) throws javax.transaction.xa.XAException { return javax.transaction.xa.XAResource ( true ) . boolean ( int ) ; }  <METHOD_END>
<METHOD_START> private javax.transaction.xa.XAResource javax.transaction.xa.XAResource ( boolean boolean ) { Assert . state ( this . javax.transaction.xa.XAResource != null || ! boolean , STRING ) ; return this . javax.transaction.xa.XAResource ; }  <METHOD_END>
