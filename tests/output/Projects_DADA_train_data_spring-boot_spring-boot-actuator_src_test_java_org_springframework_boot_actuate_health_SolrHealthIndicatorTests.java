<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.actuate.health.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.actuate.health.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.health.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( PropertyPlaceholderAutoConfiguration .class , SolrAutoConfiguration .class , EndpointAutoConfiguration .class , HealthIndicatorAutoConfiguration .class ) ; assertThat ( this . org.springframework.boot.actuate.health.AnnotationConfigApplicationContext . getBeanNamesForType ( SolrClient .class ) . length ) . isEqualTo ( NUMBER ) ; SolrHealthIndicator org.springframework.boot.actuate.health.SolrHealthIndicator = this . org.springframework.boot.actuate.health.AnnotationConfigApplicationContext . getBean ( SolrHealthIndicator .class ) ; assertThat ( org.springframework.boot.actuate.health.SolrHealthIndicator ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SolrClient org.springframework.boot.actuate.health.SolrClient = mock ( SolrClient .class ) ; given ( org.springframework.boot.actuate.health.SolrClient . request ( any ( CoreAdminRequest .class ) , isNull ( ) ) ) . willReturn ( org.springframework.boot.actuate.health.NamedList<java.lang.Object> ( NUMBER ) ) ; SolrHealthIndicator org.springframework.boot.actuate.health.SolrHealthIndicator = new SolrHealthIndicator ( org.springframework.boot.actuate.health.SolrClient ) ; Health org.springframework.boot.actuate.health.Health = org.springframework.boot.actuate.health.SolrHealthIndicator . health ( ) ; assertThat ( org.springframework.boot.actuate.health.Health . getStatus ( ) ) . isEqualTo ( Status . UP ) ; assertThat ( org.springframework.boot.actuate.health.Health . getDetails ( ) . get ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SolrClient org.springframework.boot.actuate.health.SolrClient = mock ( SolrClient .class ) ; given ( org.springframework.boot.actuate.health.SolrClient . request ( any ( CoreAdminRequest .class ) , isNull ( ) ) ) . willReturn ( org.springframework.boot.actuate.health.NamedList<java.lang.Object> ( NUMBER ) ) ; SolrHealthIndicator org.springframework.boot.actuate.health.SolrHealthIndicator = new SolrHealthIndicator ( org.springframework.boot.actuate.health.SolrClient ) ; Health org.springframework.boot.actuate.health.Health = org.springframework.boot.actuate.health.SolrHealthIndicator . health ( ) ; assertThat ( org.springframework.boot.actuate.health.Health . getStatus ( ) ) . isEqualTo ( Status . DOWN ) ; assertThat ( org.springframework.boot.actuate.health.Health . getDetails ( ) . get ( STRING ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SolrClient org.springframework.boot.actuate.health.SolrClient = mock ( SolrClient .class ) ; given ( org.springframework.boot.actuate.health.SolrClient . request ( any ( CoreAdminRequest .class ) , isNull ( ) ) ) . willThrow ( new java.io.IOException ( STRING ) ) ; SolrHealthIndicator org.springframework.boot.actuate.health.SolrHealthIndicator = new SolrHealthIndicator ( org.springframework.boot.actuate.health.SolrClient ) ; Health org.springframework.boot.actuate.health.Health = org.springframework.boot.actuate.health.SolrHealthIndicator . health ( ) ; assertThat ( org.springframework.boot.actuate.health.Health . getStatus ( ) ) . isEqualTo ( Status . DOWN ) ; assertThat ( ( ( java.lang.String ) org.springframework.boot.actuate.health.Health . getDetails ( ) . get ( STRING ) ) . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.health.NamedList<java.lang.Object> < java.lang.Object > org.springframework.boot.actuate.health.NamedList<java.lang.Object> ( int int ) { NamedList < java.lang.Object > org.springframework.boot.actuate.health.NamedList<java.lang.Object> = new NamedList <> ( ) ; NamedList < java.lang.Object > org.springframework.boot.actuate.health.NamedList<java.lang.Object> = new NamedList <> ( ) ; org.springframework.boot.actuate.health.NamedList<java.lang.Object> . add ( STRING , int ) ; org.springframework.boot.actuate.health.NamedList<java.lang.Object> . add ( STRING , org.springframework.boot.actuate.health.NamedList<java.lang.Object> ) ; return org.springframework.boot.actuate.health.NamedList<java.lang.Object> ; }  <METHOD_END>
