<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.config.PublishSubscribeChannelParserTests> ( ) ) ; PublishSubscribeChannel org.springframework.integration.config.PublishSubscribeChannel = ( PublishSubscribeChannel ) org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.PublishSubscribeChannel ) ; BroadcastingDispatcher org.springframework.integration.config.BroadcastingDispatcher = ( BroadcastingDispatcher ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; org.springframework.integration.config.BroadcastingDispatcher . setApplySequence ( true ) ; org.springframework.integration.config.BroadcastingDispatcher . addHandler ( message -> { } ) ; org.springframework.integration.config.BroadcastingDispatcher . dispatch ( new GenericMessage < java.lang.String > ( STRING ) ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.BroadcastingDispatcher ) ; assertNull ( org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertFalse ( ( java.lang.Boolean ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertTrue ( ( java.lang.Boolean ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; java.lang.Object java.lang.Object = org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( IntegrationUtils . INTEGRATION_MESSAGE_BUILDER_FACTORY_BEAN_NAME ) ; assertSame ( java.lang.Object , org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; org.springframework.integration.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.config.PublishSubscribeChannelParserTests> ( ) ) ; PublishSubscribeChannel org.springframework.integration.config.PublishSubscribeChannel = ( PublishSubscribeChannel ) org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.PublishSubscribeChannel ) ; BroadcastingDispatcher org.springframework.integration.config.BroadcastingDispatcher = ( BroadcastingDispatcher ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertTrue ( ( java.lang.Boolean ) new DirectFieldAccessor ( org.springframework.integration.config.BroadcastingDispatcher ) . getPropertyValue ( STRING ) ) ; org.springframework.integration.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.config.PublishSubscribeChannelParserTests> ( ) ) ; PublishSubscribeChannel org.springframework.integration.config.PublishSubscribeChannel = ( PublishSubscribeChannel ) org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.PublishSubscribeChannel ) ; BroadcastingDispatcher org.springframework.integration.config.BroadcastingDispatcher = ( BroadcastingDispatcher ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertTrue ( ( java.lang.Boolean ) new DirectFieldAccessor ( org.springframework.integration.config.BroadcastingDispatcher ) . getPropertyValue ( STRING ) ) ; org.springframework.integration.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.config.PublishSubscribeChannelParserTests> ( ) ) ; PublishSubscribeChannel org.springframework.integration.config.PublishSubscribeChannel = ( PublishSubscribeChannel ) org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.PublishSubscribeChannel ) ; BroadcastingDispatcher org.springframework.integration.config.BroadcastingDispatcher = ( BroadcastingDispatcher ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.BroadcastingDispatcher ) ; java.util.concurrent.Executor java.util.concurrent.Executor = ( java.util.concurrent.Executor ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertNotNull ( java.util.concurrent.Executor ) ; assertEquals ( ErrorHandlingTaskExecutor .class , java.util.concurrent.Executor . java.lang.Class<? extends java.util.concurrent.Executor> ( ) ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( java.util.concurrent.Executor ) ; java.util.concurrent.Executor java.util.concurrent.Executor = ( java.util.concurrent.Executor ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertEquals ( org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( STRING ) , java.util.concurrent.Executor ) ; org.springframework.integration.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.config.PublishSubscribeChannelParserTests> ( ) ) ; PublishSubscribeChannel org.springframework.integration.config.PublishSubscribeChannel = ( PublishSubscribeChannel ) org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.PublishSubscribeChannel ) ; BroadcastingDispatcher org.springframework.integration.config.BroadcastingDispatcher = ( BroadcastingDispatcher ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.BroadcastingDispatcher ) ; assertTrue ( ( java.lang.Boolean ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; java.util.concurrent.Executor java.util.concurrent.Executor = ( java.util.concurrent.Executor ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertNotNull ( java.util.concurrent.Executor ) ; assertEquals ( ErrorHandlingTaskExecutor .class , java.util.concurrent.Executor . java.lang.Class<? extends java.util.concurrent.Executor> ( ) ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( java.util.concurrent.Executor ) ; java.util.concurrent.Executor java.util.concurrent.Executor = ( java.util.concurrent.Executor ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertEquals ( org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( STRING ) , java.util.concurrent.Executor ) ; org.springframework.integration.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.config.PublishSubscribeChannelParserTests> ( ) ) ; PublishSubscribeChannel org.springframework.integration.config.PublishSubscribeChannel = ( PublishSubscribeChannel ) org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.PublishSubscribeChannel ) ; BroadcastingDispatcher org.springframework.integration.config.BroadcastingDispatcher = ( BroadcastingDispatcher ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.BroadcastingDispatcher ) ; assertTrue ( ( java.lang.Boolean ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; java.util.concurrent.Executor java.util.concurrent.Executor = ( java.util.concurrent.Executor ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertNotNull ( java.util.concurrent.Executor ) ; assertEquals ( ErrorHandlingTaskExecutor .class , java.util.concurrent.Executor . java.lang.Class<? extends java.util.concurrent.Executor> ( ) ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( java.util.concurrent.Executor ) ; java.util.concurrent.Executor java.util.concurrent.Executor = ( java.util.concurrent.Executor ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertEquals ( org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( STRING ) , java.util.concurrent.Executor ) ; org.springframework.integration.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.config.PublishSubscribeChannelParserTests> ( ) ) ; PublishSubscribeChannel org.springframework.integration.config.PublishSubscribeChannel = ( PublishSubscribeChannel ) org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.PublishSubscribeChannel ) ; ErrorHandler org.springframework.integration.config.ErrorHandler = ( ErrorHandler ) org.springframework.integration.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertNotNull ( org.springframework.integration.config.ErrorHandler ) ; assertEquals ( org.springframework.integration.config.ClassPathXmlApplicationContext . getBean ( STRING ) , org.springframework.integration.config.ErrorHandler ) ; org.springframework.integration.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
