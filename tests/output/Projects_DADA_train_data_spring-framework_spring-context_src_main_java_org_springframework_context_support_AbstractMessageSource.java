<METHOD_START> @ java.lang.Override public void void ( MessageSource org.springframework.context.support.MessageSource ) { this . org.springframework.context.support.MessageSource = org.springframework.context.support.MessageSource ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.support.MessageSource org.springframework.context.support.MessageSource ( ) { return this . org.springframework.context.support.MessageSource ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Properties java.util.Properties ) { this . java.util.Properties = java.util.Properties ; }  <METHOD_END>
<METHOD_START> protected java.util.Properties java.util.Properties ( ) { return this . java.util.Properties ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] , java.lang.String java.lang.String , java.util.Locale java.util.Locale ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String , java.lang.Object[] , java.util.Locale ) ; if ( java.lang.String != null ) { return java.lang.String ; } if ( java.lang.String == null ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; if ( java.lang.String != null ) { return java.lang.String ; } } return renderDefaultMessage ( java.lang.String , java.lang.Object[] , java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] , java.util.Locale java.util.Locale ) throws org.springframework.context.support.NoSuchMessageException { java.lang.String java.lang.String = java.lang.String ( java.lang.String , java.lang.Object[] , java.util.Locale ) ; if ( java.lang.String != null ) { return java.lang.String ; } java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; if ( java.lang.String != null ) { return java.lang.String ; } throw new NoSuchMessageException ( java.lang.String , java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final java.lang.String java.lang.String ( MessageSourceResolvable org.springframework.context.support.MessageSourceResolvable , java.util.Locale java.util.Locale ) throws org.springframework.context.support.NoSuchMessageException { java.lang.String [] java.lang.String[] = org.springframework.context.support.MessageSourceResolvable . getCodes ( ) ; if ( java.lang.String[] != null ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String , org.springframework.context.support.MessageSourceResolvable . getArguments ( ) , java.util.Locale ) ; if ( java.lang.String != null ) { return java.lang.String ; } } } java.lang.String java.lang.String = java.lang.String ( org.springframework.context.support.MessageSourceResolvable , java.util.Locale ) ; if ( java.lang.String != null ) { return java.lang.String ; } throw new NoSuchMessageException ( ! ObjectUtils . isEmpty ( java.lang.String[] ) ? java.lang.String[] [ java.lang.String[] . int - NUMBER ] : null , java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] , java.util.Locale java.util.Locale ) { if ( java.lang.String == null ) { return null ; } if ( java.util.Locale == null ) { java.util.Locale = java.util.Locale . java.util.Locale ( ) ; } java.lang.Object [] java.lang.Object[] = java.lang.Object[] ; if ( ! isAlwaysUseMessageFormat ( ) && ObjectUtils . isEmpty ( java.lang.Object[] ) ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String , java.util.Locale ) ; if ( java.lang.String != null ) { return java.lang.String ; } } else { java.lang.Object[] = java.lang.Object[] ( java.lang.Object[] , java.util.Locale ) ; java.text.MessageFormat java.text.MessageFormat = java.text.MessageFormat ( java.lang.String , java.util.Locale ) ; if ( java.text.MessageFormat != null ) { synchronized ( java.text.MessageFormat ) { return java.text.MessageFormat . java.lang.String ( java.lang.Object[] ) ; } } } java.util.Properties java.util.Properties = java.util.Properties ( ) ; if ( java.util.Properties != null ) { java.lang.String java.lang.String = java.util.Properties . java.lang.String ( java.lang.String ) ; if ( java.lang.String != null ) { return formatMessage ( java.lang.String , java.lang.Object[] , java.util.Locale ) ; } } return java.lang.String ( java.lang.String , java.lang.Object[] , java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] , java.util.Locale java.util.Locale ) { MessageSource org.springframework.context.support.MessageSource = org.springframework.context.support.MessageSource ( ) ; if ( org.springframework.context.support.MessageSource != null ) { if ( org.springframework.context.support.MessageSource instanceof org.springframework.context.support.AbstractMessageSource ) { return ( ( org.springframework.context.support.AbstractMessageSource ) org.springframework.context.support.MessageSource ) . java.lang.String ( java.lang.String , java.lang.Object[] , java.util.Locale ) ; } else { return org.springframework.context.support.MessageSource . getMessage ( java.lang.String , java.lang.Object[] , null , java.util.Locale ) ; } } return null ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( MessageSourceResolvable org.springframework.context.support.MessageSourceResolvable , java.util.Locale java.util.Locale ) { java.lang.String java.lang.String = org.springframework.context.support.MessageSourceResolvable . getDefaultMessage ( ) ; java.lang.String [] java.lang.String[] = org.springframework.context.support.MessageSourceResolvable . getCodes ( ) ; if ( java.lang.String != null ) { if ( ! ObjectUtils . isEmpty ( java.lang.String[] ) && java.lang.String . boolean ( java.lang.String[] [ NUMBER ] ) ) { return java.lang.String ; } return renderDefaultMessage ( java.lang.String , org.springframework.context.support.MessageSourceResolvable . getArguments ( ) , java.util.Locale ) ; } return ( ! ObjectUtils . isEmpty ( java.lang.String[] ) ? java.lang.String ( java.lang.String[] [ NUMBER ] ) : null ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( boolean ( ) ) { return java.lang.String ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object [] java.lang.Object[] ( java.lang.Object [] java.lang.Object[] , java.util.Locale java.util.Locale ) { if ( java.lang.Object[] == null ) { return new java.lang.Object [ NUMBER ] ; } java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> <> ( java.lang.Object[] . int ) ; for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { if ( java.lang.Object instanceof MessageSourceResolvable ) { java.util.List<java.lang.Object> . boolean ( java.lang.String ( ( MessageSourceResolvable ) java.lang.Object , java.util.Locale ) ) ; } else { java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; } } return java.util.List<java.lang.Object> . java.lang.Object[] ( new java.lang.Object [ java.util.List<java.lang.Object> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String , java.util.Locale java.util.Locale ) { java.text.MessageFormat java.text.MessageFormat = java.text.MessageFormat ( java.lang.String , java.util.Locale ) ; if ( java.text.MessageFormat != null ) { synchronized ( java.text.MessageFormat ) { return java.text.MessageFormat . java.lang.String ( new java.lang.Object [ NUMBER ] ) ; } } return null ; }  <METHOD_END>
<METHOD_START> protected abstract java.text.MessageFormat java.text.MessageFormat ( java.lang.String java.lang.String , java.util.Locale java.util.Locale );  <METHOD_END>
