<METHOD_START> public void ( ) { boolean = true ; }  <METHOD_END>
<METHOD_START> public void void ( java.io.DataInput java.io.DataInput ) throws java.io.IOException , java.lang.ClassNotFoundException {		}  <METHOD_END>
<METHOD_START> public void void ( java.io.DataOutput java.io.DataOutput ) throws java.io.IOException {		}  <METHOD_END>
<METHOD_START> @ Before public void void ( ) { org.springframework.data.gemfire.serialization.AsmInstantiatorFactoryTest.SomeClass . boolean = false ; org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator = new AsmInstantiatorGenerator ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Instantiator org.springframework.data.gemfire.serialization.Instantiator = org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator . getInstantiator ( org.springframework.data.gemfire.serialization.AsmInstantiatorFactoryTest.SomeClass .class , NUMBER ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.serialization.Instantiator . getId ( ) ) ; assertEquals ( org.springframework.data.gemfire.serialization.AsmInstantiatorFactoryTest.SomeClass .class , org.springframework.data.gemfire.serialization.Instantiator . getInstantiatedClass ( ) ) ; java.lang.Object java.lang.Object = org.springframework.data.gemfire.serialization.Instantiator . newInstance ( ) ; assertEquals ( org.springframework.data.gemfire.serialization.AsmInstantiatorFactoryTest.SomeClass .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; assertTrue ( org.springframework.data.gemfire.serialization.AsmInstantiatorFactoryTest.SomeClass . boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Instantiator org.springframework.data.gemfire.serialization.Instantiator = org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator . getInstantiator ( org.springframework.data.gemfire.serialization.AsmInstantiatorFactoryTest.SomeClass .class , NUMBER ) ; assertTrue ( org.springframework.data.gemfire.serialization.Instantiator . getClass ( ) . getName ( ) . contains ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Instantiator org.springframework.data.gemfire.serialization.Instantiator = org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator . getInstantiator ( org.springframework.data.gemfire.serialization.AsmInstantiatorFactoryTest.SomeClass .class , NUMBER ) ; assertTrue ( org.springframework.data.gemfire.serialization.Instantiator instanceof java.io.Serializable ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Instantiator org.springframework.data.gemfire.serialization.Instantiator = org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator . getInstantiator ( org.springframework.data.gemfire.serialization.AsmInstantiatorFactoryTest.SomeClass .class , NUMBER ) ; Instantiator org.springframework.data.gemfire.serialization.Instantiator = org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator . getInstantiator ( org.springframework.data.gemfire.serialization.AsmInstantiatorFactoryTest.SomeClass .class , NUMBER ) ; assertSame ( org.springframework.data.gemfire.serialization.Instantiator , org.springframework.data.gemfire.serialization.Instantiator ) ; }  <METHOD_END>
