<METHOD_START> @ Bean org.springframework.data.rest.webmvc.AugmentingHandlerMappingUnitTests.SampleController org.springframework.data.rest.webmvc.AugmentingHandlerMappingUnitTests.SampleController ( ) { return new org.springframework.data.rest.webmvc.AugmentingHandlerMappingUnitTests.SampleController ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { RepositoryRestConfiguration org.springframework.data.rest.webmvc.RepositoryRestConfiguration = new RepositoryRestConfiguration ( new ProjectionDefinitionConfiguration ( ) , new MetadataConfiguration ( ) , mock ( EnumTranslationConfiguration .class ) ) ; org.springframework.data.rest.webmvc.RepositoryRestConfiguration . setBasePath ( STRING ) ; BasePathAwareHandlerMapping org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping = new BasePathAwareHandlerMapping ( org.springframework.data.rest.webmvc.RepositoryRestConfiguration ) ; org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping . setApplicationContext ( new AnnotationConfigApplicationContext ( org.springframework.data.rest.webmvc.AugmentingHandlerMappingUnitTests.Config .class ) ) ; org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping . afterPropertiesSet ( ) ; java.util.Map<org.springframework.data.rest.webmvc.RequestMappingInfo,org.springframework.data.rest.webmvc.HandlerMethod> < RequestMappingInfo , HandlerMethod > java.util.Map<org.springframework.data.rest.webmvc.RequestMappingInfo,org.springframework.data.rest.webmvc.HandlerMethod> = org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping . getHandlerMethods ( ) ; for ( RequestMappingInfo org.springframework.data.rest.webmvc.RequestMappingInfo : java.util.Map<org.springframework.data.rest.webmvc.RequestMappingInfo,org.springframework.data.rest.webmvc.HandlerMethod> . keySet ( ) ) { assertThat ( org.springframework.data.rest.webmvc.RequestMappingInfo . getPatternsCondition ( ) . getPatterns ( ) ) . allMatch ( it -> it . startsWith ( STRING ) ) ; } }  <METHOD_END>
<METHOD_START> @ RequestMapping ( STRING ) void void ( ) {}  <METHOD_END>
