<METHOD_START> @ java.lang.Override public java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( Advised org.springframework.aop.framework.Advised , java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList <> ( org.springframework.aop.framework.Advised . getAdvisors ( ) . length ) ; java.lang.Class<?> < ? > java.lang.Class<?> = ( java.lang.Class<> != null ? java.lang.Class<> : java.lang.reflect.Method . java.lang.Class<?> ( ) ) ; boolean boolean = boolean ( org.springframework.aop.framework.Advised , java.lang.Class<> ) ; AdvisorAdapterRegistry org.springframework.aop.framework.AdvisorAdapterRegistry = GlobalAdvisorAdapterRegistry . getInstance ( ) ; for ( Advisor org.springframework.aop.framework.Advisor : org.springframework.aop.framework.Advised . getAdvisors ( ) ) { if ( org.springframework.aop.framework.Advisor instanceof PointcutAdvisor ) { PointcutAdvisor org.springframework.aop.framework.PointcutAdvisor = ( PointcutAdvisor ) org.springframework.aop.framework.Advisor ; if ( org.springframework.aop.framework.Advised . isPreFiltered ( ) || org.springframework.aop.framework.PointcutAdvisor . getPointcut ( ) . getClassFilter ( ) . matches ( java.lang.Class<> ) ) { MethodInterceptor [] org.springframework.aop.framework.MethodInterceptor[] = org.springframework.aop.framework.AdvisorAdapterRegistry . getInterceptors ( org.springframework.aop.framework.Advisor ) ; MethodMatcher org.springframework.aop.framework.MethodMatcher = org.springframework.aop.framework.PointcutAdvisor . getPointcut ( ) . getMethodMatcher ( ) ; if ( MethodMatchers . matches ( org.springframework.aop.framework.MethodMatcher , java.lang.reflect.Method , java.lang.Class<> , boolean ) ) { if ( org.springframework.aop.framework.MethodMatcher . isRuntime ( ) ) { for ( MethodInterceptor org.springframework.aop.framework.MethodInterceptor : org.springframework.aop.framework.MethodInterceptor[] ) { java.util.List<java.lang.Object> . boolean ( new InterceptorAndDynamicMethodMatcher ( org.springframework.aop.framework.MethodInterceptor , org.springframework.aop.framework.MethodMatcher ) ) ; } } else { java.util.List<java.lang.Object> . boolean ( java.util.Arrays . java.util.List ( org.springframework.aop.framework.MethodInterceptor[] ) ) ; } } } } else if ( org.springframework.aop.framework.Advisor instanceof IntroductionAdvisor ) { IntroductionAdvisor org.springframework.aop.framework.IntroductionAdvisor = ( IntroductionAdvisor ) org.springframework.aop.framework.Advisor ; if ( org.springframework.aop.framework.Advised . isPreFiltered ( ) || org.springframework.aop.framework.IntroductionAdvisor . getClassFilter ( ) . matches ( java.lang.Class<> ) ) { Interceptor [] org.springframework.aop.framework.Interceptor[] = org.springframework.aop.framework.AdvisorAdapterRegistry . getInterceptors ( org.springframework.aop.framework.Advisor ) ; java.util.List<java.lang.Object> . boolean ( java.util.Arrays . java.util.List ( org.springframework.aop.framework.Interceptor[] ) ) ; } } else { Interceptor [] org.springframework.aop.framework.Interceptor[] = org.springframework.aop.framework.AdvisorAdapterRegistry . getInterceptors ( org.springframework.aop.framework.Advisor ) ; java.util.List<java.lang.Object> . boolean ( java.util.Arrays . java.util.List ( org.springframework.aop.framework.Interceptor[] ) ) ; } } return java.util.List<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( Advised org.springframework.aop.framework.Advised , java.lang.Class<?> < ? > java.lang.Class<?> ) { for ( int int = NUMBER ; int < org.springframework.aop.framework.Advised . getAdvisors ( ) . length ; int ++ ) { Advisor org.springframework.aop.framework.Advisor = org.springframework.aop.framework.Advised . getAdvisors ( ) [ int ] ; if ( org.springframework.aop.framework.Advisor instanceof IntroductionAdvisor ) { IntroductionAdvisor org.springframework.aop.framework.IntroductionAdvisor = ( IntroductionAdvisor ) org.springframework.aop.framework.Advisor ; if ( org.springframework.aop.framework.IntroductionAdvisor . getClassFilter ( ) . matches ( java.lang.Class<> ) ) { return true ; } } } return false ; }  <METHOD_END>
