<METHOD_START> public void ( java.util.Set<org.springframework.data.jpa.repository.support.EntityManager> < EntityManager > java.util.Set<org.springframework.data.jpa.repository.support.EntityManager> ) { Assert . notNull ( java.util.Set<org.springframework.data.jpa.repository.support.EntityManager> , STRING ) ; Assert . notEmpty ( java.util.Set<org.springframework.data.jpa.repository.support.EntityManager> , STRING ) ; this . org.springframework.data.jpa.repository.support.MultiValueMap<java.lang.Class<?>,org.springframework.data.jpa.repository.support.EntityManager> = new LinkedMultiValueMap < java.lang.Class<?> < ? > , EntityManager > ( ) ; for ( EntityManager org.springframework.data.jpa.repository.support.EntityManager : java.util.Set<org.springframework.data.jpa.repository.support.EntityManager> ) { for ( ManagedType < ? > org.springframework.data.jpa.repository.support.ManagedType<?> : org.springframework.data.jpa.repository.support.EntityManager . getMetamodel ( ) . getManagedTypes ( ) ) { this . org.springframework.data.jpa.repository.support.MultiValueMap<java.lang.Class<?>,org.springframework.data.jpa.repository.support.EntityManager> . add ( org.springframework.data.jpa.repository.support.ManagedType<> . getJavaType ( ) , org.springframework.data.jpa.repository.support.EntityManager ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.jpa.repository.support.EntityManager org.springframework.data.jpa.repository.support.EntityManager ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; if ( ! org.springframework.data.jpa.repository.support.MultiValueMap<java.lang.Class<?>,org.springframework.data.jpa.repository.support.EntityManager> . containsKey ( java.lang.Class<> ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , java.lang.Class<> ) ) ; } java.util.List<org.springframework.data.jpa.repository.support.EntityManager> < EntityManager > java.util.List<org.springframework.data.jpa.repository.support.EntityManager> = this . org.springframework.data.jpa.repository.support.MultiValueMap<java.lang.Class<?>,org.springframework.data.jpa.repository.support.EntityManager> . get ( java.lang.Class<> ) ; if ( java.util.List<org.springframework.data.jpa.repository.support.EntityManager> . size ( ) == NUMBER ) { return java.util.List<org.springframework.data.jpa.repository.support.EntityManager> . get ( NUMBER ) ; } throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , java.lang.Class<> . java.lang.String ( ) , java.util.List<org.springframework.data.jpa.repository.support.EntityManager> ) ) ; }  <METHOD_END>
