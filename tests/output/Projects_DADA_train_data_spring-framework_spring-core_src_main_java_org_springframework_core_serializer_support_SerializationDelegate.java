<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . org.springframework.core.serializer.support.Serializer<java.lang.Object> = new DefaultSerializer ( ) ; this . org.springframework.core.serializer.support.Deserializer<java.lang.Object> = new DefaultDeserializer ( java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> public void ( Serializer < java.lang.Object > org.springframework.core.serializer.support.Serializer<java.lang.Object> , Deserializer < java.lang.Object > org.springframework.core.serializer.support.Deserializer<java.lang.Object> ) { Assert . notNull ( org.springframework.core.serializer.support.Serializer<java.lang.Object> , STRING ) ; Assert . notNull ( org.springframework.core.serializer.support.Deserializer<java.lang.Object> , STRING ) ; this . org.springframework.core.serializer.support.Serializer<java.lang.Object> = org.springframework.core.serializer.support.Serializer<java.lang.Object> ; this . org.springframework.core.serializer.support.Deserializer<java.lang.Object> = org.springframework.core.serializer.support.Deserializer<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.io.OutputStream java.io.OutputStream ) throws java.io.IOException { this . org.springframework.core.serializer.support.Serializer<java.lang.Object> . serialize ( java.lang.Object , java.io.OutputStream ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.io.InputStream java.io.InputStream ) throws java.io.IOException { return this . org.springframework.core.serializer.support.Deserializer<java.lang.Object> . deserialize ( java.io.InputStream ) ; }  <METHOD_END>
