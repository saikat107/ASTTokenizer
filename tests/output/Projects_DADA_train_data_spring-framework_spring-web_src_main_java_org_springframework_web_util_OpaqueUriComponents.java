<METHOD_START> void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( java.lang.String , java.lang.String ); this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return - NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.Collections . java.util.List<java.lang.String> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> ( ) { return org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( java.nio.charset.Charset java.nio.charset.Charset ) { return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( UriTemplateVariables org.springframework.web.util.UriTemplateVariables ) { java.lang.String java.lang.String = expandUriComponent ( getScheme ( ) , org.springframework.web.util.UriTemplateVariables ) ; java.lang.String java.lang.String = expandUriComponent ( java.lang.String ( ) , org.springframework.web.util.UriTemplateVariables ) ; java.lang.String java.lang.String = expandUriComponent ( getFragment ( ) , org.springframework.web.util.UriTemplateVariables ) ; return new org.springframework.web.util.OpaqueUriComponents ( java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( ) { return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; if ( getScheme ( ) != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( getScheme ( ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( ':' ) ; } if ( this . java.lang.String != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( this . java.lang.String ) ; } if ( getFragment ( ) != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( '#' ) ; java.lang.StringBuilder . java.lang.StringBuilder ( getFragment ( ) ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URI java.net.URI ( ) { try { return new java.net.URI ( getScheme ( ) , this . java.lang.String , getFragment ( ) ) ; } catch ( java.net.URISyntaxException java.net.URISyntaxException ) { throw new java.lang.IllegalStateException ( STRING + java.net.URISyntaxException . java.lang.String ( ) , java.net.URISyntaxException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder ) { if ( getScheme ( ) != null ) { org.springframework.web.util.UriComponentsBuilder . scheme ( getScheme ( ) ) ; } if ( java.lang.String ( ) != null ) { org.springframework.web.util.UriComponentsBuilder . schemeSpecificPart ( java.lang.String ( ) ) ; } if ( getFragment ( ) != null ) { org.springframework.web.util.UriComponentsBuilder . fragment ( getFragment ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.web.util.OpaqueUriComponents ) ) { return false ; } org.springframework.web.util.OpaqueUriComponents org.springframework.web.util.OpaqueUriComponents = ( org.springframework.web.util.OpaqueUriComponents ) java.lang.Object ; return ObjectUtils . nullSafeEquals ( getScheme ( ) , org.springframework.web.util.OpaqueUriComponents . getScheme ( ) ) && ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.web.util.OpaqueUriComponents . java.lang.String ) && ObjectUtils . nullSafeEquals ( getFragment ( ) , org.springframework.web.util.OpaqueUriComponents . getFragment ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = ObjectUtils . nullSafeHashCode ( getScheme ( ) ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( this . java.lang.String ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( getFragment ( ) ) ; return int ; }  <METHOD_END>
