<METHOD_START> public void ( javax.xml.stream.XMLEventWriter javax.xml.stream.XMLEventWriter ) { this . javax.xml.stream.XMLEventFactory = javax.xml.stream.XMLEventFactory . javax.xml.stream.XMLEventFactory ( ) ; this . javax.xml.stream.XMLEventWriter = javax.xml.stream.XMLEventWriter ; }  <METHOD_END>
<METHOD_START> public void ( javax.xml.stream.XMLEventWriter javax.xml.stream.XMLEventWriter , javax.xml.stream.XMLEventFactory javax.xml.stream.XMLEventFactory ) { this . javax.xml.stream.XMLEventFactory = javax.xml.stream.XMLEventFactory ; this . javax.xml.stream.XMLEventWriter = javax.xml.stream.XMLEventWriter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.xml.sax.Locator org.xml.sax.Locator ) { if ( org.xml.sax.Locator != null ) { this . javax.xml.stream.XMLEventFactory . void ( new org.springframework.util.xml.StaxEventHandler.LocatorLocationAdapter ( org.xml.sax.Locator ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) javax.xml.stream.XMLStreamException { this . javax.xml.stream.XMLEventWriter . void ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.StartDocument ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) javax.xml.stream.XMLStreamException { this . javax.xml.stream.XMLEventWriter . void ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.EndDocument ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( javax.xml.namespace.QName javax.xml.namespace.QName , org.xml.sax.Attributes org.xml.sax.Attributes , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) throws javax.xml.stream.XMLStreamException { java.util.List<javax.xml.stream.events.Attribute> < javax.xml.stream.events.Attribute > java.util.List<javax.xml.stream.events.Attribute> = java.util.List<javax.xml.stream.events.Attribute> ( org.xml.sax.Attributes ) ; java.util.List<javax.xml.stream.events.Namespace> < javax.xml.stream.events.Namespace > java.util.List<javax.xml.stream.events.Namespace> = java.util.List<javax.xml.stream.events.Namespace> ( java.util.Map<java.lang.String,java.lang.String> ) ; this . javax.xml.stream.XMLEventWriter . void ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.StartElement ( javax.xml.namespace.QName , java.util.List<javax.xml.stream.events.Attribute> . java.util.Iterator<javax.xml.stream.events.Attribute> ( ) , java.util.List<javax.xml.stream.events.Namespace> . java.util.Iterator<javax.xml.stream.events.Namespace> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<javax.xml.stream.events.Namespace> < javax.xml.stream.events.Namespace > java.util.List<javax.xml.stream.events.Namespace> ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { java.util.List<javax.xml.stream.events.Namespace> < javax.xml.stream.events.Namespace > java.util.List<javax.xml.stream.events.Namespace> = new java.util.ArrayList<javax.xml.stream.events.Namespace> <> ( ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ; java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ; java.util.List<javax.xml.stream.events.Namespace> . boolean ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.Namespace ( java.lang.String , java.lang.String ) ) ; } return java.util.List<javax.xml.stream.events.Namespace> ; }  <METHOD_END>
<METHOD_START> private java.util.List<javax.xml.stream.events.Attribute> < javax.xml.stream.events.Attribute > java.util.List<javax.xml.stream.events.Attribute> ( org.xml.sax.Attributes org.xml.sax.Attributes ) { java.util.List<javax.xml.stream.events.Attribute> < javax.xml.stream.events.Attribute > java.util.List<javax.xml.stream.events.Attribute> = new java.util.ArrayList<javax.xml.stream.events.Attribute> <> ( ) ; for ( int int = NUMBER ; int < org.xml.sax.Attributes . int ( ) ; int ++ ) { javax.xml.namespace.QName javax.xml.namespace.QName = toQName ( org.xml.sax.Attributes . java.lang.String ( int ) , org.xml.sax.Attributes . java.lang.String ( int ) ) ; if ( ! isNamespaceDeclaration ( javax.xml.namespace.QName ) ) { java.util.List<javax.xml.stream.events.Attribute> . boolean ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.Attribute ( javax.xml.namespace.QName , org.xml.sax.Attributes . java.lang.String ( int ) ) ) ; } } return java.util.List<javax.xml.stream.events.Attribute> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( javax.xml.namespace.QName javax.xml.namespace.QName , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) throws javax.xml.stream.XMLStreamException { java.util.List<javax.xml.stream.events.Namespace> < javax.xml.stream.events.Namespace > java.util.List<javax.xml.stream.events.Namespace> = java.util.List<javax.xml.stream.events.Namespace> ( java.util.Map<java.lang.String,java.lang.String> ) ; this . javax.xml.stream.XMLEventWriter . void ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.EndElement ( javax.xml.namespace.QName , java.util.List<javax.xml.stream.events.Namespace> . java.util.Iterator<javax.xml.stream.events.Namespace> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String ) throws javax.xml.stream.XMLStreamException { this . javax.xml.stream.XMLEventWriter . void ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.Characters ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String ) throws javax.xml.stream.XMLStreamException { this . javax.xml.stream.XMLEventWriter . void ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.Characters ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String ) throws javax.xml.stream.XMLStreamException { this . javax.xml.stream.XMLEventWriter . void ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.Characters ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws javax.xml.stream.XMLStreamException { this . javax.xml.stream.XMLEventWriter . void ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.ProcessingInstruction ( java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String ) throws javax.xml.stream.XMLStreamException { this . javax.xml.stream.XMLEventWriter . void ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.DTD ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String ) throws javax.xml.stream.XMLStreamException { this . javax.xml.stream.XMLEventWriter . void ( this . javax.xml.stream.XMLEventFactory . javax.xml.stream.events.Comment ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String ) throws javax.xml.stream.XMLStreamException {	}  <METHOD_END>
<METHOD_START> public void ( org.xml.sax.Locator org.xml.sax.Locator ) { this . org.xml.sax.Locator = org.xml.sax.Locator ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.xml.sax.Locator . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.xml.sax.Locator . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return - NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.xml.sax.Locator . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.xml.sax.Locator . java.lang.String ( ) ; }  <METHOD_END>
