<METHOD_START> @ Before public void void ( ) { this . java.io.File = new java.io.File ( STRING ) ; this . java.io.File = new java.io.File ( STRING ) ; FileSystemUtils . deleteRecursively ( this . java.io.File ) ; FileSystemUtils . deleteRecursively ( this . java.io.File ) ; this . java.io.File . boolean ( ) ; this . java.io.File . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { java.io.File java.io.File = new java.io.File ( this . java.io.File , STRING ) ; java.io.File . boolean ( ) ; new java.io.File ( this . java.io.File , STRING ) . boolean ( ) ; FileUtils . removeDuplicatesFromOutputDirectory ( this . java.io.File , this . java.io.File ) ; assertThat ( java.io.File . boolean ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { assertThat ( new java.io.File ( this . java.io.File , STRING ) . boolean ( ) ) . isTrue ( ) ; assertThat ( new java.io.File ( this . java.io.File , STRING ) . boolean ( ) ) . isTrue ( ) ; java.io.File java.io.File = new java.io.File ( this . java.io.File , STRING ) ; java.io.File . boolean ( ) ; new java.io.File ( this . java.io.File , STRING ) . boolean ( ) ; FileUtils . removeDuplicatesFromOutputDirectory ( this . java.io.File , this . java.io.File ) ; assertThat ( java.io.File . boolean ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { assertThat ( new java.io.File ( this . java.io.File , STRING ) . boolean ( ) ) . isTrue ( ) ; assertThat ( new java.io.File ( this . java.io.File , STRING ) . boolean ( ) ) . isTrue ( ) ; java.io.File java.io.File = new java.io.File ( this . java.io.File , STRING ) ; java.io.File . boolean ( ) ; new java.io.File ( this . java.io.File , STRING ) . boolean ( ) ; FileUtils . removeDuplicatesFromOutputDirectory ( this . java.io.File , this . java.io.File ) ; assertThat ( java.io.File . boolean ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { java.io.File java.io.File = new java.io.File ( this . java.io.File , STRING ) ; java.io.File . boolean ( ) ; new java.io.File ( this . java.io.File , STRING ) . boolean ( ) ; FileUtils . removeDuplicatesFromOutputDirectory ( this . java.io.File , this . java.io.File ) ; assertThat ( java.io.File . boolean ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.io.File java.io.File = this . org.springframework.boot.loader.tools.TemporaryFolder . newFile ( ) ; java.io.OutputStream java.io.OutputStream = new java.io.FileOutputStream ( java.io.File ) ; try { java.io.OutputStream . void ( new byte [] { NUMBER , NUMBER , NUMBER } ) ; } finally { java.io.OutputStream . void ( ) ; } assertThat ( FileUtils . sha1Hash ( java.io.File ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
