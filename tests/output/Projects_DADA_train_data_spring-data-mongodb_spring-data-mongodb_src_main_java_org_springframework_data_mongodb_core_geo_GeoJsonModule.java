<METHOD_START> public void ( ) { addDeserializer ( GeoJsonPoint .class , new org.springframework.data.mongodb.core.geo.GeoJsonModule.GeoJsonPointDeserializer ( ) ) ; addDeserializer ( GeoJsonMultiPoint .class , new org.springframework.data.mongodb.core.geo.GeoJsonModule.GeoJsonMultiPointDeserializer ( ) ) ; addDeserializer ( GeoJsonLineString .class , new org.springframework.data.mongodb.core.geo.GeoJsonModule.GeoJsonLineStringDeserializer ( ) ) ; addDeserializer ( GeoJsonMultiLineString .class , new org.springframework.data.mongodb.core.geo.GeoJsonModule.GeoJsonMultiLineStringDeserializer ( ) ) ; addDeserializer ( GeoJsonPolygon .class , new org.springframework.data.mongodb.core.geo.GeoJsonModule.GeoJsonPolygonDeserializer ( ) ) ; addDeserializer ( GeoJsonMultiPolygon .class , new org.springframework.data.mongodb.core.geo.GeoJsonModule.GeoJsonMultiPolygonDeserializer ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( JsonParser org.springframework.data.mongodb.core.geo.JsonParser , DeserializationContext org.springframework.data.mongodb.core.geo.DeserializationContext ) throws java.io.IOException , org.springframework.data.mongodb.core.geo.JsonProcessingException { JsonNode org.springframework.data.mongodb.core.geo.JsonNode = org.springframework.data.mongodb.core.geo.JsonParser . readValueAsTree ( ) ; JsonNode org.springframework.data.mongodb.core.geo.JsonNode = org.springframework.data.mongodb.core.geo.JsonNode . get ( STRING ) ; if ( org.springframework.data.mongodb.core.geo.JsonNode != null && org.springframework.data.mongodb.core.geo.JsonNode . isArray ( ) ) { return T ( ( ArrayNode ) org.springframework.data.mongodb.core.geo.JsonNode ) ; } return null ; }  <METHOD_END>
<METHOD_START> protected abstract T T ( ArrayNode org.springframework.data.mongodb.core.geo.ArrayNode );  <METHOD_END>
<METHOD_START> protected org.springframework.data.mongodb.core.geo.GeoJsonPoint org.springframework.data.mongodb.core.geo.GeoJsonPoint ( ArrayNode org.springframework.data.mongodb.core.geo.ArrayNode ) { if ( org.springframework.data.mongodb.core.geo.ArrayNode == null ) { return null ; } return new GeoJsonPoint ( org.springframework.data.mongodb.core.geo.ArrayNode . get ( NUMBER ) . asDouble ( ) , org.springframework.data.mongodb.core.geo.ArrayNode . get ( NUMBER ) . asDouble ( ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.mongodb.core.geo.Point org.springframework.data.mongodb.core.geo.Point ( ArrayNode org.springframework.data.mongodb.core.geo.ArrayNode ) { if ( org.springframework.data.mongodb.core.geo.ArrayNode == null ) { return null ; } return new Point ( org.springframework.data.mongodb.core.geo.ArrayNode . get ( NUMBER ) . asDouble ( ) , org.springframework.data.mongodb.core.geo.ArrayNode . get ( NUMBER ) . asDouble ( ) ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.data.mongodb.core.geo.Point> < Point > java.util.List<org.springframework.data.mongodb.core.geo.Point> ( ArrayNode org.springframework.data.mongodb.core.geo.ArrayNode ) { if ( org.springframework.data.mongodb.core.geo.ArrayNode == null ) { return java.util.Collections . java.util.List<org.springframework.data.mongodb.core.geo.Point> ( ) ; } java.util.List<org.springframework.data.mongodb.core.geo.Point> < Point > java.util.List<org.springframework.data.mongodb.core.geo.Point> = new java.util.ArrayList<org.springframework.data.mongodb.core.geo.Point> < Point > ( org.springframework.data.mongodb.core.geo.ArrayNode . size ( ) ) ; for ( JsonNode org.springframework.data.mongodb.core.geo.JsonNode : org.springframework.data.mongodb.core.geo.ArrayNode ) { if ( org.springframework.data.mongodb.core.geo.JsonNode . isArray ( ) ) { java.util.List<org.springframework.data.mongodb.core.geo.Point> . add ( org.springframework.data.mongodb.core.geo.Point ( ( ArrayNode ) org.springframework.data.mongodb.core.geo.JsonNode ) ) ; } } return java.util.List<org.springframework.data.mongodb.core.geo.Point> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.mongodb.core.geo.GeoJsonLineString org.springframework.data.mongodb.core.geo.GeoJsonLineString ( ArrayNode org.springframework.data.mongodb.core.geo.ArrayNode ) { return new GeoJsonLineString ( java.util.List<org.springframework.data.mongodb.core.geo.Point> ( ( ArrayNode ) org.springframework.data.mongodb.core.geo.ArrayNode ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.mongodb.core.geo.GeoJsonPoint org.springframework.data.mongodb.core.geo.GeoJsonPoint ( ArrayNode org.springframework.data.mongodb.core.geo.ArrayNode ) { return org.springframework.data.mongodb.core.geo.GeoJsonPoint ( org.springframework.data.mongodb.core.geo.ArrayNode ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.mongodb.core.geo.GeoJsonLineString org.springframework.data.mongodb.core.geo.GeoJsonLineString ( ArrayNode org.springframework.data.mongodb.core.geo.ArrayNode ) { return new GeoJsonLineString ( java.util.List<org.springframework.data.mongodb.core.geo.Point> ( org.springframework.data.mongodb.core.geo.ArrayNode ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.mongodb.core.geo.GeoJsonMultiPoint org.springframework.data.mongodb.core.geo.GeoJsonMultiPoint ( ArrayNode org.springframework.data.mongodb.core.geo.ArrayNode ) { return new GeoJsonMultiPoint ( java.util.List<org.springframework.data.mongodb.core.geo.Point> ( org.springframework.data.mongodb.core.geo.ArrayNode ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.mongodb.core.geo.GeoJsonMultiLineString org.springframework.data.mongodb.core.geo.GeoJsonMultiLineString ( ArrayNode org.springframework.data.mongodb.core.geo.ArrayNode ) { java.util.List<org.springframework.data.mongodb.core.geo.GeoJsonLineString> < GeoJsonLineString > java.util.List<org.springframework.data.mongodb.core.geo.GeoJsonLineString> = new java.util.ArrayList<org.springframework.data.mongodb.core.geo.GeoJsonLineString> < GeoJsonLineString > ( org.springframework.data.mongodb.core.geo.ArrayNode . size ( ) ) ; for ( JsonNode org.springframework.data.mongodb.core.geo.JsonNode : org.springframework.data.mongodb.core.geo.ArrayNode ) { if ( org.springframework.data.mongodb.core.geo.JsonNode . isArray ( ) ) { java.util.List<org.springframework.data.mongodb.core.geo.GeoJsonLineString> . add ( org.springframework.data.mongodb.core.geo.GeoJsonLineString ( ( ArrayNode ) org.springframework.data.mongodb.core.geo.JsonNode ) ) ; } } return new GeoJsonMultiLineString ( java.util.List<org.springframework.data.mongodb.core.geo.GeoJsonLineString> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.mongodb.core.geo.GeoJsonPolygon org.springframework.data.mongodb.core.geo.GeoJsonPolygon ( ArrayNode org.springframework.data.mongodb.core.geo.ArrayNode ) { for ( JsonNode org.springframework.data.mongodb.core.geo.JsonNode : org.springframework.data.mongodb.core.geo.ArrayNode ) { return new GeoJsonPolygon ( java.util.List<org.springframework.data.mongodb.core.geo.Point> ( ( ArrayNode ) org.springframework.data.mongodb.core.geo.JsonNode ) ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.mongodb.core.geo.GeoJsonMultiPolygon org.springframework.data.mongodb.core.geo.GeoJsonMultiPolygon ( ArrayNode org.springframework.data.mongodb.core.geo.ArrayNode ) { java.util.List<org.springframework.data.mongodb.core.geo.GeoJsonPolygon> < GeoJsonPolygon > java.util.List<org.springframework.data.mongodb.core.geo.GeoJsonPolygon> = new java.util.ArrayList<org.springframework.data.mongodb.core.geo.GeoJsonPolygon> < GeoJsonPolygon > ( org.springframework.data.mongodb.core.geo.ArrayNode . size ( ) ) ; for ( JsonNode org.springframework.data.mongodb.core.geo.JsonNode : org.springframework.data.mongodb.core.geo.ArrayNode ) { for ( JsonNode org.springframework.data.mongodb.core.geo.JsonNode : ( ArrayNode ) org.springframework.data.mongodb.core.geo.JsonNode ) { java.util.List<org.springframework.data.mongodb.core.geo.GeoJsonPolygon> . add ( new GeoJsonPolygon ( java.util.List<org.springframework.data.mongodb.core.geo.Point> ( ( ArrayNode ) org.springframework.data.mongodb.core.geo.JsonNode ) ) ) ; } } return new GeoJsonMultiPolygon ( java.util.List<org.springframework.data.mongodb.core.geo.GeoJsonPolygon> ) ; }  <METHOD_END>
