<METHOD_START> public void ( java.lang.Class<? extends E> < ? extends E > java.lang.Class<? extends E> ) { this( new java.util.ArrayList<E> <> ( ) , java.lang.Class<> ); }  <METHOD_END>
<METHOD_START> public void ( java.util.List<E> < E > java.util.List<E> , java.lang.Class<? extends E> < ? extends E > java.lang.Class<? extends E> ) { this( java.util.List<E> , new org.springframework.util.AutoPopulatingList.ReflectiveElementFactory<E> <> ( java.lang.Class<> ) ); }  <METHOD_END>
<METHOD_START> public void ( org.springframework.util.AutoPopulatingList.ElementFactory<E> < E > org.springframework.util.AutoPopulatingList.ElementFactory<E> ) { this( new java.util.ArrayList<E> <> ( ) , org.springframework.util.AutoPopulatingList.ElementFactory<E> ); }  <METHOD_END>
<METHOD_START> public void ( java.util.List<E> < E > java.util.List<E> , org.springframework.util.AutoPopulatingList.ElementFactory<E> < E > org.springframework.util.AutoPopulatingList.ElementFactory<E> ) { Assert . notNull ( java.util.List<E> , STRING ) ; Assert . notNull ( org.springframework.util.AutoPopulatingList.ElementFactory<E> , STRING ) ; this . java.util.List<E> = java.util.List<E> ; this . org.springframework.util.AutoPopulatingList.ElementFactory<E> = org.springframework.util.AutoPopulatingList.ElementFactory<E> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , E E ) { this . java.util.List<E> . void ( int , E ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( E E ) { return this . java.util.List<E> . boolean ( E ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Collection<? extends E> < ? extends E > java.util.Collection<? extends E> ) { return this . java.util.List<E> . boolean ( java.util.Collection<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , java.util.Collection<? extends E> < ? extends E > java.util.Collection<? extends E> ) { return this . java.util.List<E> . boolean ( int , java.util.Collection<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . java.util.List<E> . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return this . java.util.List<E> . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Collection<?> < ? > java.util.Collection<?> ) { return this . java.util.List<E> . boolean ( java.util.Collection<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public E E ( int int ) { int int = this . java.util.List<E> . int ( ) ; E E = null ; if ( int < int ) { E = this . java.util.List<E> . E ( int ) ; if ( E == null ) { E = this . org.springframework.util.AutoPopulatingList.ElementFactory<E> . E ( int ) ; this . java.util.List<E> . E ( int , E ) ; } } else { for ( int int = int ; int < int ; int ++ ) { this . java.util.List<E> . boolean ( null ) ; } E = this . org.springframework.util.AutoPopulatingList.ElementFactory<E> . E ( int ) ; this . java.util.List<E> . boolean ( E ) ; } return E ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.lang.Object java.lang.Object ) { return this . java.util.List<E> . int ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . java.util.List<E> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<E> < E > java.util.Iterator<E> ( ) { return this . java.util.List<E> . java.util.Iterator<E> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.lang.Object java.lang.Object ) { return this . java.util.List<E> . int ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.ListIterator<E> < E > java.util.ListIterator<E> ( ) { return this . java.util.List<E> . java.util.ListIterator<E> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.ListIterator<E> < E > java.util.ListIterator<E> ( int int ) { return this . java.util.List<E> . java.util.ListIterator<E> ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public E E ( int int ) { return this . java.util.List<E> . E ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return this . java.util.List<E> . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Collection<?> < ? > java.util.Collection<?> ) { return this . java.util.List<E> . boolean ( java.util.Collection<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.Collection<?> < ? > java.util.Collection<?> ) { return this . java.util.List<E> . boolean ( java.util.Collection<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public E E ( int int , E E ) { return this . java.util.List<E> . E ( int , E ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.List<E> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<E> < E > java.util.List<E> ( int int , int int ) { return this . java.util.List<E> . java.util.List<E> ( int , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object [] java.lang.Object[] ( ) { return this . java.util.List<E> . java.lang.Object[] ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T [] T[] ( T [] T[] ) { return this . java.util.List<E> . T[] ( T[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return this . java.util.List<E> . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.List<E> . int ( ) ; }  <METHOD_END>
<METHOD_START> E E ( int int ) throws org.springframework.util.AutoPopulatingList.ElementInstantiationException ;  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.Throwable java.lang.Throwable ) { super( java.lang.String , java.lang.Throwable ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<? extends E> < ? extends E > java.lang.Class<? extends E> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; Assert . isTrue ( ! java.lang.Class<> . boolean ( ) , STRING ) ; Assert . isTrue ( ! java.lang.reflect.Modifier . boolean ( java.lang.Class<> . int ( ) ) , STRING ) ; this . java.lang.Class<? extends E> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public E E ( int int ) { try { return ReflectionUtils . accessibleConstructor ( this . java.lang.Class<> ) . newInstance ( ) ; } catch ( java.lang.NoSuchMethodException java.lang.NoSuchMethodException ) { throw new org.springframework.util.AutoPopulatingList.ElementInstantiationException ( STRING + this . java.lang.Class<> . java.lang.String ( ) , java.lang.NoSuchMethodException ) ; } catch ( java.lang.InstantiationException java.lang.InstantiationException ) { throw new org.springframework.util.AutoPopulatingList.ElementInstantiationException ( STRING + this . java.lang.Class<> . java.lang.String ( ) , java.lang.InstantiationException ) ; } catch ( java.lang.IllegalAccessException java.lang.IllegalAccessException ) { throw new org.springframework.util.AutoPopulatingList.ElementInstantiationException ( STRING + this . java.lang.Class<> . java.lang.String ( ) , java.lang.IllegalAccessException ) ; } catch ( java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException ) { throw new org.springframework.util.AutoPopulatingList.ElementInstantiationException ( STRING + this . java.lang.Class<> . java.lang.String ( ) , java.lang.reflect.InvocationTargetException . java.lang.Throwable ( ) ) ; } }  <METHOD_END>
