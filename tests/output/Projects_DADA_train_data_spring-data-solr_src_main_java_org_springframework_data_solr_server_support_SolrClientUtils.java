<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.Class<?> < ? > java.lang.Class<?> ) { SolrDocument org.springframework.data.solr.server.support.SolrDocument = AnnotationUtils . findAnnotation ( java.lang.Class<> , SolrDocument .class ) ; if ( org.springframework.data.solr.server.support.SolrDocument != null && StringUtils . isNotBlank ( org.springframework.data.solr.server.support.SolrDocument . solrCoreName ( ) ) ) { return org.springframework.data.solr.server.support.SolrDocument . solrCoreName ( ) ; } return STRING ; }  <METHOD_END>
<METHOD_START> public static void void ( SolrClient org.springframework.data.solr.server.support.SolrClient ) { Assert . notNull ( org.springframework.data.solr.server.support.SolrClient , STRING ) ; try { if ( org.springframework.data.solr.server.support.SolrClient instanceof java.io.Closeable ) { org.springframework.data.solr.server.support.SolrClient . close ( ) ; } else { java.lang.reflect.Method java.lang.reflect.Method = ReflectionUtils . findMethod ( org.springframework.data.solr.server.support.SolrClient . getClass ( ) , STRING ) ; if ( java.lang.reflect.Method != null ) { java.lang.reflect.Method . java.lang.Object ( org.springframework.data.solr.server.support.SolrClient ) ; } } } catch ( java.lang.Exception java.lang.Exception ) { throw new DataAccessResourceFailureException ( STRING , java.lang.Exception ) ; } }  <METHOD_END>
