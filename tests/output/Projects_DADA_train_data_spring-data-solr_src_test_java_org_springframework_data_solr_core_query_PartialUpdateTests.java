<METHOD_START> @ Test public void void ( ) { PartialUpdate org.springframework.data.solr.core.query.PartialUpdate = new PartialUpdate ( STRING , STRING ) ; org.springframework.data.solr.core.query.PartialUpdate . addValueToField ( STRING , STRING ) ; Assert . assertEquals ( NUMBER , org.springframework.data.solr.core.query.PartialUpdate . getUpdates ( ) . size ( ) ) ; Assert . assertEquals ( UpdateAction . ADD , org.springframework.data.solr.core.query.PartialUpdate . getUpdates ( ) . get ( NUMBER ) . getAction ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { PartialUpdate org.springframework.data.solr.core.query.PartialUpdate = new PartialUpdate ( STRING , STRING ) ; org.springframework.data.solr.core.query.PartialUpdate . setValueOfField ( STRING , STRING ) ; Assert . assertEquals ( NUMBER , org.springframework.data.solr.core.query.PartialUpdate . getUpdates ( ) . size ( ) ) ; Assert . assertEquals ( UpdateAction . SET , org.springframework.data.solr.core.query.PartialUpdate . getUpdates ( ) . get ( NUMBER ) . getAction ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { PartialUpdate org.springframework.data.solr.core.query.PartialUpdate = new PartialUpdate ( STRING , STRING ) ; org.springframework.data.solr.core.query.PartialUpdate . increaseValueOfField ( STRING , NUMBER ) ; Assert . assertEquals ( NUMBER , org.springframework.data.solr.core.query.PartialUpdate . getUpdates ( ) . size ( ) ) ; Assert . assertEquals ( UpdateAction . INC , org.springframework.data.solr.core.query.PartialUpdate . getUpdates ( ) . get ( NUMBER ) . getAction ( ) ) ; }  <METHOD_END>
