<METHOD_START> public void ( ) { super( false ); }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; if ( this . java.lang.String == null ) { this . java.lang.String = java.lang.String ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.mvc.ModelAndView org.springframework.web.servlet.mvc.ModelAndView ( HttpServletRequest org.springframework.web.servlet.mvc.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.mvc.HttpServletResponse )			throws java.lang.Exception { RequestDispatcher org.springframework.web.servlet.mvc.RequestDispatcher = getServletContext ( ) . getNamedDispatcher ( this . java.lang.String ) ; if ( org.springframework.web.servlet.mvc.RequestDispatcher == null ) { throw new ServletException ( STRING + this . java.lang.String + STRING ) ; } if ( boolean ( org.springframework.web.servlet.mvc.HttpServletRequest , org.springframework.web.servlet.mvc.HttpServletResponse ) ) { org.springframework.web.servlet.mvc.RequestDispatcher . include ( org.springframework.web.servlet.mvc.HttpServletRequest , org.springframework.web.servlet.mvc.HttpServletResponse ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + this . java.lang.String + STRING + this . java.lang.String + STRING ) ; } } else { org.springframework.web.servlet.mvc.RequestDispatcher . forward ( org.springframework.web.servlet.mvc.HttpServletRequest , org.springframework.web.servlet.mvc.HttpServletResponse ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + this . java.lang.String + STRING + this . java.lang.String + STRING ) ; } } return null ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( HttpServletRequest org.springframework.web.servlet.mvc.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.mvc.HttpServletResponse ) { return ( WebUtils . isIncludeRequest ( org.springframework.web.servlet.mvc.HttpServletRequest ) || org.springframework.web.servlet.mvc.HttpServletResponse . isCommitted ( ) ) ; }  <METHOD_END>
