<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) ; EventDrivenConsumer org.springframework.integration.jms.config.EventDrivenConsumer = ( EventDrivenConsumer ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.jms.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.jms.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) ; assertNotNull ( org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertTrue ( TestUtils . getPropertyValue ( org.springframework.integration.jms.config.EventDrivenConsumer , STRING , java.lang.Boolean .class ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) ; EventDrivenConsumer org.springframework.integration.jms.config.EventDrivenConsumer = ( EventDrivenConsumer ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; MessageHandler org.springframework.integration.jms.config.MessageHandler = TestUtils . getPropertyValue ( org.springframework.integration.jms.config.EventDrivenConsumer , STRING , MessageHandler .class ) ; org.springframework.integration.jms.config.MessageHandler . handleMessage ( new GenericMessage < java.lang.String > ( STRING ) ) ; assertEquals ( NUMBER , int ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) ; EventDrivenConsumer org.springframework.integration.jms.config.EventDrivenConsumer = ( EventDrivenConsumer ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.jms.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.jms.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) ; assertNotNull ( org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertFalse ( TestUtils . getPropertyValue ( org.springframework.integration.jms.config.EventDrivenConsumer , STRING , java.lang.Boolean .class ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) ; EventDrivenConsumer org.springframework.integration.jms.config.EventDrivenConsumer = ( EventDrivenConsumer ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.jms.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.jms.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) ; assertNotNull ( org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) ; EventDrivenConsumer org.springframework.integration.jms.config.EventDrivenConsumer = ( EventDrivenConsumer ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.jms.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.jms.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) ; java.lang.Object java.lang.Object = org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertEquals ( NUMBER , java.lang.Object ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) ; EventDrivenConsumer org.springframework.integration.jms.config.EventDrivenConsumer = ( EventDrivenConsumer ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.jms.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.jms.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) ; JmsHeaderMapper org.springframework.integration.jms.config.JmsHeaderMapper = ( JmsHeaderMapper ) org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertNotNull ( org.springframework.integration.jms.config.JmsHeaderMapper ) ; assertEquals ( TestJmsHeaderMapper .class , org.springframework.integration.jms.config.JmsHeaderMapper . getClass ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) ; EventDrivenConsumer org.springframework.integration.jms.config.EventDrivenConsumer = ( EventDrivenConsumer ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.jms.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.jms.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) ; JmsTemplate org.springframework.integration.jms.config.JmsTemplate = ( JmsTemplate ) org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertNotNull ( org.springframework.integration.jms.config.JmsTemplate ) ; assertEquals ( org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) , org.springframework.integration.jms.config.JmsTemplate ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) ; EventDrivenConsumer org.springframework.integration.jms.config.EventDrivenConsumer = ( EventDrivenConsumer ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.jms.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.jms.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) ; JmsTemplate org.springframework.integration.jms.config.JmsTemplate = ( JmsTemplate ) org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertNotNull ( org.springframework.integration.jms.config.JmsTemplate ) ; assertEquals ( org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) , org.springframework.integration.jms.config.JmsTemplate ) ; assertTrue ( org.springframework.integration.jms.config.JmsTemplate . isExplicitQosEnabled ( ) ) ; assertEquals ( NUMBER , org.springframework.integration.jms.config.JmsTemplate . getPriority ( ) ) ; assertEquals ( NUMBER , org.springframework.integration.jms.config.JmsTemplate . getTimeToLive ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) ; EventDrivenConsumer org.springframework.integration.jms.config.EventDrivenConsumer = ( EventDrivenConsumer ) org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING ) ; DirectFieldAccessor org.springframework.integration.jms.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.jms.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) ; JmsTemplate org.springframework.integration.jms.config.JmsTemplate = ( JmsTemplate ) org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; MessageConverter org.springframework.integration.jms.config.MessageConverter = org.springframework.integration.jms.config.JmsTemplate . getMessageConverter ( ) ; assertNotNull ( org.springframework.integration.jms.config.MessageConverter ) ; assertEquals ( TestMessageConverter .class , org.springframework.integration.jms.config.MessageConverter . getClass ( ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = BeanDefinitionStoreException .class ) public void void ( ) { try { new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) . close ( ) ; } catch ( BeanDefinitionStoreException org.springframework.integration.jms.config.BeanDefinitionStoreException ) { assertTrue ( org.springframework.integration.jms.config.BeanDefinitionStoreException . getMessage ( ) . contains ( STRING ) ) ; throw org.springframework.integration.jms.config.BeanDefinitionStoreException ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) ; EventDrivenConsumer org.springframework.integration.jms.config.EventDrivenConsumer = org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING , EventDrivenConsumer .class ) ; DirectFieldAccessor org.springframework.integration.jms.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.jms.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) . getPropertyValue ( STRING ) ) ; assertEquals ( true , org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertEquals ( DeliveryMode . NON_PERSISTENT , org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ClassPathXmlApplicationContext org.springframework.integration.jms.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , this . java.lang.Class<? extends org.springframework.integration.jms.config.JmsOutboundChannelAdapterParserTests> ( ) ) ; EventDrivenConsumer org.springframework.integration.jms.config.EventDrivenConsumer = org.springframework.integration.jms.config.ClassPathXmlApplicationContext . getBean ( STRING , EventDrivenConsumer .class ) ; DirectFieldAccessor org.springframework.integration.jms.config.DirectFieldAccessor = new DirectFieldAccessor ( new DirectFieldAccessor ( new DirectFieldAccessor ( org.springframework.integration.jms.config.EventDrivenConsumer ) . getPropertyValue ( STRING ) ) . getPropertyValue ( STRING ) ) ; assertEquals ( false , org.springframework.integration.jms.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; org.springframework.integration.jms.config.ClassPathXmlApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( ExecutionCallback org.springframework.integration.jms.config.ExecutionCallback , java.lang.Object java.lang.Object , Message < ? > org.springframework.integration.jms.config.Message<?> ) throws java.lang.Exception { int ++ ; return null ; }  <METHOD_END>
