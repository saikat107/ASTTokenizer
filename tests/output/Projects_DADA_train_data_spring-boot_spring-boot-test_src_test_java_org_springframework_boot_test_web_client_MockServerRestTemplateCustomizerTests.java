<METHOD_START> @ Before public void void ( ) { this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer = new MockServerRestTemplateCustomizer ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockServerRestTemplateCustomizer org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer = new MockServerRestTemplateCustomizer ( ) ; org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( new RestTemplate ( ) ) ; assertThat ( org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( ) ) . extracting ( STRING ) . hasAtLeastOneElementOfType ( SimpleRequestExpectationManager .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.test.web.client.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . org.springframework.boot.test.web.client.ExpectedException . expectMessage ( STRING ) ; new MockServerRestTemplateCustomizer ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockServerRestTemplateCustomizer org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer = new MockServerRestTemplateCustomizer ( UnorderedRequestExpectationManager .class ) ; org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( new RestTemplate ( ) ) ; assertThat ( org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( ) ) . extracting ( STRING ) . hasAtLeastOneElementOfType ( UnorderedRequestExpectationManager .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MockServerRestTemplateCustomizer org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer = new MockServerRestTemplateCustomizer ( UnorderedRequestExpectationManager .class ) ; org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( new RestTemplateBuilder ( ) . rootUri ( STRING ) . build ( ) ) ; assertThat ( org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( ) ) . extracting ( STRING ) . hasAtLeastOneElementOfType ( RootUriRequestExpectationManager .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . setDetectRootUri ( false ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( new RestTemplateBuilder ( ) . rootUri ( STRING ) . build ( ) ) ; assertThat ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( ) ) . extracting ( STRING ) . hasAtLeastOneElementOfType ( SimpleRequestExpectationManager .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RestTemplate org.springframework.boot.test.web.client.RestTemplate = new RestTemplateBuilder ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer ) . build ( ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( ) . expect ( requestTo ( STRING ) ) . andRespond ( withSuccess ( ) ) ; org.springframework.boot.test.web.client.RestTemplate . getForEntity ( STRING , java.lang.String .class ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( ) . verify ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.test.web.client.ExpectedException . expect ( java.lang.IllegalStateException .class ) ; this . org.springframework.boot.test.web.client.ExpectedException . expectMessage ( STRING + STRING ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( new RestTemplate ( ) ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( new RestTemplate ( ) ) ; this . org.springframework.boot.test.web.client.ExpectedException . expect ( java.lang.IllegalStateException .class ) ; this . org.springframework.boot.test.web.client.ExpectedException . expectMessage ( STRING + STRING ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RestTemplate org.springframework.boot.test.web.client.RestTemplate = new RestTemplate ( ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( org.springframework.boot.test.web.client.RestTemplate ) ; assertThat ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( ) ) . isEqualTo ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( org.springframework.boot.test.web.client.RestTemplate ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RestTemplate org.springframework.boot.test.web.client.RestTemplate = new RestTemplate ( ) ; RestTemplate org.springframework.boot.test.web.client.RestTemplate = new RestTemplate ( ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( org.springframework.boot.test.web.client.RestTemplate ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( org.springframework.boot.test.web.client.RestTemplate ) ; assertThat ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( org.springframework.boot.test.web.client.RestTemplate ) ) . isNotNull ( ) ; assertThat ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( org.springframework.boot.test.web.client.RestTemplate ) ) . isNotNull ( ) . isNotSameAs ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( org.springframework.boot.test.web.client.RestTemplate ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RestTemplate org.springframework.boot.test.web.client.RestTemplate = new RestTemplate ( ) ; RestTemplate org.springframework.boot.test.web.client.RestTemplate = new RestTemplate ( ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( org.springframework.boot.test.web.client.RestTemplate ) ; assertThat ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( org.springframework.boot.test.web.client.RestTemplate ) ) . isNotNull ( ) ; assertThat ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( org.springframework.boot.test.web.client.RestTemplate ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RestTemplate org.springframework.boot.test.web.client.RestTemplate = new RestTemplate ( ) ; RestTemplate org.springframework.boot.test.web.client.RestTemplate = new RestTemplate ( ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( org.springframework.boot.test.web.client.RestTemplate ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( org.springframework.boot.test.web.client.RestTemplate ) ; assertThat ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServers ( ) ) . containsOnlyKeys ( org.springframework.boot.test.web.client.RestTemplate , org.springframework.boot.test.web.client.RestTemplate ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RestTemplate org.springframework.boot.test.web.client.RestTemplate = new RestTemplate ( ) ; RestTemplate org.springframework.boot.test.web.client.RestTemplate = new RestTemplate ( ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( org.springframework.boot.test.web.client.RestTemplate ) ; this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . customize ( org.springframework.boot.test.web.client.RestTemplate ) ; RequestExpectationManager org.springframework.boot.test.web.client.RequestExpectationManager = this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getExpectationManagers ( ) . get ( org.springframework.boot.test.web.client.RestTemplate ) ; RequestExpectationManager org.springframework.boot.test.web.client.RequestExpectationManager = this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getExpectationManagers ( ) . get ( org.springframework.boot.test.web.client.RestTemplate ) ; assertThat ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( org.springframework.boot.test.web.client.RestTemplate ) ) . extracting ( STRING ) . containsOnly ( org.springframework.boot.test.web.client.RequestExpectationManager ) ; assertThat ( this . org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer . getServer ( org.springframework.boot.test.web.client.RestTemplate ) ) . extracting ( STRING ) . containsOnly ( org.springframework.boot.test.web.client.RequestExpectationManager ) ; }  <METHOD_END>
