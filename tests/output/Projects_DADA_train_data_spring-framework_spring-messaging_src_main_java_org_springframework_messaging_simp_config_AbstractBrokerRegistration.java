<METHOD_START> public void ( SubscribableChannel org.springframework.messaging.simp.config.SubscribableChannel , MessageChannel org.springframework.messaging.simp.config.MessageChannel , java.lang.String [] java.lang.String[] ) { Assert . notNull ( org.springframework.messaging.simp.config.MessageChannel , STRING ) ; Assert . notNull ( org.springframework.messaging.simp.config.MessageChannel , STRING ) ; this . org.springframework.messaging.simp.config.SubscribableChannel = org.springframework.messaging.simp.config.SubscribableChannel ; this . org.springframework.messaging.simp.config.MessageChannel = org.springframework.messaging.simp.config.MessageChannel ; this . java.util.List<java.lang.String> = ( java.lang.String[] != null ? java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) : java.util.Collections . java.util.List<java.lang.String> ( ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.simp.config.SubscribableChannel org.springframework.messaging.simp.config.SubscribableChannel ( ) { return this . org.springframework.messaging.simp.config.SubscribableChannel ; }  <METHOD_END>
<METHOD_START> protected org.springframework.messaging.simp.config.MessageChannel org.springframework.messaging.simp.config.MessageChannel ( ) { return this . org.springframework.messaging.simp.config.MessageChannel ; }  <METHOD_END>
<METHOD_START> protected java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( ) { return this . java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.messaging.simp.config.AbstractBrokerMessageHandler org.springframework.messaging.simp.config.AbstractBrokerMessageHandler ( SubscribableChannel org.springframework.messaging.simp.config.SubscribableChannel );  <METHOD_END>
