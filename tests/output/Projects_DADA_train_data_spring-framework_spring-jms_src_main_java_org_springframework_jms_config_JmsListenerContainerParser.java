<METHOD_START> @ java.lang.Override protected org.springframework.jms.config.RootBeanDefinition org.springframework.jms.config.RootBeanDefinition ( java.lang.String java.lang.String , org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.jms.config.ParserContext , PropertyValues org.springframework.jms.config.PropertyValues , PropertyValues org.springframework.jms.config.PropertyValues ) { RootBeanDefinition org.springframework.jms.config.RootBeanDefinition = new RootBeanDefinition ( ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! STRING . boolean ( java.lang.String ) ) { return null ; } else if ( STRING . boolean ( java.lang.String ) || java.lang.String . boolean ( STRING ) ) { org.springframework.jms.config.RootBeanDefinition . setBeanClassName ( STRING ) ; } else if ( java.lang.String . boolean ( STRING ) ) { org.springframework.jms.config.RootBeanDefinition . setBeanClassName ( STRING ) ; } org.springframework.jms.config.RootBeanDefinition . getPropertyValues ( ) . addPropertyValues ( org.springframework.jms.config.PropertyValues ) ; org.springframework.jms.config.RootBeanDefinition . getPropertyValues ( ) . addPropertyValues ( org.springframework.jms.config.PropertyValues ) ; return org.springframework.jms.config.RootBeanDefinition ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.jms.config.RootBeanDefinition org.springframework.jms.config.RootBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.jms.config.ParserContext , PropertyValues org.springframework.jms.config.PropertyValues , PropertyValues org.springframework.jms.config.PropertyValues ) { RootBeanDefinition org.springframework.jms.config.RootBeanDefinition = new RootBeanDefinition ( ) ; org.springframework.jms.config.RootBeanDefinition . setSource ( org.springframework.jms.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; org.springframework.jms.config.RootBeanDefinition . getPropertyValues ( ) . addPropertyValues ( org.springframework.jms.config.PropertyValues ) ; org.springframework.jms.config.RootBeanDefinition . getPropertyValues ( ) . addPropertyValues ( org.springframework.jms.config.PropertyValues ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! STRING . boolean ( java.lang.String ) ) { org.springframework.jms.config.RootBeanDefinition . setBeanClassName ( java.lang.String ) ; } else if ( STRING . boolean ( java.lang.String ) || java.lang.String . boolean ( STRING ) ) { org.springframework.jms.config.RootBeanDefinition . setBeanClassName ( STRING ) ; } else if ( java.lang.String . boolean ( STRING ) ) { org.springframework.jms.config.RootBeanDefinition . setBeanClassName ( STRING ) ; } else { org.springframework.jms.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } parseListenerConfiguration ( org.w3c.dom.Element , org.springframework.jms.config.ParserContext , org.springframework.jms.config.RootBeanDefinition . getPropertyValues ( ) ) ; return org.springframework.jms.config.RootBeanDefinition ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.jms.config.MutablePropertyValues org.springframework.jms.config.MutablePropertyValues ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.jms.config.ParserContext ) { MutablePropertyValues org.springframework.jms.config.MutablePropertyValues = new MutablePropertyValues ( ) ; boolean boolean = org.w3c.dom.Element . java.lang.String ( java.lang.String ) . boolean ( STRING ) ; java.lang.String java.lang.String = STRING ; if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { org.springframework.jms.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.jms.config.MutablePropertyValues . add ( STRING , new RuntimeBeanReference ( java.lang.String ) ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.jms.config.MutablePropertyValues . add ( STRING , new RuntimeBeanReference ( java.lang.String ) ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.jms.config.MutablePropertyValues . add ( STRING , new RuntimeBeanReference ( java.lang.String ) ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( DESTINATION_RESOLVER_ATTRIBUTE ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.jms.config.MutablePropertyValues . add ( STRING , new RuntimeBeanReference ( java.lang.String ) ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( boolean ) { if ( ! ( STRING . boolean ( java.lang.String ) || STRING . boolean ( java.lang.String ) ) ) { org.springframework.jms.config.ParserContext . getReaderContext ( ) . warning ( STRING + STRING , org.w3c.dom.Element ) ; } } else { org.springframework.jms.config.MutablePropertyValues . add ( STRING , STRING + java.lang.String . java.lang.String ( ) ) ; } } java.lang.Integer java.lang.Integer = parseAcknowledgeMode ( org.w3c.dom.Element , org.springframework.jms.config.ParserContext ) ; if ( java.lang.Integer != null ) { if ( java.lang.Integer == Session . SESSION_TRANSACTED ) { org.springframework.jms.config.MutablePropertyValues . add ( STRING , java.lang.Boolean . java.lang.Boolean ) ; } else { org.springframework.jms.config.MutablePropertyValues . add ( STRING , java.lang.Integer ) ; } } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( TRANSACTION_MANAGER_ATTRIBUTE ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( boolean ) { org.springframework.jms.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } else { org.springframework.jms.config.MutablePropertyValues . add ( STRING , new RuntimeBeanReference ( java.lang.String ) ) ; } } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( CONCURRENCY_ATTRIBUTE ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.jms.config.MutablePropertyValues . add ( STRING , java.lang.String ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( PREFETCH_ATTRIBUTE ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( ! boolean ) { org.springframework.jms.config.MutablePropertyValues . add ( STRING , java.lang.String ) ; } } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( PHASE_ATTRIBUTE ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.jms.config.MutablePropertyValues . add ( STRING , java.lang.String ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( ! boolean ) { org.springframework.jms.config.MutablePropertyValues . add ( STRING , java.lang.String ) ; } } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( ! boolean ) { org.springframework.jms.config.MutablePropertyValues . add ( STRING , new RuntimeBeanReference ( java.lang.String ) ) ; } } else { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( ! boolean ) { org.springframework.jms.config.MutablePropertyValues . add ( STRING , java.lang.String ) ; } } } return org.springframework.jms.config.MutablePropertyValues ; }  <METHOD_END>
