<METHOD_START> public java.util.List<org.springframework.web.method.support.HandlerMethodReturnValueHandler> < HandlerMethodReturnValueHandler > java.util.List<org.springframework.web.method.support.HandlerMethodReturnValueHandler> ( ) { return java.util.Collections . java.util.List<org.springframework.web.method.support.HandlerMethodReturnValueHandler> ( this . java.util.List<org.springframework.web.method.support.HandlerMethodReturnValueHandler> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.web.method.support.MethodParameter ) { return org.springframework.web.method.support.HandlerMethodReturnValueHandler ( org.springframework.web.method.support.MethodParameter ) != null ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.method.support.HandlerMethodReturnValueHandler org.springframework.web.method.support.HandlerMethodReturnValueHandler ( MethodParameter org.springframework.web.method.support.MethodParameter ) { for ( HandlerMethodReturnValueHandler org.springframework.web.method.support.HandlerMethodReturnValueHandler : this . java.util.List<org.springframework.web.method.support.HandlerMethodReturnValueHandler> ) { if ( org.springframework.web.method.support.HandlerMethodReturnValueHandler . supportsReturnType ( org.springframework.web.method.support.MethodParameter ) ) { return org.springframework.web.method.support.HandlerMethodReturnValueHandler ; } } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , MethodParameter org.springframework.web.method.support.MethodParameter , ModelAndViewContainer org.springframework.web.method.support.ModelAndViewContainer , NativeWebRequest org.springframework.web.method.support.NativeWebRequest ) throws java.lang.Exception { HandlerMethodReturnValueHandler org.springframework.web.method.support.HandlerMethodReturnValueHandler = org.springframework.web.method.support.HandlerMethodReturnValueHandler ( java.lang.Object , org.springframework.web.method.support.MethodParameter ) ; if ( org.springframework.web.method.support.HandlerMethodReturnValueHandler == null ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.web.method.support.MethodParameter . getParameterType ( ) . getName ( ) ) ; } org.springframework.web.method.support.HandlerMethodReturnValueHandler . handleReturnValue ( java.lang.Object , org.springframework.web.method.support.MethodParameter , org.springframework.web.method.support.ModelAndViewContainer , org.springframework.web.method.support.NativeWebRequest ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.method.support.HandlerMethodReturnValueHandler org.springframework.web.method.support.HandlerMethodReturnValueHandler ( java.lang.Object java.lang.Object , MethodParameter org.springframework.web.method.support.MethodParameter ) { boolean boolean = boolean ( java.lang.Object , org.springframework.web.method.support.MethodParameter ) ; for ( HandlerMethodReturnValueHandler org.springframework.web.method.support.HandlerMethodReturnValueHandler : this . java.util.List<org.springframework.web.method.support.HandlerMethodReturnValueHandler> ) { if ( boolean && ! ( org.springframework.web.method.support.HandlerMethodReturnValueHandler instanceof AsyncHandlerMethodReturnValueHandler ) ) { continue; } if ( org.springframework.web.method.support.HandlerMethodReturnValueHandler . supportsReturnType ( org.springframework.web.method.support.MethodParameter ) ) { return org.springframework.web.method.support.HandlerMethodReturnValueHandler ; } } return null ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.Object java.lang.Object , MethodParameter org.springframework.web.method.support.MethodParameter ) { for ( HandlerMethodReturnValueHandler org.springframework.web.method.support.HandlerMethodReturnValueHandler : this . java.util.List<org.springframework.web.method.support.HandlerMethodReturnValueHandler> ) { if ( org.springframework.web.method.support.HandlerMethodReturnValueHandler instanceof AsyncHandlerMethodReturnValueHandler ) { if ( ( ( AsyncHandlerMethodReturnValueHandler ) org.springframework.web.method.support.HandlerMethodReturnValueHandler ) . isAsyncReturnValue ( java.lang.Object , org.springframework.web.method.support.MethodParameter ) ) { return true ; } } } return false ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite ( HandlerMethodReturnValueHandler org.springframework.web.method.support.HandlerMethodReturnValueHandler ) { this . java.util.List<org.springframework.web.method.support.HandlerMethodReturnValueHandler> . add ( org.springframework.web.method.support.HandlerMethodReturnValueHandler ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite ( java.util.List<? extends org.springframework.web.method.support.HandlerMethodReturnValueHandler> < ? extends HandlerMethodReturnValueHandler > java.util.List<? extends org.springframework.web.method.support.HandlerMethodReturnValueHandler> ) { if ( java.util.List<> != null ) { for ( HandlerMethodReturnValueHandler org.springframework.web.method.support.HandlerMethodReturnValueHandler : java.util.List<> ) { this . java.util.List<org.springframework.web.method.support.HandlerMethodReturnValueHandler> . add ( org.springframework.web.method.support.HandlerMethodReturnValueHandler ) ; } } return this ; }  <METHOD_END>
