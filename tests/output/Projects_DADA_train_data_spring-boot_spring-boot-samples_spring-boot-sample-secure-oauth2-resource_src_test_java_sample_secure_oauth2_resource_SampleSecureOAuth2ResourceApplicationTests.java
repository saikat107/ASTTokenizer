<METHOD_START> @ Before public void void ( ) { this . sample.secure.oauth2.resource.MockMvc = webAppContextSetup ( this . sample.secure.oauth2.resource.WebApplicationContext ) . addFilters ( this . sample.secure.oauth2.resource.FilterChainProxy ) . build ( ) ; SecurityContextHolder . clearContext ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . sample.secure.oauth2.resource.MockMvc . perform ( get ( STRING ) . accept ( MediaTypes . HAL_JSON ) ) . andExpect ( status ( ) . isOk ( ) ) . andDo ( print ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . sample.secure.oauth2.resource.MockMvc . perform ( get ( STRING ) . accept ( MediaTypes . HAL_JSON ) ) . andExpect ( status ( ) . isUnauthorized ( ) ) . andDo ( print ( ) ) ; this . sample.secure.oauth2.resource.MockMvc . perform ( get ( STRING ) . accept ( MediaTypes . HAL_JSON ) ) . andExpect ( status ( ) . isUnauthorized ( ) ) . andDo ( print ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . sample.secure.oauth2.resource.MockMvc . perform ( get ( STRING ) . accept ( MediaTypes . HAL_JSON ) ) . andExpect ( status ( ) . isOk ( ) ) . andDo ( print ( ) ) ; }  <METHOD_END>
