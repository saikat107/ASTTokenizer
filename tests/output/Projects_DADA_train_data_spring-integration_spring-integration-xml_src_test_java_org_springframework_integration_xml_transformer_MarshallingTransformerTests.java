<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller = new org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller ( ) ; MarshallingTransformer org.springframework.integration.xml.transformer.MarshallingTransformer = new MarshallingTransformer ( org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller ) ; org.springframework.integration.xml.transformer.MarshallingTransformer . setResultFactory ( new StringResultFactory ( ) ) ; Message < ? > org.springframework.integration.xml.transformer.Message<?> = org.springframework.integration.xml.transformer.MarshallingTransformer . transform ( new GenericMessage < java.lang.String > ( STRING ) ) ; java.lang.Object java.lang.Object = org.springframework.integration.xml.transformer.Message<> . getPayload ( ) ; assertEquals ( StringResult .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; assertEquals ( STRING , java.lang.Object . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller . java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller = new org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller ( ) ; MarshallingTransformer org.springframework.integration.xml.transformer.MarshallingTransformer = new MarshallingTransformer ( org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller ) ; Message < ? > org.springframework.integration.xml.transformer.Message<?> = org.springframework.integration.xml.transformer.MarshallingTransformer . transform ( new GenericMessage < java.lang.String > ( STRING ) ) ; java.lang.Object java.lang.Object = org.springframework.integration.xml.transformer.Message<> . getPayload ( ) ; assertEquals ( javax.xml.transform.dom.DOMResult .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; assertEquals ( STRING , org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller . java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller = new org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller ( ) ; MarshallingTransformer org.springframework.integration.xml.transformer.MarshallingTransformer = new MarshallingTransformer ( org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller ) ; org.springframework.integration.xml.transformer.MarshallingTransformer . setExtractPayload ( false ) ; Message < ? > org.springframework.integration.xml.transformer.Message<?> = new GenericMessage < java.lang.String > ( STRING ) ; org.springframework.integration.xml.transformer.MarshallingTransformer . transform ( org.springframework.integration.xml.transformer.Message<> ) ; assertEquals ( NUMBER , org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller . java.util.List<java.lang.Object> . int ( ) ) ; assertEquals ( NUMBER , org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller . java.util.List<org.springframework.integration.xml.transformer.Message<?>> . size ( ) ) ; assertSame ( org.springframework.integration.xml.transformer.Message<> , org.springframework.integration.xml.transformer.MarshallingTransformerTests.TestMarshaller . java.util.List<org.springframework.integration.xml.transformer.Message<?>> . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , javax.xml.transform.Result javax.xml.transform.Result ) throws org.springframework.integration.xml.transformer.XmlMappingException , java.io.IOException { if ( java.lang.Object instanceof Message ) { this . java.util.List<org.springframework.integration.xml.transformer.Message<?>> . add ( ( Message < ? > ) java.lang.Object ) ; } else { this . java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; } if ( javax.xml.transform.Result instanceof StringResult ) { ( ( StringResult ) javax.xml.transform.Result ) . getWriter ( ) . write ( STRING + java.lang.Object ) ; } }  <METHOD_END>
