<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { java.lang.String java.lang.String = STRING ; java.net.URL java.net.URL = java.net.URL ( STRING ) ; this . org.springframework.boot.loader.jar.Handler . parseURL ( java.net.URL , java.lang.String , NUMBER , java.lang.String . int ( ) ) ; assertThat ( java.net.URL . java.lang.String ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { java.lang.String java.lang.String = STRING ; java.net.URL java.net.URL = java.net.URL ( STRING ) ; this . org.springframework.boot.loader.jar.Handler . parseURL ( java.net.URL , java.lang.String , NUMBER , java.lang.String . int ( ) ) ; assertThat ( java.net.URL . java.lang.String ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { java.lang.String java.lang.String = STRING ; java.net.URL java.net.URL = java.net.URL ( STRING ) ; this . org.springframework.boot.loader.jar.Handler . parseURL ( java.net.URL , java.lang.String , NUMBER , java.lang.String . int ( ) ) ; assertThat ( java.net.URL . java.lang.String ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { java.lang.String java.lang.String = STRING ; java.net.URL java.net.URL = java.net.URL ( STRING ) ; this . org.springframework.boot.loader.jar.Handler . parseURL ( java.net.URL , java.lang.String , NUMBER , java.lang.String . int ( ) ) ; assertThat ( java.net.URL . java.lang.String ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { java.lang.String java.lang.String = STRING ; java.net.URL java.net.URL = java.net.URL ( STRING ) ; this . org.springframework.boot.loader.jar.Handler . parseURL ( java.net.URL , java.lang.String , NUMBER , java.lang.String . int ( ) ) ; assertThat ( java.net.URL . java.lang.String ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { JarFile . registerUrlProtocolHandler ( ) ; java.lang.String java.lang.String = STRING ; java.net.URL java.net.URL = java.net.URL ( STRING ) ; this . org.springframework.boot.loader.jar.Handler . parseURL ( java.net.URL , java.lang.String , NUMBER , java.lang.String . int ( ) ) ; assertThat ( java.net.URL . java.lang.String ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { assertThat ( this . org.springframework.boot.loader.jar.Handler . sameFile ( new java.net.URL ( STRING ) , new java.net.URL ( STRING ) ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { assertThat ( this . org.springframework.boot.loader.jar.Handler . sameFile ( new java.net.URL ( STRING ) , new java.net.URL ( STRING ) ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { assertThat ( this . org.springframework.boot.loader.jar.Handler . sameFile ( new java.net.URL ( STRING ) , new java.net.URL ( STRING ) ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { assertThat ( this . org.springframework.boot.loader.jar.Handler . sameFile ( new java.net.URL ( STRING ) , new java.net.URL ( STRING ) ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { assertThat ( this . org.springframework.boot.loader.jar.Handler . sameFile ( new java.net.URL ( STRING ) , new java.net.URL ( STRING ) ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.net.MalformedURLException { assertThat ( this . org.springframework.boot.loader.jar.Handler . hashCode ( new java.net.URL ( STRING ) ) ) . isEqualTo ( this . org.springframework.boot.loader.jar.Handler . hashCode ( new java.net.URL ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> private java.net.URL java.net.URL ( java.lang.String java.lang.String ) throws java.net.MalformedURLException { return new java.net.URL ( STRING , null , - NUMBER , java.lang.String , this . org.springframework.boot.loader.jar.Handler ) ; }  <METHOD_END>
