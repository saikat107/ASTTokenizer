<METHOD_START> public void ( ReactiveMongoQueryMethod org.springframework.data.mongodb.repository.query.ReactiveMongoQueryMethod , ReactiveMongoOperations org.springframework.data.mongodb.repository.query.ReactiveMongoOperations , SpelExpressionParser org.springframework.data.mongodb.repository.query.SpelExpressionParser , EvaluationContextProvider org.springframework.data.mongodb.repository.query.EvaluationContextProvider ) { this( org.springframework.data.mongodb.repository.query.ReactiveMongoQueryMethod . getAnnotatedQuery ( ) , org.springframework.data.mongodb.repository.query.ReactiveMongoQueryMethod , org.springframework.data.mongodb.repository.query.ReactiveMongoOperations , org.springframework.data.mongodb.repository.query.SpelExpressionParser , org.springframework.data.mongodb.repository.query.EvaluationContextProvider ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , ReactiveMongoQueryMethod org.springframework.data.mongodb.repository.query.ReactiveMongoQueryMethod , ReactiveMongoOperations org.springframework.data.mongodb.repository.query.ReactiveMongoOperations , SpelExpressionParser org.springframework.data.mongodb.repository.query.SpelExpressionParser , EvaluationContextProvider org.springframework.data.mongodb.repository.query.EvaluationContextProvider ) { super( org.springframework.data.mongodb.repository.query.ReactiveMongoQueryMethod , org.springframework.data.mongodb.repository.query.ReactiveMongoOperations ); Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.repository.query.SpelExpressionParser , STRING ) ; this . java.util.List<org.springframework.data.mongodb.repository.query.ParameterBinding> = new java.util.ArrayList<org.springframework.data.mongodb.repository.query.ParameterBinding> < ParameterBinding > ( ) ; this . java.lang.String = org.springframework.data.mongodb.repository.query.ParameterBindingParser . parseAndCollectParameterBindingsFromQueryIntoBindings ( java.lang.String , this . java.util.List<org.springframework.data.mongodb.repository.query.ParameterBinding> ) ; this . java.util.List<org.springframework.data.mongodb.repository.query.ParameterBinding> = new java.util.ArrayList<org.springframework.data.mongodb.repository.query.ParameterBinding> < ParameterBinding > ( ) ; this . java.lang.String = org.springframework.data.mongodb.repository.query.ParameterBindingParser . parseAndCollectParameterBindingsFromQueryIntoBindings ( org.springframework.data.mongodb.repository.query.ReactiveMongoQueryMethod . getFieldSpecification ( ) , this . java.util.List<org.springframework.data.mongodb.repository.query.ParameterBinding> ) ; this . boolean = org.springframework.data.mongodb.repository.query.ReactiveMongoQueryMethod . hasAnnotatedQuery ( ) ? org.springframework.data.mongodb.repository.query.ReactiveMongoQueryMethod . getQueryAnnotation ( ) . count ( ) : false ; this . boolean = org.springframework.data.mongodb.repository.query.ReactiveMongoQueryMethod . hasAnnotatedQuery ( ) ? org.springframework.data.mongodb.repository.query.ReactiveMongoQueryMethod . getQueryAnnotation ( ) . delete ( ) : false ; if ( boolean && boolean ) { throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( java.lang.String , org.springframework.data.mongodb.repository.query.ReactiveMongoQueryMethod ) ) ; } this . org.springframework.data.mongodb.repository.query.ExpressionEvaluatingParameterBinder = new ExpressionEvaluatingParameterBinder ( org.springframework.data.mongodb.repository.query.SpelExpressionParser , org.springframework.data.mongodb.repository.query.EvaluationContextProvider ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.mongodb.repository.query.Query org.springframework.data.mongodb.repository.query.Query ( ConvertingParameterAccessor org.springframework.data.mongodb.repository.query.ConvertingParameterAccessor ) { java.lang.String java.lang.String = org.springframework.data.mongodb.repository.query.ExpressionEvaluatingParameterBinder . bind ( this . java.lang.String , org.springframework.data.mongodb.repository.query.ConvertingParameterAccessor , new BindingContext ( getQueryMethod ( ) . getParameters ( ) , java.util.List<org.springframework.data.mongodb.repository.query.ParameterBinding> ) ) ; java.lang.String java.lang.String = org.springframework.data.mongodb.repository.query.ExpressionEvaluatingParameterBinder . bind ( this . java.lang.String , org.springframework.data.mongodb.repository.query.ConvertingParameterAccessor , new BindingContext ( getQueryMethod ( ) . getParameters ( ) , java.util.List<org.springframework.data.mongodb.repository.query.ParameterBinding> ) ) ; Query org.springframework.data.mongodb.repository.query.Query = new BasicQuery ( java.lang.String , java.lang.String ) . with ( org.springframework.data.mongodb.repository.query.ConvertingParameterAccessor . getSort ( ) ) ; if ( org.springframework.data.mongodb.repository.query.Logger . isDebugEnabled ( ) ) { org.springframework.data.mongodb.repository.query.Logger . debug ( java.lang.String . java.lang.String ( STRING , org.springframework.data.mongodb.repository.query.Query . getQueryObject ( ) , org.springframework.data.mongodb.repository.query.Query . getFieldsObject ( ) ) ) ; } return org.springframework.data.mongodb.repository.query.Query ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
