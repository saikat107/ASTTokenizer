<METHOD_START> public void ( ) { super( STRING , STRING , new org.springframework.boot.cli.command.test.TestCommand.TestOptionHandler ( ) ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.cli.command.test.ExitStatus org.springframework.boot.cli.command.test.ExitStatus ( OptionSet org.springframework.boot.cli.command.test.OptionSet ) throws java.lang.Exception { SourceOptions org.springframework.boot.cli.command.test.SourceOptions = new SourceOptions ( org.springframework.boot.cli.command.test.OptionSet ) ; TestRunnerConfiguration org.springframework.boot.cli.command.test.TestRunnerConfiguration = new org.springframework.boot.cli.command.test.TestCommand.TestOptionHandler.TestRunnerConfigurationAdapter ( org.springframework.boot.cli.command.test.OptionSet , this ) ; this . org.springframework.boot.cli.command.test.TestRunner = new TestRunner ( org.springframework.boot.cli.command.test.TestRunnerConfiguration , org.springframework.boot.cli.command.test.SourceOptions . getSourcesArray ( ) , org.springframework.boot.cli.command.test.SourceOptions . getArgsArray ( ) ) ; this . org.springframework.boot.cli.command.test.TestRunner . compileAndRunTests ( ) ; return ExitStatus . OK . hangup ( ) ; }  <METHOD_END>
<METHOD_START> void ( OptionSet org.springframework.boot.cli.command.test.OptionSet , CompilerOptionHandler org.springframework.boot.cli.command.test.CompilerOptionHandler ) { super( org.springframework.boot.cli.command.test.OptionSet , org.springframework.boot.cli.command.test.CompilerOptionHandler ); }  <METHOD_END>
