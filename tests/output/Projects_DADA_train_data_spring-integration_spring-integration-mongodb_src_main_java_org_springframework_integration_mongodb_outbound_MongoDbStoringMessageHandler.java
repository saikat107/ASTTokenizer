<METHOD_START> public void ( MongoDbFactory org.springframework.integration.mongodb.outbound.MongoDbFactory ) { Assert . notNull ( org.springframework.integration.mongodb.outbound.MongoDbFactory , STRING ) ; this . org.springframework.integration.mongodb.outbound.MongoDbFactory = org.springframework.integration.mongodb.outbound.MongoDbFactory ; }  <METHOD_END>
<METHOD_START> public void ( MongoOperations org.springframework.integration.mongodb.outbound.MongoOperations ) { Assert . notNull ( org.springframework.integration.mongodb.outbound.MongoOperations , STRING ) ; this . org.springframework.integration.mongodb.outbound.MongoOperations = org.springframework.integration.mongodb.outbound.MongoOperations ; }  <METHOD_END>
<METHOD_START> public void void ( MongoConverter org.springframework.integration.mongodb.outbound.MongoConverter ) { Assert . isNull ( this . org.springframework.integration.mongodb.outbound.MongoOperations , STRING ) ; this . org.springframework.integration.mongodb.outbound.MongoConverter = org.springframework.integration.mongodb.outbound.MongoConverter ; }  <METHOD_END>
<METHOD_START> public void void ( Expression org.springframework.integration.mongodb.outbound.Expression ) { Assert . notNull ( org.springframework.integration.mongodb.outbound.Expression , STRING ) ; this . org.springframework.integration.mongodb.outbound.Expression = org.springframework.integration.mongodb.outbound.Expression ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { this . org.springframework.integration.mongodb.outbound.StandardEvaluationContext = ExpressionUtils . createStandardEvaluationContext ( this . getBeanFactory ( ) ) ; if ( this . org.springframework.integration.mongodb.outbound.MongoOperations == null ) { this . org.springframework.integration.mongodb.outbound.MongoOperations = new MongoTemplate ( this . org.springframework.integration.mongodb.outbound.MongoDbFactory , this . org.springframework.integration.mongodb.outbound.MongoConverter ) ; } this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Message < ? > org.springframework.integration.mongodb.outbound.Message<?> ) throws java.lang.Exception { Assert . isTrue ( this . boolean , STRING ) ; java.lang.String java.lang.String = this . org.springframework.integration.mongodb.outbound.Expression . getValue ( this . org.springframework.integration.mongodb.outbound.StandardEvaluationContext , org.springframework.integration.mongodb.outbound.Message<> , java.lang.String .class ) ; Assert . notNull ( java.lang.String , STRING ) ; java.lang.Object java.lang.Object = org.springframework.integration.mongodb.outbound.Message<> . getPayload ( ) ; this . org.springframework.integration.mongodb.outbound.MongoOperations . save ( java.lang.Object , java.lang.String ) ; }  <METHOD_END>
