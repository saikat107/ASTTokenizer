<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( HttpServletRequest org.springframework.web.servlet.theme.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.theme.HttpServletResponse , java.lang.Object java.lang.Object )			throws org.springframework.web.servlet.theme.ServletException { java.lang.String java.lang.String = org.springframework.web.servlet.theme.HttpServletRequest . getParameter ( this . java.lang.String ) ; if ( java.lang.String != null ) { ThemeResolver org.springframework.web.servlet.theme.ThemeResolver = RequestContextUtils . getThemeResolver ( org.springframework.web.servlet.theme.HttpServletRequest ) ; if ( org.springframework.web.servlet.theme.ThemeResolver == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } org.springframework.web.servlet.theme.ThemeResolver . setThemeName ( org.springframework.web.servlet.theme.HttpServletRequest , org.springframework.web.servlet.theme.HttpServletResponse , java.lang.String ) ; } return true ; }  <METHOD_END>
