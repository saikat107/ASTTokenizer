<METHOD_START> @ Test public void void ( ) { DelayHandler org.springframework.integration.config.xml.DelayHandler = org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING , DelayHandler .class ) ; assertEquals ( NUMBER , org.springframework.integration.config.xml.DelayHandler . getOrder ( ) ) ; assertEquals ( org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING ) , TestUtils . getPropertyValue ( org.springframework.integration.config.xml.DelayHandler , STRING ) ) ; assertEquals ( new java.lang.Long ( NUMBER ) , TestUtils . getPropertyValue ( org.springframework.integration.config.xml.DelayHandler , STRING , java.lang.Long .class ) ) ; assertNotNull ( TestUtils . getPropertyValue ( org.springframework.integration.config.xml.DelayHandler , STRING ) ) ; assertEquals ( STRING , TestUtils . getPropertyValue ( org.springframework.integration.config.xml.DelayHandler , STRING , Expression .class ) . getExpressionString ( ) ) ; assertEquals ( new java.lang.Long ( NUMBER ) , TestUtils . getPropertyValue ( org.springframework.integration.config.xml.DelayHandler , STRING , java.lang.Long .class ) ) ; assertNull ( TestUtils . getPropertyValue ( org.springframework.integration.config.xml.DelayHandler , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING ) ; assertEquals ( EventDrivenConsumer .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( java.lang.Object , STRING ) ; assertEquals ( DelayHandler .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DelayHandler org.springframework.integration.config.xml.DelayHandler = ( DelayHandler ) java.lang.Object ; assertEquals ( Ordered . LOWEST_PRECEDENCE , org.springframework.integration.config.xml.DelayHandler . getOrder ( ) ) ; DirectFieldAccessor org.springframework.integration.config.xml.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.xml.DelayHandler ) ; assertEquals ( org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING ) , org.springframework.integration.config.xml.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertEquals ( new java.lang.Long ( NUMBER ) , org.springframework.integration.config.xml.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertEquals ( org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING ) , org.springframework.integration.config.xml.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertNotNull ( org.springframework.integration.config.xml.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , new DirectFieldAccessor ( org.springframework.integration.config.xml.DirectFieldAccessor . getPropertyValue ( STRING ) ) . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING ) ; assertEquals ( EventDrivenConsumer .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; java.lang.Object java.lang.Object = TestUtils . getPropertyValue ( java.lang.Object , STRING ) ; assertEquals ( DelayHandler .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; DelayHandler org.springframework.integration.config.xml.DelayHandler = ( DelayHandler ) java.lang.Object ; DirectFieldAccessor org.springframework.integration.config.xml.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.config.xml.DelayHandler ) ; assertEquals ( org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING ) , org.springframework.integration.config.xml.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING ) ; DelayHandler org.springframework.integration.config.xml.DelayHandler = TestUtils . getPropertyValue ( java.lang.Object , STRING , DelayHandler .class ) ; java.util.List<?> < ? > java.util.List<?> = TestUtils . getPropertyValue ( org.springframework.integration.config.xml.DelayHandler , STRING , java.util.List .class ) ; assertEquals ( NUMBER , java.util.List<> . int ( ) ) ; java.lang.Object java.lang.Object = java.util.List<> . get ( NUMBER ) ; assertTrue ( java.lang.Object instanceof TransactionInterceptor ) ; TransactionAttributeSource org.springframework.integration.config.xml.TransactionAttributeSource = ( ( TransactionInterceptor ) java.lang.Object ) . getTransactionAttributeSource ( ) ; assertTrue ( org.springframework.integration.config.xml.TransactionAttributeSource instanceof MatchAlwaysTransactionAttributeSource ) ; java.lang.reflect.Method java.lang.reflect.Method = MessageHandler .class . java.lang.reflect.Method ( STRING , Message .class ) ; TransactionDefinition org.springframework.integration.config.xml.TransactionDefinition = org.springframework.integration.config.xml.TransactionAttributeSource . getTransactionAttribute ( java.lang.reflect.Method , null ) ; assertEquals ( TransactionDefinition . PROPAGATION_REQUIRED , org.springframework.integration.config.xml.TransactionDefinition . getPropagationBehavior ( ) ) ; assertEquals ( TransactionDefinition . ISOLATION_DEFAULT , org.springframework.integration.config.xml.TransactionDefinition . getIsolationLevel ( ) ) ; assertEquals ( TransactionDefinition . TIMEOUT_DEFAULT , org.springframework.integration.config.xml.TransactionDefinition . getTimeout ( ) ) ; assertFalse ( org.springframework.integration.config.xml.TransactionDefinition . isReadOnly ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Object java.lang.Object = org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING ) ; DelayHandler org.springframework.integration.config.xml.DelayHandler = TestUtils . getPropertyValue ( java.lang.Object , STRING , DelayHandler .class ) ; java.util.List<?> < ? > java.util.List<?> = TestUtils . getPropertyValue ( org.springframework.integration.config.xml.DelayHandler , STRING , java.util.List .class ) ; assertEquals ( NUMBER , java.util.List<> . int ( ) ) ; assertSame ( org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING ) , java.util.List<> . get ( NUMBER ) ) ; java.lang.Object java.lang.Object = java.util.List<> . get ( NUMBER ) ; assertEquals ( TransactionInterceptor .class , java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; TransactionAttributeSource org.springframework.integration.config.xml.TransactionAttributeSource = ( ( TransactionInterceptor ) java.lang.Object ) . getTransactionAttributeSource ( ) ; assertEquals ( NameMatchTransactionAttributeSource .class , org.springframework.integration.config.xml.TransactionAttributeSource . getClass ( ) ) ; java.util.HashMap<?,?> < ? , ? > java.util.HashMap<?,?> = TestUtils . getPropertyValue ( org.springframework.integration.config.xml.TransactionAttributeSource , STRING , java.util.HashMap .class ) ; assertEquals ( STRING , java.util.HashMap<,> . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DelayHandler org.springframework.integration.config.xml.DelayHandler = org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING , DelayHandler .class ) ; assertEquals ( STRING , TestUtils . getPropertyValue ( org.springframework.integration.config.xml.DelayHandler , STRING , Expression .class ) . getExpressionString ( ) ) ; assertFalse ( TestUtils . getPropertyValue ( org.springframework.integration.config.xml.DelayHandler , STRING , java.lang.Boolean .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DelayHandler org.springframework.integration.config.xml.DelayHandler = org.springframework.integration.config.xml.ApplicationContext . getBean ( STRING , DelayHandler .class ) ; assertEquals ( STRING , TestUtils . getPropertyValue ( org.springframework.integration.config.xml.DelayHandler , STRING , Expression .class ) . getExpressionString ( ) ) ; }  <METHOD_END>
