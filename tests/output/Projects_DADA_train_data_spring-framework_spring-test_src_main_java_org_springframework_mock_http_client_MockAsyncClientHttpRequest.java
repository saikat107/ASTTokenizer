<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( HttpMethod org.springframework.mock.http.client.HttpMethod , java.net.URI java.net.URI ) { super( org.springframework.mock.http.client.HttpMethod , java.net.URI ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.mock.http.client.ListenableFuture<org.springframework.mock.http.client.ClientHttpResponse> < ClientHttpResponse > org.springframework.mock.http.client.ListenableFuture<org.springframework.mock.http.client.ClientHttpResponse> ( ) java.io.IOException { SettableListenableFuture < ClientHttpResponse > org.springframework.mock.http.client.SettableListenableFuture<org.springframework.mock.http.client.ClientHttpResponse> = new SettableListenableFuture <> ( ) ; org.springframework.mock.http.client.SettableListenableFuture<org.springframework.mock.http.client.ClientHttpResponse> . set ( execute ( ) ) ; return org.springframework.mock.http.client.SettableListenableFuture<org.springframework.mock.http.client.ClientHttpResponse> ; }  <METHOD_END>
