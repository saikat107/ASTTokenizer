<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.configuration.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.configuration.Spr12526Tests.TestContext .class ) ; org.springframework.context.annotation.configuration.Spr12526Tests.CustomCondition org.springframework.context.annotation.configuration.Spr12526Tests.CustomCondition = org.springframework.context.annotation.configuration.AnnotationConfigApplicationContext . getBean ( org.springframework.context.annotation.configuration.Spr12526Tests.CustomCondition .class ) ; org.springframework.context.annotation.configuration.Spr12526Tests.CustomCondition . void ( true ) ; org.springframework.context.annotation.configuration.Spr12526Tests.FirstService org.springframework.context.annotation.configuration.Spr12526Tests.FirstService = ( org.springframework.context.annotation.configuration.Spr12526Tests.FirstService ) org.springframework.context.annotation.configuration.AnnotationConfigApplicationContext . getBean ( org.springframework.context.annotation.configuration.Spr12526Tests.Service .class ) ; assertNotNull ( STRING , org.springframework.context.annotation.configuration.Spr12526Tests.FirstService . org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne ( ) ) ; org.springframework.context.annotation.configuration.Spr12526Tests.CustomCondition . void ( false ) ; org.springframework.context.annotation.configuration.Spr12526Tests.SecondService org.springframework.context.annotation.configuration.Spr12526Tests.SecondService = ( org.springframework.context.annotation.configuration.Spr12526Tests.SecondService ) org.springframework.context.annotation.configuration.AnnotationConfigApplicationContext . getBean ( org.springframework.context.annotation.configuration.Spr12526Tests.Service .class ) ; assertNotNull ( STRING , org.springframework.context.annotation.configuration.Spr12526Tests.SecondService . org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Scope ( SCOPE_SINGLETON ) public org.springframework.context.annotation.configuration.Spr12526Tests.CustomCondition org.springframework.context.annotation.configuration.Spr12526Tests.CustomCondition ( ) { return new org.springframework.context.annotation.configuration.Spr12526Tests.CustomCondition ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Scope ( SCOPE_PROTOTYPE ) public org.springframework.context.annotation.configuration.Spr12526Tests.Service org.springframework.context.annotation.configuration.Spr12526Tests.Service ( org.springframework.context.annotation.configuration.Spr12526Tests.CustomCondition org.springframework.context.annotation.configuration.Spr12526Tests.CustomCondition ) { return ( org.springframework.context.annotation.configuration.Spr12526Tests.CustomCondition . boolean ( ) ? new org.springframework.context.annotation.configuration.Spr12526Tests.FirstService ( ) : new org.springframework.context.annotation.configuration.Spr12526Tests.SecondService ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne ( ) { return new org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo ( ) { return new org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ javax.annotation.Resource ( java.lang.String = STRING ) public void void ( org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne ) { this . org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne = org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne ; }  <METHOD_END>
<METHOD_START> public org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne ( ) { return org.springframework.context.annotation.configuration.Spr12526Tests.DependencyOne ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ javax.annotation.Resource ( java.lang.String = STRING ) public void void ( org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo ) { this . org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo = org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo ; }  <METHOD_END>
<METHOD_START> public org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo ( ) { return org.springframework.context.annotation.configuration.Spr12526Tests.DependencyTwo ; }  <METHOD_END>
