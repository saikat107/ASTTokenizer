<METHOD_START> public void void ( TransactionAttribute org.springframework.transaction.interceptor.TransactionAttribute ) { this . org.springframework.transaction.interceptor.TransactionAttribute = org.springframework.transaction.interceptor.TransactionAttribute ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.transaction.interceptor.TransactionAttribute org.springframework.transaction.interceptor.TransactionAttribute ( java.lang.reflect.Method java.lang.reflect.Method , java.lang.Class<?> < ? > java.lang.Class<?> ) { return ( java.lang.reflect.Method == null || ClassUtils . isUserLevelMethod ( java.lang.reflect.Method ) ? this . org.springframework.transaction.interceptor.TransactionAttribute : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource ) ) { return false ; } org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource = ( org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource ) java.lang.Object ; return ObjectUtils . nullSafeEquals ( this . org.springframework.transaction.interceptor.TransactionAttribute , org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource . org.springframework.transaction.interceptor.TransactionAttribute ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource .class . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.Class<? extends org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource> ( ) . java.lang.String ( ) + STRING + this . org.springframework.transaction.interceptor.TransactionAttribute ; }  <METHOD_END>
