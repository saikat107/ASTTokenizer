<METHOD_START> public void ( MethodParameter org.springframework.beans.factory.MethodParameter ) { Assert . notNull ( org.springframework.beans.factory.MethodParameter , STRING ) ; this . org.springframework.beans.factory.MethodParameter = org.springframework.beans.factory.MethodParameter ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.reflect.Field java.lang.reflect.Field ) { Assert . notNull ( java.lang.reflect.Field , STRING ) ; this . java.lang.reflect.Field = java.lang.reflect.Field ; }  <METHOD_END>
<METHOD_START> protected void ( org.springframework.beans.factory.InjectionPoint org.springframework.beans.factory.InjectionPoint ) { this . org.springframework.beans.factory.MethodParameter = ( org.springframework.beans.factory.InjectionPoint . org.springframework.beans.factory.MethodParameter != null ? new MethodParameter ( org.springframework.beans.factory.InjectionPoint . org.springframework.beans.factory.MethodParameter ) : null ) ; this . java.lang.reflect.Field = org.springframework.beans.factory.InjectionPoint . java.lang.reflect.Field ; this . java.lang.annotation.Annotation[] = org.springframework.beans.factory.InjectionPoint . java.lang.annotation.Annotation[] ; }  <METHOD_END>
<METHOD_START> protected void ( ) {	}  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.MethodParameter org.springframework.beans.factory.MethodParameter ( ) { return this . org.springframework.beans.factory.MethodParameter ; }  <METHOD_END>
<METHOD_START> public java.lang.reflect.Field java.lang.reflect.Field ( ) { return this . java.lang.reflect.Field ; }  <METHOD_END>
<METHOD_START> public java.lang.annotation.Annotation [] java.lang.annotation.Annotation[] ( ) { if ( this . java.lang.reflect.Field != null ) { if ( this . java.lang.annotation.Annotation[] == null ) { this . java.lang.annotation.Annotation[] = this . java.lang.reflect.Field . java.lang.annotation.Annotation[] ( ) ; } return this . java.lang.annotation.Annotation[] ; } else { return this . org.springframework.beans.factory.MethodParameter . getParameterAnnotations ( ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return ( this . java.lang.reflect.Field != null ? this . java.lang.reflect.Field . java.lang.Class<?> ( ) : this . org.springframework.beans.factory.MethodParameter . getParameterType ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.reflect.Member java.lang.reflect.Member ( ) { return ( this . java.lang.reflect.Field != null ? this . java.lang.reflect.Field : this . org.springframework.beans.factory.MethodParameter . getMember ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ( ) { return ( this . java.lang.reflect.Field != null ? this . java.lang.reflect.Field : this . org.springframework.beans.factory.MethodParameter . getAnnotatedElement ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Class<? extends org.springframework.beans.factory.InjectionPoint> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) { return false ; } org.springframework.beans.factory.InjectionPoint org.springframework.beans.factory.InjectionPoint = ( org.springframework.beans.factory.InjectionPoint ) java.lang.Object ; return ( this . java.lang.reflect.Field != null ? this . java.lang.reflect.Field . boolean ( org.springframework.beans.factory.InjectionPoint . java.lang.reflect.Field ) : this . org.springframework.beans.factory.MethodParameter . equals ( org.springframework.beans.factory.InjectionPoint . org.springframework.beans.factory.MethodParameter ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ( this . java.lang.reflect.Field != null ? this . java.lang.reflect.Field . int ( ) : this . org.springframework.beans.factory.MethodParameter . hashCode ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return ( this . java.lang.reflect.Field != null ? STRING + this . java.lang.reflect.Field . java.lang.String ( ) + STRING : this . org.springframework.beans.factory.MethodParameter . toString ( ) ) ; }  <METHOD_END>
