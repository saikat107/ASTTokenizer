<METHOD_START> public void ( CrudRepository < java.lang.Object , java.io.Serializable > org.springframework.data.repository.support.CrudRepository<java.lang.Object,java.io.Serializable> , RepositoryMetadata org.springframework.data.repository.support.RepositoryMetadata , ConversionService org.springframework.data.repository.support.ConversionService ) { super( org.springframework.data.repository.support.CrudRepository<java.lang.Object,java.io.Serializable> , org.springframework.data.repository.support.RepositoryMetadata , org.springframework.data.repository.support.ConversionService ); CrudMethods org.springframework.data.repository.support.CrudMethods = org.springframework.data.repository.support.RepositoryMetadata . getCrudMethods ( ) ; this . boolean = boolean ( org.springframework.data.repository.support.CrudMethods . getSaveMethod ( ) ) ; this . boolean = boolean ( org.springframework.data.repository.support.CrudMethods . getFindOneMethod ( ) ) ; this . boolean = boolean ( org.springframework.data.repository.support.CrudMethods . getDeleteMethod ( ) ) ; this . boolean = boolean ( org.springframework.data.repository.support.CrudMethods . getFindAllMethod ( ) ) ; this . org.springframework.data.repository.support.CrudRepository<java.lang.Object,java.io.Serializable> = org.springframework.data.repository.support.CrudRepository<java.lang.Object,java.io.Serializable> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Iterable<java.lang.Object> < java.lang.Object > java.lang.Iterable<java.lang.Object> ( Sort org.springframework.data.repository.support.Sort ) { return boolean ? super. invokeFindAll ( org.springframework.data.repository.support.Sort ) : org.springframework.data.repository.support.CrudRepository<java.lang.Object,java.io.Serializable> . findAll ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Iterable<java.lang.Object> < java.lang.Object > java.lang.Iterable<java.lang.Object> ( Pageable org.springframework.data.repository.support.Pageable ) { return boolean ? super. invokeFindAll ( org.springframework.data.repository.support.Pageable ) : org.springframework.data.repository.support.CrudRepository<java.lang.Object,java.io.Serializable> . findAll ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public < T > java.util.Optional<T> < T > java.util.Optional<T> ( java.io.Serializable java.io.Serializable ) { return boolean ? super. invokeFindOne ( java.io.Serializable ) : ( java.util.Optional<T> < T > ) org.springframework.data.repository.support.CrudRepository<java.lang.Object,java.io.Serializable> . findOne ( convertId ( java.io.Serializable ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( T T ) { return boolean ? super. invokeSave ( T ) : org.springframework.data.repository.support.CrudRepository<java.lang.Object,java.io.Serializable> . save ( T ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.io.Serializable java.io.Serializable ) { if ( boolean ) { super. invokeDelete ( java.io.Serializable ) ; } else { org.springframework.data.repository.support.CrudRepository<java.lang.Object,java.io.Serializable> . delete ( convertId ( java.io.Serializable ) ) ; } }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.util.Optional<java.lang.reflect.Method> < java.lang.reflect.Method > java.util.Optional<java.lang.reflect.Method> ) { return java.util.Optional<java.lang.reflect.Method> . java.util.Optional<java.lang.Boolean> ( java.lang.reflect.Method -> ! java.lang.reflect.Method . java.lang.Class<?> ( ) . boolean ( CrudRepository .class ) ) . java.lang.Boolean ( false ) ; }  <METHOD_END>
