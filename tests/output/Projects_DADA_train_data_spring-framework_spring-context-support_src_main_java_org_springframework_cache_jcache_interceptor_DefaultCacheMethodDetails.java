<METHOD_START> public void ( java.lang.reflect.Method java.lang.reflect.Method , A A , java.lang.String java.lang.String ) { this . java.lang.reflect.Method = java.lang.reflect.Method ; this . java.util.Set<java.lang.annotation.Annotation> = java.util.Collections . java.util.Set<java.lang.annotation.Annotation> ( new java.util.LinkedHashSet<java.lang.annotation.Annotation> <> ( java.util.List<java.lang.annotation.Annotation> ( java.lang.reflect.Method . java.lang.annotation.Annotation[] ( ) ) ) ) ; this . A = A ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.reflect.Method java.lang.reflect.Method ( ) { return this . java.lang.reflect.Method ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<java.lang.annotation.Annotation> < java.lang.annotation.Annotation > java.util.Set<java.lang.annotation.Annotation> ( ) { return this . java.util.Set<java.lang.annotation.Annotation> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public A A ( ) { return this . A ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.reflect.Method ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . A ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) . java.lang.StringBuilder ( '\'' ) ; java.lang.StringBuilder . java.lang.StringBuilder ( ']' ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
