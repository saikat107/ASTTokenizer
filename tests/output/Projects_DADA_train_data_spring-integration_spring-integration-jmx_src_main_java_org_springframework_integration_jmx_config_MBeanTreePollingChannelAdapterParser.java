<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.jmx.config.BeanMetadataElement org.springframework.integration.jmx.config.BeanMetadataElement ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.jmx.config.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.jmx.config.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( MBeanTreePollingMessageSource .class ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.jmx.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.jmx.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.jmx.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.jmx.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.jmx.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; if ( StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) && StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ) { org.springframework.integration.jmx.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } if ( StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) && StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ) { org.springframework.integration.jmx.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } BeanComponentDefinition org.springframework.integration.jmx.config.BeanComponentDefinition = IntegrationNamespaceUtils . parseInnerHandlerDefinition ( org.w3c.dom.Element , org.springframework.integration.jmx.config.ParserContext ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( org.springframework.integration.jmx.config.BeanComponentDefinition != null ) { if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.jmx.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } java.lang.String = BeanDefinitionReaderUtils . generateBeanName ( org.springframework.integration.jmx.config.BeanComponentDefinition . getBeanDefinition ( ) , org.springframework.integration.jmx.config.ParserContext . getRegistry ( ) , true ) ; org.springframework.integration.jmx.config.ParserContext . getRegistry ( ) . registerBeanDefinition ( java.lang.String , org.springframework.integration.jmx.config.BeanComponentDefinition . getBeanDefinition ( ) ) ; } else if ( ! StringUtils . hasText ( java.lang.String ) ) { BeanDefinitionBuilder org.springframework.integration.jmx.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( DefaultMBeanObjectConverter .class ) ; java.lang.String = BeanDefinitionReaderUtils . generateBeanName ( org.springframework.integration.jmx.config.BeanDefinitionBuilder . getBeanDefinition ( ) , org.springframework.integration.jmx.config.ParserContext . getRegistry ( ) , true ) ; org.springframework.integration.jmx.config.ParserContext . getRegistry ( ) . registerBeanDefinition ( java.lang.String , org.springframework.integration.jmx.config.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; } org.springframework.integration.jmx.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; return org.springframework.integration.jmx.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
