<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { super( java.lang.ClassLoader ); }  <METHOD_END>
<METHOD_START> public java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.String java.lang.String , byte [] byte[] ) { return java.lang.Class<?> ( java.lang.String , byte[] , NUMBER , byte[] . int ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator .class . java.lang.ClassLoader ( ) ); }  <METHOD_END>
<METHOD_START> public void ( final java.lang.ClassLoader java.lang.ClassLoader ) { Assert . notNull ( java.lang.ClassLoader ) ; this . org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator.BytecodeClassLoader = java.security.AccessController . org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator.BytecodeClassLoader ( new java.security.PrivilegedAction<org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator.BytecodeClassLoader> < org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator.BytecodeClassLoader > ( ) { public org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator.BytecodeClassLoader org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator.BytecodeClassLoader ( ) { return new org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator.BytecodeClassLoader ( java.lang.ClassLoader ) ; } } ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator.BytecodeClassLoader org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator.BytecodeClassLoader ( ) { return new org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator.BytecodeClassLoader ( java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.serialization.Instantiator org.springframework.data.gemfire.serialization.Instantiator ( java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable> < ? extends DataSerializable > java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable> , int int ) { Instantiator org.springframework.data.gemfire.serialization.Instantiator = java.util.concurrent.ConcurrentMap<java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable>,org.springframework.data.gemfire.serialization.Instantiator> . get ( java.lang.Class<> ) ; if ( org.springframework.data.gemfire.serialization.Instantiator == null ) { synchronized ( java.util.concurrent.ConcurrentMap<java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable>,org.springframework.data.gemfire.serialization.Instantiator> ) { org.springframework.data.gemfire.serialization.Instantiator = java.util.concurrent.ConcurrentMap<java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable>,org.springframework.data.gemfire.serialization.Instantiator> . get ( java.lang.Class<> ) ; if ( org.springframework.data.gemfire.serialization.Instantiator == null ) { org.springframework.data.gemfire.serialization.Instantiator = org.springframework.data.gemfire.serialization.Instantiator ( java.lang.Class<> , int ) ; java.util.concurrent.ConcurrentMap<java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable>,org.springframework.data.gemfire.serialization.Instantiator> . putIfAbsent ( java.lang.Class<> , org.springframework.data.gemfire.serialization.Instantiator ) ; } } } return org.springframework.data.gemfire.serialization.Instantiator ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.gemfire.serialization.Instantiator org.springframework.data.gemfire.serialization.Instantiator ( java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable> < ? extends DataSerializable > java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable> , int int ) { void ( java.lang.Class<> ) ; java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<?> ( java.lang.Class<> , int ) ; return ( Instantiator ) BeanUtils . instantiate ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable> < ? extends DataSerializable > java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable> ) { Assert . isTrue ( ! java.lang.reflect.Modifier . boolean ( java.lang.Class<> . int ( ) ) , STRING ) ; Assert . isTrue ( java.lang.reflect.Modifier . boolean ( java.lang.Class<> . int ( ) ) , STRING ) ; try { java.lang.reflect.Constructor<? extends org.springframework.data.gemfire.serialization.DataSerializable> < ? extends DataSerializable > java.lang.reflect.Constructor<? extends org.springframework.data.gemfire.serialization.DataSerializable> = java.lang.Class<> . java.lang.reflect.Constructor<> ( ) ; Assert . isTrue ( java.lang.reflect.Modifier . boolean ( java.lang.reflect.Constructor<> . int ( ) ) , STRING ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Class<> + STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable> < ? extends DataSerializable > java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable> , int int ) { java.lang.String java.lang.String = java.lang.String + java.lang.Class<> . java.lang.String ( ) + java.lang.String + java.util.concurrent.atomic.AtomicLong . long ( ) ; byte [] byte[] = byte[] ( java.lang.String , java.lang.Class<> , int ) ; return org.springframework.data.gemfire.serialization.AsmInstantiatorGenerator.BytecodeClassLoader . java.lang.Class<?> ( java.lang.String . java.lang.String ( '/' , '.' ) , byte[] ) ; }  <METHOD_END>
<METHOD_START> byte [] byte[] ( java.lang.String java.lang.String , java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable> < ? extends DataSerializable > java.lang.Class<? extends org.springframework.data.gemfire.serialization.DataSerializable> , int int ) { ClassWriter org.springframework.data.gemfire.serialization.ClassWriter = new ClassWriter ( NUMBER ) ; org.springframework.data.gemfire.serialization.ClassWriter . visit ( V1_5 , ACC_PUBLIC + ACC_SUPER , java.lang.String , null , java.lang.String , new java.lang.String [] { java.lang.String } ) ; FieldVisitor org.springframework.data.gemfire.serialization.FieldVisitor = org.springframework.data.gemfire.serialization.ClassWriter . visitField ( ACC_PRIVATE + ACC_FINAL + ACC_STATIC , java.lang.String , java.lang.String , null , null ) ; org.springframework.data.gemfire.serialization.FieldVisitor . visitEnd ( ) ; org.springframework.data.gemfire.serialization.FieldVisitor = org.springframework.data.gemfire.serialization.ClassWriter . visitField ( ACC_PRIVATE + ACC_FINAL + ACC_STATIC , java.lang.String , Type . INT_TYPE . getDescriptor ( ) , null , java.lang.Integer . java.lang.Integer ( int ) ) ; org.springframework.data.gemfire.serialization.FieldVisitor . visitEnd ( ) ; java.lang.String java.lang.String = Type . getMethodDescriptor ( Type . VOID_TYPE , new Type [] {} ) ; MethodVisitor org.springframework.data.gemfire.serialization.MethodVisitor = org.springframework.data.gemfire.serialization.ClassWriter . visitMethod ( ACC_STATIC , java.lang.String , java.lang.String , null , null ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitCode ( ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitLdcInsn ( Type . getType ( java.lang.Class<> ) ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitFieldInsn ( PUTSTATIC , java.lang.String , java.lang.String , java.lang.String ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitInsn ( RETURN ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitMaxs ( NUMBER , NUMBER ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitEnd ( ) ; java.lang.String java.lang.String = Type . getMethodDescriptor ( Type . VOID_TYPE , new Type [] { Type . getType ( java.lang.Class .class ) , Type . INT_TYPE } ) ; org.springframework.data.gemfire.serialization.MethodVisitor = org.springframework.data.gemfire.serialization.ClassWriter . visitMethod ( ACC_PUBLIC , java.lang.String , java.lang.String , null , null ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitCode ( ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitVarInsn ( ALOAD , NUMBER ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitFieldInsn ( GETSTATIC , java.lang.String , java.lang.String , java.lang.String ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitFieldInsn ( GETSTATIC , java.lang.String , java.lang.String , Type . INT_TYPE . getDescriptor ( ) ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitMethodInsn ( INVOKESPECIAL , java.lang.String , java.lang.String , java.lang.String ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitInsn ( RETURN ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitMaxs ( NUMBER , NUMBER ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitEnd ( ) ; org.springframework.data.gemfire.serialization.MethodVisitor = org.springframework.data.gemfire.serialization.ClassWriter . visitMethod ( ACC_PUBLIC , java.lang.String , java.lang.String , null , null ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitCode ( ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitVarInsn ( ALOAD , NUMBER ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitVarInsn ( ALOAD , NUMBER ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitVarInsn ( ILOAD , NUMBER ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitMethodInsn ( INVOKESPECIAL , java.lang.String , java.lang.String , java.lang.String ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitInsn ( RETURN ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitMaxs ( NUMBER , NUMBER ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitEnd ( ) ; Type org.springframework.data.gemfire.serialization.Type = Type . getType ( java.lang.Class<> ) ; java.lang.String java.lang.String = Type . getMethodDescriptor ( org.springframework.data.gemfire.serialization.Type , new Type [] {} ) ; org.springframework.data.gemfire.serialization.MethodVisitor = org.springframework.data.gemfire.serialization.ClassWriter . visitMethod ( ACC_PUBLIC , java.lang.String , java.lang.String , null , null ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitCode ( ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitTypeInsn ( NEW , org.springframework.data.gemfire.serialization.Type . getInternalName ( ) ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitInsn ( DUP ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitMethodInsn ( INVOKESPECIAL , org.springframework.data.gemfire.serialization.Type . getInternalName ( ) , java.lang.String , java.lang.String ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitInsn ( ARETURN ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitMaxs ( NUMBER , NUMBER ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitEnd ( ) ; org.springframework.data.gemfire.serialization.MethodVisitor = org.springframework.data.gemfire.serialization.ClassWriter . visitMethod ( ACC_PUBLIC + ACC_BRIDGE + ACC_SYNTHETIC , java.lang.String , java.lang.String , null , null ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitCode ( ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitVarInsn ( ALOAD , NUMBER ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitMethodInsn ( INVOKEVIRTUAL , java.lang.String , java.lang.String , java.lang.String ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitInsn ( ARETURN ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitMaxs ( NUMBER , NUMBER ) ; org.springframework.data.gemfire.serialization.MethodVisitor . visitEnd ( ) ; org.springframework.data.gemfire.serialization.ClassWriter . visitEnd ( ) ; return org.springframework.data.gemfire.serialization.ClassWriter . toByteArray ( ) ; }  <METHOD_END>
