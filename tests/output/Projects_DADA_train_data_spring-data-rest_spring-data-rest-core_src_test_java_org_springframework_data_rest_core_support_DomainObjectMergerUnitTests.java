<METHOD_START> @ Test public void void ( ) { assertThat ( isNullOrEmpty ( java.util.Optional . java.util.Optional<java.lang.Object> ( ) ) ) . isTrue ( ) ; assertThat ( isNullOrEmpty ( java.util.Optional . java.util.Optional<java.util.List<java.lang.Object>> ( java.util.Collections . java.util.List<java.lang.Object> ( ) ) ) ) . isTrue ( ) ; assertThat ( isNullOrEmpty ( java.util.Optional . java.util.Optional<java.lang.Object[]> ( new java.lang.Object [ NUMBER ] ) ) ) . isTrue ( ) ; assertThat ( isNullOrEmpty ( java.util.Optional . java.util.Optional<java.lang.String[]> ( new java.lang.String [ NUMBER ] ) ) ) . isTrue ( ) ; assertThat ( isNullOrEmpty ( java.util.Optional . java.util.Optional<org.springframework.data.rest.core.support.DomainObjectMergerUnitTests.MyIterable> ( new org.springframework.data.rest.core.support.DomainObjectMergerUnitTests.MyIterable ( ) ) ) ) . isTrue ( ) ; assertThat ( isNullOrEmpty ( java.util.Optional . java.util.Optional<java.lang.Object> ( new java.lang.Object ( ) ) ) ) . isFalse ( ) ; assertThat ( isNullOrEmpty ( java.util.Optional . java.util.Optional<java.util.Set<java.lang.Object>> ( java.util.Collections . java.util.Set<java.lang.Object> ( new java.lang.Object ( ) ) ) ) ) . isFalse ( ) ; assertThat ( isNullOrEmpty ( java.util.Optional . java.util.Optional<java.lang.Object[]> ( new java.lang.Object [] { STRING } ) ) ) . isFalse ( ) ; assertThat ( isNullOrEmpty ( java.util.Optional . java.util.Optional<java.lang.String[]> ( new java.lang.String [] { STRING } ) ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<java.lang.Object> < java.lang.Object > java.util.Iterator<java.lang.Object> ( ) { return java.util.Collections . java.util.List<java.lang.Object> ( ) . java.util.Iterator<java.lang.Object> ( ) ; }  <METHOD_END>
