<METHOD_START> public org.springframework.data.jpa.repository.config.BeanDefinition org.springframework.data.jpa.repository.config.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.jpa.repository.config.ParserContext ) { org.springframework.data.jpa.repository.config.AuditingBeanDefinitionParser.SpringConfiguredBeanDefinitionParser . org.springframework.data.jpa.repository.config.BeanDefinition ( org.w3c.dom.Element , org.springframework.data.jpa.repository.config.ParserContext ) ; org.springframework.data.jpa.repository.config.AuditingHandlerBeanDefinitionParser . parse ( org.w3c.dom.Element , org.springframework.data.jpa.repository.config.ParserContext ) ; java.lang.Object java.lang.Object = org.springframework.data.jpa.repository.config.ParserContext . getReaderContext ( ) . extractSource ( org.w3c.dom.Element ) ; BeanDefinitionBuilder org.springframework.data.jpa.repository.config.BeanDefinitionBuilder = rootBeanDefinition ( java.lang.String ) ; org.springframework.data.jpa.repository.config.BeanDefinitionBuilder . addPropertyValue ( STRING , ParsingUtils . getObjectFactoryBeanDefinition ( org.springframework.data.jpa.repository.config.AuditingHandlerBeanDefinitionParser . getResolvedBeanName ( ) , java.lang.Object ) ) ; org.springframework.data.jpa.repository.config.BeanDefinitionBuilder . setScope ( STRING ) ; void ( org.springframework.data.jpa.repository.config.BeanDefinitionBuilder . getRawBeanDefinition ( ) , java.lang.String , org.springframework.data.jpa.repository.config.ParserContext , org.w3c.dom.Element ) ; RootBeanDefinition org.springframework.data.jpa.repository.config.RootBeanDefinition = new RootBeanDefinition ( java.lang.String ) ; void ( org.springframework.data.jpa.repository.config.RootBeanDefinition , java.lang.String , org.springframework.data.jpa.repository.config.ParserContext , org.w3c.dom.Element ) ; return null ; }  <METHOD_END>
<METHOD_START> private void void ( AbstractBeanDefinition org.springframework.data.jpa.repository.config.AbstractBeanDefinition , java.lang.String java.lang.String , ParserContext org.springframework.data.jpa.repository.config.ParserContext , org.w3c.dom.Element org.w3c.dom.Element ) { org.springframework.data.jpa.repository.config.AbstractBeanDefinition . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) ; org.springframework.data.jpa.repository.config.AbstractBeanDefinition . setSource ( org.springframework.data.jpa.repository.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; org.springframework.data.jpa.repository.config.ParserContext . registerBeanComponent ( new BeanComponentDefinition ( org.springframework.data.jpa.repository.config.AbstractBeanDefinition , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.jpa.repository.config.BeanDefinition org.springframework.data.jpa.repository.config.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.jpa.repository.config.ParserContext ) { if ( ! org.springframework.data.jpa.repository.config.ParserContext . getRegistry ( ) . containsBeanDefinition ( java.lang.String ) ) { if ( ! ClassUtils . isPresent ( java.lang.String , java.lang.Class<? extends org.springframework.data.jpa.repository.config.AuditingBeanDefinitionParser.SpringConfiguredBeanDefinitionParser> ( ) . java.lang.ClassLoader ( ) ) ) { org.springframework.data.jpa.repository.config.ParserContext . getReaderContext ( ) . error ( STRING + STRING + STRING , org.w3c.dom.Element ) ; } RootBeanDefinition org.springframework.data.jpa.repository.config.RootBeanDefinition = new RootBeanDefinition ( ) ; org.springframework.data.jpa.repository.config.RootBeanDefinition . setBeanClassName ( java.lang.String ) ; org.springframework.data.jpa.repository.config.RootBeanDefinition . setFactoryMethodName ( STRING ) ; org.springframework.data.jpa.repository.config.RootBeanDefinition . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) ; org.springframework.data.jpa.repository.config.RootBeanDefinition . setSource ( org.springframework.data.jpa.repository.config.ParserContext . extractSource ( org.w3c.dom.Element ) ) ; org.springframework.data.jpa.repository.config.ParserContext . registerBeanComponent ( new BeanComponentDefinition ( org.springframework.data.jpa.repository.config.RootBeanDefinition , java.lang.String ) ) ; } return null ; }  <METHOD_END>
