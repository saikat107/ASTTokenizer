<METHOD_START> @ Parameters ( name = STRING ) public static java.lang.Object [] [] java.lang.Object[][] ( ) { return new java.lang.Object [] [] { { org.springframework.test.context.junit4.FailingBeforeAndAfterMethodsTestNGTests.AlwaysFailingBeforeTestClassTestCase .class . java.lang.String ( ) , NUMBER , NUMBER , NUMBER , NUMBER } , { org.springframework.test.context.junit4.FailingBeforeAndAfterMethodsTestNGTests.AlwaysFailingAfterTestClassTestCase .class . java.lang.String ( ) , NUMBER , NUMBER , NUMBER , NUMBER } , { org.springframework.test.context.junit4.FailingBeforeAndAfterMethodsTestNGTests.AlwaysFailingPrepareTestInstanceTestCase .class . java.lang.String ( ) , NUMBER , NUMBER , NUMBER , NUMBER } , { org.springframework.test.context.junit4.FailingBeforeAndAfterMethodsTestNGTests.AlwaysFailingBeforeTestMethodTestCase .class . java.lang.String ( ) , NUMBER , NUMBER , NUMBER , NUMBER } , { org.springframework.test.context.junit4.FailingBeforeAndAfterMethodsTestNGTests.AlwaysFailingBeforeTestExecutionTestCase .class . java.lang.String ( ) , NUMBER , NUMBER , NUMBER , NUMBER } , { org.springframework.test.context.junit4.FailingBeforeAndAfterMethodsTestNGTests.AlwaysFailingAfterTestExecutionTestCase .class . java.lang.String ( ) , NUMBER , NUMBER , NUMBER , NUMBER } , { org.springframework.test.context.junit4.FailingBeforeAndAfterMethodsTestNGTests.AlwaysFailingAfterTestMethodTestCase .class . java.lang.String ( ) , NUMBER , NUMBER , NUMBER , NUMBER } , { org.springframework.test.context.junit4.FailingBeforeAndAfterMethodsTestNGTests.FailingBeforeTransactionTestCase .class . java.lang.String ( ) , NUMBER , NUMBER , NUMBER , NUMBER } , { org.springframework.test.context.junit4.FailingBeforeAndAfterMethodsTestNGTests.FailingAfterTransactionTestCase .class . java.lang.String ( ) , NUMBER , NUMBER , NUMBER , NUMBER } } ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int , int int , int int , int int ) throws java.lang.Exception { this . java.lang.Class<?> = ClassUtils . forName ( java.lang.Class<? extends org.springframework.test.context.junit4.FailingBeforeAndAfterMethodsTestNGTests> ( ) . java.lang.String ( ) + STRING + java.lang.String , java.lang.Class<? extends org.springframework.test.context.junit4.FailingBeforeAndAfterMethodsTestNGTests> ( ) . java.lang.ClassLoader ( ) ) ; this . int = int ; this . int = int ; this . int = int ; this . int = int ; }  <METHOD_END>
<METHOD_START> @ Test @ Ignore ( STRING ) public void void ( ) java.lang.Exception { TrackingTestNGTestListener org.springframework.test.context.junit4.TrackingTestNGTestListener = new TrackingTestNGTestListener ( ) ; TestNG org.springframework.test.context.junit4.TestNG = new TestNG ( ) ; org.springframework.test.context.junit4.TestNG . addListener ( ( ITestNGListener ) org.springframework.test.context.junit4.TrackingTestNGTestListener ) ; org.springframework.test.context.junit4.TestNG . setTestClasses ( new java.lang.Class<?> < ? > [] { this . java.lang.Class<> } ) ; org.springframework.test.context.junit4.TestNG . setVerbose ( NUMBER ) ; org.springframework.test.context.junit4.TestNG . run ( ) ; java.lang.String java.lang.String = this . java.lang.Class<> . java.lang.String ( ) ; assertEquals ( STRING + java.lang.String + STRING , this . int , listener . testStartCount ) ; assertEquals ( STRING + java.lang.String + STRING , this . int , listener . testSuccessCount ) ; assertEquals ( STRING + java.lang.String + STRING , this . int , listener . testFailureCount ) ; assertEquals ( STRING + java.lang.String + STRING , this . int , listener . failedConfigurationsCount ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TestContext org.springframework.test.context.junit4.TestContext ) { org . org.testng . Assert . fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TestContext org.springframework.test.context.junit4.TestContext ) { org . org.testng . Assert . fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TestContext org.springframework.test.context.junit4.TestContext ) throws java.lang.Exception { org . org.testng . Assert . fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TestContext org.springframework.test.context.junit4.TestContext ) { org . org.testng . Assert . fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TestContext org.springframework.test.context.junit4.TestContext ) { org . org.testng . Assert . fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TestContext org.springframework.test.context.junit4.TestContext ) { org . org.testng . Assert . fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( TestContext org.springframework.test.context.junit4.TestContext ) { org . org.testng . Assert . fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ org . org.testng . org.testng . org.testng public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ org . org.testng . org.testng . org.testng public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ BeforeTransaction public void void ( ) { org . org.testng . Assert . fail ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ org . org.testng . org.testng . org.testng public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ AfterTransaction public void void ( ) { org . org.testng . Assert . fail ( STRING ) ; }  <METHOD_END>
