<METHOD_START> @ Test public void void ( ) java.lang.Exception { StateMachineTestPlan < java.lang.String , java.lang.String > org.springframework.statemachine.test.StateMachineTestPlan<java.lang.String,java.lang.String> = StateMachineTestPlanBuilder .< java.lang.String , java.lang.String > builder ( ) . build ( ) ; assertThat ( org.springframework.statemachine.test.StateMachineTestPlan<java.lang.String,java.lang.String> , notNullValue ( ) ) ; java.util.List<org.springframework.statemachine.test.StateMachineTestPlanStep<?,?>> < StateMachineTestPlanStep < ? , ? > > java.util.List<org.springframework.statemachine.test.StateMachineTestPlanStep<?,?>> = TestUtils . readField ( STRING , org.springframework.statemachine.test.StateMachineTestPlan<java.lang.String,java.lang.String> ) ; assertThat ( java.util.List<org.springframework.statemachine.test.StateMachineTestPlanStep<?,?>> . size ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { StateMachineTestPlan < java.lang.String , java.lang.String > org.springframework.statemachine.test.StateMachineTestPlan<java.lang.String,java.lang.String> = StateMachineTestPlanBuilder .< java.lang.String , java.lang.String > builder ( ) . step ( ) . expectState ( STRING ) . and ( ) . build ( ) ; assertThat ( org.springframework.statemachine.test.StateMachineTestPlan<java.lang.String,java.lang.String> , notNullValue ( ) ) ; java.util.List<org.springframework.statemachine.test.StateMachineTestPlanStep<?,?>> < StateMachineTestPlanStep < ? , ? > > java.util.List<org.springframework.statemachine.test.StateMachineTestPlanStep<?,?>> = TestUtils . readField ( STRING , org.springframework.statemachine.test.StateMachineTestPlan<java.lang.String,java.lang.String> ) ; assertThat ( java.util.List<org.springframework.statemachine.test.StateMachineTestPlanStep<?,?>> . size ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
