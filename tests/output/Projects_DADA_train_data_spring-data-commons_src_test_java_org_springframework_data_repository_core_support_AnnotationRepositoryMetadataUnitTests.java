<METHOD_START> @ Test public void void ( ) { RepositoryMetadata org.springframework.data.repository.core.support.RepositoryMetadata = new AnnotationRepositoryMetadata ( org.springframework.data.repository.core.support.AnnotationRepositoryMetadataUnitTests.AnnotatedRepository .class ) ; assertThat ( org.springframework.data.repository.core.support.RepositoryMetadata . getDomainType ( ) ) . isEqualTo ( org.springframework.data.repository.core.support.AnnotationRepositoryMetadataUnitTests.User .class ) ; assertThat ( org.springframework.data.repository.core.support.RepositoryMetadata . getIdType ( ) ) . isEqualTo ( java.lang.Integer .class ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { new AnnotationRepositoryMetadata ( org.springframework.data.repository.core.support.AnnotationRepositoryMetadataUnitTests.UnannotatedRepository .class ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
