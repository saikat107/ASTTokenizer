<METHOD_START> public static java.lang.StackTraceElement java.lang.StackTraceElement ( ) { return java.lang.StackTraceElement ( java.lang.Thread . java.lang.Thread ( ) ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.StackTraceElement java.lang.StackTraceElement ( final java.lang.Thread java.lang.Thread ) { return java.lang.Thread . java.lang.StackTraceElement[] ( ) [ NUMBER ] ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( final java.lang.StackTraceElement java.lang.StackTraceElement ) { return java.lang.String . java.lang.String ( STRING , java.lang.StackTraceElement . java.lang.Class<? extends java.lang.StackTraceElement> ( ) . java.lang.String ( ) , java.lang.StackTraceElement . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( final java.lang.StackTraceElement java.lang.StackTraceElement ) { return java.lang.String . java.lang.String ( STRING , java.lang.StackTraceElement . java.lang.Class<? extends java.lang.StackTraceElement> ( ) . java.lang.String ( ) , java.lang.StackTraceElement . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.StackTraceElement java.lang.StackTraceElement ( ) { return java.lang.StackTraceElement ( java.lang.Thread . java.lang.Thread ( ) ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.StackTraceElement java.lang.StackTraceElement ( final java.lang.Thread java.lang.Thread ) { for ( java.lang.StackTraceElement java.lang.StackTraceElement : java.lang.Thread . java.lang.StackTraceElement[] ( ) ) { if ( boolean ( java.lang.StackTraceElement ) && boolean ( java.lang.StackTraceElement ) ) { return java.lang.StackTraceElement ; } } return null ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( final java.lang.StackTraceElement java.lang.StackTraceElement ) { boolean boolean = java.lang.StackTraceElement . java.lang.String ( ) . java.lang.String ( ) . boolean ( STRING ) ; try { boolean |= java.lang.StackTraceElement . java.lang.Class<? extends java.lang.StackTraceElement> ( ) . java.lang.reflect.Method ( java.lang.StackTraceElement . java.lang.String ( ) ) . boolean ( org . org.junit . org.junit .class ) ; } catch ( java.lang.NoSuchMethodException java.lang.NoSuchMethodException ) {		} return boolean ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( final java.lang.StackTraceElement java.lang.StackTraceElement ) { boolean boolean = java.lang.StackTraceElement . java.lang.Class<? extends java.lang.StackTraceElement> ( ) . java.lang.String ( ) . java.lang.String ( ) . boolean ( STRING ) ; boolean |= java.lang.StackTraceElement . java.lang.Class<? extends java.lang.StackTraceElement> ( ) . boolean ( junit . junit . junit .class ) ; return boolean ; }  <METHOD_END>
