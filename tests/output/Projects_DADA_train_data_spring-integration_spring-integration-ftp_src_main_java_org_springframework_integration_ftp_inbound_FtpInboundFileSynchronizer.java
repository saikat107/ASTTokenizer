<METHOD_START> public void ( SessionFactory < FTPFile > org.springframework.integration.ftp.inbound.SessionFactory<org.springframework.integration.ftp.inbound.FTPFile> ) { super( org.springframework.integration.ftp.inbound.SessionFactory<org.springframework.integration.ftp.inbound.FTPFile> ); doSetRemoteDirectoryExpression ( new LiteralExpression ( null ) ) ; doSetFilter ( new FtpPersistentAcceptOnceFileListFilter ( new SimpleMetadataStore ( ) , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( FTPFile org.springframework.integration.ftp.inbound.FTPFile ) { return org.springframework.integration.ftp.inbound.FTPFile != null && org.springframework.integration.ftp.inbound.FTPFile . isFile ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( FTPFile org.springframework.integration.ftp.inbound.FTPFile ) { return ( org.springframework.integration.ftp.inbound.FTPFile != null ? org.springframework.integration.ftp.inbound.FTPFile . getName ( ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected long long ( FTPFile org.springframework.integration.ftp.inbound.FTPFile ) { return org.springframework.integration.ftp.inbound.FTPFile . getTimestamp ( ) . getTimeInMillis ( ) ; }  <METHOD_END>
