<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; if ( ! java.lang.Throwable .class . boolean ( java.lang.Class<> ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Class<> . java.lang.String ( ) + STRING ) ; } this . java.lang.String = java.lang.Class<> . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public int int ( java.lang.Throwable java.lang.Throwable ) { return int ( java.lang.Throwable . java.lang.Class<? extends java.lang.Throwable> ( ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> private int int ( java.lang.Class<?> < ? > java.lang.Class<?> , int int ) { if ( java.lang.Class<> . java.lang.String ( ) . boolean ( this . java.lang.String ) ) { return int ; } if ( java.lang.Class<> == java.lang.Throwable .class ) { return - NUMBER ; } return int ( java.lang.Class<> . java.lang.Class<? super > ( ) , int + NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.transaction.interceptor.RollbackRuleAttribute ) ) { return false ; } org.springframework.transaction.interceptor.RollbackRuleAttribute org.springframework.transaction.interceptor.RollbackRuleAttribute = ( org.springframework.transaction.interceptor.RollbackRuleAttribute ) java.lang.Object ; return this . java.lang.String . boolean ( org.springframework.transaction.interceptor.RollbackRuleAttribute . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.lang.String . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String + STRING ; }  <METHOD_END>
