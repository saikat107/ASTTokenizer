<METHOD_START> public void void ( Expression org.springframework.integration.endpoint.Expression ) { this . org.springframework.integration.endpoint.Expression = org.springframework.integration.endpoint.Expression ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . org.springframework.integration.endpoint.Expression = EXPRESSION_PARSER . parseExpression ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( EvaluationContext org.springframework.integration.endpoint.EvaluationContext ) { this . org.springframework.integration.endpoint.EvaluationContext = org.springframework.integration.endpoint.EvaluationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onInit ( ) ; if ( this . org.springframework.integration.endpoint.EvaluationContext == null ) { this . org.springframework.integration.endpoint.EvaluationContext = ExpressionUtils . createStandardEvaluationContext ( this . getBeanFactory ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { java.lang.Object java.lang.Object = java.lang.Object ; if ( this . org.springframework.integration.endpoint.Expression != null ) { java.lang.Object = this . org.springframework.integration.endpoint.Expression . getValue ( this . org.springframework.integration.endpoint.EvaluationContext , java.lang.Object ) ; } return java.lang.Object ; }  <METHOD_END>
