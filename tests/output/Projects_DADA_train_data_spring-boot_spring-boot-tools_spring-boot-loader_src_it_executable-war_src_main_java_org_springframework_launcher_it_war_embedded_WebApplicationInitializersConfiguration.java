<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) { this . java.lang.Class<?>[] = new java.lang.Class<?> < ? > [ java.lang.Class<?>[] . int + NUMBER ] ; this . java.lang.Class<?>[] [ NUMBER ] = java.lang.Class<> ; java.lang.System . void ( java.lang.Class<?>[] , NUMBER , this . java.lang.Class<?>[] , NUMBER , java.lang.Class<?>[] . int ) ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<?>[] ) { Assert . notNull ( java.lang.Class<> , STRING ) ; Assert . isAssignable ( WebApplicationInitializer .class , java.lang.Class<> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( WebAppContext org.springframework.boot.load.it.war.embedded.WebAppContext ) throws java.lang.Exception { org.springframework.boot.load.it.war.embedded.WebAppContext . getServletContext ( ) . addListener ( new ServletContextListener ( ) { @ java.lang.Override public void void ( ServletContextEvent org.springframework.boot.load.it.war.embedded.ServletContextEvent ) { try { for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<?>[] ) { WebApplicationInitializer org.springframework.boot.load.it.war.embedded.WebApplicationInitializer = ( WebApplicationInitializer ) java.lang.Class<> . newInstance ( ) ; org.springframework.boot.load.it.war.embedded.WebApplicationInitializer . onStartup ( org.springframework.boot.load.it.war.embedded.ServletContextEvent . getServletContext ( ) ) ; } } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.RuntimeException ( java.lang.Exception ) ; } } @ java.lang.Override public void void ( ServletContextEvent org.springframework.boot.load.it.war.embedded.ServletContextEvent ) {			} } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContextEvent org.springframework.boot.load.it.war.embedded.ServletContextEvent ) { try { for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<?>[] ) { WebApplicationInitializer org.springframework.boot.load.it.war.embedded.WebApplicationInitializer = ( WebApplicationInitializer ) java.lang.Class<> . newInstance ( ) ; org.springframework.boot.load.it.war.embedded.WebApplicationInitializer . onStartup ( org.springframework.boot.load.it.war.embedded.ServletContextEvent . getServletContext ( ) ) ; } } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.RuntimeException ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContextEvent org.springframework.boot.load.it.war.embedded.ServletContextEvent ) {			}  <METHOD_END>
