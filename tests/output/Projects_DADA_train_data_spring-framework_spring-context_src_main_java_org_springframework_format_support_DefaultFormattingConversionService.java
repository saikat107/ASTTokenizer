<METHOD_START> public void ( ) { this( null , true ); }  <METHOD_END>
<METHOD_START> public void ( boolean boolean ) { this( null , boolean ); }  <METHOD_END>
<METHOD_START> public void ( StringValueResolver org.springframework.format.support.StringValueResolver , boolean boolean ) { setEmbeddedValueResolver ( org.springframework.format.support.StringValueResolver ) ; DefaultConversionService . addDefaultConverters ( this ) ; if ( boolean ) { void ( this ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( FormatterRegistry org.springframework.format.support.FormatterRegistry ) { org.springframework.format.support.FormatterRegistry . addFormatterForFieldAnnotation ( new NumberFormatAnnotationFormatterFactory ( ) ) ; if ( boolean ) { org.springframework.format.support.FormatterRegistry . addFormatter ( new CurrencyUnitFormatter ( ) ) ; org.springframework.format.support.FormatterRegistry . addFormatter ( new MonetaryAmountFormatter ( ) ) ; org.springframework.format.support.FormatterRegistry . addFormatterForFieldAnnotation ( new Jsr354NumberFormatAnnotationFormatterFactory ( ) ) ; } new DateTimeFormatterRegistrar ( ) . registerFormatters ( org.springframework.format.support.FormatterRegistry ) ; if ( boolean ) { new JodaTimeFormatterRegistrar ( ) . registerFormatters ( org.springframework.format.support.FormatterRegistry ) ; } else { new DateFormatterRegistrar ( ) . registerFormatters ( org.springframework.format.support.FormatterRegistry ) ; } }  <METHOD_END>
