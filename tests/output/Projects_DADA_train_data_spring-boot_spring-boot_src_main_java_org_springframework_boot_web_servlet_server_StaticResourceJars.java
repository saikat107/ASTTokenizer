<METHOD_START> public final java.util.List<java.net.URL> < java.net.URL > java.util.List<java.net.URL> ( ) { java.lang.ClassLoader java.lang.ClassLoader = java.lang.Class<? extends org.springframework.boot.web.servlet.server.StaticResourceJars> ( ) . java.lang.ClassLoader ( ) ; java.util.List<java.net.URL> < java.net.URL > java.util.List<java.net.URL> = new java.util.ArrayList<java.net.URL> <> ( ) ; if ( java.lang.ClassLoader instanceof java.net.URLClassLoader ) { for ( java.net.URL java.net.URL : ( ( java.net.URLClassLoader ) java.lang.ClassLoader ) . java.net.URL[] ( ) ) { void ( java.util.List<java.net.URL> , java.net.URL ) ; } } return java.util.List<java.net.URL> ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.List<java.net.URL> < java.net.URL > java.util.List<java.net.URL> , java.net.URL java.net.URL ) { try { if ( STRING . boolean ( java.net.URL . java.lang.String ( ) ) ) { void ( java.util.List<java.net.URL> , java.net.URL , new java.io.File ( java.net.URL . java.lang.String ( ) ) ) ; } else { void ( java.util.List<java.net.URL> , java.net.URL , java.net.URL . java.net.URLConnection ( ) ) ; } } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalStateException ( java.io.IOException ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.List<java.net.URL> < java.net.URL > java.util.List<java.net.URL> , java.net.URL java.net.URL , java.io.File java.io.File ) { if ( java.io.File . boolean ( ) && new java.io.File ( java.io.File , STRING ) . boolean ( ) ) { java.util.List<java.net.URL> . boolean ( java.net.URL ) ; } else if ( boolean ( java.io.File ) ) { java.util.List<java.net.URL> . boolean ( java.net.URL ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.List<java.net.URL> < java.net.URL > java.util.List<java.net.URL> , java.net.URL java.net.URL , java.net.URLConnection java.net.URLConnection ) { if ( java.net.URLConnection instanceof java.net.JarURLConnection ) { if ( boolean ( ( java.net.JarURLConnection ) java.net.URLConnection ) ) { java.util.List<java.net.URL> . boolean ( java.net.URL ) ; } } }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.net.JarURLConnection java.net.JarURLConnection ) { try { return boolean ( java.net.JarURLConnection . java.util.jar.JarFile ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { return false ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.io.File java.io.File ) { try { return boolean ( new java.util.jar.JarFile ( java.io.File ) ) ; } catch ( java.io.IOException java.io.IOException ) { return false ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.util.jar.JarFile java.util.jar.JarFile ) throws java.io.IOException { try { return java.util.jar.JarFile . java.lang.String ( ) . boolean ( STRING ) && ( java.util.jar.JarFile . java.util.jar.JarEntry ( STRING ) != null ) ; } finally { java.util.jar.JarFile . void ( ) ; } }  <METHOD_END>
