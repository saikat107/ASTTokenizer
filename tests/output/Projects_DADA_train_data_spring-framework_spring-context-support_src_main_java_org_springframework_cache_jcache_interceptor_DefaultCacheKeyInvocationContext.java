<METHOD_START> public void ( AbstractJCacheKeyOperation < A > org.springframework.cache.jcache.interceptor.AbstractJCacheKeyOperation<A> , java.lang.Object java.lang.Object , java.lang.Object [] java.lang.Object[] ) { super( org.springframework.cache.jcache.interceptor.AbstractJCacheKeyOperation<A> , java.lang.Object , java.lang.Object[] ); this . org.springframework.cache.jcache.interceptor.CacheInvocationParameter[] = org.springframework.cache.jcache.interceptor.AbstractJCacheKeyOperation<A> . getKeyParameters ( java.lang.Object[] ) ; if ( org.springframework.cache.jcache.interceptor.AbstractJCacheKeyOperation<A> instanceof CachePutOperation ) { this . org.springframework.cache.jcache.interceptor.CacheInvocationParameter = ( ( CachePutOperation ) org.springframework.cache.jcache.interceptor.AbstractJCacheKeyOperation<A> ) . getValueParameter ( java.lang.Object[] ) ; } else { this . org.springframework.cache.jcache.interceptor.CacheInvocationParameter = null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.cache.jcache.interceptor.CacheInvocationParameter [] org.springframework.cache.jcache.interceptor.CacheInvocationParameter[] ( ) { return org.springframework.cache.jcache.interceptor.CacheInvocationParameter[] . clone ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.cache.jcache.interceptor.CacheInvocationParameter org.springframework.cache.jcache.interceptor.CacheInvocationParameter ( ) { return org.springframework.cache.jcache.interceptor.CacheInvocationParameter ; }  <METHOD_END>
