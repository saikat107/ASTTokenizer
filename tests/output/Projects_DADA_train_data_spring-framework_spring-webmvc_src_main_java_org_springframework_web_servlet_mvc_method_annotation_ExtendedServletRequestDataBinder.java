<METHOD_START> public void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { super( java.lang.Object , java.lang.String ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected void void ( MutablePropertyValues org.springframework.web.servlet.mvc.method.annotation.MutablePropertyValues , ServletRequest org.springframework.web.servlet.mvc.method.annotation.ServletRequest ) { java.lang.String java.lang.String = HandlerMapping . URI_TEMPLATE_VARIABLES_ATTRIBUTE ; java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ) org.springframework.web.servlet.mvc.method.annotation.ServletRequest . getAttribute ( java.lang.String ) ; if ( java.util.Map<java.lang.String,java.lang.String> != null ) { for ( java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { if ( org.springframework.web.servlet.mvc.method.annotation.MutablePropertyValues . contains ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ) { if ( logger . isWarnEnabled ( ) ) { logger . warn ( STRING + java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) + STRING ) ; } } else { org.springframework.web.servlet.mvc.method.annotation.MutablePropertyValues . addPropertyValue ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } } } }  <METHOD_END>
