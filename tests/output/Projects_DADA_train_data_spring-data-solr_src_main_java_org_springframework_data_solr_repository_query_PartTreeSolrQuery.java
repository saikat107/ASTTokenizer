<METHOD_START> public void ( SolrQueryMethod org.springframework.data.solr.repository.query.SolrQueryMethod , SolrOperations org.springframework.data.solr.repository.query.SolrOperations ) { super( org.springframework.data.solr.repository.query.SolrOperations , org.springframework.data.solr.repository.query.SolrQueryMethod ); this . org.springframework.data.solr.repository.query.PartTree = new PartTree ( org.springframework.data.solr.repository.query.SolrQueryMethod . getName ( ) , org.springframework.data.solr.repository.query.SolrQueryMethod . getEntityInformation ( ) . getJavaType ( ) ) ; this . org.springframework.data.solr.repository.query.MappingContext<?,org.springframework.data.solr.repository.query.SolrPersistentProperty> = org.springframework.data.solr.repository.query.SolrOperations . getConverter ( ) . getMappingContext ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.repository.query.PartTree org.springframework.data.solr.repository.query.PartTree ( ) { return org.springframework.data.solr.repository.query.PartTree ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.solr.repository.query.Query org.springframework.data.solr.repository.query.Query ( SolrParameterAccessor org.springframework.data.solr.repository.query.SolrParameterAccessor ) { Query org.springframework.data.solr.repository.query.Query = new SolrQueryCreator ( org.springframework.data.solr.repository.query.PartTree , org.springframework.data.solr.repository.query.SolrParameterAccessor , org.springframework.data.solr.repository.query.MappingContext<,org.springframework.data.solr.repository.query.SolrPersistentProperty> ) . createQuery ( ) ; appendProjection ( org.springframework.data.solr.repository.query.Query ) ; return org.springframework.data.solr.repository.query.Query ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.springframework.data.solr.repository.query.PartTree . isCountProjection ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.solr.repository.query.PartTree . isDelete ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.solr.repository.query.PartTree . isLimiting ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { if ( boolean ( ) ) { return this . org.springframework.data.solr.repository.query.PartTree . getMaxResults ( ) ; } return super. getLimit ( ) ; }  <METHOD_END>
