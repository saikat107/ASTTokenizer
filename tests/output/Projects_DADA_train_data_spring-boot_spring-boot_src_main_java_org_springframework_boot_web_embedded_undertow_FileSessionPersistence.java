<METHOD_START> void ( java.io.File java.io.File ) { this . java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> < java.lang.String , PersistentSession > java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> ) { try { void ( java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> , java.io.File ( java.lang.String ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { UndertowServletLogger . ROOT_LOGGER . failedToPersistSessions ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> < java.lang.String , PersistentSession > java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> , java.io.File java.io.File )			throws java.io.IOException { java.io.ObjectOutputStream java.io.ObjectOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( java.io.File ) ) ; try { void ( java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> , java.io.ObjectOutputStream ) ; } finally { java.io.ObjectOutputStream . void ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> < java.lang.String , PersistentSession > java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> , java.io.ObjectOutputStream java.io.ObjectOutputStream ) throws java.io.IOException { java.util.Map<java.lang.String,java.io.Serializable> < java.lang.String , java.io.Serializable > java.util.Map<java.lang.String,java.io.Serializable> = new java.util.LinkedHashMap<java.lang.String,java.io.Serializable> <> ( ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> < java.lang.String , PersistentSession > java.util.Map.Entry<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> : java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> . entrySet ( ) ) { java.util.Map<java.lang.String,java.io.Serializable> . java.io.Serializable ( java.util.Map.Entry<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> . getKey ( ) , new org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession ( java.util.Map.Entry<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> . getValue ( ) ) ) ; } java.io.ObjectOutputStream . void ( java.util.Map<java.lang.String,java.io.Serializable> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> < java.lang.String , PersistentSession > java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> ( java.lang.String java.lang.String , final java.lang.ClassLoader java.lang.ClassLoader ) { try { java.io.File java.io.File = java.io.File ( java.lang.String ) ; if ( java.io.File . boolean ( ) ) { return java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> ( java.io.File , java.lang.ClassLoader ) ; } } catch ( java.lang.Exception java.lang.Exception ) { UndertowServletLogger . ROOT_LOGGER . failedtoLoadPersistentSessions ( java.lang.Exception ) ; } return null ; }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> < java.lang.String , PersistentSession > java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> ( java.io.File java.io.File , java.lang.ClassLoader java.lang.ClassLoader )			throws java.io.IOException , java.lang.ClassNotFoundException { java.io.ObjectInputStream java.io.ObjectInputStream = new ConfigurableObjectInputStream ( new java.io.FileInputStream ( java.io.File ) , java.lang.ClassLoader ) ; try { return java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> ( java.io.ObjectInputStream ) ; } finally { java.io.ObjectInputStream . void ( ) ; } }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> < java.lang.String , PersistentSession > java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> ( java.io.ObjectInputStream java.io.ObjectInputStream )			throws java.lang.ClassNotFoundException , java.io.IOException { java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession> < java.lang.String , org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession > java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession> = java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession> ( java.io.ObjectInputStream ) ; long long = java.lang.System . long ( ) ; java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> < java.lang.String , PersistentSession > java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> = new java.util.LinkedHashMap<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> <> ( ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession> < java.lang.String , org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession > java.util.Map.Entry<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession> : java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession> . java.util.Set<java.util.Map.Entry<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession>> ( ) ) { PersistentSession org.springframework.boot.web.embedded.undertow.PersistentSession = java.util.Map.Entry<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession> . org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession ( ) . org.springframework.boot.web.embedded.undertow.PersistentSession ( ) ; if ( org.springframework.boot.web.embedded.undertow.PersistentSession . getExpiration ( ) . getTime ( ) > long ) { java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> . put ( java.util.Map.Entry<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession> . java.lang.String ( ) , org.springframework.boot.web.embedded.undertow.PersistentSession ) ; } } return java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.PersistentSession> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession> < java.lang.String , org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession > java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession> ( java.io.ObjectInputStream java.io.ObjectInputStream ) throws java.lang.ClassNotFoundException , java.io.IOException { return ( ( java.util.Map<java.lang.String,org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession> < java.lang.String , org.springframework.boot.web.embedded.undertow.FileSessionPersistence.SerializablePersistentSession > ) java.io.ObjectInputStream . java.lang.Object ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( java.lang.String java.lang.String ) { if ( ! this . java.io.File . boolean ( ) ) { this . java.io.File . boolean ( ) ; } return new java.io.File ( this . java.io.File , java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { java.io.File ( java.lang.String ) . boolean ( ) ; }  <METHOD_END>
<METHOD_START> void ( PersistentSession org.springframework.boot.web.embedded.undertow.PersistentSession ) { this . java.util.Date = org.springframework.boot.web.embedded.undertow.PersistentSession . getExpiration ( ) ; this . java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap <> ( org.springframework.boot.web.embedded.undertow.PersistentSession . getSessionData ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.web.embedded.undertow.PersistentSession org.springframework.boot.web.embedded.undertow.PersistentSession ( ) { return new PersistentSession ( this . java.util.Date , this . java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
