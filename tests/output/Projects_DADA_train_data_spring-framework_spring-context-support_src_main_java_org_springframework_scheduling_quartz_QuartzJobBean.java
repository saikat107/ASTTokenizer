<METHOD_START> @ java.lang.Override public final void void ( JobExecutionContext org.springframework.scheduling.quartz.JobExecutionContext ) throws org.springframework.scheduling.quartz.JobExecutionException { try { BeanWrapper org.springframework.scheduling.quartz.BeanWrapper = PropertyAccessorFactory . forBeanPropertyAccess ( this ) ; MutablePropertyValues org.springframework.scheduling.quartz.MutablePropertyValues = new MutablePropertyValues ( ) ; org.springframework.scheduling.quartz.MutablePropertyValues . addPropertyValues ( org.springframework.scheduling.quartz.JobExecutionContext . getScheduler ( ) . getContext ( ) ) ; org.springframework.scheduling.quartz.MutablePropertyValues . addPropertyValues ( org.springframework.scheduling.quartz.JobExecutionContext . getMergedJobDataMap ( ) ) ; org.springframework.scheduling.quartz.BeanWrapper . setPropertyValues ( org.springframework.scheduling.quartz.MutablePropertyValues , true ) ; } catch ( SchedulerException org.springframework.scheduling.quartz.SchedulerException ) { throw new JobExecutionException ( org.springframework.scheduling.quartz.SchedulerException ) ; } void ( org.springframework.scheduling.quartz.JobExecutionContext ) ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( JobExecutionContext org.springframework.scheduling.quartz.JobExecutionContext ) throws org.springframework.scheduling.quartz.JobExecutionException ;  <METHOD_END>
