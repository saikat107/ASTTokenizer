<METHOD_START> @ java.lang.Override protected org.springframework.oxm.castor.CastorMarshaller org.springframework.oxm.castor.CastorMarshaller ( ) java.lang.Exception { CastorMarshaller org.springframework.oxm.castor.CastorMarshaller = new CastorMarshaller ( ) ; ClassPathResource org.springframework.oxm.castor.ClassPathResource = new ClassPathResource ( STRING , CastorMarshaller .class ) ; org.springframework.oxm.castor.CastorMarshaller . setMappingLocation ( org.springframework.oxm.castor.ClassPathResource ) ; java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( NUMBER ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( XMLProperties . SERIALIZER_FACTORY , XercesXMLSerializerFactory .class . java.lang.String ( ) ) ; org.springframework.oxm.castor.CastorMarshaller . setCastorProperties ( java.util.Map<java.lang.String,java.lang.String> ) ; org.springframework.oxm.castor.CastorMarshaller . afterPropertiesSet ( ) ; return org.springframework.oxm.castor.CastorMarshaller ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( ) { Flight org.springframework.oxm.castor.Flight = new Flight ( ) ; org.springframework.oxm.castor.Flight . setNumber ( NUMBER ) ; Flights org.springframework.oxm.castor.Flights = new Flights ( ) ; org.springframework.oxm.castor.Flights . addFlight ( org.springframework.oxm.castor.Flight ) ; return org.springframework.oxm.castor.Flights ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.xml.sax.ContentHandler org.xml.sax.ContentHandler = mock ( org.xml.sax.ContentHandler .class ) ; javax.xml.transform.sax.SAXResult javax.xml.transform.sax.SAXResult = new javax.xml.transform.sax.SAXResult ( org.xml.sax.ContentHandler ) ; marshaller . marshal ( flights , javax.xml.transform.sax.SAXResult ) ; InOrder org.springframework.oxm.castor.InOrder = inOrder ( org.xml.sax.ContentHandler ) ; org.springframework.oxm.castor.InOrder . verify ( org.xml.sax.ContentHandler ) . startDocument ( ) ; org.springframework.oxm.castor.InOrder . verify ( org.xml.sax.ContentHandler ) . startPrefixMapping ( STRING , STRING ) ; org.springframework.oxm.castor.InOrder . verify ( org.xml.sax.ContentHandler ) . startElement ( eq ( STRING ) , eq ( STRING ) , eq ( STRING ) , isA ( org.xml.sax.Attributes .class ) ) ; org.springframework.oxm.castor.InOrder . verify ( org.xml.sax.ContentHandler ) . startElement ( eq ( STRING ) , eq ( STRING ) , eq ( STRING ) , isA ( org.xml.sax.Attributes .class ) ) ; org.springframework.oxm.castor.InOrder . verify ( org.xml.sax.ContentHandler ) . startElement ( eq ( STRING ) , eq ( STRING ) , eq ( STRING ) , isA ( org.xml.sax.Attributes .class ) ) ; org.springframework.oxm.castor.InOrder . verify ( org.xml.sax.ContentHandler ) . characters ( eq ( new char [] { '4' , '2' } ) , eq ( NUMBER ) , eq ( NUMBER ) ) ; org.springframework.oxm.castor.InOrder . verify ( org.xml.sax.ContentHandler ) . endElement ( STRING , STRING , STRING ) ; org.springframework.oxm.castor.InOrder . verify ( org.xml.sax.ContentHandler ) . endElement ( STRING , STRING , STRING ) ; org.springframework.oxm.castor.InOrder . verify ( org.xml.sax.ContentHandler ) . endElement ( STRING , STRING , STRING ) ; org.springframework.oxm.castor.InOrder . verify ( org.xml.sax.ContentHandler ) . endPrefixMapping ( STRING ) ; org.springframework.oxm.castor.InOrder . verify ( org.xml.sax.ContentHandler ) . endDocument ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertTrue ( STRING , marshaller . supports ( Flights .class ) ) ; assertTrue ( STRING , marshaller . supports ( Flight .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { marshaller . setSuppressNamespaces ( true ) ; java.lang.String java.lang.String = java.lang.String ( ) ; assertThat ( STRING , java.lang.String , isSimilarTo ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { marshaller . setSuppressNamespaces ( false ) ; java.lang.String java.lang.String = java.lang.String ( ) ; assertThat ( STRING , java.lang.String , isSimilarTo ( EXPECTED_STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { CastorObject org.springframework.oxm.castor.CastorObject = org.springframework.oxm.castor.CastorObject ( ) ; marshaller . setSuppressXsiType ( true ) ; marshaller . setRootElement ( STRING ) ; java.lang.String java.lang.String = java.lang.String ( java.util.Arrays . java.util.List ( org.springframework.oxm.castor.CastorObject ) ) ; assertThat ( STRING , java.lang.String , isSimilarTo ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { CastorObject org.springframework.oxm.castor.CastorObject = org.springframework.oxm.castor.CastorObject ( ) ; marshaller . setSuppressXsiType ( false ) ; marshaller . setRootElement ( STRING ) ; java.lang.String java.lang.String = java.lang.String ( java.util.Arrays . java.util.List ( org.springframework.oxm.castor.CastorObject ) ) ; assertThat ( STRING , java.lang.String , isSimilarTo ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { marshaller . setMarshalAsDocument ( true ) ; java.lang.String java.lang.String = java.lang.String ( ) ; assertThat ( STRING , java.lang.String , isSimilarTo ( java.lang.String ) ) ; assertTrue ( STRING , java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { marshaller . setMarshalAsDocument ( true ) ; java.lang.String java.lang.String = java.lang.String ( ) ; assertThat ( STRING , java.lang.String , isSimilarTo ( EXPECTED_STRING ) ) ; assertFalse ( STRING , java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { marshaller . setRootElement ( STRING ) ; java.lang.String java.lang.String = java.lang.String ( ) ; assertThat ( STRING , java.lang.String , isSimilarTo ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; marshaller . setNoNamespaceSchemaLocation ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( ) ; void ( STRING , java.lang.String , STRING , java.lang.String ) ; assertThat ( STRING , java.lang.String , isSimilarTo ( EXPECTED_STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; marshaller . setSchemaLocation ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( ) ; void ( STRING , java.lang.String , STRING , java.lang.String ) ; assertThat ( STRING , java.lang.String , isSimilarTo ( EXPECTED_STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { CastorObject org.springframework.oxm.castor.CastorObject = org.springframework.oxm.castor.CastorObject ( ) ; marshaller . setSuppressXsiType ( false ) ; marshaller . setUseXSITypeAtRoot ( true ) ; marshaller . setRootElement ( STRING ) ; java.lang.String java.lang.String = java.lang.String ( java.util.Arrays . java.util.List ( org.springframework.oxm.castor.CastorObject ) ) ; assertThat ( STRING , java.lang.String , isSimilarTo ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { CastorObject org.springframework.oxm.castor.CastorObject = org.springframework.oxm.castor.CastorObject ( ) ; marshaller . setSuppressXsiType ( false ) ; marshaller . setUseXSITypeAtRoot ( false ) ; marshaller . setRootElement ( STRING ) ; java.lang.String java.lang.String = java.lang.String ( java.util.Arrays . java.util.List ( org.springframework.oxm.castor.CastorObject ) ) ; assertThat ( STRING , java.lang.String , isSimilarTo ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.Object java.lang.Object ) throws java.lang.Exception { java.io.StringWriter java.io.StringWriter = new java.io.StringWriter ( ) ; javax.xml.transform.stream.StreamResult javax.xml.transform.stream.StreamResult = new javax.xml.transform.stream.StreamResult ( java.io.StringWriter ) ; marshaller . marshal ( java.lang.Object , javax.xml.transform.stream.StreamResult ) ; return java.io.StringWriter . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) java.lang.Exception { return java.lang.String ( flights ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.lang.Exception { java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; JAXPXPathEngine org.springframework.oxm.castor.JAXPXPathEngine = new JAXPXPathEngine ( ) ; org.springframework.oxm.castor.JAXPXPathEngine . setNamespaceContext ( java.util.Map<java.lang.String,java.lang.String> ) ; javax.xml.transform.Source javax.xml.transform.Source = Input . fromString ( java.lang.String ) . build ( ) ; java.lang.Iterable<org.w3c.dom.Node> < org.w3c.dom.Node > java.lang.Iterable<org.w3c.dom.Node> = org.springframework.oxm.castor.JAXPXPathEngine . selectNodes ( java.lang.String , javax.xml.transform.Source ) ; assertEquals ( java.lang.String , java.lang.String , java.lang.Iterable<org.w3c.dom.Node> . java.util.Iterator<org.w3c.dom.Node> ( ) . org.w3c.dom.Node ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.oxm.castor.CastorObject org.springframework.oxm.castor.CastorObject ( ) { CastorObject org.springframework.oxm.castor.CastorObject = new CastorObject ( ) ; org.springframework.oxm.castor.CastorObject . setName ( STRING ) ; org.springframework.oxm.castor.CastorObject . setValue ( NUMBER ) ; return org.springframework.oxm.castor.CastorObject ; }  <METHOD_END>
