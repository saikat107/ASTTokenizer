<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , TaskScheduler org.springframework.integration.handler.TaskScheduler ) { this( java.lang.String ); this . setTaskScheduler ( org.springframework.integration.handler.TaskScheduler ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public void void ( Expression org.springframework.integration.handler.Expression ) { this . org.springframework.integration.handler.Expression = org.springframework.integration.handler.Expression ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.integration.handler.Expression = EXPRESSION_PARSER . parseExpression ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( MessageGroupStore org.springframework.integration.handler.MessageGroupStore ) { Assert . state ( org.springframework.integration.handler.MessageGroupStore != null , STRING ) ; this . org.springframework.integration.handler.MessageGroupStore = org.springframework.integration.handler.MessageGroupStore ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.integration.handler.Advice> < Advice > java.util.List<org.springframework.integration.handler.Advice> ) { Assert . notNull ( java.util.List<org.springframework.integration.handler.Advice> , STRING ) ; this . java.util.List<org.springframework.integration.handler.Advice> = java.util.List<org.springframework.integration.handler.Advice> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { if ( this . org.springframework.integration.handler.MessageGroupStore == null ) { this . org.springframework.integration.handler.MessageGroupStore = new SimpleMessageStore ( ) ; } else { Assert . isInstanceOf ( MessageStore .class , this . org.springframework.integration.handler.MessageGroupStore ) ; } this . org.springframework.integration.handler.EvaluationContext = ExpressionUtils . createStandardEvaluationContext ( this . getBeanFactory ( ) ) ; this . org.springframework.integration.handler.MessageHandler = this . org.springframework.integration.handler.MessageHandler ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.handler.MessageHandler org.springframework.integration.handler.MessageHandler ( ) { org.springframework.integration.handler.DelayHandler.ReleaseMessageHandler org.springframework.integration.handler.DelayHandler.ReleaseMessageHandler = new org.springframework.integration.handler.DelayHandler.ReleaseMessageHandler ( ) ; if ( ! CollectionUtils . isEmpty ( this . java.util.List<org.springframework.integration.handler.Advice> ) ) { ProxyFactory org.springframework.integration.handler.ProxyFactory = new ProxyFactory ( org.springframework.integration.handler.DelayHandler.ReleaseMessageHandler ) ; for ( Advice org.springframework.integration.handler.Advice : this . java.util.List<org.springframework.integration.handler.Advice> ) { org.springframework.integration.handler.ProxyFactory . addAdvice ( org.springframework.integration.handler.Advice ) ; } return ( MessageHandler ) org.springframework.integration.handler.ProxyFactory . getProxy ( getApplicationContext ( ) . getClassLoader ( ) ) ; } return org.springframework.integration.handler.DelayHandler.ReleaseMessageHandler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.handler.Message<?> ) { boolean boolean = org.springframework.integration.handler.Message<> . getPayload ( ) instanceof org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper ; if ( ! boolean ) { long long = this . long ( org.springframework.integration.handler.Message<> ) ; if ( long > NUMBER ) { this . void ( org.springframework.integration.handler.Message<> , long ) ; return null ; } } return boolean ? ( ( org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper ) org.springframework.integration.handler.Message<> . getPayload ( ) ) . org.springframework.integration.handler.Message<?> ( ) : org.springframework.integration.handler.Message<> ; }  <METHOD_END>
<METHOD_START> private long long ( Message < ? > org.springframework.integration.handler.Message<?> ) { org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper = null ; if ( org.springframework.integration.handler.Message<> . getPayload ( ) instanceof org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper ) { org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper = ( org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper ) org.springframework.integration.handler.Message<> . getPayload ( ) ; } long long = this . long ; if ( this . org.springframework.integration.handler.Expression != null ) { java.lang.Exception java.lang.Exception = null ; java.lang.Object java.lang.Object = null ; try { java.lang.Object = this . org.springframework.integration.handler.Expression . getValue ( this . org.springframework.integration.handler.EvaluationContext , org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper != null ? org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper . org.springframework.integration.handler.Message<?> ( ) : org.springframework.integration.handler.Message<> ) ; } catch ( EvaluationException org.springframework.integration.handler.EvaluationException ) { java.lang.Exception = org.springframework.integration.handler.EvaluationException ; } if ( java.lang.Object instanceof java.util.Date ) { long long = org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper != null ? org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper . long ( ) : java.lang.System . long ( ) ; long = ( ( java.util.Date ) java.lang.Object ) . long ( ) - long ; } else if ( java.lang.Object != null ) { try { long = java.lang.Long . java.lang.Long ( java.lang.Object . java.lang.String ( ) ) ; } catch ( java.lang.NumberFormatException java.lang.NumberFormatException ) { java.lang.Exception = java.lang.NumberFormatException ; } } if ( java.lang.Exception != null ) { if ( this . boolean ) { if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + java.lang.Exception . java.lang.String ( ) + STRING + this . long ) ; } } else { throw new MessageHandlingException ( org.springframework.integration.handler.Message<> , STRING , java.lang.Exception ) ; } } } return long ; }  <METHOD_END>
<METHOD_START> private void void ( final Message < ? > org.springframework.integration.handler.Message<?> , long long ) { Message < ? > org.springframework.integration.handler.Message<?> = org.springframework.integration.handler.Message<> ; org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper = null ; if ( org.springframework.integration.handler.Message<> . getPayload ( ) instanceof org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper ) { org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper = ( org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper ) org.springframework.integration.handler.Message<> . getPayload ( ) ; } else { org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper = new org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper ( org.springframework.integration.handler.Message<> , java.lang.System . long ( ) ) ; org.springframework.integration.handler.Message<?> = getMessageBuilderFactory ( ) . withPayload ( org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper ) . copyHeaders ( org.springframework.integration.handler.Message<> . getHeaders ( ) ) . build ( ) ; this . org.springframework.integration.handler.MessageGroupStore . addMessageToGroup ( this . java.lang.String , org.springframework.integration.handler.Message<> ) ; } java.lang.Runnable java.lang.Runnable ; if ( this . org.springframework.integration.handler.MessageGroupStore instanceof SimpleMessageStore ) { final Message < ? > org.springframework.integration.handler.Message<?> = org.springframework.integration.handler.Message<> ; java.lang.Runnable = ( ) void ( org.springframework.integration.handler.Message<> ) ; } else { final java.util.UUID java.util.UUID = org.springframework.integration.handler.Message<> . getHeaders ( ) . getId ( ) ; java.lang.Runnable = ( ) { Message < ? > org.springframework.integration.handler.Message<?> = org.springframework.integration.handler.Message<?> ( java.util.UUID ) ; if ( org.springframework.integration.handler.Message<> != null ) { void ( org.springframework.integration.handler.Message<> ) ; } } ; } getTaskScheduler ( ) . schedule ( java.lang.Runnable , new java.util.Date ( org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper . long ( ) + long ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.handler.Message<?> < ? > org.springframework.integration.handler.Message<?> ( java.util.UUID java.util.UUID ) { Message < ? > org.springframework.integration.handler.Message<?> = ( ( MessageStore ) this . org.springframework.integration.handler.MessageGroupStore ) . getMessage ( java.util.UUID ) ; if ( org.springframework.integration.handler.Message<> == null ) { if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + java.util.UUID + STRING ) ; } return null ; } else { return org.springframework.integration.handler.Message<> ; } }  <METHOD_END>
<METHOD_START> private void void ( Message < ? > org.springframework.integration.handler.Message<?> ) { this . org.springframework.integration.handler.MessageHandler . handleMessage ( org.springframework.integration.handler.Message<> ) ; }  <METHOD_END>
<METHOD_START> private void void ( Message < ? > org.springframework.integration.handler.Message<?> ) { if ( boolean ( org.springframework.integration.handler.Message<> ) ) { if ( ! ( this . org.springframework.integration.handler.MessageGroupStore instanceof SimpleMessageStore ) ) { this . org.springframework.integration.handler.MessageGroupStore . removeMessagesFromGroup ( this . java.lang.String , org.springframework.integration.handler.Message<> ) ; } this . handleMessageInternal ( org.springframework.integration.handler.Message<> ) ; } else { if ( logger . isDebugEnabled ( ) ) { logger . debug ( STRING + org.springframework.integration.handler.Message<> + STRING ) ; } } }  <METHOD_END>
<METHOD_START> private boolean boolean ( Message < ? > org.springframework.integration.handler.Message<?> ) { if ( this . org.springframework.integration.handler.MessageGroupStore instanceof SimpleMessageStore ) { synchronized ( this . java.lang.String ) { java.util.Collection<org.springframework.integration.handler.Message<?>> < Message < ? > > java.util.Collection<org.springframework.integration.handler.Message<?>> = this . org.springframework.integration.handler.MessageGroupStore . getMessageGroup ( this . java.lang.String ) . getMessages ( ) ; if ( java.util.Collection<org.springframework.integration.handler.Message<?>> . contains ( org.springframework.integration.handler.Message<> ) ) { this . org.springframework.integration.handler.MessageGroupStore . removeMessagesFromGroup ( this . java.lang.String , org.springframework.integration.handler.Message<> ) ; return true ; } else { return false ; } } } else { return ( ( MessageStore ) this . org.springframework.integration.handler.MessageGroupStore ) . removeMessage ( org.springframework.integration.handler.Message<> . getHeaders ( ) . getId ( ) ) != null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.integration.handler.MessageGroupStore . messageGroupSize ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public synchronized void void ( ) { MessageGroup org.springframework.integration.handler.MessageGroup = this . org.springframework.integration.handler.MessageGroupStore . getMessageGroup ( this . java.lang.String ) ; for ( final Message < ? > org.springframework.integration.handler.Message<?> : org.springframework.integration.handler.MessageGroup . getMessages ( ) ) { getTaskScheduler ( ) . schedule ( ( java.lang.Runnable ) ( ) { long long = long ( org.springframework.integration.handler.Message<> ) ; if ( long > NUMBER ) { void ( org.springframework.integration.handler.Message<> , long ) ; } else { void ( org.springframework.integration.handler.Message<> ) ; } } , new java.util.Date ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ContextRefreshedEvent org.springframework.integration.handler.ContextRefreshedEvent ) { if ( ! this . java.util.concurrent.atomic.AtomicBoolean . boolean ( true ) ) { this . void ( ) ; } }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message < ? > org.springframework.integration.handler.Message<?> ) throws org.springframework.integration.handler.MessagingException { org.springframework.integration.handler.DelayHandler .this . void ( org.springframework.integration.handler.Message<> ) ; }  <METHOD_END>
<METHOD_START> void ( Message < ? > org.springframework.integration.handler.Message<?> , long long ) { this . org.springframework.integration.handler.Message<?> = org.springframework.integration.handler.Message<> ; this . long = long ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return this . long ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.handler.Message<?> < ? > org.springframework.integration.handler.Message<?> ( ) { return this . org.springframework.integration.handler.Message<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null || java.lang.Class<? extends org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) { return false ; } org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper = ( org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper ) java.lang.Object ; return this . org.springframework.integration.handler.Message<> . equals ( org.springframework.integration.handler.DelayHandler.DelayedMessageWrapper . org.springframework.integration.handler.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.integration.handler.Message<> . hashCode ( ) ; }  <METHOD_END>
