<METHOD_START> @ Test public void void ( ) { SessionFactory org.springframework.data.neo4j.transaction.SessionFactory = mock ( SessionFactory .class ) ; assertThat ( SharedSessionCreator . createSharedSession ( org.springframework.data.neo4j.transaction.SessionFactory ) , is ( notNullValue ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) { SessionFactory org.springframework.data.neo4j.transaction.SessionFactory = mock ( SessionFactory .class ) ; Session org.springframework.data.neo4j.transaction.Session = SharedSessionCreator . createSharedSession ( org.springframework.data.neo4j.transaction.SessionFactory ) ; org.springframework.data.neo4j.transaction.Session . save ( new java.lang.Object ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) { SessionFactory org.springframework.data.neo4j.transaction.SessionFactory = mock ( SessionFactory .class ) ; Session org.springframework.data.neo4j.transaction.Session = SharedSessionCreator . createSharedSession ( org.springframework.data.neo4j.transaction.SessionFactory ) ; org.springframework.data.neo4j.transaction.Session . delete ( new java.lang.Object ( ) ) ; }  <METHOD_END>
