<METHOD_START> public void ( ObjectMapper org.springframework.data.rest.webmvc.json.ObjectMapper , java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( org.springframework.data.rest.webmvc.json.ObjectMapper , STRING ) ; Assert . notNull ( java.lang.Class<> , STRING ) ; this . org.springframework.data.rest.webmvc.json.ObjectMapper = org.springframework.data.rest.webmvc.json.ObjectMapper ; SerializationConfig org.springframework.data.rest.webmvc.json.SerializationConfig = org.springframework.data.rest.webmvc.json.ObjectMapper . getSerializationConfig ( ) ; JavaType org.springframework.data.rest.webmvc.json.JavaType = org.springframework.data.rest.webmvc.json.SerializationConfig . constructType ( java.lang.Class<> ) ; BeanDescription org.springframework.data.rest.webmvc.json.BeanDescription = org.springframework.data.rest.webmvc.json.SerializationConfig . introspect ( org.springframework.data.rest.webmvc.json.JavaType ) ; this . java.util.List<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> = org.springframework.data.rest.webmvc.json.BeanDescription . findProperties ( ) ; this . boolean = org.springframework.data.rest.webmvc.json.BeanDescription . findJsonValueMethod ( ) != null ; DeserializationConfig org.springframework.data.rest.webmvc.json.DeserializationConfig = org.springframework.data.rest.webmvc.json.ObjectMapper . getDeserializationConfig ( ) ; JavaType org.springframework.data.rest.webmvc.json.JavaType = org.springframework.data.rest.webmvc.json.DeserializationConfig . constructType ( java.lang.Class<> ) ; this . java.util.List<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> = org.springframework.data.rest.webmvc.json.DeserializationConfig . introspect ( org.springframework.data.rest.webmvc.json.JavaType ) . findProperties ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.BeanPropertyDefinition org.springframework.data.rest.webmvc.json.BeanPropertyDefinition ( PersistentProperty < ? > org.springframework.data.rest.webmvc.json.PersistentProperty<?> ) { Assert . notNull ( org.springframework.data.rest.webmvc.json.PersistentProperty<> , STRING ) ; return org.springframework.data.rest.webmvc.json.BeanPropertyDefinition ( org.springframework.data.rest.webmvc.json.PersistentProperty<> , java.util.List<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.ResourceDescription org.springframework.data.rest.webmvc.json.ResourceDescription ( ResourceMetadata org.springframework.data.rest.webmvc.json.ResourceMetadata , BeanPropertyDefinition org.springframework.data.rest.webmvc.json.BeanPropertyDefinition ) { Assert . notNull ( org.springframework.data.rest.webmvc.json.ResourceMetadata , STRING ) ; Assert . notNull ( org.springframework.data.rest.webmvc.json.BeanPropertyDefinition , STRING ) ; AnnotatedMember org.springframework.data.rest.webmvc.json.AnnotatedMember = org.springframework.data.rest.webmvc.json.BeanPropertyDefinition . getPrimaryMember ( ) ; Description org.springframework.data.rest.webmvc.json.Description = org.springframework.data.rest.webmvc.json.AnnotatedMember . getAnnotation ( Description .class ) ; ResourceDescription org.springframework.data.rest.webmvc.json.ResourceDescription = TypedResourceDescription . defaultFor ( org.springframework.data.rest.webmvc.json.ResourceMetadata . getItemResourceRel ( ) , org.springframework.data.rest.webmvc.json.BeanPropertyDefinition . getInternalName ( ) , org.springframework.data.rest.webmvc.json.BeanPropertyDefinition . getPrimaryMember ( ) . getRawType ( ) ) ; return org.springframework.data.rest.webmvc.json.Description == null ? org.springframework.data.rest.webmvc.json.ResourceDescription : new AnnotationBasedResourceDescription ( org.springframework.data.rest.webmvc.json.Description , org.springframework.data.rest.webmvc.json.ResourceDescription ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( PersistentProperty < ? > org.springframework.data.rest.webmvc.json.PersistentProperty<?> ) { Assert . notNull ( org.springframework.data.rest.webmvc.json.PersistentProperty<> , STRING ) ; return org.springframework.data.rest.webmvc.json.BeanPropertyDefinition ( org.springframework.data.rest.webmvc.json.PersistentProperty<> ) != null ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( PersistentProperty < ? > org.springframework.data.rest.webmvc.json.PersistentProperty<?> ) { BeanPropertyDefinition org.springframework.data.rest.webmvc.json.BeanPropertyDefinition = org.springframework.data.rest.webmvc.json.BeanPropertyDefinition ( org.springframework.data.rest.webmvc.json.PersistentProperty<> , java.util.List<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> ) ; return org.springframework.data.rest.webmvc.json.BeanPropertyDefinition == null ? false : ! org.springframework.data.rest.webmvc.json.BeanPropertyDefinition . couldDeserialize ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.JsonSerializer<?> < ? > org.springframework.data.rest.webmvc.json.JsonSerializer<?> ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; try { SerializerProvider org.springframework.data.rest.webmvc.json.SerializerProvider = org.springframework.data.rest.webmvc.json.ObjectMapper . getSerializerProvider ( ) ; if ( ! ( org.springframework.data.rest.webmvc.json.SerializerProvider instanceof DefaultSerializerProvider ) ) { return null ; } org.springframework.data.rest.webmvc.json.SerializerProvider = ( ( DefaultSerializerProvider ) org.springframework.data.rest.webmvc.json.SerializerProvider ) . createInstance ( org.springframework.data.rest.webmvc.json.ObjectMapper . getSerializationConfig ( ) , org.springframework.data.rest.webmvc.json.ObjectMapper . getSerializerFactory ( ) ) ; return org.springframework.data.rest.webmvc.json.SerializerProvider . findValueSerializer ( java.lang.Class<> ) ; } catch ( JsonMappingException org.springframework.data.rest.webmvc.json.JsonMappingException ) { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> < BeanPropertyDefinition > java.util.Iterator<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> ( ) { return java.util.List<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> . iterator ( ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.data.rest.webmvc.json.BeanPropertyDefinition org.springframework.data.rest.webmvc.json.BeanPropertyDefinition ( PersistentProperty < ? > org.springframework.data.rest.webmvc.json.PersistentProperty<?> , java.lang.Iterable<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> < BeanPropertyDefinition > java.lang.Iterable<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> ) { for ( BeanPropertyDefinition org.springframework.data.rest.webmvc.json.BeanPropertyDefinition : java.lang.Iterable<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> ) { if ( org.springframework.data.rest.webmvc.json.BeanPropertyDefinition . getInternalName ( ) . equals ( org.springframework.data.rest.webmvc.json.PersistentProperty<> . getName ( ) ) ) { return org.springframework.data.rest.webmvc.json.BeanPropertyDefinition ; } } return null ; }  <METHOD_END>
