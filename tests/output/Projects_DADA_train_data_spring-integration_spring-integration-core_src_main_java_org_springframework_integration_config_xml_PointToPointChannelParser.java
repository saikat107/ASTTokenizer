<METHOD_START> @ java.lang.Override protected org.springframework.integration.config.xml.BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = null ; org.w3c.dom.Element org.w3c.dom.Element = null ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; boolean boolean = STRING . boolean ( java.lang.String . java.lang.String ( ) . java.lang.String ( ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( ID_ATTRIBUTE ) ; if ( ( org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ) != null ) { org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( QueueChannel .class ) ; boolean boolean = this . boolean ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , java.lang.String , false ) ; boolean boolean = this . boolean ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element ) ; if ( ! boolean || ! boolean ) { boolean boolean = this . boolean ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element ) ; if ( boolean && boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } if ( boolean && boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + STRING , org.w3c.dom.Element ) ; } } if ( boolean && boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } } else if ( ( org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ) != null ) { org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( PriorityChannel .class ) ; boolean boolean = this . boolean ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } if ( boolean ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , java.lang.String , true ) ) { if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + STRING , org.w3c.dom.Element ) ; } if ( boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + STRING , org.w3c.dom.Element ) ; } } } else if ( ( org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ) != null ) { org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( RendezvousChannel .class ) ; } org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; if ( org.w3c.dom.Element != null && org.w3c.dom.Element != null ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; return null ; } if ( org.w3c.dom.Element != null ) { if ( boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } return org.springframework.integration.config.xml.BeanDefinitionBuilder ; } if ( org.w3c.dom.Element == null ) { org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( boolean ? FixedSubscriberChannel .class : DirectChannel .class ) ; } else { if ( boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + STRING , org.w3c.dom.Element ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ExecutorChannel .class ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } else { org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( DirectChannel .class ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) && StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } else { if ( STRING . boolean ( java.lang.String ) ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( null ) ; } } IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; } return org.springframework.integration.config.xml.BeanDefinitionBuilder ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; return true ; } return false ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; return true ; } return false ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String , boolean boolean ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( MessageGroupQueue .class ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( new TypedStringValue ( java.lang.String ) . getValue ( ) + STRING + java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , boolean ) ; boolean ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; return true ; } return false ; }  <METHOD_END>
