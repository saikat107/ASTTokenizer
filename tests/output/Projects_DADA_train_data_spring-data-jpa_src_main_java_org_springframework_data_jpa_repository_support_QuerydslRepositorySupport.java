<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; this . org.springframework.data.jpa.repository.support.PathBuilder<?> = new PathBuilderFactory ( ) . create ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ PersistenceContext public void void ( EntityManager org.springframework.data.jpa.repository.support.EntityManager ) { Assert . notNull ( org.springframework.data.jpa.repository.support.EntityManager , STRING ) ; this . org.springframework.data.jpa.repository.support.Querydsl = new Querydsl ( org.springframework.data.jpa.repository.support.EntityManager , org.springframework.data.jpa.repository.support.PathBuilder<> ) ; this . org.springframework.data.jpa.repository.support.EntityManager = org.springframework.data.jpa.repository.support.EntityManager ; }  <METHOD_END>
<METHOD_START> @ javax.annotation.PostConstruct public void void ( ) { Assert . notNull ( org.springframework.data.jpa.repository.support.EntityManager , STRING ) ; Assert . notNull ( org.springframework.data.jpa.repository.support.Querydsl , STRING ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.jpa.repository.support.EntityManager org.springframework.data.jpa.repository.support.EntityManager ( ) { return org.springframework.data.jpa.repository.support.EntityManager ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.jpa.repository.support.JPQLQuery<java.lang.Object> < java.lang.Object > org.springframework.data.jpa.repository.support.JPQLQuery<java.lang.Object> ( org.springframework.data.jpa.repository.support.EntityPath<?> < ? > ... org.springframework.data.jpa.repository.support.EntityPath<?>[] ) { return org.springframework.data.jpa.repository.support.Querydsl . createQuery ( org.springframework.data.jpa.repository.support.EntityPath<?>[] ) ; }  <METHOD_END>
<METHOD_START> protected < T > org.springframework.data.jpa.repository.support.JPQLQuery<T> < T > org.springframework.data.jpa.repository.support.JPQLQuery<T> ( EntityPath < T > org.springframework.data.jpa.repository.support.EntityPath<T> ) { return org.springframework.data.jpa.repository.support.Querydsl . createQuery ( org.springframework.data.jpa.repository.support.EntityPath<T> ) . select ( org.springframework.data.jpa.repository.support.EntityPath<T> ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.jpa.repository.support.DeleteClause<org.springframework.data.jpa.repository.support.JPADeleteClause> < JPADeleteClause > org.springframework.data.jpa.repository.support.DeleteClause<org.springframework.data.jpa.repository.support.JPADeleteClause> ( EntityPath < ? > org.springframework.data.jpa.repository.support.EntityPath<?> ) { return new JPADeleteClause ( org.springframework.data.jpa.repository.support.EntityManager , org.springframework.data.jpa.repository.support.EntityPath<> ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.jpa.repository.support.UpdateClause<org.springframework.data.jpa.repository.support.JPAUpdateClause> < JPAUpdateClause > org.springframework.data.jpa.repository.support.UpdateClause<org.springframework.data.jpa.repository.support.JPAUpdateClause> ( EntityPath < ? > org.springframework.data.jpa.repository.support.EntityPath<?> ) { return new JPAUpdateClause ( org.springframework.data.jpa.repository.support.EntityManager , org.springframework.data.jpa.repository.support.EntityPath<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected < T > org.springframework.data.jpa.repository.support.PathBuilder<T> < T > org.springframework.data.jpa.repository.support.PathBuilder<T> ( ) { return ( PathBuilder < T > ) org.springframework.data.jpa.repository.support.PathBuilder<> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.jpa.repository.support.Querydsl org.springframework.data.jpa.repository.support.Querydsl ( ) { return this . org.springframework.data.jpa.repository.support.Querydsl ; }  <METHOD_END>
