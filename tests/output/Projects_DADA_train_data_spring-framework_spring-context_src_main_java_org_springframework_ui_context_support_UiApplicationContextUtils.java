<METHOD_START> public static org.springframework.ui.context.support.ThemeSource org.springframework.ui.context.support.ThemeSource ( ApplicationContext org.springframework.ui.context.support.ApplicationContext ) { if ( org.springframework.ui.context.support.ApplicationContext . containsLocalBean ( java.lang.String ) ) { ThemeSource org.springframework.ui.context.support.ThemeSource = org.springframework.ui.context.support.ApplicationContext . getBean ( java.lang.String , ThemeSource .class ) ; if ( org.springframework.ui.context.support.ApplicationContext . getParent ( ) instanceof ThemeSource && org.springframework.ui.context.support.ThemeSource instanceof HierarchicalThemeSource ) { HierarchicalThemeSource org.springframework.ui.context.support.HierarchicalThemeSource = ( HierarchicalThemeSource ) org.springframework.ui.context.support.ThemeSource ; if ( org.springframework.ui.context.support.HierarchicalThemeSource . getParentThemeSource ( ) == null ) { org.springframework.ui.context.support.HierarchicalThemeSource . setParentThemeSource ( ( ThemeSource ) org.springframework.ui.context.support.ApplicationContext . getParent ( ) ) ; } } if ( org.springframework.ui.context.support.Log . isDebugEnabled ( ) ) { org.springframework.ui.context.support.Log . debug ( STRING + org.springframework.ui.context.support.ThemeSource + STRING ) ; } return org.springframework.ui.context.support.ThemeSource ; } else { HierarchicalThemeSource org.springframework.ui.context.support.HierarchicalThemeSource = null ; if ( org.springframework.ui.context.support.ApplicationContext . getParent ( ) instanceof ThemeSource ) { org.springframework.ui.context.support.HierarchicalThemeSource = new DelegatingThemeSource ( ) ; org.springframework.ui.context.support.HierarchicalThemeSource . setParentThemeSource ( ( ThemeSource ) org.springframework.ui.context.support.ApplicationContext . getParent ( ) ) ; } else { org.springframework.ui.context.support.HierarchicalThemeSource = new ResourceBundleThemeSource ( ) ; } if ( org.springframework.ui.context.support.Log . isDebugEnabled ( ) ) { org.springframework.ui.context.support.Log . debug ( STRING + java.lang.String + STRING + org.springframework.ui.context.support.HierarchicalThemeSource + STRING ) ; } return org.springframework.ui.context.support.HierarchicalThemeSource ; } }  <METHOD_END>
