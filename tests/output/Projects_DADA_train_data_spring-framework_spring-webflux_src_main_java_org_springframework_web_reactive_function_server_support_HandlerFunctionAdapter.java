<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return java.lang.Object instanceof HandlerFunction ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.reactive.function.server.support.Mono<org.springframework.web.reactive.function.server.support.HandlerResult> < HandlerResult > org.springframework.web.reactive.function.server.support.Mono<org.springframework.web.reactive.function.server.support.HandlerResult> ( ServerWebExchange org.springframework.web.reactive.function.server.support.ServerWebExchange , java.lang.Object java.lang.Object ) { HandlerFunction < ? > org.springframework.web.reactive.function.server.support.HandlerFunction<?> = ( HandlerFunction < ? > ) java.lang.Object ; ServerRequest org.springframework.web.reactive.function.server.support.ServerRequest = org.springframework.web.reactive.function.server.support.ServerWebExchange .< ServerRequest > getAttribute ( RouterFunctions . REQUEST_ATTRIBUTE ) . orElseThrow ( ( ) new IllegalStateException ( STRING ) ) ; return org.springframework.web.reactive.function.server.support.HandlerFunction<> . handle ( org.springframework.web.reactive.function.server.support.ServerRequest ) . map ( response -> new HandlerResult ( handlerFunction , response , HANDLER_FUNCTION_RETURN_TYPE ) ) ; }  <METHOD_END>
