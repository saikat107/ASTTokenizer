<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( org.w3c.dom.Element org.w3c.dom.Element ) { return AuditingHandler .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionBuilder org.springframework.data.auditing.config.BeanDefinitionBuilder ) { org.springframework.data.auditing.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.auditing.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.data.auditing.config.BeanDefinition ( java.lang.String ) ) ; } ParsingUtils . setPropertyValue ( org.springframework.data.auditing.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; ParsingUtils . setPropertyReference ( org.springframework.data.auditing.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; ParsingUtils . setPropertyValue ( org.springframework.data.auditing.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element , AbstractBeanDefinition org.springframework.data.auditing.config.AbstractBeanDefinition , ParserContext org.springframework.data.auditing.config.ParserContext ) { this . java.lang.String = super. resolveId ( org.w3c.dom.Element , org.springframework.data.auditing.config.AbstractBeanDefinition , org.springframework.data.auditing.config.ParserContext ) ; return java.lang.String ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.auditing.config.BeanDefinition org.springframework.data.auditing.config.BeanDefinition ( java.lang.String java.lang.String ) { BeanDefinitionBuilder org.springframework.data.auditing.config.BeanDefinitionBuilder = rootBeanDefinition ( LazyInitTargetSource .class ) ; org.springframework.data.auditing.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; BeanDefinitionBuilder org.springframework.data.auditing.config.BeanDefinitionBuilder = rootBeanDefinition ( ProxyFactoryBean .class ) ; org.springframework.data.auditing.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.data.auditing.config.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; return org.springframework.data.auditing.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
