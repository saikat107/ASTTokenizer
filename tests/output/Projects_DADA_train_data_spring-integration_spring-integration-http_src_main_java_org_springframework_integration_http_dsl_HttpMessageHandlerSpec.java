<METHOD_START> void ( java.net.URI java.net.URI , RestTemplate org.springframework.integration.http.dsl.RestTemplate ) { this( new ValueExpression <> ( java.net.URI ) , org.springframework.integration.http.dsl.RestTemplate ); }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , RestTemplate org.springframework.integration.http.dsl.RestTemplate ) { this( new LiteralExpression ( java.lang.String ) , org.springframework.integration.http.dsl.RestTemplate ); }  <METHOD_END>
<METHOD_START> void ( Expression org.springframework.integration.http.dsl.Expression , RestTemplate org.springframework.integration.http.dsl.RestTemplate ) { super( new HttpRequestExecutingMessageHandler ( org.springframework.integration.http.dsl.Expression , org.springframework.integration.http.dsl.RestTemplate ) ); this . org.springframework.integration.http.dsl.RestTemplate = org.springframework.integration.http.dsl.RestTemplate ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.HttpMessageHandlerSpec org.springframework.integration.http.dsl.HttpMessageHandlerSpec ( ClientHttpRequestFactory org.springframework.integration.http.dsl.ClientHttpRequestFactory ) { Assert . isNull ( this . org.springframework.integration.http.dsl.RestTemplate , STRING + this . org.springframework.integration.http.dsl.RestTemplate ) ; this . target . setRequestFactory ( org.springframework.integration.http.dsl.ClientHttpRequestFactory ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.HttpMessageHandlerSpec org.springframework.integration.http.dsl.HttpMessageHandlerSpec ( ResponseErrorHandler org.springframework.integration.http.dsl.ResponseErrorHandler ) { Assert . isTrue ( this . boolean ( ) , STRING ) ; this . target . setErrorHandler ( org.springframework.integration.http.dsl.ResponseErrorHandler ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.http.dsl.HttpMessageHandlerSpec org.springframework.integration.http.dsl.HttpMessageHandlerSpec ( org.springframework.integration.http.dsl.HttpMessageConverter<?> < ? > ... org.springframework.integration.http.dsl.HttpMessageConverter<?>[] ) { Assert . isTrue ( ! boolean ( ) , STRING ) ; this . target . setMessageConverters ( java.util.Arrays . java.util.List ( org.springframework.integration.http.dsl.HttpMessageConverter<?>[] ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return this . org.springframework.integration.http.dsl.RestTemplate != null ; }  <METHOD_END>
