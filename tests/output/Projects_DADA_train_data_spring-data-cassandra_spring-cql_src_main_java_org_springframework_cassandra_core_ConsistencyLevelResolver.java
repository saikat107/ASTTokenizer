<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public static com . com.datastax . com.datastax . com.datastax . com.datastax.driver.core.ConsistencyLevel com.datastax.driver.core.ConsistencyLevel ( ConsistencyLevel org.springframework.cassandra.core.ConsistencyLevel ) { Assert . notNull ( org.springframework.cassandra.core.ConsistencyLevel , STRING ) ; switch ( org.springframework.cassandra.core.ConsistencyLevel ) { case ONE : return com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . ONE ; case LOCAL_ONE : return com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . LOCAL_ONE ; case ALL : return com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . ALL ; case ANY : return com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . ANY ; case EACH_QUORUM : case EACH_QUOROM : return com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . EACH_QUORUM ; case LOCAL_QUORUM : case LOCAL_QUOROM : return com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . LOCAL_QUORUM ; case QUORUM : case QUOROM : return com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . QUORUM ; case THREE : return com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . THREE ; case TWO : return com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . TWO ; case SERIAL : return com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . SERIAL ; case LOCAL_SERIAL : return com . com.datastax . com.datastax . com.datastax . ConsistencyLevel . LOCAL_SERIAL ; default: throw new java.lang.IllegalArgumentException ( java.lang.String . java.lang.String ( STRING , org.springframework.cassandra.core.ConsistencyLevel ) ) ; } }  <METHOD_END>
