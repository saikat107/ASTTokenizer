<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) { return HttpHeaders .class . boolean ( org.springframework.web.servlet.mvc.method.annotation.MethodParameter . getParameterType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public void void ( java.lang.Object java.lang.Object , MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , ModelAndViewContainer org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer , NativeWebRequest org.springframework.web.servlet.mvc.method.annotation.NativeWebRequest ) throws java.lang.Exception { org.springframework.web.servlet.mvc.method.annotation.ModelAndViewContainer . setRequestHandled ( true ) ; Assert . isInstanceOf ( HttpHeaders .class , java.lang.Object , STRING ) ; HttpHeaders org.springframework.web.servlet.mvc.method.annotation.HttpHeaders = ( HttpHeaders ) java.lang.Object ; if ( ! org.springframework.web.servlet.mvc.method.annotation.HttpHeaders . isEmpty ( ) ) { HttpServletResponse org.springframework.web.servlet.mvc.method.annotation.HttpServletResponse = org.springframework.web.servlet.mvc.method.annotation.NativeWebRequest . getNativeResponse ( HttpServletResponse .class ) ; ServletServerHttpResponse org.springframework.web.servlet.mvc.method.annotation.ServletServerHttpResponse = new ServletServerHttpResponse ( org.springframework.web.servlet.mvc.method.annotation.HttpServletResponse ) ; org.springframework.web.servlet.mvc.method.annotation.ServletServerHttpResponse . getHeaders ( ) . putAll ( org.springframework.web.servlet.mvc.method.annotation.HttpHeaders ) ; org.springframework.web.servlet.mvc.method.annotation.ServletServerHttpResponse . getBody ( ) ; } }  <METHOD_END>
