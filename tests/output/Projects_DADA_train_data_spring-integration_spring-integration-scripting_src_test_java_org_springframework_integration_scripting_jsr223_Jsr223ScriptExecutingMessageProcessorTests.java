<METHOD_START> @ Before public void void ( ) { org.springframework.integration.scripting.jsr223.ScriptExecutor = ScriptExecutorFactory . getScriptExecutor ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; ScriptSource org.springframework.integration.scripting.jsr223.ScriptSource = new ResourceScriptSource ( new ClassPathResource ( STRING ) ) ; ScriptExecutingMessageProcessor org.springframework.integration.scripting.jsr223.ScriptExecutingMessageProcessor = new ScriptExecutingMessageProcessor ( org.springframework.integration.scripting.jsr223.ScriptSource , org.springframework.integration.scripting.jsr223.ScriptExecutor , java.util.Map<java.lang.String,java.lang.Object> ) ; org.springframework.integration.scripting.jsr223.ScriptExecutingMessageProcessor . setBeanFactory ( Mockito . mock ( BeanFactory .class ) ) ; Message < ? > org.springframework.integration.scripting.jsr223.Message<?> = new GenericMessage < java.lang.String > ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.integration.scripting.jsr223.ScriptExecutingMessageProcessor . processMessage ( org.springframework.integration.scripting.jsr223.Message<> ) ; assertEquals ( STRING , java.lang.Object . java.lang.String ( ) . java.lang.String ( NUMBER , STRING . int ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ScriptSource org.springframework.integration.scripting.jsr223.ScriptSource = new ResourceScriptSource ( new ClassPathResource ( STRING ) ) ; ScriptExecutingMessageProcessor org.springframework.integration.scripting.jsr223.ScriptExecutingMessageProcessor = new ScriptExecutingMessageProcessor ( org.springframework.integration.scripting.jsr223.ScriptSource , org.springframework.integration.scripting.jsr223.ScriptExecutor ) ; org.springframework.integration.scripting.jsr223.ScriptExecutingMessageProcessor . setBeanFactory ( Mockito . mock ( BeanFactory .class ) ) ; Message < ? > org.springframework.integration.scripting.jsr223.Message<?> = new GenericMessage < java.lang.String > ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.integration.scripting.jsr223.ScriptExecutingMessageProcessor . processMessage ( org.springframework.integration.scripting.jsr223.Message<> ) ; assertEquals ( STRING , java.lang.Object . java.lang.String ( ) . java.lang.String ( NUMBER , STRING . int ( ) ) ) ; }  <METHOD_END>
