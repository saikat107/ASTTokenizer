<METHOD_START> public void ( MultiMetricRepository org.springframework.boot.actuate.metrics.rich.MultiMetricRepository ) { this . org.springframework.boot.actuate.metrics.rich.MultiMetricRepository = org.springframework.boot.actuate.metrics.rich.MultiMetricRepository ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.actuate.metrics.rich.RichGauge org.springframework.boot.actuate.metrics.rich.RichGauge ( java.lang.String java.lang.String ) { java.lang.Iterable<org.springframework.boot.actuate.metrics.rich.Metric<?>> < Metric < ? > > java.lang.Iterable<org.springframework.boot.actuate.metrics.rich.Metric<?>> = this . org.springframework.boot.actuate.metrics.rich.MultiMetricRepository . findAll ( java.lang.String ) ; double double = NUMBER ; double double = NUMBER ; double double = - NUMBER ; double double = NUMBER ; double double = NUMBER ; long long = NUMBER ; for ( Metric < ? > org.springframework.boot.actuate.metrics.rich.Metric<?> : java.lang.Iterable<org.springframework.boot.actuate.metrics.rich.Metric<?>> ) { if ( org.springframework.boot.actuate.metrics.rich.Metric<> . getName ( ) . endsWith ( RichGauge . VAL ) ) { double = org.springframework.boot.actuate.metrics.rich.Metric<> . getValue ( ) . doubleValue ( ) ; } else if ( org.springframework.boot.actuate.metrics.rich.Metric<> . getName ( ) . endsWith ( RichGauge . ALPHA ) ) { double = org.springframework.boot.actuate.metrics.rich.Metric<> . getValue ( ) . doubleValue ( ) ; } else if ( org.springframework.boot.actuate.metrics.rich.Metric<> . getName ( ) . endsWith ( RichGauge . AVG ) ) { double = org.springframework.boot.actuate.metrics.rich.Metric<> . getValue ( ) . doubleValue ( ) ; } else if ( org.springframework.boot.actuate.metrics.rich.Metric<> . getName ( ) . endsWith ( RichGauge . MIN ) ) { double = org.springframework.boot.actuate.metrics.rich.Metric<> . getValue ( ) . doubleValue ( ) ; } else if ( org.springframework.boot.actuate.metrics.rich.Metric<> . getName ( ) . endsWith ( RichGauge . MAX ) ) { double = org.springframework.boot.actuate.metrics.rich.Metric<> . getValue ( ) . doubleValue ( ) ; } else if ( org.springframework.boot.actuate.metrics.rich.Metric<> . getName ( ) . endsWith ( RichGauge . COUNT ) ) { long = org.springframework.boot.actuate.metrics.rich.Metric<> . getValue ( ) . longValue ( ) ; } } return new RichGauge ( java.lang.String , double , double , double , double , double , long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Iterable<org.springframework.boot.actuate.metrics.rich.RichGauge> < RichGauge > java.lang.Iterable<org.springframework.boot.actuate.metrics.rich.RichGauge> ( ) { java.util.List<org.springframework.boot.actuate.metrics.rich.RichGauge> < RichGauge > java.util.List<org.springframework.boot.actuate.metrics.rich.RichGauge> = new java.util.ArrayList<org.springframework.boot.actuate.metrics.rich.RichGauge> <> ( ) ; for ( java.lang.String java.lang.String : this . org.springframework.boot.actuate.metrics.rich.MultiMetricRepository . groups ( ) ) { java.util.List<org.springframework.boot.actuate.metrics.rich.RichGauge> . add ( org.springframework.boot.actuate.metrics.rich.RichGauge ( java.lang.String ) ) ; } return java.util.List<org.springframework.boot.actuate.metrics.rich.RichGauge> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . org.springframework.boot.actuate.metrics.rich.MultiMetricRepository . countGroups ( ) ; }  <METHOD_END>
