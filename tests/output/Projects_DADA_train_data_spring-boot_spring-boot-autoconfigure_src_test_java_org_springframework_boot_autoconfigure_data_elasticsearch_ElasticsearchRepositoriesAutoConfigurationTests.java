<METHOD_START> @ After public void void ( ) { this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; void ( this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext ) ; this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext . register ( org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfigurationTests.TestConfiguration .class , ElasticsearchAutoConfiguration .class , ElasticsearchRepositoriesAutoConfiguration .class , ElasticsearchDataAutoConfiguration .class , PropertyPlaceholderAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext . refresh ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext . getBean ( CityRepository .class ) ) . isNotNull ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext . getBean ( Client .class ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; void ( this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext ) ; this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext . register ( org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfigurationTests.EmptyConfiguration .class , ElasticsearchAutoConfiguration .class , ElasticsearchRepositoriesAutoConfiguration .class , ElasticsearchDataAutoConfiguration .class , PropertyPlaceholderAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext . refresh ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext . getBean ( Client .class ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; void ( this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext ) ; this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext . register ( org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfigurationTests.CustomizedConfiguration .class , ElasticsearchAutoConfiguration .class , ElasticsearchRepositoriesAutoConfiguration .class , ElasticsearchDataAutoConfiguration .class , PropertyPlaceholderAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext . refresh ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext . getBean ( CityElasticsearchDbRepository .class ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext ) { EnvironmentTestUtils . addEnvironment ( org.springframework.boot.autoconfigure.data.elasticsearch.AnnotationConfigApplicationContext , STRING ) ; }  <METHOD_END>
