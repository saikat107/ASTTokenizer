<METHOD_START> @ AfterClass public static void void ( ) { for ( java.lang.String java.lang.String : new java.io.File ( STRING ) . java.lang.String[] ( ( java.io.File , java.lang.String ) -> java.lang.String . boolean ( STRING ) ) ) { new java.io.File ( java.lang.String ) . boolean ( ) ; } }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { org.springframework.data.gemfire.test.support.GemFireCache = new StubCache ( ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { org.springframework.data.gemfire.test.support.GemFireCache . close ( ) ; org.springframework.data.gemfire.test.support.GemFireCache = null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( ) ; for ( org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig : java.util.Map<java.lang.String,org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig> . java.util.Collection<org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig> ( ) ) { org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig . void ( ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig ) { if ( java.util.Map<java.lang.String,org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig> . boolean ( org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig . java.lang.String ) ) { throw new java.lang.RuntimeException ( STRING + org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig . java.lang.String ) ; } java.util.Map<java.lang.String,org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig> . org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig ( org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig . java.lang.String , org.springframework.data.gemfire.test.support.AbstractRegionFactoryBeanTests.RegionFactoryBeanConfig ) ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( )  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( RegionFactoryBean org.springframework.data.gemfire.test.support.RegionFactoryBean , java.lang.String java.lang.String ) { this . org.springframework.data.gemfire.test.support.RegionFactoryBean = org.springframework.data.gemfire.test.support.RegionFactoryBean ; this . java.lang.String = java.lang.String ; org.springframework.data.gemfire.test.support.RegionFactoryBean . setBeanName ( java.lang.String ) ; org.springframework.data.gemfire.test.support.RegionFactoryBean . setCache ( org.springframework.data.gemfire.test.support.GemFireCache ) ; }  <METHOD_END>
<METHOD_START> public abstract void void ( )  <METHOD_END>
<METHOD_START> public void void ( ) { void ( ) ; try { org.springframework.data.gemfire.test.support.RegionFactoryBean . afterPropertiesSet ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { this . java.lang.Exception = java.lang.Exception ; } void ( ) ; }  <METHOD_END>
<METHOD_START> public abstract void void ( )  <METHOD_END>
