<METHOD_START> protected void ( UriTemplateHandler org.springframework.boot.web.client.UriTemplateHandler ) { this . java.lang.String = null ; this . org.springframework.boot.web.client.UriTemplateHandler = org.springframework.boot.web.client.UriTemplateHandler ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this( java.lang.String , new DefaultUriBuilderFactory ( ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , UriTemplateHandler org.springframework.boot.web.client.UriTemplateHandler ) { Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( org.springframework.boot.web.client.UriTemplateHandler , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.boot.web.client.UriTemplateHandler = org.springframework.boot.web.client.UriTemplateHandler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URI java.net.URI ( java.lang.String java.lang.String , java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { return this . org.springframework.boot.web.client.UriTemplateHandler . expand ( java.lang.String ( java.lang.String ) , java.util.Map<java.lang.String,> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URI java.net.URI ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return this . org.springframework.boot.web.client.UriTemplateHandler . expand ( java.lang.String ( java.lang.String ) , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( StringUtils . startsWithIgnoreCase ( java.lang.String , STRING ) ) { return java.lang.String ( ) + java.lang.String ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.web.client.RootUriTemplateHandler org.springframework.boot.web.client.RootUriTemplateHandler ( RestTemplate org.springframework.boot.web.client.RestTemplate , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.boot.web.client.RestTemplate , STRING ) ; org.springframework.boot.web.client.RootUriTemplateHandler org.springframework.boot.web.client.RootUriTemplateHandler = new org.springframework.boot.web.client.RootUriTemplateHandler ( java.lang.String , org.springframework.boot.web.client.RestTemplate . getUriTemplateHandler ( ) ) ; org.springframework.boot.web.client.RestTemplate . setUriTemplateHandler ( org.springframework.boot.web.client.RootUriTemplateHandler ) ; return org.springframework.boot.web.client.RootUriTemplateHandler ; }  <METHOD_END>
