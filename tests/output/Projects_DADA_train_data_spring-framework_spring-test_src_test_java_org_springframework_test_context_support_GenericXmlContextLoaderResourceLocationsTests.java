<METHOD_START> @ Parameters ( name = STRING ) public static java.util.Collection<java.lang.Object[]> < java.lang.Object [] > java.util.Collection<java.lang.Object[]> ( ) { @ ContextConfiguration class ClasspathNonExistentDefaultLocationsTestCase {		} @ ContextConfiguration class ClasspathExistentDefaultLocationsTestCase {		} @ ContextConfiguration ( { STRING , STRING } ) class ImplicitClasspathLocationsTestCase {		} @ ContextConfiguration ( STRING ) class ExplicitClasspathLocationsTestCase {		} @ ContextConfiguration ( STRING ) class ExplicitFileLocationsTestCase {		} @ ContextConfiguration ( STRING ) class ExplicitUrlLocationsTestCase {		} @ ContextConfiguration ( { STRING , STRING , STRING , STRING , STRING } ) class ExplicitMixedPathTypesLocationsTestCase {		} return java.util.Arrays . java.util.List<java.lang.Object[]> ( new java.lang.Object [] [] { { ClasspathNonExistentDefaultLocationsTestCase .class . java.lang.String ( ) , new java.lang.String [] {} } , { ClasspathExistentDefaultLocationsTestCase .class . java.lang.String ( ) , new java.lang.String [] { STRING } } , { ImplicitClasspathLocationsTestCase .class . java.lang.String ( ) , new java.lang.String [] { STRING , STRING } } , { ExplicitClasspathLocationsTestCase .class . java.lang.String ( ) , new java.lang.String [] { STRING } } , { ExplicitFileLocationsTestCase .class . java.lang.String ( ) , new java.lang.String [] { STRING } } , { ExplicitUrlLocationsTestCase .class . java.lang.String ( ) , new java.lang.String [] { STRING } } , { ExplicitMixedPathTypesLocationsTestCase .class . java.lang.String ( ) , new java.lang.String [] { STRING , STRING , STRING , STRING , STRING } } } ) ; }  <METHOD_END>
<METHOD_START> public void ( final java.lang.String java.lang.String , final java.lang.String [] java.lang.String[] ) throws java.lang.Exception { this . java.lang.Class<?> = ClassUtils . forName ( java.lang.Class<? extends org.springframework.test.context.support.GenericXmlContextLoaderResourceLocationsTests> ( ) . java.lang.String ( ) + STRING + java.lang.String , java.lang.Class<? extends org.springframework.test.context.support.GenericXmlContextLoaderResourceLocationsTests> ( ) . java.lang.ClassLoader ( ) ) ; this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final ContextConfiguration org.springframework.test.context.support.ContextConfiguration = this . java.lang.Class<> . A ( ContextConfiguration .class ) ; final ContextLoader org.springframework.test.context.support.ContextLoader = new GenericXmlContextLoader ( ) ; final java.lang.String [] java.lang.String[] = ( java.lang.String [] ) AnnotationUtils . getValue ( org.springframework.test.context.support.ContextConfiguration ) ; final java.lang.String [] java.lang.String[] = org.springframework.test.context.support.ContextLoader . processLocations ( this . java.lang.Class<> , java.lang.String[] ) ; if ( org.springframework.test.context.support.Log . isDebugEnabled ( ) ) { org.springframework.test.context.support.Log . debug ( STRING ) ; org.springframework.test.context.support.Log . debug ( STRING + ObjectUtils . nullSafeToString ( java.lang.String[] ) ) ; org.springframework.test.context.support.Log . debug ( STRING + ObjectUtils . nullSafeToString ( this . java.lang.String[] ) ) ; org.springframework.test.context.support.Log . debug ( STRING + ObjectUtils . nullSafeToString ( java.lang.String[] ) ) ; } assertArrayEquals ( STRING + this . java.lang.Class<> + STRING , this . java.lang.String[] , java.lang.String[] ) ; }  <METHOD_END>
