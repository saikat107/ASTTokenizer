<METHOD_START> @ Test public void void ( ) { Cluster org.springframework.data.cassandra.config.xml.Cluster = org.springframework.data.cassandra.config.xml.ApplicationContext . getBean ( Cluster .class ) ; Configuration org.springframework.data.cassandra.config.xml.Configuration = org.springframework.data.cassandra.config.xml.Cluster . getConfiguration ( ) ; assertThat ( org.springframework.data.cassandra.config.xml.Configuration . getProtocolOptions ( ) . getCompression ( ) ) . isEqualTo ( Compression . SNAPPY ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Cluster org.springframework.data.cassandra.config.xml.Cluster = org.springframework.data.cassandra.config.xml.ApplicationContext . getBean ( Cluster .class ) ; PoolingOptions org.springframework.data.cassandra.config.xml.PoolingOptions = org.springframework.data.cassandra.config.xml.Cluster . getConfiguration ( ) . getPoolingOptions ( ) ; assertThat ( org.springframework.data.cassandra.config.xml.PoolingOptions . getMaxRequestsPerConnection ( HostDistance . LOCAL ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.data.cassandra.config.xml.PoolingOptions . getMaxRequestsPerConnection ( HostDistance . REMOTE ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.data.cassandra.config.xml.PoolingOptions . getCoreConnectionsPerHost ( HostDistance . LOCAL ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.data.cassandra.config.xml.PoolingOptions . getCoreConnectionsPerHost ( HostDistance . REMOTE ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.data.cassandra.config.xml.PoolingOptions . getMaxConnectionsPerHost ( HostDistance . LOCAL ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.data.cassandra.config.xml.PoolingOptions . getMaxConnectionsPerHost ( HostDistance . REMOTE ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Cluster org.springframework.data.cassandra.config.xml.Cluster = org.springframework.data.cassandra.config.xml.ApplicationContext . getBean ( Cluster .class ) ; SocketOptions org.springframework.data.cassandra.config.xml.SocketOptions = org.springframework.data.cassandra.config.xml.Cluster . getConfiguration ( ) . getSocketOptions ( ) ; assertThat ( org.springframework.data.cassandra.config.xml.SocketOptions . getConnectTimeoutMillis ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.data.cassandra.config.xml.SocketOptions . getKeepAlive ( ) ) . isTrue ( ) ; assertThat ( org.springframework.data.cassandra.config.xml.SocketOptions . getReuseAddress ( ) ) . isTrue ( ) ; assertThat ( org.springframework.data.cassandra.config.xml.SocketOptions . getTcpNoDelay ( ) ) . isTrue ( ) ; assertThat ( org.springframework.data.cassandra.config.xml.SocketOptions . getSoLinger ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.data.cassandra.config.xml.SocketOptions . getReceiveBufferSize ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( org.springframework.data.cassandra.config.xml.SocketOptions . getSendBufferSize ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { BasicCassandraMappingContext org.springframework.data.cassandra.config.xml.BasicCassandraMappingContext = org.springframework.data.cassandra.config.xml.ApplicationContext . getBean ( BasicCassandraMappingContext .class ) ; SimpleUserTypeResolver org.springframework.data.cassandra.config.xml.SimpleUserTypeResolver = ( SimpleUserTypeResolver ) ReflectionTestUtils . getField ( org.springframework.data.cassandra.config.xml.BasicCassandraMappingContext , STRING ) ; assertThat ( org.springframework.data.cassandra.config.xml.SimpleUserTypeResolver ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CassandraTemplate org.springframework.data.cassandra.config.xml.CassandraTemplate = org.springframework.data.cassandra.config.xml.ApplicationContext . getBean ( CassandraTemplate .class ) ; CqlTemplate org.springframework.data.cassandra.config.xml.CqlTemplate = org.springframework.data.cassandra.config.xml.ApplicationContext . getBean ( CqlTemplate .class ) ; assertThat ( org.springframework.data.cassandra.config.xml.CassandraTemplate . getCqlOperations ( ) ) . isSameAs ( org.springframework.data.cassandra.config.xml.CqlTemplate ) ; }  <METHOD_END>
