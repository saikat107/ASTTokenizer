<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContext org.springframework.web.servlet.resource.ServletContext ) { this . org.springframework.web.servlet.resource.ServletContext = org.springframework.web.servlet.resource.ServletContext ; if ( ! StringUtils . hasText ( this . java.lang.String ) ) { if ( this . org.springframework.web.servlet.resource.ServletContext . getNamedDispatcher ( java.lang.String ) != null ) { this . java.lang.String = java.lang.String ; } else if ( this . org.springframework.web.servlet.resource.ServletContext . getNamedDispatcher ( java.lang.String ) != null ) { this . java.lang.String = java.lang.String ; } else if ( this . org.springframework.web.servlet.resource.ServletContext . getNamedDispatcher ( java.lang.String ) != null ) { this . java.lang.String = java.lang.String ; } else if ( this . org.springframework.web.servlet.resource.ServletContext . getNamedDispatcher ( java.lang.String ) != null ) { this . java.lang.String = java.lang.String ; } else if ( this . org.springframework.web.servlet.resource.ServletContext . getNamedDispatcher ( java.lang.String ) != null ) { this . java.lang.String = java.lang.String ; } else { throw new java.lang.IllegalStateException ( STRING + STRING ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( HttpServletRequest org.springframework.web.servlet.resource.HttpServletRequest , HttpServletResponse org.springframework.web.servlet.resource.HttpServletResponse )			throws org.springframework.web.servlet.resource.ServletException , java.io.IOException { RequestDispatcher org.springframework.web.servlet.resource.RequestDispatcher = this . org.springframework.web.servlet.resource.ServletContext . getNamedDispatcher ( this . java.lang.String ) ; if ( org.springframework.web.servlet.resource.RequestDispatcher == null ) { throw new java.lang.IllegalStateException ( STRING + this . java.lang.String + STRING ) ; } org.springframework.web.servlet.resource.RequestDispatcher . forward ( org.springframework.web.servlet.resource.HttpServletRequest , org.springframework.web.servlet.resource.HttpServletResponse ) ; }  <METHOD_END>
