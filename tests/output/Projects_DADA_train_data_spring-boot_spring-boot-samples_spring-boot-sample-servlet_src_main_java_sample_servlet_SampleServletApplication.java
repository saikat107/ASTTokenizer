<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Bean public sample.servlet.Servlet sample.servlet.Servlet ( ) { return new GenericServlet ( ) { @ java.lang.Override public void void ( ServletRequest sample.servlet.ServletRequest , ServletResponse sample.servlet.ServletResponse )					throws sample.servlet.ServletException , java.io.IOException { sample.servlet.ServletResponse . setContentType ( STRING ) ; sample.servlet.ServletResponse . getWriter ( ) . append ( STRING ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletRequest sample.servlet.ServletRequest , ServletResponse sample.servlet.ServletResponse )					throws sample.servlet.ServletException , java.io.IOException { sample.servlet.ServletResponse . setContentType ( STRING ) ; sample.servlet.ServletResponse . getWriter ( ) . append ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected sample.servlet.SpringApplicationBuilder sample.servlet.SpringApplicationBuilder ( SpringApplicationBuilder sample.servlet.SpringApplicationBuilder ) { return sample.servlet.SpringApplicationBuilder . sources ( sample.servlet.SampleServletApplication .class ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String [] java.lang.String[] ) throws java.lang.Exception { SpringApplication . run ( sample.servlet.SampleServletApplication .class , java.lang.String[] ) ; }  <METHOD_END>
