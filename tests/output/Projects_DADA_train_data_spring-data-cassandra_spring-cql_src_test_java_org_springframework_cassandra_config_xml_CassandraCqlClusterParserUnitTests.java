<METHOD_START> @ Test public void void ( ) { when ( org.w3c.dom.Element . java.lang.String ( eq ( CassandraCqlClusterParser . ID_ATTRIBUTE ) ) ) . thenReturn ( STRING ) ; assertThat ( org.springframework.cassandra.config.xml.CassandraCqlClusterParser . resolveId ( org.w3c.dom.Element , null , null ) ) . isEqualTo ( STRING ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( CassandraCqlClusterParser . ID_ATTRIBUTE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { when ( org.w3c.dom.Element . java.lang.String ( eq ( CassandraCqlClusterParser . ID_ATTRIBUTE ) ) ) . thenReturn ( STRING ) ; assertThat ( org.springframework.cassandra.config.xml.CassandraCqlClusterParser . resolveId ( org.w3c.dom.Element , null , null ) ) . isEqualTo ( DefaultCqlBeanNames . CLUSTER ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( CassandraCqlClusterParser . ID_ATTRIBUTE ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { BeanDefinition org.springframework.cassandra.config.xml.BeanDefinition = mock ( BeanDefinition .class ) ; when ( org.springframework.cassandra.config.xml.BeanDefinition . getScope ( ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( STRING ) ) . thenReturn ( STRING ) ; CassandraCqlClusterParser org.springframework.cassandra.config.xml.CassandraCqlClusterParser = new CassandraCqlClusterParser ( ) { @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.cassandra.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.cassandra.config.xml.BeanDefinitionBuilder ) {} } ; AbstractBeanDefinition org.springframework.cassandra.config.xml.AbstractBeanDefinition = org.springframework.cassandra.config.xml.CassandraCqlClusterParser . parseInternal ( org.w3c.dom.Element , org.springframework.cassandra.config.xml.ParserContext ( org.springframework.cassandra.config.xml.BeanDefinition ) ) ; assertThat ( org.springframework.cassandra.config.xml.AbstractBeanDefinition ) . isNotNull ( ) ; assertThat ( org.springframework.cassandra.config.xml.AbstractBeanDefinition . getBeanClassName ( ) ) . isEqualTo ( CassandraCqlClusterFactoryBean .class . java.lang.String ( ) ) ; assertThat ( org.springframework.cassandra.config.xml.AbstractBeanDefinition . getDestroyMethodName ( ) ) . isEqualTo ( STRING ) ; assertThat ( ( org.w3c.dom.Element ) org.springframework.cassandra.config.xml.AbstractBeanDefinition . getSource ( ) ) . isEqualTo ( org.w3c.dom.Element ) ; assertThat ( org.springframework.cassandra.config.xml.AbstractBeanDefinition . isLazyInit ( ) ) . isFalse ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.AbstractBeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; verify ( org.springframework.cassandra.config.xml.BeanDefinition ) . getScope ( ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.cassandra.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.cassandra.config.xml.BeanDefinitionBuilder ) {}  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.w3c.dom.Element org.w3c.dom.Element = mock ( org.w3c.dom.Element .class ) ; org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.NodeList ( org.w3c.dom.Element ) ; when ( org.w3c.dom.Element . java.lang.String ( ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ) . thenReturn ( org.w3c.dom.NodeList ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; BeanDefinitionBuilder org.springframework.cassandra.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ) ; org.springframework.cassandra.config.xml.CassandraCqlClusterParser . parseChildElements ( org.w3c.dom.Element , org.springframework.cassandra.config.xml.ParserContext ( null ) , org.springframework.cassandra.config.xml.BeanDefinitionBuilder ) ; BeanDefinition org.springframework.cassandra.config.xml.BeanDefinition = org.springframework.cassandra.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; BeanDefinition org.springframework.cassandra.config.xml.BeanDefinition = getPropertyValue ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ; assertThat ( org.springframework.cassandra.config.xml.BeanDefinition ) . isNotNull ( ) ; assertThat ( org.springframework.cassandra.config.xml.BeanDefinition . getBeanClassName ( ) ) . isEqualTo ( PoolingOptionsFactoryBean .class . java.lang.String ( ) ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; verify ( org.w3c.dom.Element ) . getChildNodes ( ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getLocalName ( ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.w3c.dom.Element org.w3c.dom.Element = mock ( org.w3c.dom.Element .class ) ; org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.NodeList ( org.w3c.dom.Element ) ; when ( org.w3c.dom.Element . java.lang.String ( ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ) . thenReturn ( org.w3c.dom.NodeList ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; BeanDefinitionBuilder org.springframework.cassandra.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ) ; org.springframework.cassandra.config.xml.CassandraCqlClusterParser . parseChildElements ( org.w3c.dom.Element , org.springframework.cassandra.config.xml.ParserContext ( null ) , org.springframework.cassandra.config.xml.BeanDefinitionBuilder ) ; BeanDefinition org.springframework.cassandra.config.xml.BeanDefinition = org.springframework.cassandra.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; BeanDefinition org.springframework.cassandra.config.xml.BeanDefinition = getPropertyValue ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ; assertThat ( org.springframework.cassandra.config.xml.BeanDefinition ) . isNotNull ( ) ; assertThat ( org.springframework.cassandra.config.xml.BeanDefinition . getBeanClassName ( ) ) . isEqualTo ( PoolingOptionsFactoryBean .class . java.lang.String ( ) ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; verify ( org.w3c.dom.Element ) . getChildNodes ( ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getLocalName ( ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.w3c.dom.Element org.w3c.dom.Element = mock ( org.w3c.dom.Element .class , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = mock ( org.w3c.dom.Element .class , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = mock ( org.w3c.dom.Element .class , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = mock ( org.w3c.dom.Element .class , STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( ) ) . thenReturn ( STRING ) ; org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.NodeList ( org.w3c.dom.Element , org.w3c.dom.Element , org.w3c.dom.Element , org.w3c.dom.Element ) ; when ( org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ) . thenReturn ( org.w3c.dom.NodeList ) ; BeanDefinitionBuilder org.springframework.cassandra.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ) ; org.springframework.cassandra.config.xml.CassandraCqlClusterParser . parseChildElements ( org.w3c.dom.Element , org.springframework.cassandra.config.xml.ParserContext ( null ) , org.springframework.cassandra.config.xml.BeanDefinitionBuilder ) ; BeanDefinition org.springframework.cassandra.config.xml.BeanDefinition = org.springframework.cassandra.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = getPropertyValue ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ; assertThat ( java.util.List<java.lang.String> ) . contains ( STRING , STRING ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = getPropertyValue ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ; assertThat ( java.util.List<java.lang.String> ) . contains ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; BeanDefinitionBuilder org.springframework.cassandra.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ) ; org.springframework.cassandra.config.xml.CassandraCqlClusterParser . parseLocalPoolingOptions ( org.w3c.dom.Element , org.springframework.cassandra.config.xml.BeanDefinitionBuilder ) ; BeanDefinition org.springframework.cassandra.config.xml.BeanDefinition = org.springframework.cassandra.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; verify ( org.w3c.dom.Element , never ( ) ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element , never ( ) ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element , never ( ) ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element , never ( ) ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; BeanDefinitionBuilder org.springframework.cassandra.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ) ; org.springframework.cassandra.config.xml.CassandraCqlClusterParser . parseRemotePoolingOptions ( org.w3c.dom.Element , org.springframework.cassandra.config.xml.BeanDefinitionBuilder ) ; BeanDefinition org.springframework.cassandra.config.xml.BeanDefinition = org.springframework.cassandra.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isNull ( ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; verify ( org.w3c.dom.Element , never ( ) ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element , never ( ) ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element , never ( ) ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element , never ( ) ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { when ( org.w3c.dom.Element . java.lang.String ( ) ) . thenReturn ( STRING ) ; assertThat ( org.springframework.cassandra.config.xml.CassandraCqlClusterParser . parseScript ( org.w3c.dom.Element ) ) . isEqualTo ( STRING ) ; verify ( org.w3c.dom.Element ) . getTextContent ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; when ( org.w3c.dom.Element . java.lang.String ( eq ( STRING ) ) ) . thenReturn ( STRING ) ; BeanDefinition org.springframework.cassandra.config.xml.BeanDefinition = org.springframework.cassandra.config.xml.CassandraCqlClusterParser . newSocketOptionsBeanDefinition ( org.w3c.dom.Element , org.springframework.cassandra.config.xml.ParserContext ( null ) ) ; assertThat ( org.springframework.cassandra.config.xml.BeanDefinition ) . isNotNull ( ) ; assertThat ( org.springframework.cassandra.config.xml.BeanDefinition . getBeanClassName ( ) ) . isEqualTo ( SocketOptionsFactoryBean .class . java.lang.String ( ) ) ; assertThat ( ( org.w3c.dom.Element ) org.springframework.cassandra.config.xml.BeanDefinition . getSource ( ) ) . isEqualTo ( org.w3c.dom.Element ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( getPropertyValueAsString ( org.springframework.cassandra.config.xml.BeanDefinition , STRING ) ) . isEqualTo ( STRING ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; verify ( org.w3c.dom.Element ) . getAttribute ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private org.w3c.dom.NodeList org.w3c.dom.NodeList ( org.w3c.dom.Element ... org.w3c.dom.Element[] ) { org.w3c.dom.NodeList org.w3c.dom.NodeList = mock ( org.w3c.dom.NodeList .class ) ; when ( org.w3c.dom.NodeList . int ( ) ) . thenReturn ( org.w3c.dom.Element[] . int ) ; for ( int int = NUMBER ; int < org.w3c.dom.Element[] . int ; int ++ ) { when ( org.w3c.dom.NodeList . org.w3c.dom.Node ( eq ( int ) ) ) . thenReturn ( org.w3c.dom.Element[] [ int ] ) ; } return org.w3c.dom.NodeList ; }  <METHOD_END>
<METHOD_START> private org.springframework.cassandra.config.xml.ParserContext org.springframework.cassandra.config.xml.ParserContext ( BeanDefinition org.springframework.cassandra.config.xml.BeanDefinition ) { XmlReaderContext org.springframework.cassandra.config.xml.XmlReaderContext = new XmlReaderContext ( null , null , null , new PassThroughSourceExtractor ( ) , null , null ) ; return new ParserContext ( org.springframework.cassandra.config.xml.XmlReaderContext , new BeanDefinitionParserDelegate ( org.springframework.cassandra.config.xml.XmlReaderContext ) , org.springframework.cassandra.config.xml.BeanDefinition ) ; }  <METHOD_END>
