<METHOD_START> public void ( java.io.InputStream java.io.InputStream ) { this( java.io.InputStream , - NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( java.io.InputStream java.io.InputStream , int int ) { this . java.lang.Object = java.io.InputStream ; if ( java.io.InputStream instanceof java.io.BufferedInputStream ) { this . java.io.BufferedInputStream = ( java.io.BufferedInputStream ) java.io.InputStream ; } else if ( int > NUMBER ) { this . java.io.BufferedInputStream = new java.io.BufferedInputStream ( java.io.InputStream , int ) ; } else { this . java.io.BufferedInputStream = new java.io.BufferedInputStream ( java.io.InputStream ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.stream.Message<byte[]> < byte [] > org.springframework.integration.stream.Message<byte[]> ( ) { try { byte [] byte[] ; int int = NUMBER ; synchronized ( this . java.lang.Object ) { if ( this . java.io.BufferedInputStream . int ( ) == NUMBER ) { return null ; } byte[] = new byte [ this . int ] ; int = this . java.io.BufferedInputStream . int ( byte[] , NUMBER , byte[] . int ) ; } if ( int <= NUMBER ) { return null ; } if ( ! this . boolean ) { return new GenericMessage < byte [] > ( byte[] ) ; } else { byte [] byte[] = new byte [ int ] ; java.lang.System . void ( byte[] , NUMBER , byte[] , NUMBER , byte[] . int ) ; return new GenericMessage < byte [] > ( byte[] ) ; } } catch ( java.io.IOException java.io.IOException ) { throw new MessagingException ( STRING , java.io.IOException ) ; } }  <METHOD_END>
