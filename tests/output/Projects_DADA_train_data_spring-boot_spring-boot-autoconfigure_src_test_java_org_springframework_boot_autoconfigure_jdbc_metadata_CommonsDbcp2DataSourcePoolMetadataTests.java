<METHOD_START> @ Before public void void ( ) { this . org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata = org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata ( NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata ( ) { return this . org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CommonsDbcp2DataSourcePoolMetadata org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata = new CommonsDbcp2DataSourcePoolMetadata ( org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource ( ) ) { @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return null ; } } ; assertThat ( org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata . getUsage ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CommonsDbcp2DataSourcePoolMetadata org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata = new CommonsDbcp2DataSourcePoolMetadata ( org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource ( ) ) { @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return null ; } } ; assertThat ( org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata . getUsage ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { DataSourcePoolMetadata org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadata = org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata ( NUMBER , - NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadata . getUsage ( ) ) . isEqualTo ( java.lang.Float . java.lang.Float ( - NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { BasicDataSource org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource = org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource ( ) ; org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource . setValidationQuery ( STRING ) ; assertThat ( new CommonsDbcp2DataSourcePoolMetadata ( org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource ) . getValidationQuery ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata org.springframework.boot.autoconfigure.jdbc.metadata.CommonsDbcp2DataSourcePoolMetadata ( int int , int int ) { BasicDataSource org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource = org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource ( ) ; org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource . setMinIdle ( int ) ; org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource . setMaxTotal ( int ) ; return new CommonsDbcp2DataSourcePoolMetadata ( org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource org.springframework.boot.autoconfigure.jdbc.metadata.BasicDataSource ( ) { return ( BasicDataSource ) initializeBuilder ( ) . type ( BasicDataSource .class ) . build ( ) ; }  <METHOD_END>
