<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.boot.maven.MojoExecutionException , org.springframework.boot.maven.MojoFailureException { if ( this . boolean ) { getLog ( ) . debug ( STRING ) ; return; } getLog ( ) . info ( STRING ) ; try { if ( boolean ( ) ) { void ( ) ; } else { void ( ) ; } } catch ( java.io.IOException java.io.IOException ) { getLog ( ) . debug ( STRING + java.io.IOException . java.lang.String ( ) + STRING ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { if ( this . java.lang.Boolean != null ) { return this . java.lang.Boolean ; } java.lang.String java.lang.String = this . org.springframework.boot.maven.MavenProject . getProperties ( ) . getProperty ( STRING ) ; return java.lang.Boolean . java.lang.Boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) java.io.IOException , org.springframework.boot.maven.MojoFailureException , org.springframework.boot.maven.MojoExecutionException { javax.management.remote.JMXConnector javax.management.remote.JMXConnector = SpringApplicationAdminClient . connect ( this . int ) ; try { javax.management.MBeanServerConnection javax.management.MBeanServerConnection = javax.management.remote.JMXConnector . javax.management.MBeanServerConnection ( ) ; void ( javax.management.MBeanServerConnection ) ; } finally { javax.management.remote.JMXConnector . void ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) java.io.IOException , org.springframework.boot.maven.MojoFailureException , org.springframework.boot.maven.MojoExecutionException { void ( java.lang.management.ManagementFactory . javax.management.MBeanServer ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( javax.management.MBeanServerConnection javax.management.MBeanServerConnection )			throws java.io.IOException , org.springframework.boot.maven.MojoExecutionException { try { new SpringApplicationAdminClient ( javax.management.MBeanServerConnection , this . java.lang.String ) . stop ( ) ; } catch ( javax.management.InstanceNotFoundException javax.management.InstanceNotFoundException ) { throw new MojoExecutionException ( STRING + STRING + this . java.lang.Boolean + STRING , javax.management.InstanceNotFoundException ) ; } }  <METHOD_END>
