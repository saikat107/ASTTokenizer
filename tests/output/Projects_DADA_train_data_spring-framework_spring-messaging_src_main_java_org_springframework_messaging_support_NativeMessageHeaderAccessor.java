<METHOD_START> protected void ( ) { this( ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > ) null ); }  <METHOD_END>
<METHOD_START> protected void ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) { if ( ! CollectionUtils . isEmpty ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) ) { setHeader ( java.lang.String , new LinkedMultiValueMap <> ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) ) ; } }  <METHOD_END>
<METHOD_START> protected void ( Message < ? > org.springframework.messaging.support.Message<?> ) { super( org.springframework.messaging.support.Message<> ); if ( org.springframework.messaging.support.Message<> != null ) { @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> = ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > ) getHeader ( java.lang.String ) ; if ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> != null ) { removeHeader ( java.lang.String ) ; setHeader ( java.lang.String , new LinkedMultiValueMap <> ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( ) { return ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > ) getHeader ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( ) { java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( ) ; return ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> != null ? new LinkedMultiValueMap <> ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) : java.util.Collections . java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( isMutable ( ) ) { java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( ) ; if ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> != null ) { removeHeader ( java.lang.String ) ; setHeader ( java.lang.String , java.util.Collections .< java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) ) ; } super. setImmutable ( ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.String java.lang.String ) { java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( ) ; return ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> != null && java.util.Map<java.lang.String,java.util.List<java.lang.String>> . boolean ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.String java.lang.String ) { java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( ) ; return ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> != null ? java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String ) : null ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( ) ; if ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> != null ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String ) ; if ( java.util.List<java.lang.String> != null ) { return java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; } } return null ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . state ( isMutable ( ) , STRING ) ; java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( ) ; if ( java.lang.String == null ) { if ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> != null && java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String ) != null ) { setModified ( true ) ; java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String ) ; } return; } if ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> == null ) { java.util.Map<java.lang.String,java.util.List<java.lang.String>> = new LinkedMultiValueMap <> ( NUMBER ) ; setHeader ( java.lang.String , java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) ; } java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.LinkedList<java.lang.String> <> ( ) ; java.util.List<java.lang.String> . boolean ( java.lang.String ) ; if ( ! ObjectUtils . nullSafeEquals ( java.util.List<java.lang.String> , getHeader ( java.lang.String ) ) ) { setModified ( true ) ; java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String , java.util.List<java.lang.String> ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . state ( isMutable ( ) , STRING ) ; if ( java.lang.String == null ) { return; } java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( ) ; if ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> == null ) { java.util.Map<java.lang.String,java.util.List<java.lang.String>> = new LinkedMultiValueMap <> ( NUMBER ) ; setHeader ( java.lang.String , java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) ; } java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String ) ; if ( java.util.List<java.lang.String> == null ) { java.util.List<java.lang.String> = new java.util.LinkedList<java.lang.String> <> ( ) ; java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String , java.util.List<java.lang.String> ) ; } java.util.List<java.lang.String> . boolean ( java.lang.String ) ; setModified ( true ) ; }  <METHOD_END>
<METHOD_START> public void void ( MultiValueMap < java.lang.String , java.lang.String > org.springframework.messaging.support.MultiValueMap<java.lang.String,java.lang.String> ) { if ( org.springframework.messaging.support.MultiValueMap<java.lang.String,java.lang.String> == null ) { return; } for ( java.lang.String java.lang.String : org.springframework.messaging.support.MultiValueMap<java.lang.String,java.lang.String> . keySet ( ) ) { for ( java.lang.String java.lang.String : org.springframework.messaging.support.MultiValueMap<java.lang.String,java.lang.String> . get ( java.lang.String ) ) { void ( java.lang.String , java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.String java.lang.String ) { Assert . state ( isMutable ( ) , STRING ) ; java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( ) ; if ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> == null ) { return null ; } return java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public static java.lang.String java.lang.String ( java.lang.String java.lang.String , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > java.util.Map<java.lang.String,java.util.List<java.lang.String>> = ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> < java.lang.String , java.util.List<java.lang.String> < java.lang.String > > ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; if ( java.util.Map<java.lang.String,java.util.List<java.lang.String>> != null ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( java.lang.String ) ; if ( java.util.List<java.lang.String> != null ) { return java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; } } return null ; }  <METHOD_END>
