<METHOD_START> @ java.lang.Override public org.springframework.test.context.web.socket.ContextCustomizer org.springframework.test.context.web.socket.ContextCustomizer ( java.lang.Class<?> < ? > java.lang.Class<?> , java.util.List<org.springframework.test.context.web.socket.ContextConfigurationAttributes> < ContextConfigurationAttributes > java.util.List<org.springframework.test.context.web.socket.ContextConfigurationAttributes> ) { if ( boolean && boolean ( java.lang.Class<> ) ) { try { java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . forName ( java.lang.String , java.lang.Class<? extends org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory> ( ) . java.lang.ClassLoader ( ) ) ; return ( ContextCustomizer ) BeanUtils . instantiateClass ( java.lang.Class<> ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { throw new java.lang.IllegalStateException ( STRING + java.lang.String , java.lang.Throwable ) ; } } return null ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return ( AnnotatedElementUtils . findMergedAnnotationAttributes ( java.lang.Class<> , java.lang.String , false , false ) != null ) ; }  <METHOD_END>
