<METHOD_START> public void ( ObjectFactory < ResourceMappings > org.springframework.data.rest.core.support.ObjectFactory<org.springframework.data.rest.core.support.ResourceMappings> ) { Assert . notNull ( org.springframework.data.rest.core.support.ObjectFactory<org.springframework.data.rest.core.support.ResourceMappings> , STRING ) ; this . org.springframework.data.rest.core.support.ObjectFactory<org.springframework.data.rest.core.support.ResourceMappings> = org.springframework.data.rest.core.support.ObjectFactory<org.springframework.data.rest.core.support.ResourceMappings> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.data.rest.core.support.ObjectFactory<org.springframework.data.rest.core.support.ResourceMappings> . getObject ( ) . getMetadataFor ( java.lang.Class<> ) . getRel ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.data.rest.core.support.ObjectFactory<org.springframework.data.rest.core.support.ResourceMappings> . getObject ( ) . getMetadataFor ( java.lang.Class<> ) . getItemResourceRel ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.data.rest.core.support.ObjectFactory<org.springframework.data.rest.core.support.ResourceMappings> . getObject ( ) . hasMappingFor ( java.lang.Class<> ) ; }  <METHOD_END>
