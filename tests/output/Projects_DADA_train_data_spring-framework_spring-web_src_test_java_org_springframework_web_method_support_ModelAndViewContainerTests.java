<METHOD_START> @ Before public void void ( ) { this . org.springframework.web.method.support.ModelAndViewContainer = new ModelAndViewContainer ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.web.method.support.ModelAndViewContainer . addAttribute ( STRING , STRING ) ; assertEquals ( NUMBER , this . org.springframework.web.method.support.ModelAndViewContainer . getModel ( ) . size ( ) ) ; assertEquals ( STRING , this . org.springframework.web.method.support.ModelAndViewContainer . getModel ( ) . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.web.method.support.ModelAndViewContainer . addAttribute ( STRING , STRING ) ; this . org.springframework.web.method.support.ModelAndViewContainer . setRedirectModel ( new ModelMap ( STRING , STRING ) ) ; this . org.springframework.web.method.support.ModelAndViewContainer . setRedirectModelScenario ( true ) ; assertEquals ( NUMBER , this . org.springframework.web.method.support.ModelAndViewContainer . getModel ( ) . size ( ) ) ; assertEquals ( STRING , this . org.springframework.web.method.support.ModelAndViewContainer . getModel ( ) . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.web.method.support.ModelAndViewContainer . addAttribute ( STRING , STRING ) ; this . org.springframework.web.method.support.ModelAndViewContainer . setRedirectModelScenario ( true ) ; assertEquals ( NUMBER , this . org.springframework.web.method.support.ModelAndViewContainer . getModel ( ) . size ( ) ) ; assertEquals ( STRING , this . org.springframework.web.method.support.ModelAndViewContainer . getModel ( ) . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.web.method.support.ModelAndViewContainer . setIgnoreDefaultModelOnRedirect ( true ) ; this . org.springframework.web.method.support.ModelAndViewContainer . addAttribute ( STRING , STRING ) ; this . org.springframework.web.method.support.ModelAndViewContainer . setRedirectModelScenario ( true ) ; assertTrue ( this . org.springframework.web.method.support.ModelAndViewContainer . getModel ( ) . isEmpty ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.web.method.support.ModelAndViewContainer . setIgnoreDefaultModelOnRedirect ( true ) ; this . org.springframework.web.method.support.ModelAndViewContainer . setRedirectModelScenario ( true ) ; this . org.springframework.web.method.support.ModelAndViewContainer . addAttribute ( STRING , STRING ) ; assertEquals ( NUMBER , this . org.springframework.web.method.support.ModelAndViewContainer . getModel ( ) . size ( ) ) ; assertEquals ( STRING , this . org.springframework.web.method.support.ModelAndViewContainer . getModel ( ) . get ( STRING ) ) ; }  <METHOD_END>
