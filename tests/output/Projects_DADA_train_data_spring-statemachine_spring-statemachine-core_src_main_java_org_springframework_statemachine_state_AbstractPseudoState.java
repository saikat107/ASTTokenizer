<METHOD_START> public void ( PseudoStateKind org.springframework.statemachine.state.PseudoStateKind ) { this . org.springframework.statemachine.state.PseudoStateKind = org.springframework.statemachine.state.PseudoStateKind ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.state.PseudoStateKind org.springframework.statemachine.state.PseudoStateKind ( ) { return org.springframework.statemachine.state.PseudoStateKind ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.state.State<S,E> < S , E > org.springframework.statemachine.state.State<S,E> ( StateContext < S , E > org.springframework.statemachine.state.StateContext<S,E> ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < S , E > org.springframework.statemachine.state.StateContext<S,E> ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( PseudoStateListener < S , E > org.springframework.statemachine.state.PseudoStateListener<S,E> ) { org.springframework.statemachine.state.CompositePseudoStateListener<S,E> . register ( org.springframework.statemachine.state.PseudoStateListener<S,E> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.List<org.springframework.statemachine.state.PseudoStateListener<S,E>> < PseudoStateListener < S , E > > java.util.List<org.springframework.statemachine.state.PseudoStateListener<S,E>> ) { org.springframework.statemachine.state.CompositePseudoStateListener<S,E> . setListeners ( java.util.List<org.springframework.statemachine.state.PseudoStateListener<S,E>> ) ; }  <METHOD_END>
<METHOD_START> protected void void ( PseudoStateContext < S , E > org.springframework.statemachine.state.PseudoStateContext<S,E> ) { org.springframework.statemachine.state.CompositePseudoStateListener<S,E> . onContext ( org.springframework.statemachine.state.PseudoStateContext<S,E> ) ; }  <METHOD_END>
