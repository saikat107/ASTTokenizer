<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . value ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . value ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . value ( Matchers . equalTo ( STRING ) ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . value ( Matchers . equalTo ( STRING ) ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . exists ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . exists ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . exists ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . exists ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . doesNotExist ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . doesNotExist ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . doesNotExist ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . doesNotExist ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isEmpty ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isEmpty ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isEmpty ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isNotEmpty ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isNotEmpty ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isNotEmpty ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isNotEmpty ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isNotEmpty ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isNotEmpty ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isNotEmpty ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isNotEmpty ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isArray ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isArray ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isArray ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isMap ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isMap ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isMap ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isBoolean ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isBoolean ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isNumber ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isNumber ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isString ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { new JsonPathResultMatchers ( STRING ) . isString ( ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; StubMvcResult org.springframework.test.web.servlet.result.StubMvcResult = org.springframework.test.web.servlet.result.StubMvcResult ( java.lang.String ) ; new JsonPathResultMatchers ( STRING ) . value ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; StubMvcResult org.springframework.test.web.servlet.result.StubMvcResult = org.springframework.test.web.servlet.result.StubMvcResult ( java.lang.String ) ; new JsonPathResultMatchers ( STRING ) . prefix ( STRING ) . value ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; StubMvcResult org.springframework.test.web.servlet.result.StubMvcResult = org.springframework.test.web.servlet.result.StubMvcResult ( java.lang.String ) ; new JsonPathResultMatchers ( STRING ) . prefix ( java.lang.String ) . value ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.AssertionError .class ) public void void ( ) java.lang.Exception { MockHttpServletResponse org.springframework.test.web.servlet.result.MockHttpServletResponse = new MockHttpServletResponse ( ) ; org.springframework.test.web.servlet.result.MockHttpServletResponse . addHeader ( STRING , STRING ) ; org.springframework.test.web.servlet.result.MockHttpServletResponse . getWriter ( ) . print ( new java.lang.String ( STRING . byte[] ( STRING ) ) ) ; StubMvcResult org.springframework.test.web.servlet.result.StubMvcResult = new StubMvcResult ( null , null , null , null , null , null , org.springframework.test.web.servlet.result.MockHttpServletResponse ) ; new JsonPathResultMatchers ( STRING ) . prefix ( STRING ) . value ( STRING ) . match ( org.springframework.test.web.servlet.result.StubMvcResult ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.test.web.servlet.result.StubMvcResult org.springframework.test.web.servlet.result.StubMvcResult ( java.lang.String java.lang.String ) throws java.lang.Exception { MockHttpServletResponse org.springframework.test.web.servlet.result.MockHttpServletResponse = new MockHttpServletResponse ( ) ; org.springframework.test.web.servlet.result.MockHttpServletResponse . addHeader ( STRING , STRING ) ; org.springframework.test.web.servlet.result.MockHttpServletResponse . getWriter ( ) . print ( java.lang.String + new java.lang.String ( java.lang.String . byte[] ( STRING ) ) ) ; return new StubMvcResult ( null , null , null , null , null , null , org.springframework.test.web.servlet.result.MockHttpServletResponse ) ; }  <METHOD_END>
