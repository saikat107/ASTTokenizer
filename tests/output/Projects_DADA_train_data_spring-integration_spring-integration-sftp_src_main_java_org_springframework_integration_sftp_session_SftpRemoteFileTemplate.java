<METHOD_START> public void ( SessionFactory < LsEntry > org.springframework.integration.sftp.session.SessionFactory<org.springframework.integration.sftp.session.LsEntry> ) { super( org.springframework.integration.sftp.session.SessionFactory<org.springframework.integration.sftp.session.LsEntry> ); }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public < T , C > T T ( final ClientCallback < C , T > org.springframework.integration.sftp.session.ClientCallback<C,T> ) { return T ( ( ClientCallback < ChannelSftp , T > ) org.springframework.integration.sftp.session.ClientCallback<C,T> ) ; }  <METHOD_END>
<METHOD_START> protected < T > T T ( final ClientCallback < ChannelSftp , T > org.springframework.integration.sftp.session.ClientCallback<org.springframework.integration.sftp.session.ChannelSftp,T> ) { return execute ( session -> callback . doWithClient ( ( ChannelSftp ) session . getClientInstance ( ) ) ) ; }  <METHOD_END>
