<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( TagWriter org.springframework.web.servlet.tags.form.TagWriter ) throws org.springframework.web.servlet.tags.form.JspException { org.springframework.web.servlet.tags.form.TagWriter . startTag ( java.lang.String ) ; org.springframework.web.servlet.tags.form.TagWriter . writeAttribute ( java.lang.String , java.lang.String ( ) ) ; writeDefaultAttributes ( org.springframework.web.servlet.tags.form.TagWriter ) ; org.springframework.web.servlet.tags.form.TagWriter . forceBlock ( ) ; this . org.springframework.web.servlet.tags.form.TagWriter = org.springframework.web.servlet.tags.form.TagWriter ; return EVAL_BODY_INCLUDE ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) org.springframework.web.servlet.tags.form.JspException { return null ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) org.springframework.web.servlet.tags.form.JspException { if ( StringUtils . hasText ( this . java.lang.String ) ) { return getDisplayString ( evaluate ( java.lang.String , this . java.lang.String ) ) ; } else { return java.lang.String ( ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) org.springframework.web.servlet.tags.form.JspException { return StringUtils . deleteAny ( getPropertyPath ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) org.springframework.web.servlet.tags.form.JspException { this . org.springframework.web.servlet.tags.form.TagWriter . endTag ( ) ; return EVAL_PAGE ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. doFinally ( ) ; this . org.springframework.web.servlet.tags.form.TagWriter = null ; }  <METHOD_END>
