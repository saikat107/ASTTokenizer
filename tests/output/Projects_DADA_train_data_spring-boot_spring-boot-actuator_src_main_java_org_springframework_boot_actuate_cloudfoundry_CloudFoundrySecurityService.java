<METHOD_START> void ( RestTemplateBuilder org.springframework.boot.actuate.cloudfoundry.RestTemplateBuilder , java.lang.String java.lang.String , boolean boolean ) { Assert . notNull ( org.springframework.boot.actuate.cloudfoundry.RestTemplateBuilder , STRING ) ; Assert . notNull ( java.lang.String , STRING ) ; if ( boolean ) { org.springframework.boot.actuate.cloudfoundry.RestTemplateBuilder = org.springframework.boot.actuate.cloudfoundry.RestTemplateBuilder . requestFactory ( SkipSslVerificationHttpRequestFactory .class ) ; } this . org.springframework.boot.actuate.cloudfoundry.RestTemplate = org.springframework.boot.actuate.cloudfoundry.RestTemplateBuilder . build ( ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.cloudfoundry.AccessLevel org.springframework.boot.actuate.cloudfoundry.AccessLevel ( java.lang.String java.lang.String , java.lang.String java.lang.String )			throws org.springframework.boot.actuate.cloudfoundry.CloudFoundryAuthorizationException { try { java.net.URI java.net.URI = java.net.URI ( java.lang.String ) ; RequestEntity < ? > org.springframework.boot.actuate.cloudfoundry.RequestEntity<?> = RequestEntity . get ( java.net.URI ) . header ( STRING , STRING + java.lang.String ) . build ( ) ; java.util.Map<?,?> < ? , ? > java.util.Map<?,?> = this . org.springframework.boot.actuate.cloudfoundry.RestTemplate . exchange ( org.springframework.boot.actuate.cloudfoundry.RequestEntity<> , java.util.Map .class ) . getBody ( ) ; if ( java.lang.Boolean . java.lang.Boolean . boolean ( java.util.Map<,> . get ( STRING ) ) ) { return AccessLevel . FULL ; } return AccessLevel . RESTRICTED ; } catch ( HttpClientErrorException org.springframework.boot.actuate.cloudfoundry.HttpClientErrorException ) { if ( org.springframework.boot.actuate.cloudfoundry.HttpClientErrorException . getStatusCode ( ) . equals ( HttpStatus . FORBIDDEN ) ) { throw new CloudFoundryAuthorizationException ( Reason . ACCESS_DENIED , STRING ) ; } throw new CloudFoundryAuthorizationException ( Reason . INVALID_TOKEN , STRING , org.springframework.boot.actuate.cloudfoundry.HttpClientErrorException ) ; } catch ( HttpServerErrorException org.springframework.boot.actuate.cloudfoundry.HttpServerErrorException ) { throw new CloudFoundryAuthorizationException ( Reason . SERVICE_UNAVAILABLE , STRING ) ; } }  <METHOD_END>
<METHOD_START> private java.net.URI java.net.URI ( java.lang.String java.lang.String ) { try { return new java.net.URI ( this . java.lang.String + STRING + java.lang.String + STRING ) ; } catch ( java.net.URISyntaxException java.net.URISyntaxException ) { throw new java.lang.IllegalStateException ( java.net.URISyntaxException ) ; } }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( ) { try { return java.util.Map<java.lang.String,java.lang.String> ( this . org.springframework.boot.actuate.cloudfoundry.RestTemplate . getForObject ( java.lang.String ( ) + STRING , java.util.Map .class ) ) ; } catch ( HttpStatusCodeException org.springframework.boot.actuate.cloudfoundry.HttpStatusCodeException ) { throw new CloudFoundryAuthorizationException ( Reason . SERVICE_UNAVAILABLE , STRING ) ; } }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( java.util.Map<?,?> < ? , ? > java.util.Map<?,?> ) { java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; for ( java.lang.Object java.lang.Object : ( java.util.List<?> < ? > ) java.util.Map<,> . get ( STRING ) ) { java.util.Map<?,?> < ? , ? > java.util.Map<?,?> = ( java.util.Map<?,?> < ? , ? > ) java.lang.Object ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( ( java.lang.String ) java.util.Map<,> . get ( STRING ) , ( java.lang.String ) java.util.Map<,> . get ( STRING ) ) ; } return java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { if ( this . java.lang.String == null ) { try { java.util.Map<?,?> < ? , ? > java.util.Map<?,?> = this . org.springframework.boot.actuate.cloudfoundry.RestTemplate . getForObject ( this . java.lang.String + STRING , java.util.Map .class ) ; this . java.lang.String = ( java.lang.String ) java.util.Map<,> . get ( STRING ) ; } catch ( HttpStatusCodeException org.springframework.boot.actuate.cloudfoundry.HttpStatusCodeException ) { throw new CloudFoundryAuthorizationException ( Reason . SERVICE_UNAVAILABLE , STRING ) ; } } return this . java.lang.String ; }  <METHOD_END>
