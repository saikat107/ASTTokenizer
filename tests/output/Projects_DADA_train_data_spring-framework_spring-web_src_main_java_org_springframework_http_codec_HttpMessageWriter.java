<METHOD_START> java.util.List<org.springframework.http.codec.MediaType> < MediaType > java.util.List<org.springframework.http.codec.MediaType> ( )  <METHOD_END>
<METHOD_START> boolean boolean ( ResolvableType org.springframework.http.codec.ResolvableType , MediaType org.springframework.http.codec.MediaType );  <METHOD_END>
<METHOD_START> org.springframework.http.codec.Mono<java.lang.Void> < java.lang.Void > org.springframework.http.codec.Mono<java.lang.Void> ( Publisher < ? extends T > org.springframework.http.codec.Publisher<? extends T> , ResolvableType org.springframework.http.codec.ResolvableType , MediaType org.springframework.http.codec.MediaType , ReactiveHttpOutputMessage org.springframework.http.codec.ReactiveHttpOutputMessage , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> );  <METHOD_END>
<METHOD_START> default org.springframework.http.codec.Mono<java.lang.Void> < java.lang.Void > org.springframework.http.codec.Mono<java.lang.Void> ( Publisher < ? extends T > org.springframework.http.codec.Publisher<? extends T> , ResolvableType org.springframework.http.codec.ResolvableType , ResolvableType org.springframework.http.codec.ResolvableType , MediaType org.springframework.http.codec.MediaType , ServerHttpRequest org.springframework.http.codec.ServerHttpRequest , ServerHttpResponse org.springframework.http.codec.ServerHttpResponse , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { return org.springframework.http.codec.Mono<java.lang.Void> ( org.springframework.http.codec.Publisher<> , org.springframework.http.codec.ResolvableType , org.springframework.http.codec.MediaType , org.springframework.http.codec.ServerHttpResponse , java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
