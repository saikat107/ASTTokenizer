<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element , AbstractBeanDefinition org.springframework.integration.config.xml.AbstractBeanDefinition , ParserContext org.springframework.integration.config.xml.ParserContext )			throws org.springframework.integration.config.xml.BeanDefinitionStoreException { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( ID_ATTRIBUTE ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; } if ( ! StringUtils . hasText ( java.lang.String ) ) { java.lang.String = BeanDefinitionReaderUtils . generateBeanName ( org.springframework.integration.config.xml.AbstractBeanDefinition , org.springframework.integration.config.xml.ParserContext . getRegistry ( ) , org.springframework.integration.config.xml.ParserContext . isNested ( ) ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.integration.config.xml.BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext );  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected final org.springframework.integration.config.xml.AbstractBeanDefinition org.springframework.integration.config.xml.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = this . org.springframework.integration.config.xml.BeanDefinitionBuilder ( org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , STRING ) ; org.w3c.dom.Element org.w3c.dom.Element = DomUtils . getChildElementByTagName ( org.w3c.dom.Element , IntegrationNamespaceUtils . REQUEST_HANDLER_ADVICE_CHAIN ) ; @ java.lang.SuppressWarnings ( STRING ) ManagedList org.springframework.integration.config.xml.ManagedList = IntegrationNamespaceUtils . configureAdviceChain ( org.w3c.dom.Element , org.w3c.dom.Element , true , org.springframework.integration.config.xml.BeanDefinitionBuilder . getRawBeanDefinition ( ) , org.springframework.integration.config.xml.ParserContext ) ; if ( ! CollectionUtils . isEmpty ( org.springframework.integration.config.xml.ManagedList ) ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.config.xml.ManagedList ) ; } AbstractBeanDefinition org.springframework.integration.config.xml.AbstractBeanDefinition = org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; java.lang.String java.lang.String = this . java.lang.String ( ) ; boolean boolean = org.w3c.dom.Element . boolean ( java.lang.String ) ; if ( org.springframework.integration.config.xml.ParserContext . isNested ( ) ) { java.lang.String java.lang.String = IntegrationNamespaceUtils . createElementDescription ( org.w3c.dom.Element ) ; if ( boolean ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + java.lang.String + STRING + java.lang.String + STRING , org.w3c.dom.Element ) ; } if ( ! boolean ( org.w3c.dom.Element ) ) { if ( StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + STRING + java.lang.String + STRING , org.w3c.dom.Element ) ; } } return org.springframework.integration.config.xml.AbstractBeanDefinition ; } else { if ( ! boolean ) { java.lang.String java.lang.String = IntegrationNamespaceUtils . createElementDescription ( org.w3c.dom.Element ) ; org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + java.lang.String + STRING + java.lang.String + STRING , org.w3c.dom.Element ) ; } } BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ConsumerEndpointFactoryBean .class ) ; if ( ! CollectionUtils . isEmpty ( org.springframework.integration.config.xml.ManagedList ) ) { org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.config.xml.ManagedList ) ; } java.lang.String java.lang.String = BeanDefinitionReaderUtils . generateBeanName ( org.springframework.integration.config.xml.AbstractBeanDefinition , org.springframework.integration.config.xml.ParserContext . getRegistry ( ) ) ; java.lang.String [] java.lang.String[] = IntegrationNamespaceUtils . generateAlias ( org.w3c.dom.Element ) ; org.springframework.integration.config.xml.ParserContext . registerBeanComponent ( new BeanComponentDefinition ( org.springframework.integration.config.xml.AbstractBeanDefinition , java.lang.String , java.lang.String[] ) ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! org.springframework.integration.config.xml.ParserContext . getRegistry ( ) . containsBeanDefinition ( java.lang.String ) ) { if ( org.springframework.integration.config.xml.ParserContext . getRegistry ( ) . containsBeanDefinition ( IntegrationContextUtils . AUTO_CREATE_CHANNEL_CANDIDATES_BEAN_NAME ) ) { BeanDefinition org.springframework.integration.config.xml.BeanDefinition = org.springframework.integration.config.xml.ParserContext . getRegistry ( ) . getBeanDefinition ( IntegrationContextUtils . AUTO_CREATE_CHANNEL_CANDIDATES_BEAN_NAME ) ; ConstructorArgumentValues org.springframework.integration.config.xml.ConstructorArgumentValues = org.springframework.integration.config.xml.BeanDefinition . getConstructorArgumentValues ( ) ; ValueHolder org.springframework.integration.config.xml.ValueHolder = org.springframework.integration.config.xml.ConstructorArgumentValues . getArgumentValue ( NUMBER , java.util.Collection .class ) ; if ( org.springframework.integration.config.xml.ValueHolder == null ) { org.springframework.integration.config.xml.ConstructorArgumentValues . addIndexedArgumentValue ( NUMBER , new ManagedSet < java.lang.String > ( ) ) ; } @ java.lang.SuppressWarnings ( STRING ) java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = ( java.util.Collection<java.lang.String> < java.lang.String > ) org.springframework.integration.config.xml.ConstructorArgumentValues . getArgumentValue ( NUMBER , java.util.Collection .class ) . getValue ( ) ; java.util.Collection<java.lang.String> . boolean ( java.lang.String ) ; } else { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING + IntegrationContextUtils . AUTO_CREATE_CHANNEL_CANDIDATES_BEAN_NAME + STRING , org.springframework.integration.config.xml.ParserContext . getRegistry ( ) ) ; } } IntegrationNamespaceUtils . checkAndConfigureFixedSubscriberChannel ( org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext , java.lang.String , java.lang.String ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING ) ; if ( ! CollectionUtils . isEmpty ( java.util.List<org.w3c.dom.Element> ) ) { if ( java.util.List<org.w3c.dom.Element> . int ( ) != NUMBER ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } IntegrationNamespaceUtils . configurePollerMetadata ( java.util.List<org.w3c.dom.Element> . org.w3c.dom.Element ( NUMBER ) , org.springframework.integration.config.xml.BeanDefinitionBuilder , org.springframework.integration.config.xml.ParserContext ) ; } IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , IntegrationNamespaceUtils . AUTO_STARTUP ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , IntegrationNamespaceUtils . PHASE ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( IntegrationNamespaceUtils . ROLE ) ; if ( StringUtils . hasText ( java.lang.String ) ) { if ( ! StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( ID_ATTRIBUTE ) ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } IntegrationNamespaceUtils . putLifecycleInRole ( java.lang.String , org.w3c.dom.Element . java.lang.String ( ID_ATTRIBUTE ) , org.springframework.integration.config.xml.ParserContext ) ; } AbstractBeanDefinition org.springframework.integration.config.xml.AbstractBeanDefinition = org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; java.lang.String java.lang.String = this . java.lang.String ( org.w3c.dom.Element , org.springframework.integration.config.xml.AbstractBeanDefinition , org.springframework.integration.config.xml.ParserContext ) ; org.springframework.integration.config.xml.ParserContext . registerBeanComponent ( new BeanComponentDefinition ( org.springframework.integration.config.xml.AbstractBeanDefinition , java.lang.String ) ) ; return null ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( ) ; return java.lang.String == null || ! java.lang.String . boolean ( STRING ) ; }  <METHOD_END>
