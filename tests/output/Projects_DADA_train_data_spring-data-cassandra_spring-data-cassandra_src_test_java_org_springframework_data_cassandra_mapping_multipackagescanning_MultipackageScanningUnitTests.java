<METHOD_START> @ Before public void void ( ) java.lang.ClassNotFoundException { org.springframework.data.cassandra.mapping.multipackagescanning.BasicCassandraMappingContext = new BasicCassandraMappingContext ( ) ; org.springframework.data.cassandra.mapping.multipackagescanning.BasicCassandraMappingContext . setInitialEntitySet ( CassandraEntityClassScanner . scan ( java.lang.String + STRING , java.lang.String + STRING ) ) ; org.springframework.data.cassandra.mapping.multipackagescanning.BasicCassandraMappingContext . initialize ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Collection<org.springframework.data.cassandra.mapping.multipackagescanning.CassandraPersistentEntity<?>> < CassandraPersistentEntity < ? > > java.util.Collection<org.springframework.data.cassandra.mapping.multipackagescanning.CassandraPersistentEntity<?>> = org.springframework.data.cassandra.mapping.multipackagescanning.BasicCassandraMappingContext . getPersistentEntities ( ) ; java.util.Collection<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Collection<java.lang.Class<?>> = java.util.Collection<org.springframework.data.cassandra.mapping.multipackagescanning.CassandraPersistentEntity<?>> . stream ( ) . map ( CassandraPersistentEntity :: getType ) . collect ( java.util.stream.Collectors . java.util.stream.Collector<java.lang.Object,?,java.util.Set<java.lang.Object>> ( ) ) ; assertThat ( java.util.Collection<java.lang.Class<?>> . boolean ( First .class ) ) . isTrue ( ) ; assertThat ( java.util.Collection<java.lang.Class<?>> . boolean ( Second .class ) ) . isTrue ( ) ; assertThat ( java.util.Collection<java.lang.Class<?>> . boolean ( Third .class ) ) . isFalse ( ) ; assertThat ( java.util.Collection<java.lang.Class<?>> . boolean ( Top .class ) ) . isFalse ( ) ; }  <METHOD_END>
