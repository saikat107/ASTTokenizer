<METHOD_START> protected abstract org.springframework.data.couchbase.config.CouchbaseConfigurer org.springframework.data.couchbase.config.CouchbaseConfigurer ( )  <METHOD_END>
<METHOD_START> @ Bean ( name = BeanNames . RXJAVA1_COUCHBASE_TEMPLATE ) public org.springframework.data.couchbase.config.RxJavaCouchbaseTemplate org.springframework.data.couchbase.config.RxJavaCouchbaseTemplate ( ) java.lang.Exception { RxJavaCouchbaseTemplate org.springframework.data.couchbase.config.RxJavaCouchbaseTemplate = new RxJavaCouchbaseTemplate ( org.springframework.data.couchbase.config.CouchbaseConfigurer ( ) . couchbaseClusterInfo ( ) , org.springframework.data.couchbase.config.CouchbaseConfigurer ( ) . couchbaseClient ( ) , mappingCouchbaseConverter ( ) , translationService ( ) ) ; org.springframework.data.couchbase.config.RxJavaCouchbaseTemplate . setDefaultConsistency ( getDefaultConsistency ( ) ) ; return org.springframework.data.couchbase.config.RxJavaCouchbaseTemplate ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = BeanNames . REACTIVE_COUCHBASE_OPERATIONS_MAPPING ) public org.springframework.data.couchbase.config.ReactiveRepositoryOperationsMapping org.springframework.data.couchbase.config.ReactiveRepositoryOperationsMapping ( RxJavaCouchbaseTemplate org.springframework.data.couchbase.config.RxJavaCouchbaseTemplate ) throws java.lang.Exception { ReactiveRepositoryOperationsMapping org.springframework.data.couchbase.config.ReactiveRepositoryOperationsMapping = new ReactiveRepositoryOperationsMapping ( org.springframework.data.couchbase.config.RxJavaCouchbaseTemplate ) ; void ( org.springframework.data.couchbase.config.ReactiveRepositoryOperationsMapping ) ; return org.springframework.data.couchbase.config.ReactiveRepositoryOperationsMapping ; }  <METHOD_END>
<METHOD_START> protected void void ( ReactiveRepositoryOperationsMapping org.springframework.data.couchbase.config.ReactiveRepositoryOperationsMapping ) { }  <METHOD_END>
