<METHOD_START> protected void ( boolean boolean , boolean boolean ) { this . boolean = boolean ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MetadataReader org.springframework.core.type.filter.MetadataReader , MetadataReaderFactory org.springframework.core.type.filter.MetadataReaderFactory )			throws java.io.IOException { if ( boolean ( org.springframework.core.type.filter.MetadataReader ) ) { return true ; } ClassMetadata org.springframework.core.type.filter.ClassMetadata = org.springframework.core.type.filter.MetadataReader . getClassMetadata ( ) ; if ( boolean ( org.springframework.core.type.filter.ClassMetadata . getClassName ( ) ) ) { return true ; } if ( this . boolean ) { if ( org.springframework.core.type.filter.ClassMetadata . hasSuperClass ( ) ) { java.lang.Boolean java.lang.Boolean = java.lang.Boolean ( org.springframework.core.type.filter.ClassMetadata . getSuperClassName ( ) ) ; if ( java.lang.Boolean != null ) { if ( java.lang.Boolean . boolean ( ) ) { return true ; } } else { try { if ( boolean ( org.springframework.core.type.filter.ClassMetadata . getSuperClassName ( ) , org.springframework.core.type.filter.MetadataReaderFactory ) ) { return true ; } } catch ( java.io.IOException java.io.IOException ) { org.springframework.core.type.filter.Log . debug ( STRING + org.springframework.core.type.filter.ClassMetadata . getSuperClassName ( ) + STRING + org.springframework.core.type.filter.ClassMetadata . getClassName ( ) + STRING ) ; } } } } if ( this . boolean ) { for ( java.lang.String java.lang.String : org.springframework.core.type.filter.ClassMetadata . getInterfaceNames ( ) ) { java.lang.Boolean java.lang.Boolean = java.lang.Boolean ( java.lang.String ) ; if ( java.lang.Boolean != null ) { if ( java.lang.Boolean . boolean ( ) ) { return true ; } } else { try { if ( boolean ( java.lang.String , org.springframework.core.type.filter.MetadataReaderFactory ) ) { return true ; } } catch ( java.io.IOException java.io.IOException ) { org.springframework.core.type.filter.Log . debug ( STRING + java.lang.String + STRING + org.springframework.core.type.filter.ClassMetadata . getClassName ( ) + STRING ) ; } } } } return false ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.String java.lang.String , MetadataReaderFactory org.springframework.core.type.filter.MetadataReaderFactory ) throws java.io.IOException { return boolean ( org.springframework.core.type.filter.MetadataReaderFactory . getMetadataReader ( java.lang.String ) , org.springframework.core.type.filter.MetadataReaderFactory ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( MetadataReader org.springframework.core.type.filter.MetadataReader ) { return false ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.String java.lang.String ) { return false ; }  <METHOD_END>
<METHOD_START> protected java.lang.Boolean java.lang.Boolean ( java.lang.String java.lang.String ) { return null ; }  <METHOD_END>
<METHOD_START> protected java.lang.Boolean java.lang.Boolean ( java.lang.String java.lang.String ) { return null ; }  <METHOD_END>
