<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( Field org.springframework.data.solr.core.query.Field ) { Assert . notNull ( org.springframework.data.solr.core.query.Field , STRING ) ; Assert . hasText ( org.springframework.data.solr.core.query.Field . getName ( ) , STRING ) ; java.util.List<org.springframework.data.solr.core.query.Field> . add ( org.springframework.data.solr.core.query.Field ) ; return this ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.data.solr.core.query.Field> < Field > java.util.List<org.springframework.data.solr.core.query.Field> ( ) { return java.util.Collections . java.util.List<org.springframework.data.solr.core.query.Field> ( this . java.util.List<org.springframework.data.solr.core.query.Field> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; java.util.List<org.springframework.data.solr.core.query.Field> . add ( new SimpleField ( java.lang.String ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( Function org.springframework.data.solr.core.query.Function ) { Assert . notNull ( org.springframework.data.solr.core.query.Function , STRING ) ; java.util.List<org.springframework.data.solr.core.query.Function> . add ( org.springframework.data.solr.core.query.Function ) ; return this ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.data.solr.core.query.Function> < Function > java.util.List<org.springframework.data.solr.core.query.Function> ( ) { return java.util.Collections . java.util.List<org.springframework.data.solr.core.query.Function> ( java.util.List<org.springframework.data.solr.core.query.Function> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( Query org.springframework.data.solr.core.query.Query ) { Assert . notNull ( org.springframework.data.solr.core.query.Query , STRING ) ; java.util.List<org.springframework.data.solr.core.query.Query> . add ( org.springframework.data.solr.core.query.Query ) ; return this ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.data.solr.core.query.Query> < Query > java.util.List<org.springframework.data.solr.core.query.Query> ( ) { return java.util.Collections . java.util.List<org.springframework.data.solr.core.query.Query> ( java.util.List<org.springframework.data.solr.core.query.Query> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer == null ? null : java.lang.Math . int ( NUMBER , java.lang.Integer ) ; return this ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( Sort org.springframework.data.solr.core.query.Sort ) { if ( org.springframework.data.solr.core.query.Sort == null ) { return this ; } if ( this . org.springframework.data.solr.core.query.Sort == null ) { this . org.springframework.data.solr.core.query.Sort = org.springframework.data.solr.core.query.Sort ; } else { this . org.springframework.data.solr.core.query.Sort = this . org.springframework.data.solr.core.query.Sort . and ( org.springframework.data.solr.core.query.Sort ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.Sort org.springframework.data.solr.core.query.Sort ( ) { return org.springframework.data.solr.core.query.Sort ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( int int ) { this . int = java.lang.Math . int ( NUMBER , java.lang.Math . int ( NUMBER , int ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.GroupOptions org.springframework.data.solr.core.query.GroupOptions ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.query.Pageable org.springframework.data.solr.core.query.Pageable ( ) { if ( this . java.lang.Integer == null && this . java.lang.Integer == null ) { return null ; } int int = this . java.lang.Integer != null ? this . java.lang.Integer : int ; int int = this . java.lang.Integer != null ? this . java.lang.Integer : NUMBER ; return new SolrPageRequest ( int != NUMBER ? int / int : NUMBER , int , this . org.springframework.data.solr.core.query.Sort ) ; }  <METHOD_END>
