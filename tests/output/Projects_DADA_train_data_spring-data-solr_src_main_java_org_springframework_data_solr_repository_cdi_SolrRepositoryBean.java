<METHOD_START> public void ( Bean < SolrOperations > org.springframework.data.solr.repository.cdi.Bean<org.springframework.data.solr.repository.cdi.SolrOperations> , java.util.Set<java.lang.annotation.Annotation> < java.lang.annotation.Annotation > java.util.Set<java.lang.annotation.Annotation> , java.lang.Class<T> < T > java.lang.Class<T> , BeanManager org.springframework.data.solr.repository.cdi.BeanManager , java.util.Optional<org.springframework.data.solr.repository.cdi.CustomRepositoryImplementationDetector> < CustomRepositoryImplementationDetector > java.util.Optional<org.springframework.data.solr.repository.cdi.CustomRepositoryImplementationDetector> ) { super( java.util.Set<java.lang.annotation.Annotation> , java.lang.Class<T> , org.springframework.data.solr.repository.cdi.BeanManager , java.util.Optional<org.springframework.data.solr.repository.cdi.CustomRepositoryImplementationDetector> ); Assert . notNull ( org.springframework.data.solr.repository.cdi.Bean<org.springframework.data.solr.repository.cdi.SolrOperations> , STRING ) ; this . org.springframework.data.solr.repository.cdi.Bean<org.springframework.data.solr.repository.cdi.SolrOperations> = org.springframework.data.solr.repository.cdi.Bean<org.springframework.data.solr.repository.cdi.SolrOperations> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected T T ( CreationalContext < T > org.springframework.data.solr.repository.cdi.CreationalContext<T> , java.lang.Class<T> < T > java.lang.Class<T> , java.util.Optional<java.lang.Object> < java.lang.Object > java.util.Optional<java.lang.Object> ) { SolrOperations org.springframework.data.solr.repository.cdi.SolrOperations = getDependencyInstance ( org.springframework.data.solr.repository.cdi.Bean<org.springframework.data.solr.repository.cdi.SolrOperations> , SolrOperations .class ) ; return java.util.Optional<java.lang.Object> . boolean ( ) ? new SolrRepositoryFactory ( org.springframework.data.solr.repository.cdi.SolrOperations ) . getRepository ( java.lang.Class<T> , java.util.Optional<java.lang.Object> . java.lang.Object ( ) ) : new SolrRepositoryFactory ( org.springframework.data.solr.repository.cdi.SolrOperations ) . getRepository ( java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ( ) { return org.springframework.data.solr.repository.cdi.Bean<org.springframework.data.solr.repository.cdi.SolrOperations> . getScope ( ) ; }  <METHOD_END>
