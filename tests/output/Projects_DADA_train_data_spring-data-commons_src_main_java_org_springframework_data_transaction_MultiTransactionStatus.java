<METHOD_START> public void ( PlatformTransactionManager org.springframework.data.transaction.PlatformTransactionManager ) { Assert . notNull ( org.springframework.data.transaction.PlatformTransactionManager , STRING ) ; this . org.springframework.data.transaction.PlatformTransactionManager = org.springframework.data.transaction.PlatformTransactionManager ; }  <METHOD_END>
<METHOD_START> public java.util.Map<org.springframework.data.transaction.PlatformTransactionManager,org.springframework.data.transaction.TransactionStatus> < PlatformTransactionManager , TransactionStatus > java.util.Map<org.springframework.data.transaction.PlatformTransactionManager,org.springframework.data.transaction.TransactionStatus> ( ) { return java.util.Map<org.springframework.data.transaction.PlatformTransactionManager,org.springframework.data.transaction.TransactionStatus> ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( TransactionDefinition org.springframework.data.transaction.TransactionDefinition , PlatformTransactionManager org.springframework.data.transaction.PlatformTransactionManager ) { java.util.Map<org.springframework.data.transaction.PlatformTransactionManager,org.springframework.data.transaction.TransactionStatus> ( ) . put ( org.springframework.data.transaction.PlatformTransactionManager , org.springframework.data.transaction.PlatformTransactionManager . getTransaction ( org.springframework.data.transaction.TransactionDefinition ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( PlatformTransactionManager org.springframework.data.transaction.PlatformTransactionManager ) { TransactionStatus org.springframework.data.transaction.TransactionStatus = org.springframework.data.transaction.TransactionStatus ( org.springframework.data.transaction.PlatformTransactionManager ) ; org.springframework.data.transaction.PlatformTransactionManager . commit ( org.springframework.data.transaction.TransactionStatus ) ; }  <METHOD_END>
<METHOD_START> public void void ( PlatformTransactionManager org.springframework.data.transaction.PlatformTransactionManager ) { org.springframework.data.transaction.PlatformTransactionManager . rollback ( org.springframework.data.transaction.TransactionStatus ( org.springframework.data.transaction.PlatformTransactionManager ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.springframework.data.transaction.TransactionStatus ( ) . isRollbackOnly ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.springframework.data.transaction.TransactionStatus ( ) . isCompleted ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.springframework.data.transaction.TransactionStatus ( ) . isNewTransaction ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.springframework.data.transaction.TransactionStatus ( ) . hasSavepoint ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { for ( TransactionStatus org.springframework.data.transaction.TransactionStatus : java.util.Map<org.springframework.data.transaction.PlatformTransactionManager,org.springframework.data.transaction.TransactionStatus> . values ( ) ) { org.springframework.data.transaction.TransactionStatus . setRollbackOnly ( ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) org.springframework.data.transaction.TransactionException { org.springframework.data.transaction.MultiTransactionStatus.SavePoints org.springframework.data.transaction.MultiTransactionStatus.SavePoints = new org.springframework.data.transaction.MultiTransactionStatus.SavePoints ( ) ; for ( TransactionStatus org.springframework.data.transaction.TransactionStatus : java.util.Map<org.springframework.data.transaction.PlatformTransactionManager,org.springframework.data.transaction.TransactionStatus> . values ( ) ) { org.springframework.data.transaction.MultiTransactionStatus.SavePoints . void ( org.springframework.data.transaction.TransactionStatus ) ; } return org.springframework.data.transaction.MultiTransactionStatus.SavePoints ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) throws org.springframework.data.transaction.TransactionException { org.springframework.data.transaction.MultiTransactionStatus.SavePoints org.springframework.data.transaction.MultiTransactionStatus.SavePoints = ( org.springframework.data.transaction.MultiTransactionStatus.SavePoints ) java.lang.Object ; org.springframework.data.transaction.MultiTransactionStatus.SavePoints . void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) throws org.springframework.data.transaction.TransactionException { ( ( org.springframework.data.transaction.MultiTransactionStatus.SavePoints ) java.lang.Object ) . void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { for ( TransactionStatus org.springframework.data.transaction.TransactionStatus : java.util.Map<org.springframework.data.transaction.PlatformTransactionManager,org.springframework.data.transaction.TransactionStatus> . values ( ) ) { org.springframework.data.transaction.TransactionStatus . flush ( ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.data.transaction.TransactionStatus org.springframework.data.transaction.TransactionStatus ( ) { return java.util.Map<org.springframework.data.transaction.PlatformTransactionManager,org.springframework.data.transaction.TransactionStatus> . get ( org.springframework.data.transaction.PlatformTransactionManager ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.transaction.TransactionStatus org.springframework.data.transaction.TransactionStatus ( PlatformTransactionManager org.springframework.data.transaction.PlatformTransactionManager ) { return this . java.util.Map<org.springframework.data.transaction.PlatformTransactionManager,org.springframework.data.transaction.TransactionStatus> ( ) . get ( org.springframework.data.transaction.PlatformTransactionManager ) ; }  <METHOD_END>
<METHOD_START> private void void ( TransactionStatus org.springframework.data.transaction.TransactionStatus , java.lang.Object java.lang.Object ) { Assert . notNull ( org.springframework.data.transaction.TransactionStatus , STRING ) ; this . java.util.Map<org.springframework.data.transaction.TransactionStatus,java.lang.Object> . put ( org.springframework.data.transaction.TransactionStatus , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private void void ( TransactionStatus org.springframework.data.transaction.TransactionStatus ) { java.lang.Object java.lang.Object = org.springframework.data.transaction.TransactionStatus . createSavepoint ( ) ; void ( org.springframework.data.transaction.TransactionStatus , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { for ( TransactionStatus org.springframework.data.transaction.TransactionStatus : java.util.Map<org.springframework.data.transaction.TransactionStatus,java.lang.Object> . keySet ( ) ) { org.springframework.data.transaction.TransactionStatus . rollbackToSavepoint ( java.lang.Object ( org.springframework.data.transaction.TransactionStatus ) ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( TransactionStatus org.springframework.data.transaction.TransactionStatus ) { return java.util.Map<org.springframework.data.transaction.TransactionStatus,java.lang.Object> . get ( org.springframework.data.transaction.TransactionStatus ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { for ( TransactionStatus org.springframework.data.transaction.TransactionStatus : java.util.Map<org.springframework.data.transaction.TransactionStatus,java.lang.Object> . keySet ( ) ) { org.springframework.data.transaction.TransactionStatus . releaseSavepoint ( java.lang.Object ( org.springframework.data.transaction.TransactionStatus ) ) ; } }  <METHOD_END>
