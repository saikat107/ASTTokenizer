<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.repository.config.BeanDefinition org.springframework.data.repository.config.BeanDefinition ( java.lang.Object java.lang.Object ) { BeanDefinitionBuilder org.springframework.data.repository.config.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( PropertiesFactoryBean .class ) ; java.lang.String java.lang.String = StringUtils . hasText ( java.lang.String ) ? java.lang.String : java.lang.String ; org.springframework.data.repository.config.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.repository.config.BeanDefinitionBuilder . addPropertyValue ( STRING , true ) ; } AbstractBeanDefinition org.springframework.data.repository.config.AbstractBeanDefinition = org.springframework.data.repository.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; org.springframework.data.repository.config.AbstractBeanDefinition . setSource ( java.lang.Object ) ; BeanDefinitionBuilder org.springframework.data.repository.config.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( PropertiesBasedNamedQueries .class ) ; org.springframework.data.repository.config.BeanDefinitionBuilder . addConstructorArgValue ( org.springframework.data.repository.config.AbstractBeanDefinition ) ; AbstractBeanDefinition org.springframework.data.repository.config.AbstractBeanDefinition = org.springframework.data.repository.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; org.springframework.data.repository.config.AbstractBeanDefinition . setSource ( java.lang.Object ) ; return org.springframework.data.repository.config.AbstractBeanDefinition ; }  <METHOD_END>
