<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ( ) ; java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> < ConstraintViolation < org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson > > java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> = org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> . size ( ) ) ; for ( ConstraintViolation < org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson > org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson> : java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> ) { java.lang.String java.lang.String = org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson> . getPropertyPath ( ) . toString ( ) ; if ( STRING . boolean ( java.lang.String ) || STRING . boolean ( java.lang.String ) ) { assertTrue ( org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson> . getConstraintDescriptor ( ) . getAnnotation ( ) instanceof NotNull ) ; } else { fail ( STRING + java.lang.String + STRING ) ; } } org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . destroy ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . setProviderClass ( HibernateValidator .class ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ( ) ; java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> < ConstraintViolation < org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson > > java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> = org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> . size ( ) ) ; for ( ConstraintViolation < org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson > org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson> : java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> ) { java.lang.String java.lang.String = org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson> . getPropertyPath ( ) . toString ( ) ; if ( STRING . boolean ( java.lang.String ) || STRING . boolean ( java.lang.String ) ) { assertTrue ( org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson> . getConstraintDescriptor ( ) . getAnnotation ( ) instanceof NotNull ) ; } else { fail ( STRING + java.lang.String + STRING ) ; } } org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . destroy ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . void ( STRING ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress ( ) . void ( STRING ) ; java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> < ConstraintViolation < org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson > > java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> = org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> . size ( ) ) ; java.util.Iterator<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> < ConstraintViolation < org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson > > java.util.Iterator<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> = java.util.Set<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> . iterator ( ) ; ConstraintViolation < ? > org.springframework.validation.beanvalidation.ConstraintViolation<?> = java.util.Iterator<org.springframework.validation.beanvalidation.ConstraintViolation<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson>> . next ( ) ; assertEquals ( STRING , org.springframework.validation.beanvalidation.ConstraintViolation<> . getPropertyPath ( ) . toString ( ) ) ; assertTrue ( org.springframework.validation.beanvalidation.ConstraintViolation<> . getConstraintDescriptor ( ) . getAnnotation ( ) instanceof org.springframework.validation.beanvalidation.ValidatorFactoryTests.NameAddressValid ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . void ( STRING ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress ( ) . void ( STRING ) ; BeanPropertyBindingResult org.springframework.validation.beanvalidation.BeanPropertyBindingResult = new BeanPropertyBindingResult ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , STRING ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , org.springframework.validation.beanvalidation.BeanPropertyBindingResult ) ; assertEquals ( NUMBER , org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getErrorCount ( ) ) ; assertThat ( STRING , org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getFieldError ( STRING ) . getRejectedValue ( ) , instanceOf ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ( ) ; BeanPropertyBindingResult org.springframework.validation.beanvalidation.BeanPropertyBindingResult = new BeanPropertyBindingResult ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , STRING ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , org.springframework.validation.beanvalidation.BeanPropertyBindingResult ) ; assertEquals ( NUMBER , org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getErrorCount ( ) ) ; FieldError org.springframework.validation.beanvalidation.FieldError = org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getFieldError ( STRING ) ; assertEquals ( STRING , org.springframework.validation.beanvalidation.FieldError . getField ( ) ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List ( org.springframework.validation.beanvalidation.FieldError . getCodes ( ) ) ; assertEquals ( NUMBER , java.util.List<java.lang.String> . int ( ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; org.springframework.validation.beanvalidation.FieldError = org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getFieldError ( STRING ) ; assertEquals ( STRING , org.springframework.validation.beanvalidation.FieldError . getField ( ) ) ; java.util.List<java.lang.String> = java.util.Arrays . java.util.List ( org.springframework.validation.beanvalidation.FieldError . getCodes ( ) ) ; assertEquals ( NUMBER , java.util.List<java.lang.String> . int ( ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . void ( STRING ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress ( ) . void ( STRING ) ; BeanPropertyBindingResult org.springframework.validation.beanvalidation.BeanPropertyBindingResult = new BeanPropertyBindingResult ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , STRING ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , org.springframework.validation.beanvalidation.BeanPropertyBindingResult ) ; assertEquals ( NUMBER , org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getErrorCount ( ) ) ; ObjectError org.springframework.validation.beanvalidation.ObjectError = org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getGlobalError ( ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List ( org.springframework.validation.beanvalidation.ObjectError . getCodes ( ) ) ; assertEquals ( NUMBER , java.util.List<java.lang.String> . int ( ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ConfigurableApplicationContext org.springframework.validation.beanvalidation.ConfigurableApplicationContext = new AnnotationConfigApplicationContext ( LocalValidatorFactoryBean .class ) ; LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = org.springframework.validation.beanvalidation.ConfigurableApplicationContext . getBean ( LocalValidatorFactoryBean .class ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . boolean = true ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . void ( STRING ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress ( ) . void ( STRING ) ; BeanPropertyBindingResult org.springframework.validation.beanvalidation.BeanPropertyBindingResult = new BeanPropertyBindingResult ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , STRING ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , org.springframework.validation.beanvalidation.BeanPropertyBindingResult ) ; assertEquals ( NUMBER , org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getErrorCount ( ) ) ; ObjectError org.springframework.validation.beanvalidation.ObjectError = org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getGlobalError ( ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List ( org.springframework.validation.beanvalidation.ObjectError . getCodes ( ) ) ; assertEquals ( NUMBER , java.util.List<java.lang.String> . int ( ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<java.lang.String> . boolean ( STRING ) ) ; org.springframework.validation.beanvalidation.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . java.util.List<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> ( ) . boolean ( new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress ( ) ) ; BeanPropertyBindingResult org.springframework.validation.beanvalidation.BeanPropertyBindingResult = new BeanPropertyBindingResult ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , STRING ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , org.springframework.validation.beanvalidation.BeanPropertyBindingResult ) ; assertEquals ( NUMBER , org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getErrorCount ( ) ) ; FieldError org.springframework.validation.beanvalidation.FieldError = org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getFieldError ( STRING ) ; assertEquals ( STRING , org.springframework.validation.beanvalidation.FieldError . getField ( ) ) ; org.springframework.validation.beanvalidation.FieldError = org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getFieldError ( STRING ) ; assertEquals ( STRING , org.springframework.validation.beanvalidation.FieldError . getField ( ) ) ; org.springframework.validation.beanvalidation.FieldError = org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getFieldError ( STRING ) ; assertEquals ( STRING , org.springframework.validation.beanvalidation.FieldError . getField ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . java.util.Set<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> ( ) . boolean ( new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress ( ) ) ; BeanPropertyBindingResult org.springframework.validation.beanvalidation.BeanPropertyBindingResult = new BeanPropertyBindingResult ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , STRING ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , org.springframework.validation.beanvalidation.BeanPropertyBindingResult ) ; assertEquals ( NUMBER , org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getErrorCount ( ) ) ; FieldError org.springframework.validation.beanvalidation.FieldError = org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getFieldError ( STRING ) ; assertEquals ( STRING , org.springframework.validation.beanvalidation.FieldError . getField ( ) ) ; org.springframework.validation.beanvalidation.FieldError = org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getFieldError ( STRING ) ; assertEquals ( STRING , org.springframework.validation.beanvalidation.FieldError . getField ( ) ) ; org.springframework.validation.beanvalidation.FieldError = org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getFieldError ( STRING ) ; assertEquals ( STRING , org.springframework.validation.beanvalidation.FieldError . getField ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.MainBean org.springframework.validation.beanvalidation.ValidatorFactoryTests.MainBean = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.MainBean ( ) ; Errors org.springframework.validation.beanvalidation.Errors = new BeanPropertyBindingResult ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.MainBean , STRING ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.MainBean , org.springframework.validation.beanvalidation.Errors ) ; java.lang.Object java.lang.Object = org.springframework.validation.beanvalidation.Errors . getFieldValue ( STRING ) ; assertNull ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.MainBeanWithOptional org.springframework.validation.beanvalidation.ValidatorFactoryTests.MainBeanWithOptional = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.MainBeanWithOptional ( ) ; Errors org.springframework.validation.beanvalidation.Errors = new BeanPropertyBindingResult ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.MainBeanWithOptional , STRING ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.MainBeanWithOptional , org.springframework.validation.beanvalidation.Errors ) ; java.lang.Object java.lang.Object = org.springframework.validation.beanvalidation.Errors . getFieldValue ( STRING ) ; assertNull ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { LocalValidatorFactoryBean org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new LocalValidatorFactoryBean ( ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . afterPropertiesSet ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ListContainer org.springframework.validation.beanvalidation.ValidatorFactoryTests.ListContainer = new org.springframework.validation.beanvalidation.ValidatorFactoryTests.ListContainer ( ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ListContainer . void ( STRING ) ; org.springframework.validation.beanvalidation.ValidatorFactoryTests.ListContainer . void ( STRING ) ; BeanPropertyBindingResult org.springframework.validation.beanvalidation.BeanPropertyBindingResult = new BeanPropertyBindingResult ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ListContainer , STRING ) ; org.springframework.validation.beanvalidation.BeanPropertyBindingResult . initConversion ( new DefaultConversionService ( ) ) ; org.springframework.validation.beanvalidation.LocalValidatorFactoryBean . validate ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ListContainer , org.springframework.validation.beanvalidation.BeanPropertyBindingResult ) ; FieldError org.springframework.validation.beanvalidation.FieldError = org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getFieldError ( STRING ) ; assertEquals ( STRING , org.springframework.validation.beanvalidation.BeanPropertyBindingResult . getFieldValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress ( ) { return org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress ) { this . org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress = org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> < org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress > java.util.List<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> ( ) { return java.util.List<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> < org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress > java.util.List<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> ) { this . java.util.List<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> = java.util.List<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> ; }  <METHOD_END>
<METHOD_START> public java.util.Set<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> < org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress > java.util.Set<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> ( ) { return java.util.Set<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Set<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> < org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress > java.util.Set<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> ) { this . java.util.Set<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> = java.util.Set<org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress> ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.NameAddressValid org.springframework.validation.beanvalidation.ValidatorFactoryTests.NameAddressValid ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson , ConstraintValidatorContext org.springframework.validation.beanvalidation.ConstraintValidatorContext ) { if ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . boolean ) { assertNotNull ( this . org.springframework.validation.beanvalidation.Environment ) ; } boolean boolean = ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . java.lang.String == null || ! org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidAddress . java.lang.String . boolean ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . java.lang.String ) ) ; if ( ! boolean && STRING . boolean ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.ValidPerson . java.lang.String ) ) { org.springframework.validation.beanvalidation.ConstraintValidatorContext . buildConstraintViolationWithTemplate ( org.springframework.validation.beanvalidation.ConstraintValidatorContext . getDefaultConstraintMessageTemplate ( ) ) . addPropertyNode ( STRING ) . addConstraintViolation ( ) . disableDefaultConstraintViolation ( ) ; } return boolean ; }  <METHOD_END>
<METHOD_START> public org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerBean org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerBean ( ) { return org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerBean ; }  <METHOD_END>
<METHOD_START> public java.util.Optional<org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerBean> < org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerBean > java.util.Optional<org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerBean> ( ) { return java.util.Optional . java.util.Optional<org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerBean> ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerBean ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerValid org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerValid ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerBean org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerBean , ConstraintValidatorContext org.springframework.validation.beanvalidation.ConstraintValidatorContext ) { org.springframework.validation.beanvalidation.ConstraintValidatorContext . disableDefaultConstraintViolation ( ) ; if ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.InnerBean . java.lang.String ( ) == null ) { org.springframework.validation.beanvalidation.ConstraintValidatorContext . buildConstraintViolationWithTemplate ( STRING ) . addPropertyNode ( STRING ) . addConstraintViolation ( ) ; return false ; } return true ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.springframework.validation.beanvalidation.ValidatorFactoryTests.NotXList org.springframework.validation.beanvalidation.ValidatorFactoryTests.NotXList ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , ConstraintValidatorContext org.springframework.validation.beanvalidation.ConstraintValidatorContext ) { org.springframework.validation.beanvalidation.ConstraintValidatorContext . disableDefaultConstraintViolation ( ) ; boolean boolean = true ; for ( int int = NUMBER ; int < java.util.List<java.lang.String> . int ( ) ; int ++ ) { if ( STRING . boolean ( java.util.List<java.lang.String> . java.lang.String ( int ) ) ) { org.springframework.validation.beanvalidation.ConstraintValidatorContext . buildConstraintViolationWithTemplate ( org.springframework.validation.beanvalidation.ConstraintValidatorContext . getDefaultConstraintMessageTemplate ( ) ) . addBeanNode ( ) . inIterable ( ) . atIndex ( int ) . addConstraintViolation ( ) ; boolean = false ; } } return boolean ; }  <METHOD_END>
