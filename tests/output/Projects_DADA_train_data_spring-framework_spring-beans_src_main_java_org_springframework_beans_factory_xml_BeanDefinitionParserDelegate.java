<METHOD_START> public void ( XmlReaderContext org.springframework.beans.factory.xml.XmlReaderContext ) { Assert . notNull ( org.springframework.beans.factory.xml.XmlReaderContext , STRING ) ; this . org.springframework.beans.factory.xml.XmlReaderContext = org.springframework.beans.factory.xml.XmlReaderContext ; }  <METHOD_END>
<METHOD_START> public final org.springframework.beans.factory.xml.XmlReaderContext org.springframework.beans.factory.xml.XmlReaderContext ( ) { return this . org.springframework.beans.factory.xml.XmlReaderContext ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element ) { return this . org.springframework.beans.factory.xml.XmlReaderContext . extractSource ( org.w3c.dom.Element ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , org.w3c.dom.Node org.w3c.dom.Node ) { this . org.springframework.beans.factory.xml.XmlReaderContext . error ( java.lang.String , org.w3c.dom.Node , this . org.springframework.beans.factory.xml.ParseState . snapshot ( ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , org.w3c.dom.Element org.w3c.dom.Element ) { this . org.springframework.beans.factory.xml.XmlReaderContext . error ( java.lang.String , org.w3c.dom.Element , this . org.springframework.beans.factory.xml.ParseState . snapshot ( ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , org.w3c.dom.Element org.w3c.dom.Element , java.lang.Throwable java.lang.Throwable ) { this . org.springframework.beans.factory.xml.XmlReaderContext . error ( java.lang.String , org.w3c.dom.Element , this . org.springframework.beans.factory.xml.ParseState . snapshot ( ) , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element ) { void ( org.w3c.dom.Element , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinitionParserDelegate org.springframework.beans.factory.xml.BeanDefinitionParserDelegate ) { void ( this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition , ( org.springframework.beans.factory.xml.BeanDefinitionParserDelegate != null ? org.springframework.beans.factory.xml.BeanDefinitionParserDelegate . org.springframework.beans.factory.xml.DocumentDefaultsDefinition : null ) , org.w3c.dom.Element ) ; this . org.springframework.beans.factory.xml.XmlReaderContext . fireDefaultsRegistered ( this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition ) ; }  <METHOD_END>
<METHOD_START> protected void void ( DocumentDefaultsDefinition org.springframework.beans.factory.xml.DocumentDefaultsDefinition , DocumentDefaultsDefinition org.springframework.beans.factory.xml.DocumentDefaultsDefinition , org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = ( org.springframework.beans.factory.xml.DocumentDefaultsDefinition != null ? org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getLazyInit ( ) : java.lang.String ) ; } org.springframework.beans.factory.xml.DocumentDefaultsDefinition . setLazyInit ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = ( org.springframework.beans.factory.xml.DocumentDefaultsDefinition != null ? org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getMerge ( ) : java.lang.String ) ; } org.springframework.beans.factory.xml.DocumentDefaultsDefinition . setMerge ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = ( org.springframework.beans.factory.xml.DocumentDefaultsDefinition != null ? org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getAutowire ( ) : java.lang.String ) ; } org.springframework.beans.factory.xml.DocumentDefaultsDefinition . setAutowire ( java.lang.String ) ; if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { org.springframework.beans.factory.xml.DocumentDefaultsDefinition . setAutowireCandidates ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) ) ; } else if ( org.springframework.beans.factory.xml.DocumentDefaultsDefinition != null ) { org.springframework.beans.factory.xml.DocumentDefaultsDefinition . setAutowireCandidates ( org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getAutowireCandidates ( ) ) ; } if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { org.springframework.beans.factory.xml.DocumentDefaultsDefinition . setInitMethod ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) ) ; } else if ( org.springframework.beans.factory.xml.DocumentDefaultsDefinition != null ) { org.springframework.beans.factory.xml.DocumentDefaultsDefinition . setInitMethod ( org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getInitMethod ( ) ) ; } if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { org.springframework.beans.factory.xml.DocumentDefaultsDefinition . setDestroyMethod ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) ) ; } else if ( org.springframework.beans.factory.xml.DocumentDefaultsDefinition != null ) { org.springframework.beans.factory.xml.DocumentDefaultsDefinition . setDestroyMethod ( org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getDestroyMethod ( ) ) ; } org.springframework.beans.factory.xml.DocumentDefaultsDefinition . setSource ( this . org.springframework.beans.factory.xml.XmlReaderContext . extractSource ( org.w3c.dom.Element ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.xml.DocumentDefaultsDefinition org.springframework.beans.factory.xml.DocumentDefaultsDefinition ( ) { return this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.xml.BeanDefinitionDefaults org.springframework.beans.factory.xml.BeanDefinitionDefaults ( ) { BeanDefinitionDefaults org.springframework.beans.factory.xml.BeanDefinitionDefaults = new BeanDefinitionDefaults ( ) ; org.springframework.beans.factory.xml.BeanDefinitionDefaults . setLazyInit ( STRING . boolean ( this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getLazyInit ( ) ) ) ; org.springframework.beans.factory.xml.BeanDefinitionDefaults . setAutowireMode ( this . int ( java.lang.String ) ) ; org.springframework.beans.factory.xml.BeanDefinitionDefaults . setInitMethodName ( this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getInitMethod ( ) ) ; org.springframework.beans.factory.xml.BeanDefinitionDefaults . setDestroyMethodName ( this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getDestroyMethod ( ) ) ; return org.springframework.beans.factory.xml.BeanDefinitionDefaults ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { java.lang.String java.lang.String = this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getAutowireCandidates ( ) ; return ( java.lang.String != null ? StringUtils . commaDelimitedListToStringArray ( java.lang.String ) : null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.xml.BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Element org.w3c.dom.Element ) { return org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Element , null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.xml.BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.String [] java.lang.String[] = StringUtils . tokenizeToStringArray ( java.lang.String , java.lang.String ) ; java.util.List<java.lang.String> . boolean ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; } java.lang.String java.lang.String = java.lang.String ; if ( ! StringUtils . hasText ( java.lang.String ) && ! java.util.List<java.lang.String> . boolean ( ) ) { java.lang.String = java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; if ( org.springframework.beans.factory.xml.Log . isDebugEnabled ( ) ) { org.springframework.beans.factory.xml.Log . debug ( STRING + java.lang.String + STRING + java.util.List<java.lang.String> + STRING ) ; } } if ( org.springframework.beans.factory.xml.BeanDefinition == null ) { void ( java.lang.String , java.util.List<java.lang.String> , org.w3c.dom.Element ) ; } AbstractBeanDefinition org.springframework.beans.factory.xml.AbstractBeanDefinition = org.springframework.beans.factory.xml.AbstractBeanDefinition ( org.w3c.dom.Element , java.lang.String , org.springframework.beans.factory.xml.BeanDefinition ) ; if ( org.springframework.beans.factory.xml.AbstractBeanDefinition != null ) { if ( ! StringUtils . hasText ( java.lang.String ) ) { try { if ( org.springframework.beans.factory.xml.BeanDefinition != null ) { java.lang.String = BeanDefinitionReaderUtils . generateBeanName ( org.springframework.beans.factory.xml.AbstractBeanDefinition , this . org.springframework.beans.factory.xml.XmlReaderContext . getRegistry ( ) , true ) ; } else { java.lang.String = this . org.springframework.beans.factory.xml.XmlReaderContext . generateBeanName ( org.springframework.beans.factory.xml.AbstractBeanDefinition ) ; java.lang.String java.lang.String = org.springframework.beans.factory.xml.AbstractBeanDefinition . getBeanClassName ( ) ; if ( java.lang.String != null && java.lang.String . boolean ( java.lang.String ) && java.lang.String . int ( ) > java.lang.String . int ( ) && ! this . org.springframework.beans.factory.xml.XmlReaderContext . getRegistry ( ) . isBeanNameInUse ( java.lang.String ) ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } if ( org.springframework.beans.factory.xml.Log . isDebugEnabled ( ) ) { org.springframework.beans.factory.xml.Log . debug ( STRING + STRING + java.lang.String + STRING ) ; } } catch ( java.lang.Exception java.lang.Exception ) { void ( java.lang.Exception . java.lang.String ( ) , org.w3c.dom.Element ) ; return null ; } } java.lang.String [] java.lang.String[] = StringUtils . toStringArray ( java.util.List<java.lang.String> ) ; return new BeanDefinitionHolder ( org.springframework.beans.factory.xml.AbstractBeanDefinition , java.lang.String , java.lang.String[] ) ; } return null ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = null ; if ( StringUtils . hasText ( java.lang.String ) && this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ) { java.lang.String = java.lang.String ; } if ( java.lang.String == null ) { java.lang.String = CollectionUtils . findFirstMatch ( this . java.util.Set<java.lang.String> , java.util.List<java.lang.String> ) ; } if ( java.lang.String != null ) { void ( STRING + java.lang.String + STRING , org.w3c.dom.Element ) ; } this . java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; this . java.util.Set<java.lang.String> . boolean ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.xml.AbstractBeanDefinition org.springframework.beans.factory.xml.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { this . org.springframework.beans.factory.xml.ParseState . push ( new BeanEntry ( java.lang.String ) ) ; java.lang.String java.lang.String = null ; if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) . java.lang.String ( ) ; } try { java.lang.String java.lang.String = null ; if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; } AbstractBeanDefinition org.springframework.beans.factory.xml.AbstractBeanDefinition = org.springframework.beans.factory.xml.AbstractBeanDefinition ( java.lang.String , java.lang.String ) ; org.springframework.beans.factory.xml.AbstractBeanDefinition ( org.w3c.dom.Element , java.lang.String , org.springframework.beans.factory.xml.BeanDefinition , org.springframework.beans.factory.xml.AbstractBeanDefinition ) ; org.springframework.beans.factory.xml.AbstractBeanDefinition . setDescription ( DomUtils . getChildElementValueByTagName ( org.w3c.dom.Element , java.lang.String ) ) ; void ( org.w3c.dom.Element , org.springframework.beans.factory.xml.AbstractBeanDefinition ) ; void ( org.w3c.dom.Element , org.springframework.beans.factory.xml.AbstractBeanDefinition . getMethodOverrides ( ) ) ; void ( org.w3c.dom.Element , org.springframework.beans.factory.xml.AbstractBeanDefinition . getMethodOverrides ( ) ) ; void ( org.w3c.dom.Element , org.springframework.beans.factory.xml.AbstractBeanDefinition ) ; void ( org.w3c.dom.Element , org.springframework.beans.factory.xml.AbstractBeanDefinition ) ; void ( org.w3c.dom.Element , org.springframework.beans.factory.xml.AbstractBeanDefinition ) ; org.springframework.beans.factory.xml.AbstractBeanDefinition . setResource ( this . org.springframework.beans.factory.xml.XmlReaderContext . getResource ( ) ) ; org.springframework.beans.factory.xml.AbstractBeanDefinition . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; return org.springframework.beans.factory.xml.AbstractBeanDefinition ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { void ( STRING + java.lang.String + STRING , org.w3c.dom.Element , java.lang.ClassNotFoundException ) ; } catch ( java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError ) { void ( STRING + java.lang.String + STRING , org.w3c.dom.Element , java.lang.NoClassDefFoundError ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { void ( STRING , org.w3c.dom.Element , java.lang.Throwable ) ; } finally { this . org.springframework.beans.factory.xml.ParseState . pop ( ) ; } return null ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.xml.AbstractBeanDefinition org.springframework.beans.factory.xml.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition , AbstractBeanDefinition org.springframework.beans.factory.xml.AbstractBeanDefinition ) { if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { void ( STRING , org.w3c.dom.Element ) ; } else if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { org.springframework.beans.factory.xml.AbstractBeanDefinition . setScope ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) ) ; } else if ( org.springframework.beans.factory.xml.BeanDefinition != null ) { org.springframework.beans.factory.xml.AbstractBeanDefinition . setScope ( org.springframework.beans.factory.xml.BeanDefinition . getScope ( ) ) ; } if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { org.springframework.beans.factory.xml.AbstractBeanDefinition . setAbstract ( java.lang.String . boolean ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) ) ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getLazyInit ( ) ; } org.springframework.beans.factory.xml.AbstractBeanDefinition . setLazyInit ( java.lang.String . boolean ( java.lang.String ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; org.springframework.beans.factory.xml.AbstractBeanDefinition . setAutowireMode ( int ( java.lang.String ) ) ; if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; org.springframework.beans.factory.xml.AbstractBeanDefinition . setDependsOn ( StringUtils . tokenizeToStringArray ( java.lang.String , java.lang.String ) ) ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( STRING . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) ) { java.lang.String java.lang.String = this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getAutowireCandidates ( ) ; if ( java.lang.String != null ) { java.lang.String [] java.lang.String[] = StringUtils . commaDelimitedListToStringArray ( java.lang.String ) ; org.springframework.beans.factory.xml.AbstractBeanDefinition . setAutowireCandidate ( PatternMatchUtils . simpleMatch ( java.lang.String[] , java.lang.String ) ) ; } } else { org.springframework.beans.factory.xml.AbstractBeanDefinition . setAutowireCandidate ( java.lang.String . boolean ( java.lang.String ) ) ; } if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { org.springframework.beans.factory.xml.AbstractBeanDefinition . setPrimary ( java.lang.String . boolean ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) ) ) ; } if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! STRING . boolean ( java.lang.String ) ) { org.springframework.beans.factory.xml.AbstractBeanDefinition . setInitMethodName ( java.lang.String ) ; } } else { if ( this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getInitMethod ( ) != null ) { org.springframework.beans.factory.xml.AbstractBeanDefinition . setInitMethodName ( this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getInitMethod ( ) ) ; org.springframework.beans.factory.xml.AbstractBeanDefinition . setEnforceInitMethod ( false ) ; } } if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; org.springframework.beans.factory.xml.AbstractBeanDefinition . setDestroyMethodName ( java.lang.String ) ; } else { if ( this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getDestroyMethod ( ) != null ) { org.springframework.beans.factory.xml.AbstractBeanDefinition . setDestroyMethodName ( this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getDestroyMethod ( ) ) ; org.springframework.beans.factory.xml.AbstractBeanDefinition . setEnforceDestroyMethod ( false ) ; } } if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { org.springframework.beans.factory.xml.AbstractBeanDefinition . setFactoryMethodName ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) ) ; } if ( org.w3c.dom.Element . boolean ( java.lang.String ) ) { org.springframework.beans.factory.xml.AbstractBeanDefinition . setFactoryBeanName ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) ) ; } return org.springframework.beans.factory.xml.AbstractBeanDefinition ; }  <METHOD_END>
<METHOD_START> protected org.springframework.beans.factory.xml.AbstractBeanDefinition org.springframework.beans.factory.xml.AbstractBeanDefinition ( java.lang.String java.lang.String , java.lang.String java.lang.String )			throws java.lang.ClassNotFoundException { return BeanDefinitionReaderUtils . createBeanDefinition ( java.lang.String , java.lang.String , this . org.springframework.beans.factory.xml.XmlReaderContext . getBeanClassLoader ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanMetadataAttributeAccessor org.springframework.beans.factory.xml.BeanMetadataAttributeAccessor ) { org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( boolean ( org.w3c.dom.Node ) && boolean ( org.w3c.dom.Node , java.lang.String ) ) { org.w3c.dom.Element org.w3c.dom.Element = ( org.w3c.dom.Element ) org.w3c.dom.Node ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; BeanMetadataAttribute org.springframework.beans.factory.xml.BeanMetadataAttribute = new BeanMetadataAttribute ( java.lang.String , java.lang.String ) ; org.springframework.beans.factory.xml.BeanMetadataAttribute . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.BeanMetadataAttributeAccessor . addMetadataAttribute ( org.springframework.beans.factory.xml.BeanMetadataAttribute ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public int int ( java.lang.String java.lang.String ) { java.lang.String java.lang.String = java.lang.String ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getAutowire ( ) ; } int int = AbstractBeanDefinition . AUTOWIRE_NO ; if ( java.lang.String . boolean ( java.lang.String ) ) { int = AbstractBeanDefinition . AUTOWIRE_BY_NAME ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { int = AbstractBeanDefinition . AUTOWIRE_BY_TYPE ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { int = AbstractBeanDefinition . AUTOWIRE_CONSTRUCTOR ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { int = AbstractBeanDefinition . AUTOWIRE_AUTODETECT ; } return int ; }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( boolean ( org.w3c.dom.Node ) && boolean ( org.w3c.dom.Node , java.lang.String ) ) { void ( ( org.w3c.dom.Element ) org.w3c.dom.Node , org.springframework.beans.factory.xml.BeanDefinition ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( boolean ( org.w3c.dom.Node ) && boolean ( org.w3c.dom.Node , java.lang.String ) ) { void ( ( org.w3c.dom.Element ) org.w3c.dom.Node , org.springframework.beans.factory.xml.BeanDefinition ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element , AbstractBeanDefinition org.springframework.beans.factory.xml.AbstractBeanDefinition ) { org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( boolean ( org.w3c.dom.Node ) && boolean ( org.w3c.dom.Node , java.lang.String ) ) { void ( ( org.w3c.dom.Element ) org.w3c.dom.Node , org.springframework.beans.factory.xml.AbstractBeanDefinition ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element , MethodOverrides org.springframework.beans.factory.xml.MethodOverrides ) { org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( boolean ( org.w3c.dom.Node ) && boolean ( org.w3c.dom.Node , java.lang.String ) ) { org.w3c.dom.Element org.w3c.dom.Element = ( org.w3c.dom.Element ) org.w3c.dom.Node ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; LookupOverride org.springframework.beans.factory.xml.LookupOverride = new LookupOverride ( java.lang.String , java.lang.String ) ; org.springframework.beans.factory.xml.LookupOverride . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.MethodOverrides . addOverride ( org.springframework.beans.factory.xml.LookupOverride ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element , MethodOverrides org.springframework.beans.factory.xml.MethodOverrides ) { org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( boolean ( org.w3c.dom.Node ) && boolean ( org.w3c.dom.Node , java.lang.String ) ) { org.w3c.dom.Element org.w3c.dom.Element = ( org.w3c.dom.Element ) org.w3c.dom.Node ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; ReplaceOverride org.springframework.beans.factory.xml.ReplaceOverride = new ReplaceOverride ( java.lang.String , java.lang.String ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String = ( StringUtils . hasText ( java.lang.String ) ? java.lang.String : DomUtils . getTextValue ( org.w3c.dom.Element ) ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.beans.factory.xml.ReplaceOverride . addTypeIdentifier ( java.lang.String ) ; } } org.springframework.beans.factory.xml.ReplaceOverride . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.MethodOverrides . addOverride ( org.springframework.beans.factory.xml.ReplaceOverride ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { try { int int = java.lang.Integer . int ( java.lang.String ) ; if ( int < NUMBER ) { void ( STRING , org.w3c.dom.Element ) ; } else { try { this . org.springframework.beans.factory.xml.ParseState . push ( new ConstructorArgumentEntry ( int ) ) ; java.lang.Object java.lang.Object = java.lang.Object ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition , null ) ; ConstructorArgumentValues . ConstructorArgumentValues ConstructorArgumentValues.ValueHolder = new ConstructorArgumentValues . ConstructorArgumentValues ( java.lang.Object ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { ConstructorArgumentValues.ValueHolder . setType ( java.lang.String ) ; } if ( StringUtils . hasLength ( java.lang.String ) ) { ConstructorArgumentValues.ValueHolder . setName ( java.lang.String ) ; } ConstructorArgumentValues.ValueHolder . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; if ( org.springframework.beans.factory.xml.BeanDefinition . getConstructorArgumentValues ( ) . hasIndexedArgumentValue ( int ) ) { void ( STRING + int , org.w3c.dom.Element ) ; } else { org.springframework.beans.factory.xml.BeanDefinition . getConstructorArgumentValues ( ) . addIndexedArgumentValue ( int , ConstructorArgumentValues.ValueHolder ) ; } } finally { this . org.springframework.beans.factory.xml.ParseState . pop ( ) ; } } } catch ( java.lang.NumberFormatException java.lang.NumberFormatException ) { void ( STRING , org.w3c.dom.Element ) ; } } else { try { this . org.springframework.beans.factory.xml.ParseState . push ( new ConstructorArgumentEntry ( ) ) ; java.lang.Object java.lang.Object = java.lang.Object ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition , null ) ; ConstructorArgumentValues . ConstructorArgumentValues ConstructorArgumentValues.ValueHolder = new ConstructorArgumentValues . ConstructorArgumentValues ( java.lang.Object ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { ConstructorArgumentValues.ValueHolder . setType ( java.lang.String ) ; } if ( StringUtils . hasLength ( java.lang.String ) ) { ConstructorArgumentValues.ValueHolder . setName ( java.lang.String ) ; } ConstructorArgumentValues.ValueHolder . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.BeanDefinition . getConstructorArgumentValues ( ) . addGenericArgumentValue ( ConstructorArgumentValues.ValueHolder ) ; } finally { this . org.springframework.beans.factory.xml.ParseState . pop ( ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! StringUtils . hasLength ( java.lang.String ) ) { void ( STRING , org.w3c.dom.Element ) ; return; } this . org.springframework.beans.factory.xml.ParseState . push ( new PropertyEntry ( java.lang.String ) ) ; try { if ( org.springframework.beans.factory.xml.BeanDefinition . getPropertyValues ( ) . contains ( java.lang.String ) ) { void ( STRING + java.lang.String + STRING , org.w3c.dom.Element ) ; return; } java.lang.Object java.lang.Object = java.lang.Object ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition , java.lang.String ) ; PropertyValue org.springframework.beans.factory.xml.PropertyValue = new PropertyValue ( java.lang.String , java.lang.Object ) ; void ( org.w3c.dom.Element , org.springframework.beans.factory.xml.PropertyValue ) ; org.springframework.beans.factory.xml.PropertyValue . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.BeanDefinition . getPropertyValues ( ) . addPropertyValue ( org.springframework.beans.factory.xml.PropertyValue ) ; } finally { this . org.springframework.beans.factory.xml.ParseState . pop ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element , AbstractBeanDefinition org.springframework.beans.factory.xml.AbstractBeanDefinition ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! StringUtils . hasLength ( java.lang.String ) ) { void ( STRING , org.w3c.dom.Element ) ; return; } this . org.springframework.beans.factory.xml.ParseState . push ( new QualifierEntry ( java.lang.String ) ) ; try { AutowireCandidateQualifier org.springframework.beans.factory.xml.AutowireCandidateQualifier = new AutowireCandidateQualifier ( java.lang.String ) ; org.springframework.beans.factory.xml.AutowireCandidateQualifier . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { org.springframework.beans.factory.xml.AutowireCandidateQualifier . setAttribute ( AutowireCandidateQualifier . VALUE_KEY , java.lang.String ) ; } org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( boolean ( org.w3c.dom.Node ) && boolean ( org.w3c.dom.Node , java.lang.String ) ) { org.w3c.dom.Element org.w3c.dom.Element = ( org.w3c.dom.Element ) org.w3c.dom.Node ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( StringUtils . hasLength ( java.lang.String ) && StringUtils . hasLength ( java.lang.String ) ) { BeanMetadataAttribute org.springframework.beans.factory.xml.BeanMetadataAttribute = new BeanMetadataAttribute ( java.lang.String , java.lang.String ) ; org.springframework.beans.factory.xml.BeanMetadataAttribute . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.AutowireCandidateQualifier . addMetadataAttribute ( org.springframework.beans.factory.xml.BeanMetadataAttribute ) ; } else { void ( STRING , org.w3c.dom.Element ) ; return; } } } org.springframework.beans.factory.xml.AbstractBeanDefinition . addQualifier ( org.springframework.beans.factory.xml.AutowireCandidateQualifier ) ; } finally { this . org.springframework.beans.factory.xml.ParseState . pop ( ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition , java.lang.String java.lang.String ) { java.lang.String java.lang.String = ( java.lang.String != null ) ? STRING + java.lang.String + STRING : STRING ; org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; org.w3c.dom.Element org.w3c.dom.Element = null ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( org.w3c.dom.Node instanceof org.w3c.dom.Element && ! boolean ( org.w3c.dom.Node , java.lang.String ) && ! boolean ( org.w3c.dom.Node , java.lang.String ) ) { if ( org.w3c.dom.Element != null ) { void ( java.lang.String + STRING , org.w3c.dom.Element ) ; } else { org.w3c.dom.Element = ( org.w3c.dom.Element ) org.w3c.dom.Node ; } } } boolean boolean = org.w3c.dom.Element . boolean ( java.lang.String ) ; boolean boolean = org.w3c.dom.Element . boolean ( java.lang.String ) ; if ( ( boolean && boolean ) || ( ( boolean || boolean ) && org.w3c.dom.Element != null ) ) { void ( java.lang.String + STRING , org.w3c.dom.Element ) ; } if ( boolean ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { void ( java.lang.String + STRING , org.w3c.dom.Element ) ; } RuntimeBeanReference org.springframework.beans.factory.xml.RuntimeBeanReference = new RuntimeBeanReference ( java.lang.String ) ; org.springframework.beans.factory.xml.RuntimeBeanReference . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; return org.springframework.beans.factory.xml.RuntimeBeanReference ; } else if ( boolean ) { TypedStringValue org.springframework.beans.factory.xml.TypedStringValue = new TypedStringValue ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) ) ; org.springframework.beans.factory.xml.TypedStringValue . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; return org.springframework.beans.factory.xml.TypedStringValue ; } else if ( org.w3c.dom.Element != null ) { return java.lang.Object ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition ) ; } else { void ( java.lang.String + STRING , org.w3c.dom.Element ) ; return null ; } }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { return java.lang.Object ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition , null ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition , java.lang.String java.lang.String ) { if ( ! boolean ( org.w3c.dom.Element ) ) { return org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition ) ; } else if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder = org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition ) ; if ( org.springframework.beans.factory.xml.BeanDefinitionHolder != null ) { org.springframework.beans.factory.xml.BeanDefinitionHolder = org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinitionHolder , org.springframework.beans.factory.xml.BeanDefinition ) ; } return org.springframework.beans.factory.xml.BeanDefinitionHolder ; } else if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; boolean boolean = false ; if ( ! StringUtils . hasLength ( java.lang.String ) ) { java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; boolean = true ; if ( ! StringUtils . hasLength ( java.lang.String ) ) { void ( STRING , org.w3c.dom.Element ) ; return null ; } } if ( ! StringUtils . hasText ( java.lang.String ) ) { void ( STRING , org.w3c.dom.Element ) ; return null ; } RuntimeBeanReference org.springframework.beans.factory.xml.RuntimeBeanReference = new RuntimeBeanReference ( java.lang.String , boolean ) ; org.springframework.beans.factory.xml.RuntimeBeanReference . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; return org.springframework.beans.factory.xml.RuntimeBeanReference ; } else if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { return java.lang.Object ( org.w3c.dom.Element ) ; } else if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { return java.lang.Object ( org.w3c.dom.Element , java.lang.String ) ; } else if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { TypedStringValue org.springframework.beans.factory.xml.TypedStringValue = new TypedStringValue ( null ) ; org.springframework.beans.factory.xml.TypedStringValue . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; return org.springframework.beans.factory.xml.TypedStringValue ; } else if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { return java.lang.Object ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition ) ; } else if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { return java.util.List<java.lang.Object> ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition ) ; } else if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { return java.util.Set<java.lang.Object> ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition ) ; } else if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { return java.util.Map<java.lang.Object,java.lang.Object> ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition ) ; } else if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { return java.util.Properties ( org.w3c.dom.Element ) ; } else { void ( STRING + org.w3c.dom.Element . java.lang.String ( ) + STRING , org.w3c.dom.Element ) ; return null ; } }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! StringUtils . hasLength ( java.lang.String ) ) { void ( STRING , org.w3c.dom.Element ) ; return null ; } if ( ! StringUtils . hasText ( java.lang.String ) ) { void ( STRING , org.w3c.dom.Element ) ; return null ; } RuntimeBeanNameReference org.springframework.beans.factory.xml.RuntimeBeanNameReference = new RuntimeBeanNameReference ( java.lang.String ) ; org.springframework.beans.factory.xml.RuntimeBeanNameReference . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; return org.springframework.beans.factory.xml.RuntimeBeanNameReference ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element , java.lang.String java.lang.String ) { java.lang.String java.lang.String = DomUtils . getTextValue ( org.w3c.dom.Element ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ; if ( ! StringUtils . hasText ( java.lang.String ) ) { java.lang.String = java.lang.String ; } try { TypedStringValue org.springframework.beans.factory.xml.TypedStringValue = org.springframework.beans.factory.xml.TypedStringValue ( java.lang.String , java.lang.String ) ; org.springframework.beans.factory.xml.TypedStringValue . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.TypedStringValue . setSpecifiedTypeName ( java.lang.String ) ; return org.springframework.beans.factory.xml.TypedStringValue ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { void ( STRING + java.lang.String + STRING , org.w3c.dom.Element , java.lang.ClassNotFoundException ) ; return java.lang.String ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.beans.factory.xml.TypedStringValue org.springframework.beans.factory.xml.TypedStringValue ( java.lang.String java.lang.String , java.lang.String java.lang.String )			throws java.lang.ClassNotFoundException { java.lang.ClassLoader java.lang.ClassLoader = this . org.springframework.beans.factory.xml.XmlReaderContext . getBeanClassLoader ( ) ; TypedStringValue org.springframework.beans.factory.xml.TypedStringValue ; if ( ! StringUtils . hasText ( java.lang.String ) ) { org.springframework.beans.factory.xml.TypedStringValue = new TypedStringValue ( java.lang.String ) ; } else if ( java.lang.ClassLoader != null ) { java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . forName ( java.lang.String , java.lang.ClassLoader ) ; org.springframework.beans.factory.xml.TypedStringValue = new TypedStringValue ( java.lang.String , java.lang.Class<> ) ; } else { org.springframework.beans.factory.xml.TypedStringValue = new TypedStringValue ( java.lang.String , java.lang.String ) ; } return org.springframework.beans.factory.xml.TypedStringValue ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; ManagedArray org.springframework.beans.factory.xml.ManagedArray = new ManagedArray ( java.lang.String , org.w3c.dom.NodeList . int ( ) ) ; org.springframework.beans.factory.xml.ManagedArray . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.ManagedArray . setElementTypeName ( java.lang.String ) ; org.springframework.beans.factory.xml.ManagedArray . setMergeEnabled ( boolean ( org.w3c.dom.Element ) ) ; void ( org.w3c.dom.NodeList , org.springframework.beans.factory.xml.ManagedArray , org.springframework.beans.factory.xml.BeanDefinition , java.lang.String ) ; return org.springframework.beans.factory.xml.ManagedArray ; }  <METHOD_END>
<METHOD_START> public java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; ManagedList < java.lang.Object > org.springframework.beans.factory.xml.ManagedList<java.lang.Object> = new ManagedList <> ( org.w3c.dom.NodeList . int ( ) ) ; org.springframework.beans.factory.xml.ManagedList<java.lang.Object> . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.ManagedList<java.lang.Object> . setElementTypeName ( java.lang.String ) ; org.springframework.beans.factory.xml.ManagedList<java.lang.Object> . setMergeEnabled ( boolean ( org.w3c.dom.Element ) ) ; void ( org.w3c.dom.NodeList , org.springframework.beans.factory.xml.ManagedList<java.lang.Object> , org.springframework.beans.factory.xml.BeanDefinition , java.lang.String ) ; return org.springframework.beans.factory.xml.ManagedList<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.lang.Object> < java.lang.Object > java.util.Set<java.lang.Object> ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; ManagedSet < java.lang.Object > org.springframework.beans.factory.xml.ManagedSet<java.lang.Object> = new ManagedSet <> ( org.w3c.dom.NodeList . int ( ) ) ; org.springframework.beans.factory.xml.ManagedSet<java.lang.Object> . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.ManagedSet<java.lang.Object> . setElementTypeName ( java.lang.String ) ; org.springframework.beans.factory.xml.ManagedSet<java.lang.Object> . setMergeEnabled ( boolean ( org.w3c.dom.Element ) ) ; void ( org.w3c.dom.NodeList , org.springframework.beans.factory.xml.ManagedSet<java.lang.Object> , org.springframework.beans.factory.xml.BeanDefinition , java.lang.String ) ; return org.springframework.beans.factory.xml.ManagedSet<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> protected void void ( org.w3c.dom.NodeList org.w3c.dom.NodeList , java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition , java.lang.String java.lang.String ) { for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( org.w3c.dom.Node instanceof org.w3c.dom.Element && ! boolean ( org.w3c.dom.Node , java.lang.String ) ) { java.util.Collection<java.lang.Object> . boolean ( java.lang.Object ( ( org.w3c.dom.Element ) org.w3c.dom.Node , org.springframework.beans.factory.xml.BeanDefinition , java.lang.String ) ) ; } } }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > java.util.Map<java.lang.Object,java.lang.Object> ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; ManagedMap < java.lang.Object , java.lang.Object > org.springframework.beans.factory.xml.ManagedMap<java.lang.Object,java.lang.Object> = new ManagedMap <> ( java.util.List<org.w3c.dom.Element> . int ( ) ) ; org.springframework.beans.factory.xml.ManagedMap<java.lang.Object,java.lang.Object> . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.ManagedMap<java.lang.Object,java.lang.Object> . setKeyTypeName ( java.lang.String ) ; org.springframework.beans.factory.xml.ManagedMap<java.lang.Object,java.lang.Object> . setValueTypeName ( java.lang.String ) ; org.springframework.beans.factory.xml.ManagedMap<java.lang.Object,java.lang.Object> . setMergeEnabled ( boolean ( org.w3c.dom.Element ) ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; org.w3c.dom.Element org.w3c.dom.Element = null ; org.w3c.dom.Element org.w3c.dom.Element = null ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( org.w3c.dom.Node instanceof org.w3c.dom.Element ) { org.w3c.dom.Element org.w3c.dom.Element = ( org.w3c.dom.Element ) org.w3c.dom.Node ; if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { if ( org.w3c.dom.Element != null ) { void ( STRING , org.w3c.dom.Element ) ; } else { org.w3c.dom.Element = org.w3c.dom.Element ; } } else { if ( boolean ( org.w3c.dom.Element , java.lang.String ) ) { } else if ( org.w3c.dom.Element != null ) { void ( STRING , org.w3c.dom.Element ) ; } else { org.w3c.dom.Element = org.w3c.dom.Element ; } } } } java.lang.Object java.lang.Object = null ; boolean boolean = org.w3c.dom.Element . boolean ( java.lang.String ) ; boolean boolean = org.w3c.dom.Element . boolean ( java.lang.String ) ; if ( ( boolean && boolean ) || ( ( boolean || boolean ) ) && org.w3c.dom.Element != null ) { void ( STRING + STRING , org.w3c.dom.Element ) ; } if ( boolean ) { java.lang.Object = java.lang.Object ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) , java.lang.String , org.w3c.dom.Element ) ; } else if ( boolean ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { void ( STRING , org.w3c.dom.Element ) ; } RuntimeBeanReference org.springframework.beans.factory.xml.RuntimeBeanReference = new RuntimeBeanReference ( java.lang.String ) ; org.springframework.beans.factory.xml.RuntimeBeanReference . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; java.lang.Object = org.springframework.beans.factory.xml.RuntimeBeanReference ; } else if ( org.w3c.dom.Element != null ) { java.lang.Object = java.lang.Object ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition , java.lang.String ) ; } else { void ( STRING , org.w3c.dom.Element ) ; } java.lang.Object java.lang.Object = null ; boolean boolean = org.w3c.dom.Element . boolean ( java.lang.String ) ; boolean boolean = org.w3c.dom.Element . boolean ( java.lang.String ) ; boolean boolean = org.w3c.dom.Element . boolean ( java.lang.String ) ; if ( ( boolean && boolean ) || ( ( boolean || boolean ) ) && org.w3c.dom.Element != null ) { void ( STRING + STRING , org.w3c.dom.Element ) ; } if ( ( boolean && boolean ) || ( boolean && ! boolean ) || ( boolean && org.w3c.dom.Element != null ) ) { void ( STRING + STRING , org.w3c.dom.Element ) ; } if ( boolean ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { java.lang.String = java.lang.String ; } java.lang.Object = java.lang.Object ( org.w3c.dom.Element . java.lang.String ( java.lang.String ) , java.lang.String , org.w3c.dom.Element ) ; } else if ( boolean ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { void ( STRING , org.w3c.dom.Element ) ; } RuntimeBeanReference org.springframework.beans.factory.xml.RuntimeBeanReference = new RuntimeBeanReference ( java.lang.String ) ; org.springframework.beans.factory.xml.RuntimeBeanReference . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; java.lang.Object = org.springframework.beans.factory.xml.RuntimeBeanReference ; } else if ( org.w3c.dom.Element != null ) { java.lang.Object = java.lang.Object ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition , java.lang.String ) ; } else { void ( STRING , org.w3c.dom.Element ) ; } org.springframework.beans.factory.xml.ManagedMap<java.lang.Object,java.lang.Object> . put ( java.lang.Object , java.lang.Object ) ; } return org.springframework.beans.factory.xml.ManagedMap<java.lang.Object,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> protected final java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.String java.lang.String , org.w3c.dom.Element org.w3c.dom.Element ) { try { TypedStringValue org.springframework.beans.factory.xml.TypedStringValue = org.springframework.beans.factory.xml.TypedStringValue ( java.lang.String , java.lang.String ) ; org.springframework.beans.factory.xml.TypedStringValue . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; return org.springframework.beans.factory.xml.TypedStringValue ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { void ( STRING + java.lang.String + STRING , org.w3c.dom.Element , java.lang.ClassNotFoundException ) ; return java.lang.String ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition , java.lang.String java.lang.String ) { org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; org.w3c.dom.Element org.w3c.dom.Element = null ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( org.w3c.dom.Node instanceof org.w3c.dom.Element ) { if ( org.w3c.dom.Element != null ) { void ( STRING , org.w3c.dom.Element ) ; } else { org.w3c.dom.Element = ( org.w3c.dom.Element ) org.w3c.dom.Node ; } } } return java.lang.Object ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.util.Properties java.util.Properties ( org.w3c.dom.Element org.w3c.dom.Element ) { ManagedProperties org.springframework.beans.factory.xml.ManagedProperties = new ManagedProperties ( ) ; org.springframework.beans.factory.xml.ManagedProperties . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.ManagedProperties . setMergeEnabled ( boolean ( org.w3c.dom.Element ) ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , java.lang.String ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = DomUtils . getTextValue ( org.w3c.dom.Element ) . trim ( ) ; TypedStringValue org.springframework.beans.factory.xml.TypedStringValue = new TypedStringValue ( java.lang.String ) ; org.springframework.beans.factory.xml.TypedStringValue . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; TypedStringValue org.springframework.beans.factory.xml.TypedStringValue = new TypedStringValue ( java.lang.String ) ; org.springframework.beans.factory.xml.TypedStringValue . setSource ( java.lang.Object ( org.w3c.dom.Element ) ) ; org.springframework.beans.factory.xml.ManagedProperties . put ( org.springframework.beans.factory.xml.TypedStringValue , org.springframework.beans.factory.xml.TypedStringValue ) ; } return org.springframework.beans.factory.xml.ManagedProperties ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( java.lang.String ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = this . org.springframework.beans.factory.xml.DocumentDefaultsDefinition . getMerge ( ) ; } return java.lang.String . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.xml.BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element ) { return org.springframework.beans.factory.xml.BeanDefinition ( org.w3c.dom.Element , null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.xml.BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { java.lang.String java.lang.String = java.lang.String ( org.w3c.dom.Element ) ; NamespaceHandler org.springframework.beans.factory.xml.NamespaceHandler = this . org.springframework.beans.factory.xml.XmlReaderContext . getNamespaceHandlerResolver ( ) . resolve ( java.lang.String ) ; if ( org.springframework.beans.factory.xml.NamespaceHandler == null ) { void ( STRING + java.lang.String + STRING , org.w3c.dom.Element ) ; return null ; } return org.springframework.beans.factory.xml.NamespaceHandler . parse ( org.w3c.dom.Element , new ParserContext ( this . org.springframework.beans.factory.xml.XmlReaderContext , this , org.springframework.beans.factory.xml.BeanDefinition ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.xml.BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder ) { return org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinitionHolder , null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.xml.BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder = org.springframework.beans.factory.xml.BeanDefinitionHolder ; org.w3c.dom.NamedNodeMap org.w3c.dom.NamedNodeMap = org.w3c.dom.Element . org.w3c.dom.NamedNodeMap ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NamedNodeMap . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NamedNodeMap . org.w3c.dom.Node ( int ) ; org.springframework.beans.factory.xml.BeanDefinitionHolder = org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Node , org.springframework.beans.factory.xml.BeanDefinitionHolder , org.springframework.beans.factory.xml.BeanDefinition ) ; } org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( org.w3c.dom.Node . short ( ) == org.w3c.dom.Node . short ) { org.springframework.beans.factory.xml.BeanDefinitionHolder = org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Node , org.springframework.beans.factory.xml.BeanDefinitionHolder , org.springframework.beans.factory.xml.BeanDefinition ) ; } } return org.springframework.beans.factory.xml.BeanDefinitionHolder ; }  <METHOD_END>
<METHOD_START> public org.springframework.beans.factory.xml.BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Node org.w3c.dom.Node , BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { java.lang.String java.lang.String = java.lang.String ( org.w3c.dom.Node ) ; if ( ! boolean ( java.lang.String ) ) { NamespaceHandler org.springframework.beans.factory.xml.NamespaceHandler = this . org.springframework.beans.factory.xml.XmlReaderContext . getNamespaceHandlerResolver ( ) . resolve ( java.lang.String ) ; if ( org.springframework.beans.factory.xml.NamespaceHandler != null ) { return org.springframework.beans.factory.xml.NamespaceHandler . decorate ( org.w3c.dom.Node , org.springframework.beans.factory.xml.BeanDefinitionHolder , new ParserContext ( this . org.springframework.beans.factory.xml.XmlReaderContext , this , org.springframework.beans.factory.xml.BeanDefinition ) ) ; } else if ( java.lang.String != null && java.lang.String . boolean ( STRING ) ) { void ( STRING + java.lang.String + STRING , org.w3c.dom.Node ) ; } else { if ( org.springframework.beans.factory.xml.Log . isDebugEnabled ( ) ) { org.springframework.beans.factory.xml.Log . debug ( STRING + java.lang.String + STRING ) ; } } } return org.springframework.beans.factory.xml.BeanDefinitionHolder ; }  <METHOD_END>
<METHOD_START> private org.springframework.beans.factory.xml.BeanDefinitionHolder org.springframework.beans.factory.xml.BeanDefinitionHolder ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinition org.springframework.beans.factory.xml.BeanDefinition ) { BeanDefinition org.springframework.beans.factory.xml.BeanDefinition = org.springframework.beans.factory.xml.BeanDefinition ( org.w3c.dom.Element , org.springframework.beans.factory.xml.BeanDefinition ) ; if ( org.springframework.beans.factory.xml.BeanDefinition == null ) { void ( STRING + org.w3c.dom.Element . java.lang.String ( ) + STRING + STRING , org.w3c.dom.Element ) ; return null ; } java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( ) + BeanDefinitionReaderUtils . GENERATED_BEAN_NAME_SEPARATOR + ObjectUtils . getIdentityHexString ( org.springframework.beans.factory.xml.BeanDefinition ) ; if ( org.springframework.beans.factory.xml.Log . isDebugEnabled ( ) ) { org.springframework.beans.factory.xml.Log . debug ( STRING + java.lang.String + STRING + org.w3c.dom.Element . java.lang.String ( ) + STRING ) ; } return new BeanDefinitionHolder ( org.springframework.beans.factory.xml.BeanDefinition , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( org.w3c.dom.Node org.w3c.dom.Node ) { return org.w3c.dom.Node . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( org.w3c.dom.Node org.w3c.dom.Node ) { return org.w3c.dom.Node . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( org.w3c.dom.Node org.w3c.dom.Node , java.lang.String java.lang.String ) { return java.lang.String . boolean ( org.w3c.dom.Node . java.lang.String ( ) ) || java.lang.String . boolean ( java.lang.String ( org.w3c.dom.Node ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.String java.lang.String ) { return ( ! StringUtils . hasLength ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( org.w3c.dom.Node org.w3c.dom.Node ) { return boolean ( java.lang.String ( org.w3c.dom.Node ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( org.w3c.dom.Node org.w3c.dom.Node ) { return ( org.w3c.dom.Node instanceof org.w3c.dom.Element && ( boolean ( org.w3c.dom.Node ) || ! boolean ( org.w3c.dom.Node . org.w3c.dom.Node ( ) ) ) ) ; }  <METHOD_END>
