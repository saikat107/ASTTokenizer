<METHOD_START> @ java.lang.Override protected org.springframework.cache.config.ConfigurableApplicationContext org.springframework.cache.config.ConfigurableApplicationContext ( ) { return new GenericXmlApplicationContext ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CacheInterceptor org.springframework.cache.config.CacheInterceptor = this . ctx . getBean ( STRING , CacheInterceptor .class ) ; assertSame ( this . ctx . getBean ( STRING ) , org.springframework.cache.config.CacheInterceptor . getKeyGenerator ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.cache.config.ConfigurableApplicationContext = new GenericXmlApplicationContext ( STRING ) ; CacheInterceptor org.springframework.cache.config.CacheInterceptor = org.springframework.cache.config.ConfigurableApplicationContext . getBean ( CacheInterceptor .class ) ; assertSame ( org.springframework.cache.config.ConfigurableApplicationContext . getBean ( STRING ) , org.springframework.cache.config.CacheInterceptor . getCacheResolver ( ) ) ; org.springframework.cache.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableApplicationContext org.springframework.cache.config.ConfigurableApplicationContext = new GenericXmlApplicationContext ( STRING ) ; CacheInterceptor org.springframework.cache.config.CacheInterceptor = org.springframework.cache.config.ConfigurableApplicationContext . getBean ( CacheInterceptor .class ) ; assertSame ( org.springframework.cache.config.ConfigurableApplicationContext . getBean ( STRING ) , org.springframework.cache.config.CacheInterceptor . getCacheResolver ( ) ) ; org.springframework.cache.config.ConfigurableApplicationContext . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CacheInterceptor org.springframework.cache.config.CacheInterceptor = this . ctx . getBean ( STRING , CacheInterceptor .class ) ; assertSame ( this . ctx . getBean ( STRING , CacheErrorHandler .class ) , org.springframework.cache.config.CacheInterceptor . getErrorHandler ( ) ) ; }  <METHOD_END>
