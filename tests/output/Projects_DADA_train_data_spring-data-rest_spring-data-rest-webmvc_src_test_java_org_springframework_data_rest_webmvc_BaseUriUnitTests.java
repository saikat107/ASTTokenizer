<METHOD_START> @ Test public void void ( ) { assertThat ( new BaseUri ( java.net.URI . java.net.URI ( STRING ) ) . getRepositoryLookupPath ( STRING ) ) . isNull ( ) ; assertThat ( new BaseUri ( java.net.URI . java.net.URI ( STRING ) ) . getRepositoryLookupPath ( STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { BaseUri org.springframework.data.rest.webmvc.BaseUri = new BaseUri ( java.net.URI . java.net.URI ( STRING ) ) ; assertThat ( org.springframework.data.rest.webmvc.BaseUri . getRepositoryLookupPath ( STRING ) , isEmptyString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { BaseUri org.springframework.data.rest.webmvc.BaseUri = new BaseUri ( java.net.URI . java.net.URI ( STRING ) ) ; assertThat ( org.springframework.data.rest.webmvc.BaseUri . getRepositoryLookupPath ( STRING ) , isEmptyString ( ) ) ; assertThat ( org.springframework.data.rest.webmvc.BaseUri . getRepositoryLookupPath ( STRING ) , isEmptyString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { BaseUri org.springframework.data.rest.webmvc.BaseUri = new BaseUri ( java.net.URI . java.net.URI ( STRING ) ) ; assertThat ( org.springframework.data.rest.webmvc.BaseUri . getRepositoryLookupPath ( STRING ) , isEmptyString ( ) ) ; assertThat ( org.springframework.data.rest.webmvc.BaseUri . getRepositoryLookupPath ( STRING ) , isEmptyString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { BaseUri org.springframework.data.rest.webmvc.BaseUri = new BaseUri ( java.net.URI . java.net.URI ( STRING ) ) ; assertThat ( org.springframework.data.rest.webmvc.BaseUri . getRepositoryLookupPath ( STRING ) , isEmptyString ( ) ) ; assertThat ( org.springframework.data.rest.webmvc.BaseUri . getRepositoryLookupPath ( STRING ) , isEmptyString ( ) ) ; assertThat ( org.springframework.data.rest.webmvc.BaseUri . getRepositoryLookupPath ( STRING ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.webmvc.BaseUri . getRepositoryLookupPath ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( BaseUri . NONE . getRepositoryLookupPath ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
