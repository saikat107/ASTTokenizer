<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SpringValidator org.springframework.boot.autoconfigure.validation.SpringValidator = org.springframework.boot.autoconfigure.validation.SpringValidator ( org.springframework.boot.autoconfigure.validation.SpringValidatorTests.LocalValidatorFactoryBeanConfig .class ) ; assertThat ( org.springframework.boot.autoconfigure.validation.SpringValidator . supports ( org.springframework.boot.autoconfigure.validation.SpringValidatorTests.SampleData .class ) ) . isTrue ( ) ; MapBindingResult org.springframework.boot.autoconfigure.validation.MapBindingResult = new MapBindingResult ( new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) , STRING ) ; org.springframework.boot.autoconfigure.validation.SpringValidator . validate ( new org.springframework.boot.autoconfigure.validation.SpringValidatorTests.SampleData ( NUMBER ) , org.springframework.boot.autoconfigure.validation.MapBindingResult ) ; assertThat ( org.springframework.boot.autoconfigure.validation.MapBindingResult . getErrorCount ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.boot.autoconfigure.validation.SpringValidator ( org.springframework.boot.autoconfigure.validation.SpringValidatorTests.NonManagedBeanConfig .class ) ; LocalValidatorFactoryBean org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean = this . org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext . getBean ( org.springframework.boot.autoconfigure.validation.SpringValidatorTests.NonManagedBeanConfig .class ) . validator ; verify ( org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean , times ( NUMBER ) ) . setApplicationContext ( any ( ApplicationContext .class ) ) ; verify ( org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean , times ( NUMBER ) ) . afterPropertiesSet ( ) ; verify ( org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean , times ( NUMBER ) ) . destroy ( ) ; this . org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext . close ( ) ; this . org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext = null ; verify ( org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean , times ( NUMBER ) ) . destroy ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.boot.autoconfigure.validation.SpringValidator ( org.springframework.boot.autoconfigure.validation.SpringValidatorTests.ManagedBeanConfig .class ) ; LocalValidatorFactoryBean org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean = this . org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext . getBean ( org.springframework.boot.autoconfigure.validation.SpringValidatorTests.ManagedBeanConfig .class ) . validator ; verify ( org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean , times ( NUMBER ) ) . setApplicationContext ( any ( ApplicationContext .class ) ) ; verify ( org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean , times ( NUMBER ) ) . afterPropertiesSet ( ) ; verify ( org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean , times ( NUMBER ) ) . destroy ( ) ; this . org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext . close ( ) ; this . org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext = null ; verify ( org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean , times ( NUMBER ) ) . destroy ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.validation.SpringValidator org.springframework.boot.autoconfigure.validation.SpringValidator ( java.lang.Class<?> < ? > java.lang.Class<?> ) { AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext . register ( java.lang.Class<> ) ; org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext . refresh ( ) ; this . org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext ; return this . org.springframework.boot.autoconfigure.validation.AnnotationConfigApplicationContext . getBean ( SpringValidator .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean ( ) { return new LocalValidatorFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.validation.SpringValidator org.springframework.boot.autoconfigure.validation.SpringValidator ( ) { return new SpringValidator ( org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean ( ) , true ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.validation.SpringValidator org.springframework.boot.autoconfigure.validation.SpringValidator ( ) { return new SpringValidator ( this . org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean , false ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.validation.SpringValidator org.springframework.boot.autoconfigure.validation.SpringValidator ( ) { return new SpringValidator ( this . org.springframework.boot.autoconfigure.validation.LocalValidatorFactoryBean , true ) ; }  <METHOD_END>
<METHOD_START> void ( int int ) { this . int = int ; }  <METHOD_END>
