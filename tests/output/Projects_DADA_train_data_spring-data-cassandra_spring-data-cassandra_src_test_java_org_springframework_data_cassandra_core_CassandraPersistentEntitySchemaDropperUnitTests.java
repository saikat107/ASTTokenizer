<METHOD_START> @ Before public void void ( ) java.lang.Exception { org.springframework.data.cassandra.core.BasicCassandraMappingContext . setUserTypeResolver ( typeName -> metadata . getUserType ( typeName . toCql ( ) ) ) ; when ( org.springframework.data.cassandra.core.CassandraAdminOperations . getKeyspaceMetadata ( ) ) . thenReturn ( org.springframework.data.cassandra.core.KeyspaceMetadata ) ; when ( org.springframework.data.cassandra.core.UserType . getTypeName ( ) ) . thenReturn ( STRING ) ; when ( org.springframework.data.cassandra.core.UserType . getTypeName ( ) ) . thenReturn ( STRING ) ; when ( org.springframework.data.cassandra.core.UserType . getTypeName ( ) ) . thenReturn ( STRING ) ; when ( org.springframework.data.cassandra.core.TableMetadata . getName ( ) ) . thenReturn ( STRING ) ; when ( org.springframework.data.cassandra.core.TableMetadata . getName ( ) ) . thenReturn ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.cassandra.core.BasicCassandraMappingContext . setInitialEntitySet ( new java.util.HashSet <> ( java.util.Arrays . java.util.List<java.lang.Class<? extends java.lang.Object>> ( org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropperUnitTests.MoonType .class , org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropperUnitTests.UniverseType .class ) ) ) ; org.springframework.data.cassandra.core.BasicCassandraMappingContext . afterPropertiesSet ( ) ; when ( org.springframework.data.cassandra.core.KeyspaceMetadata . getUserTypes ( ) ) . thenReturn ( java.util.Arrays . java.util.List ( org.springframework.data.cassandra.core.UserType , org.springframework.data.cassandra.core.UserType , org.springframework.data.cassandra.core.UserType ) ) ; CassandraPersistentEntitySchemaDropper org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropper = new CassandraPersistentEntitySchemaDropper ( org.springframework.data.cassandra.core.BasicCassandraMappingContext , org.springframework.data.cassandra.core.CassandraAdminOperations ) ; org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropper . dropUserTypes ( true ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . dropUserType ( CqlIdentifier . cqlId ( STRING ) ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . dropUserType ( CqlIdentifier . cqlId ( STRING ) ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . dropUserType ( CqlIdentifier . cqlId ( STRING ) ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . getKeyspaceMetadata ( ) ; verifyNoMoreInteractions ( org.springframework.data.cassandra.core.CassandraAdminOperations ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.cassandra.core.BasicCassandraMappingContext . setInitialEntitySet ( new java.util.HashSet <> ( java.util.Arrays . java.util.List<java.lang.Class<? extends java.lang.Object>> ( org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropperUnitTests.MoonType .class , org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropperUnitTests.UniverseType .class ) ) ) ; org.springframework.data.cassandra.core.BasicCassandraMappingContext . afterPropertiesSet ( ) ; when ( org.springframework.data.cassandra.core.KeyspaceMetadata . getUserTypes ( ) ) . thenReturn ( java.util.Arrays . java.util.List ( org.springframework.data.cassandra.core.UserType , org.springframework.data.cassandra.core.UserType , org.springframework.data.cassandra.core.UserType ) ) ; CassandraPersistentEntitySchemaDropper org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropper = new CassandraPersistentEntitySchemaDropper ( org.springframework.data.cassandra.core.BasicCassandraMappingContext , org.springframework.data.cassandra.core.CassandraAdminOperations ) ; org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropper . dropUserTypes ( false ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . dropUserType ( CqlIdentifier . cqlId ( STRING ) ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . dropUserType ( CqlIdentifier . cqlId ( STRING ) ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . getKeyspaceMetadata ( ) ; verifyNoMoreInteractions ( org.springframework.data.cassandra.core.CassandraAdminOperations ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.cassandra.core.BasicCassandraMappingContext . setInitialEntitySet ( java.util.Collections . java.util.Set<java.lang.Class<org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropperUnitTests.Person>> ( org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropperUnitTests.Person .class ) ) ; org.springframework.data.cassandra.core.BasicCassandraMappingContext . afterPropertiesSet ( ) ; when ( org.springframework.data.cassandra.core.KeyspaceMetadata . getTables ( ) ) . thenReturn ( java.util.Arrays . java.util.List ( org.springframework.data.cassandra.core.TableMetadata , org.springframework.data.cassandra.core.TableMetadata ) ) ; CassandraPersistentEntitySchemaDropper org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropper = new CassandraPersistentEntitySchemaDropper ( org.springframework.data.cassandra.core.BasicCassandraMappingContext , org.springframework.data.cassandra.core.CassandraAdminOperations ) ; org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropper . dropTables ( true ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . dropTable ( CqlIdentifier . cqlId ( STRING ) ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . dropTable ( CqlIdentifier . cqlId ( STRING ) ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . getKeyspaceMetadata ( ) ; verifyNoMoreInteractions ( org.springframework.data.cassandra.core.CassandraAdminOperations ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.data.cassandra.core.BasicCassandraMappingContext . setInitialEntitySet ( java.util.Collections . java.util.Set<java.lang.Class<org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropperUnitTests.Person>> ( org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropperUnitTests.Person .class ) ) ; org.springframework.data.cassandra.core.BasicCassandraMappingContext . afterPropertiesSet ( ) ; when ( org.springframework.data.cassandra.core.KeyspaceMetadata . getTables ( ) ) . thenReturn ( java.util.Arrays . java.util.List ( org.springframework.data.cassandra.core.TableMetadata , org.springframework.data.cassandra.core.TableMetadata ) ) ; CassandraPersistentEntitySchemaDropper org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropper = new CassandraPersistentEntitySchemaDropper ( org.springframework.data.cassandra.core.BasicCassandraMappingContext , org.springframework.data.cassandra.core.CassandraAdminOperations ) ; org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaDropper . dropTables ( false ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . dropTable ( CqlIdentifier . cqlId ( STRING ) ) ; verify ( org.springframework.data.cassandra.core.CassandraAdminOperations ) . getKeyspaceMetadata ( ) ; verifyNoMoreInteractions ( org.springframework.data.cassandra.core.CassandraAdminOperations ) ; }  <METHOD_END>
