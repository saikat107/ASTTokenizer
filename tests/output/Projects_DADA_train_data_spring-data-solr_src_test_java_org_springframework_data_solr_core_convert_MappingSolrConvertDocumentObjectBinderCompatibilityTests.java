<METHOD_START> public void ( SolrConverter org.springframework.data.solr.core.convert.SolrConverter ) { this . org.springframework.data.solr.core.convert.SolrConverter = org.springframework.data.solr.core.convert.SolrConverter ; }  <METHOD_END>
<METHOD_START> @ Parameters public static java.util.Collection<java.lang.Object[]> < java.lang.Object [] > java.util.Collection<java.lang.Object[]> ( ) { java.lang.Object [] [] java.lang.Object[][] = new java.lang.Object [] [] { { new SolrJConverter ( ) } , { new MappingSolrConverter ( new SimpleSolrMappingContext ( ) ) } } ; return java.util.Arrays . java.util.List<java.lang.Object[]> ( java.lang.Object[][] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) java.lang.Exception { XMLResponseParser org.springframework.data.solr.core.convert.XMLResponseParser = new XMLResponseParser ( ) ; NamedList < java.lang.Object > org.springframework.data.solr.core.convert.NamedList<java.lang.Object> = org.springframework.data.solr.core.convert.XMLResponseParser . processResponse ( new java.io.StringReader ( java.lang.String ) ) ; QueryResponse org.springframework.data.solr.core.convert.QueryResponse = new QueryResponse ( org.springframework.data.solr.core.convert.NamedList<java.lang.Object> , null ) ; SolrDocumentList org.springframework.data.solr.core.convert.SolrDocumentList = org.springframework.data.solr.core.convert.QueryResponse . getResults ( ) ; java.util.List<org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item> < org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item > java.util.List<org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item> = java.util.List<org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item> ( org.springframework.data.solr.core.convert.SolrDocumentList ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.SolrDocumentList . size ( ) , java.util.List<org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item> . int ( ) ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.SolrDocumentList . get ( NUMBER ) . getFieldValue ( STRING ) , java.util.List<org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item> . org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item ( NUMBER ) . java.util.List<java.lang.String> ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item = new org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item ( ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String = STRING ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String[] = new java.lang.String [] { STRING , STRING , STRING } ; SolrInputDocument org.springframework.data.solr.core.convert.SolrInputDocument = new SolrInputDocument ( ) ; org.springframework.data.solr.core.convert.SolrConverter . write ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item , org.springframework.data.solr.core.convert.SolrInputDocument ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String , org.springframework.data.solr.core.convert.SolrInputDocument . getFieldValue ( STRING ) ) ; SolrInputField org.springframework.data.solr.core.convert.SolrInputField = org.springframework.data.solr.core.convert.SolrInputDocument . getField ( STRING ) ; Assert . assertEquals ( NUMBER , org.springframework.data.solr.core.convert.SolrInputField . getValueCount ( ) ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = ( java.util.List<java.lang.String> < java.lang.String > ) org.springframework.data.solr.core.convert.SolrInputField . getValue ( ) ; Assert . assertEquals ( STRING , java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; Assert . assertEquals ( STRING , java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; Assert . assertEquals ( STRING , java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { SolrDocument org.springframework.data.solr.core.convert.SolrDocument = new SolrDocument ( ) ; org.springframework.data.solr.core.convert.SolrDocument . setField ( STRING , STRING ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item = org.springframework.data.solr.core.convert.SolrConverter . read ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item .class , org.springframework.data.solr.core.convert.SolrDocument ) ; Assert . assertEquals ( STRING , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { XMLResponseParser org.springframework.data.solr.core.convert.XMLResponseParser = new XMLResponseParser ( ) ; NamedList < java.lang.Object > org.springframework.data.solr.core.convert.NamedList<java.lang.Object> = org.springframework.data.solr.core.convert.XMLResponseParser . processResponse ( new java.io.StringReader ( java.lang.String ) ) ; QueryResponse org.springframework.data.solr.core.convert.QueryResponse = new QueryResponse ( org.springframework.data.solr.core.convert.NamedList<java.lang.Object> , null ) ; java.util.List<org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item> < org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item > java.util.List<org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item> = java.util.List<org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item> ( org.springframework.data.solr.core.convert.QueryResponse . getResults ( ) ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item = java.util.List<org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item> . org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item ( NUMBER ) ; Assert . assertArrayEquals ( new java.lang.String [] { STRING , STRING , STRING } , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String[] ( ) ) ; Assert . assertTrue ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . boolean ( STRING ) ) ; Assert . assertTrue ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . boolean ( STRING ) ) ; Assert . assertEquals ( NUMBER , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . int ( ) ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( STRING ) ; Assert . assertEquals ( STRING , java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; Assert . assertEquals ( STRING , java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( STRING ) ; Assert . assertEquals ( STRING , java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item = new org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item ( ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String = STRING ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . boolean = false ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String[] = new java.lang.String [] { STRING , STRING , STRING } ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String[] ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> = new java.util.HashMap<java.lang.String,java.util.List<java.lang.String>> <> ( ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( STRING , java.util.List<java.lang.String> ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( STRING , java.util.List<java.lang.String> ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; SolrInputDocument org.springframework.data.solr.core.convert.SolrInputDocument = new SolrInputDocument ( ) ; org.springframework.data.solr.core.convert.SolrConverter . write ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item , org.springframework.data.solr.core.convert.SolrInputDocument ) ; SolrDocumentList org.springframework.data.solr.core.convert.SolrDocumentList = new SolrDocumentList ( ) ; org.springframework.data.solr.core.convert.SolrDocumentList . add ( org.springframework.data.solr.core.convert.SolrDocument ( org.springframework.data.solr.core.convert.SolrInputDocument ) ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item = org.springframework.data.solr.core.convert.SolrConverter . read ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item .class , org.springframework.data.solr.core.convert.SolrDocumentList . get ( NUMBER ) ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . boolean , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . boolean ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String[] . int , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String[] . int ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.List<java.lang.String> , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.List<java.lang.String> ) ; Assert . assertEquals ( java.util.List<java.lang.String> , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( STRING ) ) ; Assert . assertEquals ( java.util.List<java.lang.String> , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( STRING ) ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String[] = null ; SolrInputDocument org.springframework.data.solr.core.convert.SolrInputDocument = new SolrInputDocument ( ) ; org.springframework.data.solr.core.convert.SolrConverter . write ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item , org.springframework.data.solr.core.convert.SolrInputDocument ) ; SolrDocumentList org.springframework.data.solr.core.convert.SolrDocumentList = new SolrDocumentList ( ) ; org.springframework.data.solr.core.convert.SolrDocumentList . add ( org.springframework.data.solr.core.convert.SolrDocument ( org.springframework.data.solr.core.convert.SolrInputDocument ) ) ; org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item = org.springframework.data.solr.core.convert.SolrConverter . read ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item .class , org.springframework.data.solr.core.convert.SolrDocumentList . get ( NUMBER ) ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . boolean , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . boolean ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String[] . int , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.lang.String[] . int ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.List<java.lang.String> , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.List<java.lang.String> ) ; Assert . assertEquals ( org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; Assert . assertEquals ( java.util.List<java.lang.String> , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( STRING ) ) ; Assert . assertEquals ( java.util.List<java.lang.String> , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item . java.util.Map<java.lang.String,java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item> < org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item > java.util.List<org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item> ( SolrDocumentList org.springframework.data.solr.core.convert.SolrDocumentList ) { return org.springframework.data.solr.core.convert.SolrConverter . read ( org.springframework.data.solr.core.convert.SolrDocumentList , org.springframework.data.solr.core.convert.MappingSolrConvertDocumentObjectBinderCompatibilityTests.Item .class ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.solr.core.convert.SolrDocument org.springframework.data.solr.core.convert.SolrDocument ( SolrInputDocument org.springframework.data.solr.core.convert.SolrInputDocument ) { SolrDocument org.springframework.data.solr.core.convert.SolrDocument = new SolrDocument ( ) ; for ( SolrInputField org.springframework.data.solr.core.convert.SolrInputField : org.springframework.data.solr.core.convert.SolrInputDocument ) { org.springframework.data.solr.core.convert.SolrDocument . setField ( org.springframework.data.solr.core.convert.SolrInputField . getName ( ) , org.springframework.data.solr.core.convert.SolrInputField . getValue ( ) ) ; } return org.springframework.data.solr.core.convert.SolrDocument ; }  <METHOD_END>
<METHOD_START> @ Field ( STRING ) public void void ( java.lang.String [] java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ Field public void void ( java.lang.Boolean java.lang.Boolean ) { boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ Field public void void ( java.lang.Boolean java.lang.Boolean ) { boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Field public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
