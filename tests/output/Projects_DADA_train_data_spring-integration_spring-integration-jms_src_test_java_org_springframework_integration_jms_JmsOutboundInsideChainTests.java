<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; Message < java.lang.String > org.springframework.integration.jms.Message<java.lang.String> = MessageBuilder . withPayload ( java.lang.String ) . build ( ) ; this . org.springframework.integration.jms.MessageChannel . send ( org.springframework.integration.jms.Message<java.lang.String> ) ; Message < ? > org.springframework.integration.jms.Message<?> = this . org.springframework.integration.jms.PollableChannel . receive ( NUMBER ) ; assertEquals ( java.lang.String , org.springframework.integration.jms.Message<> . getPayload ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.integration.jms.MessageChannel . send ( MessageBuilder . withPayload ( STRING ) . build ( ) ) ; assertNotNull ( this . org.springframework.integration.jms.PollableChannel . receive ( NUMBER ) ) ; this . org.springframework.integration.jms.MessageChannel . send ( MessageBuilder . withPayload ( STRING ) . build ( ) ) ; assertNull ( this . org.springframework.integration.jms.PollableChannel . receive ( NUMBER ) ) ; }  <METHOD_END>
