<METHOD_START> @ Before public void void ( ) java.lang.Exception { AnnotationConfigApplicationContext org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext . register ( org.springframework.web.reactive.result.method.annotation.ContextPathIntegrationTests.WebApp1Config .class ) ; org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext . refresh ( ) ; AnnotationConfigApplicationContext org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext . register ( org.springframework.web.reactive.result.method.annotation.ContextPathIntegrationTests.WebApp2Config .class ) ; org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext . refresh ( ) ; HttpHandler org.springframework.web.reactive.result.method.annotation.HttpHandler = DispatcherHandler . toHttpHandler ( org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext ) ; HttpHandler org.springframework.web.reactive.result.method.annotation.HttpHandler = DispatcherHandler . toHttpHandler ( org.springframework.web.reactive.result.method.annotation.AnnotationConfigApplicationContext ) ; this . org.springframework.web.reactive.result.method.annotation.ReactorHttpServer = new ReactorHttpServer ( ) ; this . org.springframework.web.reactive.result.method.annotation.ReactorHttpServer . registerHttpHandler ( STRING , org.springframework.web.reactive.result.method.annotation.HttpHandler ) ; this . org.springframework.web.reactive.result.method.annotation.ReactorHttpServer . registerHttpHandler ( STRING , org.springframework.web.reactive.result.method.annotation.HttpHandler ) ; this . org.springframework.web.reactive.result.method.annotation.ReactorHttpServer . afterPropertiesSet ( ) ; this . org.springframework.web.reactive.result.method.annotation.ReactorHttpServer . start ( ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) java.lang.Exception { this . org.springframework.web.reactive.result.method.annotation.ReactorHttpServer . stop ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { RestTemplate org.springframework.web.reactive.result.method.annotation.RestTemplate = new RestTemplate ( ) ; java.lang.String java.lang.String ; java.lang.String = org.springframework.web.reactive.result.method.annotation.RestTemplate . getForObject ( java.lang.String ( STRING ) , java.lang.String .class ) ; assertEquals ( STRING , java.lang.String ) ; java.lang.String = org.springframework.web.reactive.result.method.annotation.RestTemplate . getForObject ( java.lang.String ( STRING ) , java.lang.String .class ) ; assertEquals ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return STRING + this . org.springframework.web.reactive.result.method.annotation.ReactorHttpServer . getPort ( ) + java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.web.reactive.result.method.annotation.ContextPathIntegrationTests.TestController org.springframework.web.reactive.result.method.annotation.ContextPathIntegrationTests.TestController ( ) { return new org.springframework.web.reactive.result.method.annotation.ContextPathIntegrationTests.TestController ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.web.reactive.result.method.annotation.ContextPathIntegrationTests.TestController org.springframework.web.reactive.result.method.annotation.ContextPathIntegrationTests.TestController ( ) { return new org.springframework.web.reactive.result.method.annotation.ContextPathIntegrationTests.TestController ( ) ; }  <METHOD_END>
<METHOD_START> @ GetMapping ( STRING ) public java.lang.String java.lang.String ( ServerHttpRequest org.springframework.web.reactive.result.method.annotation.ServerHttpRequest ) { return STRING + org.springframework.web.reactive.result.method.annotation.ServerHttpRequest . getContextPath ( ) ; }  <METHOD_END>
