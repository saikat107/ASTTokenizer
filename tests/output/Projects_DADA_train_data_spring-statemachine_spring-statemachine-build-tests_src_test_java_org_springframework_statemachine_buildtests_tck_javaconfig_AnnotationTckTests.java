<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.buildtests.tck.javaconfig.AnnotationConfigApplicationContext org.springframework.statemachine.buildtests.tck.javaconfig.AnnotationConfigApplicationContext ( ) { return new AnnotationConfigApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.buildtests.tck.javaconfig.StateMachine<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.buildtests.tck.javaconfig.StateMachine<java.lang.String,java.lang.String> ( ) { context . register ( org.springframework.statemachine.buildtests.tck.javaconfig.AnnotationTckTests.SimpleMachineConfig .class ) ; context . refresh ( ) ; return getStateMachineFromContext ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.buildtests.tck.javaconfig.StateMachine<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.buildtests.tck.javaconfig.StateMachine<java.lang.String,java.lang.String> ( ) java.lang.Exception { context . register ( org.springframework.statemachine.buildtests.tck.javaconfig.AnnotationTckTests.SimpleSubMachineConfig .class ) ; context . refresh ( ) ; return getStateMachineFromContext ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.buildtests.tck.javaconfig.StateMachine<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.buildtests.tck.javaconfig.StateMachine<java.lang.String,java.lang.String> ( ) java.lang.Exception { context . register ( org.springframework.statemachine.buildtests.tck.javaconfig.AnnotationTckTests.ShowcaseMachineConfig .class ) ; context . refresh ( ) ; return getStateMachineFromContext ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineStateConfigurer<java.lang.String,java.lang.String> ) throws java.lang.Exception { org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineStateConfigurer<java.lang.String,java.lang.String> . withStates ( ) . initial ( STRING ) . state ( STRING ) . state ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> ) throws java.lang.Exception { org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineStateConfigurer<java.lang.String,java.lang.String> ) throws java.lang.Exception { org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineStateConfigurer<java.lang.String,java.lang.String> . withStates ( ) . initial ( STRING ) . state ( STRING ) . state ( STRING ) . and ( ) . withStates ( ) . parent ( STRING ) . initial ( STRING ) . state ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> ) throws java.lang.Exception { org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineStateConfigurer<java.lang.String,java.lang.String> )				throws java.lang.Exception { org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineStateConfigurer<java.lang.String,java.lang.String> . withStates ( ) . initial ( STRING , org.springframework.statemachine.buildtests.tck.javaconfig.FooAction ( ) ) . state ( STRING ) . and ( ) . withStates ( ) . parent ( STRING ) . initial ( STRING ) . state ( STRING ) . and ( ) . withStates ( ) . parent ( STRING ) . initial ( STRING ) . state ( STRING ) . state ( STRING ) . and ( ) . withStates ( ) . parent ( STRING ) . state ( STRING ) . and ( ) . withStates ( ) . parent ( STRING ) . initial ( STRING ) . state ( STRING ) . and ( ) . withStates ( ) . parent ( STRING ) . initial ( STRING ) . state ( STRING ) . state ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> )				throws java.lang.Exception { org.springframework.statemachine.buildtests.tck.javaconfig.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . guard ( org.springframework.statemachine.buildtests.tck.javaconfig.FooGuard ( ) ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withInternal ( ) . source ( STRING ) . event ( STRING ) . guard ( org.springframework.statemachine.buildtests.tck.javaconfig.FooGuard ( ) ) . action ( org.springframework.statemachine.buildtests.tck.javaconfig.FooAction ( ) ) . and ( ) . withInternal ( ) . source ( STRING ) . event ( STRING ) . guard ( org.springframework.statemachine.buildtests.tck.javaconfig.FooGuard ( ) ) . action ( org.springframework.statemachine.buildtests.tck.javaconfig.FooAction ( ) ) . and ( ) . withInternal ( ) . source ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withExternal ( ) . source ( STRING ) . target ( STRING ) . event ( STRING ) . and ( ) . withInternal ( ) . source ( STRING ) . event ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.buildtests.tck.javaconfig.FooGuard org.springframework.statemachine.buildtests.tck.javaconfig.FooGuard ( ) { return new FooGuard ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.buildtests.tck.javaconfig.FooGuard org.springframework.statemachine.buildtests.tck.javaconfig.FooGuard ( ) { return new FooGuard ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.statemachine.buildtests.tck.javaconfig.FooAction org.springframework.statemachine.buildtests.tck.javaconfig.FooAction ( ) { return new FooAction ( ) ; }  <METHOD_END>
