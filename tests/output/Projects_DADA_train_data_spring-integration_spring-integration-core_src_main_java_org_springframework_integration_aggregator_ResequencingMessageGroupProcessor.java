<METHOD_START> public java.lang.Object java.lang.Object ( MessageGroup org.springframework.integration.aggregator.MessageGroup ) { java.util.Collection<org.springframework.integration.aggregator.Message<?>> < Message < ? > > java.util.Collection<org.springframework.integration.aggregator.Message<?>> = org.springframework.integration.aggregator.MessageGroup . getMessages ( ) ; if ( java.util.Collection<org.springframework.integration.aggregator.Message<?>> . size ( ) > NUMBER ) { java.util.List<org.springframework.integration.aggregator.Message<?>> < Message < ? > > java.util.List<org.springframework.integration.aggregator.Message<?>> = new java.util.ArrayList<org.springframework.integration.aggregator.Message<?>> < Message < ? > > ( java.util.Collection<org.springframework.integration.aggregator.Message<?>> ) ; java.util.Collections . void ( java.util.List<org.springframework.integration.aggregator.Message<?>> , this . java.util.Comparator<org.springframework.integration.aggregator.Message<?>> ) ; java.util.ArrayList<org.springframework.integration.aggregator.Message<?>> < Message < ? > > java.util.ArrayList<org.springframework.integration.aggregator.Message<?>> = new java.util.ArrayList<org.springframework.integration.aggregator.Message<?>> < Message < ? > > ( ) ; int int = java.lang.Integer ( java.util.List<org.springframework.integration.aggregator.Message<?>> . get ( NUMBER ) ) ; int int = int ; for ( Message < ? > org.springframework.integration.aggregator.Message<?> : java.util.List<org.springframework.integration.aggregator.Message<?>> ) { int = int ; int = java.lang.Integer ( org.springframework.integration.aggregator.Message<> ) ; if ( int - NUMBER > int ) { break; } java.util.ArrayList<org.springframework.integration.aggregator.Message<?>> . add ( org.springframework.integration.aggregator.Message<> ) ; } return java.util.ArrayList<org.springframework.integration.aggregator.Message<?>> ; } return null ; }  <METHOD_END>
<METHOD_START> private java.lang.Integer java.lang.Integer ( Message < ? > org.springframework.integration.aggregator.Message<?> ) { return new IntegrationMessageHeaderAccessor ( org.springframework.integration.aggregator.Message<> ) . getSequenceNumber ( ) ; }  <METHOD_END>
