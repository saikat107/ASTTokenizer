<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.ip.config.BeanDefinitionBuilder org.springframework.integration.ip.config.BeanDefinitionBuilder ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.ip.config.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.ip.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( TcpOutboundGateway .class ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . TCP_CONNECTION_FACTORY ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . REPLY_CHANNEL ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . REQUEST_TIMEOUT ) ; BeanDefinition org.springframework.integration.ip.config.BeanDefinition = IntegrationNamespaceUtils . createExpressionDefinitionFromValueOrExpression ( IpAdapterParserUtils . REMOTE_TIMEOUT , IpAdapterParserUtils . REMOTE_TIMEOUT_EXPRESSION , org.springframework.integration.ip.config.ParserContext , org.w3c.dom.Element , false ) ; if ( org.springframework.integration.ip.config.BeanDefinition != null ) { org.springframework.integration.ip.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.ip.config.BeanDefinition ) ; } IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . REPLY_TIMEOUT , STRING ) ; return org.springframework.integration.ip.config.BeanDefinitionBuilder ; }  <METHOD_END>
