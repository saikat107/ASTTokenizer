<METHOD_START> private void ( ) { super(); }  <METHOD_END>
<METHOD_START> public static < T extends org.springframework.data.mongodb.core.query.Query > org.springframework.data.mongodb.core.query.IsTextQuery<T> < T > org.springframework.data.mongodb.core.query.IsTextQuery<T> ( ) { return new org.springframework.data.mongodb.core.query.IsTextQuery<T> < T > ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.IsTextQuery<T> < T > org.springframework.data.mongodb.core.query.IsTextQuery<T> ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.IsTextQuery<T> < T > org.springframework.data.mongodb.core.query.IsTextQuery<T> ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.IsTextQuery<T> < T > org.springframework.data.mongodb.core.query.IsTextQuery<T> ( ) { if ( fields == null ) { fields = new Document ( ) ; } fields . put ( java.lang.String , org.springframework.data.mongodb.core.query.Document ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.IsTextQuery<T> < T > org.springframework.data.mongodb.core.query.IsTextQuery<T> ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String != null ? java.lang.String : java.lang.String ; return this . org.springframework.data.mongodb.core.query.IsTextQuery<T> ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.query.IsTextQuery<T> < T > org.springframework.data.mongodb.core.query.IsTextQuery<T> ( ) { sort . put ( java.lang.String , org.springframework.data.mongodb.core.query.Document ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.query.IsTextQuery<T> < T > org.springframework.data.mongodb.core.query.IsTextQuery<T> ( Criteria org.springframework.data.mongodb.core.query.Criteria ) { super. where ( org.springframework.data.mongodb.core.query.Criteria ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.query.IsTextQuery<T> < T > org.springframework.data.mongodb.core.query.IsTextQuery<T> ( java.lang.String java.lang.String ) { super. excludingField ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.query.IsTextQuery<T> < T > org.springframework.data.mongodb.core.query.IsTextQuery<T> ( java.lang.String java.lang.String ) { super. includingField ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.query.IsTextQuery<T> < T > org.springframework.data.mongodb.core.query.IsTextQuery<T> ( int int ) { super. limitingTo ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.query.IsQuery<T> < T > org.springframework.data.mongodb.core.query.IsQuery<T> ( long long ) { super. skippig ( long ) ; return this ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { Document org.springframework.data.mongodb.core.query.Document = org.springframework.data.mongodb.core.query.Document ( ) ; org.springframework.data.mongodb.core.query.Document . put ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.query.Document org.springframework.data.mongodb.core.query.Document ( ) { Document org.springframework.data.mongodb.core.query.Document = ( Document ) query . get ( STRING ) ; if ( org.springframework.data.mongodb.core.query.Document == null ) { org.springframework.data.mongodb.core.query.Document = new Document ( ) ; } return org.springframework.data.mongodb.core.query.Document ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { Document org.springframework.data.mongodb.core.query.Document = org.springframework.data.mongodb.core.query.Document ( ) ; java.lang.String java.lang.String = ( java.lang.String ) org.springframework.data.mongodb.core.query.Document . get ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { java.lang.String += ( STRING + java.lang.String ) ; } else { java.lang.String = java.lang.String ; } org.springframework.data.mongodb.core.query.Document . put ( STRING , java.lang.String ) ; query . put ( STRING , org.springframework.data.mongodb.core.query.Document ) ; }  <METHOD_END>
