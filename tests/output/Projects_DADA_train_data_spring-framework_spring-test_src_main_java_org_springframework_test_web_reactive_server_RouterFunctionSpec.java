<METHOD_START> void ( RouterFunction < ? > org.springframework.test.web.reactive.server.RouterFunction<?> ) { this . org.springframework.test.web.reactive.server.RouterFunction<?> = org.springframework.test.web.reactive.server.RouterFunction<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.test.web.reactive.server.WebHttpHandlerBuilder org.springframework.test.web.reactive.server.WebHttpHandlerBuilder ( ) { return WebHttpHandlerBuilder . applicationContext ( org.springframework.test.web.reactive.server.ApplicationContext ( ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.test.web.reactive.server.ApplicationContext org.springframework.test.web.reactive.server.ApplicationContext ( ) { AnnotationConfigApplicationContext org.springframework.test.web.reactive.server.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.test.web.reactive.server.AnnotationConfigApplicationContext . registerBean ( STRING , DispatcherHandler .class , ( ) new DispatcherHandler ( ) ) ; org.springframework.test.web.reactive.server.AnnotationConfigApplicationContext . registerBean ( HandlerMapping .class , ( ) RouterFunctions . toHandlerMapping ( this . routerFunction ) ) ; org.springframework.test.web.reactive.server.AnnotationConfigApplicationContext . registerBean ( HandlerAdapter .class , ( ) new HandlerFunctionAdapter ( ) ) ; org.springframework.test.web.reactive.server.AnnotationConfigApplicationContext . registerBean ( HandlerResultHandler .class , ( ) new ServerResponseResultHandler ( ) ) ; org.springframework.test.web.reactive.server.AnnotationConfigApplicationContext . refresh ( ) ; return org.springframework.test.web.reactive.server.AnnotationConfigApplicationContext ; }  <METHOD_END>
