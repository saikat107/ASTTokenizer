<METHOD_START> public void ( SolrPersistentEntity < T > org.springframework.data.solr.repository.support.SolrPersistentEntity<T> ) { this( org.springframework.data.solr.repository.support.SolrPersistentEntity<T> , null ); }  <METHOD_END>
<METHOD_START> public void ( SolrPersistentEntity < T > org.springframework.data.solr.repository.support.SolrPersistentEntity<T> , java.lang.String java.lang.String ) { super( org.springframework.data.solr.repository.support.SolrPersistentEntity<T> ); this . org.springframework.data.solr.repository.support.SolrPersistentEntity<T> = org.springframework.data.solr.repository.support.SolrPersistentEntity<T> ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.solr.repository.support.SolrPersistentEntity<T> . getIdProperty ( ) . orElseThrow ( ( ) new IllegalArgumentException ( STRING ) ) . getFieldName ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String != null ? java.lang.String : org.springframework.data.solr.repository.support.SolrPersistentEntity<T> . getSolrCoreName ( ) ; }  <METHOD_END>
