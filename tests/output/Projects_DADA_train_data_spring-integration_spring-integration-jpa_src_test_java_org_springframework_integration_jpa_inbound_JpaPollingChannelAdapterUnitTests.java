<METHOD_START> @ Test public void void ( ) { JpaExecutor org.springframework.integration.jpa.inbound.JpaExecutor = mock ( JpaExecutor .class ) ; when ( org.springframework.integration.jpa.inbound.JpaExecutor . poll ( ) ) . thenReturn ( null ) ; final JpaPollingChannelAdapter org.springframework.integration.jpa.inbound.JpaPollingChannelAdapter = new JpaPollingChannelAdapter ( org.springframework.integration.jpa.inbound.JpaExecutor ) ; assertNull ( org.springframework.integration.jpa.inbound.JpaPollingChannelAdapter . receive ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { JpaExecutor org.springframework.integration.jpa.inbound.JpaExecutor = mock ( JpaExecutor .class ) ; when ( org.springframework.integration.jpa.inbound.JpaExecutor . poll ( ) ) . thenReturn ( STRING ) ; final JpaPollingChannelAdapter org.springframework.integration.jpa.inbound.JpaPollingChannelAdapter = new JpaPollingChannelAdapter ( org.springframework.integration.jpa.inbound.JpaExecutor ) ; assertNotNull ( STRING , org.springframework.integration.jpa.inbound.JpaPollingChannelAdapter . receive ( ) ) ; assertEquals ( STRING , org.springframework.integration.jpa.inbound.JpaPollingChannelAdapter . receive ( ) . getPayload ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { JpaExecutor org.springframework.integration.jpa.inbound.JpaExecutor = mock ( JpaExecutor .class ) ; final JpaPollingChannelAdapter org.springframework.integration.jpa.inbound.JpaPollingChannelAdapter = new JpaPollingChannelAdapter ( org.springframework.integration.jpa.inbound.JpaExecutor ) ; assertEquals ( STRING , org.springframework.integration.jpa.inbound.JpaPollingChannelAdapter . getComponentType ( ) ) ; }  <METHOD_END>
