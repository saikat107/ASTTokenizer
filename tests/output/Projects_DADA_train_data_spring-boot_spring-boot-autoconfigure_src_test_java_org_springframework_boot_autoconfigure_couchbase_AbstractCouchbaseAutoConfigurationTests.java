<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.couchbase.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.autoconfigure.couchbase.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String ... java.lang.String[] ) { AnnotationConfigApplicationContext org.springframework.boot.autoconfigure.couchbase.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; EnvironmentTestUtils . addEnvironment ( org.springframework.boot.autoconfigure.couchbase.AnnotationConfigApplicationContext , java.lang.String[] ) ; if ( java.lang.Class<> != null ) { org.springframework.boot.autoconfigure.couchbase.AnnotationConfigApplicationContext . register ( java.lang.Class<> ) ; } org.springframework.boot.autoconfigure.couchbase.AnnotationConfigApplicationContext . register ( PropertyPlaceholderAutoConfiguration .class , CouchbaseAutoConfiguration .class ) ; org.springframework.boot.autoconfigure.couchbase.AnnotationConfigApplicationContext . refresh ( ) ; this . org.springframework.boot.autoconfigure.couchbase.AnnotationConfigApplicationContext = org.springframework.boot.autoconfigure.couchbase.AnnotationConfigApplicationContext ; }  <METHOD_END>
