<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.AppConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.ConcreteFactoryBeanImplementationConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.AppConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.ParameterizedFactoryBeanImplementationConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.AppConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.ParameterizedFactoryBeanInterfaceConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.AppConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.NonPublicParameterizedFactoryBeanInterfaceConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.AppConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.RawFactoryBeanInterfaceConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.AppConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.WildcardParameterizedFactoryBeanInterfaceConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.context.annotation.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.AppConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . register ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.FactoryBeanCallingConfig .class ) ; org.springframework.context.annotation.AnnotationConfigApplicationContext . refresh ( ) ; assertEquals ( STRING , org.springframework.context.annotation.AnnotationConfigApplicationContext . getBean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) java.lang.Exception { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<java.lang.String> < java.lang.String > java.lang.Class<java.lang.String> ( ) { return java.lang.String .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.Boolean . java.lang.String ( this . boolean ) ; }  <METHOD_END>
<METHOD_START> public void ( T T ) { this . T = T ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( ) java.lang.Exception { return T ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public java.lang.Class<T> < T > java.lang.Class<T> ( ) { return ( java.lang.Class<T> < T > ) T . java.lang.Class<? extends java.lang.Object> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.DummyBean org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.DummyBean ( ) { return new org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.DummyBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyFactoryBean org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyFactoryBean ( ) { Assert . notNull ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.DummyBean , STRING ) ; return new org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyParameterizedFactoryBean<java.lang.String> < java.lang.String > org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyParameterizedFactoryBean<java.lang.String> ( ) { Assert . notNull ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.DummyBean , STRING ) ; return new org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyParameterizedFactoryBean<java.lang.String> <> ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.FactoryBean<java.lang.String> < java.lang.String > org.springframework.context.annotation.FactoryBean<java.lang.String> ( ) { Assert . notNull ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.DummyBean , STRING ) ; return new org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.context.annotation.FactoryBean<java.lang.String> < java.lang.String > org.springframework.context.annotation.FactoryBean<java.lang.String> ( ) { Assert . notNull ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.DummyBean , STRING ) ; return new org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ java.lang.SuppressWarnings ( STRING ) public org.springframework.context.annotation.FactoryBean org.springframework.context.annotation.FactoryBean ( ) { Assert . notNull ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.DummyBean , STRING ) ; return new org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.FactoryBean<?> < ? > org.springframework.context.annotation.FactoryBean<?> ( ) { Assert . notNull ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.DummyBean , STRING ) ; return new org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyFactoryBean org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyFactoryBean ( ) { Assert . notNull ( org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.DummyBean , STRING ) ; return new org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public java.lang.String java.lang.String ( ) { return org.springframework.context.annotation.ConfigurationWithFactoryBeanAndAutowiringTests.MyFactoryBean ( ) . java.lang.String ( ) ; }  <METHOD_END>
