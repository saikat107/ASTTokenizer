<METHOD_START> @ Bean public org.springframework.data.rest.core.context.PersonBeforeSaveHandler org.springframework.data.rest.core.context.PersonBeforeSaveHandler ( ) { return new PersonBeforeSaveHandler ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.rest.core.context.AnnotatedPersonEventHandler org.springframework.data.rest.core.context.AnnotatedPersonEventHandler ( ) { return new AnnotatedPersonEventHandler ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public static org.springframework.data.rest.core.context.AnnotatedEventHandlerInvoker org.springframework.data.rest.core.context.AnnotatedEventHandlerInvoker ( ) { return new AnnotatedEventHandlerInvoker ( ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) { org.springframework.data.rest.core.context.Person = org.springframework.data.rest.core.context.PersonRepository . save ( new Person ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = EventHandlerInvokedException .class ) public void void ( ) java.lang.Exception { org.springframework.data.rest.core.context.ApplicationContext . publishEvent ( new BeforeCreateEvent ( org.springframework.data.rest.core.context.Person ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = EventHandlerInvokedException .class ) public void void ( ) java.lang.Exception { org.springframework.data.rest.core.context.ApplicationContext . publishEvent ( new AfterCreateEvent ( org.springframework.data.rest.core.context.Person ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = EventHandlerInvokedException .class ) public void void ( ) java.lang.Exception { org.springframework.data.rest.core.context.ApplicationContext . publishEvent ( new BeforeSaveEvent ( org.springframework.data.rest.core.context.Person ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = EventHandlerInvokedException .class ) public void void ( ) java.lang.Exception { org.springframework.data.rest.core.context.ApplicationContext . publishEvent ( new AfterSaveEvent ( org.springframework.data.rest.core.context.Person ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = EventHandlerInvokedException .class ) public void void ( ) java.lang.Exception { org.springframework.data.rest.core.context.ApplicationContext . publishEvent ( new BeforeDeleteEvent ( org.springframework.data.rest.core.context.Person ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = EventHandlerInvokedException .class ) public void void ( ) java.lang.Exception { org.springframework.data.rest.core.context.ApplicationContext . publishEvent ( new AfterDeleteEvent ( org.springframework.data.rest.core.context.Person ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = EventHandlerInvokedException .class ) public void void ( ) java.lang.Exception { org.springframework.data.rest.core.context.ApplicationContext . publishEvent ( new BeforeLinkSaveEvent ( org.springframework.data.rest.core.context.Person , new java.lang.Object ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = EventHandlerInvokedException .class ) public void void ( ) java.lang.Exception { org.springframework.data.rest.core.context.ApplicationContext . publishEvent ( new AfterLinkSaveEvent ( org.springframework.data.rest.core.context.Person , new java.lang.Object ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = EventHandlerInvokedException .class ) public void void ( ) java.lang.Exception { org.springframework.data.rest.core.context.ApplicationContext . publishEvent ( new BeforeLinkDeleteEvent ( org.springframework.data.rest.core.context.Person , new java.lang.Object ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = EventHandlerInvokedException .class ) public void void ( ) java.lang.Exception { org.springframework.data.rest.core.context.ApplicationContext . publishEvent ( new AfterLinkDeleteEvent ( org.springframework.data.rest.core.context.Person , new java.lang.Object ( ) ) ) ; }  <METHOD_END>
