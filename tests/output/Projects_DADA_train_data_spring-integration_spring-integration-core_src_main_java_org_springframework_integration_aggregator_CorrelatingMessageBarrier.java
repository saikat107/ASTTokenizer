<METHOD_START> public void ( MessageGroupStore org.springframework.integration.aggregator.MessageGroupStore ) { this . org.springframework.integration.aggregator.MessageGroupStore = org.springframework.integration.aggregator.MessageGroupStore ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( new SimpleMessageStore ( NUMBER ) ); }  <METHOD_END>
<METHOD_START> public void void ( CorrelationStrategy org.springframework.integration.aggregator.CorrelationStrategy ) { this . org.springframework.integration.aggregator.CorrelationStrategy = org.springframework.integration.aggregator.CorrelationStrategy ; }  <METHOD_END>
<METHOD_START> public void void ( ReleaseStrategy org.springframework.integration.aggregator.ReleaseStrategy ) { this . org.springframework.integration.aggregator.ReleaseStrategy = org.springframework.integration.aggregator.ReleaseStrategy ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Message < ? > org.springframework.integration.aggregator.Message<?> ) throws java.lang.Exception { java.lang.Object java.lang.Object = this . org.springframework.integration.aggregator.CorrelationStrategy . getCorrelationKey ( org.springframework.integration.aggregator.Message<> ) ; java.lang.Object java.lang.Object = java.lang.Object ( java.lang.Object ) ; synchronized ( java.lang.Object ) { this . org.springframework.integration.aggregator.MessageGroupStore . addMessagesToGroup ( java.lang.Object , org.springframework.integration.aggregator.Message<> ) ; } if ( org.springframework.integration.aggregator.Log . isDebugEnabled ( ) ) { org.springframework.integration.aggregator.Log . debug ( java.lang.String . java.lang.String ( STRING , java.lang.Object , org.springframework.integration.aggregator.Message<> ) ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { java.lang.Object java.lang.Object = this . java.util.concurrent.ConcurrentMap<java.lang.Object,java.lang.Object> . java.lang.Object ( java.lang.Object , java.lang.Object ) ; return java.lang.Object == null ? java.lang.Object : java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.aggregator.Message<java.lang.Object> < java.lang.Object > org.springframework.integration.aggregator.Message<java.lang.Object> ( ) { for ( java.lang.Object java.lang.Object : this . java.util.concurrent.ConcurrentMap<java.lang.Object,java.lang.Object> . java.util.Set<java.lang.Object> ( ) ) { java.lang.Object java.lang.Object = java.lang.Object ( java.lang.Object ) ; synchronized ( java.lang.Object ) { MessageGroup org.springframework.integration.aggregator.MessageGroup = this . org.springframework.integration.aggregator.MessageGroupStore . getMessageGroup ( java.lang.Object ) ; if ( org.springframework.integration.aggregator.MessageGroup != null ) { if ( this . org.springframework.integration.aggregator.ReleaseStrategy . canRelease ( org.springframework.integration.aggregator.MessageGroup ) ) { Message < ? > org.springframework.integration.aggregator.Message<?> = null ; java.util.Iterator<org.springframework.integration.aggregator.Message<?>> < Message < ? > > java.util.Iterator<org.springframework.integration.aggregator.Message<?>> = org.springframework.integration.aggregator.MessageGroup . getMessages ( ) . iterator ( ) ; if ( java.util.Iterator<org.springframework.integration.aggregator.Message<?>> . hasNext ( ) ) { org.springframework.integration.aggregator.Message<?> = java.util.Iterator<org.springframework.integration.aggregator.Message<?>> . next ( ) ; this . org.springframework.integration.aggregator.MessageGroupStore . removeMessagesFromGroup ( java.lang.Object , org.springframework.integration.aggregator.Message<> ) ; if ( org.springframework.integration.aggregator.Log . isDebugEnabled ( ) ) { org.springframework.integration.aggregator.Log . debug ( java.lang.String . java.lang.String ( STRING , java.lang.Object , org.springframework.integration.aggregator.Message<> ) ) ; } } else { void ( java.lang.Object ) ; } @ java.lang.SuppressWarnings ( STRING ) Message < java.lang.Object > org.springframework.integration.aggregator.Message<java.lang.Object> = ( Message < java.lang.Object > ) org.springframework.integration.aggregator.Message<> ; return org.springframework.integration.aggregator.Message<java.lang.Object> ; } } } } return null ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Object java.lang.Object ) { this . java.util.concurrent.ConcurrentMap<java.lang.Object,java.lang.Object> . java.lang.Object ( java.lang.Object ) ; this . org.springframework.integration.aggregator.MessageGroupStore . removeMessageGroup ( java.lang.Object ) ; }  <METHOD_END>
