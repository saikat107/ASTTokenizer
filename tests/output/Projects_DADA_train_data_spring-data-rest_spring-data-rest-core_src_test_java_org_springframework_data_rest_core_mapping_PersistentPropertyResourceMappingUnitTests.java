<METHOD_START> @ Test public void void ( ) { ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping = org.springframework.data.rest.core.mapping.ResourceMapping ( org.springframework.data.rest.core.mapping.PersistentPropertyResourceMappingUnitTests.Entity .class , STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping ) . isNotNull ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . getPath ( ) ) . isEqualTo ( new Path ( STRING ) ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . getRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . isExported ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping = org.springframework.data.rest.core.mapping.ResourceMapping ( org.springframework.data.rest.core.mapping.PersistentPropertyResourceMappingUnitTests.Entity .class , STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping ) . isNotNull ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . getPath ( ) ) . isEqualTo ( new Path ( STRING ) ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . getRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . isExported ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping = org.springframework.data.rest.core.mapping.ResourceMapping ( org.springframework.data.rest.core.mapping.PersistentPropertyResourceMappingUnitTests.Entity .class , STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping ) . isNotNull ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . getPath ( ) ) . isEqualTo ( new Path ( STRING ) ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . getRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . isExported ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping = org.springframework.data.rest.core.mapping.ResourceMapping ( org.springframework.data.rest.core.mapping.PersistentPropertyResourceMappingUnitTests.Entity .class , STRING ) ; ResourceDescription org.springframework.data.rest.core.mapping.ResourceDescription = org.springframework.data.rest.core.mapping.ResourceMapping . getDescription ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceDescription . isDefault ( ) ) . isTrue ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceDescription . getMessage ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping = org.springframework.data.rest.core.mapping.ResourceMapping ( org.springframework.data.rest.core.mapping.PersistentPropertyResourceMappingUnitTests.Entity .class , STRING ) ; ResourceDescription org.springframework.data.rest.core.mapping.ResourceDescription = org.springframework.data.rest.core.mapping.ResourceMapping . getDescription ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceDescription . isDefault ( ) ) . isFalse ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceDescription . getMessage ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.rest.core.mapping.ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { KeyValuePersistentEntity < ? , ? > org.springframework.data.rest.core.mapping.KeyValuePersistentEntity<?,?> = org.springframework.data.rest.core.mapping.KeyValueMappingContext<,> . getRequiredPersistentEntity ( java.lang.Class<> ) ; KeyValuePersistentProperty < ? > org.springframework.data.rest.core.mapping.KeyValuePersistentProperty<?> = org.springframework.data.rest.core.mapping.KeyValuePersistentEntity<,> . getRequiredPersistentProperty ( java.lang.String ) ; ResourceMappings org.springframework.data.rest.core.mapping.ResourceMappings = new PersistentEntitiesResourceMappings ( new PersistentEntities ( java.util.Arrays . java.util.List ( org.springframework.data.rest.core.mapping.KeyValueMappingContext<,> ) ) ) ; return new PersistentPropertyResourceMapping ( org.springframework.data.rest.core.mapping.KeyValuePersistentProperty<> , org.springframework.data.rest.core.mapping.ResourceMappings ) ; }  <METHOD_END>
<METHOD_START> @ RestResource ( path = STRING , rel = STRING , exported = false ) public org.springframework.data.rest.core.mapping.PersistentPropertyResourceMappingUnitTests.Related org.springframework.data.rest.core.mapping.PersistentPropertyResourceMappingUnitTests.Related ( ) { return org.springframework.data.rest.core.mapping.PersistentPropertyResourceMappingUnitTests.Related ; }  <METHOD_END>
