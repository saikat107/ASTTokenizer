<METHOD_START> @ Test public void void ( ) java.lang.Exception { TextResourcePropertyOrigin org.springframework.boot.env.TextResourcePropertyOrigin = new TextResourcePropertyOrigin ( null , null ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin . getResource ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { TextResourcePropertyOrigin org.springframework.boot.env.TextResourcePropertyOrigin = new TextResourcePropertyOrigin ( null , null ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin . getLocation ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathResource org.springframework.boot.env.ClassPathResource = new ClassPathResource ( STRING ) ; TextResourcePropertyOrigin org.springframework.boot.env.TextResourcePropertyOrigin = new TextResourcePropertyOrigin ( org.springframework.boot.env.ClassPathResource , null ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin . getResource ( ) ) . isEqualTo ( org.springframework.boot.env.ClassPathResource ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Location org.springframework.boot.env.Location = new Location ( NUMBER , NUMBER ) ; TextResourcePropertyOrigin org.springframework.boot.env.TextResourcePropertyOrigin = new TextResourcePropertyOrigin ( null , org.springframework.boot.env.Location ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin . getLocation ( ) ) . isEqualTo ( org.springframework.boot.env.Location ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Location org.springframework.boot.env.Location = new Location ( NUMBER , NUMBER ) ; assertThat ( org.springframework.boot.env.Location . getLine ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Location org.springframework.boot.env.Location = new Location ( NUMBER , NUMBER ) ; assertThat ( org.springframework.boot.env.Location . getColumn ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Location org.springframework.boot.env.Location = new Location ( NUMBER , NUMBER ) ; assertThat ( org.springframework.boot.env.Location . toString ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathResource org.springframework.boot.env.ClassPathResource = new ClassPathResource ( STRING ) ; Location org.springframework.boot.env.Location = new Location ( NUMBER , NUMBER ) ; TextResourcePropertyOrigin org.springframework.boot.env.TextResourcePropertyOrigin = new TextResourcePropertyOrigin ( org.springframework.boot.env.ClassPathResource , org.springframework.boot.env.Location ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin . toString ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Location org.springframework.boot.env.Location = new Location ( NUMBER , NUMBER ) ; TextResourcePropertyOrigin org.springframework.boot.env.TextResourcePropertyOrigin = new TextResourcePropertyOrigin ( null , org.springframework.boot.env.Location ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin . toString ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ClassPathResource org.springframework.boot.env.ClassPathResource = new ClassPathResource ( STRING ) ; TextResourcePropertyOrigin org.springframework.boot.env.TextResourcePropertyOrigin = new TextResourcePropertyOrigin ( org.springframework.boot.env.ClassPathResource , null ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin . toString ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Location org.springframework.boot.env.Location = new Location ( NUMBER , NUMBER ) ; Location org.springframework.boot.env.Location = new Location ( NUMBER , NUMBER ) ; Location org.springframework.boot.env.Location = new Location ( NUMBER , NUMBER ) ; assertThat ( org.springframework.boot.env.Location . hashCode ( ) ) . isEqualTo ( org.springframework.boot.env.Location . hashCode ( ) ) ; assertThat ( org.springframework.boot.env.Location . hashCode ( ) ) . isEqualTo ( org.springframework.boot.env.Location . hashCode ( ) ) ; assertThat ( org.springframework.boot.env.Location . hashCode ( ) ) . isNotEqualTo ( org.springframework.boot.env.Location . hashCode ( ) ) ; assertThat ( org.springframework.boot.env.Location ) . isEqualTo ( org.springframework.boot.env.Location ) ; assertThat ( org.springframework.boot.env.Location ) . isEqualTo ( org.springframework.boot.env.Location ) ; assertThat ( org.springframework.boot.env.Location ) . isNotEqualTo ( org.springframework.boot.env.Location ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { TextResourcePropertyOrigin org.springframework.boot.env.TextResourcePropertyOrigin = new TextResourcePropertyOrigin ( new ClassPathResource ( STRING ) , new Location ( NUMBER , NUMBER ) ) ; TextResourcePropertyOrigin org.springframework.boot.env.TextResourcePropertyOrigin = new TextResourcePropertyOrigin ( new ClassPathResource ( STRING ) , new Location ( NUMBER , NUMBER ) ) ; TextResourcePropertyOrigin org.springframework.boot.env.TextResourcePropertyOrigin = new TextResourcePropertyOrigin ( new ClassPathResource ( STRING ) , new Location ( NUMBER , NUMBER ) ) ; TextResourcePropertyOrigin org.springframework.boot.env.TextResourcePropertyOrigin = new TextResourcePropertyOrigin ( new ClassPathResource ( STRING ) , new Location ( NUMBER , NUMBER ) ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin . hashCode ( ) ) . isEqualTo ( org.springframework.boot.env.TextResourcePropertyOrigin . hashCode ( ) ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin . hashCode ( ) ) . isEqualTo ( org.springframework.boot.env.TextResourcePropertyOrigin . hashCode ( ) ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin . hashCode ( ) ) . isNotEqualTo ( org.springframework.boot.env.TextResourcePropertyOrigin . hashCode ( ) ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin . hashCode ( ) ) . isNotEqualTo ( org.springframework.boot.env.TextResourcePropertyOrigin . hashCode ( ) ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin ) . isEqualTo ( org.springframework.boot.env.TextResourcePropertyOrigin ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin ) . isEqualTo ( org.springframework.boot.env.TextResourcePropertyOrigin ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin ) . isNotEqualTo ( org.springframework.boot.env.TextResourcePropertyOrigin ) ; assertThat ( org.springframework.boot.env.TextResourcePropertyOrigin ) . isNotEqualTo ( org.springframework.boot.env.TextResourcePropertyOrigin ) ; }  <METHOD_END>
