<METHOD_START> public void ( ) { this . java.lang.Class<? extends org.springframework.boot.test.web.client.RequestExpectationManager> = SimpleRequestExpectationManager .class ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<? extends org.springframework.boot.test.web.client.RequestExpectationManager> < ? extends RequestExpectationManager > java.lang.Class<? extends org.springframework.boot.test.web.client.RequestExpectationManager> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; this . java.lang.Class<? extends org.springframework.boot.test.web.client.RequestExpectationManager> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( RestTemplate org.springframework.boot.test.web.client.RestTemplate ) { RequestExpectationManager org.springframework.boot.test.web.client.RequestExpectationManager = org.springframework.boot.test.web.client.RequestExpectationManager ( ) ; if ( this . boolean ) { org.springframework.boot.test.web.client.RequestExpectationManager = RootUriRequestExpectationManager . forRestTemplate ( org.springframework.boot.test.web.client.RestTemplate , org.springframework.boot.test.web.client.RequestExpectationManager ) ; } MockRestServiceServer org.springframework.boot.test.web.client.MockRestServiceServer = MockRestServiceServer . bindTo ( org.springframework.boot.test.web.client.RestTemplate ) . build ( org.springframework.boot.test.web.client.RequestExpectationManager ) ; this . java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.RequestExpectationManager> . put ( org.springframework.boot.test.web.client.RestTemplate , org.springframework.boot.test.web.client.RequestExpectationManager ) ; this . java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.MockRestServiceServer> . put ( org.springframework.boot.test.web.client.RestTemplate , org.springframework.boot.test.web.client.MockRestServiceServer ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.boot.test.web.client.RequestExpectationManager org.springframework.boot.test.web.client.RequestExpectationManager ( ) { return BeanUtils . instantiateClass ( this . java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.web.client.MockRestServiceServer org.springframework.boot.test.web.client.MockRestServiceServer ( ) { Assert . state ( this . java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.MockRestServiceServer> . size ( ) > NUMBER , STRING + STRING + STRING ) ; Assert . state ( this . java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.MockRestServiceServer> . size ( ) == NUMBER , STRING + STRING + STRING ) ; return this . java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.MockRestServiceServer> . values ( ) . iterator ( ) . next ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.RequestExpectationManager> < RestTemplate , RequestExpectationManager > java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.RequestExpectationManager> ( ) { return this . java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.RequestExpectationManager> ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.test.web.client.MockRestServiceServer org.springframework.boot.test.web.client.MockRestServiceServer ( RestTemplate org.springframework.boot.test.web.client.RestTemplate ) { return this . java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.MockRestServiceServer> . get ( org.springframework.boot.test.web.client.RestTemplate ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.MockRestServiceServer> < RestTemplate , MockRestServiceServer > java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.MockRestServiceServer> ( ) { return java.util.Collections . java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.MockRestServiceServer> ( this . java.util.Map<org.springframework.boot.test.web.client.RestTemplate,org.springframework.boot.test.web.client.MockRestServiceServer> ) ; }  <METHOD_END>
