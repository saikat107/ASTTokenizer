<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.social.AnnotationConfigWebApplicationContext != null ) { this . org.springframework.boot.autoconfigure.social.AnnotationConfigWebApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> public void ( ) { super(); }  <METHOD_END>
<METHOD_START> protected void void ( ) { assertThat ( this . org.springframework.boot.autoconfigure.social.AnnotationConfigWebApplicationContext . getBean ( UsersConnectionRepository .class ) ) . isNotNull ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.social.AnnotationConfigWebApplicationContext . getBean ( ConnectionRepository .class ) ) . isNotNull ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.social.AnnotationConfigWebApplicationContext . getBean ( ConnectionFactoryLocator .class ) ) . isNotNull ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.social.AnnotationConfigWebApplicationContext . getBean ( UserIdSource .class ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { void ( UsersConnectionRepository .class ) ; void ( ConnectionRepository .class ) ; void ( ConnectionFactoryLocator .class ) ; void ( UserIdSource .class ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { try { assertThat ( this . org.springframework.boot.autoconfigure.social.AnnotationConfigWebApplicationContext . getBean ( java.lang.Class<> ) ) . isNotNull ( ) ; fail ( STRING + java.lang.Class<> . java.lang.String ( ) ) ; } catch ( NoSuchBeanDefinitionException org.springframework.boot.autoconfigure.social.NoSuchBeanDefinitionException ) { } }  <METHOD_END>
