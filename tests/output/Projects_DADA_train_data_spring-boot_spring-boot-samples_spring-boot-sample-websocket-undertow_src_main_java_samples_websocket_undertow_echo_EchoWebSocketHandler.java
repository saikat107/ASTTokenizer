<METHOD_START> public void ( EchoService samples.websocket.undertow.echo.EchoService ) { this . samples.websocket.undertow.echo.EchoService = samples.websocket.undertow.echo.EchoService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( WebSocketSession samples.websocket.undertow.echo.WebSocketSession ) { samples.websocket.undertow.echo.Logger . debug ( STRING + this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( WebSocketSession samples.websocket.undertow.echo.WebSocketSession , TextMessage samples.websocket.undertow.echo.TextMessage )			throws java.lang.Exception { java.lang.String java.lang.String = this . samples.websocket.undertow.echo.EchoService . getMessage ( samples.websocket.undertow.echo.TextMessage . getPayload ( ) ) ; samples.websocket.undertow.echo.Logger . debug ( java.lang.String ) ; samples.websocket.undertow.echo.WebSocketSession . sendMessage ( new TextMessage ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( WebSocketSession samples.websocket.undertow.echo.WebSocketSession , java.lang.Throwable java.lang.Throwable )			throws java.lang.Exception { samples.websocket.undertow.echo.WebSocketSession . close ( CloseStatus . SERVER_ERROR ) ; }  <METHOD_END>
