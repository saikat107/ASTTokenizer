<METHOD_START> public static void void ( Service org.springframework.integration.mail.Service ) { if ( org.springframework.integration.mail.Service != null ) { try { org.springframework.integration.mail.Service . close ( ) ; } catch ( MessagingException org.springframework.integration.mail.MessagingException ) { org.springframework.integration.mail.Log . debug ( STRING , org.springframework.integration.mail.MessagingException ) ; } } }  <METHOD_END>
<METHOD_START> public static void void ( Folder org.springframework.integration.mail.Folder , boolean boolean ) { if ( org.springframework.integration.mail.Folder != null && org.springframework.integration.mail.Folder . isOpen ( ) ) { try { org.springframework.integration.mail.Folder . close ( boolean ) ; } catch ( MessagingException org.springframework.integration.mail.MessagingException ) { org.springframework.integration.mail.Log . debug ( STRING , org.springframework.integration.mail.MessagingException ) ; } catch ( java.lang.NullPointerException java.lang.NullPointerException ) { org.springframework.integration.mail.Log . debug ( STRING , java.lang.NullPointerException ) ; } } }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( URLName org.springframework.integration.mail.URLName ) { java.lang.String java.lang.String = org.springframework.integration.mail.URLName . getProtocol ( ) ; java.lang.String java.lang.String = org.springframework.integration.mail.URLName . getUsername ( ) ; java.lang.String java.lang.String = org.springframework.integration.mail.URLName . getPassword ( ) ; java.lang.String java.lang.String = org.springframework.integration.mail.URLName . getHost ( ) ; int int = org.springframework.integration.mail.URLName . getPort ( ) ; java.lang.String java.lang.String = org.springframework.integration.mail.URLName . getFile ( ) ; java.lang.String java.lang.String = org.springframework.integration.mail.URLName . getRef ( ) ; java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer ( ) ; if ( java.lang.String != null ) { java.lang.StringBuffer . java.lang.StringBuffer ( java.lang.String ) . java.lang.StringBuffer ( ':' ) ; } if ( StringUtils . hasLength ( java.lang.String ) || StringUtils . hasLength ( java.lang.String ) ) { java.lang.StringBuffer . java.lang.StringBuffer ( STRING ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.StringBuffer . java.lang.StringBuffer ( java.lang.String ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.StringBuffer . java.lang.StringBuffer ( STRING ) ; } java.lang.StringBuffer . java.lang.StringBuffer ( STRING ) ; } if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.StringBuffer . java.lang.StringBuffer ( java.lang.String ) ; } if ( int != - NUMBER ) { java.lang.StringBuffer . java.lang.StringBuffer ( ':' ) . java.lang.StringBuffer ( java.lang.Integer . java.lang.String ( int ) ) ; } if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.StringBuffer . java.lang.StringBuffer ( '/' ) ; } } if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.StringBuffer . java.lang.StringBuffer ( java.lang.String ) ; } if ( StringUtils . hasLength ( java.lang.String ) ) { java.lang.StringBuffer . java.lang.StringBuffer ( '#' ) . java.lang.StringBuffer ( java.lang.String ) ; } return java.lang.StringBuffer . java.lang.String ( ) ; }  <METHOD_END>
