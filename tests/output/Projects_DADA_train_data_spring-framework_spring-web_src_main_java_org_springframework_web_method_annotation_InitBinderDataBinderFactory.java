<METHOD_START> public void ( java.util.List<org.springframework.web.method.annotation.InvocableHandlerMethod> < InvocableHandlerMethod > java.util.List<org.springframework.web.method.annotation.InvocableHandlerMethod> , WebBindingInitializer org.springframework.web.method.annotation.WebBindingInitializer ) { super( org.springframework.web.method.annotation.WebBindingInitializer ); this . java.util.List<org.springframework.web.method.annotation.InvocableHandlerMethod> = ( java.util.List<org.springframework.web.method.annotation.InvocableHandlerMethod> != null ) ? java.util.List<org.springframework.web.method.annotation.InvocableHandlerMethod> : new java.util.ArrayList <> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( WebDataBinder org.springframework.web.method.annotation.WebDataBinder , NativeWebRequest org.springframework.web.method.annotation.NativeWebRequest ) throws java.lang.Exception { for ( InvocableHandlerMethod org.springframework.web.method.annotation.InvocableHandlerMethod : this . java.util.List<org.springframework.web.method.annotation.InvocableHandlerMethod> ) { if ( boolean ( org.springframework.web.method.annotation.InvocableHandlerMethod , org.springframework.web.method.annotation.WebDataBinder ) ) { java.lang.Object java.lang.Object = org.springframework.web.method.annotation.InvocableHandlerMethod . invokeForRequest ( org.springframework.web.method.annotation.NativeWebRequest , null , org.springframework.web.method.annotation.WebDataBinder ) ; if ( java.lang.Object != null ) { throw new java.lang.IllegalStateException ( STRING + org.springframework.web.method.annotation.InvocableHandlerMethod ) ; } } } }  <METHOD_END>
<METHOD_START> protected boolean boolean ( HandlerMethod org.springframework.web.method.annotation.HandlerMethod , WebDataBinder org.springframework.web.method.annotation.WebDataBinder ) { InitBinder org.springframework.web.method.annotation.InitBinder = org.springframework.web.method.annotation.HandlerMethod . getMethodAnnotation ( InitBinder .class ) ; java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = java.util.Arrays . java.util.List ( org.springframework.web.method.annotation.InitBinder . value ( ) ) ; return ( java.util.Collection<java.lang.String> . int ( ) == NUMBER || java.util.Collection<java.lang.String> . boolean ( org.springframework.web.method.annotation.WebDataBinder . getObjectName ( ) ) ) ; }  <METHOD_END>
