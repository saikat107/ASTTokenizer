<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { return new java.lang.String [] { IntThing .class . java.lang.Package ( ) . java.lang.String ( ) } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.cassandra.test.integration.repository.querymethods.intparam.SchemaAction org.springframework.data.cassandra.test.integration.repository.querymethods.intparam.SchemaAction ( ) { return SchemaAction . RECREATE_DROP_UNUSED ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { int int = NUMBER ; IntThing org.springframework.data.cassandra.test.integration.repository.querymethods.intparam.IntThing = new IntThing ( NUMBER ) ; org.springframework.data.cassandra.test.integration.repository.querymethods.intparam.IntThingRepo . save ( org.springframework.data.cassandra.test.integration.repository.querymethods.intparam.IntThing ) ; IntThing org.springframework.data.cassandra.test.integration.repository.querymethods.intparam.IntThing = org.springframework.data.cassandra.test.integration.repository.querymethods.intparam.IntThingRepo . findThingByIntPrimitive ( int ) ; assertThat ( org.springframework.data.cassandra.test.integration.repository.querymethods.intparam.IntThing ) . isNotNull ( ) ; org.springframework.data.cassandra.test.integration.repository.querymethods.intparam.IntThing = org.springframework.data.cassandra.test.integration.repository.querymethods.intparam.IntThingRepo . findThingByIntReference ( new java.lang.Integer ( int ) ) ; assertThat ( org.springframework.data.cassandra.test.integration.repository.querymethods.intparam.IntThing ) . isNotNull ( ) ; }  <METHOD_END>
