<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; Assert . isTrue ( boolean || boolean , STRING ) ; if ( boolean ) { java.lang.String [] java.lang.String[] = StringUtils . commaDelimitedListToStringArray ( java.lang.String ) ; this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = new java.util.HashSet<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> . add ( new SecurityConfig ( StringUtils . trimAllWhitespace ( java.lang.String ) ) ) ; } } else { this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = java.util.Collections . java.util.Set<java.lang.Object> ( ) ; } if ( boolean ) { java.lang.String [] java.lang.String[] = StringUtils . commaDelimitedListToStringArray ( java.lang.String ) ; this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = new java.util.HashSet<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> . add ( new SecurityConfig ( StringUtils . trimAllWhitespace ( java.lang.String ) ) ) ; } } else { this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = java.util.Collections . java.util.Set<java.lang.Object> ( ) ; } }  <METHOD_END>
<METHOD_START> public void ( java.lang.String [] java.lang.String[] , java.lang.String [] java.lang.String[] ) { boolean boolean = ! ObjectUtils . isEmpty ( java.lang.String[] ) ; boolean boolean = ! ObjectUtils . isEmpty ( java.lang.String[] ) ; Assert . isTrue ( boolean || boolean , STRING ) ; if ( boolean ) { this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = new java.util.HashSet<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> . add ( new SecurityConfig ( java.lang.String ) ) ; } } else { this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = java.util.Collections . java.util.Set<java.lang.Object> ( ) ; } if ( boolean ) { this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = new java.util.HashSet<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> . add ( new SecurityConfig ( java.lang.String ) ) ; } } else { this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> = java.util.Collections . java.util.Set<java.lang.Object> ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> ( ) { return this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> < ConfigAttribute > java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> ( ) { return this . java.util.Collection<org.springframework.integration.security.channel.ConfigAttribute> ; }  <METHOD_END>
