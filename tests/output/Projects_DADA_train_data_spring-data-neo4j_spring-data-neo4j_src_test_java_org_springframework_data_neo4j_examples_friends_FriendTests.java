<METHOD_START> @ Before public void void ( ) { getGraphDatabaseService ( ) . execute ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test @ Transactional public void void ( ) { org.springframework.data.neo4j.examples.friends.FriendService . createPersonAndFriends ( ) ; org.springframework.data.neo4j.examples.friends.Session . clear ( ) ; Person org.springframework.data.neo4j.examples.friends.Person = org.springframework.data.neo4j.examples.friends.Session . loadAll ( Person .class , new Filter ( STRING , ComparisonOperator . EQUALS , STRING ) ) . iterator ( ) . next ( ) ; assertNotNull ( org.springframework.data.neo4j.examples.friends.Person ) ; assertEquals ( NUMBER , org.springframework.data.neo4j.examples.friends.Person . getFriendships ( ) . size ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ Transactional public void void ( ) { Person org.springframework.data.neo4j.examples.friends.Person = new Person ( ) ; org.springframework.data.neo4j.examples.friends.Person . setFirstName ( STRING ) ; org.springframework.data.neo4j.examples.friends.Session . save ( org.springframework.data.neo4j.examples.friends.Person ) ; Person org.springframework.data.neo4j.examples.friends.Person = new Person ( ) ; org.springframework.data.neo4j.examples.friends.Person . setFirstName ( STRING ) ; org.springframework.data.neo4j.examples.friends.Session . save ( org.springframework.data.neo4j.examples.friends.Person ) ; Friendship org.springframework.data.neo4j.examples.friends.Friendship = org.springframework.data.neo4j.examples.friends.Person . addFriend ( org.springframework.data.neo4j.examples.friends.Person ) ; org.springframework.data.neo4j.examples.friends.Friendship . setTimestamp ( java.lang.System . long ( ) ) ; org.springframework.data.neo4j.examples.friends.Session . save ( org.springframework.data.neo4j.examples.friends.Person ) ; Friendship org.springframework.data.neo4j.examples.friends.Friendship = org.springframework.data.neo4j.examples.friends.FriendshipRepository . getFriendship ( org.springframework.data.neo4j.examples.friends.Person , org.springframework.data.neo4j.examples.friends.Person ) ; assertNotNull ( org.springframework.data.neo4j.examples.friends.Friendship ) ; assertEquals ( STRING , org.springframework.data.neo4j.examples.friends.Friendship . getPersonStartNode ( ) . getFirstName ( ) ) ; assertEquals ( STRING , org.springframework.data.neo4j.examples.friends.Friendship . getPersonEndNode ( ) . getFirstName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.neo4j.examples.friends.PlatformTransactionManager org.springframework.data.neo4j.examples.friends.PlatformTransactionManager ( ) { return new Neo4jTransactionManager ( org.springframework.data.neo4j.examples.friends.SessionFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.data.neo4j.examples.friends.SessionFactory org.springframework.data.neo4j.examples.friends.SessionFactory ( ) { return new SessionFactory ( getBaseConfiguration ( ) . build ( ) , STRING ) ; }  <METHOD_END>
