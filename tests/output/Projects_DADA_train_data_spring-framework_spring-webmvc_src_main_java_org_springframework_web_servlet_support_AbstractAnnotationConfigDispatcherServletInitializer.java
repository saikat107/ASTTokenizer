<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.support.WebApplicationContext org.springframework.web.servlet.support.WebApplicationContext ( ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = java.lang.Class<?>[] ( ) ; if ( ! ObjectUtils . isEmpty ( java.lang.Class<?>[] ) ) { AnnotationConfigWebApplicationContext org.springframework.web.servlet.support.AnnotationConfigWebApplicationContext = new AnnotationConfigWebApplicationContext ( ) ; org.springframework.web.servlet.support.AnnotationConfigWebApplicationContext . register ( java.lang.Class<?>[] ) ; return org.springframework.web.servlet.support.AnnotationConfigWebApplicationContext ; } else { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.support.WebApplicationContext org.springframework.web.servlet.support.WebApplicationContext ( ) { AnnotationConfigWebApplicationContext org.springframework.web.servlet.support.AnnotationConfigWebApplicationContext = new AnnotationConfigWebApplicationContext ( ) ; java.lang.Class<?> < ? > [] java.lang.Class<?>[] = java.lang.Class<?>[] ( ) ; if ( ! ObjectUtils . isEmpty ( java.lang.Class<?>[] ) ) { org.springframework.web.servlet.support.AnnotationConfigWebApplicationContext . register ( java.lang.Class<?>[] ) ; } return org.springframework.web.servlet.support.AnnotationConfigWebApplicationContext ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( )  <METHOD_END>
<METHOD_START> protected abstract java.lang.Class<?> < ? > [] java.lang.Class<?>[] ( )  <METHOD_END>
