<METHOD_START> @ Before public void void ( ) { MongoMappingContext org.springframework.data.mongodb.core.convert.MongoMappingContext = new MongoMappingContext ( ) ; DbRefResolver org.springframework.data.mongodb.core.convert.DbRefResolver = mock ( DbRefResolver .class ) ; org.springframework.data.mongodb.core.convert.MappingMongoConverter = new MappingMongoConverter ( org.springframework.data.mongodb.core.convert.DbRefResolver , org.springframework.data.mongodb.core.convert.MongoMappingContext ) ; org.springframework.data.mongodb.core.convert.MappingMongoConverter . afterPropertiesSet ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane = new org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane ( STRING , NUMBER ) ; org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train = new org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train ( STRING , NUMBER ) ; org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile = new org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile ( STRING , STRING , NUMBER ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile ) ; Document org.springframework.data.mongodb.core.convert.Document = new Document ( ) ; org.springframework.data.mongodb.core.convert.MappingMongoConverter . write ( java.util.Map<java.lang.String,java.lang.Object> , org.springframework.data.mongodb.core.convert.Document ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.mongodb.core.convert.MappingMongoConverter . read ( java.util.Map .class , org.springframework.data.mongodb.core.convert.Document ) ; assertTrue ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) instanceof org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane ) ; assertTrue ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) instanceof org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train ) ; assertTrue ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) instanceof org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile ) ; }  <METHOD_END>
<METHOD_START> @ Test @ Ignore ( STRING ) @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void void ( ) { org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane = new org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane ( STRING , NUMBER ) ; org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train = new org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train ( STRING , NUMBER ) ; org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile = new org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile ( STRING , STRING , NUMBER ) ; java.util.List java.util.List = new java.util.ArrayList ( ) ; java.util.List . boolean ( org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane ) ; java.util.List . boolean ( org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train ) ; java.util.List . boolean ( org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile ) ; Document org.springframework.data.mongodb.core.convert.Document = new Document ( ) ; org.springframework.data.mongodb.core.convert.MappingMongoConverter . write ( java.util.List , org.springframework.data.mongodb.core.convert.Document ) ; java.util.List java.util.List = org.springframework.data.mongodb.core.convert.MappingMongoConverter . read ( java.util.List .class , org.springframework.data.mongodb.core.convert.Document ) ; assertTrue ( java.util.List . java.lang.Object ( NUMBER ) instanceof org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane ) ; assertTrue ( java.util.List . java.lang.Object ( NUMBER ) instanceof org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train ) ; assertTrue ( java.util.List . java.lang.Object ( NUMBER ) instanceof org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void void ( ) { org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane = new org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane ( STRING , NUMBER ) ; org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train = new org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train ( STRING , NUMBER ) ; org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile = new org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile ( STRING , STRING , NUMBER ) ; java.util.List java.util.List = new java.util.ArrayList ( ) ; java.util.List . boolean ( org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane ) ; java.util.List . boolean ( org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train ) ; java.util.List . boolean ( org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.util.List ) ; org.springframework.data.mongodb.core.convert.DataMongo273Tests.Shipment org.springframework.data.mongodb.core.convert.DataMongo273Tests.Shipment = new org.springframework.data.mongodb.core.convert.DataMongo273Tests.Shipment ( java.util.Map<java.lang.String,java.lang.Object> ) ; Document org.springframework.data.mongodb.core.convert.Document = new Document ( ) ; org.springframework.data.mongodb.core.convert.MappingMongoConverter . write ( org.springframework.data.mongodb.core.convert.DataMongo273Tests.Shipment , org.springframework.data.mongodb.core.convert.Document ) ; org.springframework.data.mongodb.core.convert.DataMongo273Tests.Shipment org.springframework.data.mongodb.core.convert.DataMongo273Tests.Shipment = org.springframework.data.mongodb.core.convert.MappingMongoConverter . read ( org.springframework.data.mongodb.core.convert.DataMongo273Tests.Shipment .class , org.springframework.data.mongodb.core.convert.Document ) ; java.util.List java.util.List = ( java.util.List ) org.springframework.data.mongodb.core.convert.DataMongo273Tests.Shipment . java.util.Map ( ) . java.lang.Object ( STRING ) ; assertTrue ( java.util.List . java.lang.Object ( NUMBER ) instanceof org.springframework.data.mongodb.core.convert.DataMongo273Tests.Plane ) ; assertTrue ( java.util.List . java.lang.Object ( NUMBER ) instanceof org.springframework.data.mongodb.core.convert.DataMongo273Tests.Train ) ; assertTrue ( java.util.List . java.lang.Object ( NUMBER ) instanceof org.springframework.data.mongodb.core.convert.DataMongo273Tests.Automobile ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int ) { this . java.lang.String = java.lang.String ; this . int = int ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int ) { this . java.lang.String = java.lang.String ; this . int = int ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , int int ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . int = int ; }  <METHOD_END>
<METHOD_START> public void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { this . java.util.Map<java.lang.String,java.lang.Object> = java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> public java.util.Map java.util.Map ( ) { return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
