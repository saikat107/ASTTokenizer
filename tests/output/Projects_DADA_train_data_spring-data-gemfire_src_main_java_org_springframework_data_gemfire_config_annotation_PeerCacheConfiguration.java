<METHOD_START> @ Bean public org.springframework.data.gemfire.config.annotation.CacheFactoryBean org.springframework.data.gemfire.config.annotation.CacheFactoryBean ( ) { CacheFactoryBean org.springframework.data.gemfire.config.annotation.CacheFactoryBean = constructCacheFactoryBean ( ) ; org.springframework.data.gemfire.config.annotation.CacheFactoryBean . setEnableAutoReconnect ( boolean ( ) ) ; org.springframework.data.gemfire.config.annotation.CacheFactoryBean . setLockLease ( java.lang.Integer ( ) ) ; org.springframework.data.gemfire.config.annotation.CacheFactoryBean . setLockTimeout ( java.lang.Integer ( ) ) ; org.springframework.data.gemfire.config.annotation.CacheFactoryBean . setMessageSyncInterval ( java.lang.Integer ( ) ) ; org.springframework.data.gemfire.config.annotation.CacheFactoryBean . setSearchTimeout ( java.lang.Integer ( ) ) ; org.springframework.data.gemfire.config.annotation.CacheFactoryBean . setUseBeanFactoryLocator ( useBeanFactoryLocator ( ) ) ; org.springframework.data.gemfire.config.annotation.CacheFactoryBean . setUseClusterConfiguration ( boolean ( ) ) ; return org.springframework.data.gemfire.config.annotation.CacheFactoryBean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected < T extends org.springframework.data.gemfire.config.annotation.CacheFactoryBean > T T ( ) { return ( T ) new CacheFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { super. configureCache ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; if ( isCacheServerOrPeerCacheApplication ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.gemfire.config.annotation.AnnotationMetadata . getAnnotationAttributes ( getAnnotationTypeName ( ) ) ; void ( java.lang.Boolean . java.lang.Boolean . boolean ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ) ; void ( ( java.lang.Integer ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; void ( ( java.lang.Integer ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; void ( ( java.lang.Integer ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; void ( ( java.lang.Integer ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; void ( java.lang.Boolean . java.lang.Boolean . boolean ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ) ; java.lang.String java.lang.String = ( java.lang.String ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; if ( hasValue ( java.lang.String ) ) { setLocators ( java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class java.lang.Class ( ) { return PeerCacheApplication .class ; }  <METHOD_END>
<METHOD_START> void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> protected java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> protected java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> protected java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> protected java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
