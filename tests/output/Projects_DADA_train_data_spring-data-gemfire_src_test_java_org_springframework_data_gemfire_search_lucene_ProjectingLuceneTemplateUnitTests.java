<METHOD_START> @ Before public void void ( ) { org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplate = spy ( new ProjectingLuceneTemplate ( ) ) ; org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplate . setProjectionFactory ( org.springframework.data.gemfire.search.lucene.ProjectionFactory ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String> < java.lang.Long , java.lang.String > org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String> ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ) { return org.springframework.data.gemfire.search.lucene.LuceneResultStruct ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book . getIsbn ( ) , org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book . getTitle ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected < K , V > org.springframework.data.gemfire.search.lucene.LuceneResultStruct<K,V> < K , V > org.springframework.data.gemfire.search.lucene.LuceneResultStruct<K,V> ( K K , V V ) { LuceneResultStruct < K , V > org.springframework.data.gemfire.search.lucene.LuceneResultStruct<K,V> = mock ( LuceneResultStruct .class , java.lang.String . java.lang.String ( STRING , K ) ) ; when ( org.springframework.data.gemfire.search.lucene.LuceneResultStruct<K,V> . getValue ( ) ) . thenReturn ( V ) ; return org.springframework.data.gemfire.search.lucene.LuceneResultStruct<K,V> ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> < org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book > java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> = java.util.List ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book . newBook ( NUMBER , STRING ) , org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book . newBook ( NUMBER , STRING ) , org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book . newBook ( NUMBER , STRING ) ) ; java.util.List<org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String>> < LuceneResultStruct < java.lang.Long , java.lang.String > > java.util.List<org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String>> = java.util.List ( org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String> ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) ) , org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String> ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) ) , org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String> ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) ) ) ; doReturn ( java.util.List<org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String>> ) . when ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplate ) . query ( anyString ( ) , anyString ( ) , anyInt ( ) ) ; when ( org.springframework.data.gemfire.search.lucene.ProjectionFactory . createProjection ( eq ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) , anyString ( ) ) ) . thenAnswer ( invocationOnMock -> books . stream ( ) . filter ( book -> book . getTitle ( ) . equals ( invocationOnMock . getArgument ( NUMBER ) ) ) . findFirst ( ) . orElse ( null ) ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplate . query ( STRING , STRING , org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) ) . containsAll ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> ) ; verify ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplate , times ( NUMBER ) ) . query ( eq ( STRING ) , eq ( STRING ) , eq ( ProjectingLuceneTemplate . DEFAULT_RESULT_LIMIT ) , eq ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) ) ; verify ( org.springframework.data.gemfire.search.lucene.ProjectionFactory , times ( NUMBER ) ) . createProjection ( eq ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) , eq ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) . getTitle ( ) ) ) ; verify ( org.springframework.data.gemfire.search.lucene.ProjectionFactory , times ( NUMBER ) ) . createProjection ( eq ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) , eq ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) . getTitle ( ) ) ) ; verify ( org.springframework.data.gemfire.search.lucene.ProjectionFactory , times ( NUMBER ) ) . createProjection ( eq ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) , eq ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) . getTitle ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> < org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book > java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> = java.util.List ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book . newBook ( NUMBER , STRING ) , org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book . newBook ( NUMBER , STRING ) , org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book . newBook ( NUMBER , STRING ) ) ; java.util.List<org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String>> < LuceneResultStruct < java.lang.Long , java.lang.String > > java.util.List<org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String>> = java.util.List ( org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String> ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) ) , org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String> ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) ) , org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String> ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) ) ) ; doReturn ( java.util.List<org.springframework.data.gemfire.search.lucene.LuceneResultStruct<java.lang.Long,java.lang.String>> ) . when ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplate ) . query ( any ( LuceneQueryProvider .class ) , anyInt ( ) ) ; when ( org.springframework.data.gemfire.search.lucene.ProjectionFactory . createProjection ( eq ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) , anyString ( ) ) ) . thenAnswer ( invocationOnMock -> books . stream ( ) . filter ( book -> book . getTitle ( ) . equals ( invocationOnMock . getArgument ( NUMBER ) ) ) . findFirst ( ) . orElse ( null ) ) ; assertThat ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplate . query ( org.springframework.data.gemfire.search.lucene.LuceneQueryProvider , org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) ) . containsAll ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> ) ; verify ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplate , times ( NUMBER ) ) . query ( eq ( org.springframework.data.gemfire.search.lucene.LuceneQueryProvider ) , eq ( ProjectingLuceneTemplate . DEFAULT_RESULT_LIMIT ) , eq ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) ) ; verify ( org.springframework.data.gemfire.search.lucene.ProjectionFactory , times ( NUMBER ) ) . createProjection ( eq ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) , eq ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) . getTitle ( ) ) ) ; verify ( org.springframework.data.gemfire.search.lucene.ProjectionFactory , times ( NUMBER ) ) . createProjection ( eq ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) , eq ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) . getTitle ( ) ) ) ; verify ( org.springframework.data.gemfire.search.lucene.ProjectionFactory , times ( NUMBER ) ) . createProjection ( eq ( org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book .class ) , eq ( java.util.List<org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book> . org.springframework.data.gemfire.search.lucene.ProjectingLuceneTemplateUnitTests.Book ( NUMBER ) . getTitle ( ) ) ) ; }  <METHOD_END>
