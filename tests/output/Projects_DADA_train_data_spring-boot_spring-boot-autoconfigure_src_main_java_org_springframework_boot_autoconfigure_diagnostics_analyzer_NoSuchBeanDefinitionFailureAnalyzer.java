<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.boot.autoconfigure.diagnostics.analyzer.BeanFactory ) throws org.springframework.boot.autoconfigure.diagnostics.analyzer.BeansException { Assert . isInstanceOf ( ConfigurableListableBeanFactory .class , org.springframework.boot.autoconfigure.diagnostics.analyzer.BeanFactory ) ; this . org.springframework.boot.autoconfigure.diagnostics.analyzer.ConfigurableListableBeanFactory = ( ConfigurableListableBeanFactory ) org.springframework.boot.autoconfigure.diagnostics.analyzer.BeanFactory ; this . org.springframework.boot.autoconfigure.diagnostics.analyzer.MetadataReaderFactory = new CachingMetadataReaderFactory ( this . org.springframework.boot.autoconfigure.diagnostics.analyzer.ConfigurableListableBeanFactory . getBeanClassLoader ( ) ) ; this . org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionEvaluationReport = ConditionEvaluationReport . get ( this . org.springframework.boot.autoconfigure.diagnostics.analyzer.ConfigurableListableBeanFactory ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.autoconfigure.diagnostics.analyzer.FailureAnalysis org.springframework.boot.autoconfigure.diagnostics.analyzer.FailureAnalysis ( java.lang.Throwable java.lang.Throwable , NoSuchBeanDefinitionException org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException , java.lang.String java.lang.String ) { if ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException . getNumberOfBeansFound ( ) != NUMBER ) { return null ; } java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> < org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult > java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> = java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String . java.lang.String ( STRING , java.lang.String == null ? STRING : java.lang.String , java.lang.String ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) ) ) ; if ( ! java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> . boolean ( ) ) { for ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult : java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String . java.lang.String ( STRING , org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult ) ) ; } } java.lang.String java.lang.String = java.lang.String . java.lang.String ( STRING , ( ! java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> . boolean ( ) ? STRING : STRING ) , java.lang.String ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) ) ; return new FailureAnalysis ( java.lang.StringBuilder . java.lang.String ( ) , java.lang.String , org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( NoSuchBeanDefinitionException org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) { if ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException . getResolvableType ( ) != null ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<?> ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException . getResolvableType ( ) ) ; return STRING + java.lang.Class<> . java.lang.String ( ) + STRING ; } return STRING + org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException . getBeanName ( ) + STRING ; }  <METHOD_END>
<METHOD_START> private java.lang.Class<?> < ? > java.lang.Class<?> ( ResolvableType org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType ) { ResolvableType org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType = org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType . asCollection ( ) ; if ( ! org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType . equals ( ResolvableType . NONE ) ) { return org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType . getGeneric ( NUMBER ) . getRawClass ( ) ; } ResolvableType org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType = org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType . asMap ( ) ; if ( ! org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType . equals ( ResolvableType . NONE ) ) { return org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType . getGeneric ( NUMBER ) . getRawClass ( ) ; } return org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType . getRawClass ( ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> < org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult > java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> ( NoSuchBeanDefinitionException org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) { java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> < org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult > java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> = new java.util.ArrayList<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> <> ( ) ; void ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException , java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> ) ; void ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException , java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> ) ; return java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> ; }  <METHOD_END>
<METHOD_START> private void void ( NoSuchBeanDefinitionException org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException , java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> < org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult > java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionAndOutcomes> < java.lang.String , ConditionAndOutcomes > java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionAndOutcomes> : this . org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionEvaluationReport . getConditionAndOutcomesBySource ( ) . entrySet ( ) ) { org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source = new org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source ( java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionAndOutcomes> . getKey ( ) ) ; ConditionAndOutcomes org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionAndOutcomes = java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionAndOutcomes> . getValue ( ) ; if ( ! org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionAndOutcomes . isFullMatch ( ) ) { org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.BeanMethods org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.BeanMethods = new org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.BeanMethods ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source , org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) ; for ( ConditionAndOutcome org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionAndOutcome : org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionAndOutcomes ) { if ( ! org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionAndOutcome . getOutcome ( ) . isMatch ( ) ) { for ( MethodMetadata org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata : org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.BeanMethods ) { java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> . boolean ( new org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult ( org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata , org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionAndOutcome . getOutcome ( ) , org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source . boolean ( ) ) ) ; } } } } } }  <METHOD_END>
<METHOD_START> private void void ( NoSuchBeanDefinitionException org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException , java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> < org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult > java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> ) { for ( java.lang.String java.lang.String : this . org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionEvaluationReport . getExclusions ( ) ) { org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source = new org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source ( java.lang.String ) ; org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.BeanMethods org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.BeanMethods = new org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.BeanMethods ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source , org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) ; for ( MethodMetadata org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata : org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.BeanMethods ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( STRING , ClassUtils . getShortName ( java.lang.String ) ) ; java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult> . boolean ( new org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.AutoConfigurationResult ( org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata , new ConditionOutcome ( false , java.lang.String ) , false ) ) ; } } }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String ) { java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; this . java.lang.String = ( java.lang.String[] . int > NUMBER ? java.lang.String[] [ NUMBER ] : java.lang.String ) ; this . java.lang.String = ( java.lang.String[] . int == NUMBER ? java.lang.String[] [ NUMBER ] : null ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.lang.String != null ; }  <METHOD_END>
<METHOD_START> void ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source , NoSuchBeanDefinitionException org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) { this . java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> = java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source , org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> < MethodMetadata > java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source , NoSuchBeanDefinitionException org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) { try { MetadataReader org.springframework.boot.autoconfigure.diagnostics.analyzer.MetadataReader = org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer .this . org.springframework.boot.autoconfigure.diagnostics.analyzer.MetadataReaderFactory . getMetadataReader ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source . java.lang.String ( ) ) ; java.util.Set<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> < MethodMetadata > java.util.Set<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> = org.springframework.boot.autoconfigure.diagnostics.analyzer.MetadataReader . getAnnotationMetadata ( ) . getAnnotatedMethods ( Bean .class . java.lang.String ( ) ) ; java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> < MethodMetadata > java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> = new java.util.ArrayList<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> <> ( ) ; for ( MethodMetadata org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata : java.util.Set<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> ) { if ( boolean ( org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata , org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source , org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) ) { java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> . add ( org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata ) ; } } return java.util.Collections . java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> ( java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> ) ; } catch ( java.lang.Exception java.lang.Exception ) { return java.util.Collections . java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> ( ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( MethodMetadata org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata , org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source , NoSuchBeanDefinitionException org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException ) { if ( org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source . java.lang.String ( ) != null && ! org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer.Source . java.lang.String ( ) . boolean ( org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata . getMethodName ( ) ) ) { return false ; } java.lang.String java.lang.String = org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException . getBeanName ( ) ; ResolvableType org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType = org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionException . getResolvableType ( ) ; return ( ( java.lang.String != null && boolean ( org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata , java.lang.String ) ) || ( org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType != null && boolean ( org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata , java.lang.Class<?> ( org.springframework.boot.autoconfigure.diagnostics.analyzer.ResolvableType ) ) ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( MethodMetadata org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata , java.lang.String java.lang.String ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata . getAnnotationAttributes ( Bean .class . java.lang.String ( ) ) ; java.lang.String [] java.lang.String[] = ( java.util.Map<java.lang.String,java.lang.Object> == null ? null : ( java.lang.String [] ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; if ( java.lang.String[] != null ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return true ; } } return false ; } return org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata . getMethodName ( ) . equals ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( MethodMetadata org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata , java.lang.Class<?> < ? > java.lang.Class<?> ) { java.lang.String java.lang.String = org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata . getReturnTypeName ( ) ; if ( java.lang.Class<> . java.lang.String ( ) . boolean ( java.lang.String ) ) { return true ; } try { java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . forName ( java.lang.String , org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer .this . org.springframework.boot.autoconfigure.diagnostics.analyzer.ConfigurableListableBeanFactory . getBeanClassLoader ( ) ) ; return java.lang.Class<> . boolean ( java.lang.Class<> ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { return false ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> < MethodMetadata > java.util.Iterator<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> ( ) { return this . java.util.List<org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata> . iterator ( ) ; }  <METHOD_END>
<METHOD_START> void ( MethodMetadata org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata , ConditionOutcome org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionOutcome , boolean boolean ) { this . org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata = org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata ; this . org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionOutcome = org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionOutcome ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { if ( this . boolean ) { return java.lang.String . java.lang.String ( STRING , this . org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata . getMethodName ( ) , ClassUtils . getShortName ( this . org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata . getDeclaringClassName ( ) ) , this . org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionOutcome . getMessage ( ) ) ; } return java.lang.String . java.lang.String ( STRING , this . org.springframework.boot.autoconfigure.diagnostics.analyzer.MethodMetadata . getMethodName ( ) , this . org.springframework.boot.autoconfigure.diagnostics.analyzer.ConditionOutcome . getMessage ( ) ) ; }  <METHOD_END>
