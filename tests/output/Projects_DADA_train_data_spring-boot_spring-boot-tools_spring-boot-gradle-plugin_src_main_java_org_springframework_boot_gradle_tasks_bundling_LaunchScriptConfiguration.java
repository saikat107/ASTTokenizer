<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( ) { return this . java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { this . java.util.Map<java.lang.String,java.lang.String> . void ( java.util.Map<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public java.io.File java.io.File ( ) { return this . java.io.File ; }  <METHOD_END>
<METHOD_START> public void void ( java.io.File java.io.File ) { this . java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { final int int = NUMBER ; int int = NUMBER ; int = int * int + ( this . boolean ? NUMBER : NUMBER ) ; int = int * int + ( ( this . java.util.Map<java.lang.String,java.lang.String> == null ) ? NUMBER : this . java.util.Map<java.lang.String,java.lang.String> . int ( ) ) ; int = int * int + ( ( this . java.io.File == null ) ? NUMBER : this . java.io.File . int ( ) ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null ) { return false ; } if ( java.lang.Class<? extends org.springframework.boot.gradle.tasks.bundling.LaunchScriptConfiguration> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) { return false ; } org.springframework.boot.gradle.tasks.bundling.LaunchScriptConfiguration org.springframework.boot.gradle.tasks.bundling.LaunchScriptConfiguration = ( org.springframework.boot.gradle.tasks.bundling.LaunchScriptConfiguration ) java.lang.Object ; if ( this . boolean != org.springframework.boot.gradle.tasks.bundling.LaunchScriptConfiguration . boolean ) { return false ; } if ( ! this . java.util.Map<java.lang.String,java.lang.String> . boolean ( org.springframework.boot.gradle.tasks.bundling.LaunchScriptConfiguration . java.util.Map<java.lang.String,java.lang.String> ) ) { return false ; } if ( this . java.io.File == null ) { if ( org.springframework.boot.gradle.tasks.bundling.LaunchScriptConfiguration . java.io.File != null ) { return false ; } } else if ( ! this . java.io.File . boolean ( org.springframework.boot.gradle.tasks.bundling.LaunchScriptConfiguration . java.io.File ) ) { return false ; } else if ( ! boolean ( this . java.io.File , org.springframework.boot.gradle.tasks.bundling.LaunchScriptConfiguration . java.io.File ) ) { return false ; } return true ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.io.File java.io.File , java.io.File java.io.File ) { try { return FileUtils . sha1Hash ( java.io.File ) . equals ( FileUtils . sha1Hash ( java.io.File ) ) ; } catch ( java.io.IOException java.io.IOException ) { return false ; } }  <METHOD_END>
