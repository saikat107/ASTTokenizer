<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( MessageChannel org.springframework.integration.core.MessageChannel ) { super. setDefaultDestination ( org.springframework.integration.core.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.core.BeanFactory ) throws org.springframework.integration.core.BeansException { this . org.springframework.integration.core.BeanFactory = org.springframework.integration.core.BeanFactory ; super. setDestinationResolver ( new BeanFactoryChannelResolver ( org.springframework.integration.core.BeanFactory ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { super. setThrowExceptionOnLateReply ( boolean ) ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> public void void ( MessageChannel org.springframework.integration.core.MessageChannel ) { super. setDefaultDestination ( org.springframework.integration.core.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.core.Message<?> < ? > org.springframework.integration.core.Message<?> ( MessageChannel org.springframework.integration.core.MessageChannel , Message < ? > org.springframework.integration.core.Message<?> ) { if ( ! this . boolean ) { synchronized ( this ) { if ( ! this . boolean ) { java.util.Properties java.util.Properties = IntegrationContextUtils . getIntegrationProperties ( this . org.springframework.integration.core.BeanFactory ) ; java.lang.Boolean java.lang.Boolean = java.lang.Boolean . java.lang.Boolean ( java.util.Properties . java.lang.String ( IntegrationProperties . THROW_EXCEPTION_ON_LATE_REPLY ) ) ; super. setThrowExceptionOnLateReply ( java.lang.Boolean ) ; this . boolean = true ; } } } return super. sendAndReceive ( org.springframework.integration.core.MessageChannel , org.springframework.integration.core.Message<> ) ; }  <METHOD_END>
