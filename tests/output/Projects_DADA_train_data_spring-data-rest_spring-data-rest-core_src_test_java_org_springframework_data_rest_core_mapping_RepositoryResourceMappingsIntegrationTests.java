<METHOD_START> @ Before public void void ( ) { org.springframework.data.rest.core.mapping.KeyValueMappingContext<,> . getPersistentEntity ( Profile .class ) ; Repositories org.springframework.data.rest.core.mapping.Repositories = new Repositories ( org.springframework.data.rest.core.mapping.ListableBeanFactory ) ; this . org.springframework.data.rest.core.mapping.ResourceMappings = new RepositoryResourceMappings ( org.springframework.data.rest.core.mapping.Repositories , new PersistentEntities ( java.util.Arrays . java.util.List ( org.springframework.data.rest.core.mapping.KeyValueMappingContext<,> ) ) , new EvoInflectorRelProvider ( ) , RepositoryDetectionStrategies . DEFAULT ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.rest.core.mapping.ResourceMappings ) . hasSize ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata = org.springframework.data.rest.core.mapping.ResourceMappings . getMetadataFor ( Person .class ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMetadata . isExported ( ) ) . isTrue ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMetadata . getSearchResourceMappings ( ) . isExported ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata = org.springframework.data.rest.core.mapping.ResourceMappings . getMetadataFor ( CreditCard .class ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMetadata . isExported ( ) ) . isFalse ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMetadata . getSearchResourceMappings ( ) . isExported ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Repositories org.springframework.data.rest.core.mapping.Repositories = new Repositories ( org.springframework.data.rest.core.mapping.ListableBeanFactory ) ; PersistentEntity < ? , ? > org.springframework.data.rest.core.mapping.PersistentEntity<?,?> = org.springframework.data.rest.core.mapping.Repositories . getPersistentEntity ( Person .class ) ; PersistentProperty < ? > org.springframework.data.rest.core.mapping.PersistentProperty<?> = org.springframework.data.rest.core.mapping.PersistentEntity<,> . getRequiredPersistentProperty ( STRING ) ; ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata = org.springframework.data.rest.core.mapping.ResourceMappings . getMetadataFor ( Person .class ) ; ResourceMapping org.springframework.data.rest.core.mapping.ResourceMapping = org.springframework.data.rest.core.mapping.ResourceMetadata . getMappingFor ( org.springframework.data.rest.core.mapping.PersistentProperty<> ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . getRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . getPath ( ) ) . isEqualTo ( new Path ( STRING ) ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMapping . isExported ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.rest.core.mapping.ResourceMappings . exportsTopLevelResourceFor ( STRING ) ) . isTrue ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMappings . exportsTopLevelResourceFor ( STRING ) ) . isTrue ( ) ; ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata = org.springframework.data.rest.core.mapping.ResourceMappings . getMetadataFor ( CreditCard .class ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMetadata ) . isNotNull ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMetadata . getPath ( ) ) . isEqualTo ( new Path ( STRING ) ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMetadata . isExported ( ) ) . isFalse ( ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMappings . exportsTopLevelResourceFor ( STRING ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata = org.springframework.data.rest.core.mapping.ResourceMappings . getMetadataFor ( CreditCard .class ) ; SearchResourceMappings org.springframework.data.rest.core.mapping.SearchResourceMappings = org.springframework.data.rest.core.mapping.ResourceMetadata . getSearchResourceMappings ( ) ; assertThat ( org.springframework.data.rest.core.mapping.SearchResourceMappings ) . isEmpty ( ) ; ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata = org.springframework.data.rest.core.mapping.ResourceMappings . getMetadataFor ( Person .class ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; for ( MethodResourceMapping org.springframework.data.rest.core.mapping.MethodResourceMapping : org.springframework.data.rest.core.mapping.ResourceMetadata . getSearchResourceMappings ( ) ) { java.util.List<java.lang.String> . boolean ( org.springframework.data.rest.core.mapping.MethodResourceMapping . getMethod ( ) . getName ( ) ) ; } assertThat ( java.util.List<java.lang.String> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.String> ) . contains ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata = org.springframework.data.rest.core.mapping.ResourceMappings . getMetadataFor ( Author .class ) ; assertThat ( org.springframework.data.rest.core.mapping.ResourceMetadata . isExported ( ) ) . isTrue ( ) ; SearchResourceMappings org.springframework.data.rest.core.mapping.SearchResourceMappings = org.springframework.data.rest.core.mapping.ResourceMetadata . getSearchResourceMappings ( ) ; assertThat ( org.springframework.data.rest.core.mapping.SearchResourceMappings . isExported ( ) ) . isTrue ( ) ; assertThat ( org.springframework.data.rest.core.mapping.SearchResourceMappings . getMappedMethod ( STRING ) ) . isNotNull ( ) ; for ( MethodResourceMapping org.springframework.data.rest.core.mapping.MethodResourceMapping : org.springframework.data.rest.core.mapping.SearchResourceMappings ) { java.lang.System . java.io.PrintStream . void ( org.springframework.data.rest.core.mapping.MethodResourceMapping . getMethod ( ) . getName ( ) ) ; assertThat ( org.springframework.data.rest.core.mapping.MethodResourceMapping . isExported ( ) ) . isTrue ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ResourceMetadata org.springframework.data.rest.core.mapping.ResourceMetadata = org.springframework.data.rest.core.mapping.ResourceMappings . getMetadataFor ( Person .class ) ; PropertyAwareResourceMapping org.springframework.data.rest.core.mapping.PropertyAwareResourceMapping = org.springframework.data.rest.core.mapping.ResourceMetadata . getProperty ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.PropertyAwareResourceMapping . getRel ( ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.data.rest.core.mapping.PropertyAwareResourceMapping . getPath ( ) ) . isEqualTo ( new Path ( STRING ) ) ; }  <METHOD_END>
