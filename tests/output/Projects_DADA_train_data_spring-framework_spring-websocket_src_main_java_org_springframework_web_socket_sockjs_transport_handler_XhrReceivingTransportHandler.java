<METHOD_START> @ java.lang.Override public org.springframework.web.socket.sockjs.transport.handler.TransportType org.springframework.web.socket.sockjs.transport.handler.TransportType ( ) { return TransportType . XHR_SEND ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String [] java.lang.String[] ( ServerHttpRequest org.springframework.web.socket.sockjs.transport.handler.ServerHttpRequest ) throws java.io.IOException { return getServiceConfig ( ) . getMessageCodec ( ) . decodeInputStream ( org.springframework.web.socket.sockjs.transport.handler.ServerHttpRequest . getBody ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.socket.sockjs.transport.handler.HttpStatus org.springframework.web.socket.sockjs.transport.handler.HttpStatus ( ) { return HttpStatus . NO_CONTENT ; }  <METHOD_END>
