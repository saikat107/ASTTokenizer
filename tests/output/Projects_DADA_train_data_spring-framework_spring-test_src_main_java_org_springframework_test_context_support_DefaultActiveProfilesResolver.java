<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; final java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.LinkedHashSet<java.lang.String> <> ( ) ; java.lang.Class<org.springframework.test.context.support.ActiveProfiles> < ActiveProfiles > java.lang.Class<org.springframework.test.context.support.ActiveProfiles> = ActiveProfiles .class ; AnnotationDescriptor < ActiveProfiles > org.springframework.test.context.support.AnnotationDescriptor<org.springframework.test.context.support.ActiveProfiles> = findAnnotationDescriptor ( java.lang.Class<> , java.lang.Class<org.springframework.test.context.support.ActiveProfiles> ) ; if ( org.springframework.test.context.support.AnnotationDescriptor<org.springframework.test.context.support.ActiveProfiles> == null ) { if ( org.springframework.test.context.support.Log . isDebugEnabled ( ) ) { org.springframework.test.context.support.Log . debug ( java.lang.String . java.lang.String ( STRING , java.lang.Class<org.springframework.test.context.support.ActiveProfiles> . getName ( ) , java.lang.Class<> . java.lang.String ( ) ) ) ; } } else { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.test.context.support.AnnotationDescriptor<org.springframework.test.context.support.ActiveProfiles> . getDeclaringClass ( ) ; ActiveProfiles org.springframework.test.context.support.ActiveProfiles = org.springframework.test.context.support.AnnotationDescriptor<org.springframework.test.context.support.ActiveProfiles> . synthesizeAnnotation ( ) ; if ( org.springframework.test.context.support.Log . isTraceEnabled ( ) ) { org.springframework.test.context.support.Log . trace ( java.lang.String . java.lang.String ( STRING , org.springframework.test.context.support.ActiveProfiles , java.lang.Class<> . java.lang.String ( ) ) ) ; } for ( java.lang.String java.lang.String : org.springframework.test.context.support.ActiveProfiles . profiles ( ) ) { if ( StringUtils . hasText ( java.lang.String ) ) { java.util.Set<java.lang.String> . boolean ( java.lang.String . java.lang.String ( ) ) ; } } } return StringUtils . toStringArray ( java.util.Set<java.lang.String> ) ; }  <METHOD_END>
