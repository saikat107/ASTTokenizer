<METHOD_START> @ java.lang.Override protected org.springframework.statemachine.persist.AnnotationConfigApplicationContext org.springframework.statemachine.persist.AnnotationConfigApplicationContext ( ) { return new AnnotationConfigApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) java.lang.Exception { context . register ( org.springframework.statemachine.persist.StateMachinePersistTests2.Config1 .class ) ; context . refresh ( ) ; StateMachinePersist < java.lang.String , java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachinePersist<java.lang.String,java.lang.String,java.lang.String> = new org.springframework.statemachine.persist.StateMachinePersistTests2.InMemoryStateMachinePersist ( ) ; StateMachinePersister < java.lang.String , java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> = new DefaultStateMachinePersister < java.lang.String , java.lang.String , java.lang.String > ( org.springframework.statemachine.persist.StateMachinePersist<java.lang.String,java.lang.String,java.lang.String> ) ; StateMachineFactory < java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> = context . getBean ( STRING , StateMachineFactory .class ) ; StateMachine < java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> . getStateMachine ( ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getId ( ) , equalTo ( java.lang.String ) ) ; org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . sendEvent ( java.lang.String ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String , java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String , java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . sendEvent ( java.lang.String ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String , java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String , java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . sendEvent ( java.lang.String ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . sendEvent ( java.lang.String ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String , java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . sendEvent ( java.lang.String ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String , java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . sendEvent ( java.lang.String ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . sendEvent ( java.lang.String ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String , java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . sendEvent ( java.lang.String ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . sendEvent ( java.lang.String ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String , java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . sendEvent ( java.lang.String ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , STRING ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . sendEvent ( java.lang.String ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> . getState ( ) . getIds ( ) , containsInAnyOrder ( new java.lang.String [] { java.lang.String } ) ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . persist ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , STRING ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ( StateMachineFactory < java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> , StateMachinePersister < java.lang.String , java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> , final java.lang.String java.lang.String ) throws java.lang.Exception { StateMachine < java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> = org.springframework.statemachine.persist.StateMachineFactory<java.lang.String,java.lang.String> . getStateMachine ( ) ; org.springframework.statemachine.persist.StateMachinePersister<java.lang.String,java.lang.String,java.lang.String> . restore ( org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> , java.lang.String ) ; return org.springframework.statemachine.persist.StateMachine<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineConfigurationConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachineConfigurationConfigurer<java.lang.String,java.lang.String> ) throws java.lang.Exception { org.springframework.statemachine.persist.StateMachineConfigurationConfigurer<java.lang.String,java.lang.String> . withConfiguration ( ) . autoStartup ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachineStateConfigurer<java.lang.String,java.lang.String> ) throws java.lang.Exception { org.springframework.statemachine.persist.StateMachineStateConfigurer<java.lang.String,java.lang.String> . withStates ( ) . initial ( java.lang.String ) . state ( java.lang.String ) . state ( java.lang.String ) . state ( java.lang.String ) . end ( java.lang.String ) . end ( java.lang.String ) . and ( ) . withStates ( ) . parent ( java.lang.String ) . initial ( java.lang.String ) . state ( java.lang.String ) . history ( java.lang.String , StateConfigurer . History . DEEP ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> ) throws java.lang.Exception { org.springframework.statemachine.persist.StateMachineTransitionConfigurer<java.lang.String,java.lang.String> . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) . withExternal ( ) . source ( java.lang.String ) . event ( java.lang.String ) . target ( java.lang.String ) . and ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineContext < java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachineContext<java.lang.String,java.lang.String> , java.lang.String java.lang.String ) throws java.lang.Exception { java.util.Map<java.lang.Object,org.springframework.statemachine.persist.StateMachineContext<java.lang.String,java.lang.String>> . put ( java.lang.String , org.springframework.statemachine.persist.StateMachineContext<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.persist.StateMachineContext<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.statemachine.persist.StateMachineContext<java.lang.String,java.lang.String> ( java.lang.String java.lang.String ) throws java.lang.Exception { return java.util.Map<java.lang.Object,org.springframework.statemachine.persist.StateMachineContext<java.lang.String,java.lang.String>> . get ( java.lang.String ) ; }  <METHOD_END>
