<METHOD_START> public void ( java.lang.String java.lang.String ) { org.springframework.integration.jmx.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( java.lang.String , java.lang.Class<? extends org.springframework.integration.jmx.config.RouterMBeanTests> ( ) ) ; javax.management.MBeanServer = org.springframework.integration.jmx.config.ClassPathXmlApplicationContext . getBean ( javax.management.MBeanServer .class ) ; }  <METHOD_END>
<METHOD_START> @ Parameters public static java.util.List<java.lang.Object[]> < java.lang.Object [] > java.util.List<java.lang.Object[]> ( ) { return java.util.Arrays . java.util.List<java.lang.Object[]> ( new java.lang.Object [] { STRING } , new java.lang.Object [] { STRING } , new java.lang.Object [] { STRING } , new java.lang.Object [] { STRING } ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { if ( org.springframework.integration.jmx.config.ClassPathXmlApplicationContext != null ) { org.springframework.integration.jmx.config.ClassPathXmlApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<javax.management.ObjectName> < javax.management.ObjectName > java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<javax.management.ObjectName> < javax.management.ObjectName > java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<javax.management.ObjectName> < javax.management.ObjectName > java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<javax.management.ObjectName> < javax.management.ObjectName > java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String );  <METHOD_END>
