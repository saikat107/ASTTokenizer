<METHOD_START> public static javax.xml.transform.Source javax.xml.transform.Source ( javax.xml.stream.XMLStreamReader javax.xml.stream.XMLStreamReader ) { return new javax.xml.transform.stax.StAXSource ( javax.xml.stream.XMLStreamReader ) ; }  <METHOD_END>
<METHOD_START> public static javax.xml.transform.Source javax.xml.transform.Source ( javax.xml.stream.XMLEventReader javax.xml.stream.XMLEventReader ) throws javax.xml.stream.XMLStreamException { return new javax.xml.transform.stax.StAXSource ( javax.xml.stream.XMLEventReader ) ; }  <METHOD_END>
<METHOD_START> public static javax.xml.transform.Source javax.xml.transform.Source ( javax.xml.stream.XMLStreamReader javax.xml.stream.XMLStreamReader ) { return new StaxSource ( javax.xml.stream.XMLStreamReader ) ; }  <METHOD_END>
<METHOD_START> public static javax.xml.transform.Source javax.xml.transform.Source ( javax.xml.stream.XMLEventReader javax.xml.stream.XMLEventReader ) { return new StaxSource ( javax.xml.stream.XMLEventReader ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( javax.xml.transform.Source javax.xml.transform.Source ) { return ( javax.xml.transform.Source instanceof javax.xml.transform.stax.StAXSource || javax.xml.transform.Source instanceof StaxSource ) ; }  <METHOD_END>
<METHOD_START> public static javax.xml.stream.XMLStreamReader javax.xml.stream.XMLStreamReader ( javax.xml.transform.Source javax.xml.transform.Source ) { if ( javax.xml.transform.Source instanceof javax.xml.transform.stax.StAXSource ) { return ( ( javax.xml.transform.stax.StAXSource ) javax.xml.transform.Source ) . javax.xml.stream.XMLStreamReader ( ) ; } else if ( javax.xml.transform.Source instanceof StaxSource ) { return ( ( StaxSource ) javax.xml.transform.Source ) . getXMLStreamReader ( ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + javax.xml.transform.Source + STRING ) ; } }  <METHOD_END>
<METHOD_START> public static javax.xml.stream.XMLEventReader javax.xml.stream.XMLEventReader ( javax.xml.transform.Source javax.xml.transform.Source ) { if ( javax.xml.transform.Source instanceof javax.xml.transform.stax.StAXSource ) { return ( ( javax.xml.transform.stax.StAXSource ) javax.xml.transform.Source ) . javax.xml.stream.XMLEventReader ( ) ; } else if ( javax.xml.transform.Source instanceof StaxSource ) { return ( ( StaxSource ) javax.xml.transform.Source ) . getXMLEventReader ( ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + javax.xml.transform.Source + STRING ) ; } }  <METHOD_END>
<METHOD_START> public static javax.xml.transform.Result javax.xml.transform.Result ( javax.xml.stream.XMLStreamWriter javax.xml.stream.XMLStreamWriter ) { return new javax.xml.transform.stax.StAXResult ( javax.xml.stream.XMLStreamWriter ) ; }  <METHOD_END>
<METHOD_START> public static javax.xml.transform.Result javax.xml.transform.Result ( javax.xml.stream.XMLEventWriter javax.xml.stream.XMLEventWriter ) { return new javax.xml.transform.stax.StAXResult ( javax.xml.stream.XMLEventWriter ) ; }  <METHOD_END>
<METHOD_START> public static javax.xml.transform.Result javax.xml.transform.Result ( javax.xml.stream.XMLStreamWriter javax.xml.stream.XMLStreamWriter ) { return new StaxResult ( javax.xml.stream.XMLStreamWriter ) ; }  <METHOD_END>
<METHOD_START> public static javax.xml.transform.Result javax.xml.transform.Result ( javax.xml.stream.XMLEventWriter javax.xml.stream.XMLEventWriter ) { return new StaxResult ( javax.xml.stream.XMLEventWriter ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( javax.xml.transform.Result javax.xml.transform.Result ) { return ( javax.xml.transform.Result instanceof javax.xml.transform.stax.StAXResult || javax.xml.transform.Result instanceof StaxResult ) ; }  <METHOD_END>
<METHOD_START> public static javax.xml.stream.XMLStreamWriter javax.xml.stream.XMLStreamWriter ( javax.xml.transform.Result javax.xml.transform.Result ) { if ( javax.xml.transform.Result instanceof javax.xml.transform.stax.StAXResult ) { return ( ( javax.xml.transform.stax.StAXResult ) javax.xml.transform.Result ) . javax.xml.stream.XMLStreamWriter ( ) ; } else if ( javax.xml.transform.Result instanceof StaxResult ) { return ( ( StaxResult ) javax.xml.transform.Result ) . getXMLStreamWriter ( ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + javax.xml.transform.Result + STRING ) ; } }  <METHOD_END>
<METHOD_START> public static javax.xml.stream.XMLEventWriter javax.xml.stream.XMLEventWriter ( javax.xml.transform.Result javax.xml.transform.Result ) { if ( javax.xml.transform.Result instanceof javax.xml.transform.stax.StAXResult ) { return ( ( javax.xml.transform.stax.StAXResult ) javax.xml.transform.Result ) . javax.xml.stream.XMLEventWriter ( ) ; } else if ( javax.xml.transform.Result instanceof StaxResult ) { return ( ( StaxResult ) javax.xml.transform.Result ) . getXMLEventWriter ( ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + javax.xml.transform.Result + STRING ) ; } }  <METHOD_END>
<METHOD_START> public static javax.xml.stream.XMLEventReader javax.xml.stream.XMLEventReader ( java.util.List<javax.xml.stream.events.XMLEvent> < javax.xml.stream.events.XMLEvent > java.util.List<javax.xml.stream.events.XMLEvent> ) { return new ListBasedXMLEventReader ( java.util.List<javax.xml.stream.events.XMLEvent> ) ; }  <METHOD_END>
<METHOD_START> public static org.xml.sax.ContentHandler org.xml.sax.ContentHandler ( javax.xml.stream.XMLStreamWriter javax.xml.stream.XMLStreamWriter ) { return new StaxStreamHandler ( javax.xml.stream.XMLStreamWriter ) ; }  <METHOD_END>
<METHOD_START> public static org.xml.sax.ContentHandler org.xml.sax.ContentHandler ( javax.xml.stream.XMLEventWriter javax.xml.stream.XMLEventWriter ) { return new StaxEventHandler ( javax.xml.stream.XMLEventWriter ) ; }  <METHOD_END>
<METHOD_START> public static org.xml.sax.XMLReader org.xml.sax.XMLReader ( javax.xml.stream.XMLStreamReader javax.xml.stream.XMLStreamReader ) { return new StaxStreamXMLReader ( javax.xml.stream.XMLStreamReader ) ; }  <METHOD_END>
<METHOD_START> public static org.xml.sax.XMLReader org.xml.sax.XMLReader ( javax.xml.stream.XMLEventReader javax.xml.stream.XMLEventReader ) { return new StaxEventXMLReader ( javax.xml.stream.XMLEventReader ) ; }  <METHOD_END>
<METHOD_START> public static javax.xml.stream.XMLStreamReader javax.xml.stream.XMLStreamReader ( javax.xml.stream.XMLEventReader javax.xml.stream.XMLEventReader ) throws javax.xml.stream.XMLStreamException { return new XMLEventStreamReader ( javax.xml.stream.XMLEventReader ) ; }  <METHOD_END>
<METHOD_START> public static javax.xml.stream.XMLStreamWriter javax.xml.stream.XMLStreamWriter ( javax.xml.stream.XMLEventWriter javax.xml.stream.XMLEventWriter ) { return new XMLEventStreamWriter ( javax.xml.stream.XMLEventWriter , javax.xml.stream.XMLEventFactory . javax.xml.stream.XMLEventFactory ( ) ) ; }  <METHOD_END>
<METHOD_START> public static javax.xml.stream.XMLStreamWriter javax.xml.stream.XMLStreamWriter ( javax.xml.stream.XMLEventWriter javax.xml.stream.XMLEventWriter , javax.xml.stream.XMLEventFactory javax.xml.stream.XMLEventFactory ) { return new XMLEventStreamWriter ( javax.xml.stream.XMLEventWriter , javax.xml.stream.XMLEventFactory ) ; }  <METHOD_END>
