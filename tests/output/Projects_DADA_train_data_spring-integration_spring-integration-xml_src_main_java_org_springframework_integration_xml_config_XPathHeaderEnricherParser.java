<METHOD_START> @ java.lang.Override protected final java.lang.String java.lang.String ( ) { return XPathHeaderEnricher .class . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.xml.config.ParserContext , BeanDefinitionBuilder org.springframework.integration.xml.config.BeanDefinitionBuilder ) { ManagedMap < java.lang.String , java.lang.Object > org.springframework.integration.xml.config.ManagedMap<java.lang.String,java.lang.Object> = new ManagedMap < java.lang.String , java.lang.Object > ( ) ; this . void ( org.w3c.dom.Element , org.springframework.integration.xml.config.ManagedMap<java.lang.String,java.lang.Object> , org.springframework.integration.xml.config.ParserContext ) ; org.springframework.integration.xml.config.BeanDefinitionBuilder . addConstructorArgValue ( org.springframework.integration.xml.config.ManagedMap<java.lang.String,java.lang.Object> ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; }  <METHOD_END>
<METHOD_START> protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ManagedMap < java.lang.String , java.lang.Object > org.springframework.integration.xml.config.ManagedMap<java.lang.String,java.lang.Object> , ParserContext org.springframework.integration.xml.config.ParserContext ) { java.lang.Object java.lang.Object = org.springframework.integration.xml.config.ParserContext . extractSource ( org.w3c.dom.Element ) ; org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( org.w3c.dom.Node . short ( ) == org.w3c.dom.Node . short ) { org.w3c.dom.Element org.w3c.dom.Element = ( org.w3c.dom.Element ) org.w3c.dom.Node ; java.lang.String java.lang.String = org.w3c.dom.Node . java.lang.String ( ) ; if ( STRING . boolean ( java.lang.String ) ) { BeanDefinitionBuilder org.springframework.integration.xml.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( XPathExpressionEvaluatingHeaderValueMessageProcessor .class ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; boolean boolean = StringUtils . hasText ( java.lang.String ) ; if ( ! ( boolean ^ boolean ) ) { org.springframework.integration.xml.config.ParserContext . getReaderContext ( ) . error ( STRING , java.lang.Object ) ; } if ( boolean ) { org.springframework.integration.xml.config.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; } else { org.springframework.integration.xml.config.BeanDefinitionBuilder . addConstructorArgReference ( java.lang.String ) ; } IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xml.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; org.springframework.integration.xml.config.ManagedMap<java.lang.String,java.lang.Object> . put ( java.lang.String , org.springframework.integration.xml.config.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; } } } }  <METHOD_END>
