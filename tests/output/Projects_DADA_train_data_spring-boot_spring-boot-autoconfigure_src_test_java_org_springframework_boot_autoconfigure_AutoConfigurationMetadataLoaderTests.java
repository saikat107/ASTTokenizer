<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) . wasProcessed ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) . wasProcessed ( STRING ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) . getInteger ( STRING , STRING ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) . getInteger ( STRING , STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) . getInteger ( STRING , STRING , NUMBER ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) . getSet ( STRING , STRING ) ) . containsExactly ( STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) . getSet ( STRING , STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) . getSet ( STRING , STRING , java.util.Collections . java.util.Set<java.lang.String> ( STRING ) ) ) . containsExactly ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) . get ( STRING , STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) . get ( STRING , STRING ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) . get ( STRING , STRING , STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.AutoConfigurationMetadata org.springframework.boot.autoconfigure.AutoConfigurationMetadata ( ) { return AutoConfigurationMetadataLoader . loadMetadata ( null , STRING ) ; }  <METHOD_END>
