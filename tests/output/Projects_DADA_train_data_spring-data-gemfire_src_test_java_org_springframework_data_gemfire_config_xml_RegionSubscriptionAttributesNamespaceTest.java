<METHOD_START> protected void void ( final Region < ? , ? > org.springframework.data.gemfire.config.xml.Region<?,?> , final java.lang.String java.lang.String , final DataPolicy org.springframework.data.gemfire.config.xml.DataPolicy , final InterestPolicy org.springframework.data.gemfire.config.xml.InterestPolicy ) { assertNotNull ( java.lang.String . java.lang.String ( STRING , java.lang.String ) , org.springframework.data.gemfire.config.xml.Region<,> ) ; assertEquals ( java.lang.String , org.springframework.data.gemfire.config.xml.Region<,> . getName ( ) ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) ) ; assertEquals ( org.springframework.data.gemfire.config.xml.DataPolicy , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getDataPolicy ( ) ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getSubscriptionAttributes ( ) ) ; assertEquals ( org.springframework.data.gemfire.config.xml.InterestPolicy , org.springframework.data.gemfire.config.xml.Region<,> . getAttributes ( ) . getSubscriptionAttributes ( ) . getInterestPolicy ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.data.gemfire.config.xml.Region<,> , STRING , DataPolicy . REPLICATE , InterestPolicy . DEFAULT ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.data.gemfire.config.xml.Region<,> , STRING , DataPolicy . REPLICATE , InterestPolicy . ALL ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.data.gemfire.config.xml.Region<,> , STRING , DataPolicy . PARTITION , InterestPolicy . CACHE_CONTENT ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.data.gemfire.config.xml.Region<,> , STRING , DataPolicy . PARTITION , InterestPolicy . DEFAULT ) ; }  <METHOD_END>
