<METHOD_START> public static java.lang.String java.lang.String ( CreateIndexSpecification org.springframework.cassandra.core.cql.generator.CreateIndexSpecification ) { return new org.springframework.cassandra.core.cql.generator.CreateIndexCqlGenerator ( org.springframework.cassandra.core.cql.generator.CreateIndexSpecification ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void ( CreateIndexSpecification org.springframework.cassandra.core.cql.generator.CreateIndexSpecification ) { super( org.springframework.cassandra.core.cql.generator.CreateIndexSpecification ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.StringBuilder java.lang.StringBuilder ( java.lang.StringBuilder java.lang.StringBuilder ) { java.lang.StringBuilder = noNull ( java.lang.StringBuilder ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( spec ( ) . isCustom ( ) ? STRING : STRING ) . append ( STRING ) . append ( spec ( ) . getIfNotExists ( ) ? STRING : STRING ) . append ( spec ( ) . getName ( ) == null ? STRING : spec ( ) . getName ( ) ) . append ( STRING ) . append ( spec ( ) . getTableName ( ) ) . append ( STRING ) . append ( spec ( ) . getColumnName ( ) ) . append ( STRING ) ; if ( spec ( ) . isCustom ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( spec ( ) . getUsing ( ) ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return java.lang.StringBuilder ; }  <METHOD_END>
