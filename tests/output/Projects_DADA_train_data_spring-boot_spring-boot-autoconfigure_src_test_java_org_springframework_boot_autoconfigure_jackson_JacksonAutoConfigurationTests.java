<METHOD_START> @ Before public void void ( ) { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . canSerialize ( LocalDateTime .class ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.DoubleModulesConfig .class , HttpMessageConvertersAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . writeValueAsString ( new org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Foo ( ) ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getDateFormat ( ) ) . isInstanceOf ( StdDateFormat .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; java.text.DateFormat java.text.DateFormat = org.springframework.boot.autoconfigure.jackson.ObjectMapper . getDateFormat ( ) ; assertThat ( java.text.DateFormat ) . isInstanceOf ( java.text.SimpleDateFormat .class ) ; assertThat ( ( ( java.text.SimpleDateFormat ) java.text.DateFormat ) . java.lang.String ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; DateTime org.springframework.boot.autoconfigure.jackson.DateTime = new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . writeValueAsString ( org.springframework.boot.autoconfigure.jackson.DateTime ) ) . isEqualTo ( STRING ) ; java.util.Date java.util.Date = org.springframework.boot.autoconfigure.jackson.DateTime . toDate ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . writeValueAsString ( java.util.Date ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getDateFormat ( ) ) . isInstanceOf ( org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.MyDateFormat .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getPropertyNamingStrategy ( ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getPropertyNamingStrategy ( ) ) . isInstanceOf ( SnakeCaseStrategy .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getPropertyNamingStrategy ( ) ) . isInstanceOf ( SnakeCaseStrategy .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( SerializationFeature . INDENT_OUTPUT . enabledByDefault ( ) ) . isFalse ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getSerializationConfig ( ) . hasSerializationFeatures ( SerializationFeature . INDENT_OUTPUT . getMask ( ) ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( SerializationFeature . WRITE_DATES_AS_TIMESTAMPS . enabledByDefault ( ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getSerializationConfig ( ) . hasSerializationFeatures ( SerializationFeature . WRITE_DATES_AS_TIMESTAMPS . getMask ( ) ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( DeserializationFeature . USE_BIG_DECIMAL_FOR_FLOATS . enabledByDefault ( ) ) . isFalse ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getDeserializationConfig ( ) . hasDeserializationFeatures ( DeserializationFeature . USE_BIG_DECIMAL_FOR_FLOATS . getMask ( ) ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( DeserializationFeature . FAIL_ON_UNKNOWN_PROPERTIES . enabledByDefault ( ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getDeserializationConfig ( ) . hasDeserializationFeatures ( DeserializationFeature . FAIL_ON_UNKNOWN_PROPERTIES . getMask ( ) ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( MapperFeature . REQUIRE_SETTERS_FOR_GETTERS . enabledByDefault ( ) ) . isFalse ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getSerializationConfig ( ) . hasMapperFeatures ( MapperFeature . REQUIRE_SETTERS_FOR_GETTERS . getMask ( ) ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getDeserializationConfig ( ) . hasMapperFeatures ( MapperFeature . REQUIRE_SETTERS_FOR_GETTERS . getMask ( ) ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( MapperFeature . USE_ANNOTATIONS . enabledByDefault ( ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getDeserializationConfig ( ) . hasMapperFeatures ( MapperFeature . USE_ANNOTATIONS . getMask ( ) ) ) . isFalse ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getSerializationConfig ( ) . hasMapperFeatures ( MapperFeature . USE_ANNOTATIONS . getMask ( ) ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( JsonParser . Feature . ALLOW_SINGLE_QUOTES . enabledByDefault ( ) ) . isFalse ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getFactory ( ) . isEnabled ( JsonParser . Feature . ALLOW_SINGLE_QUOTES ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( JsonParser . Feature . AUTO_CLOSE_SOURCE . enabledByDefault ( ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getFactory ( ) . isEnabled ( JsonParser . Feature . AUTO_CLOSE_SOURCE ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( JsonGenerator . Feature . WRITE_NUMBERS_AS_STRINGS . enabledByDefault ( ) ) . isFalse ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getFactory ( ) . isEnabled ( JsonGenerator . Feature . WRITE_NUMBERS_AS_STRINGS ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( JsonGenerator . Feature . AUTO_CLOSE_TARGET . enabledByDefault ( ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getFactory ( ) . isEnabled ( JsonGenerator . Feature . AUTO_CLOSE_TARGET ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( Jackson2ObjectMapperBuilder .class ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . build ( ) ; assertThat ( MapperFeature . DEFAULT_VIEW_INCLUSION . enabledByDefault ( ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getDeserializationConfig ( ) . isEnabled ( MapperFeature . DEFAULT_VIEW_INCLUSION ) ) . isFalse ( ) ; assertThat ( MapperFeature . DEFAULT_VIEW_INCLUSION . enabledByDefault ( ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getDeserializationConfig ( ) . isEnabled ( MapperFeature . DEFAULT_VIEW_INCLUSION ) ) . isFalse ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getSerializationConfig ( ) . isEnabled ( MapperFeature . DEFAULT_VIEW_INCLUSION ) ) . isFalse ( ) ; assertThat ( DeserializationFeature . FAIL_ON_UNKNOWN_PROPERTIES . enabledByDefault ( ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getDeserializationConfig ( ) . isEnabled ( DeserializationFeature . FAIL_ON_UNKNOWN_PROPERTIES ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.ModuleConfig .class , JacksonAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( Jackson2ObjectMapperBuilder .class ) . build ( ) ; assertThat ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.CustomModule .class ) . getOwners ( ) ) . contains ( ( ObjectCodec ) org.springframework.boot.autoconfigure.jackson.ObjectMapper ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . canSerialize ( LocalDateTime .class ) ) . isTrue ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . canSerialize ( org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Baz .class ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( Jackson2ObjectMapperBuilder .class ) . build ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getSerializationConfig ( ) . getDefaultPropertyInclusion ( ) . getValueInclusion ( ) ) . isEqualTo ( JsonInclude . Include . USE_DEFAULTS ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( Jackson2ObjectMapperBuilder .class ) . build ( ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getSerializationConfig ( ) . getDefaultPropertyInclusion ( ) . getValueInclusion ( ) ) . isEqualTo ( JsonInclude . Include . NON_NULL ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.autoconfigure.jackson.JsonProcessingException { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( Jackson2ObjectMapperBuilder .class ) . build ( ) ; DateTime org.springframework.boot.autoconfigure.jackson.DateTime = new DateTime ( NUMBER , DateTimeZone . UTC ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . writeValueAsString ( org.springframework.boot.autoconfigure.jackson.DateTime ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.autoconfigure.jackson.JsonProcessingException { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( Jackson2ObjectMapperBuilder .class ) . build ( ) ; java.util.Date java.util.Date = new java.util.Date ( NUMBER ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . writeValueAsString ( java.util.Date ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.boot.autoconfigure.jackson.JsonProcessingException { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; EnvironmentTestUtils . addEnvironment ( this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext , STRING ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( Jackson2ObjectMapperBuilder .class ) . build ( ) ; DateTime org.springframework.boot.autoconfigure.jackson.DateTime = new DateTime ( NUMBER , DateTimeZone . UTC ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . writeValueAsString ( org.springframework.boot.autoconfigure.jackson.DateTime ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( JacksonAutoConfiguration .class , org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.ObjectMapperBuilderCustomConfig .class ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) ; assertThat ( org.springframework.boot.autoconfigure.jackson.ObjectMapper . getDateFormat ( ) ) . isInstanceOf ( org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.MyDateFormat .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( Mode . DEFAULT , JacksonAutoConfiguration .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( Mode . DELEGATING , org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.ParameterNamesModuleConfig .class , JacksonAutoConfiguration .class ) ; }  <METHOD_END>
<METHOD_START> private void void ( Mode org.springframework.boot.autoconfigure.jackson.Mode , java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) { this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . register ( java.lang.Class<?>[] ) ; this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . refresh ( ) ; DeserializationConfig org.springframework.boot.autoconfigure.jackson.DeserializationConfig = this . org.springframework.boot.autoconfigure.jackson.AnnotationConfigApplicationContext . getBean ( ObjectMapper .class ) . getDeserializationConfig ( ) ; AnnotationIntrospector org.springframework.boot.autoconfigure.jackson.AnnotationIntrospector = org.springframework.boot.autoconfigure.jackson.DeserializationConfig . getAnnotationIntrospector ( ) . allIntrospectors ( ) . iterator ( ) . next ( ) ; assertThat ( ReflectionTestUtils . getField ( org.springframework.boot.autoconfigure.jackson.AnnotationIntrospector , STRING ) ) . isEqualTo ( org.springframework.boot.autoconfigure.jackson.Mode ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( STRING ); }  <METHOD_END>
<METHOD_START> @ Bean @ Primary public org.springframework.boot.autoconfigure.jackson.ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper ( ) { return mock ( ObjectMapper .class ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.CustomModule org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.CustomModule ( ) { return new org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.CustomModule ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jackson.Module org.springframework.boot.autoconfigure.jackson.Module ( ) { SimpleModule org.springframework.boot.autoconfigure.jackson.SimpleModule = new SimpleModule ( ) ; org.springframework.boot.autoconfigure.jackson.SimpleModule . addSerializer ( org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Foo .class , new JsonSerializer < org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Foo > ( ) { @ java.lang.Override public void void ( org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Foo org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Foo , JsonGenerator org.springframework.boot.autoconfigure.jackson.JsonGenerator , SerializerProvider org.springframework.boot.autoconfigure.jackson.SerializerProvider )								throws java.io.IOException , org.springframework.boot.autoconfigure.jackson.JsonProcessingException { org.springframework.boot.autoconfigure.jackson.JsonGenerator . writeStartObject ( ) ; org.springframework.boot.autoconfigure.jackson.JsonGenerator . writeStringField ( STRING , STRING ) ; org.springframework.boot.autoconfigure.jackson.JsonGenerator . writeEndObject ( ) ; } } ) ; return org.springframework.boot.autoconfigure.jackson.SimpleModule ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Foo org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Foo , JsonGenerator org.springframework.boot.autoconfigure.jackson.JsonGenerator , SerializerProvider org.springframework.boot.autoconfigure.jackson.SerializerProvider )								throws java.io.IOException , org.springframework.boot.autoconfigure.jackson.JsonProcessingException { org.springframework.boot.autoconfigure.jackson.JsonGenerator . writeStartObject ( ) ; org.springframework.boot.autoconfigure.jackson.JsonGenerator . writeStringField ( STRING , STRING ) ; org.springframework.boot.autoconfigure.jackson.JsonGenerator . writeEndObject ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Primary public org.springframework.boot.autoconfigure.jackson.ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper ( ) { ObjectMapper org.springframework.boot.autoconfigure.jackson.ObjectMapper = new ObjectMapper ( ) ; org.springframework.boot.autoconfigure.jackson.ObjectMapper . registerModule ( org.springframework.boot.autoconfigure.jackson.Module ( ) ) ; return org.springframework.boot.autoconfigure.jackson.ObjectMapper ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jackson.ParameterNamesModule org.springframework.boot.autoconfigure.jackson.ParameterNamesModule ( ) { return new ParameterNamesModule ( JsonCreator . Mode . DELEGATING ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer ( ) { return new Jackson2ObjectMapperBuilderCustomizer ( ) { @ java.lang.Override public void void ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) { org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . dateFormat ( new org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.MyDateFormat ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Jackson2ObjectMapperBuilder org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder ) { org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilder . dateFormat ( new org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.MyDateFormat ( ) ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {		}  <METHOD_END>
<METHOD_START> static org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Foo org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Foo ( ) { return new org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Foo ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Baz org.springframework.boot.autoconfigure.jackson.JacksonAutoConfigurationTests.Baz , JsonGenerator org.springframework.boot.autoconfigure.jackson.JsonGenerator , SerializerProvider org.springframework.boot.autoconfigure.jackson.SerializerProvider ) throws java.io.IOException {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SetupContext org.springframework.boot.autoconfigure.jackson.SetupContext ) { this . java.util.Set<org.springframework.boot.autoconfigure.jackson.ObjectCodec> . add ( org.springframework.boot.autoconfigure.jackson.SetupContext . getOwner ( ) ) ; }  <METHOD_END>
<METHOD_START> java.util.Set<org.springframework.boot.autoconfigure.jackson.ObjectCodec> < ObjectCodec > java.util.Set<org.springframework.boot.autoconfigure.jackson.ObjectCodec> ( ) { return this . java.util.Set<org.springframework.boot.autoconfigure.jackson.ObjectCodec> ; }  <METHOD_END>
