<METHOD_START> public static org.springframework.data.gemfire.cache.GemfireCache org.springframework.data.gemfire.cache.GemfireCache ( Region < ? , ? > org.springframework.data.gemfire.cache.Region<?,?> ) { return new org.springframework.data.gemfire.cache.GemfireCache ( org.springframework.data.gemfire.cache.Region<,> ) ; }  <METHOD_END>
<METHOD_START> public void ( Region < ? , ? > org.springframework.data.gemfire.cache.Region<?,?> ) { Assert . notNull ( org.springframework.data.gemfire.cache.Region<,> , STRING ) ; this . org.springframework.data.gemfire.cache.Region = org.springframework.data.gemfire.cache.Region<,> ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.cache.Region org.springframework.data.gemfire.cache.Region ( ) { return this . org.springframework.data.gemfire.cache.Region ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return org.springframework.data.gemfire.cache.Region ( ) . getName ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { org.springframework.data.gemfire.cache.Region ( ) . clear ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { org.springframework.data.gemfire.cache.Region ( ) . remove ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.cache.ValueWrapper org.springframework.data.gemfire.cache.ValueWrapper ( java.lang.Object java.lang.Object ) { java.lang.Object java.lang.Object = org.springframework.data.gemfire.cache.Region ( ) . get ( java.lang.Object ) ; return ( java.lang.Object != null ? new SimpleValueWrapper ( java.lang.Object ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public < T > T T ( java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> ) { java.lang.Object java.lang.Object = org.springframework.data.gemfire.cache.Region ( ) . get ( java.lang.Object ) ; if ( java.lang.Object != null && java.lang.Class<T> != null && ! java.lang.Class<T> . boolean ( java.lang.Object ) ) { throw new java.lang.IllegalStateException ( java.lang.String . java.lang.String ( STRING , java.lang.Object , java.lang.Class<T> . java.lang.String ( ) ) ) ; } return ( T ) java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public < T > T T ( java.lang.Object java.lang.Object , java.util.concurrent.Callable<T> < T > java.util.concurrent.Callable<T> ) { T T = ( T ) java.lang.Object ( java.lang.Object , java.lang.Object .class ) ; if ( T == null ) { synchronized ( org.springframework.data.gemfire.cache.Region ( ) ) { T = ( T ) java.lang.Object ( java.lang.Object , java.lang.Object .class ) ; if ( T == null ) { try { T = java.util.concurrent.Callable<T> . T ( ) ; void ( java.lang.Object , T ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new ValueRetrievalException ( java.lang.Object , java.util.concurrent.Callable<T> , java.lang.Exception ) ; } } } } return T ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { if ( java.lang.Object != null ) { org.springframework.data.gemfire.cache.Region ( ) . put ( java.lang.Object , java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public org.springframework.data.gemfire.cache.ValueWrapper org.springframework.data.gemfire.cache.ValueWrapper ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { java.lang.Object java.lang.Object = org.springframework.data.gemfire.cache.Region ( ) . putIfAbsent ( java.lang.Object , java.lang.Object ) ; return ( java.lang.Object != null ? new SimpleValueWrapper ( java.lang.Object ) : null ) ; }  <METHOD_END>
