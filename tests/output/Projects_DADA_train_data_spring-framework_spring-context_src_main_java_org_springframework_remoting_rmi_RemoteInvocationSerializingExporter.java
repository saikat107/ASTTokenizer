<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . java.lang.Object = getProxyForService ( ) ; }  <METHOD_END>
<METHOD_START> protected final java.lang.Object java.lang.Object ( ) { Assert . notNull ( this . java.lang.Object , ClassUtils . getShortName ( java.lang.Class<? extends org.springframework.remoting.rmi.RemoteInvocationSerializingExporter> ( ) ) + STRING ) ; return this . java.lang.Object ; }  <METHOD_END>
<METHOD_START> protected java.io.ObjectInputStream java.io.ObjectInputStream ( java.io.InputStream java.io.InputStream ) throws java.io.IOException { return new CodebaseAwareObjectInputStream ( java.io.InputStream , getBeanClassLoader ( ) , boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.remoting.rmi.RemoteInvocation org.springframework.remoting.rmi.RemoteInvocation ( java.io.ObjectInputStream java.io.ObjectInputStream )			throws java.io.IOException , java.lang.ClassNotFoundException { java.lang.Object java.lang.Object = java.io.ObjectInputStream . java.lang.Object ( ) ; if ( ! ( java.lang.Object instanceof RemoteInvocation ) ) { throw new java.rmi.RemoteException ( STRING + RemoteInvocation .class . java.lang.String ( ) + STRING + java.lang.Object ) ; } return ( RemoteInvocation ) java.lang.Object ; }  <METHOD_END>
<METHOD_START> protected java.io.ObjectOutputStream java.io.ObjectOutputStream ( java.io.OutputStream java.io.OutputStream ) throws java.io.IOException { return new java.io.ObjectOutputStream ( java.io.OutputStream ) ; }  <METHOD_END>
<METHOD_START> protected void void ( RemoteInvocationResult org.springframework.remoting.rmi.RemoteInvocationResult , java.io.ObjectOutputStream java.io.ObjectOutputStream )			throws java.io.IOException { java.io.ObjectOutputStream . void ( org.springframework.remoting.rmi.RemoteInvocationResult ) ; }  <METHOD_END>
