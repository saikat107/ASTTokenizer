<METHOD_START> public void void ( final java.lang.String java.lang.String , final double double ) { doWith ( java.lang.String , new java.util.function.Consumer<org.springframework.boot.actuate.metrics.buffer.GaugeBuffer> < GaugeBuffer > ( ) { @ java.lang.Override public void void ( GaugeBuffer org.springframework.boot.actuate.metrics.buffer.GaugeBuffer ) { org.springframework.boot.actuate.metrics.buffer.GaugeBuffer . setTimestamp ( java.lang.System . long ( ) ) ; org.springframework.boot.actuate.metrics.buffer.GaugeBuffer . setValue ( double ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( GaugeBuffer org.springframework.boot.actuate.metrics.buffer.GaugeBuffer ) { org.springframework.boot.actuate.metrics.buffer.GaugeBuffer . setTimestamp ( java.lang.System . long ( ) ) ; org.springframework.boot.actuate.metrics.buffer.GaugeBuffer . setValue ( double ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.actuate.metrics.buffer.GaugeBuffer org.springframework.boot.actuate.metrics.buffer.GaugeBuffer ( ) { return new GaugeBuffer ( NUMBER ) ; }  <METHOD_END>
