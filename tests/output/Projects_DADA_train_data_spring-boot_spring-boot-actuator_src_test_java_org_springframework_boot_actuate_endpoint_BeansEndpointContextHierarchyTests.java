<METHOD_START> @ After public void void ( ) { if ( this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext . close ( ) ; } if ( this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext != null ) { this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.actuate.endpoint.BeansEndpointContextHierarchyTests.BeanConfiguration .class , org.springframework.boot.actuate.endpoint.BeansEndpointContextHierarchyTests.EndpointConfiguration .class ) ; BeansEndpoint org.springframework.boot.actuate.endpoint.BeansEndpoint = this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext . getBean ( BeansEndpoint .class ) ; java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = org.springframework.boot.actuate.endpoint.BeansEndpoint . invoke ( ) ; assertThat ( java.util.List<java.lang.Object> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) . has ( org.springframework.boot.actuate.endpoint.BeansEndpointContextHierarchyTests.ContextHasBeanCondition ( STRING ) ) ; assertThat ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) . has ( org.springframework.boot.actuate.endpoint.BeansEndpointContextHierarchyTests.ContextHasBeanCondition ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.boot.actuate.endpoint.BeansEndpointContextHierarchyTests.EndpointConfiguration .class , org.springframework.boot.actuate.endpoint.BeansEndpointContextHierarchyTests.BeanConfiguration .class ) ; BeansEndpoint org.springframework.boot.actuate.endpoint.BeansEndpoint = this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext . getBean ( BeansEndpoint .class ) ; java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = org.springframework.boot.actuate.endpoint.BeansEndpoint . invoke ( ) ; assertThat ( java.util.List<java.lang.Object> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) . has ( org.springframework.boot.actuate.endpoint.BeansEndpointContextHierarchyTests.ContextHasBeanCondition ( STRING ) ) ; assertThat ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) . doesNotHave ( org.springframework.boot.actuate.endpoint.BeansEndpointContextHierarchyTests.ContextHasBeanCondition ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Class<?> < ? > java.lang.Class<?> ) { this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( java.lang.Class<> ) ; this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( ) ; this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext . setParent ( this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext ) ; this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext . register ( java.lang.Class<> ) ; this . org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext . refresh ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.actuate.endpoint.BeansEndpointContextHierarchyTests.ContextHasBeanCondition org.springframework.boot.actuate.endpoint.BeansEndpointContextHierarchyTests.ContextHasBeanCondition ( java.lang.String java.lang.String ) { return new org.springframework.boot.actuate.endpoint.BeansEndpointContextHierarchyTests.ContextHasBeanCondition ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public boolean boolean ( java.lang.Object java.lang.Object ) { if ( ! ( java.lang.Object instanceof java.util.Map ) ) { return false ; } java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = ( java.util.List<java.lang.Object> < java.lang.Object > ) ( ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.lang.Object ) . java.lang.Object ( STRING ) ; if ( java.util.List<java.lang.Object> == null ) { return false ; } for ( java.lang.Object java.lang.Object : java.util.List<java.lang.Object> ) { if ( ! ( java.lang.Object instanceof java.util.Map ) ) { return false ; } if ( this . java.lang.String . boolean ( ( ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.lang.Object ) . java.lang.Object ( STRING ) ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.actuate.endpoint.BeansEndpoint org.springframework.boot.actuate.endpoint.BeansEndpoint ( ) { return new BeansEndpoint ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
