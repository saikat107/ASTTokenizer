<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { void ( ) ; void ( java.util.Properties ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( boolean && org.springframework.data.gemfire.GemfireBeanFactoryLocator == null ) { org.springframework.data.gemfire.GemfireBeanFactoryLocator = newBeanFactoryLocator ( this . org.springframework.data.gemfire.BeanFactory , this . java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( java.util.Properties java.util.Properties ) { if ( GemfireUtils . isGemfireVersion8OrAbove ( ) ) { java.util.Properties . java.lang.Object ( STRING , java.lang.String . java.lang.String ( ! java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.Boolean ( ) ) ) ) ; java.util.Properties . java.lang.Object ( STRING , java.lang.String . java.lang.String ( java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.Boolean ( ) ) ) ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( Cache org.springframework.data.gemfire.Cache ) { this . org.springframework.data.gemfire.Cache = org.springframework.data.gemfire.Cache ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected < T extends org.springframework.data.gemfire.GemFireCache > T T ( ) { return ( T ) org.springframework.data.gemfire.Cache ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.Cache org.springframework.data.gemfire.Cache ( ) java.lang.Exception { return ( org.springframework.data.gemfire.Cache != null ? org.springframework.data.gemfire.Cache : org.springframework.data.gemfire.Cache ( ) ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.Cache org.springframework.data.gemfire.Cache ( ) java.lang.Exception { java.lang.ClassLoader java.lang.ClassLoader = java.lang.Thread . java.lang.Thread ( ) . java.lang.ClassLoader ( ) ; try { java.lang.Thread . java.lang.Thread ( ) . void ( java.lang.ClassLoader ) ; org.springframework.data.gemfire.Cache = org.springframework.data.gemfire.GemFireCache ( org.springframework.data.gemfire.Cache ( ) ) ; DistributedSystem org.springframework.data.gemfire.DistributedSystem = org.springframework.data.gemfire.Cache . getDistributedSystem ( ) ; DistributedMember org.springframework.data.gemfire.DistributedMember = org.springframework.data.gemfire.DistributedSystem . getDistributedMember ( ) ; org.springframework.data.gemfire.Log . info ( java.lang.String . java.lang.String ( STRING . java.lang.String ( STRING ) , org.springframework.data.gemfire.DistributedSystem . getName ( ) , org.springframework.data.gemfire.DistributedMember . getId ( ) , org.springframework.data.gemfire.DistributedMember . getGroups ( ) , org.springframework.data.gemfire.DistributedMember . getRoles ( ) , org.springframework.data.gemfire.DistributedMember . getHost ( ) , org.springframework.data.gemfire.DistributedMember . getProcessId ( ) ) ) ; org.springframework.data.gemfire.Log . info ( java.lang.String . java.lang.String ( STRING , java.lang.String , CacheFactory . getVersion ( ) , org.springframework.data.gemfire.Cache . getName ( ) ) ) ; return org.springframework.data.gemfire.Cache ; } finally { java.lang.Thread . java.lang.Thread ( ) . void ( java.lang.ClassLoader ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( org.springframework.data.gemfire.CacheFactoryBean.DynamicRegionSupport != null ) { org.springframework.data.gemfire.CacheFactoryBean.DynamicRegionSupport . void ( ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.Cache org.springframework.data.gemfire.Cache ( ) { try { java.lang.String = STRING ; return ( Cache ) org.springframework.data.gemfire.GemFireCache ( ) ; } catch ( CacheClosedException org.springframework.data.gemfire.CacheClosedException ) { java.lang.String = STRING ; void ( ) ; return ( Cache ) org.springframework.data.gemfire.GemFireCache ( java.lang.Object ( java.lang.Object ( java.util.Properties ( ) ) ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected < T extends org.springframework.data.gemfire.GemFireCache > T T ( ) { return ( T ) ( org.springframework.data.gemfire.Cache != null ? org.springframework.data.gemfire.Cache : CacheFactory . getAnyInstance ( ) ) ; }  <METHOD_END>
<METHOD_START> protected java.util.Properties java.util.Properties ( ) { return ( java.util.Properties != null ? java.util.Properties : ( java.util.Properties = new java.util.Properties ( ) ) ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.util.Properties java.util.Properties ) { return new CacheFactory ( java.util.Properties ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { return org.springframework.data.gemfire.CacheFactory ( ( CacheFactory ) java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> org.springframework.data.gemfire.CacheFactory org.springframework.data.gemfire.CacheFactory ( CacheFactory org.springframework.data.gemfire.CacheFactory ) { if ( boolean ( ) ) { if ( java.lang.Object != null ) { Assert . isInstanceOf ( PdxSerializer .class , java.lang.Object , java.lang.String . java.lang.String ( STRING , java.lang.Object , ObjectUtils . nullSafeClassName ( java.lang.Object ) ) ) ; org.springframework.data.gemfire.CacheFactory . setPdxSerializer ( ( PdxSerializer ) java.lang.Object ) ; } if ( java.lang.String != null ) { org.springframework.data.gemfire.CacheFactory . setPdxDiskStore ( java.lang.String ) ; } if ( java.lang.Boolean != null ) { org.springframework.data.gemfire.CacheFactory . setPdxIgnoreUnreadFields ( java.lang.Boolean ) ; } if ( java.lang.Boolean != null ) { org.springframework.data.gemfire.CacheFactory . setPdxPersistent ( java.lang.Boolean ) ; } if ( java.lang.Boolean != null ) { org.springframework.data.gemfire.CacheFactory . setPdxReadSerialized ( java.lang.Boolean ) ; } } return org.springframework.data.gemfire.CacheFactory ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return ( java.lang.Object != null || java.lang.Boolean != null || java.lang.Boolean != null || java.lang.Boolean != null || java.lang.String != null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected < T extends org.springframework.data.gemfire.GemFireCache > T T ( java.lang.Object java.lang.Object ) { return ( T ) ( org.springframework.data.gemfire.Cache != null ? org.springframework.data.gemfire.Cache : ( ( CacheFactory ) java.lang.Object ) . create ( ) ) ; }  <METHOD_END>
<METHOD_START> protected < T extends org.springframework.data.gemfire.GemFireCache > T T ( T T ) throws java.io.IOException { Resource org.springframework.data.gemfire.Resource = org.springframework.data.gemfire.Resource ( ) ; if ( org.springframework.data.gemfire.Resource != null ) { if ( org.springframework.data.gemfire.Log . isDebugEnabled ( ) ) { org.springframework.data.gemfire.Log . debug ( java.lang.String . java.lang.String ( STRING , org.springframework.data.gemfire.Resource ) ) ; } T . loadCacheXml ( org.springframework.data.gemfire.Resource . getInputStream ( ) ) ; } if ( this . java.lang.Boolean != null ) { T . setCopyOnRead ( this . java.lang.Boolean ) ; } if ( java.lang.Object != null ) { ( ( Cache ) T ) . setGatewayConflictResolver ( ( GatewayConflictResolver ) java.lang.Object ) ; } if ( java.lang.Integer != null ) { ( ( Cache ) T ) . setLockLease ( java.lang.Integer ) ; } if ( java.lang.Integer != null ) { ( ( Cache ) T ) . setLockTimeout ( java.lang.Integer ) ; } if ( java.lang.Integer != null ) { ( ( Cache ) T ) . setMessageSyncInterval ( java.lang.Integer ) ; } if ( java.lang.Integer != null ) { ( ( Cache ) T ) . setSearchTimeout ( java.lang.Integer ) ; } void ( T ) ; void ( T ) ; void ( T ) ; void ( ) ; return T ; }  <METHOD_END>
<METHOD_START> private void void ( GemFireCache org.springframework.data.gemfire.GemFireCache ) { if ( java.lang.Float != null ) { Assert . isTrue ( java.lang.Float > NUMBER && java.lang.Float <= NUMBER , java.lang.String . java.lang.String ( STRING , java.lang.Float ) ) ; org.springframework.data.gemfire.GemFireCache . getResourceManager ( ) . setCriticalHeapPercentage ( java.lang.Float ) ; } if ( java.lang.Float != null ) { Assert . isTrue ( java.lang.Float > NUMBER && java.lang.Float <= NUMBER , java.lang.String . java.lang.String ( STRING , java.lang.Float ) ) ; org.springframework.data.gemfire.GemFireCache . getResourceManager ( ) . setEvictionHeapPercentage ( java.lang.Float ) ; } }  <METHOD_END>
<METHOD_START> private void void ( GemFireCache org.springframework.data.gemfire.GemFireCache ) { for ( TransactionListener org.springframework.data.gemfire.TransactionListener : CollectionUtils . nullSafeCollection ( java.util.List<org.springframework.data.gemfire.TransactionListener> ) ) { org.springframework.data.gemfire.GemFireCache . getCacheTransactionManager ( ) . addListener ( org.springframework.data.gemfire.TransactionListener ) ; } }  <METHOD_END>
<METHOD_START> private void void ( GemFireCache org.springframework.data.gemfire.GemFireCache ) { if ( org.springframework.data.gemfire.TransactionWriter != null ) { org.springframework.data.gemfire.GemFireCache . getCacheTransactionManager ( ) . setWriter ( org.springframework.data.gemfire.TransactionWriter ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { for ( org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource : CollectionUtils . nullSafeCollection ( java.util.List<org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource> ) ) { java.lang.String java.lang.String = org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource . java.util.Map<java.lang.String,java.lang.String> ( ) . java.lang.String ( STRING ) ; JndiDataSourceType org.springframework.data.gemfire.JndiDataSourceType = JndiDataSourceType . valueOfIgnoreCase ( java.lang.String ) ; Assert . notNull ( org.springframework.data.gemfire.JndiDataSourceType , java.lang.String . java.lang.String ( STRING , java.lang.String , java.util.Arrays . java.lang.String ( JndiDataSourceType . values ( ) ) ) ) ; org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource . java.util.Map<java.lang.String,java.lang.String> ( ) . java.lang.String ( STRING , org.springframework.data.gemfire.JndiDataSourceType . getName ( ) ) ; JNDIInvoker . mapDatasource ( org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource . java.util.Map<java.lang.String,java.lang.String> ( ) , org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource . java.util.List<org.springframework.data.gemfire.ConfigProperty> ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( boolean ) { Cache org.springframework.data.gemfire.Cache = org.springframework.data.gemfire.GemFireCache ( ) ; if ( org.springframework.data.gemfire.Cache != null && ! org.springframework.data.gemfire.Cache . isClosed ( ) ) { void ( org.springframework.data.gemfire.Cache ) ; } this . org.springframework.data.gemfire.Cache = null ; if ( org.springframework.data.gemfire.GemfireBeanFactoryLocator != null ) { org.springframework.data.gemfire.GemfireBeanFactoryLocator . destroy ( ) ; org.springframework.data.gemfire.GemfireBeanFactoryLocator = null ; } } }  <METHOD_END>
<METHOD_START> protected void void ( GemFireCache org.springframework.data.gemfire.GemFireCache ) { org.springframework.data.gemfire.GemFireCache . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<? extends org.springframework.data.gemfire.GemFireCache> < ? extends GemFireCache > java.lang.Class<? extends org.springframework.data.gemfire.GemFireCache> ( ) { return ( org.springframework.data.gemfire.Cache != null ? org.springframework.data.gemfire.Cache . getClass ( ) : Cache .class ) ; }  <METHOD_END>
<METHOD_START> protected void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.DataAccessException org.springframework.data.gemfire.DataAccessException ( java.lang.RuntimeException java.lang.RuntimeException ) { if ( java.lang.RuntimeException instanceof GemFireException ) { return GemfireCacheUtils . convertGemfireAccessException ( ( GemFireException ) java.lang.RuntimeException ) ; } if ( java.lang.RuntimeException instanceof java.lang.IllegalArgumentException ) { DataAccessException org.springframework.data.gemfire.DataAccessException = GemfireCacheUtils . convertQueryExceptions ( java.lang.RuntimeException ) ; if ( ! ( org.springframework.data.gemfire.DataAccessException instanceof GemfireSystemException ) ) { return org.springframework.data.gemfire.DataAccessException ; } } if ( java.lang.RuntimeException . java.lang.Throwable ( ) instanceof GemFireException ) { return GemfireCacheUtils . convertGemfireAccessException ( ( GemFireException ) java.lang.RuntimeException . java.lang.Throwable ( ) ) ; } if ( java.lang.RuntimeException . java.lang.Throwable ( ) instanceof GemFireCheckedException ) { return GemfireCacheUtils . convertGemfireAccessException ( ( GemFireCheckedException ) java.lang.RuntimeException . java.lang.Throwable ( ) ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> public java.lang.ClassLoader java.lang.ClassLoader ( ) { return java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.data.gemfire.BeanFactory ) throws org.springframework.data.gemfire.BeansException { this . org.springframework.data.gemfire.BeanFactory = org.springframework.data.gemfire.BeanFactory ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.BeanFactory org.springframework.data.gemfire.BeanFactory ( ) { return org.springframework.data.gemfire.BeanFactory ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.GemfireBeanFactoryLocator org.springframework.data.gemfire.GemfireBeanFactoryLocator ( ) { return org.springframework.data.gemfire.GemfireBeanFactoryLocator ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( Resource org.springframework.data.gemfire.Resource ) { this . org.springframework.data.gemfire.Resource = org.springframework.data.gemfire.Resource ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.Resource org.springframework.data.gemfire.Resource ( ) { return org.springframework.data.gemfire.Resource ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( ) { try { return org.springframework.data.gemfire.Resource ( ) . getFile ( ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalStateException ( java.lang.String . java.lang.String ( STRING , java.io.IOException ) ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { try { Resource org.springframework.data.gemfire.Resource = org.springframework.data.gemfire.Resource ( ) ; return ( org.springframework.data.gemfire.Resource != null && org.springframework.data.gemfire.Resource . getFile ( ) . isFile ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { return false ; } }  <METHOD_END>
<METHOD_START> public void void ( java.util.Properties java.util.Properties ) { this . java.util.Properties = java.util.Properties ; }  <METHOD_END>
<METHOD_START> public java.util.Properties java.util.Properties ( ) { return java.util.Properties ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Float java.lang.Float ) { this . java.lang.Float = java.lang.Float ; }  <METHOD_END>
<METHOD_START> public java.lang.Float java.lang.Float ( ) { return java.lang.Float ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.data.gemfire.CacheFactoryBean.DynamicRegionSupport org.springframework.data.gemfire.CacheFactoryBean.DynamicRegionSupport ) { this . org.springframework.data.gemfire.CacheFactoryBean.DynamicRegionSupport = org.springframework.data.gemfire.CacheFactoryBean.DynamicRegionSupport ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.CacheFactoryBean.DynamicRegionSupport org.springframework.data.gemfire.CacheFactoryBean.DynamicRegionSupport ( ) { return org.springframework.data.gemfire.CacheFactoryBean.DynamicRegionSupport ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Float java.lang.Float ) { this . java.lang.Float = java.lang.Float ; }  <METHOD_END>
<METHOD_START> public java.lang.Float java.lang.Float ( ) { return java.lang.Float ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource> < org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource > java.util.List<org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource> ) { this . java.util.List<org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource> = java.util.List<org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource> ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource> < org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource > java.util.List<org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource> ( ) { return java.util.List<org.springframework.data.gemfire.CacheFactoryBean.JndiDataSource> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.data.gemfire.TransactionListener> < TransactionListener > java.util.List<org.springframework.data.gemfire.TransactionListener> ) { this . java.util.List<org.springframework.data.gemfire.TransactionListener> = java.util.List<org.springframework.data.gemfire.TransactionListener> ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.data.gemfire.TransactionListener> < TransactionListener > java.util.List<org.springframework.data.gemfire.TransactionListener> ( ) { return java.util.List<org.springframework.data.gemfire.TransactionListener> ; }  <METHOD_END>
<METHOD_START> public void void ( TransactionWriter org.springframework.data.gemfire.TransactionWriter ) { this . org.springframework.data.gemfire.TransactionWriter = org.springframework.data.gemfire.TransactionWriter ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.TransactionWriter org.springframework.data.gemfire.TransactionWriter ( ) { return org.springframework.data.gemfire.TransactionWriter ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return this . java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Boolean java.lang.Boolean ( ) { return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( ) { java.io.File java.io.File = ( this . java.lang.String != null ? new java.io.File ( this . java.lang.String ) : null ) ; DynamicRegionFactory . DynamicRegionFactory DynamicRegionFactory.Config = new DynamicRegionFactory . DynamicRegionFactory ( java.io.File , java.lang.String , java.lang.Boolean , java.lang.Boolean ) ; DynamicRegionFactory . get ( ) . open ( DynamicRegionFactory.Config ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( ) { return java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { this . java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.data.gemfire.ConfigProperty> < ConfigProperty > java.util.List<org.springframework.data.gemfire.ConfigProperty> ( ) { return java.util.List<org.springframework.data.gemfire.ConfigProperty> ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.data.gemfire.ConfigProperty> < ConfigProperty > java.util.List<org.springframework.data.gemfire.ConfigProperty> ) { this . java.util.List<org.springframework.data.gemfire.ConfigProperty> = java.util.List<org.springframework.data.gemfire.ConfigProperty> ; }  <METHOD_END>
