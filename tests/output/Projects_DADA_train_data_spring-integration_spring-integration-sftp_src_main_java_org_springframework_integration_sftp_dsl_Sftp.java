<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpInboundChannelAdapterSpec org.springframework.integration.sftp.dsl.SftpInboundChannelAdapterSpec ( SessionFactory < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> ) { return org.springframework.integration.sftp.dsl.SftpInboundChannelAdapterSpec ( org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpInboundChannelAdapterSpec org.springframework.integration.sftp.dsl.SftpInboundChannelAdapterSpec ( SessionFactory < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> , java.util.Comparator<java.io.File> < java.io.File > java.util.Comparator<java.io.File> ) { return new SftpInboundChannelAdapterSpec ( org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> , java.util.Comparator<java.io.File> ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpStreamingInboundChannelAdapterSpec org.springframework.integration.sftp.dsl.SftpStreamingInboundChannelAdapterSpec ( RemoteFileTemplate < LsEntry > org.springframework.integration.sftp.dsl.RemoteFileTemplate<org.springframework.integration.sftp.dsl.LsEntry> ) { return org.springframework.integration.sftp.dsl.SftpStreamingInboundChannelAdapterSpec ( org.springframework.integration.sftp.dsl.RemoteFileTemplate<org.springframework.integration.sftp.dsl.LsEntry> , null ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpStreamingInboundChannelAdapterSpec org.springframework.integration.sftp.dsl.SftpStreamingInboundChannelAdapterSpec ( RemoteFileTemplate < LsEntry > org.springframework.integration.sftp.dsl.RemoteFileTemplate<org.springframework.integration.sftp.dsl.LsEntry> , java.util.Comparator<org.springframework.integration.sftp.dsl.AbstractFileInfo<org.springframework.integration.sftp.dsl.LsEntry>> < AbstractFileInfo < LsEntry > > java.util.Comparator<org.springframework.integration.sftp.dsl.AbstractFileInfo<org.springframework.integration.sftp.dsl.LsEntry>> ) { return new SftpStreamingInboundChannelAdapterSpec ( org.springframework.integration.sftp.dsl.RemoteFileTemplate<org.springframework.integration.sftp.dsl.LsEntry> , java.util.Comparator<org.springframework.integration.sftp.dsl.AbstractFileInfo<org.springframework.integration.sftp.dsl.LsEntry>> ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpMessageHandlerSpec org.springframework.integration.sftp.dsl.SftpMessageHandlerSpec ( SessionFactory < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> ) { return new SftpMessageHandlerSpec ( org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpMessageHandlerSpec org.springframework.integration.sftp.dsl.SftpMessageHandlerSpec ( SessionFactory < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> , FileExistsMode org.springframework.integration.sftp.dsl.FileExistsMode ) { return org.springframework.integration.sftp.dsl.SftpMessageHandlerSpec ( new SftpRemoteFileTemplate ( org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> ) , org.springframework.integration.sftp.dsl.FileExistsMode ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpMessageHandlerSpec org.springframework.integration.sftp.dsl.SftpMessageHandlerSpec ( RemoteFileTemplate < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.RemoteFileTemplate<ChannelSftp.LsEntry> ) { return new SftpMessageHandlerSpec ( org.springframework.integration.sftp.dsl.RemoteFileTemplate<ChannelSftp.LsEntry> ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpMessageHandlerSpec org.springframework.integration.sftp.dsl.SftpMessageHandlerSpec ( RemoteFileTemplate < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.RemoteFileTemplate<ChannelSftp.LsEntry> , FileExistsMode org.springframework.integration.sftp.dsl.FileExistsMode ) { return new SftpMessageHandlerSpec ( org.springframework.integration.sftp.dsl.RemoteFileTemplate<ChannelSftp.LsEntry> , org.springframework.integration.sftp.dsl.FileExistsMode ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec ( SessionFactory < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> , AbstractRemoteFileOutboundGateway . AbstractRemoteFileOutboundGateway AbstractRemoteFileOutboundGateway.Command , java.lang.String java.lang.String ) { return org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec ( org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> , AbstractRemoteFileOutboundGateway.Command . getCommand ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec ( SessionFactory < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> , java.lang.String java.lang.String , java.lang.String java.lang.String ) { return new SftpOutboundGatewaySpec ( new SftpOutboundGateway ( org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> , java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec ( RemoteFileTemplate < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.RemoteFileTemplate<ChannelSftp.LsEntry> , AbstractRemoteFileOutboundGateway . AbstractRemoteFileOutboundGateway AbstractRemoteFileOutboundGateway.Command , java.lang.String java.lang.String ) { return org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec ( org.springframework.integration.sftp.dsl.RemoteFileTemplate<ChannelSftp.LsEntry> , AbstractRemoteFileOutboundGateway.Command . getCommand ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec ( RemoteFileTemplate < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.RemoteFileTemplate<ChannelSftp.LsEntry> , java.lang.String java.lang.String , java.lang.String java.lang.String ) { return new SftpOutboundGatewaySpec ( new SftpOutboundGateway ( org.springframework.integration.sftp.dsl.RemoteFileTemplate<ChannelSftp.LsEntry> , java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec org.springframework.integration.sftp.dsl.SftpOutboundGatewaySpec ( SessionFactory < ChannelSftp . ChannelSftp > org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> , MessageSessionCallback < ChannelSftp . ChannelSftp , ? > org.springframework.integration.sftp.dsl.MessageSessionCallback<ChannelSftp.LsEntry,?> ) { return new SftpOutboundGatewaySpec ( new SftpOutboundGateway ( org.springframework.integration.sftp.dsl.SessionFactory<ChannelSftp.LsEntry> , org.springframework.integration.sftp.dsl.MessageSessionCallback<ChannelSftp.LsEntry,> ) ) ; }  <METHOD_END>
<METHOD_START> private void ( ) { super(); }  <METHOD_END>
