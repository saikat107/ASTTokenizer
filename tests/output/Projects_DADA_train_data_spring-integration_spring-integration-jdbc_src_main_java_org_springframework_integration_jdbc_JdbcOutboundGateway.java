<METHOD_START> public void ( javax.sql.DataSource javax.sql.DataSource , java.lang.String java.lang.String ) { this( new JdbcTemplate ( javax.sql.DataSource ) , java.lang.String , null ); }  <METHOD_END>
<METHOD_START> public void ( javax.sql.DataSource javax.sql.DataSource , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this( new JdbcTemplate ( javax.sql.DataSource ) , java.lang.String , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( JdbcOperations org.springframework.integration.jdbc.JdbcOperations , java.lang.String java.lang.String ) { this( org.springframework.integration.jdbc.JdbcOperations , java.lang.String , null ); }  <METHOD_END>
<METHOD_START> public void ( JdbcOperations org.springframework.integration.jdbc.JdbcOperations , java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( org.springframework.integration.jdbc.JdbcOperations , STRING ) ; if ( ! StringUtils . hasText ( java.lang.String ) && ! StringUtils . hasText ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( StringUtils . hasText ( java.lang.String ) ) { this . org.springframework.integration.jdbc.JdbcPollingChannelAdapter = new JdbcPollingChannelAdapter ( org.springframework.integration.jdbc.JdbcOperations , java.lang.String ) ; this . org.springframework.integration.jdbc.JdbcPollingChannelAdapter . setMaxRowsPerPoll ( NUMBER ) ; } else { this . org.springframework.integration.jdbc.JdbcPollingChannelAdapter = null ; } if ( StringUtils . hasText ( java.lang.String ) ) { this . org.springframework.integration.jdbc.JdbcMessageHandler = new JdbcMessageHandler ( org.springframework.integration.jdbc.JdbcOperations , java.lang.String ) ; } else { this . org.springframework.integration.jdbc.JdbcMessageHandler = null ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { Assert . notNull ( java.lang.Integer , STRING ) ; this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { if ( this . java.lang.Integer != null ) { Assert . notNull ( this . org.springframework.integration.jdbc.JdbcPollingChannelAdapter , STRING ) ; this . org.springframework.integration.jdbc.JdbcPollingChannelAdapter . setMaxRowsPerPoll ( this . java.lang.Integer ) ; } if ( this . org.springframework.integration.jdbc.JdbcMessageHandler != null ) { this . org.springframework.integration.jdbc.JdbcMessageHandler . setBeanFactory ( this . getBeanFactory ( ) ) ; this . org.springframework.integration.jdbc.JdbcMessageHandler . afterPropertiesSet ( ) ; } if ( ! this . boolean && this . getBeanFactory ( ) != null ) { ( ( ExpressionEvaluatingSqlParameterSourceFactory ) this . org.springframework.integration.jdbc.SqlParameterSourceFactory ) . setBeanFactory ( this . getBeanFactory ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.jdbc.Message<?> ) { java.util.List<?> < ? > java.util.List<?> ; if ( this . org.springframework.integration.jdbc.JdbcMessageHandler != null ) { java.util.List<?> = this . org.springframework.integration.jdbc.JdbcMessageHandler . executeUpdateQuery ( org.springframework.integration.jdbc.Message<> , this . boolean ) ; } else { java.util.List<?> = java.util.Collections . java.util.List<java.lang.Object> ( ) ; } if ( this . org.springframework.integration.jdbc.JdbcPollingChannelAdapter != null ) { SqlParameterSource org.springframework.integration.jdbc.SqlParameterSource = this . org.springframework.integration.jdbc.SqlParameterSourceFactory . createParameterSource ( org.springframework.integration.jdbc.Message<> ) ; if ( this . boolean ) { if ( ! java.util.List<> . boolean ( ) ) { if ( java.util.List<> . int ( ) == NUMBER ) { org.springframework.integration.jdbc.SqlParameterSource = this . org.springframework.integration.jdbc.SqlParameterSourceFactory . createParameterSource ( java.util.List<> . get ( NUMBER ) ) ; } else { org.springframework.integration.jdbc.SqlParameterSource = this . org.springframework.integration.jdbc.SqlParameterSourceFactory . createParameterSource ( java.util.List<> ) ; } } } java.util.List<?> = this . org.springframework.integration.jdbc.JdbcPollingChannelAdapter . doPoll ( org.springframework.integration.jdbc.SqlParameterSource ) ; if ( java.util.List<> . boolean ( ) ) { return null ; } } java.lang.Object java.lang.Object = java.util.List<> ; if ( java.util.List<> . boolean ( ) ) { return null ; } if ( java.util.List<> . int ( ) == NUMBER ) { java.lang.Object = java.util.List<> . get ( NUMBER ) ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( SqlParameterSourceFactory org.springframework.integration.jdbc.SqlParameterSourceFactory ) { Assert . notNull ( this . org.springframework.integration.jdbc.JdbcMessageHandler , STRING ) ; this . org.springframework.integration.jdbc.JdbcMessageHandler . setSqlParameterSourceFactory ( org.springframework.integration.jdbc.SqlParameterSourceFactory ) ; }  <METHOD_END>
<METHOD_START> public void void ( MessagePreparedStatementSetter org.springframework.integration.jdbc.MessagePreparedStatementSetter ) { Assert . notNull ( this . org.springframework.integration.jdbc.JdbcMessageHandler , STRING ) ; this . org.springframework.integration.jdbc.JdbcMessageHandler . setPreparedStatementSetter ( org.springframework.integration.jdbc.MessagePreparedStatementSetter ) ; }  <METHOD_END>
<METHOD_START> public void void ( SqlParameterSourceFactory org.springframework.integration.jdbc.SqlParameterSourceFactory ) { this . org.springframework.integration.jdbc.SqlParameterSourceFactory = org.springframework.integration.jdbc.SqlParameterSourceFactory ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> public void void ( RowMapper < ? > org.springframework.integration.jdbc.RowMapper<?> ) { this . org.springframework.integration.jdbc.JdbcPollingChannelAdapter . setRowMapper ( org.springframework.integration.jdbc.RowMapper<> ) ; }  <METHOD_END>
