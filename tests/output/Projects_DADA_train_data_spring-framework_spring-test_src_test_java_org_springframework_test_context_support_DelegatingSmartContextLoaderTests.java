<METHOD_START> private static void void ( java.lang.Object [] java.lang.Object[] ) { assertTrue ( ObjectUtils . isEmpty ( java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ContextConfigurationAttributes org.springframework.test.context.support.ContextConfigurationAttributes = new ContextConfigurationAttributes ( org.springframework.test.context.support.DelegatingSmartContextLoaderTests.XmlTestCase .class , java.lang.String[] , java.lang.Class<?>[] , true , null , true , ContextLoader .class ) ; org.springframework.test.context.support.DelegatingSmartContextLoader . processContextConfiguration ( org.springframework.test.context.support.ContextConfigurationAttributes ) ; assertEquals ( NUMBER , org.springframework.test.context.support.ContextConfigurationAttributes . getLocations ( ) . length ) ; void ( org.springframework.test.context.support.ContextConfigurationAttributes . getClasses ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ContextConfigurationAttributes org.springframework.test.context.support.ContextConfigurationAttributes = new ContextConfigurationAttributes ( org.springframework.test.context.support.DelegatingSmartContextLoaderTests.ConfigClassTestCase .class , java.lang.String[] , java.lang.Class<?>[] , true , null , true , ContextLoader .class ) ; org.springframework.test.context.support.DelegatingSmartContextLoader . processContextConfiguration ( org.springframework.test.context.support.ContextConfigurationAttributes ) ; assertEquals ( NUMBER , org.springframework.test.context.support.ContextConfigurationAttributes . getClasses ( ) . length ) ; void ( org.springframework.test.context.support.ContextConfigurationAttributes . getLocations ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.test.context.support.ExpectedException . expect ( java.lang.IllegalStateException .class ) ; org.springframework.test.context.support.ExpectedException . expectMessage ( containsString ( STRING ) ) ; ContextConfigurationAttributes org.springframework.test.context.support.ContextConfigurationAttributes = new ContextConfigurationAttributes ( org.springframework.test.context.support.DelegatingSmartContextLoaderTests.ImproperDuplicateDefaultXmlAndConfigClassTestCase .class , java.lang.String[] , java.lang.Class<?>[] , true , null , true , ContextLoader .class ) ; org.springframework.test.context.support.DelegatingSmartContextLoader . processContextConfiguration ( org.springframework.test.context.support.ContextConfigurationAttributes ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String [] java.lang.String[] = new java.lang.String [] { STRING } ; ContextConfigurationAttributes org.springframework.test.context.support.ContextConfigurationAttributes = new ContextConfigurationAttributes ( java.lang.Class<? extends org.springframework.test.context.support.DelegatingSmartContextLoaderTests> ( ) , java.lang.String[] , java.lang.Class<?>[] , true , null , true , ContextLoader .class ) ; org.springframework.test.context.support.DelegatingSmartContextLoader . processContextConfiguration ( org.springframework.test.context.support.ContextConfigurationAttributes ) ; assertArrayEquals ( java.lang.String[] , org.springframework.test.context.support.ContextConfigurationAttributes . getLocations ( ) ) ; void ( org.springframework.test.context.support.ContextConfigurationAttributes . getClasses ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > [] java.lang.Class<?>[] = new java.lang.Class<?> < ? > [] { java.lang.Class<? extends org.springframework.test.context.support.DelegatingSmartContextLoaderTests> ( ) } ; ContextConfigurationAttributes org.springframework.test.context.support.ContextConfigurationAttributes = new ContextConfigurationAttributes ( java.lang.Class<? extends org.springframework.test.context.support.DelegatingSmartContextLoaderTests> ( ) , java.lang.String[] , java.lang.Class<?>[] , true , null , true , ContextLoader .class ) ; org.springframework.test.context.support.DelegatingSmartContextLoader . processContextConfiguration ( org.springframework.test.context.support.ContextConfigurationAttributes ) ; assertArrayEquals ( java.lang.Class<?>[] , org.springframework.test.context.support.ContextConfigurationAttributes . getClasses ( ) ) ; void ( org.springframework.test.context.support.ContextConfigurationAttributes . getLocations ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { MergedContextConfiguration org.springframework.test.context.support.MergedContextConfiguration = null ; org.springframework.test.context.support.DelegatingSmartContextLoader . loadContext ( org.springframework.test.context.support.MergedContextConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.test.context.support.ExpectedException . expect ( java.lang.IllegalStateException .class ) ; org.springframework.test.context.support.ExpectedException . expectMessage ( startsWith ( STRING ) ) ; org.springframework.test.context.support.ExpectedException . expectMessage ( containsString ( STRING ) ) ; MergedContextConfiguration org.springframework.test.context.support.MergedContextConfiguration = new MergedContextConfiguration ( java.lang.Class<? extends org.springframework.test.context.support.DelegatingSmartContextLoaderTests> ( ) , java.lang.String[] , java.lang.Class<?>[] , java.lang.String[] , org.springframework.test.context.support.DelegatingSmartContextLoader ) ; org.springframework.test.context.support.DelegatingSmartContextLoader . loadContext ( org.springframework.test.context.support.MergedContextConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.test.context.support.ExpectedException . expect ( java.lang.IllegalStateException .class ) ; org.springframework.test.context.support.ExpectedException . expectMessage ( startsWith ( STRING ) ) ; org.springframework.test.context.support.ExpectedException . expectMessage ( endsWith ( STRING ) ) ; MergedContextConfiguration org.springframework.test.context.support.MergedContextConfiguration = new MergedContextConfiguration ( java.lang.Class<? extends org.springframework.test.context.support.DelegatingSmartContextLoaderTests> ( ) , new java.lang.String [] { STRING } , new java.lang.Class [] { java.lang.Class<? extends org.springframework.test.context.support.DelegatingSmartContextLoaderTests> ( ) } , java.lang.String[] , org.springframework.test.context.support.DelegatingSmartContextLoader ) ; org.springframework.test.context.support.DelegatingSmartContextLoader . loadContext ( org.springframework.test.context.support.MergedContextConfiguration ) ; }  <METHOD_END>
<METHOD_START> private void void ( MergedContextConfiguration org.springframework.test.context.support.MergedContextConfiguration )			throws java.lang.Exception { ApplicationContext org.springframework.test.context.support.ApplicationContext = org.springframework.test.context.support.DelegatingSmartContextLoader . loadContext ( org.springframework.test.context.support.MergedContextConfiguration ) ; assertNotNull ( org.springframework.test.context.support.ApplicationContext ) ; assertEquals ( STRING , org.springframework.test.context.support.ApplicationContext . getBean ( java.lang.String .class ) ) ; assertTrue ( org.springframework.test.context.support.ApplicationContext instanceof ConfigurableApplicationContext ) ; ( ( ConfigurableApplicationContext ) org.springframework.test.context.support.ApplicationContext ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MergedContextConfiguration org.springframework.test.context.support.MergedContextConfiguration = new MergedContextConfiguration ( org.springframework.test.context.support.DelegatingSmartContextLoaderTests.XmlTestCase .class , new java.lang.String [] { STRING } , java.lang.Class<?>[] , java.lang.String[] , org.springframework.test.context.support.DelegatingSmartContextLoader ) ; void ( org.springframework.test.context.support.MergedContextConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MergedContextConfiguration org.springframework.test.context.support.MergedContextConfiguration = new MergedContextConfiguration ( org.springframework.test.context.support.DelegatingSmartContextLoaderTests.ConfigClassTestCase .class , java.lang.String[] , new java.lang.Class<?> < ? > [] { org.springframework.test.context.support.DelegatingSmartContextLoaderTests.ConfigClassTestCase . org.springframework.test.context.support.DelegatingSmartContextLoaderTests.ConfigClassTestCase.Config .class } , java.lang.String[] , org.springframework.test.context.support.DelegatingSmartContextLoader ) ; void ( org.springframework.test.context.support.MergedContextConfiguration ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.UnsupportedOperationException .class ) public void void ( ) { org.springframework.test.context.support.DelegatingSmartContextLoader . processLocations ( java.lang.Class<? extends org.springframework.test.context.support.DelegatingSmartContextLoaderTests> ( ) , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.UnsupportedOperationException .class ) public void void ( ) java.lang.Exception { org.springframework.test.context.support.DelegatingSmartContextLoader . loadContext ( java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ Bean public java.lang.String java.lang.String ( ) { return new java.lang.String ( STRING ) ; }  <METHOD_END>
