<METHOD_START> public void ( SpringValidatorAdapter org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter , boolean boolean ) { this . org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter = org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public final org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter ( ) { return this . org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return this . org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter . supports ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , Errors org.springframework.boot.autoconfigure.validation.Errors ) { this . org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter . validate ( java.lang.Object , org.springframework.boot.autoconfigure.validation.Errors ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , Errors org.springframework.boot.autoconfigure.validation.Errors , java.lang.Object ... java.lang.Object[] ) { this . org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter . validate ( java.lang.Object , org.springframework.boot.autoconfigure.validation.Errors , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.boot.autoconfigure.validation.ApplicationContext )			throws org.springframework.boot.autoconfigure.validation.BeansException { if ( ! this . boolean && this . org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter instanceof ApplicationContextAware ) { ( ( ApplicationContextAware ) this . org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter ) . setApplicationContext ( org.springframework.boot.autoconfigure.validation.ApplicationContext ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( ! this . boolean && this . org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter instanceof InitializingBean ) { ( ( InitializingBean ) this . org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter ) . afterPropertiesSet ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( ! this . boolean && this . org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter instanceof DisposableBean ) { ( ( DisposableBean ) this . org.springframework.boot.autoconfigure.validation.SpringValidatorAdapter ) . destroy ( ) ; } }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.autoconfigure.validation.Validator org.springframework.boot.autoconfigure.validation.Validator ( ApplicationContext org.springframework.boot.autoconfigure.validation.ApplicationContext , Validator org.springframework.boot.autoconfigure.validation.Validator ) { if ( org.springframework.boot.autoconfigure.validation.Validator != null ) { return org.springframework.boot.autoconfigure.validation.Validator ( org.springframework.boot.autoconfigure.validation.Validator , false ) ; } return org.springframework.boot.autoconfigure.validation.Validator ( org.springframework.boot.autoconfigure.validation.ApplicationContext ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.boot.autoconfigure.validation.Validator org.springframework.boot.autoconfigure.validation.Validator ( ApplicationContext org.springframework.boot.autoconfigure.validation.ApplicationContext ) { Validator org.springframework.boot.autoconfigure.validation.Validator = org.springframework.boot.autoconfigure.validation.Validator ( org.springframework.boot.autoconfigure.validation.ApplicationContext ) ; if ( org.springframework.boot.autoconfigure.validation.Validator != null ) { return org.springframework.boot.autoconfigure.validation.Validator ( org.springframework.boot.autoconfigure.validation.Validator , true ) ; } return org.springframework.boot.autoconfigure.validation.Validator ( ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.boot.autoconfigure.validation.Validator org.springframework.boot.autoconfigure.validation.Validator ( ApplicationContext org.springframework.boot.autoconfigure.validation.ApplicationContext ) { try { javax . javax.validation . javax.validation javax.validation.Validator = org.springframework.boot.autoconfigure.validation.ApplicationContext . getBean ( javax . javax.validation . javax.validation .class ) ; if ( javax.validation.Validator instanceof Validator ) { return ( Validator ) javax.validation.Validator ; } return new SpringValidatorAdapter ( javax.validation.Validator ) ; } catch ( NoSuchBeanDefinitionException org.springframework.boot.autoconfigure.validation.NoSuchBeanDefinitionException ) { return null ; } }  <METHOD_END>
<METHOD_START> private static org.springframework.boot.autoconfigure.validation.Validator org.springframework.boot.autoconfigure.validation.Validator ( ) { OptionalValidatorFactoryBean org.springframework.boot.autoconfigure.validation.OptionalValidatorFactoryBean = new OptionalValidatorFactoryBean ( ) ; org.springframework.boot.autoconfigure.validation.OptionalValidatorFactoryBean . setMessageInterpolator ( new MessageInterpolatorFactory ( ) . getObject ( ) ) ; return org.springframework.boot.autoconfigure.validation.Validator ( org.springframework.boot.autoconfigure.validation.OptionalValidatorFactoryBean , false ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.boot.autoconfigure.validation.Validator org.springframework.boot.autoconfigure.validation.Validator ( Validator org.springframework.boot.autoconfigure.validation.Validator , boolean boolean ) { if ( org.springframework.boot.autoconfigure.validation.Validator instanceof javax . javax.validation . javax.validation ) { if ( org.springframework.boot.autoconfigure.validation.Validator instanceof SpringValidatorAdapter ) { return new org.springframework.boot.autoconfigure.validation.SpringValidator ( ( SpringValidatorAdapter ) org.springframework.boot.autoconfigure.validation.Validator , boolean ) ; } return new org.springframework.boot.autoconfigure.validation.SpringValidator ( new SpringValidatorAdapter ( ( javax . javax.validation . javax.validation ) org.springframework.boot.autoconfigure.validation.Validator ) , boolean ) ; } return org.springframework.boot.autoconfigure.validation.Validator ; }  <METHOD_END>
