<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; NestedRuntimeException org.springframework.core.NestedRuntimeException = new NestedRuntimeException ( java.lang.String ) {} ; assertNull ( org.springframework.core.NestedRuntimeException . getCause ( ) ) ; assertEquals ( org.springframework.core.NestedRuntimeException . getMessage ( ) , java.lang.String ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; java.io.PrintWriter java.io.PrintWriter = new java.io.PrintWriter ( java.io.ByteArrayOutputStream ) ; org.springframework.core.NestedRuntimeException . printStackTrace ( java.io.PrintWriter ) ; java.io.PrintWriter . void ( ) ; java.lang.String java.lang.String = new java.lang.String ( java.io.ByteArrayOutputStream . byte[] ( ) ) ; assertFalse ( java.lang.String . int ( java.lang.String ) == - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.Exception java.lang.Exception = new java.lang.Exception ( java.lang.String ) ; NestedRuntimeException org.springframework.core.NestedRuntimeException = new NestedRuntimeException ( java.lang.String , java.lang.Exception ) {} ; assertEquals ( org.springframework.core.NestedRuntimeException . getCause ( ) , java.lang.Exception ) ; assertTrue ( org.springframework.core.NestedRuntimeException . getMessage ( ) . indexOf ( java.lang.String ) != - NUMBER ) ; assertTrue ( org.springframework.core.NestedRuntimeException . getMessage ( ) . indexOf ( java.lang.String ) != - NUMBER ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; java.io.PrintWriter java.io.PrintWriter = new java.io.PrintWriter ( java.io.ByteArrayOutputStream ) ; org.springframework.core.NestedRuntimeException . printStackTrace ( java.io.PrintWriter ) ; java.io.PrintWriter . void ( ) ; java.lang.String java.lang.String = new java.lang.String ( java.io.ByteArrayOutputStream . byte[] ( ) ) ; assertFalse ( java.lang.String . int ( java.lang.Exception . java.lang.Class<? extends java.lang.Exception> ( ) . java.lang.String ( ) ) == - NUMBER ) ; assertFalse ( java.lang.String . int ( java.lang.String ) == - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; NestedCheckedException org.springframework.core.NestedCheckedException = new NestedCheckedException ( java.lang.String ) {} ; assertNull ( org.springframework.core.NestedCheckedException . getCause ( ) ) ; assertEquals ( org.springframework.core.NestedCheckedException . getMessage ( ) , java.lang.String ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; java.io.PrintWriter java.io.PrintWriter = new java.io.PrintWriter ( java.io.ByteArrayOutputStream ) ; org.springframework.core.NestedCheckedException . printStackTrace ( java.io.PrintWriter ) ; java.io.PrintWriter . void ( ) ; java.lang.String java.lang.String = new java.lang.String ( java.io.ByteArrayOutputStream . byte[] ( ) ) ; assertFalse ( java.lang.String . int ( java.lang.String ) == - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; java.lang.Exception java.lang.Exception = new java.lang.Exception ( java.lang.String ) ; NestedCheckedException org.springframework.core.NestedCheckedException = new NestedCheckedException ( java.lang.String , java.lang.Exception ) {} ; assertEquals ( org.springframework.core.NestedCheckedException . getCause ( ) , java.lang.Exception ) ; assertTrue ( org.springframework.core.NestedCheckedException . getMessage ( ) . indexOf ( java.lang.String ) != - NUMBER ) ; assertTrue ( org.springframework.core.NestedCheckedException . getMessage ( ) . indexOf ( java.lang.String ) != - NUMBER ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; java.io.PrintWriter java.io.PrintWriter = new java.io.PrintWriter ( java.io.ByteArrayOutputStream ) ; org.springframework.core.NestedCheckedException . printStackTrace ( java.io.PrintWriter ) ; java.io.PrintWriter . void ( ) ; java.lang.String java.lang.String = new java.lang.String ( java.io.ByteArrayOutputStream . byte[] ( ) ) ; assertFalse ( java.lang.String . int ( java.lang.Exception . java.lang.Class<? extends java.lang.Exception> ( ) . java.lang.String ( ) ) == - NUMBER ) ; assertFalse ( java.lang.String . int ( java.lang.String ) == - NUMBER ) ; }  <METHOD_END>
