<METHOD_START> void ( AbstractMessageListenerContainer org.springframework.integration.jms.dsl.AbstractMessageListenerContainer ) { super( new JmsMessageDrivenEndpoint ( org.springframework.integration.jms.dsl.AbstractMessageListenerContainer , new ChannelPublishingJmsMessageListener ( ) ) ); this . target . getListener ( ) . setExpectReply ( false ) ; }  <METHOD_END>
<METHOD_START> public S S ( MessageConverter org.springframework.integration.jms.dsl.MessageConverter ) { this . target . getListener ( ) . setMessageConverter ( org.springframework.integration.jms.dsl.MessageConverter ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( JmsHeaderMapper org.springframework.integration.jms.dsl.JmsHeaderMapper ) { this . target . getListener ( ) . setHeaderMapper ( org.springframework.integration.jms.dsl.JmsHeaderMapper ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public S S ( boolean boolean ) { this . target . getListener ( ) . setExtractRequestPayload ( boolean ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> void ( JmsListenerContainerSpec < S , C > org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C> ) { super( org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C> . get ( ) ); this . org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C> = org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C> ; this . org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C> . get ( ) . setAutoStartup ( false ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.jms.dsl.JmsMessageDrivenChannelAdapterSpec.JmsMessageDrivenChannelAdapterListenerContainerSpec<S,C> < S , C > org.springframework.integration.jms.dsl.JmsMessageDrivenChannelAdapterSpec.JmsMessageDrivenChannelAdapterListenerContainerSpec<S,C> ( Destination org.springframework.integration.jms.dsl.Destination ) { this . org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C> . destination ( org.springframework.integration.jms.dsl.Destination ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.jms.dsl.JmsMessageDrivenChannelAdapterSpec.JmsMessageDrivenChannelAdapterListenerContainerSpec<S,C> < S , C > org.springframework.integration.jms.dsl.JmsMessageDrivenChannelAdapterSpec.JmsMessageDrivenChannelAdapterListenerContainerSpec<S,C> ( java.lang.String java.lang.String ) { this . org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C> . destination ( java.lang.String ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.jms.dsl.JmsMessageDrivenChannelAdapterSpec.JmsMessageDrivenChannelAdapterListenerContainerSpec<S,C> < S , C > org.springframework.integration.jms.dsl.JmsMessageDrivenChannelAdapterSpec.JmsMessageDrivenChannelAdapterListenerContainerSpec<S,C> ( java.util.function.Consumer<org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C>> < JmsListenerContainerSpec < S , C > > java.util.function.Consumer<org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C>> ) { Assert . notNull ( java.util.function.Consumer<org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C>> , STRING ) ; java.util.function.Consumer<org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C>> . accept ( this . org.springframework.integration.jms.dsl.JmsListenerContainerSpec<S,C> ) ; return _this ( ) ; }  <METHOD_END>
