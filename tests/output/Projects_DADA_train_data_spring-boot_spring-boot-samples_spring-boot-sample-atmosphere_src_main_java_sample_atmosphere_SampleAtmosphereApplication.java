<METHOD_START> @ Bean public sample.atmosphere.SampleAtmosphereApplication.EmbeddedAtmosphereInitializer sample.atmosphere.SampleAtmosphereApplication.EmbeddedAtmosphereInitializer ( ) { return new sample.atmosphere.SampleAtmosphereApplication.EmbeddedAtmosphereInitializer ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public sample.atmosphere.ServletRegistrationBean<sample.atmosphere.AtmosphereServlet> < AtmosphereServlet > sample.atmosphere.ServletRegistrationBean<sample.atmosphere.AtmosphereServlet> ( ) { ServletRegistrationBean < AtmosphereServlet > sample.atmosphere.ServletRegistrationBean<sample.atmosphere.AtmosphereServlet> = new ServletRegistrationBean <> ( new AtmosphereServlet ( ) , STRING ) ; sample.atmosphere.ServletRegistrationBean<sample.atmosphere.AtmosphereServlet> . addInitParameter ( STRING , STRING ) ; sample.atmosphere.ServletRegistrationBean<sample.atmosphere.AtmosphereServlet> . addInitParameter ( STRING + STRING , STRING ) ; sample.atmosphere.ServletRegistrationBean<sample.atmosphere.AtmosphereServlet> . setLoadOnStartup ( NUMBER ) ; sample.atmosphere.ServletRegistrationBean<sample.atmosphere.AtmosphereServlet> . setOrder ( Ordered . HIGHEST_PRECEDENCE ) ; return sample.atmosphere.ServletRegistrationBean<sample.atmosphere.AtmosphereServlet> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ViewControllerRegistry sample.atmosphere.ViewControllerRegistry ) { sample.atmosphere.ViewControllerRegistry . addViewController ( STRING ) . setViewName ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ServletContext sample.atmosphere.ServletContext ) throws sample.atmosphere.ServletException { void ( java.util.Collections .< java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( ) , sample.atmosphere.ServletContext ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String [] java.lang.String[] ) throws java.lang.Exception { SpringApplication . run ( sample.atmosphere.SampleAtmosphereApplication .class , java.lang.String[] ) ; }  <METHOD_END>
