<METHOD_START> public void void ( ObjectMapper org.springframework.http.converter.json.ObjectMapper ) { this . org.springframework.http.converter.json.ObjectMapper = org.springframework.http.converter.json.ObjectMapper ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . createXmlMapper ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( JsonFactory org.springframework.http.converter.json.JsonFactory ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . factory ( org.springframework.http.converter.json.JsonFactory ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.text.DateFormat java.text.DateFormat ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . dateFormat ( java.text.DateFormat ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . simpleDateFormat ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Locale java.util.Locale ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . locale ( java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.TimeZone java.util.TimeZone ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . timeZone ( java.util.TimeZone ) ; }  <METHOD_END>
<METHOD_START> public void void ( AnnotationIntrospector org.springframework.http.converter.json.AnnotationIntrospector ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . annotationIntrospector ( org.springframework.http.converter.json.AnnotationIntrospector ) ; }  <METHOD_END>
<METHOD_START> public void void ( PropertyNamingStrategy org.springframework.http.converter.json.PropertyNamingStrategy ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . propertyNamingStrategy ( org.springframework.http.converter.json.PropertyNamingStrategy ) ; }  <METHOD_END>
<METHOD_START> public void void ( TypeResolverBuilder < ? > org.springframework.http.converter.json.TypeResolverBuilder<?> ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . defaultTyping ( org.springframework.http.converter.json.TypeResolverBuilder<> ) ; }  <METHOD_END>
<METHOD_START> public void void ( JsonInclude . JsonInclude JsonInclude.Include ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . serializationInclusion ( JsonInclude.Include ) ; }  <METHOD_END>
<METHOD_START> public void void ( FilterProvider org.springframework.http.converter.json.FilterProvider ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . filters ( org.springframework.http.converter.json.FilterProvider ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.Class<?>,java.lang.Class<?>> < java.lang.Class<?> < ? > , java.lang.Class<?> < ? > > java.util.Map<java.lang.Class<?>,java.lang.Class<?>> ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . mixIns ( java.util.Map<java.lang.Class<?>,java.lang.Class<?>> ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.http.converter.json.JsonSerializer<?> < ? > ... org.springframework.http.converter.json.JsonSerializer<?>[] ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . serializers ( org.springframework.http.converter.json.JsonSerializer<?>[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> < java.lang.Class<?> < ? > , JsonSerializer < ? > > java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . serializersByType ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonSerializer<?>> ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.springframework.http.converter.json.JsonDeserializer<?> < ? > ... org.springframework.http.converter.json.JsonDeserializer<?>[] ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . deserializers ( org.springframework.http.converter.json.JsonDeserializer<?>[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> < java.lang.Class<?> < ? > , JsonDeserializer < ? > > java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . deserializersByType ( java.util.Map<java.lang.Class<?>,org.springframework.http.converter.json.JsonDeserializer<?>> ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . autoDetectFields ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . autoDetectGettersSetters ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . defaultViewInclusion ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . failOnUnknownProperties ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . failOnEmptyBeans ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . indentOutput ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . defaultUseWrapper ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object ... java.lang.Object[] ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . featuresToEnable ( java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object ... java.lang.Object[] ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . featuresToDisable ( java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.http.converter.json.Module> < Module > java.util.List<org.springframework.http.converter.json.Module> ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . modules ( java.util.List<org.springframework.http.converter.json.Module> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( java.lang.Class<? extends org.springframework.http.converter.json.Module> < ? extends Module > ... java.lang.Class<? extends org.springframework.http.converter.json.Module>[] ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . modulesToInstall ( java.lang.Class<? extends org.springframework.http.converter.json.Module>[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . findModulesViaServiceLoader ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . moduleClassLoader ( java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> public void void ( HandlerInstantiator org.springframework.http.converter.json.HandlerInstantiator ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . handlerInstantiator ( org.springframework.http.converter.json.HandlerInstantiator ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.http.converter.json.ApplicationContext ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . applicationContext ( org.springframework.http.converter.json.ApplicationContext ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.http.converter.json.ObjectMapper != null ) { this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . configure ( this . org.springframework.http.converter.json.ObjectMapper ) ; } else { this . org.springframework.http.converter.json.ObjectMapper = this . org.springframework.http.converter.json.Jackson2ObjectMapperBuilder . build ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.converter.json.ObjectMapper org.springframework.http.converter.json.ObjectMapper ( ) { return this . org.springframework.http.converter.json.ObjectMapper ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return ( this . org.springframework.http.converter.json.ObjectMapper != null ? this . org.springframework.http.converter.json.ObjectMapper . getClass ( ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
