<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.io.File java.io.File = java.io.File . java.io.File ( STRING , null , java.io.File ) ; java.io.File . boolean ( java.lang.System . long ( ) - NUMBER ) ; Message < ? > org.springframework.integration.file.Message<?> = this . org.springframework.integration.file.PollableChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.file.Message<> ) ; Message < ? > org.springframework.integration.file.Message<?> = this . org.springframework.integration.file.PollableChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.file.Message<> ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.file.Message<> . getPayload ( ) ) ; assertTrue ( ! java.io.File . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.io.File . java.io.File ( STRING , null , java.io.File ) . boolean ( java.lang.System . long ( ) - NUMBER ) ; Message < ? > org.springframework.integration.file.Message<?> = this . org.springframework.integration.file.PollableChannel . receive ( NUMBER ) ; assertNotNull ( org.springframework.integration.file.Message<> ) ; assertNull ( org.springframework.integration.file.PollableChannel . receive ( NUMBER ) ) ; }  <METHOD_END>
