<METHOD_START> @ Before public void void ( ) java.lang.Exception { this . org.springframework.ejb.config.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( this . org.springframework.ejb.config.DefaultListableBeanFactory ) ; this . org.springframework.ejb.config.XmlBeanDefinitionReader . setEventListener ( this . org.springframework.ejb.config.CollectingReaderEventListener ) ; this . org.springframework.ejb.config.XmlBeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.ejb.config.JeeNamespaceHandlerEventTests> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ComponentDefinition org.springframework.ejb.config.ComponentDefinition = this . org.springframework.ejb.config.CollectingReaderEventListener . getComponentDefinition ( STRING ) ; assertTrue ( org.springframework.ejb.config.ComponentDefinition instanceof BeanComponentDefinition ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ComponentDefinition org.springframework.ejb.config.ComponentDefinition = this . org.springframework.ejb.config.CollectingReaderEventListener . getComponentDefinition ( STRING ) ; assertTrue ( org.springframework.ejb.config.ComponentDefinition instanceof BeanComponentDefinition ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ComponentDefinition org.springframework.ejb.config.ComponentDefinition = this . org.springframework.ejb.config.CollectingReaderEventListener . getComponentDefinition ( STRING ) ; assertTrue ( org.springframework.ejb.config.ComponentDefinition instanceof BeanComponentDefinition ) ; }  <METHOD_END>
