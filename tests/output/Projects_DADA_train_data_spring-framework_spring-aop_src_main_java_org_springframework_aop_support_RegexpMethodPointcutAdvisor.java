<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( Advice org.springframework.aop.support.Advice ) { setAdvice ( org.springframework.aop.support.Advice ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , Advice org.springframework.aop.support.Advice ) { void ( java.lang.String ) ; setAdvice ( org.springframework.aop.support.Advice ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String [] java.lang.String[] , Advice org.springframework.aop.support.Advice ) { void ( java.lang.String[] ) ; setAdvice ( org.springframework.aop.support.Advice ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.aop.support.Pointcut org.springframework.aop.support.Pointcut ( ) { synchronized ( this . java.lang.Object ) { if ( this . org.springframework.aop.support.AbstractRegexpMethodPointcut == null ) { this . org.springframework.aop.support.AbstractRegexpMethodPointcut = org.springframework.aop.support.AbstractRegexpMethodPointcut ( ) ; this . org.springframework.aop.support.AbstractRegexpMethodPointcut . setPatterns ( this . java.lang.String[] ) ; } return org.springframework.aop.support.AbstractRegexpMethodPointcut ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.aop.support.AbstractRegexpMethodPointcut org.springframework.aop.support.AbstractRegexpMethodPointcut ( ) { return new JdkRegexpMethodPointcut ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.Class<? extends org.springframework.aop.support.RegexpMethodPointcutAdvisor> ( ) . java.lang.String ( ) + STRING + getAdvice ( ) + STRING + ObjectUtils . nullSafeToString ( this . java.lang.String[] ) ; }  <METHOD_END>
