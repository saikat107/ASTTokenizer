<METHOD_START> @ java.lang.Override protected java.lang.Class java.lang.Class ( ) { return EnableOffHeap .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , BeanDefinitionRegistry org.springframework.data.gemfire.config.annotation.BeanDefinitionRegistry ) { BeanDefinitionBuilder org.springframework.data.gemfire.config.annotation.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( org.springframework.data.gemfire.config.annotation.OffHeapConfiguration.OffHeapBeanFactoryPostProcessor .class ) ; org.springframework.data.gemfire.config.annotation.BeanDefinitionBuilder . addConstructorArgValue ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; org.springframework.data.gemfire.config.annotation.BeanDefinitionRegistry . registerBeanDefinition ( generateBeanName ( org.springframework.data.gemfire.config.annotation.OffHeapConfiguration.OffHeapBeanFactoryPostProcessor .class ) , org.springframework.data.gemfire.config.annotation.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Properties java.util.Properties ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { PropertiesBuilder org.springframework.data.gemfire.config.annotation.PropertiesBuilder = PropertiesBuilder . create ( ) ; org.springframework.data.gemfire.config.annotation.PropertiesBuilder . setProperty ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; return org.springframework.data.gemfire.config.annotation.PropertiesBuilder . build ( ) ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String [] java.lang.String[] ) { this( CollectionUtils . asSet ( ArrayUtils . nullSafeArray ( java.lang.String[] , java.lang.String .class ) ) ); }  <METHOD_END>
<METHOD_START> protected void ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { this . java.util.Set<java.lang.String> = CollectionUtils . nullSafeSet ( java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableListableBeanFactory org.springframework.data.gemfire.config.annotation.ConfigurableListableBeanFactory ) throws org.springframework.data.gemfire.config.annotation.BeansException { for ( java.lang.String java.lang.String : org.springframework.data.gemfire.config.annotation.ConfigurableListableBeanFactory . getBeanDefinitionNames ( ) ) { BeanDefinition org.springframework.data.gemfire.config.annotation.BeanDefinition = org.springframework.data.gemfire.config.annotation.ConfigurableListableBeanFactory . getBeanDefinition ( java.lang.String ) ; if ( boolean ( java.lang.String , org.springframework.data.gemfire.config.annotation.BeanDefinition , org.springframework.data.gemfire.config.annotation.ConfigurableListableBeanFactory ) ) { org.springframework.data.gemfire.config.annotation.BeanDefinition . getPropertyValues ( ) . addPropertyValue ( STRING , true ) ; } } }  <METHOD_END>
<METHOD_START> boolean boolean ( java.lang.String java.lang.String , BeanDefinition org.springframework.data.gemfire.config.annotation.BeanDefinition , ConfigurableListableBeanFactory org.springframework.data.gemfire.config.annotation.ConfigurableListableBeanFactory ) { return ( boolean ( org.springframework.data.gemfire.config.annotation.BeanDefinition ) && boolean ( java.lang.String , org.springframework.data.gemfire.config.annotation.BeanDefinition , org.springframework.data.gemfire.config.annotation.ConfigurableListableBeanFactory ) ) ; }  <METHOD_END>
<METHOD_START> boolean boolean ( BeanDefinition org.springframework.data.gemfire.config.annotation.BeanDefinition ) { return ( org.springframework.data.gemfire.config.annotation.BeanDefinition != null && java.util.Set<java.lang.String> . boolean ( org.springframework.data.gemfire.config.annotation.BeanDefinition . getBeanClassName ( ) ) ) ; }  <METHOD_END>
<METHOD_START> boolean boolean ( java.lang.String java.lang.String , BeanDefinition org.springframework.data.gemfire.config.annotation.BeanDefinition , ConfigurableListableBeanFactory org.springframework.data.gemfire.config.annotation.ConfigurableListableBeanFactory ) { return ( CollectionUtils . isEmpty ( java.util.Set<java.lang.String> ) || CollectionUtils . containsAny ( java.util.Set<java.lang.String> , java.util.Collection<java.lang.String> ( java.lang.String , org.springframework.data.gemfire.config.annotation.BeanDefinition , org.springframework.data.gemfire.config.annotation.ConfigurableListableBeanFactory ) ) ) ; }  <METHOD_END>
<METHOD_START> java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( java.lang.String java.lang.String , BeanDefinition org.springframework.data.gemfire.config.annotation.BeanDefinition , BeanFactory org.springframework.data.gemfire.config.annotation.BeanFactory ) { java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ; java.util.Collection<java.lang.String> . boolean ( java.lang.String ) ; java.util.Collections . boolean ( java.util.Collection<java.lang.String> , org.springframework.data.gemfire.config.annotation.BeanFactory . getAliases ( java.lang.String ) ) ; PropertyValue org.springframework.data.gemfire.config.annotation.PropertyValue = org.springframework.data.gemfire.config.annotation.BeanDefinition . getPropertyValues ( ) . getPropertyValue ( STRING ) ; if ( org.springframework.data.gemfire.config.annotation.PropertyValue != null ) { java.lang.Object java.lang.Object = org.springframework.data.gemfire.config.annotation.PropertyValue . getValue ( ) ; if ( java.lang.Object != null ) { java.util.Collection<java.lang.String> . boolean ( java.lang.Object . java.lang.String ( ) ) ; } } return java.util.Collection<java.lang.String> ; }  <METHOD_END>
