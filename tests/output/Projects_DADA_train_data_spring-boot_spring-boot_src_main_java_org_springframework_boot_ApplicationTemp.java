<METHOD_START> public void ( ) { this( null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.io.File ( ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public java.io.File java.io.File ( java.lang.String java.lang.String ) { java.io.File java.io.File = new java.io.File ( java.io.File ( ) , java.lang.String ) ; java.io.File . boolean ( ) ; return java.io.File ; }  <METHOD_END>
<METHOD_START> public java.io.File java.io.File ( ) { if ( this . java.io.File == null ) { synchronized ( this ) { byte [] byte[] = byte[] ( this . java.lang.Class<> ) ; this . java.io.File = new java.io.File ( java.io.File ( ) , java.lang.String ( byte[] ) ) ; this . java.io.File . boolean ( ) ; Assert . state ( this . java.io.File . boolean ( ) , STRING + this . java.io.File ) ; } } return this . java.io.File ; }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( ) { java.lang.String java.lang.String = java.lang.System . java.lang.String ( STRING ) ; Assert . state ( StringUtils . hasLength ( java.lang.String ) , STRING ) ; java.io.File java.io.File = new java.io.File ( java.lang.String ) ; Assert . state ( java.io.File . boolean ( ) , STRING + java.io.File + STRING ) ; Assert . state ( java.io.File . boolean ( ) , STRING + java.io.File + STRING ) ; return java.io.File ; }  <METHOD_END>
<METHOD_START> private byte [] byte[] ( java.lang.Class<?> < ? > java.lang.Class<?> ) { ApplicationHome org.springframework.boot.ApplicationHome = new ApplicationHome ( java.lang.Class<> ) ; java.security.MessageDigest java.security.MessageDigest ; try { java.security.MessageDigest = java.security.MessageDigest . java.security.MessageDigest ( STRING ) ; void ( java.security.MessageDigest , org.springframework.boot.ApplicationHome . getSource ( ) ) ; void ( java.security.MessageDigest , org.springframework.boot.ApplicationHome . getDir ( ) ) ; void ( java.security.MessageDigest , java.lang.System . java.lang.String ( STRING ) ) ; void ( java.security.MessageDigest , java.lang.System . java.lang.String ( STRING ) ) ; void ( java.security.MessageDigest , java.lang.System . java.lang.String ( STRING ) ) ; void ( java.security.MessageDigest , java.lang.System . java.lang.String ( STRING ) ) ; void ( java.security.MessageDigest , java.lang.System . java.lang.String ( STRING ) ) ; return java.security.MessageDigest . byte[] ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.IllegalStateException ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.security.MessageDigest java.security.MessageDigest , java.lang.Object java.lang.Object ) { if ( java.lang.Object != null ) { java.security.MessageDigest . void ( byte[] ( java.lang.Object ) ) ; } }  <METHOD_END>
<METHOD_START> private byte [] byte[] ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof java.io.File ) { return byte[] ( ( ( java.io.File ) java.lang.Object ) . java.lang.String ( ) ) ; } return java.lang.Object . java.lang.String ( ) . byte[] ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( byte [] byte[] ) { char [] char[] = new char [ byte[] . int * NUMBER ] ; for ( int int = NUMBER ; int < byte[] . int ; int ++ ) { int int = byte[] [ int ] & NUMBER ; char[] [ int * NUMBER ] = char[] [ int >>> NUMBER ] ; char[] [ int * NUMBER + NUMBER ] = char[] [ int & NUMBER ] ; } return new java.lang.String ( char[] ) ; }  <METHOD_END>
