<METHOD_START> java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> );  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.data.cassandra.repository.query.CassandraOperations . stream ( java.lang.String , java.lang.Class<> ) . map ( org.springframework.data.cassandra.repository.query.Converter<java.lang.Object,java.lang.Object> :: convert ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.data.cassandra.repository.query.CassandraOperations . select ( java.lang.String , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.data.cassandra.repository.query.CassandraOperations . selectOne ( java.lang.String , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.data.cassandra.repository.query.CassandraOperations . getCqlOperations ( ) . queryForResultSet ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.springframework.data.cassandra.repository.query.Converter<java.lang.Object,java.lang.Object> . convert ( org.springframework.data.cassandra.repository.query.CassandraQueryExecution . java.lang.Object ( java.lang.String , java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { ReturnedType org.springframework.data.cassandra.repository.query.ReturnedType = org.springframework.data.cassandra.repository.query.ResultProcessor . getReturnedType ( ) ; if ( ClassUtils . isPrimitiveOrWrapper ( org.springframework.data.cassandra.repository.query.ReturnedType . getReturnedType ( ) ) ) { return java.lang.Object ; } if ( java.lang.Object != null && org.springframework.data.cassandra.repository.query.ReturnedType . isInstance ( java.lang.Object ) ) { return java.lang.Object ; } Converter < java.lang.Object , java.lang.Object > org.springframework.data.cassandra.repository.query.Converter<java.lang.Object,java.lang.Object> = new DtoInstantiatingConverter ( org.springframework.data.cassandra.repository.query.ReturnedType . getReturnedType ( ) , org.springframework.data.cassandra.repository.query.CassandraMappingContext , org.springframework.data.cassandra.repository.query.EntityInstantiators ) ; return org.springframework.data.cassandra.repository.query.ResultProcessor . processResult ( java.lang.Object , org.springframework.data.cassandra.repository.query.Converter<java.lang.Object,java.lang.Object> ) ; }  <METHOD_END>
