<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) throws javax.naming.NamingException { return super. lookup ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.String java.lang.String , java.lang.Class<T> < T > java.lang.Class<T> ) throws javax.naming.NamingException { return super. lookup ( java.lang.String , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.jndi.JndiLocatorDelegate org.springframework.jndi.JndiLocatorDelegate ( ) { org.springframework.jndi.JndiLocatorDelegate org.springframework.jndi.JndiLocatorDelegate = new org.springframework.jndi.JndiLocatorDelegate ( ) ; org.springframework.jndi.JndiLocatorDelegate . setResourceRef ( true ) ; return org.springframework.jndi.JndiLocatorDelegate ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ) { if ( boolean ) { return false ; } try { new javax.naming.InitialContext ( ) . java.util.Hashtable<?,?> ( ) ; return true ; } catch ( java.lang.Throwable java.lang.Throwable ) { return false ; } }  <METHOD_END>
