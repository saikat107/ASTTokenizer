<METHOD_START> @ java.lang.Override public void void ( ApplicationStartingEvent org.springframework.boot.liquibase.ApplicationStartingEvent ) { if ( ClassUtils . isPresent ( STRING , null ) ) { new org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener.LiquibasePresent ( ) . void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { CustomResolverServiceLocator org.springframework.boot.liquibase.CustomResolverServiceLocator = new CustomResolverServiceLocator ( new SpringPackageScanClassResolver ( org.springframework.boot.liquibase.Log ) ) ; org.springframework.boot.liquibase.CustomResolverServiceLocator . addPackageToScan ( CommonsLoggingLiquibaseLogger .class . java.lang.Package ( ) . java.lang.String ( ) ) ; ServiceLocator . setInstance ( org.springframework.boot.liquibase.CustomResolverServiceLocator ) ; liquibase . logging . LogFactory . reset ( ) ; }  <METHOD_END>
