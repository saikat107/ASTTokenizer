<METHOD_START> public void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { super( java.util.Map<java.lang.String,java.lang.Object> , ( java.util.Map<java.lang.String,java.lang.Object> != null ? ( java.util.UUID ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( MessageHeaders . ID ) : null ) , ( java.util.Map<java.lang.String,java.lang.Object> != null ? ( java.lang.Long ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( MessageHeaders . TIMESTAMP ) : null ) ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { return super. getRawHeaders ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.Map<? extends java.lang.String,? extends java.lang.Object> < ? extends java.lang.String , ? extends java.lang.Object > java.util.Map<? extends java.lang.String,? extends java.lang.Object> ) { super. getRawHeaders ( ) . putAll ( java.util.Map<,> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { return super. getRawHeaders ( ) . put ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. getRawHeaders ( ) . clear ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { return super. getRawHeaders ( ) . remove ( java.lang.Object ) ; }  <METHOD_END>
