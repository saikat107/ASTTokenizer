<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.integration.enablecomponentscan.ApplicationContext . getBeanNamesForType ( IntegrationFlowTests . IntegrationFlowTests .class ) , not ( emptyArray ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AnnotationMetadata org.springframework.integration.enablecomponentscan.AnnotationMetadata , BeanDefinitionRegistry org.springframework.integration.enablecomponentscan.BeanDefinitionRegistry ) { super. registerBeanDefinitions ( new StandardAnnotationMetadata ( org.springframework.integration.enablecomponentscan.EnableComponentScanTests.CustomIntegrationComponentScanRegistrar.IntegrationComponentScanConfiguration .class , true ) , org.springframework.integration.enablecomponentscan.BeanDefinitionRegistry ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( AnnotationMetadata org.springframework.integration.enablecomponentscan.AnnotationMetadata , BeanDefinitionRegistry org.springframework.integration.enablecomponentscan.BeanDefinitionRegistry ) { return java.util.Collections . java.util.Set ( ClassUtils . getPackageName ( IntegrationFlowTests . IntegrationFlowTests .class ) ) ; }  <METHOD_END>
