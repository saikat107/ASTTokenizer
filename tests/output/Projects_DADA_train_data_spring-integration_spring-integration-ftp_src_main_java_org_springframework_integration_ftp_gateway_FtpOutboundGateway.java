<METHOD_START> public void ( SessionFactory < FTPFile > org.springframework.integration.ftp.gateway.SessionFactory<org.springframework.integration.ftp.gateway.FTPFile> , MessageSessionCallback < FTPFile , ? > org.springframework.integration.ftp.gateway.MessageSessionCallback<org.springframework.integration.ftp.gateway.FTPFile,?> ) { this( new FtpRemoteFileTemplate ( org.springframework.integration.ftp.gateway.SessionFactory<org.springframework.integration.ftp.gateway.FTPFile> ) , org.springframework.integration.ftp.gateway.MessageSessionCallback<org.springframework.integration.ftp.gateway.FTPFile,> ); ( ( FtpRemoteFileTemplate ) this . remoteFileTemplate ) . setExistsMode ( FtpRemoteFileTemplate . ExistsMode . NLST ) ; }  <METHOD_END>
<METHOD_START> public void ( RemoteFileTemplate < FTPFile > org.springframework.integration.ftp.gateway.RemoteFileTemplate<org.springframework.integration.ftp.gateway.FTPFile> , MessageSessionCallback < FTPFile , ? > org.springframework.integration.ftp.gateway.MessageSessionCallback<org.springframework.integration.ftp.gateway.FTPFile,?> ) { super( org.springframework.integration.ftp.gateway.RemoteFileTemplate<org.springframework.integration.ftp.gateway.FTPFile> , org.springframework.integration.ftp.gateway.MessageSessionCallback<org.springframework.integration.ftp.gateway.FTPFile,> ); }  <METHOD_END>
<METHOD_START> public void ( SessionFactory < FTPFile > org.springframework.integration.ftp.gateway.SessionFactory<org.springframework.integration.ftp.gateway.FTPFile> , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this( new FtpRemoteFileTemplate ( org.springframework.integration.ftp.gateway.SessionFactory<org.springframework.integration.ftp.gateway.FTPFile> ) , java.lang.String , java.lang.String ); ( ( FtpRemoteFileTemplate ) this . remoteFileTemplate ) . setExistsMode ( FtpRemoteFileTemplate . ExistsMode . NLST ) ; }  <METHOD_END>
<METHOD_START> public void ( RemoteFileTemplate < FTPFile > org.springframework.integration.ftp.gateway.RemoteFileTemplate<org.springframework.integration.ftp.gateway.FTPFile> , java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( org.springframework.integration.ftp.gateway.RemoteFileTemplate<org.springframework.integration.ftp.gateway.FTPFile> , java.lang.String , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( SessionFactory < FTPFile > org.springframework.integration.ftp.gateway.SessionFactory<org.springframework.integration.ftp.gateway.FTPFile> , java.lang.String java.lang.String ) { this( org.springframework.integration.ftp.gateway.SessionFactory<org.springframework.integration.ftp.gateway.FTPFile> , java.lang.String , null ); }  <METHOD_END>
<METHOD_START> public void ( RemoteFileTemplate < FTPFile > org.springframework.integration.ftp.gateway.RemoteFileTemplate<org.springframework.integration.ftp.gateway.FTPFile> , java.lang.String java.lang.String ) { this( org.springframework.integration.ftp.gateway.RemoteFileTemplate<org.springframework.integration.ftp.gateway.FTPFile> , java.lang.String , null ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( FTPFile org.springframework.integration.ftp.gateway.FTPFile ) { return org.springframework.integration.ftp.gateway.FTPFile . isDirectory ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( FTPFile org.springframework.integration.ftp.gateway.FTPFile ) { return org.springframework.integration.ftp.gateway.FTPFile . isSymbolicLink ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( FTPFile org.springframework.integration.ftp.gateway.FTPFile ) { return org.springframework.integration.ftp.gateway.FTPFile . getName ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( AbstractFileInfo < FTPFile > org.springframework.integration.ftp.gateway.AbstractFileInfo<org.springframework.integration.ftp.gateway.FTPFile> ) { return org.springframework.integration.ftp.gateway.AbstractFileInfo<org.springframework.integration.ftp.gateway.FTPFile> . getFilename ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected long long ( FTPFile org.springframework.integration.ftp.gateway.FTPFile ) { return org.springframework.integration.ftp.gateway.FTPFile . getTimestamp ( ) . getTimeInMillis ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<org.springframework.integration.ftp.gateway.AbstractFileInfo<org.springframework.integration.ftp.gateway.FTPFile>> < AbstractFileInfo < FTPFile > > java.util.List<org.springframework.integration.ftp.gateway.AbstractFileInfo<org.springframework.integration.ftp.gateway.FTPFile>> ( java.util.Collection<org.springframework.integration.ftp.gateway.FTPFile> < FTPFile > java.util.Collection<org.springframework.integration.ftp.gateway.FTPFile> ) { java.util.List<org.springframework.integration.ftp.gateway.AbstractFileInfo<org.springframework.integration.ftp.gateway.FTPFile>> < AbstractFileInfo < FTPFile > > java.util.List<org.springframework.integration.ftp.gateway.AbstractFileInfo<org.springframework.integration.ftp.gateway.FTPFile>> = new java.util.ArrayList<org.springframework.integration.ftp.gateway.AbstractFileInfo<org.springframework.integration.ftp.gateway.FTPFile>> < AbstractFileInfo < FTPFile > > ( ) ; for ( FTPFile org.springframework.integration.ftp.gateway.FTPFile : java.util.Collection<org.springframework.integration.ftp.gateway.FTPFile> ) { java.util.List<org.springframework.integration.ftp.gateway.AbstractFileInfo<org.springframework.integration.ftp.gateway.FTPFile>> . add ( new FtpFileInfo ( org.springframework.integration.ftp.gateway.FTPFile ) ) ; } return java.util.List<org.springframework.integration.ftp.gateway.AbstractFileInfo<org.springframework.integration.ftp.gateway.FTPFile>> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.ftp.gateway.FTPFile org.springframework.integration.ftp.gateway.FTPFile ( FTPFile org.springframework.integration.ftp.gateway.FTPFile , java.lang.String java.lang.String ) { org.springframework.integration.ftp.gateway.FTPFile . setName ( java.lang.String + org.springframework.integration.ftp.gateway.FTPFile . getName ( ) ) ; return org.springframework.integration.ftp.gateway.FTPFile ; }  <METHOD_END>
