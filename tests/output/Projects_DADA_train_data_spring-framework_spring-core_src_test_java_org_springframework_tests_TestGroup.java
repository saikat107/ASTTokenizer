<METHOD_START> public static java.util.Set<org.springframework.tests.TestGroup> < org.springframework.tests.TestGroup > java.util.Set<org.springframework.tests.TestGroup> ( java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { if ( ! StringUtils . hasText ( java.lang.String ) ) { return java.util.Collections . java.util.Set<org.springframework.tests.TestGroup> ( ) ; } java.lang.String java.lang.String = java.lang.String ; java.lang.String = java.lang.String . java.lang.String ( ) ; if ( STRING . boolean ( java.lang.String ) ) { return java.util.EnumSet . java.util.EnumSet<org.springframework.tests.TestGroup> ( org.springframework.tests.TestGroup .class ) ; } if ( java.lang.String . java.lang.String ( ) . boolean ( STRING ) ) { java.util.Set<org.springframework.tests.TestGroup> < org.springframework.tests.TestGroup > java.util.Set<org.springframework.tests.TestGroup> = java.util.EnumSet . java.util.EnumSet<org.springframework.tests.TestGroup> ( org.springframework.tests.TestGroup .class ) ; java.util.Set<org.springframework.tests.TestGroup> . boolean ( java.util.Set<org.springframework.tests.TestGroup> ( java.lang.String , java.lang.String . java.lang.String ( NUMBER ) ) ) ; return java.util.Set<org.springframework.tests.TestGroup> ; } return java.util.Set<org.springframework.tests.TestGroup> ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private static java.util.Set<org.springframework.tests.TestGroup> < org.springframework.tests.TestGroup > java.util.Set<org.springframework.tests.TestGroup> ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { java.util.Set<org.springframework.tests.TestGroup> < org.springframework.tests.TestGroup > java.util.Set<org.springframework.tests.TestGroup> = new java.util.HashSet<org.springframework.tests.TestGroup> <> ( ) ; for ( java.lang.String java.lang.String : java.lang.String . java.lang.String[] ( STRING ) ) { try { java.util.Set<org.springframework.tests.TestGroup> . boolean ( org.springframework.tests.TestGroup ( java.lang.String . java.lang.String ( ) . java.lang.String ( ) ) ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { throw new java.lang.IllegalArgumentException ( java.lang.String ( STRING + STRING , java.lang.String . java.lang.String ( ) , java.lang.String , StringUtils . arrayToCommaDelimitedString ( org.springframework.tests.TestGroup . org.springframework.tests.TestGroup[] ( ) ) ) ) ; } } return java.util.Set<org.springframework.tests.TestGroup> ; }  <METHOD_END>
