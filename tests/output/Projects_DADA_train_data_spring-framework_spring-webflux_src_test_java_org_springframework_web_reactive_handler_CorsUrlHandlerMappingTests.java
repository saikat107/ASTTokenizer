<METHOD_START> @ Before public void void ( ) { this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping = new AbstractUrlHandlerMapping ( ) {} ; this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping . setUseTrailingSlashMatch ( true ) ; this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping . registerHandler ( STRING , this . java.lang.Object ) ; this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping . registerHandler ( STRING , this . org.springframework.web.reactive.handler.CorsUrlHandlerMappingTests.CorsAwareHandler ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; ServerWebExchange org.springframework.web.reactive.handler.ServerWebExchange = org.springframework.web.reactive.handler.ServerWebExchange ( HttpMethod . GET , STRING , java.lang.String ) ; java.lang.Object java.lang.Object = this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping . getHandler ( org.springframework.web.reactive.handler.ServerWebExchange ) . block ( ) ; assertNotNull ( java.lang.Object ) ; assertSame ( this . java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; ServerWebExchange org.springframework.web.reactive.handler.ServerWebExchange = org.springframework.web.reactive.handler.ServerWebExchange ( HttpMethod . OPTIONS , STRING , java.lang.String ) ; java.lang.Object java.lang.Object = this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping . getHandler ( org.springframework.web.reactive.handler.ServerWebExchange ) . block ( ) ; assertNotNull ( java.lang.Object ) ; assertNotSame ( this . java.lang.Object , java.lang.Object ) ; assertNull ( org.springframework.web.reactive.handler.ServerWebExchange . getResponse ( ) . getHeaders ( ) . getFirst ( HttpHeaders . ACCESS_CONTROL_ALLOW_ORIGIN ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; ServerWebExchange org.springframework.web.reactive.handler.ServerWebExchange = org.springframework.web.reactive.handler.ServerWebExchange ( HttpMethod . GET , STRING , java.lang.String ) ; java.lang.Object java.lang.Object = this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping . getHandler ( org.springframework.web.reactive.handler.ServerWebExchange ) . block ( ) ; assertNotNull ( java.lang.Object ) ; assertSame ( this . org.springframework.web.reactive.handler.CorsUrlHandlerMappingTests.CorsAwareHandler , java.lang.Object ) ; assertEquals ( STRING , org.springframework.web.reactive.handler.ServerWebExchange . getResponse ( ) . getHeaders ( ) . getFirst ( HttpHeaders . ACCESS_CONTROL_ALLOW_ORIGIN ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; ServerWebExchange org.springframework.web.reactive.handler.ServerWebExchange = org.springframework.web.reactive.handler.ServerWebExchange ( HttpMethod . OPTIONS , STRING , java.lang.String ) ; java.lang.Object java.lang.Object = this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping . getHandler ( org.springframework.web.reactive.handler.ServerWebExchange ) . block ( ) ; assertNotNull ( java.lang.Object ) ; assertNotSame ( this . org.springframework.web.reactive.handler.CorsUrlHandlerMappingTests.CorsAwareHandler , java.lang.Object ) ; assertEquals ( STRING , org.springframework.web.reactive.handler.ServerWebExchange . getResponse ( ) . getHeaders ( ) . getFirst ( HttpHeaders . ACCESS_CONTROL_ALLOW_ORIGIN ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { CorsConfiguration org.springframework.web.reactive.handler.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.reactive.handler.CorsConfiguration . addAllowedOrigin ( STRING ) ; this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping . setCorsConfigurations ( java.util.Collections . java.util.Map ( STRING , org.springframework.web.reactive.handler.CorsConfiguration ) ) ; java.lang.String java.lang.String = STRING ; ServerWebExchange org.springframework.web.reactive.handler.ServerWebExchange = org.springframework.web.reactive.handler.ServerWebExchange ( HttpMethod . GET , STRING , java.lang.String ) ; java.lang.Object java.lang.Object = this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping . getHandler ( org.springframework.web.reactive.handler.ServerWebExchange ) . block ( ) ; assertNotNull ( java.lang.Object ) ; assertSame ( this . java.lang.Object , java.lang.Object ) ; assertEquals ( STRING , org.springframework.web.reactive.handler.ServerWebExchange . getResponse ( ) . getHeaders ( ) . getFirst ( HttpHeaders . ACCESS_CONTROL_ALLOW_ORIGIN ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { CorsConfiguration org.springframework.web.reactive.handler.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.reactive.handler.CorsConfiguration . addAllowedOrigin ( STRING ) ; this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping . setCorsConfigurations ( java.util.Collections . java.util.Map ( STRING , org.springframework.web.reactive.handler.CorsConfiguration ) ) ; java.lang.String java.lang.String = STRING ; ServerWebExchange org.springframework.web.reactive.handler.ServerWebExchange = org.springframework.web.reactive.handler.ServerWebExchange ( HttpMethod . OPTIONS , STRING , java.lang.String ) ; java.lang.Object java.lang.Object = this . org.springframework.web.reactive.handler.AbstractUrlHandlerMapping . getHandler ( org.springframework.web.reactive.handler.ServerWebExchange ) . block ( ) ; assertNotNull ( java.lang.Object ) ; assertNotSame ( this . java.lang.Object , java.lang.Object ) ; assertEquals ( STRING , org.springframework.web.reactive.handler.ServerWebExchange . getResponse ( ) . getHeaders ( ) . getFirst ( HttpHeaders . ACCESS_CONTROL_ALLOW_ORIGIN ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.reactive.handler.ServerWebExchange org.springframework.web.reactive.handler.ServerWebExchange ( HttpMethod org.springframework.web.reactive.handler.HttpMethod , java.lang.String java.lang.String , java.lang.String java.lang.String ) { return MockServerHttpRequest . method ( org.springframework.web.reactive.handler.HttpMethod , STRING + java.lang.String ) . header ( STRING , java.lang.String ) . header ( HttpHeaders . ACCESS_CONTROL_REQUEST_METHOD , STRING ) . toExchange ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.reactive.handler.CorsConfiguration org.springframework.web.reactive.handler.CorsConfiguration ( ServerWebExchange org.springframework.web.reactive.handler.ServerWebExchange ) { CorsConfiguration org.springframework.web.reactive.handler.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.reactive.handler.CorsConfiguration . addAllowedOrigin ( STRING ) ; return org.springframework.web.reactive.handler.CorsConfiguration ; }  <METHOD_END>
