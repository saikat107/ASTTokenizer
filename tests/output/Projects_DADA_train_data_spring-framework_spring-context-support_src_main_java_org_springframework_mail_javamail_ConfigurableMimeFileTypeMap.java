<METHOD_START> public void void ( Resource org.springframework.mail.javamail.Resource ) { this . org.springframework.mail.javamail.Resource = org.springframework.mail.javamail.Resource ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { javax.activation.FileTypeMap ( ) ; }  <METHOD_END>
<METHOD_START> protected final javax.activation.FileTypeMap javax.activation.FileTypeMap ( ) { if ( this . javax.activation.FileTypeMap == null ) { try { this . javax.activation.FileTypeMap = javax.activation.FileTypeMap ( this . org.springframework.mail.javamail.Resource , this . java.lang.String[] ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalStateException ( STRING + this . org.springframework.mail.javamail.Resource , java.io.IOException ) ; } } return this . javax.activation.FileTypeMap ; }  <METHOD_END>
<METHOD_START> protected javax.activation.FileTypeMap javax.activation.FileTypeMap ( Resource org.springframework.mail.javamail.Resource , java.lang.String [] java.lang.String[] ) throws java.io.IOException { javax.activation.MimetypesFileTypeMap javax.activation.MimetypesFileTypeMap = null ; if ( org.springframework.mail.javamail.Resource != null ) { java.io.InputStream java.io.InputStream = org.springframework.mail.javamail.Resource . getInputStream ( ) ; try { javax.activation.MimetypesFileTypeMap = new javax.activation.MimetypesFileTypeMap ( java.io.InputStream ) ; } finally { java.io.InputStream . void ( ) ; } } else { javax.activation.MimetypesFileTypeMap = new javax.activation.MimetypesFileTypeMap ( ) ; } if ( java.lang.String[] != null ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { javax.activation.MimetypesFileTypeMap . void ( java.lang.String ) ; } } return javax.activation.MimetypesFileTypeMap ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.io.File java.io.File ) { return javax.activation.FileTypeMap ( ) . java.lang.String ( java.io.File ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return javax.activation.FileTypeMap ( ) . java.lang.String ( java.lang.String ) ; }  <METHOD_END>
