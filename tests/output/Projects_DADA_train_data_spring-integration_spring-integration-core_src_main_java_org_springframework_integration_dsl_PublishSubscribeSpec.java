<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> void ( java.util.concurrent.Executor java.util.concurrent.Executor ) { super( java.util.concurrent.Executor ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.dsl.PublishSubscribeSpec org.springframework.integration.dsl.PublishSubscribeSpec ( java.lang.String java.lang.String ) { return super. id ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.dsl.PublishSubscribeSpec org.springframework.integration.dsl.PublishSubscribeSpec ( IntegrationFlow org.springframework.integration.dsl.IntegrationFlow ) { IntegrationFlowBuilder org.springframework.integration.dsl.IntegrationFlowBuilder = IntegrationFlows . from ( this . channel ) ; org.springframework.integration.dsl.IntegrationFlow . configure ( org.springframework.integration.dsl.IntegrationFlowBuilder ) ; this . java.util.List<java.lang.Object> . boolean ( org.springframework.integration.dsl.IntegrationFlowBuilder . get ( ) ) ; return _this ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( ) ; java.util.List<java.lang.Object> . boolean ( super. getComponentsToRegister ( ) ) ; java.util.List<java.lang.Object> . boolean ( this . java.util.List<java.lang.Object> ) ; return java.util.List<java.lang.Object> ; }  <METHOD_END>
