<METHOD_START> void ( ) {    }  <METHOD_END>
<METHOD_START> void ( final int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> void ( final int int , final org.springframework.asm.Item org.springframework.asm.Item ) { this . int = int ; int = org.springframework.asm.Item . int ; int = org.springframework.asm.Item . int ; long = org.springframework.asm.Item . long ; java.lang.String = org.springframework.asm.Item . java.lang.String ; java.lang.String = org.springframework.asm.Item . java.lang.String ; java.lang.String = org.springframework.asm.Item . java.lang.String ; int = org.springframework.asm.Item . int ; }  <METHOD_END>
<METHOD_START> void void ( final int int ) { this . int = ClassWriter . INT ; this . int = int ; this . int = NUMBER & ( int + int ) ; }  <METHOD_END>
<METHOD_START> void void ( final long long ) { this . int = ClassWriter . LONG ; this . long = long ; this . int = NUMBER & ( int + ( int ) long ) ; }  <METHOD_END>
<METHOD_START> void void ( final float float ) { this . int = ClassWriter . FLOAT ; this . int = java.lang.Float . int ( float ) ; this . int = NUMBER & ( int + ( int ) float ) ; }  <METHOD_END>
<METHOD_START> void void ( final double double ) { this . int = ClassWriter . DOUBLE ; this . long = java.lang.Double . long ( double ) ; this . int = NUMBER & ( int + ( int ) double ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) void void ( final int int , final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { this . int = int ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; switch ( int ) { case ClassWriter . CLASS : this . int = NUMBER ; case ClassWriter . UTF8 : case ClassWriter . STR : case ClassWriter . MTYPE : case ClassWriter . TYPE_NORMAL : int = NUMBER & ( int + java.lang.String . int ( ) ) ; return; case ClassWriter . NAME_TYPE : { int = NUMBER & ( int + java.lang.String . int ( ) * java.lang.String . int ( ) ) ; return; } default: int = NUMBER & ( int + java.lang.String . int ( ) * java.lang.String . int ( ) * java.lang.String . int ( ) ) ; } }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , int int ) { this . int = ClassWriter . INDY ; this . long = int ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . int = NUMBER & ( ClassWriter . INDY + int * java.lang.String . int ( ) * java.lang.String . int ( ) ) ; }  <METHOD_END>
<METHOD_START> void void ( int int , int int ) { this . int = ClassWriter . BSM ; this . int = int ; this . int = int ; }  <METHOD_END>
<METHOD_START> boolean boolean ( final org.springframework.asm.Item org.springframework.asm.Item ) { switch ( int ) { case ClassWriter . UTF8 : case ClassWriter . STR : case ClassWriter . CLASS : case ClassWriter . MTYPE : case ClassWriter . TYPE_NORMAL : return org.springframework.asm.Item . java.lang.String . boolean ( java.lang.String ) ; case ClassWriter . TYPE_MERGED : case ClassWriter . LONG : case ClassWriter . DOUBLE : return org.springframework.asm.Item . long == long ; case ClassWriter . INT : case ClassWriter . FLOAT : return org.springframework.asm.Item . int == int ; case ClassWriter . TYPE_UNINIT : return org.springframework.asm.Item . int == int && org.springframework.asm.Item . java.lang.String . boolean ( java.lang.String ) ; case ClassWriter . NAME_TYPE : return org.springframework.asm.Item . java.lang.String . boolean ( java.lang.String ) && org.springframework.asm.Item . java.lang.String . boolean ( java.lang.String ) ; case ClassWriter . INDY : { return org.springframework.asm.Item . long == long && org.springframework.asm.Item . java.lang.String . boolean ( java.lang.String ) && org.springframework.asm.Item . java.lang.String . boolean ( java.lang.String ) ; } default: return org.springframework.asm.Item . java.lang.String . boolean ( java.lang.String ) && org.springframework.asm.Item . java.lang.String . boolean ( java.lang.String ) && org.springframework.asm.Item . java.lang.String . boolean ( java.lang.String ) ; } }  <METHOD_END>
