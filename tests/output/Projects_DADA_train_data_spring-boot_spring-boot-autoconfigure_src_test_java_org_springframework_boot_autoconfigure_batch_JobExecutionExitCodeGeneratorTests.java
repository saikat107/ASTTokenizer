<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.autoconfigure.batch.JobExecutionExitCodeGenerator . onApplicationEvent ( new JobExecutionEvent ( new JobExecution ( NUMBER ) ) ) ; assertThat ( this . org.springframework.boot.autoconfigure.batch.JobExecutionExitCodeGenerator . getExitCode ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { JobExecution org.springframework.boot.autoconfigure.batch.JobExecution = new JobExecution ( NUMBER ) ; org.springframework.boot.autoconfigure.batch.JobExecution . setStatus ( BatchStatus . COMPLETED ) ; this . org.springframework.boot.autoconfigure.batch.JobExecutionExitCodeGenerator . onApplicationEvent ( new JobExecutionEvent ( org.springframework.boot.autoconfigure.batch.JobExecution ) ) ; assertThat ( this . org.springframework.boot.autoconfigure.batch.JobExecutionExitCodeGenerator . getExitCode ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { JobExecution org.springframework.boot.autoconfigure.batch.JobExecution = new JobExecution ( NUMBER ) ; org.springframework.boot.autoconfigure.batch.JobExecution . setStatus ( BatchStatus . FAILED ) ; this . org.springframework.boot.autoconfigure.batch.JobExecutionExitCodeGenerator . onApplicationEvent ( new JobExecutionEvent ( org.springframework.boot.autoconfigure.batch.JobExecution ) ) ; assertThat ( this . org.springframework.boot.autoconfigure.batch.JobExecutionExitCodeGenerator . getExitCode ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
