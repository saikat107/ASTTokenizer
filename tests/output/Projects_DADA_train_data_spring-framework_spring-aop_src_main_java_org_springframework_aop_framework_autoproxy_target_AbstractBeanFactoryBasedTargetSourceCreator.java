<METHOD_START> @ java.lang.Override public final void void ( BeanFactory org.springframework.aop.framework.autoproxy.target.BeanFactory ) { if ( ! ( org.springframework.aop.framework.autoproxy.target.BeanFactory instanceof ConfigurableBeanFactory ) ) { throw new java.lang.IllegalStateException ( STRING + STRING + org.springframework.aop.framework.autoproxy.target.BeanFactory . getClass ( ) ) ; } this . org.springframework.aop.framework.autoproxy.target.ConfigurableBeanFactory = ( ConfigurableBeanFactory ) org.springframework.aop.framework.autoproxy.target.BeanFactory ; }  <METHOD_END>
<METHOD_START> protected final org.springframework.aop.framework.autoproxy.target.BeanFactory org.springframework.aop.framework.autoproxy.target.BeanFactory ( ) { return this . org.springframework.aop.framework.autoproxy.target.ConfigurableBeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final org.springframework.aop.framework.autoproxy.target.TargetSource org.springframework.aop.framework.autoproxy.target.TargetSource ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { AbstractBeanFactoryBasedTargetSource org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSource = org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSource ( java.lang.Class<> , java.lang.String ) ; if ( org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSource == null ) { return null ; } if ( org.springframework.aop.framework.autoproxy.target.Log . isDebugEnabled ( ) ) { org.springframework.aop.framework.autoproxy.target.Log . debug ( STRING + org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSource ) ; } DefaultListableBeanFactory org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory = org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory ( java.lang.String ) ; BeanDefinition org.springframework.aop.framework.autoproxy.target.BeanDefinition = this . org.springframework.aop.framework.autoproxy.target.ConfigurableBeanFactory . getMergedBeanDefinition ( java.lang.String ) ; GenericBeanDefinition org.springframework.aop.framework.autoproxy.target.GenericBeanDefinition = new GenericBeanDefinition ( org.springframework.aop.framework.autoproxy.target.BeanDefinition ) ; if ( boolean ( ) ) { org.springframework.aop.framework.autoproxy.target.GenericBeanDefinition . setScope ( BeanDefinition . SCOPE_PROTOTYPE ) ; } org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory . registerBeanDefinition ( java.lang.String , org.springframework.aop.framework.autoproxy.target.GenericBeanDefinition ) ; org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSource . setTargetBeanName ( java.lang.String ) ; org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSource . setBeanFactory ( org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory ) ; return org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSource ; }  <METHOD_END>
<METHOD_START> protected org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory ( java.lang.String java.lang.String ) { synchronized ( this . java.util.Map<java.lang.String,org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory> ) { DefaultListableBeanFactory org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory = this . java.util.Map<java.lang.String,org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory> . get ( java.lang.String ) ; if ( org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory == null ) { org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory = org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory ( this . org.springframework.aop.framework.autoproxy.target.ConfigurableBeanFactory ) ; this . java.util.Map<java.lang.String,org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory> . put ( java.lang.String , org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory ) ; } return org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory ( ConfigurableBeanFactory org.springframework.aop.framework.autoproxy.target.ConfigurableBeanFactory ) { DefaultListableBeanFactory org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory = new DefaultListableBeanFactory ( org.springframework.aop.framework.autoproxy.target.ConfigurableBeanFactory ) ; org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory . copyConfigurationFrom ( org.springframework.aop.framework.autoproxy.target.ConfigurableBeanFactory ) ; for ( java.util.Iterator<org.springframework.aop.framework.autoproxy.target.BeanPostProcessor> < BeanPostProcessor > java.util.Iterator<org.springframework.aop.framework.autoproxy.target.BeanPostProcessor> = org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory . getBeanPostProcessors ( ) . iterator ( ) ; java.util.Iterator<org.springframework.aop.framework.autoproxy.target.BeanPostProcessor> . hasNext ( ) ;) { if ( java.util.Iterator<org.springframework.aop.framework.autoproxy.target.BeanPostProcessor> . next ( ) instanceof AopInfrastructureBean ) { java.util.Iterator<org.springframework.aop.framework.autoproxy.target.BeanPostProcessor> . remove ( ) ; } } return org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { synchronized ( this . java.util.Map<java.lang.String,org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory> ) { for ( DefaultListableBeanFactory org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory : this . java.util.Map<java.lang.String,org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory> . values ( ) ) { org.springframework.aop.framework.autoproxy.target.DefaultListableBeanFactory . destroySingletons ( ) ; } } }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSource org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSource ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String );  <METHOD_END>
