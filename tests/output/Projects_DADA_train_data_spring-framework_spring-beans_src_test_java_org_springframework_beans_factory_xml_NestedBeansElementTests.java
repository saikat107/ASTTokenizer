<METHOD_START> @ Test public void void ( ) { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) . loadBeanDefinitions ( org.springframework.beans.factory.xml.Resource ) ; java.lang.Object java.lang.Object = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING ) ; assertThat ( java.lang.Object , instanceOf ( java.lang.String .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ConfigurableEnvironment org.springframework.beans.factory.xml.ConfigurableEnvironment = new StandardEnvironment ( ) ; org.springframework.beans.factory.xml.ConfigurableEnvironment . setActiveProfiles ( STRING ) ; DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; XmlBeanDefinitionReader org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . setEnvironment ( org.springframework.beans.factory.xml.ConfigurableEnvironment ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . loadBeanDefinitions ( org.springframework.beans.factory.xml.Resource ) ; org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING ) ; java.lang.Object java.lang.Object = org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING ) ; assertThat ( java.lang.Object , instanceOf ( java.lang.Integer .class ) ) ; org.springframework.beans.factory.xml.DefaultListableBeanFactory . getBean ( STRING ) ; }  <METHOD_END>
