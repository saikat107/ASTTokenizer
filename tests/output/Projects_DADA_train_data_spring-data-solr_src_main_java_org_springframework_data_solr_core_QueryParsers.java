<METHOD_START> public void ( ) { this . java.util.List<org.springframework.data.solr.core.QueryParsers.QueryParserPair> = new java.util.ArrayList<org.springframework.data.solr.core.QueryParsers.QueryParserPair> <> ( NUMBER ) ; java.util.List<org.springframework.data.solr.core.QueryParsers.QueryParserPair> . boolean ( new org.springframework.data.solr.core.QueryParsers.QueryParserPair ( TermsQuery .class , new TermsQueryParser ( ) ) ) ; java.util.List<org.springframework.data.solr.core.QueryParsers.QueryParserPair> . boolean ( new org.springframework.data.solr.core.QueryParsers.QueryParserPair ( FacetQuery .class , org.springframework.data.solr.core.QueryParser ) ) ; java.util.List<org.springframework.data.solr.core.QueryParsers.QueryParserPair> . boolean ( new org.springframework.data.solr.core.QueryParsers.QueryParserPair ( HighlightQuery .class , org.springframework.data.solr.core.QueryParser ) ) ; java.util.List<org.springframework.data.solr.core.QueryParsers.QueryParserPair> . boolean ( new org.springframework.data.solr.core.QueryParsers.QueryParserPair ( Query .class , org.springframework.data.solr.core.QueryParser ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.QueryParser org.springframework.data.solr.core.QueryParser ( java.lang.Class<? extends org.springframework.data.solr.core.SolrDataQuery> < ? extends SolrDataQuery > java.lang.Class<? extends org.springframework.data.solr.core.SolrDataQuery> ) { QueryParser org.springframework.data.solr.core.QueryParser = java.util.Map<java.lang.Class<?>,org.springframework.data.solr.core.QueryParser> . get ( java.lang.Class<> ) ; if ( org.springframework.data.solr.core.QueryParser == null ) { for ( org.springframework.data.solr.core.QueryParsers.QueryParserPair org.springframework.data.solr.core.QueryParsers.QueryParserPair : java.util.List<org.springframework.data.solr.core.QueryParsers.QueryParserPair> ) { if ( org.springframework.data.solr.core.QueryParsers.QueryParserPair . boolean ( java.lang.Class<> ) ) { this . java.util.Map<java.lang.Class<?>,org.springframework.data.solr.core.QueryParser> . put ( java.lang.Class<> , org.springframework.data.solr.core.QueryParsers.QueryParserPair . org.springframework.data.solr.core.QueryParser ( ) ) ; org.springframework.data.solr.core.QueryParser = org.springframework.data.solr.core.QueryParsers.QueryParserPair . org.springframework.data.solr.core.QueryParser ( ) ; break; } } } return org.springframework.data.solr.core.QueryParser != null ? org.springframework.data.solr.core.QueryParser : org.springframework.data.solr.core.QueryParser ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<? extends org.springframework.data.solr.core.SolrDataQuery> < ? extends SolrDataQuery > java.lang.Class<? extends org.springframework.data.solr.core.SolrDataQuery> , QueryParser org.springframework.data.solr.core.QueryParser ) { Assert . notNull ( org.springframework.data.solr.core.QueryParser , STRING ) ; java.util.List<org.springframework.data.solr.core.QueryParsers.QueryParserPair> . void ( NUMBER , new org.springframework.data.solr.core.QueryParsers.QueryParserPair ( java.lang.Class<> , org.springframework.data.solr.core.QueryParser ) ) ; java.util.Map<java.lang.Class<?>,org.springframework.data.solr.core.QueryParser> . clear ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , QueryParser org.springframework.data.solr.core.QueryParser ) { this . org.springframework.data.solr.core.QueryParser = org.springframework.data.solr.core.QueryParser ; this . java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.solr.core.QueryParser org.springframework.data.solr.core.QueryParser ( ) { return this . org.springframework.data.solr.core.QueryParser ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return ClassUtils . isAssignable ( this . java.lang.Class<> , java.lang.Class<> ) ; }  <METHOD_END>
