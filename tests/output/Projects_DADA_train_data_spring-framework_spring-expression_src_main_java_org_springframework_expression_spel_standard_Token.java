<METHOD_START> void ( TokenKind org.springframework.expression.spel.standard.TokenKind , int int , int int ) { this . org.springframework.expression.spel.standard.TokenKind = org.springframework.expression.spel.standard.TokenKind ; this . int = int ; this . int = int ; }  <METHOD_END>
<METHOD_START> void ( TokenKind org.springframework.expression.spel.standard.TokenKind , char [] char[] , int int , int int ) { this( org.springframework.expression.spel.standard.TokenKind , int , int ); this . java.lang.String = new java.lang.String ( char[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.expression.spel.standard.TokenKind org.springframework.expression.spel.standard.TokenKind ( ) { return this . org.springframework.expression.spel.standard.TokenKind ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . org.springframework.expression.spel.standard.TokenKind . toString ( ) ) ; if ( this . org.springframework.expression.spel.standard.TokenKind . hasPayload ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.String ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . int ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . int ) . java.lang.StringBuilder ( STRING ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ( this . org.springframework.expression.spel.standard.TokenKind == TokenKind . IDENTIFIER ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ( this . org.springframework.expression.spel.standard.TokenKind == TokenKind . GT || this . org.springframework.expression.spel.standard.TokenKind == TokenKind . GE || this . org.springframework.expression.spel.standard.TokenKind == TokenKind . LT || this . org.springframework.expression.spel.standard.TokenKind == TokenKind . LE || this . org.springframework.expression.spel.standard.TokenKind == TokenKind . EQ || this . org.springframework.expression.spel.standard.TokenKind == TokenKind . NE ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.expression.spel.standard.Token org.springframework.expression.spel.standard.Token ( ) { return new org.springframework.expression.spel.standard.Token ( TokenKind . INSTANCEOF , this . int , this . int ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.expression.spel.standard.Token org.springframework.expression.spel.standard.Token ( ) { return new org.springframework.expression.spel.standard.Token ( TokenKind . MATCHES , this . int , this . int ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.expression.spel.standard.Token org.springframework.expression.spel.standard.Token ( ) { return new org.springframework.expression.spel.standard.Token ( TokenKind . BETWEEN , this . int , this . int ) ; }  <METHOD_END>
