<METHOD_START> public void ( final Cache org.springframework.data.gemfire.wan.Cache ) { this( org.springframework.data.gemfire.wan.Cache , null ); }  <METHOD_END>
<METHOD_START> public void ( final Cache org.springframework.data.gemfire.wan.Cache , final AsyncEventListener org.springframework.data.gemfire.wan.AsyncEventListener ) { super( org.springframework.data.gemfire.wan.Cache ); void ( org.springframework.data.gemfire.wan.AsyncEventListener ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.wan.AsyncEventQueue org.springframework.data.gemfire.wan.AsyncEventQueue ( ) java.lang.Exception { return org.springframework.data.gemfire.wan.AsyncEventQueue ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return AsyncEventQueue .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { Assert . notNull ( this . org.springframework.data.gemfire.wan.AsyncEventListener , STRING ) ; AsyncEventQueueFactory org.springframework.data.gemfire.wan.AsyncEventQueueFactory = ( this . factory != null ? ( AsyncEventQueueFactory ) factory : cache . createAsyncEventQueueFactory ( ) ) ; if ( java.lang.Integer != null ) { org.springframework.data.gemfire.wan.AsyncEventQueueFactory . setBatchSize ( java.lang.Integer ) ; } if ( java.lang.Integer != null ) { org.springframework.data.gemfire.wan.AsyncEventQueueFactory . setBatchTimeInterval ( java.lang.Integer ) ; } if ( java.lang.Boolean != null ) { org.springframework.data.gemfire.wan.AsyncEventQueueFactory . setBatchConflationEnabled ( java.lang.Boolean ) ; } if ( java.lang.Integer != null ) { org.springframework.data.gemfire.wan.AsyncEventQueueFactory . setDispatcherThreads ( java.lang.Integer ) ; } if ( java.lang.String != null ) { org.springframework.data.gemfire.wan.AsyncEventQueueFactory . setDiskStoreName ( java.lang.String ) ; } if ( java.lang.Boolean != null ) { org.springframework.data.gemfire.wan.AsyncEventQueueFactory . setDiskSynchronous ( java.lang.Boolean ) ; } if ( java.lang.Integer != null ) { org.springframework.data.gemfire.wan.AsyncEventQueueFactory . setMaximumQueueMemory ( java.lang.Integer ) ; } org.springframework.data.gemfire.wan.AsyncEventQueueFactory . setParallel ( boolean ( ) ) ; if ( java.lang.String != null ) { Assert . isTrue ( boolean ( ) , STRING ) ; Assert . isTrue ( VALID_ORDER_POLICIES . contains ( java.lang.String . java.lang.String ( ) ) , java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; org.springframework.data.gemfire.wan.AsyncEventQueueFactory . setOrderPolicy ( GatewaySender . OrderPolicy . valueOf ( java.lang.String . java.lang.String ( ) ) ) ; } if ( java.lang.Boolean != null ) { org.springframework.data.gemfire.wan.AsyncEventQueueFactory . setPersistent ( java.lang.Boolean ) ; } org.springframework.data.gemfire.wan.AsyncEventQueue = org.springframework.data.gemfire.wan.AsyncEventQueueFactory . create ( getName ( ) , this . org.springframework.data.gemfire.wan.AsyncEventListener ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { if ( ! cache . isClosed ( ) ) { try { this . org.springframework.data.gemfire.wan.AsyncEventListener . close ( ) ; } catch ( CacheClosedException org.springframework.data.gemfire.wan.CacheClosedException ) {			} } }  <METHOD_END>
<METHOD_START> public final void void ( AsyncEventListener org.springframework.data.gemfire.wan.AsyncEventListener ) { Assert . state ( this . org.springframework.data.gemfire.wan.AsyncEventQueue == null , STRING ) ; this . org.springframework.data.gemfire.wan.AsyncEventListener = org.springframework.data.gemfire.wan.AsyncEventListener ; }  <METHOD_END>
<METHOD_START> public void void ( AsyncEventQueue org.springframework.data.gemfire.wan.AsyncEventQueue ) { this . org.springframework.data.gemfire.wan.AsyncEventQueue = org.springframework.data.gemfire.wan.AsyncEventQueue ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! boolean ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
