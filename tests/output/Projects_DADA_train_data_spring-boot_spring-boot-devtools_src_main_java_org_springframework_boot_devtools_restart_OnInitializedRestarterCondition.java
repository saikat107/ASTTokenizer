<METHOD_START> @ java.lang.Override public org.springframework.boot.devtools.restart.ConditionOutcome org.springframework.boot.devtools.restart.ConditionOutcome ( ConditionContext org.springframework.boot.devtools.restart.ConditionContext , AnnotatedTypeMetadata org.springframework.boot.devtools.restart.AnnotatedTypeMetadata ) { ConditionMessage . ConditionMessage ConditionMessage.Builder = ConditionMessage . forCondition ( STRING ) ; Restarter org.springframework.boot.devtools.restart.Restarter = org.springframework.boot.devtools.restart.Restarter ( ) ; if ( org.springframework.boot.devtools.restart.Restarter == null ) { return ConditionOutcome . noMatch ( ConditionMessage.Builder . because ( STRING ) ) ; } if ( org.springframework.boot.devtools.restart.Restarter . getInitialUrls ( ) == null ) { return ConditionOutcome . noMatch ( ConditionMessage.Builder . because ( STRING ) ) ; } return ConditionOutcome . match ( ConditionMessage.Builder . because ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.devtools.restart.Restarter org.springframework.boot.devtools.restart.Restarter ( ) { try { return Restarter . getInstance ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
