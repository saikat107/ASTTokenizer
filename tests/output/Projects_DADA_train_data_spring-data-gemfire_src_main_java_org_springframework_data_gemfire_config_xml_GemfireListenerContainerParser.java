<METHOD_START> @ java.lang.Override protected java.lang.Class<org.springframework.data.gemfire.config.xml.ContinuousQueryListenerContainer> < ContinuousQueryListenerContainer > java.lang.Class<org.springframework.data.gemfire.config.xml.ContinuousQueryListenerContainer> ( org.w3c.dom.Element org.w3c.dom.Element ) { return ContinuousQueryListenerContainer .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.data.gemfire.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder ) { ParsingUtils . setPropertyReference ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyValue ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING ) ; ParsingUtils . setPropertyReference ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; ParsingUtils . setPropertyReference ( org.w3c.dom.Element , org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder , STRING , STRING ) ; java.util.List<org.w3c.dom.Element> < org.w3c.dom.Element > java.util.List<org.w3c.dom.Element> = DomUtils . getChildElementsByTagName ( org.w3c.dom.Element , STRING ) ; if ( ! java.util.List<org.w3c.dom.Element> . boolean ( ) ) { ManagedSet < BeanDefinition > org.springframework.data.gemfire.config.xml.ManagedSet<org.springframework.data.gemfire.config.xml.BeanDefinition> = new ManagedSet < BeanDefinition > ( java.util.List<org.w3c.dom.Element> . int ( ) ) ; for ( org.w3c.dom.Element org.w3c.dom.Element : java.util.List<org.w3c.dom.Element> ) { org.springframework.data.gemfire.config.xml.ManagedSet<org.springframework.data.gemfire.config.xml.BeanDefinition> . add ( org.springframework.data.gemfire.config.xml.BeanDefinition ( org.w3c.dom.Element ) ) ; } org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.data.gemfire.config.xml.ManagedSet<org.springframework.data.gemfire.config.xml.BeanDefinition> ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.data.gemfire.config.xml.BeanDefinition org.springframework.data.gemfire.config.xml.BeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element ) { BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ContinuousQueryListenerAdapter .class ) ; org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addConstructorArgReference ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , java.lang.String ) ; } BeanDefinitionBuilder org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( ContinuousQueryDefinition .class ) ; java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; } org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ; org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ) ; java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; } return org.springframework.data.gemfire.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
