<METHOD_START> protected void ( java.sql.DatabaseMetaData java.sql.DatabaseMetaData ) throws java.sql.SQLException { this . java.lang.String = java.sql.DatabaseMetaData . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.sql.DatabaseMetaData java.sql.DatabaseMetaData ) throws java.sql.SQLException { try { void ( java.sql.DatabaseMetaData . boolean ( ) ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { if ( org.springframework.jdbc.core.metadata.Log . isWarnEnabled ( ) ) { org.springframework.jdbc.core.metadata.Log . warn ( STRING + java.sql.SQLException . java.lang.String ( ) ) ; } } try { void ( java.sql.DatabaseMetaData . boolean ( ) ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { if ( org.springframework.jdbc.core.metadata.Log . isWarnEnabled ( ) ) { org.springframework.jdbc.core.metadata.Log . warn ( STRING + java.sql.SQLException . java.lang.String ( ) ) ; } } try { void ( java.sql.DatabaseMetaData . boolean ( ) ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { if ( org.springframework.jdbc.core.metadata.Log . isWarnEnabled ( ) ) { org.springframework.jdbc.core.metadata.Log . warn ( STRING + java.sql.SQLException . java.lang.String ( ) ) ; } } try { void ( java.sql.DatabaseMetaData . boolean ( ) ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { if ( org.springframework.jdbc.core.metadata.Log . isWarnEnabled ( ) ) { org.springframework.jdbc.core.metadata.Log . warn ( STRING + java.sql.SQLException . java.lang.String ( ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.sql.DatabaseMetaData java.sql.DatabaseMetaData , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.sql.SQLException { this . boolean = true ; void ( java.sql.DatabaseMetaData , java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.jdbc.core.metadata.CallParameterMetaData> < CallParameterMetaData > java.util.List<org.springframework.jdbc.core.metadata.CallParameterMetaData> ( ) { return this . java.util.List<org.springframework.jdbc.core.metadata.CallParameterMetaData> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( java.lang.String == null ) { return null ; } else if ( boolean ( ) ) { return java.lang.String . java.lang.String ( ) ; } else if ( boolean ( ) ) { return java.lang.String . java.lang.String ( ) ; } else { return java.lang.String ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( java.lang.String == null ) { return null ; } else if ( boolean ( ) ) { return java.lang.String . java.lang.String ( ) ; } else if ( boolean ( ) ) { return java.lang.String . java.lang.String ( ) ; } else { return java.lang.String ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( java.lang.String == null ) { return null ; } else if ( boolean ( ) ) { return java.lang.String . java.lang.String ( ) ; } else if ( boolean ( ) ) { return java.lang.String . java.lang.String ( ) ; } else { return java.lang.String ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( boolean ( ) ) { return java.lang.String ( java.lang.String ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( boolean ( ) ) { return java.lang.String ( java.lang.String ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( java.lang.String == null ) { return null ; } else if ( boolean ( ) ) { return java.lang.String . java.lang.String ( ) ; } else if ( boolean ( ) ) { return java.lang.String . java.lang.String ( ) ; } else { return java.lang.String ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jdbc.core.metadata.SqlParameter org.springframework.jdbc.core.metadata.SqlParameter ( java.lang.String java.lang.String , CallParameterMetaData org.springframework.jdbc.core.metadata.CallParameterMetaData ) { return new SqlOutParameter ( java.lang.String , org.springframework.jdbc.core.metadata.CallParameterMetaData . getSqlType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jdbc.core.metadata.SqlParameter org.springframework.jdbc.core.metadata.SqlParameter ( java.lang.String java.lang.String , CallParameterMetaData org.springframework.jdbc.core.metadata.CallParameterMetaData ) { return new SqlInOutParameter ( java.lang.String , org.springframework.jdbc.core.metadata.CallParameterMetaData . getSqlType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jdbc.core.metadata.SqlParameter org.springframework.jdbc.core.metadata.SqlParameter ( java.lang.String java.lang.String , CallParameterMetaData org.springframework.jdbc.core.metadata.CallParameterMetaData ) { return new SqlParameter ( java.lang.String , org.springframework.jdbc.core.metadata.CallParameterMetaData . getSqlType ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.sql.Types . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> protected void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> protected void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> protected void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> protected void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> private void void ( java.sql.DatabaseMetaData java.sql.DatabaseMetaData , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; if ( org.springframework.jdbc.core.metadata.Log . isDebugEnabled ( ) ) { org.springframework.jdbc.core.metadata.Log . debug ( STRING + java.lang.String + '/' + java.lang.String + '/' + java.lang.String ) ; } java.sql.ResultSet java.sql.ResultSet = null ; try { java.sql.ResultSet = java.sql.DatabaseMetaData . java.sql.ResultSet ( java.lang.String , java.lang.String , java.lang.String ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; while ( java.sql.ResultSet . boolean ( ) ) { java.util.List<java.lang.String> . boolean ( java.sql.ResultSet . java.lang.String ( STRING ) + '.' + java.sql.ResultSet . java.lang.String ( STRING ) + '.' + java.sql.ResultSet . java.lang.String ( STRING ) ) ; } java.sql.ResultSet . void ( ) ; if ( java.util.List<java.lang.String> . int ( ) > NUMBER ) { throw new InvalidDataAccessApiUsageException ( STRING + STRING + java.lang.String + STRING + java.util.List<java.lang.String> ) ; } else if ( java.util.List<java.lang.String> . boolean ( ) ) { if ( java.lang.String . boolean ( STRING ) && ! StringUtils . hasText ( java.lang.String ) ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( STRING ) ) ; throw new InvalidDataAccessApiUsageException ( STRING + java.lang.String + STRING + java.lang.String + STRING ) ; } else { throw new InvalidDataAccessApiUsageException ( STRING + STRING + java.lang.String + STRING ) ; } } java.sql.ResultSet = java.sql.DatabaseMetaData . java.sql.ResultSet ( java.lang.String , java.lang.String , java.lang.String , null ) ; while ( java.sql.ResultSet . boolean ( ) ) { java.lang.String java.lang.String = java.sql.ResultSet . java.lang.String ( STRING ) ; int int = java.sql.ResultSet . int ( STRING ) ; if ( java.lang.String == null && ( int == java.sql.DatabaseMetaData . int || int == java.sql.DatabaseMetaData . int || int == java.sql.DatabaseMetaData . int ) ) { if ( org.springframework.jdbc.core.metadata.Log . isDebugEnabled ( ) ) { org.springframework.jdbc.core.metadata.Log . debug ( STRING + int + STRING + java.sql.ResultSet . int ( STRING ) + STRING + java.sql.ResultSet . java.lang.String ( STRING ) + STRING + java.sql.ResultSet . int ( STRING ) + STRING ) ; } } else { CallParameterMetaData org.springframework.jdbc.core.metadata.CallParameterMetaData = new CallParameterMetaData ( java.lang.String , int , java.sql.ResultSet . int ( STRING ) , java.sql.ResultSet . java.lang.String ( STRING ) , java.sql.ResultSet . int ( STRING ) == java.sql.DatabaseMetaData . int ) ; this . java.util.List<org.springframework.jdbc.core.metadata.CallParameterMetaData> . add ( org.springframework.jdbc.core.metadata.CallParameterMetaData ) ; if ( org.springframework.jdbc.core.metadata.Log . isDebugEnabled ( ) ) { org.springframework.jdbc.core.metadata.Log . debug ( STRING + org.springframework.jdbc.core.metadata.CallParameterMetaData . getParameterName ( ) + STRING + org.springframework.jdbc.core.metadata.CallParameterMetaData . getParameterType ( ) + STRING + org.springframework.jdbc.core.metadata.CallParameterMetaData . getSqlType ( ) + STRING + org.springframework.jdbc.core.metadata.CallParameterMetaData . getTypeName ( ) + STRING + org.springframework.jdbc.core.metadata.CallParameterMetaData . isNullable ( ) ) ; } } } } catch ( java.sql.SQLException java.sql.SQLException ) { if ( org.springframework.jdbc.core.metadata.Log . isWarnEnabled ( ) ) { org.springframework.jdbc.core.metadata.Log . warn ( STRING + java.sql.SQLException ) ; } } finally { try { if ( java.sql.ResultSet != null ) { java.sql.ResultSet . void ( ) ; } } catch ( java.sql.SQLException java.sql.SQLException ) { if ( org.springframework.jdbc.core.metadata.Log . isWarnEnabled ( ) ) { org.springframework.jdbc.core.metadata.Log . warn ( STRING + java.sql.SQLException ) ; } } } }  <METHOD_END>
