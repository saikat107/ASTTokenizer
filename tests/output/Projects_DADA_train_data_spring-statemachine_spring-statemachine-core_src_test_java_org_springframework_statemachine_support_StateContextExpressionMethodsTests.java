<METHOD_START> @ Test public void void ( ) { ExpressionParser org.springframework.statemachine.support.ExpressionParser = new SpelExpressionParser ( ) ; StandardEvaluationContext org.springframework.statemachine.support.StandardEvaluationContext = new StandardEvaluationContext ( ) ; StateContextExpressionMethods org.springframework.statemachine.support.StateContextExpressionMethods = new StateContextExpressionMethods ( org.springframework.statemachine.support.StandardEvaluationContext ) ; StateContext < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> = org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ( null ) ; assertThat ( org.springframework.statemachine.support.StateContextExpressionMethods . getValue ( org.springframework.statemachine.support.ExpressionParser . parseExpression ( STRING ) , org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> , java.lang.Boolean .class ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.support.StateContextExpressionMethods . getValue ( org.springframework.statemachine.support.ExpressionParser . parseExpression ( STRING ) , org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> , java.lang.Boolean .class ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.support.StateContextExpressionMethods . getValue ( org.springframework.statemachine.support.ExpressionParser . parseExpression ( STRING ) , org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> , java.lang.Boolean .class ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.support.StateContextExpressionMethods . getValue ( org.springframework.statemachine.support.ExpressionParser . parseExpression ( STRING ) , org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> , java.lang.Boolean .class ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.support.StateContextExpressionMethods . getValue ( org.springframework.statemachine.support.ExpressionParser . parseExpression ( STRING ) , org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> , java.lang.Boolean .class ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.support.StateContextExpressionMethods . getValue ( org.springframework.statemachine.support.ExpressionParser . parseExpression ( STRING ) , org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> , java.lang.Boolean .class ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.support.StateContextExpressionMethods . getValue ( org.springframework.statemachine.support.ExpressionParser . parseExpression ( STRING ) , org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> , java.lang.Boolean .class ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.support.StateContextExpressionMethods . getValue ( org.springframework.statemachine.support.ExpressionParser . parseExpression ( STRING ) , org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> , java.lang.Boolean .class ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ExpressionParser org.springframework.statemachine.support.ExpressionParser = new SpelExpressionParser ( ) ; StandardEvaluationContext org.springframework.statemachine.support.StandardEvaluationContext = new StandardEvaluationContext ( ) ; StateContextExpressionMethods org.springframework.statemachine.support.StateContextExpressionMethods = new StateContextExpressionMethods ( org.springframework.statemachine.support.StandardEvaluationContext ) ; org.springframework.statemachine.support.StateContextExpressionMethodsTests.MockStatemachine org.springframework.statemachine.support.StateContextExpressionMethodsTests.MockStatemachine = new org.springframework.statemachine.support.StateContextExpressionMethodsTests.MockStatemachine ( ) ; StateContext < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> = org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ( org.springframework.statemachine.support.StateContextExpressionMethodsTests.MockStatemachine ) ; assertThat ( org.springframework.statemachine.support.StateContextExpressionMethods . getValue ( org.springframework.statemachine.support.ExpressionParser . parseExpression ( STRING ) , org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> , java.lang.Boolean .class ) , is ( true ) ) ; assertThat ( org.springframework.statemachine.support.StateContextExpressionMethodsTests.MockStatemachine . java.util.ArrayList<org.springframework.statemachine.support.Message<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents>> . size ( ) , is ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ( StateMachine < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.StateMachine<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; MessageHeaders org.springframework.statemachine.support.MessageHeaders = new MessageHeaders ( java.util.Map<java.lang.String,java.lang.Object> ) ; ExtendedState org.springframework.statemachine.support.ExtendedState = new DefaultExtendedState ( ) ; org.springframework.statemachine.support.ExtendedState . getVariables ( ) . put ( STRING , STRING ) ; org.springframework.statemachine.support.ExtendedState . getVariables ( ) . put ( STRING , true ) ; org.springframework.statemachine.support.ExtendedState . getVariables ( ) . put ( STRING , false ) ; StateContext < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> = new DefaultStateContext < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > ( null , MessageBuilder . withPayload ( org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents . org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents ) . build ( ) , org.springframework.statemachine.support.MessageHeaders , org.springframework.statemachine.support.ExtendedState , new org.springframework.statemachine.support.StateContextExpressionMethodsTests.MockTransition ( ) , org.springframework.statemachine.support.StateMachine<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> , null , null , null ) ; return org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( StateContext < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.StateContext<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.support.State<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.State<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ( ) { return new EnumState < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > ( org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates . org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.support.State<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.State<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ( ) { return new EnumState < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > ( org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates . org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<org.springframework.statemachine.support.Action<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents>> < Action < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > > java.util.Collection<org.springframework.statemachine.support.Action<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents>> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.support.Trigger<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.Trigger<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.support.TransitionKind org.springframework.statemachine.support.TransitionKind ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.support.SecurityRule org.springframework.statemachine.support.SecurityRule ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ActionListener < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.ActionListener<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ActionListener < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.ActionListener<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.support.StateMachineAccessor<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.StateMachineAccessor<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Message < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.Message<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ) { java.util.ArrayList<org.springframework.statemachine.support.Message<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents>> . add ( org.springframework.statemachine.support.Message<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents ) { return boolean ( MessageBuilder . createMessage ( org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents , new MessageHeaders ( new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.support.State<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.State<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<org.springframework.statemachine.support.State<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents>> < State < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > > java.util.Collection<org.springframework.statemachine.support.State<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents>> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Collection<org.springframework.statemachine.support.Transition<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents>> < Transition < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > > java.util.Collection<org.springframework.statemachine.support.Transition<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents>> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Exception java.lang.Exception ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineListener < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.StateMachineListener<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineListener < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.StateMachineListener<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.support.State<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> < org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates , org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents > org.springframework.statemachine.support.State<org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelStates,org.springframework.statemachine.support.StateContextExpressionMethodsTests.SpelEvents> ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.support.ExtendedState org.springframework.statemachine.support.ExtendedState ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.UUID java.util.UUID ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
