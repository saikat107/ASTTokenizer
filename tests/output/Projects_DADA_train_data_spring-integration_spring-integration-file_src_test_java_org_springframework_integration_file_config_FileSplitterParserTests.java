<METHOD_START> @ Test public void void ( ) { assertFalse ( TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.FileSplitter , STRING , java.lang.Boolean .class ) ) ; assertTrue ( TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.FileSplitter , STRING , java.lang.Boolean .class ) ) ; assertTrue ( TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.FileSplitter , STRING , java.lang.Boolean .class ) ) ; assertTrue ( TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.FileSplitter , STRING , java.lang.Boolean .class ) ) ; assertTrue ( TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.FileSplitter , STRING , java.lang.Boolean .class ) ) ; assertEquals ( java.nio.charset.Charset . java.nio.charset.Charset ( STRING ) , TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.FileSplitter , STRING ) ) ; assertEquals ( NUMBER , TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.FileSplitter , STRING ) ) ; assertEquals ( this . org.springframework.integration.file.config.MessageChannel , TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.FileSplitter , STRING ) ) ; assertEquals ( NUMBER , TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.FileSplitter , STRING ) ) ; assertEquals ( this . org.springframework.integration.file.config.MessageChannel , TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.EventDrivenConsumer , STRING ) ) ; assertFalse ( TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.EventDrivenConsumer , STRING , java.lang.Boolean .class ) ) ; assertEquals ( NUMBER , TestUtils . getPropertyValue ( this . org.springframework.integration.file.config.EventDrivenConsumer , STRING ) ) ; }  <METHOD_END>
