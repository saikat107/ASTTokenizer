<METHOD_START> public void ( ) { this( true ); }  <METHOD_END>
<METHOD_START> public void ( boolean boolean ) { this . java.lang.ClassLoader = null ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader ) { this( java.lang.ClassLoader , true ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.ClassLoader java.lang.ClassLoader , boolean boolean ) { this . java.lang.ClassLoader = ( java.lang.ClassLoader != null ? java.lang.ClassLoader : ClassUtils . getDefaultClassLoader ( ) ) ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { if ( StringUtils . hasText ( java.lang.String ) ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( ) ; if ( this . java.lang.ClassLoader != null && java.lang.String . boolean ( ResourceUtils . CLASSPATH_URL_PREFIX ) ) { ClassPathResource org.springframework.beans.propertyeditors.ClassPathResource = new ClassPathResource ( java.lang.String . java.lang.String ( ResourceUtils . CLASSPATH_URL_PREFIX . length ( ) ) , this . java.lang.ClassLoader ) ; try { java.lang.String java.lang.String = org.springframework.beans.propertyeditors.ClassPathResource . getURL ( ) . toString ( ) ; void ( java.net.URI ( java.lang.String ) ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.beans.propertyeditors.ClassPathResource + STRING + java.io.IOException . java.lang.String ( ) ) ; } catch ( java.net.URISyntaxException java.net.URISyntaxException ) { throw new java.lang.IllegalArgumentException ( STRING + java.net.URISyntaxException ) ; } } else { try { void ( java.net.URI ( java.lang.String ) ) ; } catch ( java.net.URISyntaxException java.net.URISyntaxException ) { throw new java.lang.IllegalArgumentException ( STRING + java.net.URISyntaxException ) ; } } } else { void ( null ) ; } }  <METHOD_END>
<METHOD_START> protected java.net.URI java.net.URI ( java.lang.String java.lang.String ) throws java.net.URISyntaxException { int int = java.lang.String . int ( ':' ) ; if ( this . boolean && int != - NUMBER ) { int int = java.lang.String . int ( '#' , int + NUMBER ) ; java.lang.String java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) ; java.lang.String java.lang.String = java.lang.String . java.lang.String ( int + NUMBER , ( int > NUMBER ? int : java.lang.String . int ( ) ) ) ; java.lang.String java.lang.String = ( int > NUMBER ? java.lang.String . java.lang.String ( int + NUMBER ) : null ) ; return new java.net.URI ( java.lang.String , java.lang.String , java.lang.String ) ; } else { return new java.net.URI ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.net.URI java.net.URI = ( java.net.URI ) java.lang.Object ( ) ; return ( java.net.URI != null ? java.net.URI . java.lang.String ( ) : STRING ) ; }  <METHOD_END>
