<METHOD_START> public static java.util.Collection<org.springframework.data.convert.Converter<?,?>> < Converter < ? , ? > > java.util.Collection<org.springframework.data.convert.Converter<?,?>> ( ) { if ( ! boolean ) { return java.util.Collections . java.util.Set<org.springframework.data.convert.Converter<?,?>> ( ) ; } java.util.List<org.springframework.data.convert.Converter<?,?>> < Converter < ? , ? > > java.util.List<org.springframework.data.convert.Converter<?,?>> = new java.util.ArrayList<org.springframework.data.convert.Converter<?,?>> <> ( ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.DateToLocalDateTimeConverter . org.springframework.data.convert.Jsr310Converters.DateToLocalDateTimeConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.LocalDateTimeToDateConverter . org.springframework.data.convert.Jsr310Converters.LocalDateTimeToDateConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.DateToLocalDateConverter . org.springframework.data.convert.Jsr310Converters.DateToLocalDateConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.LocalDateToDateConverter . org.springframework.data.convert.Jsr310Converters.LocalDateToDateConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.DateToLocalTimeConverter . org.springframework.data.convert.Jsr310Converters.DateToLocalTimeConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.LocalTimeToDateConverter . org.springframework.data.convert.Jsr310Converters.LocalTimeToDateConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.DateToInstantConverter . org.springframework.data.convert.Jsr310Converters.DateToInstantConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.InstantToDateConverter . org.springframework.data.convert.Jsr310Converters.InstantToDateConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.ZoneIdToStringConverter . org.springframework.data.convert.Jsr310Converters.ZoneIdToStringConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.StringToZoneIdConverter . org.springframework.data.convert.Jsr310Converters.StringToZoneIdConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.DurationToStringConverter . org.springframework.data.convert.Jsr310Converters.DurationToStringConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.StringToDurationConverter . org.springframework.data.convert.Jsr310Converters.StringToDurationConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.PeriodToStringConverter . org.springframework.data.convert.Jsr310Converters.PeriodToStringConverter ) ; java.util.List<org.springframework.data.convert.Converter<?,?>> . add ( org.springframework.data.convert.Jsr310Converters.StringToPeriodConverter . org.springframework.data.convert.Jsr310Converters.StringToPeriodConverter ) ; return java.util.List<org.springframework.data.convert.Converter<?,?>> ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { if ( ! boolean ) { return false ; } return java.util.Arrays .< java.lang.Class<?> < ? > > java.util.List<java.lang.Class<?>> ( java.time.LocalDateTime .class , java.time.LocalDate .class , java.time.LocalTime .class , java.time.Instant .class ) . boolean ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.time.LocalDateTime java.time.LocalDateTime ( java.util.Date java.util.Date ) { return java.util.Date == null ? null : java.time.LocalDateTime ( java.util.Date . java.time.Instant ( ) , java.time.ZoneId ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Date java.util.Date ( java.time.LocalDateTime java.time.LocalDateTime ) { return java.time.LocalDateTime == null ? null : java.util.Date . java.util.Date ( java.time.LocalDateTime . java.time.ZonedDateTime ( java.time.ZoneId ( ) ) . java.time.Instant ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.time.LocalDate java.time.LocalDate ( java.util.Date java.util.Date ) { return java.util.Date == null ? null : java.time.LocalDateTime ( java.time.Instant ( java.util.Date . long ( ) ) , java.time.ZoneId ( ) ) . java.time.LocalDate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Date java.util.Date ( java.time.LocalDate java.time.LocalDate ) { return java.time.LocalDate == null ? null : java.util.Date . java.util.Date ( java.time.LocalDate . java.time.ZonedDateTime ( java.time.ZoneId ( ) ) . java.time.Instant ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.time.LocalTime java.time.LocalTime ( java.util.Date java.util.Date ) { return java.util.Date == null ? null : java.time.LocalDateTime ( java.time.Instant ( java.util.Date . long ( ) ) , java.time.ZoneId ( ) ) . java.time.LocalTime ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Date java.util.Date ( java.time.LocalTime java.time.LocalTime ) { return java.time.LocalTime == null ? null : java.util.Date . java.util.Date ( java.time.LocalTime . java.time.LocalDateTime ( java.time.LocalDate . java.time.LocalDate ( ) ) . java.time.ZonedDateTime ( java.time.ZoneId ( ) ) . java.time.Instant ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.time.Instant java.time.Instant ( java.util.Date java.util.Date ) { return java.util.Date == null ? null : java.util.Date . java.time.Instant ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Date java.util.Date ( java.time.Instant java.time.Instant ) { return java.time.Instant == null ? null : java.util.Date . java.util.Date ( java.time.Instant . java.time.ZonedDateTime ( java.time.ZoneId ( ) ) . java.time.Instant ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.time.ZoneId java.time.ZoneId ) { return java.time.ZoneId . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.time.ZoneId java.time.ZoneId ( java.lang.String java.lang.String ) { return java.time.ZoneId . java.time.ZoneId ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.time.Duration java.time.Duration ) { return java.time.Duration . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.time.Duration java.time.Duration ( java.lang.String java.lang.String ) { return java.time.Duration . java.time.Duration ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.time.Period java.time.Period ) { return java.time.Period . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.time.Period java.time.Period ( java.lang.String java.lang.String ) { return java.time.Period . java.time.Period ( java.lang.String ) ; }  <METHOD_END>
