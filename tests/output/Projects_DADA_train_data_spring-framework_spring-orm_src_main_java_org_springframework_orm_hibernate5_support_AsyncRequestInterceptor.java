<METHOD_START> public void ( SessionFactory org.springframework.orm.hibernate5.support.SessionFactory , SessionHolder org.springframework.orm.hibernate5.support.SessionHolder ) { this . org.springframework.orm.hibernate5.support.SessionFactory = org.springframework.orm.hibernate5.support.SessionFactory ; this . org.springframework.orm.hibernate5.support.SessionHolder = org.springframework.orm.hibernate5.support.SessionHolder ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > void void ( NativeWebRequest org.springframework.orm.hibernate5.support.NativeWebRequest , java.util.concurrent.Callable<T> < T > java.util.concurrent.Callable<T> ) { void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . boolean = false ; TransactionSynchronizationManager . bindResource ( this . org.springframework.orm.hibernate5.support.SessionFactory , this . org.springframework.orm.hibernate5.support.SessionHolder ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > void void ( NativeWebRequest org.springframework.orm.hibernate5.support.NativeWebRequest , java.util.concurrent.Callable<T> < T > java.util.concurrent.Callable<T> , java.lang.Object java.lang.Object ) { TransactionSynchronizationManager . unbindResource ( this . org.springframework.orm.hibernate5.support.SessionFactory ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > java.lang.Object java.lang.Object ( NativeWebRequest org.springframework.orm.hibernate5.support.NativeWebRequest , java.util.concurrent.Callable<T> < T > java.util.concurrent.Callable<T> ) { this . boolean = true ; return RESULT_NONE ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > void void ( NativeWebRequest org.springframework.orm.hibernate5.support.NativeWebRequest , java.util.concurrent.Callable<T> < T > java.util.concurrent.Callable<T> ) throws java.lang.Exception { void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( this . boolean ) { org.springframework.orm.hibernate5.support.Log . debug ( STRING ) ; SessionFactoryUtils . closeSession ( this . org.springframework.orm.hibernate5.support.SessionHolder . getSession ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > void void ( NativeWebRequest org.springframework.orm.hibernate5.support.NativeWebRequest , DeferredResult < T > org.springframework.orm.hibernate5.support.DeferredResult<T> ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > void void ( NativeWebRequest org.springframework.orm.hibernate5.support.NativeWebRequest , DeferredResult < T > org.springframework.orm.hibernate5.support.DeferredResult<T> ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > void void ( NativeWebRequest org.springframework.orm.hibernate5.support.NativeWebRequest , DeferredResult < T > org.springframework.orm.hibernate5.support.DeferredResult<T> , java.lang.Object java.lang.Object ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > boolean boolean ( NativeWebRequest org.springframework.orm.hibernate5.support.NativeWebRequest , DeferredResult < T > org.springframework.orm.hibernate5.support.DeferredResult<T> ) { this . boolean = true ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > void void ( NativeWebRequest org.springframework.orm.hibernate5.support.NativeWebRequest , DeferredResult < T > org.springframework.orm.hibernate5.support.DeferredResult<T> ) { void ( ) ; }  <METHOD_END>
