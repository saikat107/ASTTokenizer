<METHOD_START> @ java.lang.Override public org.springframework.orm.jpa.vendor.SessionFactory org.springframework.orm.jpa.vendor.SessionFactory ( ) { EntityManagerFactory org.springframework.orm.jpa.vendor.EntityManagerFactory = getEntityManagerFactory ( ) ; Assert . state ( org.springframework.orm.jpa.vendor.EntityManagerFactory != null , STRING ) ; try { java.lang.reflect.Method java.lang.reflect.Method = org.springframework.orm.jpa.vendor.EntityManagerFactory . getClass ( ) . getMethod ( STRING ) ; return ( SessionFactory ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.orm.jpa.vendor.EntityManagerFactory ) ; } catch ( java.lang.NoSuchMethodException java.lang.NoSuchMethodException ) { throw new java.lang.IllegalStateException ( STRING + java.lang.NoSuchMethodException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return SessionFactory .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
