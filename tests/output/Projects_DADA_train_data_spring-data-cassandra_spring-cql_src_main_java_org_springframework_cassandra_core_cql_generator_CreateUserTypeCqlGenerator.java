<METHOD_START> public static java.lang.String java.lang.String ( CreateUserTypeSpecification org.springframework.cassandra.core.cql.generator.CreateUserTypeSpecification ) { return new org.springframework.cassandra.core.cql.generator.CreateUserTypeCqlGenerator ( org.springframework.cassandra.core.cql.generator.CreateUserTypeSpecification ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void ( CreateUserTypeSpecification org.springframework.cassandra.core.cql.generator.CreateUserTypeSpecification ) { super( org.springframework.cassandra.core.cql.generator.CreateUserTypeSpecification ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.StringBuilder java.lang.StringBuilder ( java.lang.StringBuilder java.lang.StringBuilder ) { Assert . notNull ( getSpecification ( ) . getName ( ) , STRING ) ; Assert . isTrue ( ! getSpecification ( ) . getFields ( ) . isEmpty ( ) , java.lang.String . java.lang.String ( STRING , getSpecification ( ) . getName ( ) ) ) ; return java.lang.StringBuilder ( java.lang.StringBuilder ( java.lang.StringBuilder ) ) . java.lang.StringBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> private java.lang.StringBuilder java.lang.StringBuilder ( java.lang.StringBuilder java.lang.StringBuilder ) { return noNull ( java.lang.StringBuilder ) . append ( STRING ) . append ( spec ( ) . getIfNotExists ( ) ? STRING : STRING ) . append ( spec ( ) . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.StringBuilder java.lang.StringBuilder ( java.lang.StringBuilder java.lang.StringBuilder ) { java.lang.StringBuilder = noNull ( java.lang.StringBuilder ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; boolean boolean = true ; for ( FieldSpecification org.springframework.cassandra.core.cql.generator.FieldSpecification : spec ( ) . getFields ( ) ) { if ( ! boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } org.springframework.cassandra.core.cql.generator.FieldSpecification . toCql ( java.lang.StringBuilder ) ; boolean = false ; } java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return java.lang.StringBuilder ; }  <METHOD_END>
