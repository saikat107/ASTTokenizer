<METHOD_START> protected void ( ServerWebExchange org.springframework.web.server.ServerWebExchange ) { Assert . notNull ( org.springframework.web.server.ServerWebExchange , STRING ) ; this . org.springframework.web.server.ServerWebExchange = org.springframework.web.server.ServerWebExchange ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.server.ServerWebExchange org.springframework.web.server.ServerWebExchange ( ) { return this . org.springframework.web.server.ServerWebExchange ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.server.ServerHttpRequest org.springframework.web.server.ServerHttpRequest ( ) { return org.springframework.web.server.ServerWebExchange ( ) . getRequest ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.server.ServerHttpResponse org.springframework.web.server.ServerHttpResponse ( ) { return org.springframework.web.server.ServerWebExchange ( ) . getResponse ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { return org.springframework.web.server.ServerWebExchange ( ) . getAttributes ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > java.util.Optional<T> < T > java.util.Optional<T> ( java.lang.String java.lang.String ) { return org.springframework.web.server.ServerWebExchange ( ) . getAttribute ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.server.Mono<org.springframework.web.server.WebSession> < WebSession > org.springframework.web.server.Mono<org.springframework.web.server.WebSession> ( ) { return org.springframework.web.server.ServerWebExchange ( ) . getSession ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T extends java.security.Principal > org.springframework.web.server.Mono<T> < T > org.springframework.web.server.Mono<T> ( ) { return org.springframework.web.server.ServerWebExchange ( ) . getPrincipal ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.server.Mono<org.springframework.web.server.MultiValueMap<java.lang.String,java.lang.String>> < MultiValueMap < java.lang.String , java.lang.String > > org.springframework.web.server.Mono<org.springframework.web.server.MultiValueMap<java.lang.String,java.lang.String>> ( ) { return org.springframework.web.server.ServerWebExchange ( ) . getFormData ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.server.Mono<org.springframework.web.server.MultiValueMap<java.lang.String,java.lang.String>> < MultiValueMap < java.lang.String , java.lang.String > > org.springframework.web.server.Mono<org.springframework.web.server.MultiValueMap<java.lang.String,java.lang.String>> ( ) { return org.springframework.web.server.ServerWebExchange ( ) . getRequestParams ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.web.server.ServerWebExchange ( ) . isNotModified ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.time.Instant java.time.Instant ) { return org.springframework.web.server.ServerWebExchange ( ) . checkNotModified ( java.time.Instant ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return org.springframework.web.server.ServerWebExchange ( ) . checkNotModified ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String , java.time.Instant java.time.Instant ) { return org.springframework.web.server.ServerWebExchange ( ) . checkNotModified ( java.lang.String , java.time.Instant ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.Class<? extends org.springframework.web.server.ServerWebExchangeDecorator> ( ) . java.lang.String ( ) + STRING + org.springframework.web.server.ServerWebExchange ( ) + STRING ; }  <METHOD_END>
