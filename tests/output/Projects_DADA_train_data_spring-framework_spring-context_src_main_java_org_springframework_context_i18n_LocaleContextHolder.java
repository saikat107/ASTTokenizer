<METHOD_START> public static void void ( ) { java.lang.ThreadLocal<org.springframework.context.i18n.LocaleContext> . remove ( ) ; java.lang.ThreadLocal<org.springframework.context.i18n.LocaleContext> . remove ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( LocaleContext org.springframework.context.i18n.LocaleContext ) { void ( org.springframework.context.i18n.LocaleContext , false ) ; }  <METHOD_END>
<METHOD_START> public static void void ( LocaleContext org.springframework.context.i18n.LocaleContext , boolean boolean ) { if ( org.springframework.context.i18n.LocaleContext == null ) { void ( ) ; } else { if ( boolean ) { java.lang.ThreadLocal<org.springframework.context.i18n.LocaleContext> . set ( org.springframework.context.i18n.LocaleContext ) ; java.lang.ThreadLocal<org.springframework.context.i18n.LocaleContext> . remove ( ) ; } else { java.lang.ThreadLocal<org.springframework.context.i18n.LocaleContext> . set ( org.springframework.context.i18n.LocaleContext ) ; java.lang.ThreadLocal<org.springframework.context.i18n.LocaleContext> . remove ( ) ; } } }  <METHOD_END>
<METHOD_START> public static org.springframework.context.i18n.LocaleContext org.springframework.context.i18n.LocaleContext ( ) { LocaleContext org.springframework.context.i18n.LocaleContext = java.lang.ThreadLocal<org.springframework.context.i18n.LocaleContext> . get ( ) ; if ( org.springframework.context.i18n.LocaleContext == null ) { org.springframework.context.i18n.LocaleContext = java.lang.ThreadLocal<org.springframework.context.i18n.LocaleContext> . get ( ) ; } return org.springframework.context.i18n.LocaleContext ; }  <METHOD_END>
<METHOD_START> public static void void ( java.util.Locale java.util.Locale ) { void ( java.util.Locale , false ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.util.Locale java.util.Locale , boolean boolean ) { LocaleContext org.springframework.context.i18n.LocaleContext = org.springframework.context.i18n.LocaleContext ( ) ; java.util.TimeZone java.util.TimeZone = ( org.springframework.context.i18n.LocaleContext instanceof TimeZoneAwareLocaleContext ? ( ( TimeZoneAwareLocaleContext ) org.springframework.context.i18n.LocaleContext ) . getTimeZone ( ) : null ) ; if ( java.util.TimeZone != null ) { org.springframework.context.i18n.LocaleContext = new SimpleTimeZoneAwareLocaleContext ( java.util.Locale , java.util.TimeZone ) ; } else if ( java.util.Locale != null ) { org.springframework.context.i18n.LocaleContext = new SimpleLocaleContext ( java.util.Locale ) ; } else { org.springframework.context.i18n.LocaleContext = null ; } void ( org.springframework.context.i18n.LocaleContext , boolean ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.util.Locale java.util.Locale ) { org.springframework.context.i18n.LocaleContextHolder . java.util.Locale = java.util.Locale ; }  <METHOD_END>
<METHOD_START> public static java.util.Locale java.util.Locale ( ) { LocaleContext org.springframework.context.i18n.LocaleContext = org.springframework.context.i18n.LocaleContext ( ) ; if ( org.springframework.context.i18n.LocaleContext != null ) { java.util.Locale java.util.Locale = org.springframework.context.i18n.LocaleContext . getLocale ( ) ; if ( java.util.Locale != null ) { return java.util.Locale ; } } return ( java.util.Locale != null ? java.util.Locale : java.util.Locale . java.util.Locale ( ) ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.util.TimeZone java.util.TimeZone ) { void ( java.util.TimeZone , false ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.util.TimeZone java.util.TimeZone , boolean boolean ) { LocaleContext org.springframework.context.i18n.LocaleContext = org.springframework.context.i18n.LocaleContext ( ) ; java.util.Locale java.util.Locale = ( org.springframework.context.i18n.LocaleContext != null ? org.springframework.context.i18n.LocaleContext . getLocale ( ) : null ) ; if ( java.util.TimeZone != null ) { org.springframework.context.i18n.LocaleContext = new SimpleTimeZoneAwareLocaleContext ( java.util.Locale , java.util.TimeZone ) ; } else if ( java.util.Locale != null ) { org.springframework.context.i18n.LocaleContext = new SimpleLocaleContext ( java.util.Locale ) ; } else { org.springframework.context.i18n.LocaleContext = null ; } void ( org.springframework.context.i18n.LocaleContext , boolean ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.util.TimeZone java.util.TimeZone ) { java.util.TimeZone = java.util.TimeZone ; }  <METHOD_END>
<METHOD_START> public static java.util.TimeZone java.util.TimeZone ( ) { LocaleContext org.springframework.context.i18n.LocaleContext = org.springframework.context.i18n.LocaleContext ( ) ; if ( org.springframework.context.i18n.LocaleContext instanceof TimeZoneAwareLocaleContext ) { java.util.TimeZone java.util.TimeZone = ( ( TimeZoneAwareLocaleContext ) org.springframework.context.i18n.LocaleContext ) . getTimeZone ( ) ; if ( java.util.TimeZone != null ) { return java.util.TimeZone ; } } return ( java.util.TimeZone != null ? java.util.TimeZone : java.util.TimeZone . java.util.TimeZone ( ) ) ; }  <METHOD_END>
