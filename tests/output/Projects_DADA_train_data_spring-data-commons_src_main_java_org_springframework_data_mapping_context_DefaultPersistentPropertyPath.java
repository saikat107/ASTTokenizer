<METHOD_START> public java.lang.String java.lang.String ( PersistentProperty < ? > org.springframework.data.mapping.context.PersistentProperty<?> ) { return org.springframework.data.mapping.context.PersistentProperty<> . getName ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.util.List<T> < T > java.util.List<T> ) { Assert . notNull ( java.util.List<T> , STRING ) ; this . java.util.List<T> = java.util.List<T> ; }  <METHOD_END>
<METHOD_START> public static < T extends org.springframework.data.mapping.context.PersistentProperty<T> < T > > org.springframework.data.mapping.context.DefaultPersistentPropertyPath<T> < T > org.springframework.data.mapping.context.DefaultPersistentPropertyPath<T> ( ) { return new org.springframework.data.mapping.context.DefaultPersistentPropertyPath <> ( java.util.Collections .< T > java.util.List<T> ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mapping.context.DefaultPersistentPropertyPath<T> < T > org.springframework.data.mapping.context.DefaultPersistentPropertyPath<T> ( T T ) { Assert . notNull ( T , STRING ) ; if ( boolean ( ) ) { return new org.springframework.data.mapping.context.DefaultPersistentPropertyPath<T> <> ( java.util.Collections . java.util.List<T> ( T ) ) ; } java.lang.Class<?> < ? > java.lang.Class<?> = T ( ) . getActualType ( ) ; Assert . isTrue ( T . getOwner ( ) . getType ( ) . equals ( java.lang.Class<> ) , java.lang.String . java.lang.String ( STRING , T . getName ( ) , java.lang.Class<> . java.lang.String ( ) ) ) ; java.util.List<T> < T > java.util.List<T> = new java.util.ArrayList<T> <> ( this . java.util.List<T> ) ; java.util.List<T> . boolean ( T ) ; return new org.springframework.data.mapping.context.DefaultPersistentPropertyPath<T> <> ( java.util.List<T> ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ( null , null ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( Converter < ? super T , java.lang.String > org.springframework.data.mapping.context.Converter<? super T,java.lang.String> ) { return java.lang.String ( null , org.springframework.data.mapping.context.Converter<,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.lang.String ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String , Converter < ? super T , java.lang.String > org.springframework.data.mapping.context.Converter<? super T,java.lang.String> ) { @ java.lang.SuppressWarnings ( STRING ) Converter < ? super T , java.lang.String > org.springframework.data.mapping.context.Converter<? super T,java.lang.String> = org.springframework.data.mapping.context.Converter<,java.lang.String> == null ? org.springframework.data.mapping.context.DefaultPersistentPropertyPath.PropertyNameConverter . org.springframework.data.mapping.context.DefaultPersistentPropertyPath.PropertyNameConverter : org.springframework.data.mapping.context.Converter<,java.lang.String> ; java.lang.String java.lang.String = java.lang.String == null ? STRING : java.lang.String ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; for ( T T : java.util.List<T> ) { java.lang.String java.lang.String = org.springframework.data.mapping.context.Converter<,java.lang.String> . convert ( T ) ; if ( StringUtils . hasText ( java.lang.String ) ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } return java.util.List<java.lang.String> . boolean ( ) ? null : StringUtils . collectionToDelimitedString ( java.util.List<java.lang.String> , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public T T ( ) { return java.util.List<T> . T ( java.util.List<T> . int ( ) - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public T T ( ) { return java.util.List<T> . T ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( PersistentPropertyPath < T > org.springframework.data.mapping.context.PersistentPropertyPath<T> ) { if ( org.springframework.data.mapping.context.PersistentPropertyPath<T> == null ) { return false ; } java.util.Iterator<T> < T > java.util.Iterator<T> = org.springframework.data.mapping.context.PersistentPropertyPath<T> . iterator ( ) ; for ( T T : this ) { if ( ! java.util.Iterator<T> . boolean ( ) ) { return false ; } T T = java.util.Iterator<T> . T ( ) ; if ( ! T . boolean ( T ) ) { return false ; } } return true ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mapping.context.PersistentPropertyPath<T> < T > org.springframework.data.mapping.context.PersistentPropertyPath<T> ( PersistentPropertyPath < T > org.springframework.data.mapping.context.PersistentPropertyPath<T> ) { if ( ! org.springframework.data.mapping.context.PersistentPropertyPath<T> . isBasePathOf ( this ) ) { return this ; } java.util.List<T> < T > java.util.List<T> = new java.util.ArrayList<T> <> ( ) ; java.util.Iterator<T> < T > java.util.Iterator<T> = java.util.Iterator<T> ( ) ; for ( int int = NUMBER ; int < org.springframework.data.mapping.context.PersistentPropertyPath<T> . getLength ( ) ; int ++ ) { java.util.Iterator<T> . T ( ) ; } while ( java.util.Iterator<T> . boolean ( ) ) { java.util.List<T> . boolean ( java.util.Iterator<T> . T ( ) ) ; } return new org.springframework.data.mapping.context.DefaultPersistentPropertyPath <> ( java.util.List<T> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mapping.context.PersistentPropertyPath<T> < T > org.springframework.data.mapping.context.PersistentPropertyPath<T> ( ) { int int = java.util.List<T> . int ( ) ; if ( int <= NUMBER ) { return this ; } return new org.springframework.data.mapping.context.DefaultPersistentPropertyPath <> ( java.util.List<T> . java.util.List<T> ( NUMBER , int - NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return java.util.List<T> . int ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Iterator<T> < T > java.util.Iterator<T> ( ) { return java.util.List<T> . java.util.Iterator<T> ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return java.util.List<T> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null || ! java.lang.Class<? extends org.springframework.data.mapping.context.DefaultPersistentPropertyPath> ( ) . boolean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { return false ; } org.springframework.data.mapping.context.DefaultPersistentPropertyPath<?> < ? > org.springframework.data.mapping.context.DefaultPersistentPropertyPath<?> = ( org.springframework.data.mapping.context.DefaultPersistentPropertyPath<?> < ? > ) java.lang.Object ; return this . java.util.List<T> . boolean ( org.springframework.data.mapping.context.DefaultPersistentPropertyPath<> . java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.util.List<T> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ( ) ; }  <METHOD_END>
