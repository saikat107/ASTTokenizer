<METHOD_START> public void void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { if ( java.lang.Class<> == null || ! java.lang.Class<?> ( ) . boolean ( java.lang.Class<> ) ) { throw new java.lang.IllegalArgumentException ( STRING + ( java.lang.Class<> != null ? java.lang.Class<> . java.lang.String ( ) : null ) + STRING + java.lang.Class<?> ( ) . java.lang.String ( ) + STRING ) ; } this . java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> protected java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return this . java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> protected java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return AbstractUrlBasedView .class ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = ( java.lang.String != null ? java.lang.String : STRING ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = ( java.lang.String != null ? java.lang.String : STRING ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Properties java.util.Properties ) { CollectionUtils . mergePropertiesIntoMap ( java.util.Properties , this . java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { if ( java.util.Map<java.lang.String,> != null ) { this . java.util.Map<java.lang.String,java.lang.Object> . void ( java.util.Map<java.lang.String,> ) ; } }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { return this . java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> protected java.lang.Boolean java.lang.Boolean ( ) { return this . java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . java.lang.Boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected java.lang.Boolean java.lang.Boolean ( ) { return this . java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> protected java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String ... java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> protected java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. initApplicationContext ( ) ; if ( java.lang.Class<?> ( ) == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.util.Locale java.util.Locale ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.view.View org.springframework.web.servlet.view.View ( java.lang.String java.lang.String , java.util.Locale java.util.Locale ) throws java.lang.Exception { if ( ! boolean ( java.lang.String , java.util.Locale ) ) { return null ; } if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( java.lang.String . int ( ) ) ; RedirectView org.springframework.web.servlet.view.RedirectView = new RedirectView ( java.lang.String , boolean ( ) , boolean ( ) ) ; org.springframework.web.servlet.view.RedirectView . setHosts ( java.lang.String[] ( ) ) ; return org.springframework.web.servlet.view.View ( java.lang.String , org.springframework.web.servlet.view.RedirectView ) ; } if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( java.lang.String . int ( ) ) ; return new InternalResourceView ( java.lang.String ) ; } return super. createView ( java.lang.String , java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.String java.lang.String , java.util.Locale java.util.Locale ) { java.lang.String [] java.lang.String[] = java.lang.String[] ( ) ; return ( java.lang.String[] == null || PatternMatchUtils . simpleMatch ( java.lang.String[] , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.web.servlet.view.View org.springframework.web.servlet.view.View ( java.lang.String java.lang.String , java.util.Locale java.util.Locale ) throws java.lang.Exception { AbstractUrlBasedView org.springframework.web.servlet.view.AbstractUrlBasedView = org.springframework.web.servlet.view.AbstractUrlBasedView ( java.lang.String ) ; View org.springframework.web.servlet.view.View = org.springframework.web.servlet.view.View ( java.lang.String , org.springframework.web.servlet.view.AbstractUrlBasedView ) ; return ( org.springframework.web.servlet.view.AbstractUrlBasedView . checkResource ( java.util.Locale ) ? org.springframework.web.servlet.view.View : null ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.web.servlet.view.View org.springframework.web.servlet.view.View ( java.lang.String java.lang.String , AbstractView org.springframework.web.servlet.view.AbstractView ) { return ( View ) getApplicationContext ( ) . getAutowireCapableBeanFactory ( ) . initializeBean ( org.springframework.web.servlet.view.AbstractView , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.web.servlet.view.AbstractUrlBasedView org.springframework.web.servlet.view.AbstractUrlBasedView ( java.lang.String java.lang.String ) throws java.lang.Exception { AbstractUrlBasedView org.springframework.web.servlet.view.AbstractUrlBasedView = ( AbstractUrlBasedView ) BeanUtils . instantiateClass ( java.lang.Class<?> ( ) ) ; org.springframework.web.servlet.view.AbstractUrlBasedView . setUrl ( java.lang.String ( ) + java.lang.String + java.lang.String ( ) ) ; java.lang.String java.lang.String = java.lang.String ( ) ; if ( java.lang.String != null ) { org.springframework.web.servlet.view.AbstractUrlBasedView . setContentType ( java.lang.String ) ; } org.springframework.web.servlet.view.AbstractUrlBasedView . setRequestContextAttribute ( java.lang.String ( ) ) ; org.springframework.web.servlet.view.AbstractUrlBasedView . setAttributesMap ( java.util.Map<java.lang.String,java.lang.Object> ( ) ) ; java.lang.Boolean java.lang.Boolean = java.lang.Boolean ( ) ; if ( java.lang.Boolean != null ) { org.springframework.web.servlet.view.AbstractUrlBasedView . setExposePathVariables ( java.lang.Boolean ) ; } java.lang.Boolean java.lang.Boolean = java.lang.Boolean ( ) ; if ( java.lang.Boolean != null ) { org.springframework.web.servlet.view.AbstractUrlBasedView . setExposeContextBeansAsAttributes ( java.lang.Boolean ) ; } java.lang.String [] java.lang.String[] = java.lang.String[] ( ) ; if ( java.lang.String[] != null ) { org.springframework.web.servlet.view.AbstractUrlBasedView . setExposedContextBeanNames ( java.lang.String[] ) ; } return org.springframework.web.servlet.view.AbstractUrlBasedView ; }  <METHOD_END>
