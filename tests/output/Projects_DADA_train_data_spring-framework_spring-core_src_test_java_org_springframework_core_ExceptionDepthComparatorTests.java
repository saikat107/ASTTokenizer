<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > java.lang.Class<? extends java.lang.Throwable> = java.lang.Class<? extends java.lang.Throwable> ( org.springframework.core.ExceptionDepthComparatorTests.TargetException .class , org.springframework.core.ExceptionDepthComparatorTests.SameDepthException .class ) ; assertEquals ( org.springframework.core.ExceptionDepthComparatorTests.TargetException .class , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > java.lang.Class<? extends java.lang.Throwable> = java.lang.Class<? extends java.lang.Throwable> ( org.springframework.core.ExceptionDepthComparatorTests.SameDepthException .class , org.springframework.core.ExceptionDepthComparatorTests.TargetException .class ) ; assertEquals ( org.springframework.core.ExceptionDepthComparatorTests.TargetException .class , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > java.lang.Class<? extends java.lang.Throwable> = java.lang.Class<? extends java.lang.Throwable> ( org.springframework.core.ExceptionDepthComparatorTests.LowestDepthException .class , org.springframework.core.ExceptionDepthComparatorTests.TargetException .class ) ; assertEquals ( org.springframework.core.ExceptionDepthComparatorTests.TargetException .class , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > java.lang.Class<? extends java.lang.Throwable> = java.lang.Class<? extends java.lang.Throwable> ( org.springframework.core.ExceptionDepthComparatorTests.TargetException .class , org.springframework.core.ExceptionDepthComparatorTests.LowestDepthException .class ) ; assertEquals ( org.springframework.core.ExceptionDepthComparatorTests.TargetException .class , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > java.lang.Class<? extends java.lang.Throwable> = java.lang.Class<? extends java.lang.Throwable> ( org.springframework.core.ExceptionDepthComparatorTests.NoDepthException .class , org.springframework.core.ExceptionDepthComparatorTests.TargetException .class ) ; assertEquals ( org.springframework.core.ExceptionDepthComparatorTests.TargetException .class , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > java.lang.Class<? extends java.lang.Throwable> = java.lang.Class<? extends java.lang.Throwable> ( org.springframework.core.ExceptionDepthComparatorTests.NoDepthException .class , org.springframework.core.ExceptionDepthComparatorTests.HighestDepthException .class ) ; assertEquals ( org.springframework.core.ExceptionDepthComparatorTests.HighestDepthException .class , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > java.lang.Class<? extends java.lang.Throwable> = java.lang.Class<? extends java.lang.Throwable> ( org.springframework.core.ExceptionDepthComparatorTests.HighestDepthException .class , org.springframework.core.ExceptionDepthComparatorTests.NoDepthException .class ) ; assertEquals ( org.springframework.core.ExceptionDepthComparatorTests.HighestDepthException .class , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > java.lang.Class<? extends java.lang.Throwable> = java.lang.Class<? extends java.lang.Throwable> ( org.springframework.core.ExceptionDepthComparatorTests.HighestDepthException .class , org.springframework.core.ExceptionDepthComparatorTests.LowestDepthException .class ) ; assertEquals ( org.springframework.core.ExceptionDepthComparatorTests.LowestDepthException .class , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > java.lang.Class<? extends java.lang.Throwable> = java.lang.Class<? extends java.lang.Throwable> ( org.springframework.core.ExceptionDepthComparatorTests.LowestDepthException .class , org.springframework.core.ExceptionDepthComparatorTests.HighestDepthException .class ) ; assertEquals ( org.springframework.core.ExceptionDepthComparatorTests.LowestDepthException .class , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > java.lang.Class<? extends java.lang.Throwable> ( java.lang.Class<? extends java.lang.Throwable> < ? extends java.lang.Throwable > ... java.lang.Class<? extends java.lang.Throwable>[] ) { return ExceptionDepthComparator . findClosestMatch ( java.util.Arrays . java.util.List<java.lang.Class<? extends java.lang.Throwable>> ( java.lang.Class<? extends java.lang.Throwable>[] ) , new org.springframework.core.ExceptionDepthComparatorTests.TargetException ( ) ) ; }  <METHOD_END>
