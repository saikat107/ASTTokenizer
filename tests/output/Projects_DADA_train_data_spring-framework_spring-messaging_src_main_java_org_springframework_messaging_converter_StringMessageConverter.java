<METHOD_START> public void ( ) { this( java.nio.charset.StandardCharsets . java.nio.charset.Charset ); }  <METHOD_END>
<METHOD_START> public void ( java.nio.charset.Charset java.nio.charset.Charset ) { super( new MimeType ( STRING , STRING , java.nio.charset.Charset ) ); this . java.nio.charset.Charset = java.nio.charset.Charset ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return ( java.lang.String .class == java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( Message < ? > org.springframework.messaging.converter.Message<?> , java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Object java.lang.Object ) { java.nio.charset.Charset java.nio.charset.Charset = java.nio.charset.Charset ( getMimeType ( org.springframework.messaging.converter.Message<> . getHeaders ( ) ) ) ; java.lang.Object java.lang.Object = org.springframework.messaging.converter.Message<> . getPayload ( ) ; return ( java.lang.Object instanceof java.lang.String ? java.lang.Object : new java.lang.String ( ( byte [] ) java.lang.Object , java.nio.charset.Charset ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , MessageHeaders org.springframework.messaging.converter.MessageHeaders , java.lang.Object java.lang.Object ) { if ( byte [] .class == getSerializedPayloadClass ( ) ) { java.nio.charset.Charset java.nio.charset.Charset = java.nio.charset.Charset ( getMimeType ( org.springframework.messaging.converter.MessageHeaders ) ) ; java.lang.Object = ( ( java.lang.String ) java.lang.Object ) . byte[] ( java.nio.charset.Charset ) ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> private java.nio.charset.Charset java.nio.charset.Charset ( MimeType org.springframework.messaging.converter.MimeType ) { if ( org.springframework.messaging.converter.MimeType != null && org.springframework.messaging.converter.MimeType . getCharset ( ) != null ) { return org.springframework.messaging.converter.MimeType . getCharset ( ) ; } else { return this . java.nio.charset.Charset ; } }  <METHOD_END>
