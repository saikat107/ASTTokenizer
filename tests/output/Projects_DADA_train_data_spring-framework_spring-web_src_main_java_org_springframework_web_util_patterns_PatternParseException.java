<METHOD_START> public void ( int int , char [] char[] , PatternMessage org.springframework.web.util.patterns.PatternMessage , java.lang.Object ... java.lang.Object[] ) { super( org.springframework.web.util.patterns.PatternMessage . formatMessage ( java.lang.Object[] ) ); this . int = int ; this . char[] = char[] ; this . org.springframework.web.util.patterns.PatternMessage = org.springframework.web.util.patterns.PatternMessage ; this . java.lang.Object[] = java.lang.Object[] ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Throwable java.lang.Throwable , int int , char [] char[] , PatternMessage org.springframework.web.util.patterns.PatternMessage , java.lang.Object ... java.lang.Object[] ) { super( org.springframework.web.util.patterns.PatternMessage . formatMessage ( java.lang.Object[] ) , java.lang.Throwable ); this . int = int ; this . char[] = char[] ; this . org.springframework.web.util.patterns.PatternMessage = org.springframework.web.util.patterns.PatternMessage ; this . java.lang.Object[] = java.lang.Object[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.web.util.patterns.PatternMessage . formatMessage ( this . java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( char[] ) . java.lang.StringBuilder ( '\n' ) ; for ( int int = NUMBER ; int < int ; int ++ ) { java.lang.StringBuilder . java.lang.StringBuilder ( ' ' ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ( ) ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object [] java.lang.Object[] ( ) { return this . java.lang.Object[] ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.util.patterns.PatternMessage org.springframework.web.util.patterns.PatternMessage ( ) { return org.springframework.web.util.patterns.PatternMessage ; }  <METHOD_END>
