<METHOD_START> @ Before public void void ( ) { org.springframework.data.mongodb.config.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.data.mongodb.config.BeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.data.mongodb.config.DefaultListableBeanFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.config.BeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( STRING ) ) ; assertThat ( org.springframework.data.mongodb.config.DefaultListableBeanFactory . getBean ( BeanNames . VALIDATING_EVENT_LISTENER_BEAN_NAME ) , is ( not ( nullValue ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.config.BeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( STRING ) ) ; assertThat ( org.springframework.data.mongodb.config.DefaultListableBeanFactory . getBean ( BeanNames . VALIDATING_EVENT_LISTENER_BEAN_NAME ) , is ( not ( nullValue ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = NoSuchBeanDefinitionException .class ) public void void ( ) { org.springframework.data.mongodb.config.BeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( STRING ) ) ; org.springframework.data.mongodb.config.DefaultListableBeanFactory . getBean ( BeanNames . VALIDATING_EVENT_LISTENER_BEAN_NAME ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.config.BeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( STRING ) ) ; assertThat ( org.springframework.data.mongodb.config.DefaultListableBeanFactory . getBean ( BeanNames . VALIDATING_EVENT_LISTENER_BEAN_NAME ) , is ( not ( nullValue ( ) ) ) ) ; }  <METHOD_END>
