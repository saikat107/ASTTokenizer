<METHOD_START> void ( javax.annotation.processing.ProcessingEnvironment javax.annotation.processing.ProcessingEnvironment ) { this . javax.annotation.processing.ProcessingEnvironment = javax.annotation.processing.ProcessingEnvironment ; javax.lang.model.util.Types javax.lang.model.util.Types = javax.annotation.processing.ProcessingEnvironment . javax.lang.model.util.Types ( ) ; this . javax.lang.model.type.TypeMirror = javax.lang.model.type.TypeMirror ( javax.lang.model.util.Types , java.util.Collection .class , NUMBER ) ; this . javax.lang.model.type.TypeMirror = javax.lang.model.type.TypeMirror ( javax.lang.model.util.Types , java.util.Map .class , NUMBER ) ; }  <METHOD_END>
<METHOD_START> private javax.lang.model.type.TypeMirror javax.lang.model.type.TypeMirror ( javax.lang.model.util.Types javax.lang.model.util.Types , java.lang.Class<?> < ? > java.lang.Class<?> , int int ) { javax.lang.model.type.TypeMirror [] javax.lang.model.type.TypeMirror[] = new javax.lang.model.type.TypeMirror [ int ] ; for ( int int = NUMBER ; int < javax.lang.model.type.TypeMirror[] . int ; int ++ ) { javax.lang.model.type.TypeMirror[] [ int ] = javax.lang.model.util.Types . javax.lang.model.type.WildcardType ( null , null ) ; } javax.lang.model.element.TypeElement javax.lang.model.element.TypeElement = this . javax.annotation.processing.ProcessingEnvironment . javax.lang.model.util.Elements ( ) . javax.lang.model.element.TypeElement ( java.lang.Class<> . java.lang.String ( ) ) ; try { return javax.lang.model.util.Types . javax.lang.model.type.DeclaredType ( javax.lang.model.element.TypeElement , javax.lang.model.type.TypeMirror[] ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { return javax.lang.model.util.Types . javax.lang.model.type.DeclaredType ( javax.lang.model.element.TypeElement ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( javax.lang.model.element.Element javax.lang.model.element.Element ) { if ( javax.lang.model.element.Element == null ) { return null ; } javax.lang.model.element.TypeElement javax.lang.model.element.TypeElement = javax.lang.model.element.TypeElement ( javax.lang.model.element.Element . javax.lang.model.type.TypeMirror ( ) ) ; if ( javax.lang.model.element.TypeElement != null ) { return java.lang.String ( javax.lang.model.element.TypeElement ) + STRING + ( ( javax.lang.model.type.DeclaredType ) javax.lang.model.element.Element . javax.lang.model.type.TypeMirror ( ) ) . javax.lang.model.element.Element ( ) . javax.lang.model.element.Name ( ) . java.lang.String ( ) ; } if ( javax.lang.model.element.Element instanceof javax.lang.model.element.TypeElement ) { return ( ( javax.lang.model.element.TypeElement ) javax.lang.model.element.Element ) . javax.lang.model.element.Name ( ) . java.lang.String ( ) ; } throw new java.lang.IllegalStateException ( STRING + javax.lang.model.element.Element ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( javax.lang.model.type.TypeMirror javax.lang.model.type.TypeMirror ) { if ( javax.lang.model.type.TypeMirror == null ) { return null ; } java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<?> ( javax.lang.model.type.TypeMirror ) ; if ( java.lang.Class<> != null ) { return java.lang.Class<> . java.lang.String ( ) ; } javax.lang.model.element.TypeElement javax.lang.model.element.TypeElement = javax.lang.model.element.TypeElement ( javax.lang.model.type.TypeMirror ) ; if ( javax.lang.model.element.TypeElement != null ) { return java.lang.String ( javax.lang.model.element.TypeElement ) + STRING + ( ( javax.lang.model.type.DeclaredType ) javax.lang.model.type.TypeMirror ) . javax.lang.model.element.Element ( ) . javax.lang.model.element.Name ( ) . java.lang.String ( ) ; } return javax.lang.model.type.TypeMirror . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private javax.lang.model.element.TypeElement javax.lang.model.element.TypeElement ( javax.lang.model.type.TypeMirror javax.lang.model.type.TypeMirror ) { if ( javax.lang.model.type.TypeMirror instanceof javax.lang.model.type.DeclaredType ) { javax.lang.model.type.DeclaredType javax.lang.model.type.DeclaredType = ( javax.lang.model.type.DeclaredType ) javax.lang.model.type.TypeMirror ; javax.lang.model.element.Element javax.lang.model.element.Element = javax.lang.model.type.DeclaredType . javax.lang.model.element.Element ( ) . javax.lang.model.element.Element ( ) ; if ( javax.lang.model.element.Element != null && javax.lang.model.element.Element instanceof javax.lang.model.element.TypeElement ) { return ( javax.lang.model.element.TypeElement ) javax.lang.model.element.Element ; } } return null ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( javax.lang.model.type.TypeMirror javax.lang.model.type.TypeMirror ) { return this . javax.annotation.processing.ProcessingEnvironment . javax.lang.model.util.Types ( ) . boolean ( javax.lang.model.type.TypeMirror , this . javax.lang.model.type.TypeMirror ) || this . javax.annotation.processing.ProcessingEnvironment . javax.lang.model.util.Types ( ) . boolean ( javax.lang.model.type.TypeMirror , this . javax.lang.model.type.TypeMirror ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( javax.lang.model.element.Element javax.lang.model.element.Element , javax.lang.model.element.TypeElement javax.lang.model.element.TypeElement ) { if ( javax.lang.model.element.Element == null || javax.lang.model.element.TypeElement == null ) { return false ; } if ( javax.lang.model.element.Element . boolean ( javax.lang.model.element.TypeElement ) ) { return true ; } return boolean ( javax.lang.model.element.Element . javax.lang.model.element.Element ( ) , javax.lang.model.element.TypeElement ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( javax.lang.model.element.Element javax.lang.model.element.Element ) { java.lang.String java.lang.String = ( javax.lang.model.element.Element == null ? null : this . javax.annotation.processing.ProcessingEnvironment . javax.lang.model.util.Elements ( ) . java.lang.String ( javax.lang.model.element.Element ) ) ; if ( java.lang.String != null ) { java.lang.String = java.lang.String . java.lang.String ( ) ; } return ( STRING . boolean ( java.lang.String ) ? null : java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public javax.lang.model.type.TypeMirror javax.lang.model.type.TypeMirror ( javax.lang.model.type.TypeMirror javax.lang.model.type.TypeMirror ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.lang.Class<?> ( javax.lang.model.type.TypeMirror ) ; if ( java.lang.Class<> != null ) { return this . javax.annotation.processing.ProcessingEnvironment . javax.lang.model.util.Elements ( ) . javax.lang.model.element.TypeElement ( java.lang.Class<> . java.lang.String ( ) ) . javax.lang.model.type.TypeMirror ( ) ; } javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind = javax.lang.model.type.TypeKind ( javax.lang.model.type.TypeMirror ) ; if ( javax.lang.model.type.TypeKind != null ) { return this . javax.annotation.processing.ProcessingEnvironment . javax.lang.model.util.Types ( ) . javax.lang.model.type.PrimitiveType ( javax.lang.model.type.TypeKind ) ; } return null ; }  <METHOD_END>
<METHOD_START> private java.lang.Class<?> < ? > java.lang.Class<?> ( javax.lang.model.type.TypeMirror javax.lang.model.type.TypeMirror ) { return java.util.Map<javax.lang.model.type.TypeKind,java.lang.Class<?>> . java.lang.Class<?> ( javax.lang.model.type.TypeMirror . javax.lang.model.type.TypeKind ( ) ) ; }  <METHOD_END>
<METHOD_START> private javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind ( javax.lang.model.type.TypeMirror javax.lang.model.type.TypeMirror ) { return java.util.Map<java.lang.String,javax.lang.model.type.TypeKind> . javax.lang.model.type.TypeKind ( javax.lang.model.type.TypeMirror . java.lang.String ( ) ) ; }  <METHOD_END>
