<METHOD_START> @ java.lang.Override public org.springframework.transaction.annotation.TransactionAttribute org.springframework.transaction.annotation.TransactionAttribute ( java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ) { javax . javax.ejb . javax.ejb javax.ejb.TransactionAttribute = java.lang.reflect.AnnotatedElement . T ( javax . javax.ejb . javax.ejb .class ) ; if ( javax.ejb.TransactionAttribute != null ) { return org.springframework.transaction.annotation.TransactionAttribute ( javax.ejb.TransactionAttribute ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> public org.springframework.transaction.annotation.TransactionAttribute org.springframework.transaction.annotation.TransactionAttribute ( javax . javax.ejb . javax.ejb javax.ejb.TransactionAttribute ) { return new org.springframework.transaction.annotation.Ejb3TransactionAnnotationParser.Ejb3TransactionAttribute ( javax.ejb.TransactionAttribute . value ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( this == java.lang.Object || java.lang.Object instanceof org.springframework.transaction.annotation.Ejb3TransactionAnnotationParser ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.springframework.transaction.annotation.Ejb3TransactionAnnotationParser .class . int ( ) ; }  <METHOD_END>
<METHOD_START> public void ( TransactionAttributeType org.springframework.transaction.annotation.TransactionAttributeType ) { setPropagationBehaviorName ( PREFIX_PROPAGATION + org.springframework.transaction.annotation.TransactionAttributeType . name ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Throwable java.lang.Throwable ) { ApplicationException org.springframework.transaction.annotation.ApplicationException = java.lang.Throwable . java.lang.Class<? extends java.lang.Throwable> ( ) . A ( ApplicationException .class ) ; return ( org.springframework.transaction.annotation.ApplicationException != null ? org.springframework.transaction.annotation.ApplicationException . rollback ( ) : super. rollbackOn ( java.lang.Throwable ) ) ; }  <METHOD_END>
