<METHOD_START> public void ( java.lang.String java.lang.String , Endpoint < ? > org.springframework.boot.actuate.endpoint.jmx.Endpoint<?> , ObjectMapper org.springframework.boot.actuate.endpoint.jmx.ObjectMapper ) { super( java.lang.String , org.springframework.boot.actuate.endpoint.jmx.Endpoint<> , org.springframework.boot.actuate.endpoint.jmx.ObjectMapper ); }  <METHOD_END>
<METHOD_START> @ ManagedAttribute ( description = STRING ) public java.lang.Object java.lang.Object ( ) { return convert ( org.springframework.boot.actuate.endpoint.jmx.LoggersEndpoint ( ) . invoke ( ) ) ; }  <METHOD_END>
<METHOD_START> @ ManagedOperation ( description = STRING ) public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { return convert ( org.springframework.boot.actuate.endpoint.jmx.LoggersEndpoint ( ) . invoke ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ ManagedOperation ( description = STRING ) public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; LogLevel org.springframework.boot.actuate.endpoint.jmx.LogLevel = LogLevel . valueOf ( java.lang.String . java.lang.String ( ) ) ; org.springframework.boot.actuate.endpoint.jmx.LoggersEndpoint ( ) . setLogLevel ( java.lang.String , org.springframework.boot.actuate.endpoint.jmx.LogLevel ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.actuate.endpoint.jmx.LoggersEndpoint org.springframework.boot.actuate.endpoint.jmx.LoggersEndpoint ( ) { return ( LoggersEndpoint ) super. getEndpoint ( ) ; }  <METHOD_END>
