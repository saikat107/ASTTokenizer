<METHOD_START> @ Primary @ Bean ( name = { STRING , STRING } ) public org.springframework.boot.autoconfigure.jms.activemq.ConnectionFactory org.springframework.boot.autoconfigure.jms.activemq.ConnectionFactory ( ActiveMQProperties org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties , XAConnectionFactoryWrapper org.springframework.boot.autoconfigure.jms.activemq.XAConnectionFactoryWrapper ) throws java.lang.Exception { ActiveMQXAConnectionFactory org.springframework.boot.autoconfigure.jms.activemq.ActiveMQXAConnectionFactory = new ActiveMQConnectionFactoryFactory ( org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties ) . createConnectionFactory ( ActiveMQXAConnectionFactory .class ) ; return org.springframework.boot.autoconfigure.jms.activemq.XAConnectionFactoryWrapper . wrapConnectionFactory ( org.springframework.boot.autoconfigure.jms.activemq.ActiveMQXAConnectionFactory ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ ConditionalOnProperty ( prefix = STRING , name = STRING , havingValue = STRING , matchIfMissing = true ) public org.springframework.boot.autoconfigure.jms.activemq.ActiveMQConnectionFactory org.springframework.boot.autoconfigure.jms.activemq.ActiveMQConnectionFactory ( ActiveMQProperties org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties ) { return new ActiveMQConnectionFactoryFactory ( org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties ) . createConnectionFactory ( ActiveMQConnectionFactory .class ) ; }  <METHOD_END>
