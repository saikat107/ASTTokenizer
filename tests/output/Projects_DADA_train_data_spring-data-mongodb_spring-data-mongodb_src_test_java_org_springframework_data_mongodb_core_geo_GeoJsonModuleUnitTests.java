<METHOD_START> @ Before public void void ( ) { org.springframework.data.mongodb.core.geo.ObjectMapper = new ObjectMapper ( ) ; org.springframework.data.mongodb.core.geo.ObjectMapper . registerModule ( new GeoJsonModule ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.data.mongodb.core.geo.JsonParseException , org.springframework.data.mongodb.core.geo.JsonMappingException , java.io.IOException { java.lang.String java.lang.String = STRING ; assertThat ( org.springframework.data.mongodb.core.geo.ObjectMapper . readValue ( java.lang.String , GeoJsonPoint .class ) , is ( new GeoJsonPoint ( NUMBER , NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.data.mongodb.core.geo.JsonParseException , org.springframework.data.mongodb.core.geo.JsonMappingException , java.io.IOException { java.lang.String java.lang.String = STRING ; assertThat ( org.springframework.data.mongodb.core.geo.ObjectMapper . readValue ( java.lang.String , GeoJsonLineString .class ) , is ( new GeoJsonLineString ( java.util.Arrays . java.util.List ( new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.data.mongodb.core.geo.JsonParseException , org.springframework.data.mongodb.core.geo.JsonMappingException , java.io.IOException { java.lang.String java.lang.String = STRING ; assertThat ( org.springframework.data.mongodb.core.geo.ObjectMapper . readValue ( java.lang.String , GeoJsonLineString .class ) , is ( new GeoJsonMultiPoint ( java.util.Arrays . java.util.List ( new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) org.springframework.data.mongodb.core.geo.JsonParseException , org.springframework.data.mongodb.core.geo.JsonMappingException , java.io.IOException { java.lang.String java.lang.String = STRING ; assertThat ( org.springframework.data.mongodb.core.geo.ObjectMapper . readValue ( java.lang.String , GeoJsonMultiLineString .class ) , is ( new GeoJsonMultiLineString ( java.util.Arrays . java.util.List ( new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) ) , java.util.Arrays . java.util.List ( new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.data.mongodb.core.geo.JsonParseException , org.springframework.data.mongodb.core.geo.JsonMappingException , java.io.IOException { java.lang.String java.lang.String = STRING ; assertThat ( org.springframework.data.mongodb.core.geo.ObjectMapper . readValue ( java.lang.String , GeoJsonPolygon .class ) , is ( new GeoJsonPolygon ( java.util.Arrays . java.util.List ( new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) org.springframework.data.mongodb.core.geo.JsonParseException , org.springframework.data.mongodb.core.geo.JsonMappingException , java.io.IOException { java.lang.String java.lang.String = STRING + STRING + STRING + STRING + STRING ; assertThat ( org.springframework.data.mongodb.core.geo.ObjectMapper . readValue ( java.lang.String , GeoJsonMultiPolygon .class ) , is ( new GeoJsonMultiPolygon ( java.util.Arrays . java.util.List<T> ( new GeoJsonPolygon ( java.util.Arrays . java.util.List ( new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) ) ) , new GeoJsonPolygon ( java.util.Arrays . java.util.List ( new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) ) ) , new GeoJsonPolygon ( java.util.Arrays . java.util.List ( new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) , new Point ( NUMBER , NUMBER ) ) ) ) ) ) ) ; }  <METHOD_END>
