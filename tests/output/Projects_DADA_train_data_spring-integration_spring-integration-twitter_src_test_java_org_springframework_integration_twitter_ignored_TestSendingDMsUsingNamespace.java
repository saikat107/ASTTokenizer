<METHOD_START> @ Test @ Ignore public void void ( ) java.lang.Throwable { java.lang.String java.lang.String = STRING ; MessageBuilder < java.lang.String > org.springframework.integration.twitter.ignored.MessageBuilder<java.lang.String> = MessageBuilder . withPayload ( STRING + java.lang.System . long ( ) ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.twitter.ignored.MessageBuilder<java.lang.String> . setHeader ( TwitterHeaders . DM_TARGET_USER_ID , java.lang.String ) ; } org.springframework.integration.twitter.ignored.MessageChannel . send ( org.springframework.integration.twitter.ignored.MessageBuilder<java.lang.String> . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ Ignore public void void ( ) java.lang.Throwable { java.lang.String java.lang.String = STRING ; MessageBuilder < java.lang.String > org.springframework.integration.twitter.ignored.MessageBuilder<java.lang.String> = MessageBuilder . withPayload ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.twitter.ignored.MessageBuilder<java.lang.String> . setHeader ( TwitterHeaders . DM_TARGET_USER_ID , java.lang.String ) ; } org.springframework.integration.twitter.ignored.MessageChannel . send ( org.springframework.integration.twitter.ignored.MessageBuilder<java.lang.String> . build ( ) ) ; }  <METHOD_END>
