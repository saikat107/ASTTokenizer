<METHOD_START> @ Test public void void ( ) java.lang.Exception { Sanitizer org.springframework.boot.actuate.endpoint.Sanitizer = new Sanitizer ( ) ; assertThat ( org.springframework.boot.actuate.endpoint.Sanitizer . sanitize ( STRING , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.actuate.endpoint.Sanitizer . sanitize ( STRING , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.actuate.endpoint.Sanitizer . sanitize ( STRING , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.actuate.endpoint.Sanitizer . sanitize ( STRING , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.actuate.endpoint.Sanitizer . sanitize ( STRING , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.actuate.endpoint.Sanitizer . sanitize ( STRING , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.actuate.endpoint.Sanitizer . sanitize ( STRING , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.actuate.endpoint.Sanitizer . sanitize ( STRING , STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Sanitizer org.springframework.boot.actuate.endpoint.Sanitizer = new Sanitizer ( STRING ) ; assertThat ( org.springframework.boot.actuate.endpoint.Sanitizer . sanitize ( STRING , STRING ) ) . isEqualTo ( STRING ) ; assertThat ( org.springframework.boot.actuate.endpoint.Sanitizer . sanitize ( STRING , STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
