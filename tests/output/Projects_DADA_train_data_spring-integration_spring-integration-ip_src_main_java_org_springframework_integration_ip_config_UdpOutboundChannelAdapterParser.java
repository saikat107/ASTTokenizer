<METHOD_START> protected org.springframework.integration.ip.config.AbstractBeanDefinition org.springframework.integration.ip.config.AbstractBeanDefinition ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.ip.config.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.ip.config.BeanDefinitionBuilder = org.springframework.integration.ip.config.BeanDefinitionBuilder ( org.w3c.dom.Element , org.springframework.integration.ip.config.ParserContext ) ; IpAdapterParserUtils . addCommonSocketOptions ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element ) ; return org.springframework.integration.ip.config.BeanDefinitionBuilder . getBeanDefinition ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.ip.config.BeanDefinitionBuilder org.springframework.integration.ip.config.BeanDefinitionBuilder ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.ip.config.ParserContext ) { BeanDefinitionBuilder org.springframework.integration.ip.config.BeanDefinitionBuilder ; java.lang.String java.lang.String = IpAdapterParserUtils . getMulticast ( org.w3c.dom.Element ) ; if ( java.lang.String . boolean ( STRING ) ) { org.springframework.integration.ip.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( MulticastSendingMessageHandler .class ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . MIN_ACKS_SUCCESS , STRING ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . TIME_TO_LIVE , STRING ) ; } else { org.springframework.integration.ip.config.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( UnicastSendingMessageHandler .class ) ; } IpAdapterParserUtils . addDestinationConfigToConstructor ( org.w3c.dom.Element , org.springframework.integration.ip.config.BeanDefinitionBuilder , org.springframework.integration.ip.config.ParserContext ) ; IpAdapterParserUtils . addConstructorValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . CHECK_LENGTH ) ; IpAdapterParserUtils . addConstructorValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . ACK ) ; IpAdapterParserUtils . addConstructorValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . ACK_HOST ) ; IpAdapterParserUtils . addConstructorValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . ACK_PORT ) ; IpAdapterParserUtils . addConstructorValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . ACK_TIMEOUT ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( IpAdapterParserUtils . ACK ) ; if ( java.lang.String . boolean ( STRING ) ) { if ( ! StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( IpAdapterParserUtils . ACK_HOST ) ) || ! StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( IpAdapterParserUtils . ACK_PORT ) ) || ! StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( IpAdapterParserUtils . ACK_TIMEOUT ) ) ) { org.springframework.integration.ip.config.ParserContext . getReaderContext ( ) . error ( STRING + IpAdapterParserUtils . ACK + STRING + IpAdapterParserUtils . ACK_HOST + STRING + IpAdapterParserUtils . ACK_PORT + STRING + IpAdapterParserUtils . ACK_TIMEOUT + STRING , org.w3c.dom.Element ) ; } } IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . RECEIVE_BUFFER_SIZE ) ; IntegrationNamespaceUtils . setReferenceIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , IpAdapterParserUtils . TASK_EXECUTOR ) ; IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.ip.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , STRING ) ; return org.springframework.integration.ip.config.BeanDefinitionBuilder ; }  <METHOD_END>
