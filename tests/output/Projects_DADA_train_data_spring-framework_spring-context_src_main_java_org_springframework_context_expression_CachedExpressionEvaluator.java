<METHOD_START> protected void ( SpelExpressionParser org.springframework.context.expression.SpelExpressionParser ) { Assert . notNull ( org.springframework.context.expression.SpelExpressionParser , STRING ) ; this . org.springframework.context.expression.SpelExpressionParser = org.springframework.context.expression.SpelExpressionParser ; }  <METHOD_END>
<METHOD_START> protected void ( ) { this( new SpelExpressionParser ( ) ); }  <METHOD_END>
<METHOD_START> protected org.springframework.context.expression.SpelExpressionParser org.springframework.context.expression.SpelExpressionParser ( ) { return this . org.springframework.context.expression.SpelExpressionParser ; }  <METHOD_END>
<METHOD_START> protected org.springframework.context.expression.ParameterNameDiscoverer org.springframework.context.expression.ParameterNameDiscoverer ( ) { return this . org.springframework.context.expression.ParameterNameDiscoverer ; }  <METHOD_END>
<METHOD_START> protected org.springframework.context.expression.Expression org.springframework.context.expression.Expression ( java.util.Map<org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey,org.springframework.context.expression.Expression> < org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey , Expression > java.util.Map<org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey,org.springframework.context.expression.Expression> , AnnotatedElementKey org.springframework.context.expression.AnnotatedElementKey , java.lang.String java.lang.String ) { org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey = org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey ( org.springframework.context.expression.AnnotatedElementKey , java.lang.String ) ; Expression org.springframework.context.expression.Expression = java.util.Map<org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey,org.springframework.context.expression.Expression> . get ( org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey ) ; if ( org.springframework.context.expression.Expression == null ) { org.springframework.context.expression.Expression = org.springframework.context.expression.SpelExpressionParser ( ) . parseExpression ( java.lang.String ) ; java.util.Map<org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey,org.springframework.context.expression.Expression> . put ( org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey , org.springframework.context.expression.Expression ) ; } return org.springframework.context.expression.Expression ; }  <METHOD_END>
<METHOD_START> private org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey ( AnnotatedElementKey org.springframework.context.expression.AnnotatedElementKey , java.lang.String java.lang.String ) { return new org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey ( org.springframework.context.expression.AnnotatedElementKey , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected void ( AnnotatedElementKey org.springframework.context.expression.AnnotatedElementKey , java.lang.String java.lang.String ) { this . org.springframework.context.expression.AnnotatedElementKey = org.springframework.context.expression.AnnotatedElementKey ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey ) ) { return false ; } org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey = ( org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey ) java.lang.Object ; return ( this . org.springframework.context.expression.AnnotatedElementKey . equals ( org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey . org.springframework.context.expression.AnnotatedElementKey ) && ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey . java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.context.expression.AnnotatedElementKey . hashCode ( ) + ( this . java.lang.String != null ? this . java.lang.String . int ( ) * NUMBER : NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . org.springframework.context.expression.AnnotatedElementKey + ( this . java.lang.String != null ? STRING + this . java.lang.String : STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey ) { int int = this . org.springframework.context.expression.AnnotatedElementKey . toString ( ) . compareTo ( org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey . org.springframework.context.expression.AnnotatedElementKey . toString ( ) ) ; if ( int == NUMBER && this . java.lang.String != null ) { int = this . java.lang.String . int ( org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey . java.lang.String ) ; } return int ; }  <METHOD_END>
