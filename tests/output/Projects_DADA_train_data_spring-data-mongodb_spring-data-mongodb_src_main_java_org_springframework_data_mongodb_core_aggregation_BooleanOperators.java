<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.BooleanOperators.BooleanOperatorFactory org.springframework.data.mongodb.core.aggregation.BooleanOperators.BooleanOperatorFactory ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.BooleanOperatorFactory ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.BooleanOperators.BooleanOperatorFactory org.springframework.data.mongodb.core.aggregation.BooleanOperators.BooleanOperatorFactory ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.BooleanOperatorFactory ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not . org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not . org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = null ; }  <METHOD_END>
<METHOD_START> public void ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; this . java.lang.String = null ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.BooleanOperators.And org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( ) . org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.BooleanOperators.And org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( ) . org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.BooleanOperators.And org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.BooleanOperators.And . org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( Fields . field ( java.lang.String ) ) : org.springframework.data.mongodb.core.aggregation.BooleanOperators.And . org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( ) . org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( ) . org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or . org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( Fields . field ( java.lang.String ) ) : org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or . org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not ( ) { return boolean ( ) ? org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not . org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not ( java.lang.String ) : org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not . org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return this . java.lang.String != null ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.BooleanOperators.And org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( java.lang.Object ... java.lang.Object[] ) { return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.BooleanOperators.And org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.BooleanOperators.And org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.BooleanOperators.And org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.And ( append ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<?> < ? > java.util.List<?> ) { super( java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( java.lang.Object ... java.lang.Object[] ) { Assert . notNull ( java.lang.Object[] , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( append ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( append ( Fields . field ( java.lang.String ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.Object , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.Or ( append ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.lang.Object ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not ( asFields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return new org.springframework.data.mongodb.core.aggregation.BooleanOperators.Not ( java.util.Collections . java.util.List ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
