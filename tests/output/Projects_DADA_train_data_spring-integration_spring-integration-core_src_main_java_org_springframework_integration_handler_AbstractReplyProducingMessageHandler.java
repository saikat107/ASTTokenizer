<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<org.springframework.integration.handler.Advice> < Advice > java.util.List<org.springframework.integration.handler.Advice> ) { Assert . notNull ( java.util.List<org.springframework.integration.handler.Advice> , STRING ) ; this . java.util.List<org.springframework.integration.handler.Advice> = java.util.List<org.springframework.integration.handler.Advice> ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . java.util.List<org.springframework.integration.handler.Advice> != null && this . java.util.List<org.springframework.integration.handler.Advice> . size ( ) > NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected final void void ( ) java.lang.Exception { super. onInit ( ) ; if ( ! CollectionUtils . isEmpty ( this . java.util.List<org.springframework.integration.handler.Advice> ) ) { ProxyFactory org.springframework.integration.handler.ProxyFactory = new ProxyFactory ( new org.springframework.integration.handler.AbstractReplyProducingMessageHandler.AdvisedRequestHandler ( ) ) ; boolean boolean = false ; for ( Advice org.springframework.integration.handler.Advice : this . java.util.List<org.springframework.integration.handler.Advice> ) { if ( ! ( org.springframework.integration.handler.Advice instanceof HandleMessageAdvice ) ) { org.springframework.integration.handler.ProxyFactory . addAdvice ( org.springframework.integration.handler.Advice ) ; boolean = true ; } } if ( boolean ) { this . org.springframework.integration.handler.AbstractReplyProducingMessageHandler.RequestHandler = ( org.springframework.integration.handler.AbstractReplyProducingMessageHandler.RequestHandler ) org.springframework.integration.handler.ProxyFactory . getProxy ( this . java.lang.ClassLoader ) ; } } void ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override protected final void void ( Message < ? > org.springframework.integration.handler.Message<?> ) { java.lang.Object java.lang.Object ; if ( this . org.springframework.integration.handler.AbstractReplyProducingMessageHandler.RequestHandler == null ) { java.lang.Object = java.lang.Object ( org.springframework.integration.handler.Message<> ) ; } else { java.lang.Object = java.lang.Object ( org.springframework.integration.handler.Message<> ) ; } if ( java.lang.Object != null ) { sendOutputs ( java.lang.Object , org.springframework.integration.handler.Message<> ) ; } else if ( this . boolean && ! isAsync ( ) ) { throw new ReplyRequiredException ( org.springframework.integration.handler.Message<> , STRING + getComponentName ( ) + STRING ) ; } else if ( ! isAsync ( ) && logger . isDebugEnabled ( ) ) { logger . debug ( STRING + this + STRING + org.springframework.integration.handler.Message<> ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.handler.Message<?> ) { return this . org.springframework.integration.handler.AbstractReplyProducingMessageHandler.RequestHandler . java.lang.Object ( org.springframework.integration.handler.Message<> ) ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.handler.Message<?> );  <METHOD_END>
<METHOD_START> java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.handler.Message<?> );  <METHOD_END>
<METHOD_START> @ java.lang.Override java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> org.springframework.integration.handler.AbstractReplyProducingMessageHandler org.springframework.integration.handler.AbstractReplyProducingMessageHandler ( )  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Message < ? > org.springframework.integration.handler.Message<?> ) { return org.springframework.integration.handler.AbstractReplyProducingMessageHandler .this . java.lang.Object ( org.springframework.integration.handler.Message<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.integration.handler.AbstractReplyProducingMessageHandler .this . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.handler.AbstractReplyProducingMessageHandler org.springframework.integration.handler.AbstractReplyProducingMessageHandler ( ) { return org.springframework.integration.handler.AbstractReplyProducingMessageHandler .this ; }  <METHOD_END>
