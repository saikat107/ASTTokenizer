<METHOD_START> @ java.lang.Override public void void ( ConfigurableApplicationContext org.springframework.boot.context.config.ConfigurableApplicationContext ) { ConfigurableEnvironment org.springframework.boot.context.config.ConfigurableEnvironment = org.springframework.boot.context.config.ConfigurableApplicationContext . getEnvironment ( ) ; java.util.List<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.List<java.lang.Class<?>> = java.util.List<java.lang.Class<?>> ( org.springframework.boot.context.config.ConfigurableEnvironment ) ; if ( ! java.util.List<java.lang.Class<?>> . boolean ( ) ) { void ( org.springframework.boot.context.config.ConfigurableApplicationContext , java.util.List<java.lang.Class<?>> ) ; } }  <METHOD_END>
<METHOD_START> private java.util.List<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.List<java.lang.Class<?>> ( ConfigurableEnvironment org.springframework.boot.context.config.ConfigurableEnvironment ) { java.lang.String java.lang.String = org.springframework.boot.context.config.ConfigurableEnvironment . getProperty ( java.lang.String ) ; java.util.List<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>> <> ( ) ; if ( StringUtils . hasLength ( java.lang.String ) ) { for ( java.lang.String java.lang.String : StringUtils . tokenizeToStringArray ( java.lang.String , STRING ) ) { java.util.List<java.lang.Class<?>> . boolean ( java.lang.Class<?> ( java.lang.String ) ) ; } } return java.util.List<java.lang.Class<?>> ; }  <METHOD_END>
<METHOD_START> private java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.String java.lang.String ) throws java.lang.LinkageError { try { java.lang.Class<?> < ? > java.lang.Class<?> = ClassUtils . forName ( java.lang.String , ClassUtils . getDefaultClassLoader ( ) ) ; Assert . isAssignable ( ApplicationContextInitializer .class , java.lang.Class<> ) ; return java.lang.Class<> ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { throw new ApplicationContextException ( STRING + java.lang.String + STRING , java.lang.ClassNotFoundException ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ConfigurableApplicationContext org.springframework.boot.context.config.ConfigurableApplicationContext , java.util.List<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.List<java.lang.Class<?>> ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.boot.context.config.ConfigurableApplicationContext . getClass ( ) ; java.util.List<org.springframework.boot.context.config.ApplicationContextInitializer<?>> < ApplicationContextInitializer < ? > > java.util.List<org.springframework.boot.context.config.ApplicationContextInitializer<?>> = new java.util.ArrayList<org.springframework.boot.context.config.ApplicationContextInitializer<?>> <> ( ) ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.util.List<java.lang.Class<?>> ) { java.util.List<org.springframework.boot.context.config.ApplicationContextInitializer<?>> . add ( org.springframework.boot.context.config.ApplicationContextInitializer<?> ( java.lang.Class<> , java.lang.Class<> ) ) ; } void ( org.springframework.boot.context.config.ConfigurableApplicationContext , java.util.List<org.springframework.boot.context.config.ApplicationContextInitializer<?>> ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.context.config.ApplicationContextInitializer<?> < ? > org.springframework.boot.context.config.ApplicationContextInitializer<?> ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Class<?> < ? > java.lang.Class<?> ) { java.lang.Class<?> < ? > java.lang.Class<?> = GenericTypeResolver . resolveTypeArgument ( java.lang.Class<> , ApplicationContextInitializer .class ) ; Assert . isAssignable ( java.lang.Class<> , java.lang.Class<> , java.lang.String . java.lang.String ( STRING + STRING + STRING + STRING , java.lang.Class<> . java.lang.String ( ) , java.lang.Class<> . java.lang.String ( ) , java.lang.Class<> . java.lang.String ( ) ) ) ; return ( ApplicationContextInitializer < ? > ) BeanUtils . instantiateClass ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) private void void ( ConfigurableApplicationContext org.springframework.boot.context.config.ConfigurableApplicationContext , java.util.List<org.springframework.boot.context.config.ApplicationContextInitializer<?>> < ApplicationContextInitializer < ? > > java.util.List<org.springframework.boot.context.config.ApplicationContextInitializer<?>> ) { java.util.Collections . void ( java.util.List<org.springframework.boot.context.config.ApplicationContextInitializer<?>> , new AnnotationAwareOrderComparator ( ) ) ; for ( ApplicationContextInitializer org.springframework.boot.context.config.ApplicationContextInitializer : java.util.List<org.springframework.boot.context.config.ApplicationContextInitializer<?>> ) { org.springframework.boot.context.config.ApplicationContextInitializer . initialize ( org.springframework.boot.context.config.ConfigurableApplicationContext ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
