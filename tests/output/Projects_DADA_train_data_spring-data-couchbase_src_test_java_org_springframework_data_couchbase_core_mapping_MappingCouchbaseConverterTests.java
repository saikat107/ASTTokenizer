<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( null , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertNull ( org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getId ( ) ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getExpiration ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = MappingException .class ) public void void ( ) { org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( STRING , new CouchbaseDocument ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = MappingException .class ) public void void ( ) { org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( true , new CouchbaseDocument ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = MappingException .class ) public void void ( ) { org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( NUMBER , new CouchbaseDocument ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = MappingException .class ) public void void ( ) { org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.EntityWithoutID ( STRING ) , new CouchbaseDocument ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringEntity ( STRING ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringEntity . java.lang.Class<? extends org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringEntity> ( ) . java.lang.String ( ) , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BaseEntity . java.lang.String , org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getId ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringEntity .class . java.lang.String ( ) ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , STRING ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringEntity . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.NumberEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.NumberEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.NumberEntity ( NUMBER ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.NumberEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.NumberEntity . java.lang.Class<? extends org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.NumberEntity> ( ) . java.lang.String ( ) , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BaseEntity . java.lang.String , org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getId ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.NumberEntity .class . java.lang.String ( ) ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , NUMBER ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.NumberEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.NumberEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.NumberEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.NumberEntity . long ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BooleanEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BooleanEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BooleanEntity ( true ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BooleanEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BooleanEntity . java.lang.Class<? extends org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BooleanEntity> ( ) . java.lang.String ( ) , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( true , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getId ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BooleanEntity .class . java.lang.String ( ) ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , true ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BooleanEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BooleanEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BooleanEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertTrue ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BooleanEntity . boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity ( STRING , NUMBER , - NUMBER , true ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity . java.lang.Class<? extends org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity> ( ) . java.lang.String ( ) , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( STRING , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( - NUMBER , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( true , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity .class . java.lang.String ( ) ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , STRING ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , NUMBER ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , - NUMBER ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , true ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity . java.lang.String ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity . int ) ; assertEquals ( - NUMBER , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity . double , NUMBER ) ; assertTrue ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MixedSimpleEntity . boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( STRING ) ; BasicCouchbasePersistentPropertyTests . BasicCouchbasePersistentPropertyTests BasicCouchbasePersistentPropertyTests.Beer = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( BasicCouchbasePersistentPropertyTests . BasicCouchbasePersistentPropertyTests .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( STRING , BasicCouchbasePersistentPropertyTests.Beer . getId ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity . java.lang.Class<? extends org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity> ( ) . java.lang.String ( ) , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity .class . java.lang.String ( ) ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , NUMBER ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertNull ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity . java.lang.String ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity . int ) ; assertNull ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.UninitializedEntity . java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) ; java.util.Map<java.lang.String,java.lang.Boolean> < java.lang.String , java.lang.Boolean > java.util.Map<java.lang.String,java.lang.Boolean> = new java.util.TreeMap<java.lang.String,java.lang.Boolean> < java.lang.String , java.lang.Boolean > ( ) ; java.util.Map<java.lang.Integer,java.lang.String> < java.lang.Integer , java.lang.String > java.util.Map<java.lang.Integer,java.lang.String> = new java.util.LinkedHashMap<java.lang.Integer,java.lang.String> < java.lang.Integer , java.lang.String > ( ) ; java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> < java.lang.String , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > > java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> = new java.util.HashMap<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> < java.lang.String , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > > ( ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( STRING , true ) ; java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> . java.util.Map<java.lang.String,java.lang.String> ( STRING , java.util.Map<java.lang.String,java.lang.String> ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity ( java.util.Map<java.lang.String,java.lang.String> , java.util.Map<java.lang.String,java.lang.Boolean> , java.util.Map<java.lang.Integer,java.lang.String> , java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) ; assertEquals ( java.util.Map<java.lang.String,java.lang.String> , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( java.util.Map<java.lang.String,java.lang.Boolean> , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( java.util.Map<java.lang.Integer,java.lang.String> , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , STRING ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , true ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity .class . java.lang.String ( ) ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( java.util.Map<java.lang.String,java.lang.String> , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity . java.util.Map<java.lang.String,java.lang.String> ) ; assertEquals ( java.util.Map<java.lang.String,java.lang.Boolean> , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity . java.util.Map<java.lang.String,java.lang.Boolean> ) ; assertEquals ( java.util.Map<java.lang.Integer,java.lang.String> , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity . java.util.Map<java.lang.Integer,java.lang.String> ) ; assertEquals ( java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.MapEntity . java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = new java.util.LinkedList<java.lang.Integer> < java.lang.Integer > ( ) ; java.util.List<java.util.List<java.lang.String>> < java.util.List<java.lang.String> < java.lang.String > > java.util.List<java.util.List<java.lang.String>> = new java.util.ArrayList<java.util.List<java.lang.String>> < java.util.List<java.lang.String> < java.lang.String > > ( ) ; java.util.List<java.lang.String> . boolean ( STRING ) ; java.util.List<java.lang.String> . boolean ( STRING ) ; java.util.List<java.util.List<java.lang.String>> . boolean ( java.util.List<java.lang.String> ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity ( java.util.List<java.lang.String> , java.util.List<java.lang.Integer> , java.util.List<java.util.List<java.lang.String>> ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) ; assertEquals ( java.util.List<java.lang.String> , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( java.util.List<java.lang.Integer> , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( java.util.List<java.util.List<java.lang.String>> , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity .class . java.lang.String ( ) ) ; CouchbaseList org.springframework.data.couchbase.core.mapping.CouchbaseList = new CouchbaseList ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseList . put ( STRING ) ; org.springframework.data.couchbase.core.mapping.CouchbaseList . put ( STRING ) ; CouchbaseList org.springframework.data.couchbase.core.mapping.CouchbaseList = new CouchbaseList ( ) ; CouchbaseList org.springframework.data.couchbase.core.mapping.CouchbaseList = new CouchbaseList ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseList . put ( org.springframework.data.couchbase.core.mapping.CouchbaseList ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseList ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseList ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseList ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity . java.util.List<java.lang.String> . int ( ) ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity . java.util.List<java.lang.Integer> . int ( ) ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity . java.util.List<java.util.List<java.lang.String>> . int ( ) ) ; assertEquals ( NUMBER , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ListEntity . java.util.List<java.util.List<java.lang.String>> . java.util.List<java.lang.String> ( NUMBER ) . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ; java.util.TreeSet<java.lang.Integer> < java.lang.Integer > java.util.TreeSet<java.lang.Integer> = new java.util.TreeSet<java.lang.Integer> < java.lang.Integer > ( ) ; java.util.Set<java.util.Set<java.lang.String>> < java.util.Set<java.lang.String> < java.lang.String > > java.util.Set<java.util.Set<java.lang.String>> = new java.util.HashSet<java.util.Set<java.lang.String>> < java.util.Set<java.lang.String> < java.lang.String > > ( ) ; java.util.Set<java.lang.String> . boolean ( STRING ) ; java.util.Set<java.lang.String> . boolean ( STRING ) ; java.util.Set<java.util.Set<java.lang.String>> . boolean ( java.util.Set<java.lang.String> ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SetEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SetEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SetEntity ( java.util.Set<java.lang.String> , java.util.TreeSet<java.lang.Integer> , java.util.Set<java.util.Set<java.lang.String>> ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SetEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) ; assertEquals ( java.util.Set<java.lang.String> . int ( ) , ( ( java.util.Collection ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . int ( ) ) ; assertEquals ( java.util.TreeSet<java.lang.Integer> . int ( ) , ( ( java.util.Collection ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . int ( ) ) ; assertEquals ( java.util.Set<java.util.Set<java.lang.String>> . int ( ) , ( ( java.util.Collection ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . int ( ) ) ; CouchbaseList org.springframework.data.couchbase.core.mapping.CouchbaseList = new CouchbaseList ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseList . put ( STRING ) ; org.springframework.data.couchbase.core.mapping.CouchbaseList . put ( STRING ) ; CouchbaseList org.springframework.data.couchbase.core.mapping.CouchbaseList = new CouchbaseList ( ) ; CouchbaseList org.springframework.data.couchbase.core.mapping.CouchbaseList = new CouchbaseList ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseList . put ( org.springframework.data.couchbase.core.mapping.CouchbaseList ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SetEntity .class . java.lang.String ( ) ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseList ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseList ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseList ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SetEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SetEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SetEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( java.util.Set<java.lang.String> , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SetEntity . java.util.Set<java.lang.String> ) ; assertEquals ( java.util.TreeSet<java.lang.Integer> , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SetEntity . java.util.Set<java.lang.Integer> ) ; assertEquals ( java.util.Set<java.util.Set<java.lang.String>> , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SetEntity . java.util.Set<java.util.Set<java.lang.String>> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; final java.lang.String java.lang.String = STRING ; final org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email ( java.lang.String ) ; java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email> < org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email > java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email> = new java.util.ArrayList<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email> < org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email > ( ) ; java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email> . boolean ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email , java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email> ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity . java.lang.Class<? extends org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity> ( ) . java.lang.String ( ) , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; assertEquals ( new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) { { java.lang.Object ( STRING , java.lang.String ) ; } } , java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity .class . java.lang.String ( ) ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , STRING ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; CouchbaseList org.springframework.data.couchbase.core.mapping.CouchbaseList = new CouchbaseList ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseList . put ( org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseList ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email . java.lang.String , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email . java.lang.String ) ; assertEquals ( java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email> . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email ( NUMBER ) . java.lang.String , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.ValueEntity . java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email> . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email ( NUMBER ) . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( ) ; java.util.List<java.lang.Object> . boolean ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BigDecimalToStringConverter . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BigDecimalToStringConverter ) ; java.util.List<java.lang.Object> . boolean ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringToBigDecimalConverter . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringToBigDecimalConverter ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . setCustomConversions ( new CustomConversions ( java.util.List<java.lang.Object> ) ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . afterPropertiesSet ( ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; final java.lang.String java.lang.String = STRING ; final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal ( java.lang.String ) ; final java.lang.String java.lang.String = STRING ; final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal ( java.lang.String ) ; java.util.List<java.math.BigDecimal> < java.math.BigDecimal > java.util.List<java.math.BigDecimal> = new java.util.ArrayList<java.math.BigDecimal> < java.math.BigDecimal > ( ) ; java.util.List<java.math.BigDecimal> . boolean ( java.math.BigDecimal ) ; java.util.List<java.math.BigDecimal> . boolean ( java.math.BigDecimal ) ; java.util.Map<java.lang.String,java.math.BigDecimal> < java.lang.String , java.math.BigDecimal > java.util.Map<java.lang.String,java.math.BigDecimal> = new java.util.HashMap<java.lang.String,java.math.BigDecimal> < java.lang.String , java.math.BigDecimal > ( ) ; java.util.Map<java.lang.String,java.math.BigDecimal> . java.math.BigDecimal ( STRING , java.math.BigDecimal ) ; java.util.Map<java.lang.String,java.math.BigDecimal> . java.math.BigDecimal ( STRING , java.math.BigDecimal ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity ( java.math.BigDecimal , java.util.List<java.math.BigDecimal> , java.util.Map<java.lang.String,java.math.BigDecimal> ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity .class . java.lang.String ( ) ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , java.lang.String ) ; CouchbaseList org.springframework.data.couchbase.core.mapping.CouchbaseList = new CouchbaseList ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseList . put ( java.lang.String ) ; org.springframework.data.couchbase.core.mapping.CouchbaseList . put ( java.lang.String ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseList ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , java.lang.String ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , java.lang.String ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) . toString ( ) , org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) . toString ( ) ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( java.math.BigDecimal , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity . java.math.BigDecimal ) ; assertEquals ( java.util.List<java.math.BigDecimal> . java.math.BigDecimal ( NUMBER ) , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity . java.util.List<java.math.BigDecimal> . java.math.BigDecimal ( NUMBER ) ) ; assertEquals ( java.util.List<java.math.BigDecimal> . java.math.BigDecimal ( NUMBER ) , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity . java.util.List<java.math.BigDecimal> . java.math.BigDecimal ( NUMBER ) ) ; assertEquals ( java.util.Map<java.lang.String,java.math.BigDecimal> . java.math.BigDecimal ( STRING ) , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity . java.util.Map<java.lang.String,java.math.BigDecimal> . java.math.BigDecimal ( STRING ) ) ; assertEquals ( java.util.Map<java.lang.String,java.math.BigDecimal> . java.math.BigDecimal ( STRING ) , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomEntity . java.util.Map<java.lang.String,java.math.BigDecimal> . java.math.BigDecimal ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( ) ; java.util.List<java.lang.Object> . boolean ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BigDecimalToStringConverter . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.BigDecimalToStringConverter ) ; java.util.List<java.lang.Object> . boolean ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringToBigDecimalConverter . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.StringToBigDecimalConverter ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . setCustomConversions ( new CustomConversions ( java.util.List<java.lang.Object> ) ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . afterPropertiesSet ( ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; final java.lang.String java.lang.String = STRING ; final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal ( java.lang.String ) ; final org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ( java.math.BigDecimal ) ; java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> < org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject > java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> = new java.util.ArrayList<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> < org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject > ( ) ; java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> . boolean ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ) ; java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> < java.lang.String , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject > java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> = new java.util.HashMap<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> < java.lang.String , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject > ( ) ; java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ) ; java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject , java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> , java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity .class . java.lang.String ( ) ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , java.lang.String ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; CouchbaseList org.springframework.data.couchbase.core.mapping.CouchbaseList = new CouchbaseList ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseList . put ( org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseList ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; org.springframework.data.couchbase.core.mapping.CouchbaseDocument . put ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) . toString ( ) , org.springframework.data.couchbase.core.mapping.CouchbaseDocument . export ( ) . toString ( ) ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject . java.math.BigDecimal , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject . java.math.BigDecimal ) ; assertEquals ( java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ( NUMBER ) . java.math.BigDecimal , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity . java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ( NUMBER ) . java.math.BigDecimal ) ; assertEquals ( java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ( STRING ) . java.math.BigDecimal , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity . java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ( STRING ) . java.math.BigDecimal ) ; assertEquals ( java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ( STRING ) . java.math.BigDecimal , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObjectEntity . java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ( STRING ) . java.math.BigDecimal ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Date java.util.Date = new java.util.Date ( ) ; java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; LocalDateTime org.springframework.data.couchbase.core.mapping.LocalDateTime = LocalDateTime . now ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.DateEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.DateEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.DateEntity ( java.util.Date , java.util.Calendar , org.springframework.data.couchbase.core.mapping.LocalDateTime ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.DateEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( java.util.Date . long ( ) , org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getPayload ( ) . get ( STRING ) ) ; assertEquals ( java.util.Calendar . long ( ) / NUMBER , org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getPayload ( ) . get ( STRING ) ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.LocalDateTime . toDate ( ) . getTime ( ) , org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getPayload ( ) . get ( STRING ) ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.DateEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.DateEntity = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . read ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.DateEntity .class , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( java.util.Date . long ( ) , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.DateEntity . java.util.Date . long ( ) ) ; assertEquals ( java.util.Calendar . long ( ) / NUMBER , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.DateEntity . java.util.Calendar . long ( ) / NUMBER ) ; assertEquals ( org.springframework.data.couchbase.core.mapping.LocalDateTime . toDate ( ) . getTime ( ) , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.DateEntity . org.springframework.data.couchbase.core.mapping.LocalDateTime . toDate ( ) . getTime ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SpringIdentified org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SpringIdentified = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SpringIdentified ( ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.SpringIdentified , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getId ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AmbiguousIdentified org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AmbiguousIdentified = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AmbiguousIdentified ( ) ; CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AmbiguousIdentified , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertEquals ( STRING , org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getId ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { try { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AnnotatedEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AnnotatedEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AnnotatedEntity ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . setEnableStrictFieldChecking ( true ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AnnotatedEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertTrue ( org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getId ( ) != null ) ; assertTrue ( org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getPayload ( ) . containsKey ( STRING ) ) ; assertFalse ( org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getPayload ( ) . containsKey ( STRING ) ) ; } finally { org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . setEnableStrictFieldChecking ( false ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { try { CouchbaseDocument org.springframework.data.couchbase.core.mapping.CouchbaseDocument = new CouchbaseDocument ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AnnotatedEntity org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AnnotatedEntity = new org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AnnotatedEntity ( ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . setEnableStrictFieldChecking ( false ) ; org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . write ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.AnnotatedEntity , org.springframework.data.couchbase.core.mapping.CouchbaseDocument ) ; assertTrue ( org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getId ( ) != null ) ; assertTrue ( org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getPayload ( ) . containsKey ( STRING ) ) ; assertTrue ( org.springframework.data.couchbase.core.mapping.CouchbaseDocument . getPayload ( ) . containsKey ( STRING ) ) ; } finally { org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverter . setEnableStrictFieldChecking ( false ) ; } }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int , double double , boolean boolean ) { this . java.lang.String = java.lang.String ; this . int = int ; this . double = double ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> , java.util.Map<java.lang.String,java.lang.Boolean> < java.lang.String , java.lang.Boolean > java.util.Map<java.lang.String,java.lang.Boolean> , java.util.Map<java.lang.Integer,java.lang.String> < java.lang.Integer , java.lang.String > java.util.Map<java.lang.Integer,java.lang.String> , java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> < java.lang.String , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > > java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> ) { this . java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.String,java.lang.String> ; this . java.util.Map<java.lang.String,java.lang.Boolean> = java.util.Map<java.lang.String,java.lang.Boolean> ; this . java.util.Map<java.lang.Integer,java.lang.String> = java.util.Map<java.lang.Integer,java.lang.String> ; this . java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> = java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.String>> ; }  <METHOD_END>
<METHOD_START> void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> , java.util.List<java.util.List<java.lang.String>> < java.util.List<java.lang.String> < java.lang.String > > java.util.List<java.util.List<java.lang.String>> ) { this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; this . java.util.List<java.lang.Integer> = java.util.List<java.lang.Integer> ; this . java.util.List<java.util.List<java.lang.String>> = java.util.List<java.util.List<java.lang.String>> ; }  <METHOD_END>
<METHOD_START> void ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> , java.util.Set<java.lang.Integer> < java.lang.Integer > java.util.Set<java.lang.Integer> , java.util.Set<java.util.Set<java.lang.String>> < java.util.Set<java.lang.String> < java.lang.String > > java.util.Set<java.util.Set<java.lang.String>> ) { this . java.util.Set<java.lang.String> = java.util.Set<java.lang.String> ; this . java.util.Set<java.lang.Integer> = java.util.Set<java.lang.Integer> ; this . java.util.Set<java.util.Set<java.lang.String>> = java.util.Set<java.util.Set<java.lang.String>> ; }  <METHOD_END>
<METHOD_START> public void ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email , java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email> < org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email > java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email> ) { this . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email ; this . java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email> = java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.Email> ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.math.BigDecimal java.math.BigDecimal , java.util.List<java.math.BigDecimal> < java.math.BigDecimal > java.util.List<java.math.BigDecimal> , java.util.Map<java.lang.String,java.math.BigDecimal> < java.lang.String , java.math.BigDecimal > java.util.Map<java.lang.String,java.math.BigDecimal> ) { this . java.math.BigDecimal = java.math.BigDecimal ; this . java.util.List<java.math.BigDecimal> = java.util.List<java.math.BigDecimal> ; this . java.util.Map<java.lang.String,java.math.BigDecimal> = java.util.Map<java.lang.String,java.math.BigDecimal> ; }  <METHOD_END>
<METHOD_START> public void ( org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject , java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> < org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject > java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> , java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> < java.lang.String , org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject > java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> ) { this . org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject = org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject ; this . java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> = java.util.List<org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> ; this . java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> = java.util.Map<java.lang.String,org.springframework.data.couchbase.core.mapping.MappingCouchbaseConverterTests.CustomObject> ; }  <METHOD_END>
<METHOD_START> public void ( java.math.BigDecimal java.math.BigDecimal ) { this . java.math.BigDecimal = java.math.BigDecimal ; }  <METHOD_END>
<METHOD_START> public void ( ) { this . java.lang.String = java . util . java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) ; this . java.lang.String = STRING ; this . java.lang.String = STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.math.BigDecimal java.math.BigDecimal ) { return java.math.BigDecimal . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.math.BigDecimal java.math.BigDecimal ( java.lang.String java.lang.String ) { return new java.math.BigDecimal ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( java.util.Date java.util.Date , java.util.Calendar java.util.Calendar , LocalDateTime org.springframework.data.couchbase.core.mapping.LocalDateTime ) { this . java.util.Date = java.util.Date ; this . java.util.Calendar = java.util.Calendar ; this . org.springframework.data.couchbase.core.mapping.LocalDateTime = org.springframework.data.couchbase.core.mapping.LocalDateTime ; }  <METHOD_END>
