<METHOD_START> public void ( ) { }  <METHOD_END>
<METHOD_START> public void ( Resource ... org.springframework.jdbc.datasource.init.Resource[] ) { this(); void ( org.springframework.jdbc.datasource.init.Resource[] ) ; }  <METHOD_END>
<METHOD_START> public void ( boolean boolean , boolean boolean , java.lang.String java.lang.String , Resource ... org.springframework.jdbc.datasource.init.Resource[] ) { this( org.springframework.jdbc.datasource.init.Resource[] ); this . boolean = boolean ; this . boolean = boolean ; void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( Resource org.springframework.jdbc.datasource.init.Resource ) { Assert . notNull ( org.springframework.jdbc.datasource.init.Resource , STRING ) ; this . java.util.List<org.springframework.jdbc.datasource.init.Resource> . add ( org.springframework.jdbc.datasource.init.Resource ) ; }  <METHOD_END>
<METHOD_START> public void void ( Resource ... org.springframework.jdbc.datasource.init.Resource[] ) { void ( org.springframework.jdbc.datasource.init.Resource[] ) ; this . java.util.List<org.springframework.jdbc.datasource.init.Resource> . addAll ( java.util.Arrays . java.util.List ( org.springframework.jdbc.datasource.init.Resource[] ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( Resource ... org.springframework.jdbc.datasource.init.Resource[] ) { void ( org.springframework.jdbc.datasource.init.Resource[] ) ; this . java.util.List<org.springframework.jdbc.datasource.init.Resource> = new java.util.ArrayList <> ( java.util.Arrays . java.util.List ( org.springframework.jdbc.datasource.init.Resource[] ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( Resource ... org.springframework.jdbc.datasource.init.Resource[] ) { Assert . notNull ( org.springframework.jdbc.datasource.init.Resource[] , STRING ) ; Assert . noNullElements ( org.springframework.jdbc.datasource.init.Resource[] , STRING ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = StringUtils . hasText ( java.lang.String ) ? java.lang.String : null ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.sql.Connection java.sql.Connection ) throws org.springframework.jdbc.datasource.init.ScriptException { Assert . notNull ( java.sql.Connection , STRING ) ; for ( Resource org.springframework.jdbc.datasource.init.Resource : this . java.util.List<org.springframework.jdbc.datasource.init.Resource> ) { EncodedResource org.springframework.jdbc.datasource.init.EncodedResource = new EncodedResource ( org.springframework.jdbc.datasource.init.Resource , this . java.lang.String ) ; ScriptUtils . executeSqlScript ( java.sql.Connection , org.springframework.jdbc.datasource.init.EncodedResource , this . boolean , this . boolean , this . java.lang.String , this . java.lang.String , this . java.lang.String , this . java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public void void ( javax.sql.DataSource javax.sql.DataSource ) throws org.springframework.jdbc.datasource.init.ScriptException { DatabasePopulatorUtils . execute ( this , javax.sql.DataSource ) ; }  <METHOD_END>
