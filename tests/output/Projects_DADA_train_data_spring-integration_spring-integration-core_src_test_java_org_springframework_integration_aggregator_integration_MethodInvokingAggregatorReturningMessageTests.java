<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Collections . java.util.List<java.lang.String> ( STRING ) ; org.springframework.integration.aggregator.integration.DirectChannel . send ( MessageBuilder . withPayload ( java.util.List<java.lang.String> ) . build ( ) ) ; Message < ? > org.springframework.integration.aggregator.integration.Message<?> = org.springframework.integration.aggregator.integration.PollableChannel . receive ( ) ; assertFalse ( Message .class . boolean ( org.springframework.integration.aggregator.integration.Message<> . getPayload ( ) . getClass ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Collections . java.util.List<java.lang.String> ( STRING ) ; org.springframework.integration.aggregator.integration.DirectChannel . send ( MessageBuilder . withPayload ( java.util.List<java.lang.String> ) . build ( ) ) ; Message < ? > org.springframework.integration.aggregator.integration.Message<?> = org.springframework.integration.aggregator.integration.PollableChannel . receive ( ) ; assertFalse ( Message .class . boolean ( org.springframework.integration.aggregator.integration.Message<> . getPayload ( ) . getClass ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.aggregator.integration.Message<?> < ? > org.springframework.integration.aggregator.integration.Message<?> ( final java.util.List<org.springframework.integration.aggregator.integration.Message<?>> < Message < ? > > java.util.List<org.springframework.integration.aggregator.integration.Message<?>> ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Collections . java.util.List<java.lang.String> ( STRING ) ; return MessageBuilder . withPayload ( java.util.List<java.lang.String> ) . setHeader ( STRING , NUMBER ) . build ( ) ; }  <METHOD_END>
