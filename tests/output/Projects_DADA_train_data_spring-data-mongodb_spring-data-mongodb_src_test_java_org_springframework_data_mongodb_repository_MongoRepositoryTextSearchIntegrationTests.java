<METHOD_START> @ Before public void void ( ) { org.springframework.data.mongodb.repository.MongoTemplate . indexOps ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument .class ) . ensureIndex ( new TextIndexDefinitionBuilder ( ) . onField ( STRING ) . onField ( STRING ) . build ( ) ) ; this . org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository = new MongoRepositoryFactory ( this . org.springframework.data.mongodb.repository.MongoTemplate ) . getRepository ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository .class ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) { org.springframework.data.mongodb.repository.MongoTemplate . dropCollection ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> = org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( TextCriteria . forDefaultLanguage ( ) . matchingAny ( STRING , STRING ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> , hasSize ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> , hasItems ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument , org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument = new org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ( STRING , STRING , STRING ) ; org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument . java.lang.String = STRING ; org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . save ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ; java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> = org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( STRING , TextCriteria . forDefaultLanguage ( ) . matching ( STRING ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> , hasSize ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> , hasItems ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; Page < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> = org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( TextCriteria . forDefaultLanguage ( ) . matching ( STRING ) , new PageRequest ( NUMBER , NUMBER , Direction . ASC , STRING ) ) ; assertThat ( org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . hasNext ( ) , is ( true ) ) ; assertThat ( org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . hasPrevious ( ) , is ( true ) ) ; assertThat ( org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . getTotalElements ( ) , is ( NUMBER ) ) ; assertThat ( org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . getContent ( ) . get ( NUMBER ) , equalTo ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument = new org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ( STRING , STRING , STRING ) ; org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . save ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ; java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> = org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( TextCriteria . forDefaultLanguage ( ) . matching ( STRING ) , new Sort ( STRING ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . int ( ) , is ( NUMBER ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ( NUMBER ) , equalTo ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument = new org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ( STRING , STRING , STRING ) ; org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . save ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ; Page < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> = org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( TextCriteria . forDefaultLanguage ( ) . matching ( STRING ) , new PageRequest ( NUMBER , NUMBER , Direction . ASC , STRING ) ) ; assertThat ( org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . getTotalElements ( ) , is ( NUMBER ) ) ; assertThat ( org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . getContent ( ) . get ( NUMBER ) , equalTo ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument = new org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ( STRING , STRING , STRING ) ; org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . save ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ; Page < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> = org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( TextCriteria . forDefaultLanguage ( ) . matching ( STRING ) , new PageRequest ( NUMBER , NUMBER , Direction . ASC , STRING ) ) ; assertThat ( org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . getTotalElements ( ) , is ( NUMBER ) ) ; assertThat ( org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . getContent ( ) . get ( NUMBER ) , equalTo ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument = new org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ( STRING , STRING , STRING ) ; org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . save ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ; java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> = org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( TextCriteria . forDefaultLanguage ( ) . matching ( STRING ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ( NUMBER ) , equalTo ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( ) ; java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> = org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument . java.lang.String ( ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ( NUMBER ) , equalTo ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ) ; assertThat ( java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> . org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ( NUMBER ) . java.lang.Float , equalTo ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextRepository . save ( java.util.Arrays . java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument , org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument , org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return ClassUtils . getShortNameAsProperty ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.repository.MongoClient org.springframework.data.mongodb.repository.MongoClient ( ) { return new MongoClient ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ObjectUtils . nullSafeHashCode ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null ) { return false ; } if ( ! ( java.lang.Object instanceof org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) ) { return false ; } org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument = ( org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument ) java.lang.Object ; return ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( java.lang.String java.lang.String , TextCriteria org.springframework.data.mongodb.repository.TextCriteria );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( TextCriteria org.springframework.data.mongodb.repository.TextCriteria );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( TextCriteria org.springframework.data.mongodb.repository.TextCriteria );  <METHOD_END>
<METHOD_START> java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > java.util.List<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( TextCriteria org.springframework.data.mongodb.repository.TextCriteria , Sort org.springframework.data.mongodb.repository.Sort );  <METHOD_END>
<METHOD_START> org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> < org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument > org.springframework.data.mongodb.repository.Page<org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests.FullTextDocument> ( TextCriteria org.springframework.data.mongodb.repository.TextCriteria , Pageable org.springframework.data.mongodb.repository.Pageable );  <METHOD_END>
