<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( org.w3c.dom.Element org.w3c.dom.Element ) { return XmppConnectionFactoryBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.xmpp.config.ParserContext , BeanDefinitionBuilder org.springframework.integration.xmpp.config.BeanDefinitionBuilder ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( ! StringUtils . hasText ( java.lang.String ) && ! StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.xmpp.config.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } java.lang.String [] java.lang.String[] = { STRING , STRING , STRING , STRING , STRING , STRING , IntegrationNamespaceUtils . AUTO_STARTUP , IntegrationNamespaceUtils . PHASE } ; for ( java.lang.String java.lang.String : java.lang.String[] ) { IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xmpp.config.BeanDefinitionBuilder , org.w3c.dom.Element , java.lang.String ) ; } IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.xmpp.config.BeanDefinitionBuilder , org.w3c.dom.Element , STRING , true ) ; }  <METHOD_END>
