<METHOD_START> @ Before @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { when ( org.springframework.data.jpa.repository.support.Metamodel . managedType ( java.lang.Object .class ) ) . thenThrow ( java.lang.IllegalArgumentException .class ) ; when ( org.springframework.data.jpa.repository.support.Metamodel . managedType ( org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo .class ) ) . thenReturn ( org.springframework.data.jpa.repository.support.EntityType<org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo> ) ; when ( org.springframework.data.jpa.repository.support.EntityType<org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo> . getIdType ( ) ) . thenReturn ( org.springframework.data.jpa.repository.support.Type ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { EntityInformation < org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo , java.lang.Long > org.springframework.data.jpa.repository.support.EntityInformation<org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo,java.lang.Long> = new JpaPersistableEntityInformation < org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo , java.lang.Long > ( org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo .class , org.springframework.data.jpa.repository.support.Metamodel ) ; org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo = new org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo ( ) ; assertThat ( org.springframework.data.jpa.repository.support.EntityInformation<org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo,java.lang.Long> . isNew ( org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo ) , is ( false ) ) ; assertThat ( org.springframework.data.jpa.repository.support.EntityInformation<org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo,java.lang.Long> . getId ( org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo ) , is ( java.util.Optional . java.util.Optional<java.lang.Object> ( ) ) ) ; org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo . java.lang.Long = NUMBER ; assertThat ( org.springframework.data.jpa.repository.support.EntityInformation<org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo,java.lang.Long> . isNew ( org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo ) , is ( true ) ) ; assertThat ( org.springframework.data.jpa.repository.support.EntityInformation<org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo,java.lang.Long> . getId ( org.springframework.data.jpa.repository.support.JpaPersistableEntityInformationUnitTests.Foo ) , is ( java.util.Optional . java.util.Optional<java.lang.Long> ( NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Long java.lang.Long ( ) { return java.lang.Long ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return java.lang.Long != null ; }  <METHOD_END>
