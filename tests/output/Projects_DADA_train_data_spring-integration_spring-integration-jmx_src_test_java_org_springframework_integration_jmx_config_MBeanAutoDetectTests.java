<METHOD_START> @ After public void void ( ) { if ( org.springframework.integration.jmx.config.ClassPathXmlApplicationContext != null ) { org.springframework.integration.jmx.config.ClassPathXmlApplicationContext . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { org.springframework.integration.jmx.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , java.lang.Class<? extends org.springframework.integration.jmx.config.MBeanAutoDetectTests> ( ) ) ; javax.management.MBeanServer = org.springframework.integration.jmx.config.ClassPathXmlApplicationContext . getBean ( javax.management.MBeanServer .class ) ; java.util.Set<javax.management.ObjectName> < javax.management.ObjectName > java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ Ignore public void void ( ) java.lang.Exception { org.springframework.integration.jmx.config.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( STRING , java.lang.Class<? extends org.springframework.integration.jmx.config.MBeanAutoDetectTests> ( ) ) ; javax.management.MBeanServer = org.springframework.integration.jmx.config.ClassPathXmlApplicationContext . getBean ( javax.management.MBeanServer .class ) ; java.util.Set<javax.management.ObjectName> < javax.management.ObjectName > java.util.Set<javax.management.ObjectName> = javax.management.MBeanServer . java.util.Set<javax.management.ObjectName> ( new javax.management.ObjectName ( STRING ) , null ) ; assertEquals ( NUMBER , java.util.Set<javax.management.ObjectName> . int ( ) ) ; }  <METHOD_END>
