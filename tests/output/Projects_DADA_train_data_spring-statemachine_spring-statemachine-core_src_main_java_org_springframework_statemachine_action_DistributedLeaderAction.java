<METHOD_START> public void ( Action < S , E > org.springframework.statemachine.action.Action<S,E> , StateMachineEnsemble < S , E > org.springframework.statemachine.action.StateMachineEnsemble<S,E> ) { Assert . notNull ( org.springframework.statemachine.action.Action<S,E> , STRING ) ; Assert . notNull ( org.springframework.statemachine.action.StateMachineEnsemble<S,E> , STRING ) ; this . org.springframework.statemachine.action.Action<S,E> = org.springframework.statemachine.action.Action<S,E> ; this . org.springframework.statemachine.action.StateMachineEnsemble<S,E> = org.springframework.statemachine.action.StateMachineEnsemble<S,E> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < S , E > org.springframework.statemachine.action.StateContext<S,E> ) { StateMachine < S , E > org.springframework.statemachine.action.StateMachine<S,E> = org.springframework.statemachine.action.StateContext<S,E> . getStateMachine ( ) ; StateMachine < S , E > org.springframework.statemachine.action.StateMachine<S,E> = org.springframework.statemachine.action.StateMachineEnsemble<S,E> . getLeader ( ) ; boolean boolean = ( org.springframework.statemachine.action.StateMachine<S,E> != null & org.springframework.statemachine.action.StateMachine<S,E> != null ) && ObjectUtils . nullSafeEquals ( org.springframework.statemachine.action.StateMachine<S,E> . getUuid ( ) , org.springframework.statemachine.action.StateMachine<S,E> . getUuid ( ) ) ; if ( org.springframework.statemachine.action.Log . isDebugEnabled ( ) ) { org.springframework.statemachine.action.Log . debug ( STRING + boolean ) ; } if ( boolean ) { org.springframework.statemachine.action.Action<S,E> . execute ( org.springframework.statemachine.action.StateContext<S,E> ) ; } }  <METHOD_END>
