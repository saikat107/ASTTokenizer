<METHOD_START> public void ( RepositoryConstraintViolationException org.springframework.data.rest.webmvc.support.RepositoryConstraintViolationException , MessageSourceAccessor org.springframework.data.rest.webmvc.support.MessageSourceAccessor ) { Assert . notNull ( org.springframework.data.rest.webmvc.support.RepositoryConstraintViolationException , STRING ) ; Assert . notNull ( org.springframework.data.rest.webmvc.support.MessageSourceAccessor , STRING ) ; for ( FieldError org.springframework.data.rest.webmvc.support.FieldError : org.springframework.data.rest.webmvc.support.RepositoryConstraintViolationException . getErrors ( ) . getFieldErrors ( ) ) { this . java.util.List<org.springframework.data.rest.webmvc.support.RepositoryConstraintViolationExceptionMessage.ValidationError> . boolean ( org.springframework.data.rest.webmvc.support.RepositoryConstraintViolationExceptionMessage.ValidationError . of ( org.springframework.data.rest.webmvc.support.FieldError . getObjectName ( ) , org.springframework.data.rest.webmvc.support.FieldError . getField ( ) , org.springframework.data.rest.webmvc.support.FieldError . getRejectedValue ( ) , org.springframework.data.rest.webmvc.support.MessageSourceAccessor . getMessage ( org.springframework.data.rest.webmvc.support.FieldError ) ) ) ; } }  <METHOD_END>
<METHOD_START> @ JsonProperty ( STRING ) public java.util.List<org.springframework.data.rest.webmvc.support.RepositoryConstraintViolationExceptionMessage.ValidationError> < org.springframework.data.rest.webmvc.support.RepositoryConstraintViolationExceptionMessage.ValidationError > java.util.List<org.springframework.data.rest.webmvc.support.RepositoryConstraintViolationExceptionMessage.ValidationError> ( ) { return java.util.List<org.springframework.data.rest.webmvc.support.RepositoryConstraintViolationExceptionMessage.ValidationError> ; }  <METHOD_END>
