<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = ( java.lang.String != null ) ? java.lang.String : STRING ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = ( java.lang.String != null ) ? java.lang.String : STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MessageHeaders org.springframework.integration.jms.MessageHeaders , javax . javax.jms . javax.jms javax.jms.Message ) { try { java.lang.Object java.lang.Object = org.springframework.integration.jms.MessageHeaders . get ( JmsHeaders . CORRELATION_ID ) ; if ( java.lang.Object instanceof java.lang.Number ) { java.lang.Object = java.lang.Object . java.lang.String ( ) ; } if ( java.lang.Object instanceof java.lang.String ) { try { javax.jms.Message . setJMSCorrelationID ( ( java.lang.String ) java.lang.Object ) ; } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.integration.jms.Log . info ( STRING , java.lang.Exception ) ; } } java.lang.Object java.lang.Object = org.springframework.integration.jms.MessageHeaders . get ( JmsHeaders . REPLY_TO ) ; if ( java.lang.Object instanceof Destination ) { try { javax.jms.Message . setJMSReplyTo ( ( Destination ) java.lang.Object ) ; } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.integration.jms.Log . info ( STRING , java.lang.Exception ) ; } } java.lang.Object java.lang.Object = org.springframework.integration.jms.MessageHeaders . get ( JmsHeaders . TYPE ) ; if ( java.lang.Object instanceof java.lang.String ) { try { javax.jms.Message . setJMSType ( ( java.lang.String ) java.lang.Object ) ; } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.integration.jms.Log . info ( STRING , java.lang.Exception ) ; } } for ( java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : org.springframework.integration.jms.MessageHeaders . entrySet ( ) ) { java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) ; if ( StringUtils . hasText ( java.lang.String ) && ! java.lang.String . boolean ( JmsHeaders . PREFIX ) && javax.jms.Message . getObjectProperty ( java.lang.String ) == null ) { java.lang.Object java.lang.Object = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ; if ( java.lang.Object != null ) { if ( java.util.List<java.lang.Class<?>> . boolean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { try { java.lang.String java.lang.String = this . java.lang.String ( java.lang.String ) ; javax.jms.Message . setObjectProperty ( java.lang.String , java.lang.Object ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( IntegrationMessageHeaderAccessor . PRIORITY ) ) { if ( this . org.springframework.integration.jms.Log . isTraceEnabled ( ) ) { this . org.springframework.integration.jms.Log . trace ( STRING + java.lang.String ) ; } } else if ( this . org.springframework.integration.jms.Log . isWarnEnabled ( ) ) { this . org.springframework.integration.jms.Log . warn ( STRING + java.lang.String + STRING , java.lang.Exception ) ; } } } else if ( IntegrationMessageHeaderAccessor . CORRELATION_ID . equals ( java.lang.String ) ) { java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; javax.jms.Message . setObjectProperty ( java.lang.String , java.lang.Object . java.lang.String ( ) ) ; } } } } } catch ( java.lang.Exception java.lang.Exception ) { if ( this . org.springframework.integration.jms.Log . isWarnEnabled ( ) ) { this . org.springframework.integration.jms.Log . warn ( STRING , java.lang.Exception ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( javax . javax.jms . javax.jms javax.jms.Message ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) ; try { try { java.lang.String java.lang.String = javax.jms.Message . getJMSMessageID ( ) ; if ( java.lang.String != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . MESSAGE_ID , java.lang.String ) ; } } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.integration.jms.Log . info ( STRING , java.lang.Exception ) ; } try { Destination org.springframework.integration.jms.Destination = javax.jms.Message . getJMSDestination ( ) ; if ( org.springframework.integration.jms.Destination != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . DESTINATION , org.springframework.integration.jms.Destination ) ; } } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.integration.jms.Log . info ( STRING , java.lang.Exception ) ; } try { java.lang.String java.lang.String = javax.jms.Message . getJMSCorrelationID ( ) ; if ( java.lang.String != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . CORRELATION_ID , java.lang.String ) ; } } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.integration.jms.Log . info ( STRING , java.lang.Exception ) ; } try { Destination org.springframework.integration.jms.Destination = javax.jms.Message . getJMSReplyTo ( ) ; if ( org.springframework.integration.jms.Destination != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . REPLY_TO , org.springframework.integration.jms.Destination ) ; } } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.integration.jms.Log . info ( STRING , java.lang.Exception ) ; } try { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . REDELIVERED , javax.jms.Message . getJMSRedelivered ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.integration.jms.Log . info ( STRING , java.lang.Exception ) ; } try { java.lang.String java.lang.String = javax.jms.Message . getJMSType ( ) ; if ( java.lang.String != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . TYPE , java.lang.String ) ; } } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.integration.jms.Log . info ( STRING , java.lang.Exception ) ; } try { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( JmsHeaders . TIMESTAMP , javax.jms.Message . getJMSTimestamp ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.integration.jms.Log . info ( STRING , java.lang.Exception ) ; } if ( this . boolean ) { try { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( IntegrationMessageHeaderAccessor . PRIORITY , javax.jms.Message . getJMSPriority ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { this . org.springframework.integration.jms.Log . info ( STRING , java.lang.Exception ) ; } } java.util.Enumeration<?> < ? > java.util.Enumeration<?> = javax.jms.Message . getPropertyNames ( ) ; if ( java.util.Enumeration<> != null ) { while ( java.util.Enumeration<> . boolean ( ) ) { java.lang.String java.lang.String = java.util.Enumeration<> . nextElement ( ) . java.lang.String ( ) ; try { java.lang.String java.lang.String = this . java.lang.String ( java.lang.String ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , javax.jms.Message . getObjectProperty ( java.lang.String ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( this . org.springframework.integration.jms.Log . isWarnEnabled ( ) ) { this . org.springframework.integration.jms.Log . warn ( STRING + java.lang.String + STRING , java.lang.Exception ) ; } } } } } catch ( JMSException org.springframework.integration.jms.JMSException ) { if ( this . org.springframework.integration.jms.Log . isWarnEnabled ( ) ) { this . org.springframework.integration.jms.Log . warn ( STRING , org.springframework.integration.jms.JMSException ) ; } } return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { java.lang.String java.lang.String = java.lang.String ; if ( StringUtils . hasText ( this . java.lang.String ) && ! java.lang.String . boolean ( this . java.lang.String ) ) { java.lang.String = this . java.lang.String + java.lang.String ; } else if ( MessageHeaders . CONTENT_TYPE . equals ( java.lang.String ) ) { java.lang.String = CONTENT_TYPE_PROPERTY ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { java.lang.String java.lang.String = java.lang.String ; if ( StringUtils . hasText ( this . java.lang.String ) && ! java.lang.String . boolean ( this . java.lang.String ) ) { java.lang.String = this . java.lang.String + java.lang.String ; } else if ( CONTENT_TYPE_PROPERTY . equals ( java.lang.String ) ) { java.lang.String = MessageHeaders . CONTENT_TYPE ; } return java.lang.String ; }  <METHOD_END>
