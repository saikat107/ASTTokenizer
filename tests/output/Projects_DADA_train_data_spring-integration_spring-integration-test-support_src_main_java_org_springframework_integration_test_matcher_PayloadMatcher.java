<METHOD_START> void ( Matcher org.springframework.integration.test.matcher.Matcher ) { super(); this . org.springframework.integration.test.matcher.Matcher = org.springframework.integration.test.matcher.Matcher ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Message org.springframework.integration.test.matcher.Message ) { return org.springframework.integration.test.matcher.Matcher . matches ( org.springframework.integration.test.matcher.Message . getPayload ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Description org.springframework.integration.test.matcher.Description ) { org.springframework.integration.test.matcher.Description . appendText ( STRING ) . appendDescriptionOf ( org.springframework.integration.test.matcher.Matcher ) ; }  <METHOD_END>
<METHOD_START> @ Factory public static < T > org.springframework.integration.test.matcher.Matcher<org.springframework.integration.test.matcher.Message> < Message > org.springframework.integration.test.matcher.Matcher<org.springframework.integration.test.matcher.Message> ( T T ) { return new org.springframework.integration.test.matcher.PayloadMatcher ( IsEqual . equalTo ( T ) ) ; }  <METHOD_END>
<METHOD_START> @ Factory public static < T > org.springframework.integration.test.matcher.Matcher<org.springframework.integration.test.matcher.Message> < Message > org.springframework.integration.test.matcher.Matcher<org.springframework.integration.test.matcher.Message> ( Matcher < ? super T > org.springframework.integration.test.matcher.Matcher<? super T> ) { return new org.springframework.integration.test.matcher.PayloadMatcher ( org.springframework.integration.test.matcher.Matcher<> ) ; }  <METHOD_END>
