<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.boot.autoconfigure.integration.BeanFactory ) throws org.springframework.boot.autoconfigure.integration.BeansException { this . org.springframework.boot.autoconfigure.integration.BeanFactory = org.springframework.boot.autoconfigure.integration.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AnnotationMetadata org.springframework.boot.autoconfigure.integration.AnnotationMetadata , final BeanDefinitionRegistry org.springframework.boot.autoconfigure.integration.BeanDefinitionRegistry ) { super. registerBeanDefinitions ( new StandardAnnotationMetadata ( org.springframework.boot.autoconfigure.integration.IntegrationAutoConfigurationScanRegistrar.IntegrationComponentScanConfiguration .class , true ) , org.springframework.boot.autoconfigure.integration.BeanDefinitionRegistry ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( AnnotationMetadata org.springframework.boot.autoconfigure.integration.AnnotationMetadata , BeanDefinitionRegistry org.springframework.boot.autoconfigure.integration.BeanDefinitionRegistry ) { return AutoConfigurationPackages . has ( this . org.springframework.boot.autoconfigure.integration.BeanFactory ) ? AutoConfigurationPackages . get ( this . org.springframework.boot.autoconfigure.integration.BeanFactory ) : java.util.Collections . java.util.List<java.lang.String> ( ) ; }  <METHOD_END>
