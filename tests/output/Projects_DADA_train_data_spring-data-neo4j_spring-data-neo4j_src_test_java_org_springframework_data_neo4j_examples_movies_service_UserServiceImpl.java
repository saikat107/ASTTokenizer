<METHOD_START> @ java.lang.Override public void void ( User org.springframework.data.neo4j.examples.movies.service.User , java.lang.String java.lang.String ) { org.springframework.data.neo4j.examples.movies.service.User . setName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Long java.lang.Long , java.lang.Long java.lang.Long ) { java.util.Optional<org.springframework.data.neo4j.examples.movies.service.User> < User > java.util.Optional<org.springframework.data.neo4j.examples.movies.service.User> = org.springframework.data.neo4j.examples.movies.service.UserRepository . findOne ( java.lang.Long ) ; java.util.Optional<org.springframework.data.neo4j.examples.movies.service.User> . ifPresent ( u -> { Optional < Genre > genre = genreRepository . findOne ( genreId ) ; genre . ifPresent ( u :: notInterestedIn ) ; userRepository . save ( u ) ; } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( User org.springframework.data.neo4j.examples.movies.service.User ) { org.springframework.data.neo4j.examples.movies.service.UserRepository . save ( org.springframework.data.neo4j.examples.movies.service.User ) ; }  <METHOD_END>
<METHOD_START> @ Transactional @ java.lang.Override public void void ( User org.springframework.data.neo4j.examples.movies.service.User ) { org.springframework.data.neo4j.examples.movies.service.UserRepository . save ( org.springframework.data.neo4j.examples.movies.service.User ) ; }  <METHOD_END>
