<METHOD_START> @ Before public void void ( ) java.lang.Exception { GenericApplicationContext org.springframework.ejb.config.GenericApplicationContext = new GenericApplicationContext ( ) ; new XmlBeanDefinitionReader ( org.springframework.ejb.config.GenericApplicationContext ) . loadBeanDefinitions ( new ClassPathResource ( STRING , java.lang.Class<? extends org.springframework.ejb.config.JeeNamespaceHandlerTests> ( ) ) ) ; org.springframework.ejb.config.GenericApplicationContext . refresh ( ) ; this . org.springframework.ejb.config.ConfigurableListableBeanFactory = org.springframework.ejb.config.GenericApplicationContext . getBeanFactory ( ) ; this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getBeanNamesForType ( ITestBean .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanDefinition org.springframework.ejb.config.BeanDefinition = this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getMergedBeanDefinition ( STRING ) ; assertEquals ( JndiObjectFactoryBean .class . java.lang.String ( ) , org.springframework.ejb.config.BeanDefinition . getBeanClassName ( ) ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanDefinition org.springframework.ejb.config.BeanDefinition = this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getMergedBeanDefinition ( STRING ) ; assertEquals ( JndiObjectFactoryBean .class . java.lang.String ( ) , org.springframework.ejb.config.BeanDefinition . getBeanClassName ( ) ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanDefinition org.springframework.ejb.config.BeanDefinition = this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getMergedBeanDefinition ( STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , new RuntimeBeanReference ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanDefinition org.springframework.ejb.config.BeanDefinition = this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getMergedBeanDefinition ( STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , new RuntimeBeanReference ( STRING ) ) ; assertFalse ( org.springframework.ejb.config.BeanDefinition . getPropertyValues ( ) . contains ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanDefinition org.springframework.ejb.config.BeanDefinition = this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getMergedBeanDefinition ( STRING ) ; assertEquals ( LocalStatelessSessionProxyFactoryBean .class . java.lang.String ( ) , org.springframework.ejb.config.BeanDefinition . getBeanClassName ( ) ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , ITestBean .class . java.lang.String ( ) ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanDefinition org.springframework.ejb.config.BeanDefinition = this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getMergedBeanDefinition ( STRING ) ; assertEquals ( SimpleRemoteStatelessSessionProxyFactoryBean .class . java.lang.String ( ) , org.springframework.ejb.config.BeanDefinition . getBeanClassName ( ) ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , ITestBean .class . java.lang.String ( ) ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanDefinition org.springframework.ejb.config.BeanDefinition = this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getMergedBeanDefinition ( STRING ) ; assertEquals ( LocalStatelessSessionProxyFactoryBean .class . java.lang.String ( ) , org.springframework.ejb.config.BeanDefinition . getBeanClassName ( ) ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , ITestBean .class . java.lang.String ( ) ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanDefinition org.springframework.ejb.config.BeanDefinition = this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getMergedBeanDefinition ( STRING ) ; assertEquals ( SimpleRemoteStatelessSessionProxyFactoryBean .class . java.lang.String ( ) , org.springframework.ejb.config.BeanDefinition . getBeanClassName ( ) ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , ITestBean .class . java.lang.String ( ) ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; void ( org.springframework.ejb.config.BeanDefinition , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { BeanDefinition org.springframework.ejb.config.BeanDefinition = this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getMergedBeanDefinition ( STRING ) ; assertTrue ( org.springframework.ejb.config.BeanDefinition . isLazyInit ( ) ) ; org.springframework.ejb.config.BeanDefinition = this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getMergedBeanDefinition ( STRING ) ; assertTrue ( org.springframework.ejb.config.BeanDefinition . isLazyInit ( ) ) ; org.springframework.ejb.config.BeanDefinition = this . org.springframework.ejb.config.ConfigurableListableBeanFactory . getMergedBeanDefinition ( STRING ) ; assertTrue ( org.springframework.ejb.config.BeanDefinition . isLazyInit ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( BeanDefinition org.springframework.ejb.config.BeanDefinition , java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { assertEquals ( STRING + java.lang.String + STRING , java.lang.Object , org.springframework.ejb.config.BeanDefinition . getPropertyValues ( ) . getPropertyValue ( java.lang.String ) . getValue ( ) ) ; }  <METHOD_END>
