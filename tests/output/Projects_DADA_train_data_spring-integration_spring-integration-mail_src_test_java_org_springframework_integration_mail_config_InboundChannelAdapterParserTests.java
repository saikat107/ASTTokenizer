<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( Pop3MailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; DirectFieldAccessor org.springframework.integration.mail.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) ; java.lang.Boolean java.lang.Boolean = ( java.lang.Boolean ) org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertTrue ( java.lang.Boolean ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertNotNull ( org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; DirectFieldAccessor org.springframework.integration.mail.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) ; java.lang.Boolean java.lang.Boolean = ( java.lang.Boolean ) org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertTrue ( java.lang.Boolean ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; assertNull ( org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( Pop3MailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Boolean java.lang.Boolean = ( java.lang.Boolean ) new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertFalse ( java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; DirectFieldAccessor org.springframework.integration.mail.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) ; java.lang.Boolean java.lang.Boolean = ( java.lang.Boolean ) org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertTrue ( java.lang.Boolean ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; DirectFieldAccessor org.springframework.integration.mail.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) ; java.lang.Boolean java.lang.Boolean = ( java.lang.Boolean ) org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertFalse ( java.lang.Boolean ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean , org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( Pop3MailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Boolean java.lang.Boolean = ( java.lang.Boolean ) new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertTrue ( java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( Pop3MailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Boolean java.lang.Boolean = ( java.lang.Boolean ) new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertFalse ( java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Boolean java.lang.Boolean = ( java.lang.Boolean ) new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertTrue ( java.lang.Boolean ) ; assertNotNull ( TestUtils . getPropertyValue ( org.springframework.integration.mail.config.AbstractMailReceiver , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Boolean java.lang.Boolean = ( java.lang.Boolean ) new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertFalse ( java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( Pop3MailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( org.springframework.integration.mail.config.ApplicationContext . getBean ( STRING ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( org.springframework.integration.mail.config.ApplicationContext . getBean ( STRING ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( org.springframework.integration.mail.config.ApplicationContext . getBean ( STRING ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( Pop3MailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertEquals ( NUMBER , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( Pop3MailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertEquals ( NUMBER , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertEquals ( NUMBER , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertEquals ( NUMBER , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( Pop3MailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( org.springframework.integration.mail.config.ApplicationContext . getBean ( STRING ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( org.springframework.integration.mail.config.ApplicationContext . getBean ( STRING ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertEquals ( org.springframework.integration.mail.config.ApplicationContext . getBean ( STRING ) , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( Pop3MailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertNull ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertNull ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; java.lang.Object java.lang.Object = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) . getPropertyValue ( STRING ) ; assertNull ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { try { new ClassPathXmlApplicationContext ( STRING ) . close ( ) ; fail ( STRING ) ; } catch ( BeanDefinitionStoreException org.springframework.integration.mail.config.BeanDefinitionStoreException ) { assertEquals ( org.xml.sax.SAXParseException .class , org.springframework.integration.mail.config.BeanDefinitionStoreException . getCause ( ) . getClass ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver = this . org.springframework.integration.mail.config.AbstractMailReceiver ( STRING ) ; assertEquals ( ImapMailReceiver .class , org.springframework.integration.mail.config.AbstractMailReceiver . getClass ( ) ) ; DirectFieldAccessor org.springframework.integration.mail.config.DirectFieldAccessor = new DirectFieldAccessor ( org.springframework.integration.mail.config.AbstractMailReceiver ) ; java.lang.Object java.lang.Object = org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ; assertNotNull ( java.lang.Object ) ; assertSame ( org.springframework.integration.mail.config.ApplicationContext . getBean ( SearchTermStrategy .class ) , java.lang.Object ) ; assertEquals ( STRING , org.springframework.integration.mail.config.DirectFieldAccessor . getPropertyValue ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { try { new ClassPathXmlApplicationContext ( STRING ) . close ( ) ; fail ( STRING ) ; } catch ( BeanCreationException org.springframework.integration.mail.config.BeanCreationException ) { assertTrue ( org.springframework.integration.mail.config.BeanCreationException . getMessage ( ) . contains ( STRING ) ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.integration.mail.config.AbstractMailReceiver org.springframework.integration.mail.config.AbstractMailReceiver ( java.lang.String java.lang.String ) { java.lang.Object java.lang.Object = org.springframework.integration.mail.config.ApplicationContext . getBean ( java.lang.String ) ; java.lang.Object java.lang.Object = ( java.lang.Object instanceof ImapIdleChannelAdapter ) ? java.lang.Object : new DirectFieldAccessor ( java.lang.Object ) . getPropertyValue ( STRING ) ; return ( AbstractMailReceiver ) new DirectFieldAccessor ( java.lang.Object ) . getPropertyValue ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertSame ( org.springframework.integration.mail.config.MessageChannel , TestUtils . getPropertyValue ( org.springframework.integration.mail.config.SourcePollingChannelAdapter , STRING ) ) ; }  <METHOD_END>
