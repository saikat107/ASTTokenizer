<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationEventPublisher org.springframework.integration.ip.tcp.serializer.ApplicationEventPublisher ) { this . org.springframework.integration.ip.tcp.serializer.ApplicationEventPublisher = org.springframework.integration.ip.tcp.serializer.ApplicationEventPublisher ; }  <METHOD_END>
<METHOD_START> protected void void ( int int ) throws java.io.IOException { if ( int < NUMBER ) { this . org.springframework.integration.ip.tcp.serializer.Log . debug ( STRING ) ; throw new java.io.IOException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.Exception java.lang.Exception , byte [] byte[] , int int ) { TcpDeserializationExceptionEvent org.springframework.integration.ip.tcp.serializer.TcpDeserializationExceptionEvent = new TcpDeserializationExceptionEvent ( this , java.lang.Exception , byte[] , int ) ; if ( this . org.springframework.integration.ip.tcp.serializer.ApplicationEventPublisher != null ) { this . org.springframework.integration.ip.tcp.serializer.ApplicationEventPublisher . publishEvent ( org.springframework.integration.ip.tcp.serializer.TcpDeserializationExceptionEvent ) ; } else if ( this . org.springframework.integration.ip.tcp.serializer.Log . isTraceEnabled ( ) ) { this . org.springframework.integration.ip.tcp.serializer.Log . trace ( STRING + org.springframework.integration.ip.tcp.serializer.TcpDeserializationExceptionEvent ) ; } }  <METHOD_END>
