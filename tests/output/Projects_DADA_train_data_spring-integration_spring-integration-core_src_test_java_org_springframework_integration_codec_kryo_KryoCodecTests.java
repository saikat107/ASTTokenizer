<METHOD_START> @ Test public void void ( ) java.io.IOException { java.lang.String java.lang.String = STRING ; PojoCodec org.springframework.integration.codec.kryo.PojoCodec = new PojoCodec ( ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; org.springframework.integration.codec.kryo.PojoCodec . encode ( java.lang.String , java.io.ByteArrayOutputStream ) ; java.lang.String java.lang.String = org.springframework.integration.codec.kryo.PojoCodec . decode ( java.io.ByteArrayOutputStream . byte[] ( ) , java.lang.String .class ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { java.lang.String java.lang.String = STRING ; java.io.File java.io.File = new java.io.File ( STRING ) ; PojoCodec org.springframework.integration.codec.kryo.PojoCodec = new PojoCodec ( ) ; java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream ( java.io.File ) ; org.springframework.integration.codec.kryo.PojoCodec . encode ( java.lang.String , java.io.FileOutputStream ) ; java.io.FileOutputStream . void ( ) ; java.io.FileInputStream java.io.FileInputStream = new java.io.FileInputStream ( java.io.File ) ; java.lang.String java.lang.String = org.springframework.integration.codec.kryo.PojoCodec . decode ( java.io.FileInputStream , java.lang.String .class ) ; java.io.File . boolean ( ) ; assertEquals ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { PojoCodec org.springframework.integration.codec.kryo.PojoCodec = new PojoCodec ( ) ; org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors = new org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors ( STRING , NUMBER ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; org.springframework.integration.codec.kryo.PojoCodec . encode ( org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors , java.io.ByteArrayOutputStream ) ; java.lang.Object java.lang.Object = org.springframework.integration.codec.kryo.PojoCodec . decode ( java.io.ByteArrayOutputStream . byte[] ( ) , org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors .class ) ; assertEquals ( org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { PojoCodec org.springframework.integration.codec.kryo.PojoCodec = new PojoCodec ( ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; org.springframework.integration.codec.kryo.PojoCodec . encode ( true , java.io.ByteArrayOutputStream ) ; boolean boolean = org.springframework.integration.codec.kryo.PojoCodec . decode ( java.io.ByteArrayOutputStream . byte[] ( ) , java.lang.Boolean .class ) ; assertEquals ( true , boolean ) ; boolean = org.springframework.integration.codec.kryo.PojoCodec . decode ( java.io.ByteArrayOutputStream . byte[] ( ) , boolean .class ) ; assertEquals ( true , boolean ) ; java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; org.springframework.integration.codec.kryo.PojoCodec . encode ( NUMBER , java.io.ByteArrayOutputStream ) ; double double = org.springframework.integration.codec.kryo.PojoCodec . decode ( java.io.ByteArrayOutputStream . byte[] ( ) , double .class ) ; assertEquals ( NUMBER , double , NUMBER ) ; java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; org.springframework.integration.codec.kryo.PojoCodec . encode ( NUMBER , java.io.ByteArrayOutputStream ) ; double = org.springframework.integration.codec.kryo.PojoCodec . decode ( java.io.ByteArrayOutputStream . byte[] ( ) , java.lang.Double .class ) ; assertEquals ( NUMBER , double , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { PojoCodec org.springframework.integration.codec.kryo.PojoCodec = new PojoCodec ( ) ; java.util.Map<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > java.util.Map<java.lang.String,java.lang.Integer> = new java.util.HashMap<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > ( ) ; java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( STRING , NUMBER ) ; java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( STRING , NUMBER ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; org.springframework.integration.codec.kryo.PojoCodec . encode ( java.util.Map<java.lang.String,java.lang.Integer> , java.io.ByteArrayOutputStream ) ; java.util.Map<?,?> < ? , ? > java.util.Map<?,?> = ( java.util.Map<?,?> < ? , ? > ) org.springframework.integration.codec.kryo.PojoCodec . decode ( java.io.ByteArrayOutputStream . byte[] ( ) , java.util.HashMap .class ) ; assertEquals ( NUMBER , java.util.Map<,> . int ( ) ) ; assertEquals ( NUMBER , java.util.Map<,> . get ( STRING ) ) ; assertEquals ( NUMBER , java.util.Map<,> . get ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { PojoCodec org.springframework.integration.codec.kryo.PojoCodec = new PojoCodec ( ) ; org.springframework.integration.codec.kryo.KryoCodecTests.Foo org.springframework.integration.codec.kryo.KryoCodecTests.Foo = new org.springframework.integration.codec.kryo.KryoCodecTests.Foo ( ) ; org.springframework.integration.codec.kryo.KryoCodecTests.Foo . void ( STRING , NUMBER ) ; org.springframework.integration.codec.kryo.KryoCodecTests.Foo . void ( STRING , NUMBER ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; org.springframework.integration.codec.kryo.PojoCodec . encode ( org.springframework.integration.codec.kryo.KryoCodecTests.Foo , java.io.ByteArrayOutputStream ) ; org.springframework.integration.codec.kryo.KryoCodecTests.Foo org.springframework.integration.codec.kryo.KryoCodecTests.Foo = org.springframework.integration.codec.kryo.PojoCodec . decode ( java.io.ByteArrayOutputStream . byte[] ( ) , org.springframework.integration.codec.kryo.KryoCodecTests.Foo .class ) ; assertEquals ( NUMBER , org.springframework.integration.codec.kryo.KryoCodecTests.Foo . java.lang.Object ( STRING ) ) ; assertEquals ( NUMBER , org.springframework.integration.codec.kryo.KryoCodecTests.Foo . java.lang.Object ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , int int ) { this . java.lang.String = java.lang.String ; this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( ! ( java.lang.Object instanceof org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors ) ) { return false ; } org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors = ( org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors ) java.lang.Object ; return ( this . java.lang.String . boolean ( org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors . java.lang.String ) && this . int == org.springframework.integration.codec.kryo.KryoCodecTests.SomeClassWithNoDefaultConstructors . int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = this . java.lang.String . int ( ) ; int = NUMBER * int + this . int ; return int ; }  <METHOD_END>
<METHOD_START> void ( ) { java.util.Map<java.lang.Object,java.lang.Object> = new java.util.HashMap<java.lang.Object,java.lang.Object> < java.lang.Object , java.lang.Object > ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Object java.lang.Object ) { this . java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { return this . java.util.Map<java.lang.Object,java.lang.Object> . java.lang.Object ( java.lang.Object ) ; }  <METHOD_END>
