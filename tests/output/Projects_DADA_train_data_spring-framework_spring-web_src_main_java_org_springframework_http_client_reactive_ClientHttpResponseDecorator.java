<METHOD_START> public void ( ClientHttpResponse org.springframework.http.client.reactive.ClientHttpResponse ) { Assert . notNull ( org.springframework.http.client.reactive.ClientHttpResponse , STRING ) ; this . org.springframework.http.client.reactive.ClientHttpResponse = org.springframework.http.client.reactive.ClientHttpResponse ; }  <METHOD_END>
<METHOD_START> public org.springframework.http.client.reactive.ClientHttpResponse org.springframework.http.client.reactive.ClientHttpResponse ( ) { return this . org.springframework.http.client.reactive.ClientHttpResponse ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.client.reactive.HttpStatus org.springframework.http.client.reactive.HttpStatus ( ) { return this . org.springframework.http.client.reactive.ClientHttpResponse . getStatusCode ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.client.reactive.HttpHeaders org.springframework.http.client.reactive.HttpHeaders ( ) { return this . org.springframework.http.client.reactive.ClientHttpResponse . getHeaders ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.client.reactive.MultiValueMap<java.lang.String,org.springframework.http.client.reactive.ResponseCookie> < java.lang.String , ResponseCookie > org.springframework.http.client.reactive.MultiValueMap<java.lang.String,org.springframework.http.client.reactive.ResponseCookie> ( ) { return this . org.springframework.http.client.reactive.ClientHttpResponse . getCookies ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.client.reactive.Flux<org.springframework.http.client.reactive.DataBuffer> < DataBuffer > org.springframework.http.client.reactive.Flux<org.springframework.http.client.reactive.DataBuffer> ( ) { return this . org.springframework.http.client.reactive.ClientHttpResponse . getBody ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.Class<? extends org.springframework.http.client.reactive.ClientHttpResponseDecorator> ( ) . java.lang.String ( ) + STRING + org.springframework.http.client.reactive.ClientHttpResponse ( ) + STRING ; }  <METHOD_END>
