<METHOD_START> public void void ( java.io.File java.io.File ) { this . java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Comparator<java.io.File> < java.io.File > java.util.Comparator<java.io.File> ) { this . java.util.Comparator<java.io.File> = java.util.Comparator<java.io.File> ; }  <METHOD_END>
<METHOD_START> public void void ( DirectoryScanner org.springframework.integration.file.config.DirectoryScanner ) { this . org.springframework.integration.file.config.DirectoryScanner = org.springframework.integration.file.config.DirectoryScanner ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( FileReadingMessageSource . FileReadingMessageSource ... FileReadingMessageSource.WatchEventType[] ) { this . FileReadingMessageSource.WatchEventType[] = FileReadingMessageSource.WatchEventType[] ; }  <METHOD_END>
<METHOD_START> public void void ( FileListFilter < java.io.File > org.springframework.integration.file.config.FileListFilter<java.io.File> ) { if ( org.springframework.integration.file.config.FileListFilter<java.io.File> instanceof AbstractFileLockerFilter && ( this . org.springframework.integration.file.config.AbstractFileLockerFilter == null ) ) { this . void ( ( AbstractFileLockerFilter ) org.springframework.integration.file.config.FileListFilter<java.io.File> ) ; } this . org.springframework.integration.file.config.FileListFilter<java.io.File> = org.springframework.integration.file.config.FileListFilter<java.io.File> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( AbstractFileLockerFilter org.springframework.integration.file.config.AbstractFileLockerFilter ) { this . org.springframework.integration.file.config.AbstractFileLockerFilter = org.springframework.integration.file.config.AbstractFileLockerFilter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.file.config.BeanFactory ) { this . org.springframework.integration.file.config.BeanFactory = org.springframework.integration.file.config.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.integration.file.config.FileReadingMessageSource org.springframework.integration.file.config.FileReadingMessageSource ( ) java.lang.Exception { if ( this . org.springframework.integration.file.config.FileReadingMessageSource == null ) { void ( ) ; } return this . org.springframework.integration.file.config.FileReadingMessageSource ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return FileReadingMessageSource .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> private void void ( ) java.lang.Exception { synchronized ( this . java.lang.Object ) { if ( this . org.springframework.integration.file.config.FileReadingMessageSource != null ) { return; } boolean boolean = this . java.util.Comparator<java.io.File> != null ; boolean boolean = this . java.lang.Integer != null ; if ( boolean ) { if ( boolean ) { org.springframework.integration.file.config.Log . warn ( STRING ) ; } this . org.springframework.integration.file.config.FileReadingMessageSource = new FileReadingMessageSource ( this . java.util.Comparator<java.io.File> ) ; } else if ( boolean ) { this . org.springframework.integration.file.config.FileReadingMessageSource = new FileReadingMessageSource ( this . java.lang.Integer ) ; } else { this . org.springframework.integration.file.config.FileReadingMessageSource = new FileReadingMessageSource ( ) ; } this . org.springframework.integration.file.config.FileReadingMessageSource . setDirectory ( this . java.io.File ) ; if ( this . org.springframework.integration.file.config.DirectoryScanner != null ) { this . org.springframework.integration.file.config.FileReadingMessageSource . setScanner ( this . org.springframework.integration.file.config.DirectoryScanner ) ; } else { this . org.springframework.integration.file.config.FileReadingMessageSource . setUseWatchService ( this . boolean ) ; if ( this . FileReadingMessageSource.WatchEventType[] != null ) { this . org.springframework.integration.file.config.FileReadingMessageSource . setWatchEvents ( this . FileReadingMessageSource.WatchEventType[] ) ; } } if ( this . org.springframework.integration.file.config.FileListFilter<java.io.File> != null ) { if ( this . org.springframework.integration.file.config.AbstractFileLockerFilter == null ) { this . org.springframework.integration.file.config.FileReadingMessageSource . setFilter ( this . org.springframework.integration.file.config.FileListFilter<java.io.File> ) ; } else { CompositeFileListFilter < java.io.File > org.springframework.integration.file.config.CompositeFileListFilter<java.io.File> = new CompositeFileListFilter < java.io.File > ( ) ; org.springframework.integration.file.config.CompositeFileListFilter<java.io.File> . addFilter ( this . org.springframework.integration.file.config.FileListFilter<java.io.File> ) ; org.springframework.integration.file.config.CompositeFileListFilter<java.io.File> . addFilter ( this . org.springframework.integration.file.config.AbstractFileLockerFilter ) ; this . org.springframework.integration.file.config.FileReadingMessageSource . setFilter ( org.springframework.integration.file.config.CompositeFileListFilter<java.io.File> ) ; this . org.springframework.integration.file.config.FileReadingMessageSource . setLocker ( this . org.springframework.integration.file.config.AbstractFileLockerFilter ) ; } } else if ( this . org.springframework.integration.file.config.AbstractFileLockerFilter != null ) { CompositeFileListFilter < java.io.File > org.springframework.integration.file.config.CompositeFileListFilter<java.io.File> = new CompositeFileListFilter < java.io.File > ( ) ; org.springframework.integration.file.config.CompositeFileListFilter<java.io.File> . addFilter ( new FileListFilterFactoryBean ( ) . getObject ( ) ) ; org.springframework.integration.file.config.CompositeFileListFilter<java.io.File> . addFilter ( this . org.springframework.integration.file.config.AbstractFileLockerFilter ) ; this . org.springframework.integration.file.config.FileReadingMessageSource . setFilter ( org.springframework.integration.file.config.CompositeFileListFilter<java.io.File> ) ; this . org.springframework.integration.file.config.FileReadingMessageSource . setLocker ( this . org.springframework.integration.file.config.AbstractFileLockerFilter ) ; } if ( this . java.lang.Boolean != null ) { this . org.springframework.integration.file.config.FileReadingMessageSource . setScanEachPoll ( this . java.lang.Boolean ) ; } if ( this . java.lang.Boolean != null ) { this . org.springframework.integration.file.config.FileReadingMessageSource . setAutoCreateDirectory ( this . java.lang.Boolean ) ; } if ( this . org.springframework.integration.file.config.BeanFactory != null ) { this . org.springframework.integration.file.config.FileReadingMessageSource . setBeanFactory ( this . org.springframework.integration.file.config.BeanFactory ) ; } this . org.springframework.integration.file.config.FileReadingMessageSource . afterPropertiesSet ( ) ; } }  <METHOD_END>
