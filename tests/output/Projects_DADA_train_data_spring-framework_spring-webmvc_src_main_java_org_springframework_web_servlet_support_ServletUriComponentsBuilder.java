<METHOD_START> protected void ( ) {	}  <METHOD_END>
<METHOD_START> protected void ( org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder ) { super( org.springframework.web.servlet.support.ServletUriComponentsBuilder ); this . java.lang.String = org.springframework.web.servlet.support.ServletUriComponentsBuilder . java.lang.String ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder ( HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest ) { org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder = org.springframework.web.servlet.support.ServletUriComponentsBuilder ( org.springframework.web.servlet.support.HttpServletRequest ) ; org.springframework.web.servlet.support.ServletUriComponentsBuilder . replacePath ( java.lang.String ( org.springframework.web.servlet.support.HttpServletRequest , org.springframework.web.servlet.support.HttpServletRequest . getContextPath ( ) ) ) ; return org.springframework.web.servlet.support.ServletUriComponentsBuilder ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder ( HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest ) { org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder = org.springframework.web.servlet.support.ServletUriComponentsBuilder ( org.springframework.web.servlet.support.HttpServletRequest ) ; if ( StringUtils . hasText ( new UrlPathHelper ( ) . getPathWithinServletMapping ( org.springframework.web.servlet.support.HttpServletRequest ) ) ) { org.springframework.web.servlet.support.ServletUriComponentsBuilder . path ( org.springframework.web.servlet.support.HttpServletRequest . getServletPath ( ) ) ; } return org.springframework.web.servlet.support.ServletUriComponentsBuilder ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder ( HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest ) { org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder = org.springframework.web.servlet.support.ServletUriComponentsBuilder ( org.springframework.web.servlet.support.HttpServletRequest ) ; org.springframework.web.servlet.support.ServletUriComponentsBuilder . void ( java.lang.String ( org.springframework.web.servlet.support.HttpServletRequest , org.springframework.web.servlet.support.HttpServletRequest . getRequestURI ( ) ) ) ; return org.springframework.web.servlet.support.ServletUriComponentsBuilder ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder ( HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest ) { org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder = org.springframework.web.servlet.support.ServletUriComponentsBuilder ( org.springframework.web.servlet.support.HttpServletRequest ) ; org.springframework.web.servlet.support.ServletUriComponentsBuilder . void ( java.lang.String ( org.springframework.web.servlet.support.HttpServletRequest , org.springframework.web.servlet.support.HttpServletRequest . getRequestURI ( ) ) ) ; org.springframework.web.servlet.support.ServletUriComponentsBuilder . query ( org.springframework.web.servlet.support.HttpServletRequest . getQueryString ( ) ) ; return org.springframework.web.servlet.support.ServletUriComponentsBuilder ; }  <METHOD_END>
<METHOD_START> private static org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder ( HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest ) { HttpRequest org.springframework.web.servlet.support.HttpRequest = new ServletServerHttpRequest ( org.springframework.web.servlet.support.HttpServletRequest ) ; UriComponents org.springframework.web.servlet.support.UriComponents = UriComponentsBuilder . fromHttpRequest ( org.springframework.web.servlet.support.HttpRequest ) . build ( ) ; java.lang.String java.lang.String = org.springframework.web.servlet.support.UriComponents . getScheme ( ) ; java.lang.String java.lang.String = org.springframework.web.servlet.support.UriComponents . getHost ( ) ; int int = org.springframework.web.servlet.support.UriComponents . getPort ( ) ; org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder = new org.springframework.web.servlet.support.ServletUriComponentsBuilder ( ) ; org.springframework.web.servlet.support.ServletUriComponentsBuilder . scheme ( java.lang.String ) ; org.springframework.web.servlet.support.ServletUriComponentsBuilder . host ( java.lang.String ) ; if ( ( STRING . boolean ( java.lang.String ) && int != NUMBER ) || ( STRING . boolean ( java.lang.String ) && int != NUMBER ) ) { org.springframework.web.servlet.support.ServletUriComponentsBuilder . port ( int ) ; } return org.springframework.web.servlet.support.ServletUriComponentsBuilder ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest , java.lang.String java.lang.String ) { java.lang.String java.lang.String = null ; java.util.Enumeration<java.lang.String> < java.lang.String > java.util.Enumeration<java.lang.String> = org.springframework.web.servlet.support.HttpServletRequest . getHeaderNames ( ) ; while ( java.util.Enumeration<java.lang.String> . boolean ( ) ) { java.lang.String java.lang.String = java.util.Enumeration<java.lang.String> . java.lang.String ( ) ; if ( STRING . boolean ( java.lang.String ) ) { java.lang.String = org.springframework.web.servlet.support.HttpServletRequest . getHeader ( java.lang.String ) ; } } if ( java.lang.String != null ) { java.lang.String = java.lang.String + java.lang.String ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder ( ) { return org.springframework.web.servlet.support.ServletUriComponentsBuilder ( org.springframework.web.servlet.support.HttpServletRequest ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder ( ) { return org.springframework.web.servlet.support.ServletUriComponentsBuilder ( org.springframework.web.servlet.support.HttpServletRequest ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder ( ) { return org.springframework.web.servlet.support.ServletUriComponentsBuilder ( org.springframework.web.servlet.support.HttpServletRequest ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder ( ) { return org.springframework.web.servlet.support.ServletUriComponentsBuilder ( org.springframework.web.servlet.support.HttpServletRequest ( ) ) ; }  <METHOD_END>
<METHOD_START> protected static org.springframework.web.servlet.support.HttpServletRequest org.springframework.web.servlet.support.HttpServletRequest ( ) { RequestAttributes org.springframework.web.servlet.support.RequestAttributes = RequestContextHolder . getRequestAttributes ( ) ; Assert . state ( org.springframework.web.servlet.support.RequestAttributes instanceof ServletRequestAttributes , STRING ) ; return ( ( ServletRequestAttributes ) org.springframework.web.servlet.support.RequestAttributes ) . getRequest ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; replacePath ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = null ; if ( this . java.lang.String != null ) { java.lang.String = UriUtils . extractFileExtension ( this . java.lang.String ) ; if ( ! StringUtils . isEmpty ( java.lang.String ) ) { int int = this . java.lang.String . int ( ) - ( java.lang.String . int ( ) + NUMBER ) ; replacePath ( this . java.lang.String . java.lang.String ( NUMBER , int ) ) ; } this . java.lang.String = null ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.support.ServletUriComponentsBuilder org.springframework.web.servlet.support.ServletUriComponentsBuilder ( ) { return new org.springframework.web.servlet.support.ServletUriComponentsBuilder ( this ) ; }  <METHOD_END>
