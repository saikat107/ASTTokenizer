<METHOD_START> public org.springframework.data.rest.webmvc.alps.Alps org.springframework.data.rest.webmvc.alps.Alps ( RootResourceInformation org.springframework.data.rest.webmvc.alps.RootResourceInformation ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.data.rest.webmvc.alps.RootResourceInformation . getDomainType ( ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> = new java.util.ArrayList<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > ( ) ; Descriptor org.springframework.data.rest.webmvc.alps.Descriptor = org.springframework.data.rest.webmvc.alps.Descriptor ( java.lang.Class<> ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( org.springframework.data.rest.webmvc.alps.Descriptor ) ; SupportedHttpMethods org.springframework.data.rest.webmvc.alps.SupportedHttpMethods = org.springframework.data.rest.webmvc.alps.RootResourceInformation . getSupportedMethods ( ) ; for ( HttpMethod org.springframework.data.rest.webmvc.alps.HttpMethod : org.springframework.data.rest.webmvc.alps.SupportedHttpMethods . getMethodsFor ( ResourceType . COLLECTION ) ) { if ( ! java.util.List<org.springframework.data.rest.webmvc.alps.HttpMethod> . contains ( org.springframework.data.rest.webmvc.alps.HttpMethod ) ) { java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( org.springframework.data.rest.webmvc.alps.Descriptor ( java.lang.Class<> , org.springframework.data.rest.webmvc.alps.RootResourceInformation , org.springframework.data.rest.webmvc.alps.Descriptor , org.springframework.data.rest.webmvc.alps.HttpMethod ) ) ; } } for ( HttpMethod org.springframework.data.rest.webmvc.alps.HttpMethod : org.springframework.data.rest.webmvc.alps.SupportedHttpMethods . getMethodsFor ( ResourceType . ITEM ) ) { if ( ! java.util.List<org.springframework.data.rest.webmvc.alps.HttpMethod> . contains ( org.springframework.data.rest.webmvc.alps.HttpMethod ) ) { java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( org.springframework.data.rest.webmvc.alps.Descriptor ( org.springframework.data.rest.webmvc.alps.RootResourceInformation , org.springframework.data.rest.webmvc.alps.Descriptor , org.springframework.data.rest.webmvc.alps.HttpMethod ) ) ; } } java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . addAll ( java.util.Collection<org.springframework.data.rest.webmvc.alps.Descriptor> ( org.springframework.data.rest.webmvc.alps.RootResourceInformation . getPersistentEntity ( ) ) ) ; return Alps . alps ( ) . descriptors ( java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ) . build ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.rest.webmvc.alps.Descriptor org.springframework.data.rest.webmvc.alps.Descriptor ( java.lang.Class<?> < ? > java.lang.Class<?> ) { ResourceMetadata org.springframework.data.rest.webmvc.alps.ResourceMetadata = org.springframework.data.rest.webmvc.alps.Associations . getMetadataFor ( java.lang.Class<> ) ; java.lang.String java.lang.String = ProfileController . getPath ( this . org.springframework.data.rest.webmvc.alps.RepositoryRestConfiguration , org.springframework.data.rest.webmvc.alps.ResourceMetadata ) ; return descriptor ( ) . id ( java.lang.String ( org.springframework.data.rest.webmvc.alps.ResourceMetadata ) ) . href ( java.lang.String ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.ResourceMetadata . getItemResourceDescription ( ) ) ) . descriptors ( java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( java.lang.Class<> , org.springframework.data.rest.webmvc.alps.ResourceMetadata . getItemResourceRel ( ) ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.rest.webmvc.alps.Descriptor org.springframework.data.rest.webmvc.alps.Descriptor ( java.lang.Class<?> < ? > java.lang.Class<?> , RootResourceInformation org.springframework.data.rest.webmvc.alps.RootResourceInformation , Descriptor org.springframework.data.rest.webmvc.alps.Descriptor , HttpMethod org.springframework.data.rest.webmvc.alps.HttpMethod ) { ResourceMetadata org.springframework.data.rest.webmvc.alps.ResourceMetadata = org.springframework.data.rest.webmvc.alps.Associations . getMetadataFor ( java.lang.Class<> ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> = new java.util.ArrayList<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > ( ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . addAll ( java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( java.lang.Class<> , org.springframework.data.rest.webmvc.alps.HttpMethod ) ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . addAll ( java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( java.lang.Class<> , org.springframework.data.rest.webmvc.alps.HttpMethod ) ) ; Type org.springframework.data.rest.webmvc.alps.Type = org.springframework.data.rest.webmvc.alps.Type ( org.springframework.data.rest.webmvc.alps.HttpMethod ) ; return descriptor ( ) . id ( java.lang.String ( org.springframework.data.rest.webmvc.alps.HttpMethod ) . concat ( org.springframework.data.rest.webmvc.alps.ResourceMetadata . getRel ( ) ) ) . name ( org.springframework.data.rest.webmvc.alps.ResourceMetadata . getRel ( ) ) . type ( org.springframework.data.rest.webmvc.alps.Type ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.ResourceMetadata . getDescription ( ) ) ) . rt ( STRING + org.springframework.data.rest.webmvc.alps.Descriptor . getId ( ) ) . descriptors ( java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ) . build ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.rest.webmvc.alps.Descriptor org.springframework.data.rest.webmvc.alps.Descriptor ( ResourceMetadata org.springframework.data.rest.webmvc.alps.ResourceMetadata ) { ProjectionDefinitionConfiguration org.springframework.data.rest.webmvc.alps.ProjectionDefinitionConfiguration = org.springframework.data.rest.webmvc.alps.RepositoryRestConfiguration . getProjectionConfiguration ( ) ; java.lang.String java.lang.String = org.springframework.data.rest.webmvc.alps.ProjectionDefinitionConfiguration . getParameterName ( ) ; java.util.Map<java.lang.String,java.lang.Class<?>> < java.lang.String , java.lang.Class<?> < ? > > java.util.Map<java.lang.String,java.lang.Class<?>> = org.springframework.data.rest.webmvc.alps.ProjectionDefinitionConfiguration . getProjectionsFor ( org.springframework.data.rest.webmvc.alps.ResourceMetadata . getDomainType ( ) ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> = new java.util.ArrayList<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > ( java.util.Map<java.lang.String,java.lang.Class<?>> . int ( ) ) ; for ( java.util.Map.Entry<java.lang.String,java.lang.Class<?>> < java.lang.String , java.lang.Class<?> < ? > > java.util.Map.Entry<java.lang.String,java.lang.Class<?>> : java.util.Map<java.lang.String,java.lang.Class<?>> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Class<?>>> ( ) ) { java.lang.Class<?> < ? > java.lang.Class<?> = java.util.Map.Entry<java.lang.String,java.lang.Class<?>> . java.lang.Class<?> ( ) ; java.lang.String java.lang.String = java.lang.String . java.lang.String ( STRING , org.springframework.data.rest.webmvc.alps.ResourceMetadata . getRel ( ) , java.lang.String , java.util.Map.Entry<java.lang.String,java.lang.Class<?>> . java.lang.String ( ) ) ; ResourceDescription org.springframework.data.rest.webmvc.alps.ResourceDescription = SimpleResourceDescription . defaultFor ( java.lang.String ) ; AnnotationBasedResourceDescription org.springframework.data.rest.webmvc.alps.AnnotationBasedResourceDescription = new AnnotationBasedResourceDescription ( java.lang.Class<> , org.springframework.data.rest.webmvc.alps.ResourceDescription ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( descriptor ( ) . type ( Type . SEMANTIC ) . name ( java.util.Map.Entry<java.lang.String,java.lang.Class<?>> . java.lang.String ( ) ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.AnnotationBasedResourceDescription ) ) . descriptors ( java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( java.util.Map.Entry<java.lang.String,java.lang.Class<?>> . java.lang.String ( ) , java.lang.Class<> ) ) . build ( ) ) ; } return descriptor ( ) . type ( Type . SEMANTIC ) . name ( java.lang.String ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( SimpleResourceDescription . defaultFor ( java.lang.String ) ) ) . descriptors ( java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ) . build ( ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) { java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> = new java.util.ArrayList<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > ( ) ; for ( BeanPropertyDefinition org.springframework.data.rest.webmvc.alps.BeanPropertyDefinition : new JacksonMetadata ( org.springframework.data.rest.webmvc.alps.ObjectMapper , java.lang.Class<> ) ) { AnnotatedMethod org.springframework.data.rest.webmvc.alps.AnnotatedMethod = org.springframework.data.rest.webmvc.alps.BeanPropertyDefinition . getGetter ( ) ; Description org.springframework.data.rest.webmvc.alps.Description = org.springframework.data.rest.webmvc.alps.AnnotatedMethod . getAnnotation ( Description .class ) ; ResourceDescription org.springframework.data.rest.webmvc.alps.ResourceDescription = SimpleResourceDescription . defaultFor ( java.lang.String . java.lang.String ( STRING , java.lang.String , org.springframework.data.rest.webmvc.alps.BeanPropertyDefinition . getName ( ) ) ) ; ResourceDescription org.springframework.data.rest.webmvc.alps.ResourceDescription = org.springframework.data.rest.webmvc.alps.Description == null ? null : new AnnotationBasedResourceDescription ( org.springframework.data.rest.webmvc.alps.Description , org.springframework.data.rest.webmvc.alps.ResourceDescription ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( descriptor ( ) . name ( org.springframework.data.rest.webmvc.alps.BeanPropertyDefinition . getName ( ) ) . type ( Type . SEMANTIC ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.ResourceDescription ) ) . build ( ) ) ; } return java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.rest.webmvc.alps.Descriptor org.springframework.data.rest.webmvc.alps.Descriptor ( RootResourceInformation org.springframework.data.rest.webmvc.alps.RootResourceInformation , Descriptor org.springframework.data.rest.webmvc.alps.Descriptor , HttpMethod org.springframework.data.rest.webmvc.alps.HttpMethod ) { PersistentEntity < ? , ? > org.springframework.data.rest.webmvc.alps.PersistentEntity<?,?> = org.springframework.data.rest.webmvc.alps.RootResourceInformation . getPersistentEntity ( ) ; ResourceMetadata org.springframework.data.rest.webmvc.alps.ResourceMetadata = org.springframework.data.rest.webmvc.alps.Associations . getMetadataFor ( org.springframework.data.rest.webmvc.alps.PersistentEntity<,> . getType ( ) ) ; return descriptor ( ) . id ( java.lang.String ( org.springframework.data.rest.webmvc.alps.HttpMethod ) . concat ( org.springframework.data.rest.webmvc.alps.ResourceMetadata . getItemResourceRel ( ) ) ) . name ( org.springframework.data.rest.webmvc.alps.ResourceMetadata . getItemResourceRel ( ) ) . type ( org.springframework.data.rest.webmvc.alps.Type ( org.springframework.data.rest.webmvc.alps.HttpMethod ) ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.ResourceMetadata . getItemResourceDescription ( ) ) ) . rt ( STRING . java.lang.String ( org.springframework.data.rest.webmvc.alps.Descriptor . getId ( ) ) ) . descriptors ( java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( org.springframework.data.rest.webmvc.alps.PersistentEntity<,> . getType ( ) , org.springframework.data.rest.webmvc.alps.HttpMethod ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( java.lang.Class<?> < ? > java.lang.Class<?> , HttpMethod org.springframework.data.rest.webmvc.alps.HttpMethod ) { if ( ! Type . SAFE . equals ( org.springframework.data.rest.webmvc.alps.Type ( org.springframework.data.rest.webmvc.alps.HttpMethod ) ) ) { return java.util.Collections . java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( ) ; } ProjectionDefinitionConfiguration org.springframework.data.rest.webmvc.alps.ProjectionDefinitionConfiguration = org.springframework.data.rest.webmvc.alps.RepositoryRestConfiguration . getProjectionConfiguration ( ) ; return org.springframework.data.rest.webmvc.alps.ProjectionDefinitionConfiguration . hasProjectionFor ( java.lang.Class<> ) ? java.util.Arrays . java.util.List ( org.springframework.data.rest.webmvc.alps.Descriptor ( org.springframework.data.rest.webmvc.alps.Associations . getMetadataFor ( java.lang.Class<> ) ) ) : java.util.Collections .< Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( java.lang.Class<?> < ? > java.lang.Class<?> , HttpMethod org.springframework.data.rest.webmvc.alps.HttpMethod ) { RepositoryInformation org.springframework.data.rest.webmvc.alps.RepositoryInformation = org.springframework.data.rest.webmvc.alps.Repositories . getRequiredRepositoryInformation ( java.lang.Class<> ) ; if ( ! org.springframework.data.rest.webmvc.alps.RepositoryInformation . isPagingRepository ( ) || ! org.springframework.data.rest.webmvc.alps.Type ( org.springframework.data.rest.webmvc.alps.HttpMethod ) . equals ( Type . SAFE ) ) { return java.util.Collections . java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( ) ; } Link org.springframework.data.rest.webmvc.alps.Link = org.springframework.data.rest.webmvc.alps.EntityLinks . linkToCollectionResource ( java.lang.Class<> ) ; java.util.List<org.springframework.data.rest.webmvc.alps.TemplateVariable> < TemplateVariable > java.util.List<org.springframework.data.rest.webmvc.alps.TemplateVariable> = org.springframework.data.rest.webmvc.alps.Link . getVariables ( ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> = new java.util.ArrayList<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > ( java.util.List<org.springframework.data.rest.webmvc.alps.TemplateVariable> . size ( ) ) ; ProjectionDefinitionConfiguration org.springframework.data.rest.webmvc.alps.ProjectionDefinitionConfiguration = org.springframework.data.rest.webmvc.alps.RepositoryRestConfiguration . getProjectionConfiguration ( ) ; for ( TemplateVariable org.springframework.data.rest.webmvc.alps.TemplateVariable : java.util.List<org.springframework.data.rest.webmvc.alps.TemplateVariable> ) { if ( org.springframework.data.rest.webmvc.alps.ProjectionDefinitionConfiguration . getParameterName ( ) . equals ( org.springframework.data.rest.webmvc.alps.TemplateVariable . getName ( ) ) ) { continue; } ResourceDescription org.springframework.data.rest.webmvc.alps.ResourceDescription = SimpleResourceDescription . defaultFor ( org.springframework.data.rest.webmvc.alps.TemplateVariable . getDescription ( ) ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( descriptor ( ) . name ( org.springframework.data.rest.webmvc.alps.TemplateVariable . getName ( ) ) . type ( Type . SEMANTIC ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.ResourceDescription ) ) . build ( ) ) ; } return java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ; }  <METHOD_END>
<METHOD_START> private java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ( final java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.String java.lang.String ) { final PersistentEntity < ? , ? > org.springframework.data.rest.webmvc.alps.PersistentEntity<?,?> = org.springframework.data.rest.webmvc.alps.PersistentEntities . getRequiredPersistentEntity ( java.lang.Class<> ) ; final java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> = new java.util.ArrayList<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > ( ) ; final JacksonMetadata org.springframework.data.rest.webmvc.alps.JacksonMetadata = new JacksonMetadata ( org.springframework.data.rest.webmvc.alps.ObjectMapper , java.lang.Class<> ) ; final ResourceMetadata org.springframework.data.rest.webmvc.alps.ResourceMetadata = org.springframework.data.rest.webmvc.alps.Associations . getMetadataFor ( org.springframework.data.rest.webmvc.alps.PersistentEntity<,> . getType ( ) ) ; org.springframework.data.rest.webmvc.alps.PersistentEntity<,> . doWithProperties ( new SimplePropertyHandler ( ) { @ java.lang.Override public void void ( PersistentProperty < ? > org.springframework.data.rest.webmvc.alps.PersistentProperty<?> ) { BeanPropertyDefinition org.springframework.data.rest.webmvc.alps.BeanPropertyDefinition = org.springframework.data.rest.webmvc.alps.JacksonMetadata . getDefinitionFor ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) ; ResourceMapping org.springframework.data.rest.webmvc.alps.ResourceMapping = org.springframework.data.rest.webmvc.alps.ResourceMetadata . getMappingFor ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) ; if ( org.springframework.data.rest.webmvc.alps.BeanPropertyDefinition != null ) { if ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> . isIdProperty ( ) && ! org.springframework.data.rest.webmvc.alps.RepositoryRestConfiguration . isIdExposedFor ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> . getOwner ( ) . getType ( ) ) ) { return; } java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( descriptor ( ) . type ( Type . SEMANTIC ) . name ( org.springframework.data.rest.webmvc.alps.BeanPropertyDefinition . getName ( ) ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.ResourceMapping . getDescription ( ) , org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) ) . build ( ) ) ; } } } ) ; org.springframework.data.rest.webmvc.alps.PersistentEntity<,> . doWithAssociations ( new SimpleAssociationHandler ( ) { @ java.lang.Override public void void ( Association < ? extends PersistentProperty < ? > > org.springframework.data.rest.webmvc.alps.Association<? extends org.springframework.data.rest.webmvc.alps.PersistentProperty<?>> ) { PersistentProperty < ? > org.springframework.data.rest.webmvc.alps.PersistentProperty<?> = org.springframework.data.rest.webmvc.alps.Association<> . getInverse ( ) ; if ( ! org.springframework.data.rest.webmvc.alps.JacksonMetadata . isExported ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) || ! org.springframework.data.rest.webmvc.alps.Associations . isLinkableAssociation ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) ) { return; } ResourceMapping org.springframework.data.rest.webmvc.alps.ResourceMapping = org.springframework.data.rest.webmvc.alps.ResourceMetadata . getMappingFor ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) ; DescriptorBuilder org.springframework.data.rest.webmvc.alps.DescriptorBuilder = descriptor ( ) . name ( org.springframework.data.rest.webmvc.alps.ResourceMapping . getRel ( ) ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.ResourceMapping . getDescription ( ) ) ) ; ResourceMetadata org.springframework.data.rest.webmvc.alps.ResourceMetadata = org.springframework.data.rest.webmvc.alps.Associations . getMetadataFor ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> . getActualType ( ) ) ; java.lang.String java.lang.String = ProfileController . getPath ( org.springframework.data.rest.webmvc.alps.RepositoryRestConfiguration , org.springframework.data.rest.webmvc.alps.ResourceMetadata ) + STRING + java.lang.String ( org.springframework.data.rest.webmvc.alps.ResourceMetadata ) ; Link org.springframework.data.rest.webmvc.alps.Link = new Link ( java.lang.String ) . withSelfRel ( ) ; org.springframework.data.rest.webmvc.alps.DescriptorBuilder . type ( Type . SAFE ) . rt ( org.springframework.data.rest.webmvc.alps.Link . getHref ( ) ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( org.springframework.data.rest.webmvc.alps.DescriptorBuilder . build ( ) ) ; } } ) ; return java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( PersistentProperty < ? > org.springframework.data.rest.webmvc.alps.PersistentProperty<?> ) { BeanPropertyDefinition org.springframework.data.rest.webmvc.alps.BeanPropertyDefinition = org.springframework.data.rest.webmvc.alps.JacksonMetadata . getDefinitionFor ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) ; ResourceMapping org.springframework.data.rest.webmvc.alps.ResourceMapping = org.springframework.data.rest.webmvc.alps.ResourceMetadata . getMappingFor ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) ; if ( org.springframework.data.rest.webmvc.alps.BeanPropertyDefinition != null ) { if ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> . isIdProperty ( ) && ! org.springframework.data.rest.webmvc.alps.RepositoryRestConfiguration . isIdExposedFor ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> . getOwner ( ) . getType ( ) ) ) { return; } java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( descriptor ( ) . type ( Type . SEMANTIC ) . name ( org.springframework.data.rest.webmvc.alps.BeanPropertyDefinition . getName ( ) ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.ResourceMapping . getDescription ( ) , org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) ) . build ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Association < ? extends PersistentProperty < ? > > org.springframework.data.rest.webmvc.alps.Association<? extends org.springframework.data.rest.webmvc.alps.PersistentProperty<?>> ) { PersistentProperty < ? > org.springframework.data.rest.webmvc.alps.PersistentProperty<?> = org.springframework.data.rest.webmvc.alps.Association<> . getInverse ( ) ; if ( ! org.springframework.data.rest.webmvc.alps.JacksonMetadata . isExported ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) || ! org.springframework.data.rest.webmvc.alps.Associations . isLinkableAssociation ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) ) { return; } ResourceMapping org.springframework.data.rest.webmvc.alps.ResourceMapping = org.springframework.data.rest.webmvc.alps.ResourceMetadata . getMappingFor ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> ) ; DescriptorBuilder org.springframework.data.rest.webmvc.alps.DescriptorBuilder = descriptor ( ) . name ( org.springframework.data.rest.webmvc.alps.ResourceMapping . getRel ( ) ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.ResourceMapping . getDescription ( ) ) ) ; ResourceMetadata org.springframework.data.rest.webmvc.alps.ResourceMetadata = org.springframework.data.rest.webmvc.alps.Associations . getMetadataFor ( org.springframework.data.rest.webmvc.alps.PersistentProperty<> . getActualType ( ) ) ; java.lang.String java.lang.String = ProfileController . getPath ( org.springframework.data.rest.webmvc.alps.RepositoryRestConfiguration , org.springframework.data.rest.webmvc.alps.ResourceMetadata ) + STRING + java.lang.String ( org.springframework.data.rest.webmvc.alps.ResourceMetadata ) ; Link org.springframework.data.rest.webmvc.alps.Link = new Link ( java.lang.String ) . withSelfRel ( ) ; org.springframework.data.rest.webmvc.alps.DescriptorBuilder . type ( Type . SAFE ) . rt ( org.springframework.data.rest.webmvc.alps.Link . getHref ( ) ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( org.springframework.data.rest.webmvc.alps.DescriptorBuilder . build ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.util.Collection<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.Collection<org.springframework.data.rest.webmvc.alps.Descriptor> ( PersistentEntity < ? , ? > org.springframework.data.rest.webmvc.alps.PersistentEntity<?,?> ) { ResourceMetadata org.springframework.data.rest.webmvc.alps.ResourceMetadata = org.springframework.data.rest.webmvc.alps.Associations . getMetadataFor ( org.springframework.data.rest.webmvc.alps.PersistentEntity<,> . getType ( ) ) ; java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> = new java.util.ArrayList<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > ( ) ; for ( MethodResourceMapping org.springframework.data.rest.webmvc.alps.MethodResourceMapping : org.springframework.data.rest.webmvc.alps.ResourceMetadata . getSearchResourceMappings ( ) ) { java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> = new java.util.ArrayList<org.springframework.data.rest.webmvc.alps.Descriptor> < Descriptor > ( ) ; for ( ParameterMetadata org.springframework.data.rest.webmvc.alps.ParameterMetadata : org.springframework.data.rest.webmvc.alps.MethodResourceMapping . getParametersMetadata ( ) ) { java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( descriptor ( ) . name ( org.springframework.data.rest.webmvc.alps.ParameterMetadata . getName ( ) ) . doc ( org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.ParameterMetadata . getDescription ( ) ) ) . type ( Type . SEMANTIC ) . build ( ) ) ; } java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> . add ( descriptor ( ) . type ( Type . SAFE ) . name ( org.springframework.data.rest.webmvc.alps.MethodResourceMapping . getRel ( ) ) . descriptors ( java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ) . build ( ) ) ; } return java.util.List<org.springframework.data.rest.webmvc.alps.Descriptor> ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.rest.webmvc.alps.Doc org.springframework.data.rest.webmvc.alps.Doc ( ResourceDescription org.springframework.data.rest.webmvc.alps.ResourceDescription ) { return org.springframework.data.rest.webmvc.alps.Doc ( org.springframework.data.rest.webmvc.alps.ResourceDescription , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private org.springframework.data.rest.webmvc.alps.Doc org.springframework.data.rest.webmvc.alps.Doc ( ResourceDescription org.springframework.data.rest.webmvc.alps.ResourceDescription , PersistentProperty < ? > org.springframework.data.rest.webmvc.alps.PersistentProperty<?> ) { if ( org.springframework.data.rest.webmvc.alps.ResourceDescription == null ) { return null ; } java.lang.String java.lang.String = java.lang.String ( org.springframework.data.rest.webmvc.alps.ResourceDescription ) ; if ( org.springframework.data.rest.webmvc.alps.RepositoryRestConfiguration . isEnableEnumTranslation ( ) && org.springframework.data.rest.webmvc.alps.PersistentProperty<> != null && org.springframework.data.rest.webmvc.alps.PersistentProperty<> . getType ( ) . isEnum ( ) ) { if ( org.springframework.data.rest.webmvc.alps.ResourceDescription . isDefault ( ) ) { return new Doc ( StringUtils . collectionToDelimitedString ( org.springframework.data.rest.webmvc.alps.EnumTranslator . getValues ( ( java.lang.Class<? extends java.lang.Enum<?>> < ? extends java.lang.Enum<?> < ? > > ) org.springframework.data.rest.webmvc.alps.PersistentProperty<> . getType ( ) ) , STRING ) , Format . TEXT ) ; } } return java.lang.String == null ? null : new Doc ( java.lang.String , Format . TEXT ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ResourceDescription org.springframework.data.rest.webmvc.alps.ResourceDescription ) { if ( ! org.springframework.data.rest.webmvc.alps.ResourceDescription . isDefault ( ) ) { return org.springframework.data.rest.webmvc.alps.ResourceDescription . getMessage ( ) ; } try { return org.springframework.data.rest.webmvc.alps.MessageSourceAccessor . getMessage ( org.springframework.data.rest.webmvc.alps.ResourceDescription ) ; } catch ( NoSuchMessageException org.springframework.data.rest.webmvc.alps.NoSuchMessageException ) { return org.springframework.data.rest.webmvc.alps.RepositoryRestConfiguration . getMetadataConfiguration ( ) . omitUnresolvableDescriptionKeys ( ) ? null : org.springframework.data.rest.webmvc.alps.ResourceDescription . getMessage ( ) ; } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( ResourceMetadata org.springframework.data.rest.webmvc.alps.ResourceMetadata ) { return org.springframework.data.rest.webmvc.alps.ResourceMetadata . getItemResourceRel ( ) . concat ( STRING ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( HttpMethod org.springframework.data.rest.webmvc.alps.HttpMethod ) { switch ( org.springframework.data.rest.webmvc.alps.HttpMethod ) { case GET : return STRING ; case POST : return STRING ; case DELETE : return STRING ; case PUT : return STRING ; case PATCH : return STRING ; default: throw new java.lang.IllegalArgumentException ( org.springframework.data.rest.webmvc.alps.HttpMethod . name ( ) ) ; } }  <METHOD_END>
<METHOD_START> private static org.springframework.data.rest.webmvc.alps.Type org.springframework.data.rest.webmvc.alps.Type ( HttpMethod org.springframework.data.rest.webmvc.alps.HttpMethod ) { switch ( org.springframework.data.rest.webmvc.alps.HttpMethod ) { case GET : return Type . SAFE ; case PUT : case DELETE : return Type . IDEMPOTENT ; case POST : case PATCH : return Type . UNSAFE ; default: return null ; } }  <METHOD_END>
