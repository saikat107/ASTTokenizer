<METHOD_START> private void ( java.nio.charset.Charset java.nio.charset.Charset ) { this . java.nio.charset.Charset = java.nio.charset.Charset ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder ( java.io.InputStream java.io.InputStream ) throws java.io.IOException { return org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder ( java.io.InputStream , this . java.nio.charset.Charset ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder ( java.io.InputStream java.io.InputStream , java.nio.charset.Charset java.nio.charset.Charset ) throws java.io.IOException { if ( java.io.InputStream == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . java.util.List<org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository> . add ( org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository ( java.io.InputStream , java.nio.charset.Charset ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.configurationmetadata.ConfigurationMetadataRepository org.springframework.boot.configurationmetadata.ConfigurationMetadataRepository ( ) { SimpleConfigurationMetadataRepository org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository = new SimpleConfigurationMetadataRepository ( ) ; for ( SimpleConfigurationMetadataRepository org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository : this . java.util.List<org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository> ) { org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository . include ( org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository ) ; } return org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository ( java.io.InputStream java.io.InputStream , java.nio.charset.Charset java.nio.charset.Charset )			throws java.io.IOException { try { RawConfigurationMetadata org.springframework.boot.configurationmetadata.RawConfigurationMetadata = this . org.springframework.boot.configurationmetadata.JsonReader . read ( java.io.InputStream , java.nio.charset.Charset ) ; return org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository ( org.springframework.boot.configurationmetadata.RawConfigurationMetadata ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.IllegalStateException ( STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository ( RawConfigurationMetadata org.springframework.boot.configurationmetadata.RawConfigurationMetadata ) { SimpleConfigurationMetadataRepository org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository = new SimpleConfigurationMetadataRepository ( ) ; org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository . add ( org.springframework.boot.configurationmetadata.RawConfigurationMetadata . getSources ( ) ) ; for ( ConfigurationMetadataItem org.springframework.boot.configurationmetadata.ConfigurationMetadataItem : org.springframework.boot.configurationmetadata.RawConfigurationMetadata . getItems ( ) ) { ConfigurationMetadataSource org.springframework.boot.configurationmetadata.ConfigurationMetadataSource = org.springframework.boot.configurationmetadata.ConfigurationMetadataSource ( org.springframework.boot.configurationmetadata.RawConfigurationMetadata , org.springframework.boot.configurationmetadata.ConfigurationMetadataItem ) ; org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository . add ( org.springframework.boot.configurationmetadata.ConfigurationMetadataItem , org.springframework.boot.configurationmetadata.ConfigurationMetadataSource ) ; } java.util.Map<java.lang.String,org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty> < java.lang.String , ConfigurationMetadataProperty > java.util.Map<java.lang.String,org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty> = org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository . getAllProperties ( ) ; for ( ConfigurationMetadataHint org.springframework.boot.configurationmetadata.ConfigurationMetadataHint : org.springframework.boot.configurationmetadata.RawConfigurationMetadata . getHints ( ) ) { ConfigurationMetadataProperty org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty = java.util.Map<java.lang.String,org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty> . get ( org.springframework.boot.configurationmetadata.ConfigurationMetadataHint . getId ( ) ) ; if ( org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty != null ) { void ( org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty , org.springframework.boot.configurationmetadata.ConfigurationMetadataHint ) ; } else { java.lang.String java.lang.String = org.springframework.boot.configurationmetadata.ConfigurationMetadataHint . resolveId ( ) ; org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty = java.util.Map<java.lang.String,org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty> . get ( java.lang.String ) ; if ( org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty != null ) { if ( org.springframework.boot.configurationmetadata.ConfigurationMetadataHint . isMapKeyHints ( ) ) { void ( org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty , org.springframework.boot.configurationmetadata.ConfigurationMetadataHint ) ; } else { void ( org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty , org.springframework.boot.configurationmetadata.ConfigurationMetadataHint ) ; } } } } return org.springframework.boot.configurationmetadata.SimpleConfigurationMetadataRepository ; }  <METHOD_END>
<METHOD_START> private void void ( ConfigurationMetadataProperty org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty , ConfigurationMetadataHint org.springframework.boot.configurationmetadata.ConfigurationMetadataHint ) { org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty . getHints ( ) . getValueHints ( ) . addAll ( org.springframework.boot.configurationmetadata.ConfigurationMetadataHint . getValueHints ( ) ) ; org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty . getHints ( ) . getValueProviders ( ) . addAll ( org.springframework.boot.configurationmetadata.ConfigurationMetadataHint . getValueProviders ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ConfigurationMetadataProperty org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty , ConfigurationMetadataHint org.springframework.boot.configurationmetadata.ConfigurationMetadataHint ) { org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty . getHints ( ) . getKeyHints ( ) . addAll ( org.springframework.boot.configurationmetadata.ConfigurationMetadataHint . getValueHints ( ) ) ; org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty . getHints ( ) . getKeyProviders ( ) . addAll ( org.springframework.boot.configurationmetadata.ConfigurationMetadataHint . getValueProviders ( ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.configurationmetadata.ConfigurationMetadataSource org.springframework.boot.configurationmetadata.ConfigurationMetadataSource ( RawConfigurationMetadata org.springframework.boot.configurationmetadata.RawConfigurationMetadata , ConfigurationMetadataItem org.springframework.boot.configurationmetadata.ConfigurationMetadataItem ) { if ( org.springframework.boot.configurationmetadata.ConfigurationMetadataItem . getSourceType ( ) != null ) { return org.springframework.boot.configurationmetadata.RawConfigurationMetadata . getSource ( org.springframework.boot.configurationmetadata.ConfigurationMetadataItem . getSourceType ( ) ) ; } return null ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder ( java.io.InputStream ... java.io.InputStream[] ) throws java.io.IOException { org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder = org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder ( ) ; for ( java.io.InputStream java.io.InputStream : java.io.InputStream[] ) { org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder = org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder . org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder ( java.io.InputStream ) ; } return org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder ( ) { return org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder ( java.nio.charset.Charset ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder ( java.nio.charset.Charset java.nio.charset.Charset ) { return new org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder ( java.nio.charset.Charset ) ; }  <METHOD_END>
