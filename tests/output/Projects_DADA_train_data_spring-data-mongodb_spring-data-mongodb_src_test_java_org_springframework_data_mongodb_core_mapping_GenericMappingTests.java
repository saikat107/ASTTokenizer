<METHOD_START> @ Before public void void ( ) java.lang.Exception { org.springframework.data.mongodb.core.mapping.MongoMappingContext = new MongoMappingContext ( ) ; org.springframework.data.mongodb.core.mapping.MongoMappingContext . setInitialEntitySet ( java.util.Collections . java.util.Set<java.lang.Class<org.springframework.data.mongodb.core.mapping.GenericMappingTests.StringWrapper>> ( org.springframework.data.mongodb.core.mapping.GenericMappingTests.StringWrapper .class ) ) ; org.springframework.data.mongodb.core.mapping.MongoMappingContext . initialize ( ) ; org.springframework.data.mongodb.core.mapping.MongoConverter = new MappingMongoConverter ( org.springframework.data.mongodb.core.mapping.DbRefResolver , org.springframework.data.mongodb.core.mapping.MongoMappingContext ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mongodb.core.mapping.GenericMappingTests.StringWrapper org.springframework.data.mongodb.core.mapping.GenericMappingTests.StringWrapper = new org.springframework.data.mongodb.core.mapping.GenericMappingTests.StringWrapper ( ) ; org.springframework.data.mongodb.core.mapping.GenericMappingTests.Wrapper<java.lang.String> . org.springframework.data.mongodb.core.mapping.GenericMappingTests.Container<java.lang.String> = new org.springframework.data.mongodb.core.mapping.GenericMappingTests.Container<java.lang.String> < java.lang.String > ( ) ; org.springframework.data.mongodb.core.mapping.GenericMappingTests.Wrapper<java.lang.String> . org.springframework.data.mongodb.core.mapping.GenericMappingTests.Container<java.lang.String> . java.lang.String = STRING ; Document org.springframework.data.mongodb.core.mapping.Document = new Document ( ) ; org.springframework.data.mongodb.core.mapping.MongoConverter . write ( org.springframework.data.mongodb.core.mapping.GenericMappingTests.StringWrapper , org.springframework.data.mongodb.core.mapping.Document ) ; java.lang.Object java.lang.Object = org.springframework.data.mongodb.core.mapping.Document . get ( STRING ) ; assertThat ( java.lang.Object , is ( notNullValue ( ) ) ) ; assertTrue ( java.lang.Object instanceof Document ) ; java.lang.Object java.lang.Object = ( ( Document ) java.lang.Object ) . get ( STRING ) ; assertTrue ( java.lang.Object instanceof java.lang.String ) ; assertThat ( ( java.lang.String ) java.lang.Object , is ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { Document org.springframework.data.mongodb.core.mapping.Document = new Document ( STRING , STRING ) ; Document org.springframework.data.mongodb.core.mapping.Document = new Document ( STRING , org.springframework.data.mongodb.core.mapping.Document ) ; org.springframework.data.mongodb.core.mapping.GenericMappingTests.StringWrapper org.springframework.data.mongodb.core.mapping.GenericMappingTests.StringWrapper = org.springframework.data.mongodb.core.mapping.MongoConverter . read ( org.springframework.data.mongodb.core.mapping.GenericMappingTests.StringWrapper .class , org.springframework.data.mongodb.core.mapping.Document ) ; assertThat ( org.springframework.data.mongodb.core.mapping.GenericMappingTests.Wrapper<java.lang.String> . org.springframework.data.mongodb.core.mapping.GenericMappingTests.Container<java.lang.String> , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.mongodb.core.mapping.GenericMappingTests.Wrapper<java.lang.String> . org.springframework.data.mongodb.core.mapping.GenericMappingTests.Container<java.lang.String> . java.lang.String , is ( STRING ) ) ; }  <METHOD_END>
