<METHOD_START> public void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { this( java.util.Map<java.lang.String,java.lang.Object> , null , null ); }  <METHOD_END>
<METHOD_START> protected void ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> , java.util.UUID java.util.UUID , java.lang.Long java.lang.Long ) { this . java.util.Map<java.lang.String,java.lang.Object> = ( java.util.Map<java.lang.String,java.lang.Object> != null ? new java.util.HashMap<java.lang.String,java.lang.Object> <> ( java.util.Map<java.lang.String,java.lang.Object> ) : new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) ) ; if ( java.util.UUID == null ) { this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , org.springframework.messaging.IdGenerator ( ) . generateId ( ) ) ; } else if ( java.util.UUID == java.util.UUID ) { this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; } else { this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.util.UUID ) ; } if ( java.lang.Long == null ) { this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.System . long ( ) ) ; } else if ( java.lang.Long < NUMBER ) { this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String ) ; } else { this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Long ) ; } }  <METHOD_END>
<METHOD_START> private void ( org.springframework.messaging.MessageHeaders org.springframework.messaging.MessageHeaders , java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { this . java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( org.springframework.messaging.MessageHeaders . java.util.Map<java.lang.String,java.lang.Object> . int ( ) - java.util.Set<java.lang.String> . int ( ) ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : org.springframework.messaging.MessageHeaders . java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { if ( ! java.util.Set<java.lang.String> . boolean ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) ) ) { this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ) ; } } }  <METHOD_END>
<METHOD_START> protected java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { return this . java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> protected static org.springframework.messaging.IdGenerator org.springframework.messaging.IdGenerator ( ) { return ( org.springframework.messaging.IdGenerator != null ? org.springframework.messaging.IdGenerator : org.springframework.messaging.IdGenerator ) ; }  <METHOD_END>
<METHOD_START> public java.util.UUID java.util.UUID ( ) { return java.util.UUID ( java.lang.String , java.util.UUID .class ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Long java.lang.Long ( ) { return java.lang.Long ( java.lang.String , java.lang.Long .class ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return java.lang.Object ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return java.lang.Object ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public < T > T T ( java.lang.Object java.lang.Object , java.lang.Class<T> < T > java.lang.Class<T> ) { java.lang.Object java.lang.Object = this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.Object ) ; if ( java.lang.Object == null ) { return null ; } if ( ! java.lang.Class<T> . boolean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Object + STRING + java.lang.Class<T> + STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) + STRING ) ; } return ( T ) java.lang.Object ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.Object java.lang.Object ) { return this . java.util.Map<java.lang.String,java.lang.Object> . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.Object java.lang.Object ) { return this . java.util.Map<java.lang.String,java.lang.Object> . boolean ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> < java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) { return java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( this . java.util.Map<java.lang.String,java.lang.Object> ) . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { return this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.util.Map<java.lang.String,java.lang.Object> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return java.util.Collections . java.util.Set<java.lang.String> ( this . java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.lang.String> ( ) ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . java.util.Map<java.lang.String,java.lang.Object> . int ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<java.lang.Object> < java.lang.Object > java.util.Collection<java.lang.Object> ( ) { return java.util.Collections . java.util.Collection<java.lang.Object> ( this . java.util.Map<java.lang.String,java.lang.Object> . java.util.Collection<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<? extends java.lang.String,? extends java.lang.Object> < ? extends java.lang.String , ? extends java.lang.Object > java.util.Map<? extends java.lang.String,? extends java.lang.Object> ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.io.ObjectOutputStream java.io.ObjectOutputStream ) throws java.io.IOException { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : this . java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { if ( ! ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) instanceof java.io.Serializable ) ) { java.util.Set<java.lang.String> . boolean ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) ) ; } } if ( java.util.Set<java.lang.String> . boolean ( ) ) { java.io.ObjectOutputStream . void ( ) ; } else { if ( org.springframework.messaging.Log . isDebugEnabled ( ) ) { org.springframework.messaging.Log . debug ( STRING + java.util.Set<java.lang.String> ) ; } java.io.ObjectOutputStream . void ( new org.springframework.messaging.MessageHeaders ( this , java.util.Set<java.lang.String> ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.io.ObjectInputStream java.io.ObjectInputStream ) throws java.io.IOException , java.lang.ClassNotFoundException { java.io.ObjectInputStream . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return ( this == java.lang.Object || ( java.lang.Object instanceof org.springframework.messaging.MessageHeaders && this . java.util.Map<java.lang.String,java.lang.Object> . boolean ( ( ( org.springframework.messaging.MessageHeaders ) java.lang.Object ) . java.util.Map<java.lang.String,java.lang.Object> ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.Map<java.lang.String,java.lang.Object> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.String ( ) ; }  <METHOD_END>
