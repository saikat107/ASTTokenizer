<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.integration.support.management.graph.ApplicationContext ) throws org.springframework.integration.support.management.graph.BeansException { this . org.springframework.integration.support.management.graph.ApplicationContext = org.springframework.integration.support.management.graph.ApplicationContext ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public org.springframework.integration.support.management.graph.Graph org.springframework.integration.support.management.graph.Graph ( ) { if ( this . org.springframework.integration.support.management.graph.Graph == null ) { synchronized ( this ) { if ( this . org.springframework.integration.support.management.graph.Graph == null ) { org.springframework.integration.support.management.graph.Graph ( ) ; } } } return this . org.springframework.integration.support.management.graph.Graph ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ContextRefreshedEvent org.springframework.integration.support.management.graph.ContextRefreshedEvent ) { if ( org.springframework.integration.support.management.graph.ContextRefreshedEvent . getApplicationContext ( ) . equals ( this . org.springframework.integration.support.management.graph.ApplicationContext ) ) { org.springframework.integration.support.management.graph.Graph ( ) ; } }  <METHOD_END>
<METHOD_START> private synchronized org.springframework.integration.support.management.graph.Graph org.springframework.integration.support.management.graph.Graph ( ) { java.lang.String java.lang.String = org.springframework.integration.support.management.graph.IntegrationGraphServer .class . java.lang.Package ( ) . java.lang.String ( ) ; if ( java.lang.String == null ) { java.lang.String = STRING ; } java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.String ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , float ) ; java.lang.String java.lang.String = this . java.lang.String ; if ( java.lang.String == null ) { java.lang.String = this . org.springframework.integration.support.management.graph.ApplicationContext . getEnvironment ( ) . getProperty ( STRING ) ; } if ( java.lang.String != null ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.String ) ; } this . org.springframework.integration.support.management.graph.IntegrationGraphServer.NodeFactory . void ( ) ; java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> < IntegrationNode > java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> = new java.util.ArrayList<org.springframework.integration.support.management.graph.IntegrationNode> < IntegrationNode > ( ) ; java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> < LinkNode > java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> = new java.util.ArrayList<org.springframework.integration.support.management.graph.LinkNode> < LinkNode > ( ) ; java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> < java.lang.String , MessageChannelNode > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> = java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> ( java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> ) ; void ( java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> , java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> ) ; void ( java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> , java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> ) ; void ( java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> , java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> ) ; void ( java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> , java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> ) ; this . org.springframework.integration.support.management.graph.Graph = new Graph ( java.util.Map<java.lang.String,java.lang.Object> , java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> , java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> ) ; return this . org.springframework.integration.support.management.graph.Graph ; }  <METHOD_END>
<METHOD_START> private java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> < java.lang.String , MessageChannelNode > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> ( java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> < IntegrationNode > java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> ) { java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannel> < java.lang.String , MessageChannel > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannel> = this . org.springframework.integration.support.management.graph.ApplicationContext . getBeansOfType ( MessageChannel .class ) ; java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> < java.lang.String , MessageChannelNode > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> = new java.util.HashMap<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> < java.lang.String , MessageChannelNode > ( ) ; for ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessageChannel> < java.lang.String , MessageChannel > java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessageChannel> : java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannel> . entrySet ( ) ) { MessageChannel org.springframework.integration.support.management.graph.MessageChannel = java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessageChannel> . getValue ( ) ; MessageChannelNode org.springframework.integration.support.management.graph.MessageChannelNode = this . org.springframework.integration.support.management.graph.IntegrationGraphServer.NodeFactory . org.springframework.integration.support.management.graph.MessageChannelNode ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessageChannel> . getKey ( ) , org.springframework.integration.support.management.graph.MessageChannel ) ; java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessageChannel> . getKey ( ) ; java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> . add ( org.springframework.integration.support.management.graph.MessageChannelNode ) ; java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> . put ( java.lang.String , org.springframework.integration.support.management.graph.MessageChannelNode ) ; } return java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> < IntegrationNode > java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> , java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> < LinkNode > java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> < java.lang.String , MessageChannelNode > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> ) { java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.SourcePollingChannelAdapter> < java.lang.String , SourcePollingChannelAdapter > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.SourcePollingChannelAdapter> = this . org.springframework.integration.support.management.graph.ApplicationContext . getBeansOfType ( SourcePollingChannelAdapter .class ) ; for ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.SourcePollingChannelAdapter> < java.lang.String , SourcePollingChannelAdapter > java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.SourcePollingChannelAdapter> : java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.SourcePollingChannelAdapter> . entrySet ( ) ) { SourcePollingChannelAdapter org.springframework.integration.support.management.graph.SourcePollingChannelAdapter = java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.SourcePollingChannelAdapter> . getValue ( ) ; MessageSourceNode org.springframework.integration.support.management.graph.MessageSourceNode = this . org.springframework.integration.support.management.graph.IntegrationGraphServer.NodeFactory . org.springframework.integration.support.management.graph.MessageSourceNode ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.SourcePollingChannelAdapter> . getKey ( ) , org.springframework.integration.support.management.graph.SourcePollingChannelAdapter ) ; java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> . add ( org.springframework.integration.support.management.graph.MessageSourceNode ) ; void ( java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> , org.springframework.integration.support.management.graph.MessageSourceNode ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> < IntegrationNode > java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> , java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> < LinkNode > java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> < java.lang.String , MessageChannelNode > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> ) { java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessagingGatewaySupport> < java.lang.String , MessagingGatewaySupport > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessagingGatewaySupport> = this . org.springframework.integration.support.management.graph.ApplicationContext . getBeansOfType ( MessagingGatewaySupport .class ) ; for ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessagingGatewaySupport> < java.lang.String , MessagingGatewaySupport > java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessagingGatewaySupport> : java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessagingGatewaySupport> . entrySet ( ) ) { MessagingGatewaySupport org.springframework.integration.support.management.graph.MessagingGatewaySupport = java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessagingGatewaySupport> . getValue ( ) ; MessageGatewayNode org.springframework.integration.support.management.graph.MessageGatewayNode = this . org.springframework.integration.support.management.graph.IntegrationGraphServer.NodeFactory . org.springframework.integration.support.management.graph.MessageGatewayNode ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessagingGatewaySupport> . getKey ( ) , org.springframework.integration.support.management.graph.MessagingGatewaySupport ) ; java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> . add ( org.springframework.integration.support.management.graph.MessageGatewayNode ) ; void ( java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> , org.springframework.integration.support.management.graph.MessageGatewayNode ) ; } java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.GatewayProxyFactoryBean> < java.lang.String , GatewayProxyFactoryBean > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.GatewayProxyFactoryBean> = this . org.springframework.integration.support.management.graph.ApplicationContext . getBeansOfType ( GatewayProxyFactoryBean .class ) ; for ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.GatewayProxyFactoryBean> < java.lang.String , GatewayProxyFactoryBean > java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.GatewayProxyFactoryBean> : java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.GatewayProxyFactoryBean> . entrySet ( ) ) { java.util.Map<java.lang.reflect.Method,org.springframework.integration.support.management.graph.MessagingGatewaySupport> < java.lang.reflect.Method , MessagingGatewaySupport > java.util.Map<java.lang.reflect.Method,org.springframework.integration.support.management.graph.MessagingGatewaySupport> = java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.GatewayProxyFactoryBean> . getValue ( ) . getGateways ( ) ; for ( java.util.Map.Entry<java.lang.reflect.Method,org.springframework.integration.support.management.graph.MessagingGatewaySupport> < java.lang.reflect.Method , MessagingGatewaySupport > java.util.Map.Entry<java.lang.reflect.Method,org.springframework.integration.support.management.graph.MessagingGatewaySupport> : java.util.Map<java.lang.reflect.Method,org.springframework.integration.support.management.graph.MessagingGatewaySupport> . entrySet ( ) ) { MessagingGatewaySupport org.springframework.integration.support.management.graph.MessagingGatewaySupport = java.util.Map.Entry<java.lang.reflect.Method,org.springframework.integration.support.management.graph.MessagingGatewaySupport> . getValue ( ) ; java.lang.reflect.Method java.lang.reflect.Method = java.util.Map.Entry<java.lang.reflect.Method,org.springframework.integration.support.management.graph.MessagingGatewaySupport> . getKey ( ) ; java.lang.Class<?> < ? > [] java.lang.Class<?>[] = java.lang.reflect.Method . java.lang.Class<?>[] ( ) ; java.lang.String [] java.lang.String[] = new java.lang.String [ java.lang.Class<?>[] . int ] ; int int = NUMBER ; for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<?>[] ) { java.lang.String[] [ int ++ ] = java.lang.Class<> . java.lang.String ( ) ; } java.lang.String java.lang.String = java.lang.reflect.Method . java.lang.String ( ) + STRING + StringUtils . arrayToCommaDelimitedString ( java.lang.String[] ) + STRING ; MessageGatewayNode org.springframework.integration.support.management.graph.MessageGatewayNode = this . org.springframework.integration.support.management.graph.IntegrationGraphServer.NodeFactory . org.springframework.integration.support.management.graph.MessageGatewayNode ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.GatewayProxyFactoryBean> . getKey ( ) . substring ( NUMBER ) + STRING + java.lang.String , org.springframework.integration.support.management.graph.MessagingGatewaySupport ) ; java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> . add ( org.springframework.integration.support.management.graph.MessageGatewayNode ) ; void ( java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> , org.springframework.integration.support.management.graph.MessageGatewayNode ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> < IntegrationNode > java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> , java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> < LinkNode > java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> < java.lang.String , MessageChannelNode > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> ) { java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageProducerSupport> < java.lang.String , MessageProducerSupport > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageProducerSupport> = this . org.springframework.integration.support.management.graph.ApplicationContext . getBeansOfType ( MessageProducerSupport .class ) ; for ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessageProducerSupport> < java.lang.String , MessageProducerSupport > java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessageProducerSupport> : java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageProducerSupport> . entrySet ( ) ) { MessageProducerSupport org.springframework.integration.support.management.graph.MessageProducerSupport = java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessageProducerSupport> . getValue ( ) ; MessageProducerNode org.springframework.integration.support.management.graph.MessageProducerNode = this . org.springframework.integration.support.management.graph.IntegrationGraphServer.NodeFactory . org.springframework.integration.support.management.graph.MessageProducerNode ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.MessageProducerSupport> . getKey ( ) , org.springframework.integration.support.management.graph.MessageProducerSupport ) ; java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> . add ( org.springframework.integration.support.management.graph.MessageProducerNode ) ; void ( java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> , org.springframework.integration.support.management.graph.MessageProducerNode ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> < IntegrationNode > java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> , java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> < LinkNode > java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> < java.lang.String , MessageChannelNode > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> ) { java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.IntegrationConsumer> < java.lang.String , IntegrationConsumer > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.IntegrationConsumer> = this . org.springframework.integration.support.management.graph.ApplicationContext . getBeansOfType ( IntegrationConsumer .class ) ; for ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.IntegrationConsumer> < java.lang.String , IntegrationConsumer > java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.IntegrationConsumer> : java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.IntegrationConsumer> . entrySet ( ) ) { IntegrationConsumer org.springframework.integration.support.management.graph.IntegrationConsumer = java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.IntegrationConsumer> . getValue ( ) ; MessageHandlerNode org.springframework.integration.support.management.graph.MessageHandlerNode = org.springframework.integration.support.management.graph.IntegrationConsumer instanceof PollingConsumer ? this . org.springframework.integration.support.management.graph.IntegrationGraphServer.NodeFactory . org.springframework.integration.support.management.graph.MessageHandlerNode ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.IntegrationConsumer> . getKey ( ) , ( PollingConsumer ) org.springframework.integration.support.management.graph.IntegrationConsumer ) : this . org.springframework.integration.support.management.graph.IntegrationGraphServer.NodeFactory . org.springframework.integration.support.management.graph.MessageHandlerNode ( java.util.Map.Entry<java.lang.String,org.springframework.integration.support.management.graph.IntegrationConsumer> . getKey ( ) , org.springframework.integration.support.management.graph.IntegrationConsumer ) ; java.util.Collection<org.springframework.integration.support.management.graph.IntegrationNode> . add ( org.springframework.integration.support.management.graph.MessageHandlerNode ) ; MessageChannelNode org.springframework.integration.support.management.graph.MessageChannelNode = java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> . get ( org.springframework.integration.support.management.graph.MessageHandlerNode . getInput ( ) ) ; if ( org.springframework.integration.support.management.graph.MessageChannelNode != null ) { java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> . add ( new LinkNode ( org.springframework.integration.support.management.graph.MessageChannelNode . getNodeId ( ) , org.springframework.integration.support.management.graph.MessageHandlerNode . getNodeId ( ) , LinkNode . Type . input ) ) ; } void ( java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> , org.springframework.integration.support.management.graph.MessageHandlerNode ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> < LinkNode > java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> , java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> < java.lang.String , MessageChannelNode > java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> , EndpointNode org.springframework.integration.support.management.graph.EndpointNode ) { MessageChannelNode org.springframework.integration.support.management.graph.MessageChannelNode ; if ( org.springframework.integration.support.management.graph.EndpointNode . getOutput ( ) != null ) { org.springframework.integration.support.management.graph.MessageChannelNode = java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> . get ( org.springframework.integration.support.management.graph.EndpointNode . getOutput ( ) ) ; if ( org.springframework.integration.support.management.graph.MessageChannelNode != null ) { java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> . add ( new LinkNode ( org.springframework.integration.support.management.graph.EndpointNode . getNodeId ( ) , org.springframework.integration.support.management.graph.MessageChannelNode . getNodeId ( ) , LinkNode . Type . output ) ) ; } } if ( org.springframework.integration.support.management.graph.EndpointNode instanceof ErrorCapableNode ) { org.springframework.integration.support.management.graph.MessageChannelNode = java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> . get ( ( ( ErrorCapableNode ) org.springframework.integration.support.management.graph.EndpointNode ) . getErrors ( ) ) ; if ( org.springframework.integration.support.management.graph.MessageChannelNode != null ) { java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> . add ( new LinkNode ( org.springframework.integration.support.management.graph.EndpointNode . getNodeId ( ) , org.springframework.integration.support.management.graph.MessageChannelNode . getNodeId ( ) , LinkNode . Type . error ) ) ; } } if ( org.springframework.integration.support.management.graph.EndpointNode instanceof DiscardingMessageHandlerNode ) { org.springframework.integration.support.management.graph.MessageChannelNode = java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> . get ( ( ( DiscardingMessageHandlerNode ) org.springframework.integration.support.management.graph.EndpointNode ) . getDiscards ( ) ) ; if ( org.springframework.integration.support.management.graph.MessageChannelNode != null ) { java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> . add ( new LinkNode ( org.springframework.integration.support.management.graph.EndpointNode . getNodeId ( ) , org.springframework.integration.support.management.graph.MessageChannelNode . getNodeId ( ) , LinkNode . Type . discard ) ) ; } } if ( org.springframework.integration.support.management.graph.EndpointNode instanceof RoutingMessageHandlerNode ) { java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = ( ( RoutingMessageHandlerNode ) org.springframework.integration.support.management.graph.EndpointNode ) . getRoutes ( ) ; for ( java.lang.String java.lang.String : java.util.Collection<java.lang.String> ) { org.springframework.integration.support.management.graph.MessageChannelNode = java.util.Map<java.lang.String,org.springframework.integration.support.management.graph.MessageChannelNode> . get ( java.lang.String ) ; if ( org.springframework.integration.support.management.graph.MessageChannelNode != null ) { java.util.Collection<org.springframework.integration.support.management.graph.LinkNode> . add ( new LinkNode ( org.springframework.integration.support.management.graph.EndpointNode . getNodeId ( ) , org.springframework.integration.support.management.graph.MessageChannelNode . getNodeId ( ) , LinkNode . Type . route ) ) ; } } } }  <METHOD_END>
<METHOD_START> public org.springframework.integration.support.management.graph.Graph org.springframework.integration.support.management.graph.Graph ( ) { return org.springframework.integration.support.management.graph.Graph ( ) ; }  <METHOD_END>
<METHOD_START> void ( ) { super(); }  <METHOD_END>
<METHOD_START> private org.springframework.integration.support.management.graph.MessageChannelNode org.springframework.integration.support.management.graph.MessageChannelNode ( java.lang.String java.lang.String , MessageChannel org.springframework.integration.support.management.graph.MessageChannel ) { return new MessageChannelNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.MessageChannel ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.support.management.graph.MessageGatewayNode org.springframework.integration.support.management.graph.MessageGatewayNode ( java.lang.String java.lang.String , MessagingGatewaySupport org.springframework.integration.support.management.graph.MessagingGatewaySupport ) { java.lang.String java.lang.String = org.springframework.integration.support.management.graph.MessagingGatewaySupport . getErrorChannel ( ) != null ? org.springframework.integration.support.management.graph.MessagingGatewaySupport . getErrorChannel ( ) . toString ( ) : null ; return new MessageGatewayNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.MessagingGatewaySupport , org.springframework.integration.support.management.graph.MessagingGatewaySupport . getRequestChannel ( ) . toString ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.support.management.graph.MessageProducerNode org.springframework.integration.support.management.graph.MessageProducerNode ( java.lang.String java.lang.String , MessageProducerSupport org.springframework.integration.support.management.graph.MessageProducerSupport ) { java.lang.String java.lang.String = org.springframework.integration.support.management.graph.MessageProducerSupport . getErrorChannel ( ) != null ? org.springframework.integration.support.management.graph.MessageProducerSupport . getErrorChannel ( ) . toString ( ) : null ; return new MessageProducerNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.MessageProducerSupport , org.springframework.integration.support.management.graph.MessageProducerSupport . getOutputChannel ( ) . toString ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.support.management.graph.MessageSourceNode org.springframework.integration.support.management.graph.MessageSourceNode ( java.lang.String java.lang.String , SourcePollingChannelAdapter org.springframework.integration.support.management.graph.SourcePollingChannelAdapter ) { java.lang.String java.lang.String = org.springframework.integration.support.management.graph.SourcePollingChannelAdapter . getDefaultErrorChannel ( ) != null ? org.springframework.integration.support.management.graph.SourcePollingChannelAdapter . getDefaultErrorChannel ( ) . toString ( ) : null ; return new MessageSourceNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.SourcePollingChannelAdapter . getMessageSource ( ) , org.springframework.integration.support.management.graph.SourcePollingChannelAdapter . getOutputChannel ( ) . toString ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.support.management.graph.MessageHandlerNode org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String java.lang.String , IntegrationConsumer org.springframework.integration.support.management.graph.IntegrationConsumer ) { MessageChannel org.springframework.integration.support.management.graph.MessageChannel = org.springframework.integration.support.management.graph.IntegrationConsumer . getOutputChannel ( ) ; java.lang.String java.lang.String = org.springframework.integration.support.management.graph.MessageChannel == null ? null : org.springframework.integration.support.management.graph.MessageChannel . toString ( ) ; MessageHandler org.springframework.integration.support.management.graph.MessageHandler = org.springframework.integration.support.management.graph.IntegrationConsumer . getHandler ( ) ; if ( org.springframework.integration.support.management.graph.MessageHandler instanceof CompositeMessageHandler ) { return org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String , org.springframework.integration.support.management.graph.IntegrationConsumer , ( CompositeMessageHandler ) org.springframework.integration.support.management.graph.MessageHandler , java.lang.String , null , false ) ; } else if ( org.springframework.integration.support.management.graph.MessageHandler instanceof DiscardingMessageHandler ) { return org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String , org.springframework.integration.support.management.graph.IntegrationConsumer , ( DiscardingMessageHandler ) org.springframework.integration.support.management.graph.MessageHandler , java.lang.String , null , false ) ; } else if ( org.springframework.integration.support.management.graph.MessageHandler instanceof MappingMessageRouterManagement ) { return org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String , org.springframework.integration.support.management.graph.IntegrationConsumer , org.springframework.integration.support.management.graph.MessageHandler , ( MappingMessageRouterManagement ) org.springframework.integration.support.management.graph.MessageHandler , java.lang.String , null , false ) ; } else if ( org.springframework.integration.support.management.graph.MessageHandler instanceof RecipientListRouterManagement ) { return org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String , org.springframework.integration.support.management.graph.IntegrationConsumer , org.springframework.integration.support.management.graph.MessageHandler , ( RecipientListRouterManagement ) org.springframework.integration.support.management.graph.MessageHandler , java.lang.String , null , false ) ; } else { return new MessageHandlerNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.MessageHandler , org.springframework.integration.support.management.graph.IntegrationConsumer . getInputChannel ( ) . toString ( ) , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.integration.support.management.graph.MessageHandlerNode org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String java.lang.String , PollingConsumer org.springframework.integration.support.management.graph.PollingConsumer ) { MessageChannel org.springframework.integration.support.management.graph.MessageChannel = org.springframework.integration.support.management.graph.PollingConsumer . getOutputChannel ( ) ; java.lang.String java.lang.String = org.springframework.integration.support.management.graph.MessageChannel == null ? null : org.springframework.integration.support.management.graph.MessageChannel . toString ( ) ; java.lang.String java.lang.String = org.springframework.integration.support.management.graph.PollingConsumer . getDefaultErrorChannel ( ) != null ? org.springframework.integration.support.management.graph.PollingConsumer . getDefaultErrorChannel ( ) . toString ( ) : null ; MessageHandler org.springframework.integration.support.management.graph.MessageHandler = org.springframework.integration.support.management.graph.PollingConsumer . getHandler ( ) ; if ( org.springframework.integration.support.management.graph.MessageHandler instanceof CompositeMessageHandler ) { return org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String , org.springframework.integration.support.management.graph.PollingConsumer , ( CompositeMessageHandler ) org.springframework.integration.support.management.graph.MessageHandler , java.lang.String , java.lang.String , true ) ; } else if ( org.springframework.integration.support.management.graph.MessageHandler instanceof DiscardingMessageHandler ) { return org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String , org.springframework.integration.support.management.graph.PollingConsumer , ( DiscardingMessageHandler ) org.springframework.integration.support.management.graph.MessageHandler , java.lang.String , java.lang.String , true ) ; } else if ( org.springframework.integration.support.management.graph.MessageHandler instanceof MappingMessageRouterManagement ) { return org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String , org.springframework.integration.support.management.graph.PollingConsumer , org.springframework.integration.support.management.graph.MessageHandler , ( MappingMessageRouterManagement ) org.springframework.integration.support.management.graph.MessageHandler , java.lang.String , java.lang.String , true ) ; } else if ( org.springframework.integration.support.management.graph.MessageHandler instanceof RecipientListRouterManagement ) { return org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String , org.springframework.integration.support.management.graph.PollingConsumer , org.springframework.integration.support.management.graph.MessageHandler , ( RecipientListRouterManagement ) org.springframework.integration.support.management.graph.MessageHandler , java.lang.String , java.lang.String , true ) ; } else { return new ErrorCapableMessageHandlerNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.MessageHandler , org.springframework.integration.support.management.graph.PollingConsumer . getInputChannel ( ) . toString ( ) , java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.integration.support.management.graph.MessageHandlerNode org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String java.lang.String , IntegrationConsumer org.springframework.integration.support.management.graph.IntegrationConsumer , CompositeMessageHandler org.springframework.integration.support.management.graph.CompositeMessageHandler , java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { java.util.List<org.springframework.integration.support.management.graph.MessageHandler> < MessageHandler > java.util.List<org.springframework.integration.support.management.graph.MessageHandler> = org.springframework.integration.support.management.graph.CompositeMessageHandler . getHandlers ( ) ; java.util.List<CompositeMessageHandlerNode.InnerHandler> < CompositeMessageHandlerNode . CompositeMessageHandlerNode > java.util.List<CompositeMessageHandlerNode.InnerHandler> = new java.util.ArrayList<CompositeMessageHandlerNode.InnerHandler> < CompositeMessageHandlerNode . CompositeMessageHandlerNode > ( ) ; for ( MessageHandler org.springframework.integration.support.management.graph.MessageHandler : java.util.List<org.springframework.integration.support.management.graph.MessageHandler> ) { if ( org.springframework.integration.support.management.graph.MessageHandler instanceof NamedComponent ) { NamedComponent org.springframework.integration.support.management.graph.NamedComponent = ( NamedComponent ) org.springframework.integration.support.management.graph.MessageHandler ; java.util.List<CompositeMessageHandlerNode.InnerHandler> . add ( new CompositeMessageHandlerNode . CompositeMessageHandlerNode ( org.springframework.integration.support.management.graph.NamedComponent . getComponentName ( ) , org.springframework.integration.support.management.graph.NamedComponent . getComponentType ( ) ) ) ; } } return boolean ? new ErrorCapableCompositeMessageHandlerNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.CompositeMessageHandler , org.springframework.integration.support.management.graph.IntegrationConsumer . getInputChannel ( ) . toString ( ) , java.lang.String , java.lang.String , java.util.List<CompositeMessageHandlerNode.InnerHandler> ) : new CompositeMessageHandlerNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.CompositeMessageHandler , org.springframework.integration.support.management.graph.IntegrationConsumer . getInputChannel ( ) . toString ( ) , java.lang.String , java.util.List<CompositeMessageHandlerNode.InnerHandler> ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.support.management.graph.MessageHandlerNode org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String java.lang.String , IntegrationConsumer org.springframework.integration.support.management.graph.IntegrationConsumer , DiscardingMessageHandler org.springframework.integration.support.management.graph.DiscardingMessageHandler , java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { java.lang.String java.lang.String = org.springframework.integration.support.management.graph.DiscardingMessageHandler . getDiscardChannel ( ) != null ? org.springframework.integration.support.management.graph.DiscardingMessageHandler . getDiscardChannel ( ) . toString ( ) : null ; return boolean ? new ErrorCapableDiscardingMessageHandlerNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.DiscardingMessageHandler , org.springframework.integration.support.management.graph.IntegrationConsumer . getInputChannel ( ) . toString ( ) , java.lang.String , java.lang.String , java.lang.String ) : new DiscardingMessageHandlerNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.DiscardingMessageHandler , org.springframework.integration.support.management.graph.IntegrationConsumer . getInputChannel ( ) . toString ( ) , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.support.management.graph.MessageHandlerNode org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String java.lang.String , IntegrationConsumer org.springframework.integration.support.management.graph.IntegrationConsumer , MessageHandler org.springframework.integration.support.management.graph.MessageHandler , MappingMessageRouterManagement org.springframework.integration.support.management.graph.MappingMessageRouterManagement , java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = org.springframework.integration.support.management.graph.MappingMessageRouterManagement . getChannelMappings ( ) . values ( ) ; java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = org.springframework.integration.support.management.graph.MappingMessageRouterManagement . getDynamicChannelNames ( ) ; if ( java.util.Collection<java.lang.String> . int ( ) > NUMBER ) { java.util.Collection<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( java.util.Collection<java.lang.String> ) ; java.util.Collection<java.lang.String> . boolean ( java.util.Collection<java.lang.String> ) ; } return boolean ? new ErrorCapableRoutingNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.MessageHandler , org.springframework.integration.support.management.graph.IntegrationConsumer . getInputChannel ( ) . toString ( ) , java.lang.String , java.lang.String , java.util.Collection<java.lang.String> ) : new RoutingMessageHandlerNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.MessageHandler , org.springframework.integration.support.management.graph.IntegrationConsumer . getInputChannel ( ) . toString ( ) , java.lang.String , java.util.Collection<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.support.management.graph.MessageHandlerNode org.springframework.integration.support.management.graph.MessageHandlerNode ( java.lang.String java.lang.String , IntegrationConsumer org.springframework.integration.support.management.graph.IntegrationConsumer , MessageHandler org.springframework.integration.support.management.graph.MessageHandler , RecipientListRouterManagement org.springframework.integration.support.management.graph.RecipientListRouterManagement , java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { java.util.Collection<?> < ? > java.util.Collection<?> = org.springframework.integration.support.management.graph.RecipientListRouterManagement . getRecipients ( ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( java.util.Collection<> . int ( ) ) ; for ( java.lang.Object java.lang.Object : java.util.Collection<> ) { java.util.List<java.lang.String> . boolean ( ( ( Recipient ) java.lang.Object ) . getChannel ( ) . toString ( ) ) ; } return boolean ? new ErrorCapableRoutingNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.MessageHandler , org.springframework.integration.support.management.graph.IntegrationConsumer . getInputChannel ( ) . toString ( ) , java.lang.String , java.lang.String , java.util.List<java.lang.String> ) : new RoutingMessageHandlerNode ( this . java.util.concurrent.atomic.AtomicInteger . int ( ) , java.lang.String , org.springframework.integration.support.management.graph.MessageHandler , org.springframework.integration.support.management.graph.IntegrationConsumer . getInputChannel ( ) . toString ( ) , java.lang.String , java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { this . java.util.concurrent.atomic.AtomicInteger . void ( NUMBER ) ; }  <METHOD_END>
