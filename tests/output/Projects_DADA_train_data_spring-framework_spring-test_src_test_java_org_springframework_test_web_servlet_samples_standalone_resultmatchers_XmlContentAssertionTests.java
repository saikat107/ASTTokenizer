<METHOD_START> @ Before public void void ( ) { this . org.springframework.test.web.servlet.samples.standalone.resultmatchers.MockMvc = standaloneSetup ( new org.springframework.test.web.servlet.samples.standalone.resultmatchers.XmlContentAssertionTests.MusicController ( ) ) . defaultRequest ( get ( STRING ) . accept ( MediaType . APPLICATION_XML , MediaType . parseMediaType ( STRING ) ) ) . alwaysExpect ( status ( ) . isOk ( ) ) . alwaysExpect ( content ( ) . contentType ( MediaType . parseMediaType ( STRING ) ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.test.web.servlet.samples.standalone.resultmatchers.MockMvc . perform ( get ( STRING ) ) . andExpect ( content ( ) . xml ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . org.springframework.test.web.servlet.samples.standalone.resultmatchers.MockMvc . perform ( get ( STRING ) ) . andExpect ( content ( ) . node ( hasXPath ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ RequestMapping ( value = STRING ) public @ ResponseBody org.springframework.test.web.servlet.samples.standalone.resultmatchers.XmlContentAssertionTests.PeopleWrapper org.springframework.test.web.servlet.samples.standalone.resultmatchers.XmlContentAssertionTests.PeopleWrapper ( ) { java.util.List<org.springframework.test.web.servlet.samples.standalone.resultmatchers.Person> < Person > java.util.List<org.springframework.test.web.servlet.samples.standalone.resultmatchers.Person> = java.util.Arrays . java.util.List ( new Person ( STRING ) . setSomeDouble ( NUMBER ) , new Person ( STRING ) . setSomeDouble ( NUMBER ) , new Person ( STRING ) . setSomeDouble ( NUMBER ) , new Person ( STRING ) . setSomeDouble ( java.lang.Double . double ) ) ; return new org.springframework.test.web.servlet.samples.standalone.resultmatchers.XmlContentAssertionTests.PeopleWrapper ( java.util.List<org.springframework.test.web.servlet.samples.standalone.resultmatchers.Person> ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> public void ( java.util.List<org.springframework.test.web.servlet.samples.standalone.resultmatchers.Person> < Person > java.util.List<org.springframework.test.web.servlet.samples.standalone.resultmatchers.Person> ) { this . java.util.List<org.springframework.test.web.servlet.samples.standalone.resultmatchers.Person> = java.util.List<org.springframework.test.web.servlet.samples.standalone.resultmatchers.Person> ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.test.web.servlet.samples.standalone.resultmatchers.Person> < Person > java.util.List<org.springframework.test.web.servlet.samples.standalone.resultmatchers.Person> ( ) { return this . java.util.List<org.springframework.test.web.servlet.samples.standalone.resultmatchers.Person> ; }  <METHOD_END>
