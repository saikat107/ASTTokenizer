<METHOD_START> protected java.lang.String java.lang.String ( ) { return java.lang.Class<? extends org.springframework.data.gemfire.config.xml.InvalidRegionExpirationAttributesNamespaceTest> ( ) . java.lang.String ( ) . java.lang.String ( STRING , STRING ) . java.lang.String ( STRING ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext ( ) { return new GenericXmlApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext ( ConfigurableApplicationContext org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext ) { org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext . getBeanFactory ( ) . addBeanPostProcessor ( new GemfireTestBeanPostProcessor ( ) ) ; return org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext ( ConfigurableApplicationContext org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext ) { assertTrue ( org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext instanceof GenericXmlApplicationContext ) ; ( ( GenericXmlApplicationContext ) org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext ) . load ( java.lang.String ( ) ) ; org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext . registerShutdownHook ( ) ; org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext . refresh ( ) ; return org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = XmlBeanDefinitionStoreException .class ) public void void ( ) { try { org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext ( org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext ( org.springframework.data.gemfire.config.xml.ConfigurableApplicationContext ( ) ) ) ; } catch ( XmlBeanDefinitionStoreException org.springframework.data.gemfire.config.xml.XmlBeanDefinitionStoreException ) { org.springframework.data.gemfire.config.xml.XmlBeanDefinitionStoreException . printStackTrace ( ) ; assertTrue ( org.springframework.data.gemfire.config.xml.XmlBeanDefinitionStoreException . getCause ( ) instanceof org.xml.sax.SAXParseException ) ; throw org.springframework.data.gemfire.config.xml.XmlBeanDefinitionStoreException ; } }  <METHOD_END>
