<METHOD_START> public void ( JobLauncher org.springframework.boot.autoconfigure.batch.JobLauncher , JobExplorer org.springframework.boot.autoconfigure.batch.JobExplorer ) { this . org.springframework.boot.autoconfigure.batch.JobLauncher = org.springframework.boot.autoconfigure.batch.JobLauncher ; this . org.springframework.boot.autoconfigure.batch.JobExplorer = org.springframework.boot.autoconfigure.batch.JobExplorer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationEventPublisher org.springframework.boot.autoconfigure.batch.ApplicationEventPublisher ) { this . org.springframework.boot.autoconfigure.batch.ApplicationEventPublisher = org.springframework.boot.autoconfigure.batch.ApplicationEventPublisher ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void void ( JobRegistry org.springframework.boot.autoconfigure.batch.JobRegistry ) { this . org.springframework.boot.autoconfigure.batch.JobRegistry = org.springframework.boot.autoconfigure.batch.JobRegistry ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void void ( JobParametersConverter org.springframework.boot.autoconfigure.batch.JobParametersConverter ) { this . org.springframework.boot.autoconfigure.batch.JobParametersConverter = org.springframework.boot.autoconfigure.batch.JobParametersConverter ; }  <METHOD_END>
<METHOD_START> @ Autowired ( required = false ) public void void ( java.util.Collection<org.springframework.boot.autoconfigure.batch.Job> < Job > java.util.Collection<org.springframework.boot.autoconfigure.batch.Job> ) { this . java.util.Collection<org.springframework.boot.autoconfigure.batch.Job> = java.util.Collection<org.springframework.boot.autoconfigure.batch.Job> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String ... java.lang.String[] ) throws org.springframework.boot.autoconfigure.batch.JobExecutionException { org.springframework.boot.autoconfigure.batch.Log . info ( STRING + java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; void ( StringUtils . splitArrayElementsIntoProperties ( java.lang.String[] , STRING ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( java.util.Properties java.util.Properties )			throws org.springframework.boot.autoconfigure.batch.JobExecutionException { JobParameters org.springframework.boot.autoconfigure.batch.JobParameters = this . org.springframework.boot.autoconfigure.batch.JobParametersConverter . getJobParameters ( java.util.Properties ) ; void ( org.springframework.boot.autoconfigure.batch.JobParameters ) ; void ( org.springframework.boot.autoconfigure.batch.JobParameters ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.batch.JobParameters org.springframework.boot.autoconfigure.batch.JobParameters ( Job org.springframework.boot.autoconfigure.batch.Job , JobParameters org.springframework.boot.autoconfigure.batch.JobParameters ) { java.lang.String java.lang.String = org.springframework.boot.autoconfigure.batch.Job . getName ( ) ; JobParameters org.springframework.boot.autoconfigure.batch.JobParameters = new JobParameters ( ) ; java.util.List<org.springframework.boot.autoconfigure.batch.JobInstance> < JobInstance > java.util.List<org.springframework.boot.autoconfigure.batch.JobInstance> = this . org.springframework.boot.autoconfigure.batch.JobExplorer . getJobInstances ( java.lang.String , NUMBER , NUMBER ) ; JobParametersIncrementer org.springframework.boot.autoconfigure.batch.JobParametersIncrementer = org.springframework.boot.autoconfigure.batch.Job . getJobParametersIncrementer ( ) ; java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> < java.lang.String , JobParameter > java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> = org.springframework.boot.autoconfigure.batch.JobParameters . getParameters ( ) ; if ( java.util.List<org.springframework.boot.autoconfigure.batch.JobInstance> . isEmpty ( ) ) { if ( org.springframework.boot.autoconfigure.batch.JobParametersIncrementer != null ) { org.springframework.boot.autoconfigure.batch.JobParameters = org.springframework.boot.autoconfigure.batch.JobParametersIncrementer . getNext ( new JobParameters ( ) ) ; } } else { java.util.List<org.springframework.boot.autoconfigure.batch.JobExecution> < JobExecution > java.util.List<org.springframework.boot.autoconfigure.batch.JobExecution> = this . org.springframework.boot.autoconfigure.batch.JobExplorer . getJobExecutions ( java.util.List<org.springframework.boot.autoconfigure.batch.JobInstance> . get ( NUMBER ) ) ; JobExecution org.springframework.boot.autoconfigure.batch.JobExecution = java.util.List<org.springframework.boot.autoconfigure.batch.JobExecution> . get ( NUMBER ) ; if ( org.springframework.boot.autoconfigure.batch.JobExecution == null ) { if ( org.springframework.boot.autoconfigure.batch.JobParametersIncrementer != null ) { org.springframework.boot.autoconfigure.batch.JobParameters = org.springframework.boot.autoconfigure.batch.JobParametersIncrementer . getNext ( new JobParameters ( ) ) ; } } else if ( boolean ( org.springframework.boot.autoconfigure.batch.JobExecution ) && org.springframework.boot.autoconfigure.batch.Job . isRestartable ( ) ) { org.springframework.boot.autoconfigure.batch.JobParameters = org.springframework.boot.autoconfigure.batch.JobExecution . getJobParameters ( ) ; void ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> ) ; } else if ( org.springframework.boot.autoconfigure.batch.JobParametersIncrementer != null ) { org.springframework.boot.autoconfigure.batch.JobParameters = org.springframework.boot.autoconfigure.batch.JobParametersIncrementer . getNext ( org.springframework.boot.autoconfigure.batch.JobExecution . getJobParameters ( ) ) ; } } return org.springframework.boot.autoconfigure.batch.JobParameters ( org.springframework.boot.autoconfigure.batch.JobParameters , java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( JobExecution org.springframework.boot.autoconfigure.batch.JobExecution ) { BatchStatus org.springframework.boot.autoconfigure.batch.BatchStatus = org.springframework.boot.autoconfigure.batch.JobExecution . getStatus ( ) ; return ( org.springframework.boot.autoconfigure.batch.BatchStatus == BatchStatus . STOPPED || org.springframework.boot.autoconfigure.batch.BatchStatus == BatchStatus . FAILED ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> < java.lang.String , JobParameter > java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> ) { java.util.HashMap<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> < java.lang.String , JobParameter > java.util.HashMap<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> = new java.util.HashMap <> ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> < java.lang.String , JobParameter > java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> : java.util.HashMap<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> . entrySet ( ) ) { if ( ! java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> . getValue ( ) . isIdentifying ( ) ) { java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> . remove ( java.util.Map.Entry<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> . getKey ( ) ) ; } } }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.batch.JobParameters org.springframework.boot.autoconfigure.batch.JobParameters ( JobParameters org.springframework.boot.autoconfigure.batch.JobParameters , java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> < java.lang.String , JobParameter > java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> ) { java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> < java.lang.String , JobParameter > java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> = new java.util.HashMap<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> <> ( ) ; java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> . putAll ( org.springframework.boot.autoconfigure.batch.JobParameters . getParameters ( ) ) ; java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> . putAll ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> ) ; org.springframework.boot.autoconfigure.batch.JobParameters = new JobParameters ( java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.batch.JobParameter> ) ; return org.springframework.boot.autoconfigure.batch.JobParameters ; }  <METHOD_END>
<METHOD_START> private void void ( JobParameters org.springframework.boot.autoconfigure.batch.JobParameters )			throws org.springframework.boot.autoconfigure.batch.JobExecutionException { if ( this . org.springframework.boot.autoconfigure.batch.JobRegistry != null && StringUtils . hasText ( this . java.lang.String ) ) { java.lang.String [] java.lang.String[] = this . java.lang.String . java.lang.String[] ( STRING ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { try { Job org.springframework.boot.autoconfigure.batch.Job = this . org.springframework.boot.autoconfigure.batch.JobRegistry . getJob ( java.lang.String ) ; if ( this . java.util.Collection<org.springframework.boot.autoconfigure.batch.Job> . contains ( org.springframework.boot.autoconfigure.batch.Job ) ) { continue; } void ( org.springframework.boot.autoconfigure.batch.Job , org.springframework.boot.autoconfigure.batch.JobParameters ) ; } catch ( NoSuchJobException org.springframework.boot.autoconfigure.batch.NoSuchJobException ) { org.springframework.boot.autoconfigure.batch.Log . debug ( STRING + java.lang.String ) ; continue; } } } }  <METHOD_END>
<METHOD_START> protected void void ( Job org.springframework.boot.autoconfigure.batch.Job , JobParameters org.springframework.boot.autoconfigure.batch.JobParameters )			throws org.springframework.boot.autoconfigure.batch.JobExecutionAlreadyRunningException , org.springframework.boot.autoconfigure.batch.JobRestartException , org.springframework.boot.autoconfigure.batch.JobInstanceAlreadyCompleteException , org.springframework.boot.autoconfigure.batch.JobParametersInvalidException , org.springframework.boot.autoconfigure.batch.JobParametersNotFoundException { JobParameters org.springframework.boot.autoconfigure.batch.JobParameters = org.springframework.boot.autoconfigure.batch.JobParameters ( org.springframework.boot.autoconfigure.batch.Job , org.springframework.boot.autoconfigure.batch.JobParameters ) ; if ( org.springframework.boot.autoconfigure.batch.JobParameters != null ) { JobExecution org.springframework.boot.autoconfigure.batch.JobExecution = this . org.springframework.boot.autoconfigure.batch.JobLauncher . run ( org.springframework.boot.autoconfigure.batch.Job , org.springframework.boot.autoconfigure.batch.JobParameters ) ; if ( this . org.springframework.boot.autoconfigure.batch.ApplicationEventPublisher != null ) { this . org.springframework.boot.autoconfigure.batch.ApplicationEventPublisher . publishEvent ( new JobExecutionEvent ( org.springframework.boot.autoconfigure.batch.JobExecution ) ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( JobParameters org.springframework.boot.autoconfigure.batch.JobParameters )			throws org.springframework.boot.autoconfigure.batch.JobExecutionException { for ( Job org.springframework.boot.autoconfigure.batch.Job : this . java.util.Collection<org.springframework.boot.autoconfigure.batch.Job> ) { if ( StringUtils . hasText ( this . java.lang.String ) ) { java.lang.String [] java.lang.String[] = this . java.lang.String . java.lang.String[] ( STRING ) ; if ( ! PatternMatchUtils . simpleMatch ( java.lang.String[] , org.springframework.boot.autoconfigure.batch.Job . getName ( ) ) ) { org.springframework.boot.autoconfigure.batch.Log . debug ( STRING + org.springframework.boot.autoconfigure.batch.Job . getName ( ) ) ; continue; } } void ( org.springframework.boot.autoconfigure.batch.Job , org.springframework.boot.autoconfigure.batch.JobParameters ) ; } }  <METHOD_END>
