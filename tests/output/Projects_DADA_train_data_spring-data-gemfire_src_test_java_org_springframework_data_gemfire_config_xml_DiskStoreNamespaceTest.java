<METHOD_START> @ Test public void void ( ) { assertNotNull ( STRING , org.springframework.data.gemfire.config.xml.DiskStore ) ; assertEquals ( STRING , org.springframework.data.gemfire.config.xml.DiskStore . getName ( ) ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean ( java.util.Properties . java.lang.String ( STRING ) ) , org.springframework.data.gemfire.config.xml.DiskStore . getAllowForceCompaction ( ) ) ; assertEquals ( java.lang.Boolean . java.lang.Boolean ( java.util.Properties . java.lang.String ( STRING ) ) , org.springframework.data.gemfire.config.xml.DiskStore . getAutoCompact ( ) ) ; assertEquals ( java.lang.Long . java.lang.Long ( java.util.Properties . java.lang.String ( STRING ) ) , java.lang.Long . java.lang.Long ( org.springframework.data.gemfire.config.xml.DiskStore . getCompactionThreshold ( ) ) ) ; assertEquals ( java.lang.Double . java.lang.Double ( java.util.Properties . java.lang.String ( STRING ) ) , java.lang.Double . java.lang.Double ( org.springframework.data.gemfire.config.xml.DiskStore . getDiskUsageCriticalPercentage ( ) ) ) ; assertEquals ( java.lang.Double . java.lang.Double ( java.util.Properties . java.lang.String ( STRING ) ) , java.lang.Double . java.lang.Double ( org.springframework.data.gemfire.config.xml.DiskStore . getDiskUsageWarningPercentage ( ) ) ) ; assertEquals ( java.lang.Long . java.lang.Long ( java.util.Properties . java.lang.String ( STRING ) ) , java.lang.Long . java.lang.Long ( org.springframework.data.gemfire.config.xml.DiskStore . getMaxOplogSize ( ) ) ) ; assertEquals ( java.lang.Long . java.lang.Long ( java.util.Properties . java.lang.String ( STRING ) ) , java.lang.Long . java.lang.Long ( org.springframework.data.gemfire.config.xml.DiskStore . getQueueSize ( ) ) ) ; assertEquals ( java.lang.Long . java.lang.Long ( java.util.Properties . java.lang.String ( STRING ) ) , java.lang.Long . java.lang.Long ( org.springframework.data.gemfire.config.xml.DiskStore . getTimeInterval ( ) ) ) ; assertEquals ( java.lang.Long . java.lang.Long ( java.util.Properties . java.lang.String ( STRING ) ) , java.lang.Long . java.lang.Long ( org.springframework.data.gemfire.config.xml.DiskStore . getWriteBufferSize ( ) ) ) ; assertNotNull ( org.springframework.data.gemfire.config.xml.DiskStore . getDiskDirs ( ) ) ; assertEquals ( NUMBER , org.springframework.data.gemfire.config.xml.DiskStore . getDiskDirs ( ) . length ) ; assertEquals ( new java.io.File ( java.util.Properties . java.lang.String ( STRING ) ) , org.springframework.data.gemfire.config.xml.DiskStore . getDiskDirs ( ) [ NUMBER ] ) ; assertEquals ( java.lang.Long . java.lang.Long ( java.util.Properties . java.lang.String ( STRING ) ) , java.lang.Long . java.lang.Long ( org.springframework.data.gemfire.config.xml.DiskStore . getDiskDirSizes ( ) [ NUMBER ] ) ) ; }  <METHOD_END>
