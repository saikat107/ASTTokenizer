<METHOD_START> public void ( ) { setViewClass ( java.lang.Class<?> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return MustacheView .class ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Compiler java.lang.Compiler ) { this . java.lang.Compiler = java.lang.Compiler ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.boot.autoconfigure.mustache.web.View org.springframework.boot.autoconfigure.mustache.web.View ( java.lang.String java.lang.String , java.util.Locale java.util.Locale ) throws java.lang.Exception { Resource org.springframework.boot.autoconfigure.mustache.web.Resource = org.springframework.boot.autoconfigure.mustache.web.Resource ( java.lang.String , java.util.Locale ) ; if ( org.springframework.boot.autoconfigure.mustache.web.Resource == null ) { return null ; } MustacheView org.springframework.boot.autoconfigure.mustache.web.MustacheView = ( MustacheView ) super. loadView ( java.lang.String , java.util.Locale ) ; org.springframework.boot.autoconfigure.mustache.web.MustacheView . setTemplate ( org.springframework.boot.autoconfigure.mustache.web.Template ( org.springframework.boot.autoconfigure.mustache.web.Resource ) ) ; return org.springframework.boot.autoconfigure.mustache.web.MustacheView ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.mustache.web.Resource org.springframework.boot.autoconfigure.mustache.web.Resource ( java.lang.String java.lang.String , java.util.Locale java.util.Locale ) { return org.springframework.boot.autoconfigure.mustache.web.Resource ( java.lang.String , java.lang.String ( java.util.Locale ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.mustache.web.Resource org.springframework.boot.autoconfigure.mustache.web.Resource ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { Resource org.springframework.boot.autoconfigure.mustache.web.Resource = getApplicationContext ( ) . getResource ( getPrefix ( ) + java.lang.String + java.lang.String + getSuffix ( ) ) ; if ( org.springframework.boot.autoconfigure.mustache.web.Resource == null || ! org.springframework.boot.autoconfigure.mustache.web.Resource . exists ( ) ) { if ( java.lang.String . boolean ( ) ) { return null ; } int int = java.lang.String . int ( STRING ) ; return org.springframework.boot.autoconfigure.mustache.web.Resource ( java.lang.String , java.lang.String . java.lang.String ( NUMBER , int ) ) ; } return org.springframework.boot.autoconfigure.mustache.web.Resource ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.util.Locale java.util.Locale ) { if ( java.util.Locale == null ) { return STRING ; } LocaleEditor org.springframework.boot.autoconfigure.mustache.web.LocaleEditor = new LocaleEditor ( ) ; org.springframework.boot.autoconfigure.mustache.web.LocaleEditor . setValue ( java.util.Locale ) ; return STRING + org.springframework.boot.autoconfigure.mustache.web.LocaleEditor . getAsText ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.mustache.web.Template org.springframework.boot.autoconfigure.mustache.web.Template ( Resource org.springframework.boot.autoconfigure.mustache.web.Resource ) throws java.io.IOException { java.io.Reader java.io.Reader = java.io.Reader ( org.springframework.boot.autoconfigure.mustache.web.Resource ) ; try { return this . java.lang.Compiler . compile ( java.io.Reader ) ; } finally { java.io.Reader . void ( ) ; } }  <METHOD_END>
<METHOD_START> private java.io.Reader java.io.Reader ( Resource org.springframework.boot.autoconfigure.mustache.web.Resource ) throws java.io.IOException { if ( this . java.lang.String != null ) { return new java.io.InputStreamReader ( org.springframework.boot.autoconfigure.mustache.web.Resource . getInputStream ( ) , this . java.lang.String ) ; } return new java.io.InputStreamReader ( org.springframework.boot.autoconfigure.mustache.web.Resource . getInputStream ( ) ) ; }  <METHOD_END>
