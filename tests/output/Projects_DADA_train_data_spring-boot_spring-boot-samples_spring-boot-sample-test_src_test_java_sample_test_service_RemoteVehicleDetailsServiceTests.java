<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . sample.test.service.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; this . sample.test.service.ExpectedException . expectMessage ( STRING ) ; this . sample.test.service.RemoteVehicleDetailsService . getVehicleDetails ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . sample.test.service.MockRestServiceServer . expect ( requestTo ( STRING + java.lang.String + STRING ) ) . andRespond ( withSuccess ( sample.test.service.ClassPathResource ( STRING ) , MediaType . APPLICATION_JSON ) ) ; VehicleDetails sample.test.service.VehicleDetails = this . sample.test.service.RemoteVehicleDetailsService . getVehicleDetails ( new VehicleIdentificationNumber ( java.lang.String ) ) ; assertThat ( sample.test.service.VehicleDetails . getMake ( ) ) . isEqualTo ( STRING ) ; assertThat ( sample.test.service.VehicleDetails . getModel ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . sample.test.service.MockRestServiceServer . expect ( requestTo ( STRING + java.lang.String + STRING ) ) . andRespond ( withStatus ( HttpStatus . NOT_FOUND ) ) ; this . sample.test.service.ExpectedException . expect ( VehicleIdentificationNumberNotFoundException .class ) ; this . sample.test.service.RemoteVehicleDetailsService . getVehicleDetails ( new VehicleIdentificationNumber ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { this . sample.test.service.MockRestServiceServer . expect ( requestTo ( STRING + java.lang.String + STRING ) ) . andRespond ( withServerError ( ) ) ; this . sample.test.service.ExpectedException . expect ( HttpServerErrorException .class ) ; this . sample.test.service.RemoteVehicleDetailsService . getVehicleDetails ( new VehicleIdentificationNumber ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> private sample.test.service.ClassPathResource sample.test.service.ClassPathResource ( java.lang.String java.lang.String ) { return new ClassPathResource ( java.lang.String , java.lang.Class<? extends sample.test.service.RemoteVehicleDetailsServiceTests> ( ) ) ; }  <METHOD_END>
