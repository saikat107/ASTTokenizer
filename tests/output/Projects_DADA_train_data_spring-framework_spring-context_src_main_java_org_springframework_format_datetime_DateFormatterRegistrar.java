<METHOD_START> public void void ( DateFormatter org.springframework.format.datetime.DateFormatter ) { Assert . notNull ( org.springframework.format.datetime.DateFormatter , STRING ) ; this . org.springframework.format.datetime.DateFormatter = org.springframework.format.datetime.DateFormatter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( FormatterRegistry org.springframework.format.datetime.FormatterRegistry ) { void ( org.springframework.format.datetime.FormatterRegistry ) ; org.springframework.format.datetime.FormatterRegistry . addFormatterForFieldAnnotation ( new DateTimeFormatAnnotationFormatterFactory ( ) ) ; if ( this . org.springframework.format.datetime.DateFormatter != null ) { org.springframework.format.datetime.FormatterRegistry . addFormatter ( this . org.springframework.format.datetime.DateFormatter ) ; org.springframework.format.datetime.FormatterRegistry . addFormatterForFieldType ( java.util.Calendar .class , this . org.springframework.format.datetime.DateFormatter ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( ConverterRegistry org.springframework.format.datetime.ConverterRegistry ) { org.springframework.format.datetime.ConverterRegistry . addConverter ( new org.springframework.format.datetime.DateFormatterRegistrar.DateToLongConverter ( ) ) ; org.springframework.format.datetime.ConverterRegistry . addConverter ( new org.springframework.format.datetime.DateFormatterRegistrar.DateToCalendarConverter ( ) ) ; org.springframework.format.datetime.ConverterRegistry . addConverter ( new org.springframework.format.datetime.DateFormatterRegistrar.CalendarToDateConverter ( ) ) ; org.springframework.format.datetime.ConverterRegistry . addConverter ( new org.springframework.format.datetime.DateFormatterRegistrar.CalendarToLongConverter ( ) ) ; org.springframework.format.datetime.ConverterRegistry . addConverter ( new org.springframework.format.datetime.DateFormatterRegistrar.LongToDateConverter ( ) ) ; org.springframework.format.datetime.ConverterRegistry . addConverter ( new org.springframework.format.datetime.DateFormatterRegistrar.LongToCalendarConverter ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Long java.lang.Long ( java.util.Date java.util.Date ) { return java.util.Date . long ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Calendar java.util.Calendar ( java.util.Date java.util.Date ) { java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; java.util.Calendar . void ( java.util.Date ) ; return java.util.Calendar ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Date java.util.Date ( java.util.Calendar java.util.Calendar ) { return java.util.Calendar . java.util.Date ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Long java.lang.Long ( java.util.Calendar java.util.Calendar ) { return java.util.Calendar . long ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Date java.util.Date ( java.lang.Long java.lang.Long ) { return new java.util.Date ( java.lang.Long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Calendar java.util.Calendar ( java.lang.Long java.lang.Long ) { java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; java.util.Calendar . void ( java.lang.Long ) ; return java.util.Calendar ; }  <METHOD_END>
