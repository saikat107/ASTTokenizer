<METHOD_START> @ java.lang.Override public void void ( StateMachine < S , E > org.springframework.statemachine.ensemble.StateMachine<S,E> ) { if ( ! java.util.Set<org.springframework.statemachine.ensemble.StateMachine<S,E>> . contains ( org.springframework.statemachine.ensemble.StateMachine<S,E> ) ) { java.util.Set<org.springframework.statemachine.ensemble.StateMachine<S,E>> . add ( org.springframework.statemachine.ensemble.StateMachine<S,E> ) ; if ( org.springframework.statemachine.ensemble.StateMachine<S,E> == null ) { org.springframework.statemachine.ensemble.StateMachine<S,E> = org.springframework.statemachine.ensemble.StateMachine<S,E> ; } notifyJoined ( org.springframework.statemachine.ensemble.StateMachine<S,E> , org.springframework.statemachine.ensemble.StateMachineContext<S,E> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachine < S , E > org.springframework.statemachine.ensemble.StateMachine<S,E> ) { if ( java.util.Set<org.springframework.statemachine.ensemble.StateMachine<S,E>> . remove ( org.springframework.statemachine.ensemble.StateMachine<S,E> ) ) { if ( org.springframework.statemachine.ensemble.StateMachine<S,E> == org.springframework.statemachine.ensemble.StateMachine<S,E> ) { StateMachine < S , E > org.springframework.statemachine.ensemble.StateMachine<S,E> = null ; try { org.springframework.statemachine.ensemble.StateMachine<S,E> = java.util.Set<org.springframework.statemachine.ensemble.StateMachine<S,E>> . iterator ( ) . next ( ) ; } catch ( java.lang.Exception java.lang.Exception ) {				} org.springframework.statemachine.ensemble.StateMachine<S,E> = org.springframework.statemachine.ensemble.StateMachine<S,E> ; } notifyLeft ( org.springframework.statemachine.ensemble.StateMachine<S,E> , org.springframework.statemachine.ensemble.StateMachineContext<S,E> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineContext < S , E > org.springframework.statemachine.ensemble.StateMachineContext<S,E> ) { org.springframework.statemachine.ensemble.StateMachineContext<S,E> = org.springframework.statemachine.ensemble.StateMachineContext<S,E> ; notifyStateChanged ( org.springframework.statemachine.ensemble.StateMachineContext<S,E> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.ensemble.StateMachineContext<S,E> < S , E > org.springframework.statemachine.ensemble.StateMachineContext<S,E> ( ) { return org.springframework.statemachine.ensemble.StateMachineContext<S,E> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.statemachine.ensemble.StateMachine<S,E> < S , E > org.springframework.statemachine.ensemble.StateMachine<S,E> ( ) { return org.springframework.statemachine.ensemble.StateMachine<S,E> ; }  <METHOD_END>
