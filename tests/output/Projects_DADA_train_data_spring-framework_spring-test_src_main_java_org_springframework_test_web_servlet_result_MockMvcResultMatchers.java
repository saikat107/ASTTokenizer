<METHOD_START> public static org.springframework.test.web.servlet.result.RequestResultMatchers org.springframework.test.web.servlet.result.RequestResultMatchers ( ) { return new RequestResultMatchers ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.HandlerResultMatchers org.springframework.test.web.servlet.result.HandlerResultMatchers ( ) { return new HandlerResultMatchers ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.ModelResultMatchers org.springframework.test.web.servlet.result.ModelResultMatchers ( ) { return new ModelResultMatchers ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.ViewResultMatchers org.springframework.test.web.servlet.result.ViewResultMatchers ( ) { return new ViewResultMatchers ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.FlashAttributeResultMatchers org.springframework.test.web.servlet.result.FlashAttributeResultMatchers ( ) { return new FlashAttributeResultMatchers ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { java.lang.String java.lang.String = UriComponentsBuilder . fromUriString ( java.lang.String ) . buildAndExpand ( java.lang.Object[] ) . encode ( ) . toUriString ( ) ; return result -> assertEquals ( STRING , uri , result . getResponse ( ) . getForwardedUrl ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( java.lang.String java.lang.String ) { return result -> { assertTrue ( STRING , pathMatcher . isPattern ( urlPattern ) ) ; assertTrue ( STRING , pathMatcher . match ( urlPattern , result . getResponse ( ) . getForwardedUrl ( ) ) ) ; } ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { java.lang.String java.lang.String = UriComponentsBuilder . fromUriString ( java.lang.String ) . buildAndExpand ( java.lang.Object[] ) . encode ( ) . toUriString ( ) ; return result -> assertEquals ( STRING , uri , result . getResponse ( ) . getRedirectedUrl ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( java.lang.String java.lang.String ) { return result -> { assertTrue ( STRING , pathMatcher . isPattern ( urlPattern ) ) ; assertTrue ( STRING , pathMatcher . match ( urlPattern , result . getResponse ( ) . getRedirectedUrl ( ) ) ) ; } ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.StatusResultMatchers org.springframework.test.web.servlet.result.StatusResultMatchers ( ) { return new StatusResultMatchers ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.HeaderResultMatchers org.springframework.test.web.servlet.result.HeaderResultMatchers ( ) { return new HeaderResultMatchers ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.ContentResultMatchers org.springframework.test.web.servlet.result.ContentResultMatchers ( ) { return new ContentResultMatchers ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.JsonPathResultMatchers org.springframework.test.web.servlet.result.JsonPathResultMatchers ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new JsonPathResultMatchers ( java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static < T > org.springframework.test.web.servlet.result.ResultMatcher org.springframework.test.web.servlet.result.ResultMatcher ( java.lang.String java.lang.String , Matcher < T > org.springframework.test.web.servlet.result.Matcher<T> ) { return new JsonPathResultMatchers ( java.lang.String ) . value ( org.springframework.test.web.servlet.result.Matcher<T> ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.XpathResultMatchers org.springframework.test.web.servlet.result.XpathResultMatchers ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) throws javax.xml.xpath.XPathExpressionException { return new XpathResultMatchers ( java.lang.String , null , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.XpathResultMatchers org.springframework.test.web.servlet.result.XpathResultMatchers ( java.lang.String java.lang.String , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> , java.lang.Object ... java.lang.Object[] )			throws javax.xml.xpath.XPathExpressionException { return new XpathResultMatchers ( java.lang.String , java.util.Map<java.lang.String,java.lang.String> , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.test.web.servlet.result.CookieResultMatchers org.springframework.test.web.servlet.result.CookieResultMatchers ( ) { return new CookieResultMatchers ( ) ; }  <METHOD_END>
