<METHOD_START> @ Before public void void ( ) { org.springframework.beans.factory.config.ConfigurableListableBeanFactory = new DefaultListableBeanFactory ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { CustomScopeConfigurer org.springframework.beans.factory.config.CustomScopeConfigurer = new CustomScopeConfigurer ( ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . postProcessBeanFactory ( org.springframework.beans.factory.config.ConfigurableListableBeanFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Scope org.springframework.beans.factory.config.Scope = mock ( Scope .class ) ; org.springframework.beans.factory.config.ConfigurableListableBeanFactory . registerScope ( java.lang.String , org.springframework.beans.factory.config.Scope ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , org.springframework.beans.factory.config.Scope ) ; CustomScopeConfigurer org.springframework.beans.factory.config.CustomScopeConfigurer = new CustomScopeConfigurer ( ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . setScopes ( java.util.Map<java.lang.String,java.lang.Object> ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . postProcessBeanFactory ( org.springframework.beans.factory.config.ConfigurableListableBeanFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , NoOpScope .class ) ; CustomScopeConfigurer org.springframework.beans.factory.config.CustomScopeConfigurer = new CustomScopeConfigurer ( ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . setScopes ( java.util.Map<java.lang.String,java.lang.Object> ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . postProcessBeanFactory ( org.springframework.beans.factory.config.ConfigurableListableBeanFactory ) ; assertTrue ( org.springframework.beans.factory.config.ConfigurableListableBeanFactory . getRegisteredScope ( java.lang.String ) instanceof NoOpScope ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , NoOpScope .class . java.lang.String ( ) ) ; CustomScopeConfigurer org.springframework.beans.factory.config.CustomScopeConfigurer = new CustomScopeConfigurer ( ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . setScopes ( java.util.Map<java.lang.String,java.lang.Object> ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . postProcessBeanFactory ( org.springframework.beans.factory.config.ConfigurableListableBeanFactory ) ; assertTrue ( org.springframework.beans.factory.config.ConfigurableListableBeanFactory . getRegisteredScope ( java.lang.String ) instanceof NoOpScope ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , null ) ; CustomScopeConfigurer org.springframework.beans.factory.config.CustomScopeConfigurer = new CustomScopeConfigurer ( ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . setScopes ( java.util.Map<java.lang.String,java.lang.Object> ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . postProcessBeanFactory ( org.springframework.beans.factory.config.ConfigurableListableBeanFactory ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , this ) ; CustomScopeConfigurer org.springframework.beans.factory.config.CustomScopeConfigurer = new CustomScopeConfigurer ( ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . setScopes ( java.util.Map<java.lang.String,java.lang.Object> ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . postProcessBeanFactory ( org.springframework.beans.factory.config.ConfigurableListableBeanFactory ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test ( expected = java.lang.ClassCastException .class ) public void void ( ) java.lang.Exception { java.util.Map java.util.Map = new java.util.HashMap ( ) ; java.util.Map . java.lang.Object ( this , new NoOpScope ( ) ) ; CustomScopeConfigurer org.springframework.beans.factory.config.CustomScopeConfigurer = new CustomScopeConfigurer ( ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . setScopes ( java.util.Map ) ; org.springframework.beans.factory.config.CustomScopeConfigurer . postProcessBeanFactory ( org.springframework.beans.factory.config.ConfigurableListableBeanFactory ) ; }  <METHOD_END>
