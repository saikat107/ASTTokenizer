<METHOD_START> void ( ClientHttpRequest org.springframework.http.client.ClientHttpRequest ) { this . org.springframework.http.client.ClientHttpRequest = org.springframework.http.client.ClientHttpRequest ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.http.client.HttpMethod org.springframework.http.client.HttpMethod ( ) { return this . org.springframework.http.client.ClientHttpRequest . getMethod ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.net.URI java.net.URI ( ) { return this . org.springframework.http.client.ClientHttpRequest . getURI ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.http.client.ClientHttpResponse org.springframework.http.client.ClientHttpResponse ( HttpHeaders org.springframework.http.client.HttpHeaders , byte [] byte[] ) throws java.io.IOException { this . org.springframework.http.client.ClientHttpRequest . getHeaders ( ) . putAll ( org.springframework.http.client.HttpHeaders ) ; StreamUtils . copy ( byte[] , this . org.springframework.http.client.ClientHttpRequest . getBody ( ) ) ; ClientHttpResponse org.springframework.http.client.ClientHttpResponse = this . org.springframework.http.client.ClientHttpRequest . execute ( ) ; return new BufferingClientHttpResponseWrapper ( org.springframework.http.client.ClientHttpResponse ) ; }  <METHOD_END>
