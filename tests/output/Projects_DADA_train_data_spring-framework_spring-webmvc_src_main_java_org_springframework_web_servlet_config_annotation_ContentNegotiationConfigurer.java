<METHOD_START> public void ( ServletContext org.springframework.web.servlet.config.annotation.ServletContext ) { this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . setServletContext ( org.springframework.web.servlet.config.annotation.ServletContext ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( boolean boolean ) { this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . setFavorPathExtension ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( java.lang.String java.lang.String , MediaType org.springframework.web.servlet.config.annotation.MediaType ) { this . java.util.Map<java.lang.String,org.springframework.web.servlet.config.annotation.MediaType> . put ( java.lang.String , org.springframework.web.servlet.config.annotation.MediaType ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( java.util.Map<java.lang.String,org.springframework.web.servlet.config.annotation.MediaType> < java.lang.String , MediaType > java.util.Map<java.lang.String,org.springframework.web.servlet.config.annotation.MediaType> ) { if ( java.util.Map<java.lang.String,org.springframework.web.servlet.config.annotation.MediaType> != null ) { this . java.util.Map<java.lang.String,org.springframework.web.servlet.config.annotation.MediaType> . putAll ( java.util.Map<java.lang.String,org.springframework.web.servlet.config.annotation.MediaType> ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( java.util.Map<java.lang.String,org.springframework.web.servlet.config.annotation.MediaType> < java.lang.String , MediaType > java.util.Map<java.lang.String,org.springframework.web.servlet.config.annotation.MediaType> ) { this . java.util.Map<java.lang.String,org.springframework.web.servlet.config.annotation.MediaType> . clear ( ) ; org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( java.util.Map<java.lang.String,org.springframework.web.servlet.config.annotation.MediaType> ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( boolean boolean ) { this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . setIgnoreUnknownPathExtensions ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( boolean boolean ) { return this . org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( ! boolean ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( boolean boolean ) { this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . setUseRegisteredExtensionsOnly ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( boolean boolean ) { this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . setFavorParameter ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( java.lang.String java.lang.String ) { this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . setParameterName ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( boolean boolean ) { this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . setIgnoreAcceptHeader ( boolean ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( MediaType org.springframework.web.servlet.config.annotation.MediaType ) { this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . setDefaultContentType ( org.springframework.web.servlet.config.annotation.MediaType ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ( ContentNegotiationStrategy org.springframework.web.servlet.config.annotation.ContentNegotiationStrategy ) { this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . setDefaultContentTypeStrategy ( org.springframework.web.servlet.config.annotation.ContentNegotiationStrategy ) ; return this ; }  <METHOD_END>
<METHOD_START> protected org.springframework.web.servlet.config.annotation.ContentNegotiationManager org.springframework.web.servlet.config.annotation.ContentNegotiationManager ( ) java.lang.Exception { this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . addMediaTypes ( this . java.util.Map<java.lang.String,org.springframework.web.servlet.config.annotation.MediaType> ) ; this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . afterPropertiesSet ( ) ; return this . org.springframework.web.servlet.config.annotation.ContentNegotiationManagerFactoryBean . getObject ( ) ; }  <METHOD_END>
