<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.MultipleComposedCachesClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.SubMultipleComposedCachesClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.MultipleNoninheritedComposedCachesClass .class ; java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = getAllMergedAnnotations ( java.lang.Class<> , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable .class ) ; assertNotNull ( java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . int ( ) ) ; java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ( ) ; org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable = java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable ( ) ; org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable = java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable ( ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.SubMultipleNoninheritedComposedCachesClass .class ; java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = getAllMergedAnnotations ( java.lang.Class<> , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable .class ) ; assertNotNull ( java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.ComposedPlusLocalCachesClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.MultipleComposedCachesOnInterfaceClass> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.MultipleComposedCachesOnInterfaceClass > java.lang.Class<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.MultipleComposedCachesOnInterfaceClass> = org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.MultipleComposedCachesOnInterfaceClass .class ; java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = getAllMergedAnnotations ( java.lang.Class<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.MultipleComposedCachesOnInterfaceClass> , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable .class ) ; assertNotNull ( java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement = java.lang.Class<? extends org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests> ( ) . java.lang.reflect.Method ( STRING ) ; void ( java.lang.reflect.AnnotatedElement ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement = java.lang.Class<? extends org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests> ( ) . java.lang.reflect.Method ( STRING ) ; void ( java.lang.reflect.AnnotatedElement ) ; }  <METHOD_END>
<METHOD_START> @ Test @ Ignore ( STRING ) public void void ( ) java.lang.Exception { java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = getAllMergedAnnotations ( java.lang.reflect.Method ( ) , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable .class ) ; assertNotNull ( java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.MultipleComposedCachesClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.SubMultipleComposedCachesClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.MultipleNoninheritedComposedCachesClass .class ; java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = findAllMergedAnnotations ( java.lang.Class<> , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable .class ) ; assertNotNull ( java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . int ( ) ) ; java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ( ) ; org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable = java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable ( ) ; org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable = java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable ( ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.SubMultipleNoninheritedComposedCachesClass .class ; java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = findAllMergedAnnotations ( java.lang.Class<> , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable .class ) ; assertNotNull ( java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . int ( ) ) ; java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ( ) ; org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable = java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable ( ) ; org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable = java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable ( ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.ComposedPlusLocalCachesClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.MultipleComposedCachesOnInterfaceClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { void ( org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.ComposedCacheOnInterfaceAndLocalCacheClass .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement = java.lang.Class<? extends org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests> ( ) . java.lang.reflect.Method ( STRING ) ; void ( java.lang.reflect.AnnotatedElement ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement = java.lang.Class<? extends org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests> ( ) . java.lang.reflect.Method ( STRING ) ; void ( java.lang.reflect.AnnotatedElement ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { void ( java.lang.reflect.Method ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.reflect.Method java.lang.reflect.Method ( ) java.lang.NoSuchMethodException { java.lang.reflect.Method [] java.lang.reflect.Method[] = org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.StringGenericParameter .class . java.lang.reflect.Method[] ( ) ; java.lang.reflect.Method java.lang.reflect.Method = null ; java.lang.reflect.Method java.lang.reflect.Method = null ; for ( java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[] ) { if ( STRING . boolean ( java.lang.reflect.Method . java.lang.String ( ) ) && ! java.lang.reflect.Method . java.lang.Class<?>[] ( ) [ NUMBER ] . boolean ( java.lang.Integer .class ) ) { if ( java.lang.reflect.Method . java.lang.Class<?> ( ) . boolean ( java.lang.Object .class ) ) { java.lang.reflect.Method = java.lang.reflect.Method ; } else { java.lang.reflect.Method = java.lang.reflect.Method ; } } } assertTrue ( java.lang.reflect.Method != null && java.lang.reflect.Method . boolean ( ) ) ; assertTrue ( java.lang.reflect.Method != null && ! java.lang.reflect.Method . boolean ( ) ) ; return java.lang.reflect.Method ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ) { assertNotNull ( java.lang.reflect.AnnotatedElement ) ; java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = getAllMergedAnnotations ( java.lang.reflect.AnnotatedElement , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable .class ) ; assertNotNull ( java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . int ( ) ) ; java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ( ) ; org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable = java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable ( ) ; org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable = java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable ( ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ) { assertNotNull ( java.lang.reflect.AnnotatedElement ) ; java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = findAllMergedAnnotations ( java.lang.reflect.AnnotatedElement , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable .class ) ; assertNotNull ( java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ) ; assertEquals ( NUMBER , java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . int ( ) ) ; java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> < org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable > java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> = java.util.Set<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> ( ) ; org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable = java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable ( ) ; org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable = java.util.Iterator<org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable> . org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable ( ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; assertEquals ( STRING , org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.FooCache ( java.lang.String = STRING ) @ org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.BarCache ( java.lang.String = STRING ) private void void ( ) {	}  <METHOD_END>
<METHOD_START> @ org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.Cacheable ( java.lang.String = STRING , java.lang.String = STRING ) @ org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.BarCache ( java.lang.String = STRING ) private void void ( ) {	}  <METHOD_END>
<METHOD_START> T T ( java.lang.Class<T> < T > java.lang.Class<T> );  <METHOD_END>
<METHOD_START> @ org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.FooCache ( java.lang.String = STRING ) @ org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests.BarCache ( java.lang.String = STRING ) @ java.lang.Override public java.lang.String java.lang.String ( java.lang.Class<java.lang.String> < java.lang.String > java.lang.Class<java.lang.String> ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.Integer java.lang.Integer ) { return STRING ; }  <METHOD_END>
