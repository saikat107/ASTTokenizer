<METHOD_START> public void ( java.util.Set<org.springframework.boot.maven.Artifact> < Artifact > java.util.Set<org.springframework.boot.maven.Artifact> , java.util.Collection<org.springframework.boot.maven.Dependency> < Dependency > java.util.Collection<org.springframework.boot.maven.Dependency> , Log org.springframework.boot.maven.Log ) { this . java.util.Set<org.springframework.boot.maven.Artifact> = java.util.Set<org.springframework.boot.maven.Artifact> ; this . java.util.Collection<org.springframework.boot.maven.Dependency> = java.util.Collection<org.springframework.boot.maven.Dependency> ; this . org.springframework.boot.maven.Log = org.springframework.boot.maven.Log ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( LibraryCallback org.springframework.boot.maven.LibraryCallback ) throws java.io.IOException { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = java.util.Set<java.lang.String> ( this . java.util.Set<org.springframework.boot.maven.Artifact> ) ; for ( Artifact org.springframework.boot.maven.Artifact : this . java.util.Set<org.springframework.boot.maven.Artifact> ) { LibraryScope org.springframework.boot.maven.LibraryScope = java.util.Map<java.lang.String,org.springframework.boot.maven.LibraryScope> . get ( org.springframework.boot.maven.Artifact . getScope ( ) ) ; if ( org.springframework.boot.maven.LibraryScope != null && org.springframework.boot.maven.Artifact . getFile ( ) != null ) { java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.maven.Artifact ) ; if ( java.util.Set<java.lang.String> . boolean ( java.lang.String ) ) { this . org.springframework.boot.maven.Log . debug ( STRING + java.lang.String ) ; java.lang.String = org.springframework.boot.maven.Artifact . getGroupId ( ) + STRING + java.lang.String ; this . org.springframework.boot.maven.Log . debug ( STRING + java.lang.String ) ; } org.springframework.boot.maven.LibraryCallback . library ( new Library ( java.lang.String , org.springframework.boot.maven.Artifact . getFile ( ) , org.springframework.boot.maven.LibraryScope , boolean ( org.springframework.boot.maven.Artifact ) ) ) ; } } }  <METHOD_END>
<METHOD_START> private java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( java.util.Set<org.springframework.boot.maven.Artifact> < Artifact > java.util.Set<org.springframework.boot.maven.Artifact> ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; for ( Artifact org.springframework.boot.maven.Artifact : java.util.Set<org.springframework.boot.maven.Artifact> ) { java.lang.String java.lang.String = java.lang.String ( org.springframework.boot.maven.Artifact ) ; if ( org.springframework.boot.maven.Artifact . getFile ( ) != null && ! java.util.Set<java.lang.String> . boolean ( java.lang.String ) ) { java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; } } return java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( Artifact org.springframework.boot.maven.Artifact ) { if ( this . java.util.Collection<org.springframework.boot.maven.Dependency> != null ) { for ( Dependency org.springframework.boot.maven.Dependency : this . java.util.Collection<org.springframework.boot.maven.Dependency> ) { if ( org.springframework.boot.maven.Artifact . getGroupId ( ) . equals ( org.springframework.boot.maven.Dependency . getGroupId ( ) ) && org.springframework.boot.maven.Artifact . getArtifactId ( ) . equals ( org.springframework.boot.maven.Dependency . getArtifactId ( ) ) ) { return true ; } } } return false ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( Artifact org.springframework.boot.maven.Artifact ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( org.springframework.boot.maven.Artifact . getArtifactId ( ) ) . append ( STRING ) . append ( org.springframework.boot.maven.Artifact . getBaseVersion ( ) ) ; java.lang.String java.lang.String = org.springframework.boot.maven.Artifact . getClassifier ( ) ; if ( java.lang.String != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( java.lang.String ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( org.springframework.boot.maven.Artifact . getArtifactHandler ( ) . getExtension ( ) ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
