<METHOD_START> public org.springframework.data.rest.webmvc.HttpHeaders org.springframework.data.rest.webmvc.HttpHeaders ( java.util.Optional<org.springframework.data.rest.webmvc.PersistentEntityResource> < PersistentEntityResource > java.util.Optional<org.springframework.data.rest.webmvc.PersistentEntityResource> ) { return java.util.Optional<org.springframework.data.rest.webmvc.PersistentEntityResource> . map ( it -> prepareHeaders ( it . getPersistentEntity ( ) , it . getContent ( ) ) ) . orElseGet ( ( ) new HttpHeaders ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.HttpHeaders org.springframework.data.rest.webmvc.HttpHeaders ( PersistentEntity < ? , ? > org.springframework.data.rest.webmvc.PersistentEntity<?,?> , java.lang.Object java.lang.Object ) { HttpHeaders org.springframework.data.rest.webmvc.HttpHeaders = ETag . from ( org.springframework.data.rest.webmvc.PersistentEntity<,> , java.lang.Object ) . addTo ( new HttpHeaders ( ) ) ; java.util.Optional<java.lang.Long> ( java.lang.Object ) . void ( java.lang.Long -> org.springframework.data.rest.webmvc.HttpHeaders . setLastModified ( java.lang.Long ) ) ; return org.springframework.data.rest.webmvc.HttpHeaders ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.Object java.lang.Object , HttpHeaders org.springframework.data.rest.webmvc.HttpHeaders ) { Assert . notNull ( java.lang.Object , STRING ) ; Assert . notNull ( org.springframework.data.rest.webmvc.HttpHeaders , STRING ) ; if ( org.springframework.data.rest.webmvc.HttpHeaders . getIfModifiedSince ( ) == - NUMBER ) { return false ; } return java.util.Optional<java.lang.Long> ( java.lang.Object ) . java.util.Optional<java.lang.Object> ( java.lang.Long -> java.lang.Long / NUMBER * NUMBER <= org.springframework.data.rest.webmvc.HttpHeaders . getIfModifiedSince ( ) ) . orElse ( true ) ; }  <METHOD_END>
<METHOD_START> private java.util.Optional<org.springframework.data.rest.webmvc.AuditableBeanWrapper> < AuditableBeanWrapper > java.util.Optional<org.springframework.data.rest.webmvc.AuditableBeanWrapper> ( java.lang.Object java.lang.Object ) { return org.springframework.data.rest.webmvc.AuditableBeanWrapperFactory . getBeanWrapperFor ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> private java.util.Optional<java.lang.Long> < java.lang.Long > java.util.Optional<java.lang.Long> ( java.lang.Object java.lang.Object ) { return java.util.Optional<org.springframework.data.rest.webmvc.AuditableBeanWrapper> ( java.lang.Object ) . flatMap ( it -> it . getLastModifiedDate ( ) ) . map ( it -> conversionService . convert ( it , Date .class ) ) . map ( it -> conversionService . convert ( it , Instant .class ) ) . map ( it -> it . toEpochMilli ( ) ) ; }  <METHOD_END>
