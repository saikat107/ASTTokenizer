<METHOD_START> @ Test public void void ( ) java.lang.Exception { try { new SpringApplicationBuilder ( SampleCouchbaseApplication .class ) . run ( STRING ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { if ( boolean ( java.lang.RuntimeException ) ) { return; } } java.lang.String java.lang.String = this . sample.data.couchbase.OutputCapture . toString ( ) ; assertThat ( java.lang.String ) . contains ( STRING ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( java.lang.RuntimeException java.lang.RuntimeException ) { @ java.lang.SuppressWarnings ( STRING ) NestedCheckedException sample.data.couchbase.NestedCheckedException = new NestedCheckedException ( STRING , java.lang.RuntimeException ) {		} ; if ( sample.data.couchbase.NestedCheckedException . contains ( java.net.ConnectException .class ) ) { java.lang.Throwable java.lang.Throwable = sample.data.couchbase.NestedCheckedException . getRootCause ( ) ; if ( java.lang.Throwable . java.lang.String ( ) . boolean ( STRING ) ) { return true ; } } return false ; }  <METHOD_END>
