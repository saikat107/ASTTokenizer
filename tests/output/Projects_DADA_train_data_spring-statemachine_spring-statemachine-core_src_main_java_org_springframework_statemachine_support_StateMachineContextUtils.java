<METHOD_START> public static org.springframework.statemachine.support.TaskScheduler org.springframework.statemachine.support.TaskScheduler ( BeanFactory org.springframework.statemachine.support.BeanFactory ) { return java.lang.Object ( org.springframework.statemachine.support.BeanFactory , java.lang.String , TaskScheduler .class ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.statemachine.support.TaskExecutor org.springframework.statemachine.support.TaskExecutor ( BeanFactory org.springframework.statemachine.support.BeanFactory ) { return java.lang.Object ( org.springframework.statemachine.support.BeanFactory , java.lang.String , TaskExecutor .class ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.statemachine.support.ConversionService org.springframework.statemachine.support.ConversionService ( BeanFactory org.springframework.statemachine.support.BeanFactory ) { return java.lang.Object ( org.springframework.statemachine.support.BeanFactory , java.lang.String , ConversionService .class ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.statemachine.support.StandardEvaluationContext org.springframework.statemachine.support.StandardEvaluationContext ( BeanFactory org.springframework.statemachine.support.BeanFactory ) { return java.lang.Object ( org.springframework.statemachine.support.BeanFactory , java.lang.String , StandardEvaluationContext .class ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.statemachine.support.StateMachineEventPublisher org.springframework.statemachine.support.StateMachineEventPublisher ( BeanFactory org.springframework.statemachine.support.BeanFactory ) { return java.lang.Object ( org.springframework.statemachine.support.BeanFactory , StateMachineSystemConstants . DEFAULT_ID_EVENT_PUBLISHER , StateMachineEventPublisher .class ) ; }  <METHOD_END>
<METHOD_START> private static < T > T T ( BeanFactory org.springframework.statemachine.support.BeanFactory , java.lang.String java.lang.String , java.lang.Class<T> < T > java.lang.Class<T> ) { Assert . notNull ( org.springframework.statemachine.support.BeanFactory , STRING ) ; if ( ! org.springframework.statemachine.support.BeanFactory . containsBean ( java.lang.String ) ) { return null ; } return org.springframework.statemachine.support.BeanFactory . getBean ( java.lang.String , java.lang.Class<T> ) ; }  <METHOD_END>
