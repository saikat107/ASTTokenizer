<METHOD_START> protected void ( MessageProcessor < ? > org.springframework.integration.transformer.MessageProcessor<?> ) { Assert . notNull ( org.springframework.integration.transformer.MessageProcessor<> , STRING ) ; this . org.springframework.integration.transformer.MessageProcessor<?> = org.springframework.integration.transformer.MessageProcessor<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.integration.transformer.BeanFactory ) { this . org.springframework.integration.transformer.BeanFactory = org.springframework.integration.transformer.BeanFactory ; if ( this . org.springframework.integration.transformer.MessageProcessor<> instanceof BeanFactoryAware ) { ( ( BeanFactoryAware ) this . org.springframework.integration.transformer.MessageProcessor<> ) . setBeanFactory ( org.springframework.integration.transformer.BeanFactory ) ; } }  <METHOD_END>
<METHOD_START> protected org.springframework.integration.transformer.MessageBuilderFactory org.springframework.integration.transformer.MessageBuilderFactory ( ) { if ( ! this . boolean ) { if ( this . org.springframework.integration.transformer.BeanFactory != null ) { this . org.springframework.integration.transformer.MessageBuilderFactory = IntegrationUtils . getMessageBuilderFactory ( this . org.springframework.integration.transformer.BeanFactory ) ; } this . boolean = true ; } return this . org.springframework.integration.transformer.MessageBuilderFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.integration.transformer.MessageProcessor<> instanceof Lifecycle ) { ( ( Lifecycle ) this . org.springframework.integration.transformer.MessageProcessor<> ) . start ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.springframework.integration.transformer.MessageProcessor<> instanceof Lifecycle ) { ( ( Lifecycle ) this . org.springframework.integration.transformer.MessageProcessor<> ) . stop ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ! ( this . org.springframework.integration.transformer.MessageProcessor<> instanceof Lifecycle ) || ( ( Lifecycle ) this . org.springframework.integration.transformer.MessageProcessor<> ) . isRunning ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final org.springframework.integration.transformer.Message<?> < ? > org.springframework.integration.transformer.Message<?> ( Message < ? > org.springframework.integration.transformer.Message<?> ) { java.lang.Object java.lang.Object = this . org.springframework.integration.transformer.MessageProcessor<> . processMessage ( org.springframework.integration.transformer.Message<> ) ; if ( java.lang.Object == null ) { return null ; } if ( java.lang.Object instanceof Message < ? > ) { return ( Message < ? > ) java.lang.Object ; } return org.springframework.integration.transformer.MessageBuilderFactory ( ) . withPayload ( java.lang.Object ) . copyHeaders ( org.springframework.integration.transformer.Message<> . getHeaders ( ) ) . build ( ) ; }  <METHOD_END>
