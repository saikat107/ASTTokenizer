<METHOD_START> @ Before @ java.lang.SuppressWarnings ( STRING ) public void void ( ) { ClassPathXmlApplicationContext org.springframework.aop.aspectj.ClassPathXmlApplicationContext = new ClassPathXmlApplicationContext ( java.lang.Class<? extends org.springframework.aop.aspectj.TargetPointcutSelectionTests> ( ) . java.lang.String ( ) + STRING , java.lang.Class<? extends org.springframework.aop.aspectj.TargetPointcutSelectionTests> ( ) ) ; org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestInterface = ( org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestInterface ) org.springframework.aop.aspectj.ClassPathXmlApplicationContext . getBean ( STRING ) ; org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestInterface = ( org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestInterface ) org.springframework.aop.aspectj.ClassPathXmlApplicationContext . getBean ( STRING ) ; org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect = ( org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect ) org.springframework.aop.aspectj.ClassPathXmlApplicationContext . getBean ( STRING ) ; org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect = ( org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect ) org.springframework.aop.aspectj.ClassPathXmlApplicationContext . getBean ( STRING ) ; org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestInterceptor = ( org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestInterceptor ) org.springframework.aop.aspectj.ClassPathXmlApplicationContext . getBean ( STRING ) ; org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect . int = NUMBER ; org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect . int = NUMBER ; org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect . int = NUMBER ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestInterface . void ( ) ; assertEquals ( STRING , NUMBER , org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect . int ) ; assertEquals ( STRING , NUMBER , org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect . int ) ; assertEquals ( STRING , NUMBER , org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect . int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestInterface . void ( ) ; assertEquals ( STRING , NUMBER , org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect . int ) ; assertEquals ( STRING , NUMBER , org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect . int ) ; assertEquals ( STRING , NUMBER , org.springframework.aop.aspectj.TargetPointcutSelectionTests.TestAspect . int ) ; }  <METHOD_END>
<METHOD_START> public void void ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
<METHOD_START> public void void ( ) { int ++ ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( MethodInvocation org.springframework.aop.aspectj.MethodInvocation ) throws java.lang.Throwable { void ( ) ; return org.springframework.aop.aspectj.MethodInvocation . proceed ( ) ; }  <METHOD_END>
