<METHOD_START> @ Test public void void ( ) { SimpleUrlHandlerMapping org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping = new SimpleUrlHandlerMapping ( ) ; org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping . setUrlMap ( java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( STRING , new java.lang.Object ( ) ) ) ; org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping . setApplicationContext ( new StaticApplicationContext ( ) ) ; org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping . initApplicationContext ( ) ; this . org.springframework.boot.actuate.endpoint.RequestMappingEndpoint . setHandlerMappings ( java.util.Collections .< AbstractUrlHandlerMapping > java.util.List<org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping> ( org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping ) ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.actuate.endpoint.RequestMappingEndpoint . invoke ( ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> ) . hasSize ( NUMBER ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.boot.actuate.endpoint.StaticApplicationContext = new StaticApplicationContext ( ) ; SimpleUrlHandlerMapping org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping = new SimpleUrlHandlerMapping ( ) ; org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping . setUrlMap ( java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( STRING , new java.lang.Object ( ) ) ) ; org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping . setApplicationContext ( org.springframework.boot.actuate.endpoint.StaticApplicationContext ) ; org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping . initApplicationContext ( ) ; org.springframework.boot.actuate.endpoint.StaticApplicationContext . getDefaultListableBeanFactory ( ) . registerSingleton ( STRING , org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping ) ; this . org.springframework.boot.actuate.endpoint.RequestMappingEndpoint . setApplicationContext ( org.springframework.boot.actuate.endpoint.StaticApplicationContext ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.actuate.endpoint.RequestMappingEndpoint . invoke ( ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> ) . hasSize ( NUMBER ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { AnnotationConfigApplicationContext org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.boot.actuate.endpoint.RequestMappingEndpointTests.MappingConfiguration .class ) ; this . org.springframework.boot.actuate.endpoint.RequestMappingEndpoint . setApplicationContext ( org.springframework.boot.actuate.endpoint.AnnotationConfigApplicationContext ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.actuate.endpoint.RequestMappingEndpoint . invoke ( ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> ) . hasSize ( NUMBER ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { StaticApplicationContext org.springframework.boot.actuate.endpoint.StaticApplicationContext = new StaticApplicationContext ( ) ; EndpointHandlerMapping org.springframework.boot.actuate.endpoint.EndpointHandlerMapping = new EndpointHandlerMapping ( java.util.Arrays . java.util.List<T> ( new EndpointMvcAdapter ( new DumpEndpoint ( ) ) ) ) ; org.springframework.boot.actuate.endpoint.EndpointHandlerMapping . setApplicationContext ( new StaticApplicationContext ( ) ) ; org.springframework.boot.actuate.endpoint.EndpointHandlerMapping . afterPropertiesSet ( ) ; org.springframework.boot.actuate.endpoint.StaticApplicationContext . getDefaultListableBeanFactory ( ) . registerSingleton ( STRING , org.springframework.boot.actuate.endpoint.EndpointHandlerMapping ) ; this . org.springframework.boot.actuate.endpoint.RequestMappingEndpoint . setApplicationContext ( org.springframework.boot.actuate.endpoint.StaticApplicationContext ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.actuate.endpoint.RequestMappingEndpoint . invoke ( ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> ) . hasSize ( NUMBER ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.lang.String> ( ) . java.util.Iterator<java.lang.String> ( ) . java.lang.String ( ) . boolean ( STRING ) ) . isTrue ( ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.util.Map<java.lang.String,java.lang.Object> . java.util.Collection<java.lang.Object> ( ) . java.util.Iterator<java.lang.Object> ( ) . java.lang.Object ( ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { EndpointHandlerMapping org.springframework.boot.actuate.endpoint.EndpointHandlerMapping = new EndpointHandlerMapping ( java.util.Arrays . java.util.List<T> ( new EndpointMvcAdapter ( new DumpEndpoint ( ) ) ) ) ; org.springframework.boot.actuate.endpoint.EndpointHandlerMapping . setApplicationContext ( new StaticApplicationContext ( ) ) ; org.springframework.boot.actuate.endpoint.EndpointHandlerMapping . afterPropertiesSet ( ) ; this . org.springframework.boot.actuate.endpoint.RequestMappingEndpoint . setMethodMappings ( java.util.Collections .< AbstractHandlerMethodMapping < ? > > java.util.List<org.springframework.boot.actuate.endpoint.AbstractHandlerMethodMapping<?>> ( org.springframework.boot.actuate.endpoint.EndpointHandlerMapping ) ) ; java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = this . org.springframework.boot.actuate.endpoint.RequestMappingEndpoint . invoke ( ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> ) . hasSize ( NUMBER ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.lang.String> ( ) . java.util.Iterator<java.lang.String> ( ) . java.lang.String ( ) . boolean ( STRING ) ) . isTrue ( ) ; @ java.lang.SuppressWarnings ( STRING ) java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = ( java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ) java.util.Map<java.lang.String,java.lang.Object> . java.util.Collection<java.lang.Object> ( ) . java.util.Iterator<java.lang.Object> ( ) . java.lang.Object ( ) ; assertThat ( java.util.Map<java.lang.String,java.lang.Object> . boolean ( STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean @ Lazy @ Scope ( proxyMode = ScopedProxyMode . TARGET_CLASS ) public org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping org.springframework.boot.actuate.endpoint.AbstractUrlHandlerMapping ( ) { SimpleUrlHandlerMapping org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping = new SimpleUrlHandlerMapping ( ) ; org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping . setUrlMap ( java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( STRING , new java.lang.Object ( ) ) ) ; return org.springframework.boot.actuate.endpoint.SimpleUrlHandlerMapping ; }  <METHOD_END>
