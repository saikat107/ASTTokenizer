<METHOD_START> @ java.lang.Override public void void ( ResourceLoader org.springframework.data.repository.config.ResourceLoader ) { this . org.springframework.data.repository.config.ResourceLoader = org.springframework.data.repository.config.ResourceLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Environment org.springframework.data.repository.config.Environment ) { this . org.springframework.data.repository.config.Environment = org.springframework.data.repository.config.Environment ; }  <METHOD_END>
<METHOD_START> public void void ( AnnotationMetadata org.springframework.data.repository.config.AnnotationMetadata , BeanDefinitionRegistry org.springframework.data.repository.config.BeanDefinitionRegistry ) { Assert . notNull ( org.springframework.data.repository.config.ResourceLoader , STRING ) ; Assert . notNull ( org.springframework.data.repository.config.AnnotationMetadata , STRING ) ; Assert . notNull ( org.springframework.data.repository.config.BeanDefinitionRegistry , STRING ) ; if ( org.springframework.data.repository.config.AnnotationMetadata . getAnnotationAttributes ( java.lang.Class<? extends java.lang.annotation.Annotation> ( ) . java.lang.String ( ) ) == null ) { return; } AnnotationRepositoryConfigurationSource org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource = new AnnotationRepositoryConfigurationSource ( org.springframework.data.repository.config.AnnotationMetadata , java.lang.Class<? extends java.lang.annotation.Annotation> ( ) , org.springframework.data.repository.config.ResourceLoader , org.springframework.data.repository.config.Environment ) ; RepositoryConfigurationExtension org.springframework.data.repository.config.RepositoryConfigurationExtension = org.springframework.data.repository.config.RepositoryConfigurationExtension ( ) ; RepositoryConfigurationUtils . exposeRegistration ( org.springframework.data.repository.config.RepositoryConfigurationExtension , org.springframework.data.repository.config.BeanDefinitionRegistry , org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource ) ; RepositoryConfigurationDelegate org.springframework.data.repository.config.RepositoryConfigurationDelegate = new RepositoryConfigurationDelegate ( org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource , org.springframework.data.repository.config.ResourceLoader , org.springframework.data.repository.config.Environment ) ; org.springframework.data.repository.config.RepositoryConfigurationDelegate . registerRepositoriesIn ( org.springframework.data.repository.config.BeanDefinitionRegistry , org.springframework.data.repository.config.RepositoryConfigurationExtension ) ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ( )  <METHOD_END>
<METHOD_START> protected abstract org.springframework.data.repository.config.RepositoryConfigurationExtension org.springframework.data.repository.config.RepositoryConfigurationExtension ( )  <METHOD_END>
