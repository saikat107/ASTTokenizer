<METHOD_START> @ Bean public static org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor ( ) { return new EntityManagerBeanDefinitionRegistrarPostProcessor ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean ( ) { LocalContainerEntityManagerFactoryBean org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean ( ) ; org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean . setPersistenceUnitName ( STRING ) ; org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean . setDataSource ( javax.sql.DataSource ) ; org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean . setJpaVendorAdapter ( org.springframework.data.jpa.repository.support.JpaVendorAdapter ) ; return org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean ( ) { return org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean ( ) { return org.springframework.data.jpa.repository.support.LocalContainerEntityManagerFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessorIntegrationTests.EntityManagerInjectionTarget , is ( notNullValue ( ) ) ) ; assertThat ( org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessorIntegrationTests.EntityManagerInjectionTarget . org.springframework.data.jpa.repository.support.EntityManager , is ( notNullValue ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Autowired public void ( @ Qualifier ( STRING ) EntityManager org.springframework.data.jpa.repository.support.EntityManager ) { this . org.springframework.data.jpa.repository.support.EntityManager = org.springframework.data.jpa.repository.support.EntityManager ; }  <METHOD_END>
