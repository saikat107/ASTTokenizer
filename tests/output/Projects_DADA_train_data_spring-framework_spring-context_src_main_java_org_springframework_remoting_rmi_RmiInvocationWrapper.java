<METHOD_START> public void ( java.lang.Object java.lang.Object , RmiBasedExporter org.springframework.remoting.rmi.RmiBasedExporter ) { Assert . notNull ( java.lang.Object , STRING ) ; Assert . notNull ( org.springframework.remoting.rmi.RmiBasedExporter , STRING ) ; this . java.lang.Object = java.lang.Object ; this . org.springframework.remoting.rmi.RmiBasedExporter = org.springframework.remoting.rmi.RmiBasedExporter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.Class<?> < ? > java.lang.Class<?> = this . org.springframework.remoting.rmi.RmiBasedExporter . getServiceInterface ( ) ; return ( java.lang.Class<> != null ? java.lang.Class<> . java.lang.String ( ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( RemoteInvocation org.springframework.remoting.rmi.RemoteInvocation )		throws java.rmi.RemoteException , java.lang.NoSuchMethodException , java.lang.IllegalAccessException , java.lang.reflect.InvocationTargetException { return this . org.springframework.remoting.rmi.RmiBasedExporter . invoke ( org.springframework.remoting.rmi.RemoteInvocation , this . java.lang.Object ) ; }  <METHOD_END>
