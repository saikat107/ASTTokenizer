<METHOD_START> public void ( java.lang.String java.lang.String , SpelExpressionParser org.springframework.data.keyvalue.core.SpelExpressionParser ) { this . java.lang.String = java.lang.String ; this . org.springframework.data.keyvalue.core.SpelExpressionParser = org.springframework.data.keyvalue.core.SpelExpressionParser ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.keyvalue.core.SpelPropertyComparator<T> < T > org.springframework.data.keyvalue.core.SpelPropertyComparator<T> ( ) { this . boolean = true ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.keyvalue.core.SpelPropertyComparator<T> < T > org.springframework.data.keyvalue.core.SpelPropertyComparator<T> ( ) { this . boolean = false ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.keyvalue.core.SpelPropertyComparator<T> < T > org.springframework.data.keyvalue.core.SpelPropertyComparator<T> ( ) { this . boolean = true ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.keyvalue.core.SpelPropertyComparator<T> < T > org.springframework.data.keyvalue.core.SpelPropertyComparator<T> ( ) { this . boolean = false ; return this ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.keyvalue.core.SpelExpression org.springframework.data.keyvalue.core.SpelExpression ( ) { if ( this . org.springframework.data.keyvalue.core.SpelExpression == null ) { this . org.springframework.data.keyvalue.core.SpelExpression = org.springframework.data.keyvalue.core.SpelExpressionParser . parseRaw ( java.lang.String ( ) ) ; } return this . org.springframework.data.keyvalue.core.SpelExpression ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING + java.lang.Boolean . java.lang.String ( this . boolean ) + STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String != null ? java.lang.String . java.lang.String ( STRING , STRING ) : STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String != null ? java.lang.String . java.lang.String ( STRING , STRING ) : STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( T T , T T ) { SpelExpression org.springframework.data.keyvalue.core.SpelExpression = org.springframework.data.keyvalue.core.SpelExpression ( ) ; org.springframework.data.keyvalue.core.SpelExpression . getEvaluationContext ( ) . setVariable ( STRING , T ) ; org.springframework.data.keyvalue.core.SpelExpression . getEvaluationContext ( ) . setVariable ( STRING , T ) ; return org.springframework.data.keyvalue.core.SpelExpression . getValue ( java.lang.Integer .class ) * ( boolean ? NUMBER : - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
