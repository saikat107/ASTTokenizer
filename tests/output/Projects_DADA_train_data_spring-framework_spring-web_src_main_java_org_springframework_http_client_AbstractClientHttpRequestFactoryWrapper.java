<METHOD_START> protected void ( ClientHttpRequestFactory org.springframework.http.client.ClientHttpRequestFactory ) { Assert . notNull ( org.springframework.http.client.ClientHttpRequestFactory , STRING ) ; this . org.springframework.http.client.ClientHttpRequestFactory = org.springframework.http.client.ClientHttpRequestFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final org.springframework.http.client.ClientHttpRequest org.springframework.http.client.ClientHttpRequest ( java.net.URI java.net.URI , HttpMethod org.springframework.http.client.HttpMethod ) throws java.io.IOException { return org.springframework.http.client.ClientHttpRequest ( java.net.URI , org.springframework.http.client.HttpMethod , this . org.springframework.http.client.ClientHttpRequestFactory ) ; }  <METHOD_END>
<METHOD_START> protected abstract org.springframework.http.client.ClientHttpRequest org.springframework.http.client.ClientHttpRequest ( java.net.URI java.net.URI , HttpMethod org.springframework.http.client.HttpMethod , ClientHttpRequestFactory org.springframework.http.client.ClientHttpRequestFactory ) throws java.io.IOException ;  <METHOD_END>
