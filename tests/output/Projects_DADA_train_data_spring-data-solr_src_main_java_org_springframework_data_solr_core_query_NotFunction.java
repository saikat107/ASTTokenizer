<METHOD_START> private void ( java.lang.Object java.lang.Object ) { super( java.util.Collections . java.util.List<java.lang.Object> ( java.lang.Object ) ); }  <METHOD_END>
<METHOD_START> public static org.springframework.data.solr.core.query.NotFunction org.springframework.data.solr.core.query.NotFunction ( Field org.springframework.data.solr.core.query.Field ) { Assert . notNull ( org.springframework.data.solr.core.query.Field , STRING ) ; return org.springframework.data.solr.core.query.NotFunction ( org.springframework.data.solr.core.query.Field . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.solr.core.query.NotFunction org.springframework.data.solr.core.query.NotFunction ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return new org.springframework.data.solr.core.query.NotFunction ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.solr.core.query.NotFunction org.springframework.data.solr.core.query.NotFunction ( Function org.springframework.data.solr.core.query.Function ) { Assert . notNull ( org.springframework.data.solr.core.query.Function , STRING ) ; return new org.springframework.data.solr.core.query.NotFunction ( org.springframework.data.solr.core.query.Function ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
