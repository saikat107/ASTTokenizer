<METHOD_START> @ Before public void void ( ) { this . org.springframework.boot.actuate.metrics.opentsdb.OpenTsdbGaugeWriter = new OpenTsdbGaugeWriter ( ) ; this . org.springframework.boot.actuate.metrics.opentsdb.OpenTsdbGaugeWriter . setRestTemplate ( this . org.springframework.boot.actuate.metrics.opentsdb.RestOperations ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { this . org.springframework.boot.actuate.metrics.opentsdb.OpenTsdbGaugeWriter . set ( new Metric <> ( STRING , NUMBER ) ) ; given ( this . org.springframework.boot.actuate.metrics.opentsdb.RestOperations . postForEntity ( anyString ( ) , any ( java.lang.Object .class ) , java.lang.Class<java.util.Map> ( ) ) ) . willReturn ( org.springframework.boot.actuate.metrics.opentsdb.ResponseEntity<java.util.Map> ( ) ) ; this . org.springframework.boot.actuate.metrics.opentsdb.OpenTsdbGaugeWriter . flush ( ) ; verify ( this . org.springframework.boot.actuate.metrics.opentsdb.RestOperations ) . postForEntity ( anyString ( ) , any ( java.lang.Object .class ) , java.lang.Class<java.util.Map> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { given ( this . org.springframework.boot.actuate.metrics.opentsdb.RestOperations . postForEntity ( anyString ( ) , any ( java.lang.Object .class ) , java.lang.Class<java.util.Map> ( ) ) ) . willReturn ( org.springframework.boot.actuate.metrics.opentsdb.ResponseEntity<java.util.Map> ( ) ) ; this . org.springframework.boot.actuate.metrics.opentsdb.OpenTsdbGaugeWriter . setBufferSize ( NUMBER ) ; this . org.springframework.boot.actuate.metrics.opentsdb.OpenTsdbGaugeWriter . set ( new Metric <> ( STRING , NUMBER ) ) ; verify ( this . org.springframework.boot.actuate.metrics.opentsdb.RestOperations ) . postForEntity ( anyString ( ) , any ( java.lang.Object .class ) , java.lang.Class<java.util.Map> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private org.springframework.boot.actuate.metrics.opentsdb.ResponseEntity<java.util.Map> < java.util.Map > org.springframework.boot.actuate.metrics.opentsdb.ResponseEntity<java.util.Map> ( ) { return new ResponseEntity <> ( java.util.Collections . java.util.Map<java.lang.Object,java.lang.Object> ( ) , HttpStatus . OK ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) private java.lang.Class<java.util.Map> < java.util.Map > java.lang.Class<java.util.Map> ( ) { return any ( java.lang.Class .class ) ; }  <METHOD_END>
