<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.List<java.lang.Class<?>> = java.util.Arrays . java.util.List ( PdxReaderPropertyAccessor . INSTANCE . getSpecificTargetClasses ( ) ) ; assertThat ( java.util.List<java.lang.Class<?>> , hasItem ( PdxReader .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { when ( org.springframework.data.gemfire.mapping.PdxReader . hasField ( STRING ) ) . thenReturn ( true ) ; assertThat ( PdxReaderPropertyAccessor . INSTANCE . canRead ( null , org.springframework.data.gemfire.mapping.PdxReader , STRING ) , is ( true ) ) ; when ( org.springframework.data.gemfire.mapping.PdxReader . hasField ( STRING ) ) . thenReturn ( false ) ; assertThat ( PdxReaderPropertyAccessor . INSTANCE . canRead ( null , org.springframework.data.gemfire.mapping.PdxReader , STRING ) , is ( false ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { when ( org.springframework.data.gemfire.mapping.PdxReader . readObject ( STRING ) ) . thenReturn ( null ) ; assertThat ( PdxReaderPropertyAccessor . INSTANCE . read ( null , org.springframework.data.gemfire.mapping.PdxReader , STRING ) , is ( TypedValue . NULL ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { when ( org.springframework.data.gemfire.mapping.PdxReader . readObject ( STRING ) ) . thenReturn ( STRING ) ; TypedValue org.springframework.data.gemfire.mapping.TypedValue = PdxReaderPropertyAccessor . INSTANCE . read ( null , org.springframework.data.gemfire.mapping.PdxReader , STRING ) ; assertThat ( org.springframework.data.gemfire.mapping.TypedValue . getTypeDescriptor ( ) , is ( TypeDescriptor . valueOf ( java.lang.String .class ) ) ) ; assertThat ( org.springframework.data.gemfire.mapping.TypedValue . getValue ( ) , is ( ( java.lang.Object ) STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.UnsupportedOperationException .class ) public void void ( ) { assertThat ( PdxReaderPropertyAccessor . INSTANCE . canWrite ( null , null , null ) , is ( false ) ) ; PdxReaderPropertyAccessor . INSTANCE . write ( null , null , null , org.springframework.data.gemfire.mapping.PdxReader ) ; }  <METHOD_END>
