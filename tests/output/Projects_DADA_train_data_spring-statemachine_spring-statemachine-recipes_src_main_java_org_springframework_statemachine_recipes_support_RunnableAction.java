<METHOD_START> public void ( java.lang.Runnable java.lang.Runnable ) { this( java.lang.Runnable , null ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Runnable java.lang.Runnable , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.Runnable , STRING ) ; this . java.lang.Runnable = java.lang.Runnable ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( StateContext < java.lang.String , java.lang.String > org.springframework.statemachine.recipes.support.StateContext<java.lang.String,java.lang.String> ) { if ( ! boolean ( java.lang.String , org.springframework.statemachine.recipes.support.StateContext<java.lang.String,java.lang.String> ) ) { return; } StopWatch org.springframework.statemachine.recipes.support.StopWatch = new StopWatch ( ) ; java.lang.String java.lang.String = ( java.lang.String == null ? STRING : ( STRING + java.lang.String ) ) ; org.springframework.statemachine.recipes.support.Log . info ( STRING + java.lang.String ) ; if ( org.springframework.statemachine.recipes.support.Log . isDebugEnabled ( ) ) { org.springframework.statemachine.recipes.support.StopWatch . start ( ) ; } try { void ( java.lang.String , org.springframework.statemachine.recipes.support.StateContext<java.lang.String,java.lang.String> ) ; java.lang.Runnable . void ( ) ; void ( java.lang.String , org.springframework.statemachine.recipes.support.StateContext<java.lang.String,java.lang.String> ) ; } catch ( java.lang.Exception java.lang.Exception ) { void ( java.lang.String , org.springframework.statemachine.recipes.support.StateContext<java.lang.String,java.lang.String> , java.lang.Exception ) ; } finally { void ( java.lang.String , org.springframework.statemachine.recipes.support.StateContext<java.lang.String,java.lang.String> ) ; } if ( org.springframework.statemachine.recipes.support.Log . isDebugEnabled ( ) ) { org.springframework.statemachine.recipes.support.StopWatch . stop ( ) ; org.springframework.statemachine.recipes.support.Log . debug ( STRING + org.springframework.statemachine.recipes.support.StopWatch . getTotalTimeMillis ( ) + STRING + java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.String java.lang.String , StateContext < java.lang.String , java.lang.String > org.springframework.statemachine.recipes.support.StateContext<java.lang.String,java.lang.String> ) { return true ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , StateContext < java.lang.String , java.lang.String > org.springframework.statemachine.recipes.support.StateContext<java.lang.String,java.lang.String> ) {	}  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , StateContext < java.lang.String , java.lang.String > org.springframework.statemachine.recipes.support.StateContext<java.lang.String,java.lang.String> ) {	}  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , StateContext < java.lang.String , java.lang.String > org.springframework.statemachine.recipes.support.StateContext<java.lang.String,java.lang.String> ) {	}  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String , StateContext < java.lang.String , java.lang.String > org.springframework.statemachine.recipes.support.StateContext<java.lang.String,java.lang.String> , java.lang.Exception java.lang.Exception ) {	}  <METHOD_END>
