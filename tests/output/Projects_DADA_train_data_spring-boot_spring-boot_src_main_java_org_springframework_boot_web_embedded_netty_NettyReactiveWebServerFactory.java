<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( int int ) { super( int ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.web.embedded.netty.WebServer org.springframework.boot.web.embedded.netty.WebServer ( HttpHandler org.springframework.boot.web.embedded.netty.HttpHandler ) { HttpServer org.springframework.boot.web.embedded.netty.HttpServer = org.springframework.boot.web.embedded.netty.HttpServer ( ) ; ReactorHttpHandlerAdapter org.springframework.boot.web.embedded.netty.ReactorHttpHandlerAdapter = new ReactorHttpHandlerAdapter ( org.springframework.boot.web.embedded.netty.HttpHandler ) ; return new NettyWebServer ( org.springframework.boot.web.embedded.netty.HttpServer , org.springframework.boot.web.embedded.netty.ReactorHttpHandlerAdapter ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.web.embedded.netty.HttpServer org.springframework.boot.web.embedded.netty.HttpServer ( ) { HttpServer org.springframework.boot.web.embedded.netty.HttpServer ; if ( getAddress ( ) != null ) { org.springframework.boot.web.embedded.netty.HttpServer = HttpServer . create ( getAddress ( ) . getHostAddress ( ) , getPort ( ) ) ; } else { org.springframework.boot.web.embedded.netty.HttpServer = HttpServer . create ( getPort ( ) ) ; } return org.springframework.boot.web.embedded.netty.HttpServer ; }  <METHOD_END>
