<METHOD_START> public void ( java.sql.DatabaseMetaData java.sql.DatabaseMetaData ) throws java.sql.SQLException { super( java.sql.DatabaseMetaData ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.sql.Types . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.lang.String == null ? STRING : super. metaDataSchemaNameToUse ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jdbc.core.metadata.SqlParameter org.springframework.jdbc.core.metadata.SqlParameter ( java.lang.String java.lang.String , CallParameterMetaData org.springframework.jdbc.core.metadata.CallParameterMetaData ) { if ( org.springframework.jdbc.core.metadata.CallParameterMetaData . getSqlType ( ) == java.sql.Types . int && STRING . boolean ( org.springframework.jdbc.core.metadata.CallParameterMetaData . getTypeName ( ) ) ) { return new SqlOutParameter ( java.lang.String , int ( ) , new ColumnMapRowMapper ( ) ) ; } else { return super. createDefaultOutParameter ( java.lang.String , org.springframework.jdbc.core.metadata.CallParameterMetaData ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return ( java.lang.String . boolean ( java.lang.String ) || super. byPassReturnParameter ( java.lang.String ) ) ; }  <METHOD_END>
