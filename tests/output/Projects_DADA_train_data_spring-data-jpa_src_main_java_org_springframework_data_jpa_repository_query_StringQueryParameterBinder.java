<METHOD_START> public void ( JpaParameters org.springframework.data.jpa.repository.query.JpaParameters , java.lang.Object [] java.lang.Object[] , StringQuery org.springframework.data.jpa.repository.query.StringQuery ) { super( org.springframework.data.jpa.repository.query.JpaParameters , java.lang.Object[] ); Assert . notNull ( org.springframework.data.jpa.repository.query.StringQuery , STRING ) ; this . org.springframework.data.jpa.repository.query.StringQuery = org.springframework.data.jpa.repository.query.StringQuery ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Query org.springframework.data.jpa.repository.query.Query , JpaParameter org.springframework.data.jpa.repository.query.JpaParameter , java.lang.Object java.lang.Object , int int ) { ParameterBinding org.springframework.data.jpa.repository.query.ParameterBinding = org.springframework.data.jpa.repository.query.ParameterBinding ( org.springframework.data.jpa.repository.query.Query , int , org.springframework.data.jpa.repository.query.JpaParameter ) ; super. bind ( org.springframework.data.jpa.repository.query.Query , org.springframework.data.jpa.repository.query.JpaParameter , org.springframework.data.jpa.repository.query.ParameterBinding . prepare ( java.lang.Object ) , int ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.jpa.repository.query.ParameterBinding org.springframework.data.jpa.repository.query.ParameterBinding ( Query org.springframework.data.jpa.repository.query.Query , int int , Parameter org.springframework.data.jpa.repository.query.Parameter ) { Assert . notNull ( org.springframework.data.jpa.repository.query.Query , STRING ) ; Assert . notNull ( org.springframework.data.jpa.repository.query.Parameter , STRING ) ; if ( hasNamedParameter ( org.springframework.data.jpa.repository.query.Query ) ) { return org.springframework.data.jpa.repository.query.StringQuery . getBindingFor ( org.springframework.data.jpa.repository.query.Parameter . getName ( ) . orElseThrow ( ( ) new IllegalArgumentException ( STRING ) ) ) ; } try { org.springframework.data.jpa.repository.query.Query . getParameter ( int ) ; return org.springframework.data.jpa.repository.query.StringQuery . getBindingFor ( int ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { return new ParameterBinding ( int ) ; } }  <METHOD_END>
