<METHOD_START> @ java.lang.Override public void void ( java.lang.String ... java.lang.String[] ) throws java.lang.Exception { this . sample.data.solr.ProductRepository . deleteAll ( ) ; this . sample.data.solr.ProductRepository . save ( new Product ( STRING , STRING ) ) ; this . sample.data.solr.ProductRepository . save ( new Product ( STRING , STRING ) ) ; this . sample.data.solr.ProductRepository . save ( new Product ( STRING , STRING ) ) ; java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.System . java.io.PrintStream . void ( STRING ) ; for ( Product sample.data.solr.Product : this . sample.data.solr.ProductRepository . findAll ( ) ) { java.lang.System . java.io.PrintStream . void ( sample.data.solr.Product ) ; } java.lang.System . java.io.PrintStream . void ( ) ; java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.System . java.io.PrintStream . void ( STRING ) ; for ( Product sample.data.solr.Product : this . sample.data.solr.ProductRepository . findByNameStartingWith ( STRING ) ) { java.lang.System . java.io.PrintStream . void ( sample.data.solr.Product ) ; } java.lang.System . java.io.PrintStream . void ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String [] java.lang.String[] ) throws java.lang.Exception { SpringApplication . run ( sample.data.solr.SampleSolrApplication .class , java.lang.String[] ) ; }  <METHOD_END>
