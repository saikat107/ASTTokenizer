<METHOD_START> @ java.lang.Override public void void ( ApplicationContext org.springframework.boot.autoconfigure.security.oauth2.client.ApplicationContext ) { this . org.springframework.boot.autoconfigure.security.oauth2.client.ApplicationContext = org.springframework.boot.autoconfigure.security.oauth2.client.ApplicationContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AnnotationMetadata org.springframework.boot.autoconfigure.security.oauth2.client.AnnotationMetadata ) { this . java.lang.Class<?> = ClassUtils . resolveClassName ( org.springframework.boot.autoconfigure.security.oauth2.client.AnnotationMetadata . getClassName ( ) , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String )			throws org.springframework.boot.autoconfigure.security.oauth2.client.BeansException { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String )			throws org.springframework.boot.autoconfigure.security.oauth2.client.BeansException { if ( this . java.lang.Class<> . boolean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) && java.lang.Object instanceof WebSecurityConfigurerAdapter ) { ProxyFactory org.springframework.boot.autoconfigure.security.oauth2.client.ProxyFactory = new ProxyFactory ( ) ; org.springframework.boot.autoconfigure.security.oauth2.client.ProxyFactory . setTarget ( java.lang.Object ) ; org.springframework.boot.autoconfigure.security.oauth2.client.ProxyFactory . addAdvice ( new org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2SsoCustomConfiguration.SsoSecurityAdapter ( this . org.springframework.boot.autoconfigure.security.oauth2.client.ApplicationContext ) ) ; java.lang.Object = org.springframework.boot.autoconfigure.security.oauth2.client.ProxyFactory . getProxy ( ) ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> void ( ApplicationContext org.springframework.boot.autoconfigure.security.oauth2.client.ApplicationContext ) { this . org.springframework.boot.autoconfigure.security.oauth2.client.SsoSecurityConfigurer = new SsoSecurityConfigurer ( org.springframework.boot.autoconfigure.security.oauth2.client.ApplicationContext ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( MethodInvocation org.springframework.boot.autoconfigure.security.oauth2.client.MethodInvocation ) throws java.lang.Throwable { if ( org.springframework.boot.autoconfigure.security.oauth2.client.MethodInvocation . getMethod ( ) . getName ( ) . equals ( STRING ) ) { java.lang.reflect.Method java.lang.reflect.Method = ReflectionUtils . findMethod ( WebSecurityConfigurerAdapter .class , STRING ) ; ReflectionUtils . makeAccessible ( java.lang.reflect.Method ) ; HttpSecurity org.springframework.boot.autoconfigure.security.oauth2.client.HttpSecurity = ( HttpSecurity ) ReflectionUtils . invokeMethod ( java.lang.reflect.Method , org.springframework.boot.autoconfigure.security.oauth2.client.MethodInvocation . getThis ( ) ) ; this . org.springframework.boot.autoconfigure.security.oauth2.client.SsoSecurityConfigurer . configure ( org.springframework.boot.autoconfigure.security.oauth2.client.HttpSecurity ) ; } return org.springframework.boot.autoconfigure.security.oauth2.client.MethodInvocation . proceed ( ) ; }  <METHOD_END>
