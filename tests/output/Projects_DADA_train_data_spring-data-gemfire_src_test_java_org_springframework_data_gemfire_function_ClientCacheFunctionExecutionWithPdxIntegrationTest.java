<METHOD_START> @ BeforeClass public static void void ( ) java.lang.Exception { int int = findAvailablePort ( ) ; org.springframework.data.gemfire.function.ProcessWrapper = run ( ServerProcess .class , java.lang.String . java.lang.String ( STRING , GEMFIRE_CACHE_SERVER_PORT_PROPERTY , int ) , getServerContextXmlFileLocation ( org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest .class ) ) ; waitForServerToStart ( DEFAULT_HOSTNAME , int ) ; java.lang.System . java.lang.String ( GEMFIRE_CACHE_SERVER_PORT_PROPERTY , java.lang.String . java.lang.String ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ AfterClass public static void void ( ) { java.lang.System . java.lang.String ( GEMFIRE_CACHE_SERVER_PORT_PROPERTY ) ; stop ( org.springframework.data.gemfire.function.ProcessWrapper ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.function.PdxInstance org.springframework.data.gemfire.function.PdxInstance ( final java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { PdxInstanceFactory org.springframework.data.gemfire.function.PdxInstanceFactory = org.springframework.data.gemfire.function.ClientCache . createPdxInstanceFactory ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) . java.lang.String ( ) ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { org.springframework.data.gemfire.function.PdxInstanceFactory . writeObject ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ) ; } return org.springframework.data.gemfire.function.PdxInstanceFactory . create ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class [] java.lang.Class[] = org.springframework.data.gemfire.function.ApplicationDomainFunctionExecutions . captureConvertedArgumentTypes ( STRING , NUMBER , java.lang.Boolean . java.lang.Boolean , new org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person ( STRING , STRING ) , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Gender . org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Gender ) ; assertNotNull ( java.lang.Class[] ) ; assertEquals ( NUMBER , java.lang.Class[] . int ) ; assertEquals ( java.lang.String .class , java.lang.Class[] [ NUMBER ] ) ; assertEquals ( java.lang.Integer .class , java.lang.Class[] [ NUMBER ] ) ; assertEquals ( java.lang.Boolean .class , java.lang.Class[] [ NUMBER ] ) ; assertEquals ( org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person .class , java.lang.Class[] [ NUMBER ] ) ; assertEquals ( org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Gender .class , java.lang.Class[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.lang.Class [] java.lang.Class[] = org.springframework.data.gemfire.function.ApplicationDomainFunctionExecutions . captureUnconvertedArgumentTypes ( STRING , NUMBER , java.lang.Boolean . java.lang.Boolean , new org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person ( STRING , STRING ) , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Gender . org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Gender ) ; assertNotNull ( java.lang.Class[] ) ; assertEquals ( NUMBER , java.lang.Class[] . int ) ; assertEquals ( java.lang.String .class , java.lang.Class[] [ NUMBER ] ) ; assertEquals ( java.lang.Integer .class , java.lang.Class[] [ NUMBER ] ) ; assertEquals ( java.lang.Boolean .class , java.lang.Class[] [ NUMBER ] ) ; assertTrue ( PdxInstance .class . boolean ( java.lang.Class[] [ NUMBER ] ) ) ; assertEquals ( PdxInstanceEnum .class , java.lang.Class[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertEquals ( STRING , org.springframework.data.gemfire.function.ApplicationDomainFunctionExecutions . getAddressField ( new org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address ( STRING , STRING , STRING , STRING ) , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( NUMBER ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , java.lang.Boolean . java.lang.Boolean ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , NUMBER ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.lang.Integer java.lang.Integer = ( java.lang.Integer ) org.springframework.data.gemfire.function.ApplicationDomainFunctionExecutions . getDataField ( org.springframework.data.gemfire.function.PdxInstance ( java.util.Map<java.lang.String,java.lang.Object> ) , STRING ) ; assertEquals ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) , java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Class [] java.lang.Class[] ( final java.lang.Object ... java.lang.Object[] ) { java.lang.Class [] java.lang.Class[] = new java.lang.Class [ java.lang.Object[] . int ] ; int int = NUMBER ; for ( java.lang.Object java.lang.Object : java.lang.Object[] ) { java.lang.Class[] [ int ] = java.lang.Object[] [ int ] . java.lang.Class<? extends java.lang.Object> ( ) ; int ++ ; } return java.lang.Class[] ; }  <METHOD_END>
<METHOD_START> @ GemfireFunction public java.lang.Class [] java.lang.Class[] ( final java.lang.String java.lang.String , final java.lang.Integer java.lang.Integer , final java.lang.Boolean java.lang.Boolean , final org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person , final org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Gender org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Gender ) { return java.lang.Class[] ( java.lang.String , java.lang.Integer , java.lang.Boolean , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Gender ) ; }  <METHOD_END>
<METHOD_START> @ GemfireFunction public java.lang.Class [] java.lang.Class[] ( final java.lang.String java.lang.String , final java.lang.Integer java.lang.Integer , final java.lang.Boolean java.lang.Boolean , final java.lang.Object java.lang.Object , final java.lang.Object java.lang.Object ) { return java.lang.Class[] ( java.lang.String , java.lang.Integer , java.lang.Boolean , java.lang.Object , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ GemfireFunction public java.lang.String java.lang.String ( final PdxInstance org.springframework.data.gemfire.function.PdxInstance , final java.lang.String java.lang.String ) { Assert . isTrue ( org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address .class . java.lang.String ( ) . boolean ( org.springframework.data.gemfire.function.PdxInstance . getClassName ( ) ) ) ; return java.lang.String . java.lang.String ( org.springframework.data.gemfire.function.PdxInstance . getField ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ GemfireFunction public java.lang.Object java.lang.Object ( final PdxInstance org.springframework.data.gemfire.function.PdxInstance , final java.lang.String java.lang.String ) { return org.springframework.data.gemfire.function.PdxInstance . getField ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { Assert . hasText ( STRING , java.lang.String ) ; Assert . hasText ( STRING , java.lang.String ) ; Assert . hasText ( STRING , java.lang.String ) ; Assert . hasText ( STRING , java.lang.String ) ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object ) { if ( java.lang.Object == this ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address ) ) { return false ; } org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address = ( org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address ) java.lang.Object ; return ObjectUtils . nullSafeEquals ( this . java.lang.String ( ) , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address . java.lang.String ( ) ) && ObjectUtils . nullSafeEquals ( this . java.lang.String ( ) , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address . java.lang.String ( ) ) && ObjectUtils . nullSafeEquals ( this . java.lang.String ( ) , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address . java.lang.String ( ) ) && ObjectUtils . nullSafeEquals ( this . java.lang.String ( ) , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( java.lang.String ( ) ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( java.lang.String ( ) ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( java.lang.String ( ) ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( java.lang.String ( ) ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String . java.lang.String ( STRING , java.lang.String ( ) , java.lang.String ( ) , java.lang.String ( ) , java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . hasText ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object ) { if ( java.lang.Object == this ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person ) ) { return false ; } org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person = ( org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person ) java.lang.Object ; return ObjectUtils . nullSafeEquals ( this . java.lang.String ( ) , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person . java.lang.String ( ) ) && ObjectUtils . nullSafeEquals ( this . java.lang.String ( ) , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( java.lang.String ( ) ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( java.lang.String ( ) ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String . java.lang.String ( STRING , java.lang.String ( ) , java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> private void ( final PdxSerializer [] org.springframework.data.gemfire.function.PdxSerializer[] ) { this . org.springframework.data.gemfire.function.PdxSerializer[] = org.springframework.data.gemfire.function.PdxSerializer[] ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.gemfire.function.PdxSerializer org.springframework.data.gemfire.function.PdxSerializer ( final PdxSerializer ... org.springframework.data.gemfire.function.PdxSerializer[] ) { return ( org.springframework.data.gemfire.function.PdxSerializer[] == null ? null : ( pdxSerializers . length == NUMBER ? org.springframework.data.gemfire.function.PdxSerializer[] [ NUMBER ] : new org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.ComposablePdxSerializer ( org.springframework.data.gemfire.function.PdxSerializer[] ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object , final PdxWriter org.springframework.data.gemfire.function.PdxWriter ) { for ( PdxSerializer org.springframework.data.gemfire.function.PdxSerializer : org.springframework.data.gemfire.function.PdxSerializer[] ) { if ( org.springframework.data.gemfire.function.PdxSerializer . toData ( java.lang.Object , org.springframework.data.gemfire.function.PdxWriter ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( final java.lang.Class<?> < ? > java.lang.Class<?> , final PdxReader org.springframework.data.gemfire.function.PdxReader ) { for ( PdxSerializer org.springframework.data.gemfire.function.PdxSerializer : org.springframework.data.gemfire.function.PdxSerializer[] ) { java.lang.Object java.lang.Object = org.springframework.data.gemfire.function.PdxSerializer . fromData ( java.lang.Class<> , org.springframework.data.gemfire.function.PdxReader ) ; if ( java.lang.Object != null ) { return java.lang.Object ; } } return null ; }  <METHOD_END>
<METHOD_START> public void void ( final java.util.List<org.springframework.data.gemfire.function.PdxSerializer> < PdxSerializer > java.util.List<org.springframework.data.gemfire.function.PdxSerializer> ) { this . java.util.List<org.springframework.data.gemfire.function.PdxSerializer> = java.util.List<org.springframework.data.gemfire.function.PdxSerializer> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { org.springframework.data.gemfire.function.PdxSerializer = org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.ComposablePdxSerializer . org.springframework.data.gemfire.function.PdxSerializer ( java.util.List<org.springframework.data.gemfire.function.PdxSerializer> . toArray ( new PdxSerializer [ java.util.List<org.springframework.data.gemfire.function.PdxSerializer> . size ( ) ] ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.function.PdxSerializer org.springframework.data.gemfire.function.PdxSerializer ( ) java.lang.Exception { return org.springframework.data.gemfire.function.PdxSerializer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return ( org.springframework.data.gemfire.function.PdxSerializer != null ? org.springframework.data.gemfire.function.PdxSerializer . getClass ( ) : PdxSerializer .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object , final PdxWriter org.springframework.data.gemfire.function.PdxWriter ) { if ( java.lang.Object instanceof org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address ) { org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address = ( org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address ) java.lang.Object ; org.springframework.data.gemfire.function.PdxWriter . writeString ( STRING , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address . java.lang.String ( ) ) ; org.springframework.data.gemfire.function.PdxWriter . writeString ( STRING , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address . java.lang.String ( ) ) ; org.springframework.data.gemfire.function.PdxWriter . writeString ( STRING , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address . java.lang.String ( ) ) ; org.springframework.data.gemfire.function.PdxWriter . writeString ( STRING , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address . java.lang.String ( ) ) ; return true ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( final java.lang.Class<?> < ? > java.lang.Class<?> , final PdxReader org.springframework.data.gemfire.function.PdxReader ) { if ( org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address .class . boolean ( java.lang.Class<> ) ) { return new org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Address ( org.springframework.data.gemfire.function.PdxReader . readString ( STRING ) , org.springframework.data.gemfire.function.PdxReader . readString ( STRING ) , org.springframework.data.gemfire.function.PdxReader . readString ( STRING ) , org.springframework.data.gemfire.function.PdxReader . readString ( STRING ) ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object , final PdxWriter org.springframework.data.gemfire.function.PdxWriter ) { if ( java.lang.Object instanceof org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person ) { org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person = ( org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person ) java.lang.Object ; org.springframework.data.gemfire.function.PdxWriter . writeString ( STRING , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person . java.lang.String ( ) ) ; org.springframework.data.gemfire.function.PdxWriter . writeString ( STRING , org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person . java.lang.String ( ) ) ; return true ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( final java.lang.Class<?> < ? > java.lang.Class<?> , final PdxReader org.springframework.data.gemfire.function.PdxReader ) { if ( org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person .class . boolean ( java.lang.Class<> ) ) { return new org.springframework.data.gemfire.function.ClientCacheFunctionExecutionWithPdxIntegrationTest.Person ( org.springframework.data.gemfire.function.PdxReader . readString ( STRING ) , org.springframework.data.gemfire.function.PdxReader . readString ( STRING ) ) ; } return null ; }  <METHOD_END>
