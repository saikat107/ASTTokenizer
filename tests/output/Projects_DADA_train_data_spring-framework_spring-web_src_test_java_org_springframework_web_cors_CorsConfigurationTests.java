<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . setAllowedOrigins ( null ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . getAllowedOrigins ( ) ) ; org.springframework.web.cors.CorsConfiguration . setAllowedHeaders ( null ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . getAllowedHeaders ( ) ) ; org.springframework.web.cors.CorsConfiguration . setAllowedMethods ( null ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . getAllowedMethods ( ) ) ; org.springframework.web.cors.CorsConfiguration . setExposedHeaders ( null ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . getExposedHeaders ( ) ) ; org.springframework.web.cors.CorsConfiguration . setAllowCredentials ( null ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . getAllowCredentials ( ) ) ; org.springframework.web.cors.CorsConfiguration . setMaxAge ( null ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . getMaxAge ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . addAllowedOrigin ( STRING ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedOrigins ( ) ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedHeaders ( ) ) ; org.springframework.web.cors.CorsConfiguration . addAllowedMethod ( STRING ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedMethods ( ) ) ; org.springframework.web.cors.CorsConfiguration . addExposedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addExposedHeader ( STRING ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) , org.springframework.web.cors.CorsConfiguration . getExposedHeaders ( ) ) ; org.springframework.web.cors.CorsConfiguration . setAllowCredentials ( true ) ; assertTrue ( org.springframework.web.cors.CorsConfiguration . getAllowCredentials ( ) ) ; org.springframework.web.cors.CorsConfiguration . setMaxAge ( NUMBER ) ; assertEquals ( new java.lang.Long ( NUMBER ) , org.springframework.web.cors.CorsConfiguration . getMaxAge ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . addExposedHeader ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . setExposedHeaders ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . setAllowedOrigins ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) ; org.springframework.web.cors.CorsConfiguration . combine ( null ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedOrigins ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . addAllowedOrigin ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addExposedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedMethod ( HttpMethod . GET . name ( ) ) ; org.springframework.web.cors.CorsConfiguration . setMaxAge ( NUMBER ) ; org.springframework.web.cors.CorsConfiguration . setAllowCredentials ( true ) ; CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration = org.springframework.web.cors.CorsConfiguration . combine ( org.springframework.web.cors.CorsConfiguration ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedOrigins ( ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedHeaders ( ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getExposedHeaders ( ) ) ; assertEquals ( java.util.Arrays . java.util.List ( HttpMethod . GET . name ( ) ) , org.springframework.web.cors.CorsConfiguration . getAllowedMethods ( ) ) ; assertEquals ( new java.lang.Long ( NUMBER ) , org.springframework.web.cors.CorsConfiguration . getMaxAge ( ) ) ; assertTrue ( org.springframework.web.cors.CorsConfiguration . getAllowCredentials ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . addAllowedOrigin ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedMethod ( STRING ) ; CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . addAllowedOrigin ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addExposedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedMethod ( HttpMethod . PUT . name ( ) ) ; CorsConfiguration org.springframework.web.cors.CorsConfiguration = org.springframework.web.cors.CorsConfiguration . combine ( org.springframework.web.cors.CorsConfiguration ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedOrigins ( ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedHeaders ( ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getExposedHeaders ( ) ) ; assertEquals ( java.util.Arrays . java.util.List ( HttpMethod . PUT . name ( ) ) , org.springframework.web.cors.CorsConfiguration . getAllowedMethods ( ) ) ; org.springframework.web.cors.CorsConfiguration = org.springframework.web.cors.CorsConfiguration . combine ( org.springframework.web.cors.CorsConfiguration ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedOrigins ( ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedHeaders ( ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . getExposedHeaders ( ) ) ; assertEquals ( java.util.Arrays . java.util.List ( HttpMethod . PUT . name ( ) ) , org.springframework.web.cors.CorsConfiguration . getAllowedMethods ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . addAllowedOrigin ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedOrigin ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addExposedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addExposedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedMethod ( HttpMethod . GET . name ( ) ) ; org.springframework.web.cors.CorsConfiguration . addAllowedMethod ( HttpMethod . PUT . name ( ) ) ; CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . addAllowedOrigin ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addExposedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedMethod ( HttpMethod . GET . name ( ) ) ; CorsConfiguration org.springframework.web.cors.CorsConfiguration = org.springframework.web.cors.CorsConfiguration . combine ( org.springframework.web.cors.CorsConfiguration ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedOrigins ( ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedHeaders ( ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) , org.springframework.web.cors.CorsConfiguration . getExposedHeaders ( ) ) ; assertEquals ( java.util.Arrays . java.util.List ( HttpMethod . GET . name ( ) , HttpMethod . PUT . name ( ) ) , org.springframework.web.cors.CorsConfiguration . getAllowedMethods ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . addAllowedOrigin ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addExposedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedMethod ( HttpMethod . GET . name ( ) ) ; org.springframework.web.cors.CorsConfiguration . setMaxAge ( NUMBER ) ; org.springframework.web.cors.CorsConfiguration . setAllowCredentials ( true ) ; CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . addAllowedOrigin ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addExposedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedMethod ( HttpMethod . PUT . name ( ) ) ; org.springframework.web.cors.CorsConfiguration . setMaxAge ( NUMBER ) ; org.springframework.web.cors.CorsConfiguration . setAllowCredentials ( false ) ; org.springframework.web.cors.CorsConfiguration = org.springframework.web.cors.CorsConfiguration . combine ( org.springframework.web.cors.CorsConfiguration ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedOrigins ( ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) , org.springframework.web.cors.CorsConfiguration . getAllowedHeaders ( ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) , org.springframework.web.cors.CorsConfiguration . getExposedHeaders ( ) ) ; assertEquals ( java.util.Arrays . java.util.List ( HttpMethod . GET . name ( ) , HttpMethod . PUT . name ( ) ) , org.springframework.web.cors.CorsConfiguration . getAllowedMethods ( ) ) ; assertEquals ( new java.lang.Long ( NUMBER ) , org.springframework.web.cors.CorsConfiguration . getMaxAge ( ) ) ; assertFalse ( org.springframework.web.cors.CorsConfiguration . getAllowCredentials ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; org.springframework.web.cors.CorsConfiguration . setAllowedOrigins ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) ; assertEquals ( STRING , org.springframework.web.cors.CorsConfiguration . checkOrigin ( STRING ) ) ; org.springframework.web.cors.CorsConfiguration . setAllowCredentials ( true ) ; assertEquals ( STRING , org.springframework.web.cors.CorsConfiguration . checkOrigin ( STRING ) ) ; org.springframework.web.cors.CorsConfiguration . setAllowedOrigins ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) ; assertEquals ( STRING , org.springframework.web.cors.CorsConfiguration . checkOrigin ( STRING ) ) ; org.springframework.web.cors.CorsConfiguration . setAllowCredentials ( false ) ; assertEquals ( STRING , org.springframework.web.cors.CorsConfiguration . checkOrigin ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkOrigin ( null ) ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkOrigin ( STRING ) ) ; org.springframework.web.cors.CorsConfiguration . addAllowedOrigin ( STRING ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkOrigin ( null ) ) ; org.springframework.web.cors.CorsConfiguration . setAllowedOrigins ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkOrigin ( STRING ) ) ; org.springframework.web.cors.CorsConfiguration . setAllowedOrigins ( new java.util.ArrayList <> ( ) ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkOrigin ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; assertEquals ( java.util.Arrays . java.util.List ( HttpMethod . GET , HttpMethod . HEAD ) , org.springframework.web.cors.CorsConfiguration . checkHttpMethod ( HttpMethod . GET ) ) ; org.springframework.web.cors.CorsConfiguration . addAllowedMethod ( STRING ) ; assertEquals ( java.util.Arrays . java.util.List ( HttpMethod . GET ) , org.springframework.web.cors.CorsConfiguration . checkHttpMethod ( HttpMethod . GET ) ) ; org.springframework.web.cors.CorsConfiguration . addAllowedMethod ( STRING ) ; assertEquals ( java.util.Arrays . java.util.List ( HttpMethod . GET , HttpMethod . POST ) , org.springframework.web.cors.CorsConfiguration . checkHttpMethod ( HttpMethod . GET ) ) ; assertEquals ( java.util.Arrays . java.util.List ( HttpMethod . GET , HttpMethod . POST ) , org.springframework.web.cors.CorsConfiguration . checkHttpMethod ( HttpMethod . POST ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkHttpMethod ( null ) ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkHttpMethod ( HttpMethod . DELETE ) ) ; org.springframework.web.cors.CorsConfiguration . setAllowedMethods ( new java.util.ArrayList <> ( ) ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkHttpMethod ( HttpMethod . POST ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; assertEquals ( java.util.Collections . java.util.List<java.lang.Object> ( ) , org.springframework.web.cors.CorsConfiguration . checkHeaders ( java.util.Collections . java.util.List<java.lang.Object> ( ) ) ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) , org.springframework.web.cors.CorsConfiguration . checkHeaders ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) , org.springframework.web.cors.CorsConfiguration . checkHeaders ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) ) ) ; assertEquals ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) , org.springframework.web.cors.CorsConfiguration . checkHeaders ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { CorsConfiguration org.springframework.web.cors.CorsConfiguration = new CorsConfiguration ( ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkHeaders ( null ) ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkHeaders ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) ) ; org.springframework.web.cors.CorsConfiguration . setAllowedHeaders ( java.util.Collections . java.util.List<java.lang.Object> ( ) ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkHeaders ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; org.springframework.web.cors.CorsConfiguration . addAllowedHeader ( STRING ) ; assertNull ( org.springframework.web.cors.CorsConfiguration . checkHeaders ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) ) ; }  <METHOD_END>
