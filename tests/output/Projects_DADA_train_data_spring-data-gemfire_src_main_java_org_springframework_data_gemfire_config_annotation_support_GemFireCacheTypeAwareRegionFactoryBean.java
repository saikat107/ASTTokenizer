<METHOD_START> @ java.lang.Override public org.springframework.data.gemfire.config.annotation.support.Region<K,V> < K , V > org.springframework.data.gemfire.config.annotation.support.Region<K,V> ( GemFireCache org.springframework.data.gemfire.config.annotation.support.GemFireCache , java.lang.String java.lang.String ) throws java.lang.Exception { return ( GemfireUtils . isClient ( org.springframework.data.gemfire.config.annotation.support.GemFireCache ) ? org.springframework.data.gemfire.config.annotation.support.Region<K,V> ( org.springframework.data.gemfire.config.annotation.support.GemFireCache , java.lang.String ) : org.springframework.data.gemfire.config.annotation.support.Region<K,V> ( org.springframework.data.gemfire.config.annotation.support.GemFireCache , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.support.Region<K,V> < K , V > org.springframework.data.gemfire.config.annotation.support.Region<K,V> ( GemFireCache org.springframework.data.gemfire.config.annotation.support.GemFireCache , java.lang.String java.lang.String ) throws java.lang.Exception { ClientRegionFactoryBean < K , V > org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> = new ClientRegionFactoryBean < K , V > ( ) ; org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> . setAttributes ( org.springframework.data.gemfire.config.annotation.support.RegionAttributes<K,V> ( ) ) ; org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> . setBeanFactory ( org.springframework.data.gemfire.config.annotation.support.BeanFactory ( ) ) ; org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> . setCache ( org.springframework.data.gemfire.config.annotation.support.GemFireCache ) ; org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> . setClose ( boolean ( ) ) ; org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> . setKeyConstraint ( java.lang.Class<K> ( ) ) ; org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> . setPoolName ( java.lang.String ( ) ) ; org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> . setRegionName ( java.lang.String ) ; org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> . setShortcut ( org.springframework.data.gemfire.config.annotation.support.ClientRegionShortcut ( ) ) ; org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> . setValueConstraint ( java.lang.Class<V> ( ) ) ; org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> . afterPropertiesSet ( ) ; return org.springframework.data.gemfire.config.annotation.support.ClientRegionFactoryBean<K,V> . getObject ( ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.support.Region<K,V> < K , V > org.springframework.data.gemfire.config.annotation.support.Region<K,V> ( GemFireCache org.springframework.data.gemfire.config.annotation.support.GemFireCache , java.lang.String java.lang.String ) throws java.lang.Exception { GenericRegionFactoryBean < K , V > org.springframework.data.gemfire.config.annotation.support.GenericRegionFactoryBean<K,V> = new GenericRegionFactoryBean < K , V > ( ) ; org.springframework.data.gemfire.config.annotation.support.GenericRegionFactoryBean<K,V> . setAttributes ( org.springframework.data.gemfire.config.annotation.support.RegionAttributes<K,V> ( ) ) ; org.springframework.data.gemfire.config.annotation.support.GenericRegionFactoryBean<K,V> . setCache ( org.springframework.data.gemfire.config.annotation.support.GemFireCache ) ; org.springframework.data.gemfire.config.annotation.support.GenericRegionFactoryBean<K,V> . setClose ( boolean ( ) ) ; org.springframework.data.gemfire.config.annotation.support.GenericRegionFactoryBean<K,V> . setDataPolicy ( org.springframework.data.gemfire.config.annotation.support.DataPolicy ( ) ) ; org.springframework.data.gemfire.config.annotation.support.GenericRegionFactoryBean<K,V> . setKeyConstraint ( java.lang.Class<K> ( ) ) ; org.springframework.data.gemfire.config.annotation.support.GenericRegionFactoryBean<K,V> . setRegionName ( java.lang.String ) ; org.springframework.data.gemfire.config.annotation.support.GenericRegionFactoryBean<K,V> . setShortcut ( org.springframework.data.gemfire.config.annotation.support.RegionShortcut ( ) ) ; org.springframework.data.gemfire.config.annotation.support.GenericRegionFactoryBean<K,V> . setValueConstraint ( java.lang.Class<V> ( ) ) ; org.springframework.data.gemfire.config.annotation.support.GenericRegionFactoryBean<K,V> . afterPropertiesSet ( ) ; return org.springframework.data.gemfire.config.annotation.support.GenericRegionFactoryBean<K,V> . getObject ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( RegionAttributes < K , V > org.springframework.data.gemfire.config.annotation.support.RegionAttributes<K,V> ) { this . org.springframework.data.gemfire.config.annotation.support.RegionAttributes<K,V> = org.springframework.data.gemfire.config.annotation.support.RegionAttributes<K,V> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.support.RegionAttributes<K,V> < K , V > org.springframework.data.gemfire.config.annotation.support.RegionAttributes<K,V> ( ) { return this . org.springframework.data.gemfire.config.annotation.support.RegionAttributes<K,V> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.data.gemfire.config.annotation.support.BeanFactory ) throws org.springframework.data.gemfire.config.annotation.support.BeansException { this . org.springframework.data.gemfire.config.annotation.support.BeanFactory = org.springframework.data.gemfire.config.annotation.support.BeanFactory ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.support.BeanFactory org.springframework.data.gemfire.config.annotation.support.BeanFactory ( ) { Assert . state ( this . org.springframework.data.gemfire.config.annotation.support.BeanFactory != null , STRING ) ; return this . org.springframework.data.gemfire.config.annotation.support.BeanFactory ; }  <METHOD_END>
<METHOD_START> public void void ( ClientRegionShortcut org.springframework.data.gemfire.config.annotation.support.ClientRegionShortcut ) { this . org.springframework.data.gemfire.config.annotation.support.ClientRegionShortcut = org.springframework.data.gemfire.config.annotation.support.ClientRegionShortcut ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.support.ClientRegionShortcut org.springframework.data.gemfire.config.annotation.support.ClientRegionShortcut ( ) { return defaultIfNull ( this . org.springframework.data.gemfire.config.annotation.support.ClientRegionShortcut , ClientRegionShortcut . PROXY ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> protected java.lang.Boolean java.lang.Boolean ( ) { return this . java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.Boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( DataPolicy org.springframework.data.gemfire.config.annotation.support.DataPolicy ) { this . org.springframework.data.gemfire.config.annotation.support.DataPolicy = org.springframework.data.gemfire.config.annotation.support.DataPolicy ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.support.DataPolicy org.springframework.data.gemfire.config.annotation.support.DataPolicy ( ) { return defaultIfNull ( this . org.springframework.data.gemfire.config.annotation.support.DataPolicy , DataPolicy . DEFAULT ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<K> < K > java.lang.Class<K> ) { this . java.lang.Class<K> = java.lang.Class<K> ; }  <METHOD_END>
<METHOD_START> protected java.lang.Class<K> < K > java.lang.Class<K> ( ) { return this . java.lang.Class<K> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return defaultIfEmpty ( this . java.lang.String , GemfireConstants . DEFAULT_GEMFIRE_POOL_NAME ) ; }  <METHOD_END>
<METHOD_START> public void void ( RegionShortcut org.springframework.data.gemfire.config.annotation.support.RegionShortcut ) { this . org.springframework.data.gemfire.config.annotation.support.RegionShortcut = org.springframework.data.gemfire.config.annotation.support.RegionShortcut ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.support.RegionShortcut org.springframework.data.gemfire.config.annotation.support.RegionShortcut ( ) { return this . org.springframework.data.gemfire.config.annotation.support.RegionShortcut ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Class<V> < V > java.lang.Class<V> ) { this . java.lang.Class<V> = java.lang.Class<V> ; }  <METHOD_END>
<METHOD_START> protected java.lang.Class<V> < V > java.lang.Class<V> ( ) { return this . java.lang.Class<V> ; }  <METHOD_END>
