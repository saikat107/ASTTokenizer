<METHOD_START> public void ( ExpectedCount org.springframework.test.web.client.ExpectedCount , RequestMatcher org.springframework.test.web.client.RequestMatcher ) { Assert . notNull ( org.springframework.test.web.client.ExpectedCount , STRING ) ; Assert . notNull ( org.springframework.test.web.client.RequestMatcher , STRING ) ; this . org.springframework.test.web.client.DefaultRequestExpectation.RequestCount = new org.springframework.test.web.client.DefaultRequestExpectation.RequestCount ( org.springframework.test.web.client.ExpectedCount ) ; this . java.util.List<org.springframework.test.web.client.RequestMatcher> . add ( org.springframework.test.web.client.RequestMatcher ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.test.web.client.DefaultRequestExpectation.RequestCount org.springframework.test.web.client.DefaultRequestExpectation.RequestCount ( ) { return this . org.springframework.test.web.client.DefaultRequestExpectation.RequestCount ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.test.web.client.RequestMatcher> < RequestMatcher > java.util.List<org.springframework.test.web.client.RequestMatcher> ( ) { return this . java.util.List<org.springframework.test.web.client.RequestMatcher> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.test.web.client.ResponseCreator org.springframework.test.web.client.ResponseCreator ( ) { return this . org.springframework.test.web.client.ResponseCreator ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.web.client.ResponseActions org.springframework.test.web.client.ResponseActions ( RequestMatcher org.springframework.test.web.client.RequestMatcher ) { Assert . notNull ( org.springframework.test.web.client.RequestMatcher , STRING ) ; this . java.util.List<org.springframework.test.web.client.RequestMatcher> . add ( org.springframework.test.web.client.RequestMatcher ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ResponseCreator org.springframework.test.web.client.ResponseCreator ) { Assert . notNull ( org.springframework.test.web.client.ResponseCreator , STRING ) ; this . org.springframework.test.web.client.ResponseCreator = org.springframework.test.web.client.ResponseCreator ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ClientHttpRequest org.springframework.test.web.client.ClientHttpRequest ) throws java.io.IOException { for ( RequestMatcher org.springframework.test.web.client.RequestMatcher : java.util.List<org.springframework.test.web.client.RequestMatcher> ( ) ) { org.springframework.test.web.client.RequestMatcher . match ( org.springframework.test.web.client.ClientHttpRequest ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.web.client.ClientHttpResponse org.springframework.test.web.client.ClientHttpResponse ( ClientHttpRequest org.springframework.test.web.client.ClientHttpRequest ) throws java.io.IOException { ResponseCreator org.springframework.test.web.client.ResponseCreator = org.springframework.test.web.client.ResponseCreator ( ) ; Assert . state ( org.springframework.test.web.client.ResponseCreator != null , STRING ) ; org.springframework.test.web.client.DefaultRequestExpectation.RequestCount ( ) . void ( ) ; return org.springframework.test.web.client.ResponseCreator . createResponse ( org.springframework.test.web.client.ClientHttpRequest ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.test.web.client.DefaultRequestExpectation.RequestCount ( ) . boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.test.web.client.DefaultRequestExpectation.RequestCount ( ) . boolean ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ExpectedCount org.springframework.test.web.client.ExpectedCount ) { this . org.springframework.test.web.client.ExpectedCount = org.springframework.test.web.client.ExpectedCount ; }  <METHOD_END>
<METHOD_START> public org.springframework.test.web.client.ExpectedCount org.springframework.test.web.client.ExpectedCount ( ) { return this . org.springframework.test.web.client.ExpectedCount ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . int ++ ; if ( int ( ) > org.springframework.test.web.client.ExpectedCount ( ) . getMaxCount ( ) ) { throw new java.lang.AssertionError ( STRING ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ( int ( ) < org.springframework.test.web.client.ExpectedCount ( ) . getMaxCount ( ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ( int ( ) >= org.springframework.test.web.client.ExpectedCount ( ) . getMinCount ( ) ) ; }  <METHOD_END>
