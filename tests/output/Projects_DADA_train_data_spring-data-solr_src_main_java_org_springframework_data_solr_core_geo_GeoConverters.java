<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( org . springframework . data . org.springframework.data.geo . org.springframework.data.geo org.springframework.data.geo.Point ) { if ( org.springframework.data.geo.Point == null ) { return null ; } if ( org.springframework.data.geo.Point instanceof Point ) { return org.springframework.data.solr.core.geo.GeoConverters.Point3DToStringConverter . org.springframework.data.solr.core.geo.GeoConverters.Point3DToStringConverter . java.lang.String ( ( Point ) org.springframework.data.geo.Point ) ; } java.lang.String java.lang.String = StringUtils . stripEnd ( java.lang.String . java.lang.String ( java . util . java.util.Locale . java.util.Locale , STRING , org.springframework.data.geo.Point . getX ( ) ) , STRING ) + STRING + StringUtils . stripEnd ( java.lang.String . java.lang.String ( java . util . java.util.Locale . java.util.Locale , STRING , org.springframework.data.geo.Point . getY ( ) ) , STRING ) ; if ( java.lang.String . boolean ( STRING ) ) { return java.lang.String . java.lang.String ( STRING , STRING ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org . springframework . data . org.springframework.data.geo . org.springframework.data.geo.Point org.springframework.data.geo.Point ( java.lang.String java.lang.String ) { if ( java.lang.String == null ) { return null ; } java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; return new org . springframework . data . org.springframework.data.geo . org.springframework.data.geo ( java.lang.Double . double ( java.lang.String[] [ NUMBER ] ) , java.lang.Double . double ( java.lang.String[] [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( org . springframework . data . org.springframework.data.geo . org.springframework.data.geo org.springframework.data.geo.Distance ) { if ( org.springframework.data.geo.Distance == null ) { return null ; } double double = org.springframework.data.geo.Distance . getValue ( ) ; if ( org.springframework.data.geo.Distance . getMetric ( ) == Metrics . MILES ) { double = org.springframework.data.geo.Distance . getValue ( ) * NUMBER ; } return java.lang.String . java.lang.String ( java . util . java.util.Locale . java.util.Locale , STRING , double ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( org . springframework . data . org.springframework.data.geo . org.springframework.data.geo org.springframework.data.geo.Point ) { if ( org.springframework.data.geo.Point == null ) { return null ; } java.lang.String java.lang.String = StringUtils . stripEnd ( java.lang.String . java.lang.String ( java . util . java.util.Locale . java.util.Locale , STRING , org.springframework.data.geo.Point . getX ( ) ) , STRING ) + STRING + StringUtils . stripEnd ( java.lang.String . java.lang.String ( java . util . java.util.Locale . java.util.Locale , STRING , org.springframework.data.geo.Point . getY ( ) ) , STRING ) ; if ( org.springframework.data.geo.Point instanceof Point ) { java.lang.String += ( ( ( Point ) org.springframework.data.geo.Point ) . getZ ( ) != null ? ( STRING + StringUtils . stripEnd ( java.lang.String . java.lang.String ( java . util . java.util.Locale . java.util.Locale , STRING , ( ( Point ) org.springframework.data.geo.Point ) . getZ ( ) ) , STRING ) ) : STRING ) ; } return java.lang.String . java.lang.String ( STRING , STRING ) . java.lang.String ( STRING , STRING ) ; }  <METHOD_END>
