<METHOD_START> @ Test public void void ( ) { assertThat ( toList ( null ) , notNullValue ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( toList ( java.util.Collections . java.util.Set<java.lang.Object> ( ) ) , empty ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; assertThat ( toList ( java.util.List<java.lang.String> ) , sameInstance ( java.util.List<java.lang.String> ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ; java.util.Set<java.lang.String> . boolean ( STRING ) ; assertThat ( toList ( java.util.Set<java.lang.String> ) , instanceOf ( java.util.List .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.LinkedHashSet<java.lang.String> < java.lang.String > ( ) ; java.util.Set<java.lang.String> . boolean ( STRING ) ; java.util.Set<java.lang.String> . boolean ( STRING ) ; assertThat ( toList ( java.util.Set<java.lang.String> ) , contains ( java.util.Set<java.lang.String> . java.lang.String[] ( new java.lang.String [ NUMBER ] ) ) ) ; }  <METHOD_END>
