<METHOD_START> @ Test @ java.lang.SuppressWarnings ( { STRING , STRING } ) public void void ( ) java.lang.Exception { org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean = mock ( org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean .class ) ; given ( org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean . java.lang.String ( ) ) . willReturn ( STRING ) ; given ( this . org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestFactoryBean . java.lang.Class<?> ( ) ) . willReturn ( ( java.lang.Class ) org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean .class ) ; given ( this . org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestFactoryBean . org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean ( ) ) . willReturn ( org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean ) ; org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean = this . org.springframework.boot.test.mock.mockito.ApplicationContext . getBean ( org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean .class ) ; assertThat ( org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean . java.lang.String ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestFactoryBean org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestFactoryBean ( ) { return new org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean ( ) java.lang.Exception { return new org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean ( ) { @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests.TestBean .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( )  <METHOD_END>
