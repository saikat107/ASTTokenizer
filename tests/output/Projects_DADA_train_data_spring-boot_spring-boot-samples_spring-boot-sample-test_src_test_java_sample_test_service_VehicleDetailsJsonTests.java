<METHOD_START> @ Test public void void ( ) java.lang.Exception { VehicleDetails sample.test.service.VehicleDetails = new VehicleDetails ( STRING , STRING ) ; assertThat ( this . sample.test.service.JacksonTester<sample.test.service.VehicleDetails> . write ( sample.test.service.VehicleDetails ) ) . isEqualTo ( STRING ) ; assertThat ( this . sample.test.service.JacksonTester<sample.test.service.VehicleDetails> . write ( sample.test.service.VehicleDetails ) ) . isEqualToJson ( STRING ) ; assertThat ( this . sample.test.service.JacksonTester<sample.test.service.VehicleDetails> . write ( sample.test.service.VehicleDetails ) ) . hasJsonPathStringValue ( STRING ) ; assertThat ( this . sample.test.service.JacksonTester<sample.test.service.VehicleDetails> . write ( sample.test.service.VehicleDetails ) ) . extractingJsonPathStringValue ( STRING ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = STRING ; assertThat ( this . sample.test.service.JacksonTester<sample.test.service.VehicleDetails> . parse ( java.lang.String ) ) . isEqualTo ( new VehicleDetails ( STRING , STRING ) ) ; assertThat ( this . sample.test.service.JacksonTester<sample.test.service.VehicleDetails> . parseObject ( java.lang.String ) . getMake ( ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
