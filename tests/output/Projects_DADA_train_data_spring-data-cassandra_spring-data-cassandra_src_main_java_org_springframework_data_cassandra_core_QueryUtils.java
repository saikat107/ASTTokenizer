<METHOD_START> public static org.springframework.data.cassandra.core.Insert org.springframework.data.cassandra.core.Insert ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , WriteOptions org.springframework.data.cassandra.core.WriteOptions , EntityWriter < java.lang.Object , java.lang.Object > org.springframework.data.cassandra.core.EntityWriter<java.lang.Object,java.lang.Object> ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; Assert . notNull ( org.springframework.data.cassandra.core.EntityWriter<java.lang.Object,java.lang.Object> , STRING ) ; Insert org.springframework.data.cassandra.core.Insert = QueryOptionsUtil . addWriteOptions ( QueryBuilder . insertInto ( java.lang.String ) , org.springframework.data.cassandra.core.WriteOptions ) ; org.springframework.data.cassandra.core.EntityWriter<java.lang.Object,java.lang.Object> . write ( java.lang.Object , org.springframework.data.cassandra.core.Insert ) ; return org.springframework.data.cassandra.core.Insert ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.cassandra.core.Update org.springframework.data.cassandra.core.Update ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , WriteOptions org.springframework.data.cassandra.core.WriteOptions , EntityWriter < java.lang.Object , java.lang.Object > org.springframework.data.cassandra.core.EntityWriter<java.lang.Object,java.lang.Object> ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; Assert . notNull ( org.springframework.data.cassandra.core.EntityWriter<java.lang.Object,java.lang.Object> , STRING ) ; Update org.springframework.data.cassandra.core.Update = QueryOptionsUtil . addWriteOptions ( QueryBuilder . update ( java.lang.String ) , org.springframework.data.cassandra.core.WriteOptions ) ; org.springframework.data.cassandra.core.EntityWriter<java.lang.Object,java.lang.Object> . write ( java.lang.Object , org.springframework.data.cassandra.core.Update ) ; return org.springframework.data.cassandra.core.Update ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.cassandra.core.Delete org.springframework.data.cassandra.core.Delete ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , QueryOptions org.springframework.data.cassandra.core.QueryOptions , EntityWriter < java.lang.Object , java.lang.Object > org.springframework.data.cassandra.core.EntityWriter<java.lang.Object,java.lang.Object> ) { Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; Assert . notNull ( org.springframework.data.cassandra.core.EntityWriter<java.lang.Object,java.lang.Object> , STRING ) ; Delete . Delete Delete.Selection = QueryBuilder . delete ( ) ; Delete org.springframework.data.cassandra.core.Delete = Delete.Selection . from ( java.lang.String ) ; Where org.springframework.data.cassandra.core.Where = QueryOptionsUtil . addQueryOptions ( org.springframework.data.cassandra.core.Delete . where ( ) , org.springframework.data.cassandra.core.QueryOptions ) ; org.springframework.data.cassandra.core.EntityWriter<java.lang.Object,java.lang.Object> . write ( java.lang.Object , org.springframework.data.cassandra.core.Where ) ; return org.springframework.data.cassandra.core.Delete ; }  <METHOD_END>
