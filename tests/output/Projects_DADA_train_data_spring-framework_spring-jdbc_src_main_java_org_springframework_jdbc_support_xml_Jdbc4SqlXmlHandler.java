<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.sql.ResultSet java.sql.ResultSet , java.lang.String java.lang.String ) throws java.sql.SQLException { java.sql.SQLXML java.sql.SQLXML = java.sql.ResultSet . java.sql.SQLXML ( java.lang.String ) ; return ( java.sql.SQLXML != null ? java.sql.SQLXML . java.lang.String ( ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.sql.ResultSet java.sql.ResultSet , int int ) throws java.sql.SQLException { java.sql.SQLXML java.sql.SQLXML = java.sql.ResultSet . java.sql.SQLXML ( int ) ; return ( java.sql.SQLXML != null ? java.sql.SQLXML . java.lang.String ( ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.InputStream java.io.InputStream ( java.sql.ResultSet java.sql.ResultSet , java.lang.String java.lang.String ) throws java.sql.SQLException { java.sql.SQLXML java.sql.SQLXML = java.sql.ResultSet . java.sql.SQLXML ( java.lang.String ) ; return ( java.sql.SQLXML != null ? java.sql.SQLXML . java.io.InputStream ( ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.InputStream java.io.InputStream ( java.sql.ResultSet java.sql.ResultSet , int int ) throws java.sql.SQLException { java.sql.SQLXML java.sql.SQLXML = java.sql.ResultSet . java.sql.SQLXML ( int ) ; return ( java.sql.SQLXML != null ? java.sql.SQLXML . java.io.InputStream ( ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.Reader java.io.Reader ( java.sql.ResultSet java.sql.ResultSet , java.lang.String java.lang.String ) throws java.sql.SQLException { java.sql.SQLXML java.sql.SQLXML = java.sql.ResultSet . java.sql.SQLXML ( java.lang.String ) ; return ( java.sql.SQLXML != null ? java.sql.SQLXML . java.io.Reader ( ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.io.Reader java.io.Reader ( java.sql.ResultSet java.sql.ResultSet , int int ) throws java.sql.SQLException { java.sql.SQLXML java.sql.SQLXML = java.sql.ResultSet . java.sql.SQLXML ( int ) ; return ( java.sql.SQLXML != null ? java.sql.SQLXML . java.io.Reader ( ) : null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.xml.transform.Source javax.xml.transform.Source ( java.sql.ResultSet java.sql.ResultSet , java.lang.String java.lang.String , java.lang.Class<? extends javax.xml.transform.Source> < ? extends javax.xml.transform.Source > java.lang.Class<? extends javax.xml.transform.Source> ) throws java.sql.SQLException { java.sql.SQLXML java.sql.SQLXML = java.sql.ResultSet . java.sql.SQLXML ( java.lang.String ) ; if ( java.sql.SQLXML == null ) { return null ; } return ( java.lang.Class<> != null ? java.sql.SQLXML . getSource ( java.lang.Class<> ) : java.sql.SQLXML . javax.xml.transform.dom.DOMSource ( javax.xml.transform.dom.DOMSource .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.xml.transform.Source javax.xml.transform.Source ( java.sql.ResultSet java.sql.ResultSet , int int , java.lang.Class<? extends javax.xml.transform.Source> < ? extends javax.xml.transform.Source > java.lang.Class<? extends javax.xml.transform.Source> ) throws java.sql.SQLException { java.sql.SQLXML java.sql.SQLXML = java.sql.ResultSet . java.sql.SQLXML ( int ) ; if ( java.sql.SQLXML == null ) { return null ; } return ( java.lang.Class<> != null ? java.sql.SQLXML . getSource ( java.lang.Class<> ) : java.sql.SQLXML . javax.xml.transform.dom.DOMSource ( javax.xml.transform.dom.DOMSource .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jdbc.support.xml.SqlXmlValue org.springframework.jdbc.support.xml.SqlXmlValue ( final java.lang.String java.lang.String ) { return new org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler.AbstractJdbc4SqlXmlValue ( ) { @ java.lang.Override protected void void ( java.sql.SQLXML java.sql.SQLXML ) throws java.sql.SQLException , java.io.IOException { java.sql.SQLXML . void ( java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.sql.SQLXML java.sql.SQLXML ) throws java.sql.SQLException , java.io.IOException { java.sql.SQLXML . void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jdbc.support.xml.SqlXmlValue org.springframework.jdbc.support.xml.SqlXmlValue ( final XmlBinaryStreamProvider org.springframework.jdbc.support.xml.XmlBinaryStreamProvider ) { return new org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler.AbstractJdbc4SqlXmlValue ( ) { @ java.lang.Override protected void void ( java.sql.SQLXML java.sql.SQLXML ) throws java.sql.SQLException , java.io.IOException { org.springframework.jdbc.support.xml.XmlBinaryStreamProvider . provideXml ( java.sql.SQLXML . java.io.OutputStream ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.sql.SQLXML java.sql.SQLXML ) throws java.sql.SQLException , java.io.IOException { org.springframework.jdbc.support.xml.XmlBinaryStreamProvider . provideXml ( java.sql.SQLXML . java.io.OutputStream ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jdbc.support.xml.SqlXmlValue org.springframework.jdbc.support.xml.SqlXmlValue ( final XmlCharacterStreamProvider org.springframework.jdbc.support.xml.XmlCharacterStreamProvider ) { return new org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler.AbstractJdbc4SqlXmlValue ( ) { @ java.lang.Override protected void void ( java.sql.SQLXML java.sql.SQLXML ) throws java.sql.SQLException , java.io.IOException { org.springframework.jdbc.support.xml.XmlCharacterStreamProvider . provideXml ( java.sql.SQLXML . java.io.Writer ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.sql.SQLXML java.sql.SQLXML ) throws java.sql.SQLException , java.io.IOException { org.springframework.jdbc.support.xml.XmlCharacterStreamProvider . provideXml ( java.sql.SQLXML . java.io.Writer ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jdbc.support.xml.SqlXmlValue org.springframework.jdbc.support.xml.SqlXmlValue ( final java.lang.Class<? extends javax.xml.transform.Result> < ? extends javax.xml.transform.Result > java.lang.Class<? extends javax.xml.transform.Result> , final XmlResultProvider org.springframework.jdbc.support.xml.XmlResultProvider ) { return new org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler.AbstractJdbc4SqlXmlValue ( ) { @ java.lang.Override protected void void ( java.sql.SQLXML java.sql.SQLXML ) throws java.sql.SQLException , java.io.IOException { org.springframework.jdbc.support.xml.XmlResultProvider . provideXml ( java.sql.SQLXML . setResult ( java.lang.Class<> ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.sql.SQLXML java.sql.SQLXML ) throws java.sql.SQLException , java.io.IOException { org.springframework.jdbc.support.xml.XmlResultProvider . provideXml ( java.sql.SQLXML . setResult ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.jdbc.support.xml.SqlXmlValue org.springframework.jdbc.support.xml.SqlXmlValue ( final org.w3c.dom.Document org.w3c.dom.Document ) { return new org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler.AbstractJdbc4SqlXmlValue ( ) { @ java.lang.Override protected void void ( java.sql.SQLXML java.sql.SQLXML ) throws java.sql.SQLException , java.io.IOException { java.sql.SQLXML . javax.xml.transform.dom.DOMResult ( javax.xml.transform.dom.DOMResult .class ) . void ( org.w3c.dom.Document ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.sql.SQLXML java.sql.SQLXML ) throws java.sql.SQLException , java.io.IOException { java.sql.SQLXML . javax.xml.transform.dom.DOMResult ( javax.xml.transform.dom.DOMResult .class ) . void ( org.w3c.dom.Document ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.sql.PreparedStatement java.sql.PreparedStatement , int int ) throws java.sql.SQLException { this . java.sql.SQLXML = java.sql.PreparedStatement . java.sql.Connection ( ) . java.sql.SQLXML ( ) ; try { void ( this . java.sql.SQLXML ) ; } catch ( java.io.IOException java.io.IOException ) { throw new DataAccessResourceFailureException ( STRING , java.io.IOException ) ; } java.sql.PreparedStatement . void ( int , this . java.sql.SQLXML ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { try { this . java.sql.SQLXML . void ( ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { throw new DataAccessResourceFailureException ( STRING , java.sql.SQLException ) ; } }  <METHOD_END>
<METHOD_START> protected abstract void void ( java.sql.SQLXML java.sql.SQLXML ) throws java.sql.SQLException , java.io.IOException ;  <METHOD_END>
