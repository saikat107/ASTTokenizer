<METHOD_START> @ Test ( expected = java.lang.Exception .class ) public void void ( ) java.lang.Exception { SpringJUnit4ClassRunner org.springframework.test.context.junit4.SpringJUnit4ClassRunner = new SpringJUnit4ClassRunner ( java.lang.Class<? extends org.springframework.test.context.junit4.SpringJUnit4ClassRunnerTests> ( ) ) { @ java.lang.Override protected org.springframework.test.context.junit4.TestContextManager org.springframework.test.context.junit4.TestContextManager ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return new TestContextManager ( java.lang.Class<> ) { @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { throw new java.lang.RuntimeException ( STRING ) ; } } ; } } ; org.springframework.test.context.junit4.SpringJUnit4ClassRunner . createTest ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.test.context.junit4.TestContextManager org.springframework.test.context.junit4.TestContextManager ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return new TestContextManager ( java.lang.Class<> ) { @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { throw new java.lang.RuntimeException ( STRING ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { throw new java.lang.RuntimeException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SpringJUnit4ClassRunner org.springframework.test.context.junit4.SpringJUnit4ClassRunner = new SpringJUnit4ClassRunner ( java.lang.Class<? extends org.springframework.test.context.junit4.SpringJUnit4ClassRunnerTests> ( ) ) ; long long = org.springframework.test.context.junit4.SpringJUnit4ClassRunner . getSpringTimeout ( new FrameworkMethod ( java.lang.Class<? extends org.springframework.test.context.junit4.SpringJUnit4ClassRunnerTests> ( ) . java.lang.reflect.Method ( STRING ) ) ) ; assertEquals ( NUMBER , long ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { SpringJUnit4ClassRunner org.springframework.test.context.junit4.SpringJUnit4ClassRunner = new SpringJUnit4ClassRunner ( java.lang.Class<? extends org.springframework.test.context.junit4.SpringJUnit4ClassRunnerTests> ( ) ) ; long long = org.springframework.test.context.junit4.SpringJUnit4ClassRunner . getSpringTimeout ( new FrameworkMethod ( java.lang.Class<? extends org.springframework.test.context.junit4.SpringJUnit4ClassRunnerTests> ( ) . java.lang.reflect.Method ( STRING ) ) ) ; assertEquals ( NUMBER , long ) ; }  <METHOD_END>
<METHOD_START> @ org.springframework.test.context.junit4.SpringJUnit4ClassRunnerTests.MetaTimed void void ( ) { }  <METHOD_END>
<METHOD_START> @ org.springframework.test.context.junit4.SpringJUnit4ClassRunnerTests.MetaTimedWithOverride ( long = NUMBER ) void void ( ) { }  <METHOD_END>
