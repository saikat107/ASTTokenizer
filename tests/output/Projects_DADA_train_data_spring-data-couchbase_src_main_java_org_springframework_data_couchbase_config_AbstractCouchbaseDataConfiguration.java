<METHOD_START> protected abstract org.springframework.data.couchbase.config.CouchbaseConfigurer org.springframework.data.couchbase.config.CouchbaseConfigurer ( )  <METHOD_END>
<METHOD_START> @ Bean ( name = BeanNames . COUCHBASE_TEMPLATE ) public org.springframework.data.couchbase.config.CouchbaseTemplate org.springframework.data.couchbase.config.CouchbaseTemplate ( ) java.lang.Exception { CouchbaseTemplate org.springframework.data.couchbase.config.CouchbaseTemplate = new CouchbaseTemplate ( org.springframework.data.couchbase.config.CouchbaseConfigurer ( ) . couchbaseClusterInfo ( ) , org.springframework.data.couchbase.config.CouchbaseConfigurer ( ) . couchbaseClient ( ) , mappingCouchbaseConverter ( ) , translationService ( ) ) ; org.springframework.data.couchbase.config.CouchbaseTemplate . setDefaultConsistency ( getDefaultConsistency ( ) ) ; return org.springframework.data.couchbase.config.CouchbaseTemplate ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = BeanNames . COUCHBASE_OPERATIONS_MAPPING ) public org.springframework.data.couchbase.config.RepositoryOperationsMapping org.springframework.data.couchbase.config.RepositoryOperationsMapping ( CouchbaseTemplate org.springframework.data.couchbase.config.CouchbaseTemplate ) throws java.lang.Exception { RepositoryOperationsMapping org.springframework.data.couchbase.config.RepositoryOperationsMapping = new RepositoryOperationsMapping ( org.springframework.data.couchbase.config.CouchbaseTemplate ) ; void ( org.springframework.data.couchbase.config.RepositoryOperationsMapping ) ; return org.springframework.data.couchbase.config.RepositoryOperationsMapping ; }  <METHOD_END>
<METHOD_START> protected void void ( RepositoryOperationsMapping org.springframework.data.couchbase.config.RepositoryOperationsMapping ) { }  <METHOD_END>
