<METHOD_START> @ Test @ Ignore public void void ( ) java.lang.Exception { PropertiesFactoryBean org.springframework.integration.twitter.outbound.PropertiesFactoryBean = new PropertiesFactoryBean ( ) ; org.springframework.integration.twitter.outbound.PropertiesFactoryBean . setLocation ( new ClassPathResource ( STRING ) ) ; org.springframework.integration.twitter.outbound.PropertiesFactoryBean . afterPropertiesSet ( ) ; java.util.Properties java.util.Properties = org.springframework.integration.twitter.outbound.PropertiesFactoryBean . getObject ( ) ; TwitterTemplate org.springframework.integration.twitter.outbound.TwitterTemplate = new TwitterTemplate ( java.util.Properties . java.lang.String ( STRING ) , java.util.Properties . java.lang.String ( STRING ) , java.util.Properties . java.lang.String ( STRING ) , java.util.Properties . java.lang.String ( STRING ) ) ; Message < ? > org.springframework.integration.twitter.outbound.Message<?> = MessageBuilder . withPayload ( STRING ) . setHeader ( TwitterHeaders . DM_TARGET_USER_ID , STRING ) . build ( ) ; DirectMessageSendingMessageHandler org.springframework.integration.twitter.outbound.DirectMessageSendingMessageHandler = new DirectMessageSendingMessageHandler ( org.springframework.integration.twitter.outbound.TwitterTemplate ) ; org.springframework.integration.twitter.outbound.DirectMessageSendingMessageHandler . afterPropertiesSet ( ) ; org.springframework.integration.twitter.outbound.DirectMessageSendingMessageHandler . handleMessage ( org.springframework.integration.twitter.outbound.Message<> ) ; }  <METHOD_END>
