<METHOD_START> public static org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( java.lang.String ... java.lang.String[] ) { return new org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( CollectionUtils . asSet ( ArrayUtils . nullSafeArray ( java.lang.String[] , java.lang.String .class ) ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( java.lang.Iterable<java.lang.String> < java.lang.String > java.lang.Iterable<java.lang.String> ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ; for ( java.lang.String java.lang.String : CollectionUtils . nullSafeIterable ( java.lang.Iterable<java.lang.String> ) ) { java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; } return new org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> protected void ( java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { Assert . notEmpty ( java.util.Set<java.lang.String> , STRING ) ; this . java.util.Set<java.lang.String> = java.util.Set<java.lang.String> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext ( ) { return this . org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext ; }  <METHOD_END>
<METHOD_START> protected java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return java.util.Collections . java.util.Set<java.lang.String> ( this . java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.ClassLoader java.lang.ClassLoader ( ) { ConfigurableApplicationContext org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext = org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext ( ) ; return ( this . java.lang.ClassLoader != null ? this . java.lang.ClassLoader : ( org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext != null ? org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext . getBeanFactory ( ) . getBeanClassLoader ( ) : java.lang.Thread . java.lang.Thread ( ) . java.lang.ClassLoader ( ) ) ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.support.Environment org.springframework.data.gemfire.config.annotation.support.Environment ( ) { ConfigurableApplicationContext org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext = org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext ( ) ; return ( org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext != null ? org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext . getEnvironment ( ) : new StandardEnvironment ( ) ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Iterable<org.springframework.data.gemfire.config.annotation.support.TypeFilter> < TypeFilter > java.lang.Iterable<org.springframework.data.gemfire.config.annotation.support.TypeFilter> ( ) { return this . java.util.Set<org.springframework.data.gemfire.config.annotation.support.TypeFilter> ; }  <METHOD_END>
<METHOD_START> protected java.lang.Iterable<org.springframework.data.gemfire.config.annotation.support.TypeFilter> < TypeFilter > java.lang.Iterable<org.springframework.data.gemfire.config.annotation.support.TypeFilter> ( ) { return this . java.util.Set<org.springframework.data.gemfire.config.annotation.support.TypeFilter> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<java.lang.String> < java.lang.String > java.util.Iterator<java.lang.String> ( ) { return java.util.Set<java.lang.String> ( ) . java.util.Iterator<java.lang.String> ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> ( ) { java.util.Set<java.lang.Class<?>> < java.lang.Class<?> < ? > > java.util.Set<java.lang.Class<?>> = new java.util.HashSet<java.lang.Class<?>> < java.lang.Class<?> < ? > > ( ) ; java.lang.ClassLoader java.lang.ClassLoader = java.lang.ClassLoader ( ) ; ClassPathScanningCandidateComponentProvider org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider = org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider ( ) ; for ( java.lang.String java.lang.String : this ) { for ( BeanDefinition org.springframework.data.gemfire.config.annotation.support.BeanDefinition : org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider . findCandidateComponents ( java.lang.String ) ) { try { java.util.Set<java.lang.Class<?>> . boolean ( ClassUtils . forName ( org.springframework.data.gemfire.config.annotation.support.BeanDefinition . getBeanClassName ( ) , java.lang.ClassLoader ) ) ; } catch ( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { org.springframework.data.gemfire.config.annotation.support.Log . warn ( java.lang.String . java.lang.String ( STRING , org.springframework.data.gemfire.config.annotation.support.BeanDefinition . getBeanClassName ( ) ) ) ; } } } return java.util.Set<java.lang.Class<?>> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider ( ) { return org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider ( false ) ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider ( boolean boolean ) { ClassPathScanningCandidateComponentProvider org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider = new ClassPathScanningCandidateComponentProvider ( boolean , org.springframework.data.gemfire.config.annotation.support.Environment ( ) ) ; for ( TypeFilter org.springframework.data.gemfire.config.annotation.support.TypeFilter : java.util.Set<org.springframework.data.gemfire.config.annotation.support.TypeFilter> ) { org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider . addExcludeFilter ( org.springframework.data.gemfire.config.annotation.support.TypeFilter ) ; } for ( TypeFilter org.springframework.data.gemfire.config.annotation.support.TypeFilter : java.util.Set<org.springframework.data.gemfire.config.annotation.support.TypeFilter> ) { org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider . addIncludeFilter ( org.springframework.data.gemfire.config.annotation.support.TypeFilter ) ; } return org.springframework.data.gemfire.config.annotation.support.ClassPathScanningCandidateComponentProvider ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( ConfigurableApplicationContext org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext ) { this . org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext = org.springframework.data.gemfire.config.annotation.support.ConfigurableApplicationContext ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( TypeFilter ... org.springframework.data.gemfire.config.annotation.support.TypeFilter[] ) { return org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( CollectionUtils . asSet ( ArrayUtils . nullSafeArray ( org.springframework.data.gemfire.config.annotation.support.TypeFilter[] , TypeFilter .class ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( java.lang.Iterable<org.springframework.data.gemfire.config.annotation.support.TypeFilter> < TypeFilter > java.lang.Iterable<org.springframework.data.gemfire.config.annotation.support.TypeFilter> ) { for ( TypeFilter org.springframework.data.gemfire.config.annotation.support.TypeFilter : CollectionUtils . nullSafeIterable ( java.lang.Iterable<org.springframework.data.gemfire.config.annotation.support.TypeFilter> ) ) { this . java.util.Set<org.springframework.data.gemfire.config.annotation.support.TypeFilter> . add ( org.springframework.data.gemfire.config.annotation.support.TypeFilter ) ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( TypeFilter ... org.springframework.data.gemfire.config.annotation.support.TypeFilter[] ) { return org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( CollectionUtils . asSet ( ArrayUtils . nullSafeArray ( org.springframework.data.gemfire.config.annotation.support.TypeFilter[] , TypeFilter .class ) ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner org.springframework.data.gemfire.config.annotation.support.GemFireComponentClassTypeScanner ( java.lang.Iterable<org.springframework.data.gemfire.config.annotation.support.TypeFilter> < TypeFilter > java.lang.Iterable<org.springframework.data.gemfire.config.annotation.support.TypeFilter> ) { for ( TypeFilter org.springframework.data.gemfire.config.annotation.support.TypeFilter : CollectionUtils . nullSafeIterable ( java.lang.Iterable<org.springframework.data.gemfire.config.annotation.support.TypeFilter> ) ) { this . java.util.Set<org.springframework.data.gemfire.config.annotation.support.TypeFilter> . add ( org.springframework.data.gemfire.config.annotation.support.TypeFilter ) ; } return this ; }  <METHOD_END>
