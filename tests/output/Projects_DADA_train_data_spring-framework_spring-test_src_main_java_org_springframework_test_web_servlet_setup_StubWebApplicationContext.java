<METHOD_START> public void ( ServletContext org.springframework.test.web.servlet.setup.ServletContext ) { this . org.springframework.test.web.servlet.setup.ServletContext = org.springframework.test.web.servlet.setup.ServletContext ; this . org.springframework.test.web.servlet.setup.ResourcePatternResolver = new ServletContextResourcePatternResolver ( org.springframework.test.web.servlet.setup.ServletContext ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.web.servlet.setup.AutowireCapableBeanFactory org.springframework.test.web.servlet.setup.AutowireCapableBeanFactory ( ) java.lang.IllegalStateException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.web.servlet.setup.ServletContext org.springframework.test.web.servlet.setup.ServletContext ( ) { return this . org.springframework.test.web.servlet.setup.ServletContext ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return this . long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.web.servlet.setup.ApplicationContext org.springframework.test.web.servlet.setup.ApplicationContext ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.web.servlet.setup.Environment org.springframework.test.web.servlet.setup.Environment ( ) { return this . org.springframework.test.web.servlet.setup.Environment ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . addBean ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<?> < ? > java.util.List<?> ) { if ( java.util.List<> == null ) { return; } for ( java.lang.Object java.lang.Object : java.util.List<> ) { java.lang.String java.lang.String = java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) + STRING + ObjectUtils . getIdentityHexString ( java.lang.Object ) ; this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . addBean ( java.lang.String , java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) throws org.springframework.test.web.servlet.setup.BeansException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.String java.lang.String , java.lang.Class<T> < T > java.lang.Class<T> ) throws org.springframework.test.web.servlet.setup.BeansException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBean ( java.lang.String , java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) throws org.springframework.test.web.servlet.setup.BeansException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBean ( java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) throws org.springframework.test.web.servlet.setup.BeansException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBean ( java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> , java.lang.Object ... java.lang.Object[] ) throws org.springframework.test.web.servlet.setup.BeansException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBean ( java.lang.Class<T> , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . containsBean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) throws org.springframework.test.web.servlet.setup.NoSuchBeanDefinitionException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . isSingleton ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) throws org.springframework.test.web.servlet.setup.NoSuchBeanDefinitionException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . isPrototype ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String , ResolvableType org.springframework.test.web.servlet.setup.ResolvableType ) throws org.springframework.test.web.servlet.setup.NoSuchBeanDefinitionException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . isTypeMatch ( java.lang.String , org.springframework.test.web.servlet.setup.ResolvableType ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> ) throws org.springframework.test.web.servlet.setup.NoSuchBeanDefinitionException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . isTypeMatch ( java.lang.String , java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( java.lang.String java.lang.String ) throws org.springframework.test.web.servlet.setup.NoSuchBeanDefinitionException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getType ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( java.lang.String java.lang.String ) { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getAliases ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . containsBeanDefinition ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBeanDefinitionCount ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBeanDefinitionNames ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ResolvableType org.springframework.test.web.servlet.setup.ResolvableType ) { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBeanNamesForType ( org.springframework.test.web.servlet.setup.ResolvableType ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBeanNamesForType ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( java.lang.Class<?> < ? > java.lang.Class<?> , boolean boolean , boolean boolean ) { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBeanNamesForType ( java.lang.Class<> , boolean , boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > java.util.Map<java.lang.String,T> < java.lang.String , T > java.util.Map<java.lang.String,T> ( java.lang.Class<T> < T > java.lang.Class<T> ) throws org.springframework.test.web.servlet.setup.BeansException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBeansOfType ( java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > java.util.Map<java.lang.String,T> < java.lang.String , T > java.util.Map<java.lang.String,T> ( java.lang.Class<T> < T > java.lang.Class<T> , boolean boolean , boolean boolean )			throws org.springframework.test.web.servlet.setup.BeansException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBeansOfType ( java.lang.Class<T> , boolean , boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> ) { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBeanNamesForAnnotation ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> )			throws org.springframework.test.web.servlet.setup.BeansException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . getBeansWithAnnotation ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < A extends java.lang.annotation.Annotation > A A ( java.lang.String java.lang.String , java.lang.Class<A> < A > java.lang.Class<A> )			throws org.springframework.test.web.servlet.setup.NoSuchBeanDefinitionException { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . findAnnotationOnBean ( java.lang.String , java.lang.Class<A> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.web.servlet.setup.BeanFactory org.springframework.test.web.servlet.setup.BeanFactory ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return this . org.springframework.test.web.servlet.setup.StubWebApplicationContext.StubBeanFactory . containsBean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.Object java.lang.Object[] [] , java.lang.String java.lang.String , java.util.Locale java.util.Locale ) { return this . org.springframework.test.web.servlet.setup.MessageSource . getMessage ( java.lang.String , java.lang.Object[] , java.lang.String , java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.Object java.lang.Object[] [] , java.util.Locale java.util.Locale ) throws org.springframework.test.web.servlet.setup.NoSuchMessageException { return this . org.springframework.test.web.servlet.setup.MessageSource . getMessage ( java.lang.String , java.lang.Object[] , java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( MessageSourceResolvable org.springframework.test.web.servlet.setup.MessageSourceResolvable , java.util.Locale java.util.Locale ) throws org.springframework.test.web.servlet.setup.NoSuchMessageException { return this . org.springframework.test.web.servlet.setup.MessageSource . getMessage ( org.springframework.test.web.servlet.setup.MessageSourceResolvable , java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.ClassLoader java.lang.ClassLoader ( ) { return ClassUtils . getDefaultClassLoader ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.web.servlet.setup.Resource org.springframework.test.web.servlet.setup.Resource ( java.lang.String java.lang.String ) { return this . org.springframework.test.web.servlet.setup.ResourcePatternResolver . getResource ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ApplicationEvent org.springframework.test.web.servlet.setup.ApplicationEvent ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.web.servlet.setup.Resource [] org.springframework.test.web.servlet.setup.Resource[] ( java.lang.String java.lang.String ) throws java.io.IOException { return this . org.springframework.test.web.servlet.setup.ResourcePatternResolver . getResources ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.test.web.servlet.setup.BeansException { if ( java.lang.Object instanceof ApplicationContextAware ) { ( ( ApplicationContextAware ) java.lang.Object ) . setApplicationContext ( org.springframework.test.web.servlet.setup.StubWebApplicationContext .this ) ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > T T ( java.lang.Class<T> < T > java.lang.Class<T> ) { return BeanUtils . instantiateClass ( java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Class<?> < ? > java.lang.Class<?> , int int , boolean boolean ) { return BeanUtils . instantiateClass ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Class<?> < ? > java.lang.Class<?> , int int , boolean boolean ) { return BeanUtils . instantiateClass ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) throws org.springframework.test.web.servlet.setup.BeansException {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , int int , boolean boolean ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < T > org.springframework.test.web.servlet.setup.NamedBeanHolder<T> < T > org.springframework.test.web.servlet.setup.NamedBeanHolder<T> ( java.lang.Class<T> < T > java.lang.Class<T> ) throws org.springframework.test.web.servlet.setup.BeansException { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( DependencyDescriptor org.springframework.test.web.servlet.setup.DependencyDescriptor , java.lang.String java.lang.String ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( DependencyDescriptor org.springframework.test.web.servlet.setup.DependencyDescriptor , java.lang.String java.lang.String , java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> , TypeConverter org.springframework.test.web.servlet.setup.TypeConverter ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) throws org.springframework.test.web.servlet.setup.BeansException {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object , java.lang.String java.lang.String ) { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) {		}  <METHOD_END>
