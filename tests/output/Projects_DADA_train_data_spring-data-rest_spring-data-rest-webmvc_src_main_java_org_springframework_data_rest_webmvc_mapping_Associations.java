<METHOD_START> public java.util.List<org.springframework.data.rest.webmvc.mapping.Link> < Link > java.util.List<org.springframework.data.rest.webmvc.mapping.Link> ( Association < ? extends PersistentProperty < ? > > org.springframework.data.rest.webmvc.mapping.Association<? extends org.springframework.data.rest.webmvc.mapping.PersistentProperty<?>> , Path org.springframework.data.rest.webmvc.mapping.Path ) { Assert . notNull ( org.springframework.data.rest.webmvc.mapping.Association<> , STRING ) ; Assert . notNull ( org.springframework.data.rest.webmvc.mapping.Path , STRING ) ; if ( boolean ( org.springframework.data.rest.webmvc.mapping.Association<> ) ) { PersistentProperty < ? > org.springframework.data.rest.webmvc.mapping.PersistentProperty<?> = org.springframework.data.rest.webmvc.mapping.Association<> . getInverse ( ) ; ResourceMetadata org.springframework.data.rest.webmvc.mapping.ResourceMetadata = org.springframework.data.rest.webmvc.mapping.ResourceMappings . getMetadataFor ( org.springframework.data.rest.webmvc.mapping.PersistentProperty<> . getOwner ( ) . getType ( ) ) ; ResourceMapping org.springframework.data.rest.webmvc.mapping.ResourceMapping = org.springframework.data.rest.webmvc.mapping.ResourceMetadata . getMappingFor ( org.springframework.data.rest.webmvc.mapping.PersistentProperty<> ) ; java.lang.String java.lang.String = org.springframework.data.rest.webmvc.mapping.Path . slash ( org.springframework.data.rest.webmvc.mapping.ResourceMapping . getPath ( ) ) . toString ( ) ; java.lang.String java.lang.String = org.springframework.data.rest.webmvc.mapping.ResourceMapping . getRel ( ) ; return java.util.Collections . java.util.List ( new Link ( java.lang.String , java.lang.String ) ) ; } return java.util.Collections . java.util.List<org.springframework.data.rest.webmvc.mapping.Link> ( ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.mapping.ResourceMetadata org.springframework.data.rest.webmvc.mapping.ResourceMetadata ( java.lang.Class<?> < ? > java.lang.Class<?> ) { Assert . notNull ( java.lang.Class<> , STRING ) ; return org.springframework.data.rest.webmvc.mapping.ResourceMappings . getMetadataFor ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( PersistentProperty < ? > org.springframework.data.rest.webmvc.mapping.PersistentProperty<?> ) { Assert . notNull ( org.springframework.data.rest.webmvc.mapping.PersistentProperty<> , STRING ) ; return org.springframework.data.rest.webmvc.mapping.RepositoryRestConfiguration . isLookupType ( org.springframework.data.rest.webmvc.mapping.PersistentProperty<> . getActualType ( ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( PersistentEntity < ? , ? > org.springframework.data.rest.webmvc.mapping.PersistentEntity<?,?> ) { return org.springframework.data.rest.webmvc.mapping.RepositoryRestConfiguration . isIdExposedFor ( org.springframework.data.rest.webmvc.mapping.PersistentEntity<,> . getType ( ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( Association < ? extends PersistentProperty < ? > > org.springframework.data.rest.webmvc.mapping.Association<? extends org.springframework.data.rest.webmvc.mapping.PersistentProperty<?>> ) { Assert . notNull ( org.springframework.data.rest.webmvc.mapping.Association<> , STRING ) ; return boolean ( org.springframework.data.rest.webmvc.mapping.Association<> . getInverse ( ) ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( PersistentProperty < ? > org.springframework.data.rest.webmvc.mapping.PersistentProperty<?> ) { Assert . notNull ( org.springframework.data.rest.webmvc.mapping.PersistentProperty<> , STRING ) ; if ( ! org.springframework.data.rest.webmvc.mapping.PersistentProperty<> . isAssociation ( ) || org.springframework.data.rest.webmvc.mapping.RepositoryRestConfiguration . isLookupType ( org.springframework.data.rest.webmvc.mapping.PersistentProperty<> . getActualType ( ) ) ) { return false ; } ResourceMetadata org.springframework.data.rest.webmvc.mapping.ResourceMetadata = org.springframework.data.rest.webmvc.mapping.ResourceMappings . getMetadataFor ( org.springframework.data.rest.webmvc.mapping.PersistentProperty<> . getOwner ( ) . getType ( ) ) ; if ( org.springframework.data.rest.webmvc.mapping.ResourceMetadata != null && ! org.springframework.data.rest.webmvc.mapping.ResourceMetadata . isExported ( org.springframework.data.rest.webmvc.mapping.PersistentProperty<> ) ) { return false ; } org.springframework.data.rest.webmvc.mapping.ResourceMetadata = org.springframework.data.rest.webmvc.mapping.ResourceMappings . getMetadataFor ( org.springframework.data.rest.webmvc.mapping.PersistentProperty<> . getActualType ( ) ) ; return org.springframework.data.rest.webmvc.mapping.ResourceMetadata == null ? false : org.springframework.data.rest.webmvc.mapping.ResourceMetadata . isExported ( ) ; }  <METHOD_END>
