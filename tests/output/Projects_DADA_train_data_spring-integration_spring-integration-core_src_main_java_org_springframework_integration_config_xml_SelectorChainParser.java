<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element ) { return MessageSelectorChain .class . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext , BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder ) { if ( ! StringUtils . hasText ( org.w3c.dom.Element . java.lang.String ( STRING ) ) ) { org.springframework.integration.config.xml.ParserContext . getReaderContext ( ) . error ( STRING , org.w3c.dom.Element ) ; } this . void ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , org.springframework.integration.config.xml.ParserContext ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) private void void ( BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element org.w3c.dom.Element , ParserContext org.springframework.integration.config.xml.ParserContext ) { IntegrationNamespaceUtils . setValueIfAttributeDefined ( org.springframework.integration.config.xml.BeanDefinitionBuilder , org.w3c.dom.Element , STRING ) ; ManagedList org.springframework.integration.config.xml.ManagedList = new ManagedList ( ) ; org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Element . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( org.w3c.dom.Node . short ( ) == org.w3c.dom.Node . short ) { java.lang.String java.lang.String = org.w3c.dom.Node . java.lang.String ( ) ; if ( STRING . boolean ( java.lang.String ) ) { java.lang.String java.lang.String = ( ( org.w3c.dom.Element ) org.w3c.dom.Node ) . java.lang.String ( STRING ) ; java.lang.String java.lang.String = ( ( org.w3c.dom.Element ) org.w3c.dom.Node ) . java.lang.String ( STRING ) ; if ( ! StringUtils . hasText ( java.lang.String ) ) { org.springframework.integration.config.xml.ManagedList . add ( new RuntimeBeanReference ( java.lang.String ) ) ; } else { org.springframework.integration.config.xml.ManagedList . add ( org.springframework.integration.config.xml.RuntimeBeanReference ( org.springframework.integration.config.xml.ParserContext , java.lang.String , java.lang.String ) ) ; } } else if ( STRING . boolean ( java.lang.String ) ) { org.springframework.integration.config.xml.ManagedList . add ( org.springframework.integration.config.xml.RuntimeBeanReference ( org.springframework.integration.config.xml.ParserContext , org.w3c.dom.Node ) ) ; } } } org.springframework.integration.config.xml.BeanDefinitionBuilder . addPropertyValue ( STRING , org.springframework.integration.config.xml.ManagedList ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.config.xml.RuntimeBeanReference org.springframework.integration.config.xml.RuntimeBeanReference ( ParserContext org.springframework.integration.config.xml.ParserContext , org.w3c.dom.Node org.w3c.dom.Node ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( MessageSelectorChain .class ) ; this . void ( org.springframework.integration.config.xml.BeanDefinitionBuilder , ( org.w3c.dom.Element ) org.w3c.dom.Node , org.springframework.integration.config.xml.ParserContext ) ; java.lang.String java.lang.String = BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) , org.springframework.integration.config.xml.ParserContext . getRegistry ( ) ) ; RuntimeBeanReference org.springframework.integration.config.xml.RuntimeBeanReference = new RuntimeBeanReference ( java.lang.String ) ; return org.springframework.integration.config.xml.RuntimeBeanReference ; }  <METHOD_END>
<METHOD_START> private org.springframework.integration.config.xml.RuntimeBeanReference org.springframework.integration.config.xml.RuntimeBeanReference ( ParserContext org.springframework.integration.config.xml.ParserContext , java.lang.String java.lang.String , java.lang.String java.lang.String ) { BeanDefinitionBuilder org.springframework.integration.config.xml.BeanDefinitionBuilder = BeanDefinitionBuilder . genericBeanDefinition ( MethodInvokingSelector .class ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( new RuntimeBeanReference ( java.lang.String ) ) ; org.springframework.integration.config.xml.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.String ) ; RuntimeBeanReference org.springframework.integration.config.xml.RuntimeBeanReference = new RuntimeBeanReference ( BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.integration.config.xml.BeanDefinitionBuilder . getBeanDefinition ( ) , org.springframework.integration.config.xml.ParserContext . getRegistry ( ) ) ) ; return org.springframework.integration.config.xml.RuntimeBeanReference ; }  <METHOD_END>
