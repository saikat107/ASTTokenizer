<METHOD_START> @ Test public void void ( ) { @ Configuration final class Config { } BeanDefinition org.springframework.context.annotation.BeanDefinition = rootBeanDefinition ( Config .class ) . getBeanDefinition ( ) ; DefaultListableBeanFactory org.springframework.context.annotation.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.context.annotation.DefaultListableBeanFactory . registerBeanDefinition ( STRING , org.springframework.context.annotation.BeanDefinition ) ; try { ConfigurationClassPostProcessor org.springframework.context.annotation.ConfigurationClassPostProcessor = new ConfigurationClassPostProcessor ( ) ; org.springframework.context.annotation.ConfigurationClassPostProcessor . postProcessBeanFactory ( org.springframework.context.annotation.DefaultListableBeanFactory ) ; fail ( STRING ) ; } catch ( BeanDefinitionParsingException org.springframework.context.annotation.BeanDefinitionParsingException ) { assertTrue ( org.springframework.context.annotation.BeanDefinitionParsingException . getMessage ( ) , org.springframework.context.annotation.BeanDefinitionParsingException . getMessage ( ) . contains ( STRING ) ) ; } }  <METHOD_END>
