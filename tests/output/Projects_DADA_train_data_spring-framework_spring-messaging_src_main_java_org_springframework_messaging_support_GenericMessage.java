<METHOD_START> public void ( T T ) { this( T , new MessageHeaders ( null ) ); }  <METHOD_END>
<METHOD_START> public void ( T T , java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ) { this( T , new MessageHeaders ( java.util.Map<java.lang.String,java.lang.Object> ) ); }  <METHOD_END>
<METHOD_START> public void ( T T , MessageHeaders org.springframework.messaging.support.MessageHeaders ) { Assert . notNull ( T , STRING ) ; Assert . notNull ( org.springframework.messaging.support.MessageHeaders , STRING ) ; this . T = T ; this . org.springframework.messaging.support.MessageHeaders = org.springframework.messaging.support.MessageHeaders ; }  <METHOD_END>
<METHOD_START> public T T ( ) { return this . T ; }  <METHOD_END>
<METHOD_START> public org.springframework.messaging.support.MessageHeaders org.springframework.messaging.support.MessageHeaders ( ) { return this . org.springframework.messaging.support.MessageHeaders ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.messaging.support.GenericMessage ) ) { return false ; } org.springframework.messaging.support.GenericMessage<?> < ? > org.springframework.messaging.support.GenericMessage<?> = ( org.springframework.messaging.support.GenericMessage<?> < ? > ) java.lang.Object ; return ( ObjectUtils . nullSafeEquals ( this . T , org.springframework.messaging.support.GenericMessage<> . payload ) && this . org.springframework.messaging.support.MessageHeaders . equals ( org.springframework.messaging.support.GenericMessage<> . org.springframework.messaging.support.MessageHeaders ) ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return ( ObjectUtils . nullSafeHashCode ( this . T ) * NUMBER + this . org.springframework.messaging.support.MessageHeaders . hashCode ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( java.lang.Class<? extends org.springframework.messaging.support.GenericMessage> ( ) . java.lang.String ( ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; if ( this . T instanceof byte [] ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( ( ( byte [] ) this . T ) . int ) . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( this . T ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . org.springframework.messaging.support.MessageHeaders ) . append ( STRING ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
