<METHOD_START> void ( Resource org.springframework.boot.env.Resource ) { Assert . notNull ( org.springframework.boot.env.Resource , STRING ) ; this . org.springframework.boot.env.Resource = org.springframework.boot.env.Resource ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> < java.lang.String , OriginTrackedValue > java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> ( ) java.io.IOException { return java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> ( true ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> < java.lang.String , OriginTrackedValue > java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> ( boolean boolean ) throws java.io.IOException { try ( org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader = new org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader ( this . org.springframework.boot.env.Resource ) ) { java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> < java.lang.String , OriginTrackedValue > java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> = new java.util.LinkedHashMap<java.lang.String,org.springframework.boot.env.OriginTrackedValue> <> ( ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; while ( org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ) { java.lang.String java.lang.String = java.lang.String ( java.lang.StringBuilder , org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader ) . java.lang.String ( ) ; if ( boolean && java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - NUMBER ) ; int int = NUMBER ; do { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( java.lang.StringBuilder , org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader , true ) ; void ( java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> , java.lang.String + STRING + ( int ++ ) + STRING , org.springframework.boot.env.OriginTrackedValue ) ; if ( ! org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ) { org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ; } } while ( ! org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ); } else { OriginTrackedValue org.springframework.boot.env.OriginTrackedValue = org.springframework.boot.env.OriginTrackedValue ( java.lang.StringBuilder , org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader , false ) ; void ( java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> , java.lang.String , org.springframework.boot.env.OriginTrackedValue ) ; } } return java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> ; } }  <METHOD_END>
<METHOD_START> private void void ( java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> < java.lang.String , OriginTrackedValue > java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> , java.lang.String java.lang.String , OriginTrackedValue org.springframework.boot.env.OriginTrackedValue ) { if ( ! java.lang.String . boolean ( ) ) { java.util.Map<java.lang.String,org.springframework.boot.env.OriginTrackedValue> . put ( java.lang.String , org.springframework.boot.env.OriginTrackedValue ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.StringBuilder java.lang.StringBuilder , org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader )			throws java.io.IOException { java.lang.StringBuilder . void ( NUMBER ) ; boolean boolean = false ; while ( ! org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ) { if ( org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ) { org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ; return java.lang.StringBuilder . java.lang.String ( ) ; } if ( ! org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) && boolean ) { return java.lang.StringBuilder . java.lang.String ( ) ; } boolean = org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . char ( ) ) ; org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.env.OriginTrackedValue org.springframework.boot.env.OriginTrackedValue ( java.lang.StringBuilder java.lang.StringBuilder , org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader , boolean boolean ) throws java.io.IOException { java.lang.StringBuilder . void ( NUMBER ) ; while ( org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) && ! org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ) { org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ; } Location org.springframework.boot.env.Location = org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . org.springframework.boot.env.Location ( ) ; while ( ! org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) && ! ( boolean && org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . char ( ) ) ; org.springframework.boot.env.OriginTrackedPropertiesLoader.CharacterReader . boolean ( ) ; } PropertyOrigin org.springframework.boot.env.PropertyOrigin = new TextResourcePropertyOrigin ( this . org.springframework.boot.env.Resource , org.springframework.boot.env.Location ) ; return OriginTrackedValue . of ( java.lang.StringBuilder . java.lang.String ( ) . java.lang.String ( ) , org.springframework.boot.env.PropertyOrigin ) ; }  <METHOD_END>
<METHOD_START> void ( Resource org.springframework.boot.env.Resource ) throws java.io.IOException { this . java.io.LineNumberReader = new java.io.LineNumberReader ( new java.io.InputStreamReader ( org.springframework.boot.env.Resource . getInputStream ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.io.IOException { this . java.io.LineNumberReader . void ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) java.io.IOException { return boolean ( false ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( boolean boolean ) throws java.io.IOException { this . boolean = false ; this . int = this . java.io.LineNumberReader . int ( ) ; this . int ++ ; if ( this . int == NUMBER ) { void ( ) ; if ( ! boolean ) { void ( ) ; } } if ( this . int == '\\' ) { this . boolean = true ; void ( ) ; } else if ( this . int == '\n' ) { this . int = - NUMBER ; } return ! boolean ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) java.io.IOException { while ( boolean ( ) ) { this . int = this . java.io.LineNumberReader . int ( ) ; this . int ++ ; } }  <METHOD_END>
<METHOD_START> private void void ( ) java.io.IOException { if ( this . int == '#' || this . int == '!' ) { while ( this . int != '\n' && this . int != - NUMBER ) { this . int = this . java.io.LineNumberReader . int ( ) ; } this . int = - NUMBER ; boolean ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) java.io.IOException { this . int = this . java.io.LineNumberReader . int ( ) ; int int = java.lang.String[] [ NUMBER ] . int ( this . int ) ; if ( int != - NUMBER ) { this . int = java.lang.String[] [ NUMBER ] . char ( int ) ; } else if ( this . int == '\n' ) { this . int = - NUMBER ; boolean ( true ) ; } else if ( this . int == 'u' ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) java.io.IOException { this . int = NUMBER ; for ( int int = NUMBER ; int < NUMBER ; int ++ ) { int int = this . java.io.LineNumberReader . int ( ) ; if ( int > - '0' && int <= '9' ) { this . int = ( this . int << NUMBER ) + int - '0' ; } else if ( int > - 'a' && int <= 'f' ) { this . int = ( this . int << NUMBER ) + int - 'a' + NUMBER ; } else if ( int > - 'A' && int <= 'F' ) { this . int = ( this . int << NUMBER ) + int - 'A' + NUMBER ; } else { throw new java.lang.IllegalArgumentException ( STRING ) ; } } }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! this . boolean && ( this . int == ' ' || this . int == '\t' || this . int == '\f' ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . int == - NUMBER ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . int == - NUMBER || ( ! this . boolean && this . int == '\n' ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! this . boolean && this . int == ',' ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! this . boolean && ( this . int == '=' || this . int == ':' ) ; }  <METHOD_END>
<METHOD_START> public char char ( ) { return ( char ) this . int ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.env.Location org.springframework.boot.env.Location ( ) { return new Location ( this . java.io.LineNumberReader . int ( ) , this . int ) ; }  <METHOD_END>
