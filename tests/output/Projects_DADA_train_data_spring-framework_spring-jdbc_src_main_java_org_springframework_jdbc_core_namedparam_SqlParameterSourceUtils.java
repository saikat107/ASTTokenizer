<METHOD_START> public static org.springframework.jdbc.core.namedparam.SqlParameterSource [] org.springframework.jdbc.core.namedparam.SqlParameterSource[] ( java.util.Map<java.lang.String,?> < java.lang.String , ? > [] java.util.Map<java.lang.String,?>[] ) { MapSqlParameterSource [] org.springframework.jdbc.core.namedparam.MapSqlParameterSource[] = new MapSqlParameterSource [ java.util.Map<java.lang.String,?>[] . int ] ; for ( int int = NUMBER ; int < java.util.Map<java.lang.String,?>[] . int ; int ++ ) { java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> = java.util.Map<java.lang.String,?>[] [ int ] ; org.springframework.jdbc.core.namedparam.MapSqlParameterSource[] [ int ] = new MapSqlParameterSource ( java.util.Map<java.lang.String,> ) ; } return org.springframework.jdbc.core.namedparam.MapSqlParameterSource[] ; }  <METHOD_END>
<METHOD_START> public static org.springframework.jdbc.core.namedparam.SqlParameterSource [] org.springframework.jdbc.core.namedparam.SqlParameterSource[] ( java.lang.Object [] java.lang.Object[] ) { BeanPropertySqlParameterSource [] org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource[] = new BeanPropertySqlParameterSource [ java.lang.Object[] . int ] ; for ( int int = NUMBER ; int < java.lang.Object[] . int ; int ++ ) { java.lang.Object java.lang.Object = java.lang.Object[] [ int ] ; org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource[] [ int ] = new BeanPropertySqlParameterSource ( java.lang.Object ) ; } return org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource[] ; }  <METHOD_END>
<METHOD_START> public static java.lang.Object java.lang.Object ( SqlParameterSource org.springframework.jdbc.core.namedparam.SqlParameterSource , java.lang.String java.lang.String ) { int int = org.springframework.jdbc.core.namedparam.SqlParameterSource . getSqlType ( java.lang.String ) ; if ( int != SqlParameterSource . TYPE_UNKNOWN ) { if ( org.springframework.jdbc.core.namedparam.SqlParameterSource . getTypeName ( java.lang.String ) != null ) { return new SqlParameterValue ( int , org.springframework.jdbc.core.namedparam.SqlParameterSource . getTypeName ( java.lang.String ) , org.springframework.jdbc.core.namedparam.SqlParameterSource . getValue ( java.lang.String ) ) ; } else { return new SqlParameterValue ( int , org.springframework.jdbc.core.namedparam.SqlParameterSource . getValue ( java.lang.String ) ) ; } } else { return org.springframework.jdbc.core.namedparam.SqlParameterSource . getValue ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public static java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( SqlParameterSource org.springframework.jdbc.core.namedparam.SqlParameterSource ) { java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; if ( org.springframework.jdbc.core.namedparam.SqlParameterSource instanceof BeanPropertySqlParameterSource ) { java.lang.String [] java.lang.String[] = ( ( BeanPropertySqlParameterSource ) org.springframework.jdbc.core.namedparam.SqlParameterSource ) . getReadablePropertyNames ( ) ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { java.lang.String java.lang.String = java.lang.String[] [ int ] ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String . java.lang.String ( ) , java.lang.String ) ; } } else if ( org.springframework.jdbc.core.namedparam.SqlParameterSource instanceof MapSqlParameterSource ) { for ( java.lang.String java.lang.String : ( ( MapSqlParameterSource ) org.springframework.jdbc.core.namedparam.SqlParameterSource ) . getValues ( ) . keySet ( ) ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String . java.lang.String ( ) , java.lang.String ) ; } } return java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
