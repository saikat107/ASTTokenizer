<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( org.w3c.dom.Element org.w3c.dom.Element ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( ) ; if ( STRING . boolean ( java.lang.String ) ) { return UnmarshallerRepositoryPopulatorFactoryBean .class . java.lang.String ( ) ; } else if ( STRING . boolean ( java.lang.String ) ) { return Jackson2RepositoryPopulatorFactoryBean .class . java.lang.String ( ) ; } throw new java.lang.IllegalStateException ( STRING + java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionBuilder org.springframework.data.repository.config.BeanDefinitionBuilder ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( ) ; org.springframework.data.repository.config.BeanDefinitionBuilder . addPropertyValue ( STRING , org.w3c.dom.Element . java.lang.String ( STRING ) ) ; if ( STRING . boolean ( java.lang.String ) ) { void ( org.w3c.dom.Element , org.springframework.data.repository.config.BeanDefinitionBuilder ) ; } else if ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING ) . boolean ( java.lang.String ) ) { void ( org.w3c.dom.Element , org.springframework.data.repository.config.BeanDefinitionBuilder ) ; } }  <METHOD_END>
<METHOD_START> private static void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionBuilder org.springframework.data.repository.config.BeanDefinitionBuilder ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.repository.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private static void void ( org.w3c.dom.Element org.w3c.dom.Element , BeanDefinitionBuilder org.springframework.data.repository.config.BeanDefinitionBuilder ) { java.lang.String java.lang.String = org.w3c.dom.Element . java.lang.String ( STRING ) ; if ( StringUtils . hasText ( java.lang.String ) ) { org.springframework.data.repository.config.BeanDefinitionBuilder . addPropertyReference ( STRING , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
