<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; XmlBeanDefinitionReader org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) ; ConfigurableEnvironment org.springframework.beans.factory.xml.ConfigurableEnvironment = new StandardEnvironment ( ) ; org.springframework.beans.factory.xml.ConfigurableEnvironment . setDefaultProfiles ( STRING ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . setEnvironment ( org.springframework.beans.factory.xml.ConfigurableEnvironment ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( java.lang.String , java.lang.Class<? extends org.springframework.beans.factory.xml.ProfileXmlBeanDefinitionTests> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; } { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; XmlBeanDefinitionReader org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) ; ConfigurableEnvironment org.springframework.beans.factory.xml.ConfigurableEnvironment = new StandardEnvironment ( ) ; org.springframework.beans.factory.xml.ConfigurableEnvironment . setDefaultProfiles ( STRING ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . setEnvironment ( org.springframework.beans.factory.xml.ConfigurableEnvironment ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( java.lang.String , java.lang.Class<? extends org.springframework.beans.factory.xml.ProfileXmlBeanDefinitionTests> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , java.lang.String[] ) , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; assertThat ( org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String , STRING ) , not ( org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ) ; { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; XmlBeanDefinitionReader org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) ; ConfigurableEnvironment org.springframework.beans.factory.xml.ConfigurableEnvironment = new StandardEnvironment ( ) ; org.springframework.beans.factory.xml.ConfigurableEnvironment . setActiveProfiles ( java.lang.String ) ; org.springframework.beans.factory.xml.ConfigurableEnvironment . setDefaultProfiles ( STRING ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . setEnvironment ( org.springframework.beans.factory.xml.ConfigurableEnvironment ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( java.lang.String , java.lang.Class<? extends org.springframework.beans.factory.xml.ProfileXmlBeanDefinitionTests> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; } { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; XmlBeanDefinitionReader org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) ; ConfigurableEnvironment org.springframework.beans.factory.xml.ConfigurableEnvironment = new StandardEnvironment ( ) ; org.springframework.beans.factory.xml.ConfigurableEnvironment . setDefaultProfiles ( STRING ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . setEnvironment ( org.springframework.beans.factory.xml.ConfigurableEnvironment ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( java.lang.String , java.lang.Class<? extends org.springframework.beans.factory.xml.ProfileXmlBeanDefinitionTests> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; } { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; XmlBeanDefinitionReader org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) ; ConfigurableEnvironment org.springframework.beans.factory.xml.ConfigurableEnvironment = new StandardEnvironment ( ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . setEnvironment ( org.springframework.beans.factory.xml.ConfigurableEnvironment ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( java.lang.String , java.lang.Class<? extends org.springframework.beans.factory.xml.ProfileXmlBeanDefinitionTests> ( ) ) ) ; assertThat ( org.springframework.beans.factory.xml.DefaultListableBeanFactory , org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) ) ; } }  <METHOD_END>
<METHOD_START> private org.springframework.beans.factory.xml.BeanDefinitionRegistry org.springframework.beans.factory.xml.BeanDefinitionRegistry ( java.lang.String java.lang.String , java.lang.String ... java.lang.String[] ) { DefaultListableBeanFactory org.springframework.beans.factory.xml.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; XmlBeanDefinitionReader org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new XmlBeanDefinitionReader ( org.springframework.beans.factory.xml.DefaultListableBeanFactory ) ; StandardEnvironment org.springframework.beans.factory.xml.StandardEnvironment = new StandardEnvironment ( ) ; org.springframework.beans.factory.xml.StandardEnvironment . setActiveProfiles ( java.lang.String[] ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . setEnvironment ( org.springframework.beans.factory.xml.StandardEnvironment ) ; org.springframework.beans.factory.xml.XmlBeanDefinitionReader . loadBeanDefinitions ( new ClassPathResource ( java.lang.String , java.lang.Class<? extends org.springframework.beans.factory.xml.ProfileXmlBeanDefinitionTests> ( ) ) ) ; return org.springframework.beans.factory.xml.DefaultListableBeanFactory ; }  <METHOD_END>
<METHOD_START> private static org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> < BeanDefinitionRegistry > org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( final java.lang.String java.lang.String ) { return new TypeSafeMatcher < BeanDefinitionRegistry > ( ) { @ java.lang.Override public void void ( Description org.springframework.beans.factory.xml.Description ) { org.springframework.beans.factory.xml.Description . appendText ( STRING ) . appendValue ( java.lang.String ) ; } @ java.lang.Override public boolean boolean ( BeanDefinitionRegistry org.springframework.beans.factory.xml.BeanDefinitionRegistry ) { return org.springframework.beans.factory.xml.BeanDefinitionRegistry . containsBeanDefinition ( java.lang.String ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Description org.springframework.beans.factory.xml.Description ) { org.springframework.beans.factory.xml.Description . appendText ( STRING ) . appendValue ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( BeanDefinitionRegistry org.springframework.beans.factory.xml.BeanDefinitionRegistry ) { return org.springframework.beans.factory.xml.BeanDefinitionRegistry . containsBeanDefinition ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> < BeanDefinitionRegistry > org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( ) { return org.springframework.beans.factory.xml.Matcher<org.springframework.beans.factory.xml.BeanDefinitionRegistry> ( java.lang.String ) ; }  <METHOD_END>
