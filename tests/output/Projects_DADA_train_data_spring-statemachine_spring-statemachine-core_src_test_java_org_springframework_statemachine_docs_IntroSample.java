<METHOD_START> @ java.lang.Override public void void ( StateMachineStateConfigurer < org.springframework.statemachine.docs.IntroSample.States , org.springframework.statemachine.docs.IntroSample.Events > org.springframework.statemachine.docs.StateMachineStateConfigurer<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> )				throws java.lang.Exception { org.springframework.statemachine.docs.StateMachineStateConfigurer<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . withStates ( ) . initial ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) . states ( java.util.EnumSet . java.util.EnumSet<org.springframework.statemachine.docs.IntroSample.States> ( org.springframework.statemachine.docs.IntroSample.States .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateMachineTransitionConfigurer < org.springframework.statemachine.docs.IntroSample.States , org.springframework.statemachine.docs.IntroSample.Events > org.springframework.statemachine.docs.StateMachineTransitionConfigurer<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> )				throws java.lang.Exception { org.springframework.statemachine.docs.StateMachineTransitionConfigurer<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . withExternal ( ) . source ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) . target ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) . event ( org.springframework.statemachine.docs.IntroSample.Events . org.springframework.statemachine.docs.IntroSample.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) . target ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) . event ( org.springframework.statemachine.docs.IntroSample.Events . org.springframework.statemachine.docs.IntroSample.Events ) ; }  <METHOD_END>
<METHOD_START> @ OnTransition ( target = STRING ) void void ( ) {		}  <METHOD_END>
<METHOD_START> @ OnTransition ( target = STRING ) void void ( ) {		}  <METHOD_END>
<METHOD_START> void void ( ) { org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . sendEvent ( org.springframework.statemachine.docs.IntroSample.Events . org.springframework.statemachine.docs.IntroSample.Events ) ; org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . sendEvent ( org.springframework.statemachine.docs.IntroSample.Events . org.springframework.statemachine.docs.IntroSample.Events ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { StateMachine < org.springframework.statemachine.docs.IntroSample.States , org.springframework.statemachine.docs.IntroSample.Events > org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> = org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> ( ) ; org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . start ( ) ; assertThat ( org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . getState ( ) . getIds ( ) , containsInAnyOrder ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) ) ; org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . sendEvent ( org.springframework.statemachine.docs.IntroSample.Events . org.springframework.statemachine.docs.IntroSample.Events ) ; assertThat ( org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . getState ( ) . getIds ( ) , containsInAnyOrder ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) ) ; org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . sendEvent ( org.springframework.statemachine.docs.IntroSample.Events . org.springframework.statemachine.docs.IntroSample.Events ) ; assertThat ( org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . getState ( ) . getIds ( ) , containsInAnyOrder ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> < org.springframework.statemachine.docs.IntroSample.States , org.springframework.statemachine.docs.IntroSample.Events > org.springframework.statemachine.docs.StateMachine<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> ( ) java.lang.Exception { Builder < org.springframework.statemachine.docs.IntroSample.States , org.springframework.statemachine.docs.IntroSample.Events > org.springframework.statemachine.docs.Builder<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> = StateMachineBuilder . builder ( ) ; org.springframework.statemachine.docs.Builder<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . configureStates ( ) . withStates ( ) . initial ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) . states ( java.util.EnumSet . java.util.EnumSet<org.springframework.statemachine.docs.IntroSample.States> ( org.springframework.statemachine.docs.IntroSample.States .class ) ) ; org.springframework.statemachine.docs.Builder<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . configureTransitions ( ) . withExternal ( ) . source ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) . target ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) . event ( org.springframework.statemachine.docs.IntroSample.Events . org.springframework.statemachine.docs.IntroSample.Events ) . and ( ) . withExternal ( ) . source ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) . target ( org.springframework.statemachine.docs.IntroSample.States . org.springframework.statemachine.docs.IntroSample.States ) . event ( org.springframework.statemachine.docs.IntroSample.Events . org.springframework.statemachine.docs.IntroSample.Events ) ; return org.springframework.statemachine.docs.Builder<org.springframework.statemachine.docs.IntroSample.States,org.springframework.statemachine.docs.IntroSample.Events> . build ( ) ; }  <METHOD_END>
