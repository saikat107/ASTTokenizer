<METHOD_START> protected void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public final java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public abstract int int ( )  <METHOD_END>
<METHOD_START> public abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public abstract java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( )  <METHOD_END>
<METHOD_START> public abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public abstract org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.springframework.web.util.MultiValueMap<java.lang.String,java.lang.String> ( )  <METHOD_END>
<METHOD_START> public final java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( ) { return org.springframework.web.util.UriComponents ( java.nio.charset.StandardCharsets . java.nio.charset.Charset ) ; }  <METHOD_END>
<METHOD_START> public abstract org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( java.nio.charset.Charset java.nio.charset.Charset ) ;  <METHOD_END>
<METHOD_START> public final org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { Assert . notNull ( java.util.Map<java.lang.String,> , STRING ) ; return org.springframework.web.util.UriComponents ( new org.springframework.web.util.UriComponents.MapTemplateVariables ( java.util.Map<java.lang.String,> ) ) ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( java.lang.Object ... java.lang.Object[] ) { Assert . notNull ( java.lang.Object[] , STRING ) ; return org.springframework.web.util.UriComponents ( new org.springframework.web.util.UriComponents.VarArgsTemplateVariables ( java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> public final org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( org.springframework.web.util.UriComponents.UriTemplateVariables org.springframework.web.util.UriComponents.UriTemplateVariables ) { Assert . notNull ( org.springframework.web.util.UriComponents.UriTemplateVariables , STRING ) ; return org.springframework.web.util.UriComponents ( org.springframework.web.util.UriComponents.UriTemplateVariables ) ; }  <METHOD_END>
<METHOD_START> abstract org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( org.springframework.web.util.UriComponents.UriTemplateVariables org.springframework.web.util.UriComponents.UriTemplateVariables );  <METHOD_END>
<METHOD_START> public abstract org.springframework.web.util.UriComponents org.springframework.web.util.UriComponents ( )  <METHOD_END>
<METHOD_START> public abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public abstract java.net.URI java.net.URI ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public final java.lang.String java.lang.String ( ) { return java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( UriComponentsBuilder org.springframework.web.util.UriComponentsBuilder );  <METHOD_END>
<METHOD_START> static java.lang.String java.lang.String ( java.lang.String java.lang.String , org.springframework.web.util.UriComponents.UriTemplateVariables org.springframework.web.util.UriComponents.UriTemplateVariables ) { if ( java.lang.String == null ) { return null ; } if ( java.lang.String . int ( '{' ) == - NUMBER ) { return java.lang.String ; } if ( java.lang.String . int ( ':' ) != - NUMBER ) { java.lang.String = java.lang.String ( java.lang.String ) ; } java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer ( ) ; while ( java.util.regex.Matcher . boolean ( ) ) { java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( NUMBER ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.Object java.lang.Object = org.springframework.web.util.UriComponents.UriTemplateVariables . java.lang.Object ( java.lang.String ) ; if ( org.springframework.web.util.UriComponents.UriTemplateVariables . java.lang.Object . boolean ( java.lang.Object ) ) { continue; } java.lang.String java.lang.String = java.lang.String ( java.lang.Object ) ; java.lang.String java.lang.String = java.util.regex.Matcher . java.lang.String ( java.lang.String ) ; java.util.regex.Matcher . java.util.regex.Matcher ( java.lang.StringBuffer , java.lang.String ) ; } java.util.regex.Matcher . java.lang.StringBuffer ( java.lang.StringBuffer ) ; return java.lang.StringBuffer . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { int int = NUMBER ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( char char : java.lang.String . char[] ( ) ) { if ( char == '{' ) { int ++ ; } if ( char == '}' ) { int -- ; } if ( int > NUMBER || ( int == NUMBER && char == '}' ) ) { continue; } java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { int int = java.lang.String . int ( ':' ) ; return ( int != - NUMBER ? java.lang.String . java.lang.String ( NUMBER , int ) : java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.Object java.lang.Object ) { return ( java.lang.Object != null ? java.lang.Object . java.lang.String ( ) : STRING ) ; }  <METHOD_END>
<METHOD_START> java.lang.Object java.lang.Object ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> public void ( java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { this . java.util.Map<java.lang.String,?> = java.util.Map<java.lang.String,> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { if ( ! this . java.util.Map<java.lang.String,> . boolean ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String + STRING ) ; } return this . java.util.Map<java.lang.String,> . get ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object ... java.lang.Object[] ) { this . java.util.Iterator<java.lang.Object> = java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) . java.util.Iterator<java.lang.Object> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { if ( ! this . java.util.Iterator<java.lang.Object> . boolean ( ) ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.String + STRING ) ; } return this . java.util.Iterator<java.lang.Object> . java.lang.Object ( ) ; }  <METHOD_END>
