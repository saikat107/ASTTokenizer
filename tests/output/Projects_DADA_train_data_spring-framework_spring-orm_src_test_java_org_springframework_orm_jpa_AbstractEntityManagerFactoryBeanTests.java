<METHOD_START> @ Before public void void ( ) java.lang.Exception { org.springframework.orm.jpa.EntityManagerFactory = mock ( EntityManagerFactory .class ) ; }  <METHOD_END>
<METHOD_START> @ After public void void ( ) java.lang.Exception { assertTrue ( TransactionSynchronizationManager . getResourceMap ( ) . isEmpty ( ) ) ; assertFalse ( TransactionSynchronizationManager . isSynchronizationActive ( ) ) ; assertFalse ( TransactionSynchronizationManager . isCurrentTransactionReadOnly ( ) ) ; assertFalse ( TransactionSynchronizationManager . isActualTransactionActive ( ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( AbstractEntityManagerFactoryBean org.springframework.orm.jpa.AbstractEntityManagerFactoryBean ) { assertTrue ( EntityManagerFactory .class . boolean ( org.springframework.orm.jpa.AbstractEntityManagerFactoryBean . getObjectType ( ) ) ) ; java.lang.Object java.lang.Object = org.springframework.orm.jpa.AbstractEntityManagerFactoryBean . getObject ( ) ; assertTrue ( STRING , java.lang.Object instanceof EntityManagerFactoryInfo ) ; EntityManagerFactoryInfo org.springframework.orm.jpa.EntityManagerFactoryInfo = ( EntityManagerFactoryInfo ) org.springframework.orm.jpa.AbstractEntityManagerFactoryBean . getObject ( ) ; assertSame ( STRING , org.springframework.orm.jpa.EntityManagerFactoryInfo , org.springframework.orm.jpa.AbstractEntityManagerFactoryBean . getObject ( ) ) ; assertSame ( org.springframework.orm.jpa.EntityManagerFactoryInfo , org.springframework.orm.jpa.AbstractEntityManagerFactoryBean . getObject ( ) ) ; assertSame ( org.springframework.orm.jpa.EntityManagerFactoryInfo . getNativeEntityManagerFactory ( ) , org.springframework.orm.jpa.EntityManagerFactory ) ; }  <METHOD_END>
<METHOD_START> public void ( EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory ) { this . org.springframework.orm.jpa.EntityManagerFactory = org.springframework.orm.jpa.EntityManagerFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.orm.jpa.EntityManagerFactory org.springframework.orm.jpa.EntityManagerFactory ( ) org.springframework.orm.jpa.PersistenceException { return org.springframework.orm.jpa.EntityManagerFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.orm.jpa.PersistenceUnitInfo org.springframework.orm.jpa.PersistenceUnitInfo ( ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
