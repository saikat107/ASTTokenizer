<METHOD_START> public static org.apache.commons.logging.Log org.apache.commons.logging.Log ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.apache.commons.logging.Log ( java.lang.Class<> . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public static org.apache.commons.logging.Log org.apache.commons.logging.Log ( java.lang.String java.lang.String ) { switch ( org.apache.commons.logging.LogFactory.LogApi ) { case org.apache.commons.logging.LogFactory.LogApi : return org.apache.commons.logging.LogFactory.Log4jDelegate . org.apache.commons.logging.Log ( java.lang.String ) ; case org.apache.commons.logging.LogFactory.LogApi : return org.apache.commons.logging.LogFactory.Slf4jDelegate . org.apache.commons.logging.Log ( java.lang.String ) ; case org.apache.commons.logging.LogFactory.LogApi : return org.apache.commons.logging.LogFactory.Slf4jDelegate . org.apache.commons.logging.Log ( java.lang.String ) ; default: return new org.apache.commons.logging.LogFactory.JavaUtilLog ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public static org.apache.commons.logging.LogFactory org.apache.commons.logging.LogFactory ( ) { return new org.apache.commons.logging.LogFactory ( ) {} ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public org.apache.commons.logging.Log org.apache.commons.logging.Log ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return org.apache.commons.logging.Log ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public org.apache.commons.logging.Log org.apache.commons.logging.Log ( java.lang.String java.lang.String ) { return org.apache.commons.logging.Log ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.apache.commons.logging.Log org.apache.commons.logging.Log ( java.lang.String java.lang.String ) { return new org.apache.commons.logging.LogFactory.Log4jLog ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static org.apache.commons.logging.Log org.apache.commons.logging.Log ( java.lang.String java.lang.String ) { Logger org.apache.commons.logging.Logger = LoggerFactory . getLogger ( java.lang.String ) ; return ( org.apache.commons.logging.Logger instanceof LocationAwareLogger ? new org.apache.commons.logging.LogFactory.Slf4jLocationAwareLog ( ( LocationAwareLogger ) org.apache.commons.logging.Logger ) : new org.apache.commons.logging.LogFactory.Slf4jLog <> ( org.apache.commons.logging.Logger ) ) ; }  <METHOD_END>
<METHOD_START> public static org.apache.commons.logging.Log org.apache.commons.logging.Log ( java.lang.String java.lang.String ) { return new org.apache.commons.logging.LogFactory.Slf4jLog <> ( LoggerFactory . getLogger ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . org.apache.commons.logging.ExtendedLogger = org.apache.commons.logging.LoggerContext . getLogger ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.apache.commons.logging.ExtendedLogger . isEnabled ( Level . DEBUG , null , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.apache.commons.logging.ExtendedLogger . isEnabled ( Level . ERROR , null , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.apache.commons.logging.ExtendedLogger . isEnabled ( Level . FATAL , null , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.apache.commons.logging.ExtendedLogger . isEnabled ( Level . INFO , null , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.apache.commons.logging.ExtendedLogger . isEnabled ( Level . TRACE , null , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.apache.commons.logging.ExtendedLogger . isEnabled ( Level . WARN , null , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . DEBUG , null , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . DEBUG , null , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . ERROR , null , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . ERROR , null , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . FATAL , null , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . FATAL , null , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . INFO , null , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . INFO , null , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . TRACE , null , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . TRACE , null , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . WARN , null , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { org.apache.commons.logging.ExtendedLogger . logIfEnabled ( java.lang.String , Level . WARN , null , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void ( T T ) { this . java.lang.String = T . getName ( ) ; this . T = T ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . T . isDebugEnabled ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . T . isErrorEnabled ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . T . isErrorEnabled ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . T . isInfoEnabled ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . T . isTraceEnabled ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . T . isWarnEnabled ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . T . debug ( java.lang.String . java.lang.String ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . T . debug ( java.lang.String . java.lang.String ( java.lang.Object ) , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . T . error ( java.lang.String . java.lang.String ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . T . error ( java.lang.String . java.lang.String ( java.lang.Object ) , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . T . error ( java.lang.String . java.lang.String ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . T . error ( java.lang.String . java.lang.String ( java.lang.Object ) , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . T . info ( java.lang.String . java.lang.String ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . T . info ( java.lang.String . java.lang.String ( java.lang.Object ) , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . T . trace ( java.lang.String . java.lang.String ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . T . trace ( java.lang.String . java.lang.String ( java.lang.Object ) , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . T . warn ( java.lang.String . java.lang.String ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . T . warn ( java.lang.String . java.lang.String ( java.lang.Object ) , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( ) { return org.apache.commons.logging.LogFactory.Slf4jDelegate . org.apache.commons.logging.Log ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( LocationAwareLogger org.apache.commons.logging.LocationAwareLogger ) { super( org.apache.commons.logging.LocationAwareLogger ); }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . DEBUG_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . DEBUG_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . ERROR_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . ERROR_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . ERROR_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . ERROR_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . INFO_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . INFO_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . TRACE_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . TRACE_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . WARN_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { this . org.apache.commons.logging.LocationAwareLogger . log ( null , java.lang.String , LocationAwareLogger . WARN_INT , java.lang.String . java.lang.String ( java.lang.Object ) , null , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( ) { return org.apache.commons.logging.LogFactory.Slf4jDelegate . org.apache.commons.logging.Log ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.util.logging.Logger = java . util . logging . java.util.logging.Logger . java.util.logging.Logger ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.util.logging.Logger . boolean ( java . util . logging . java.util.logging.Level . java.util.logging.Level ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.util.logging.Logger . boolean ( java . util . logging . java.util.logging.Level . java.util.logging.Level ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.util.logging.Logger . boolean ( java . util . logging . java.util.logging.Level . java.util.logging.Level ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.util.logging.Logger . boolean ( java . util . logging . java.util.logging.Level . java.util.logging.Level ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.util.logging.Logger . boolean ( java . util . logging . java.util.logging.Level . java.util.logging.Level ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . java.util.logging.Logger . boolean ( java . util . logging . java.util.logging.Level . java.util.logging.Level ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { void ( java . util . logging . java.util.logging.Level . java.util.logging.Level , java.lang.Object , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> private void void ( java . util . logging . java.util.logging.Level java.util.logging.Level , java.lang.Object java.lang.Object , java.lang.Throwable java.lang.Throwable ) { if ( java.util.logging.Logger . boolean ( java.util.logging.Level ) ) { org.apache.commons.logging.LogFactory.LocationResolvingLogRecord org.apache.commons.logging.LogFactory.LocationResolvingLogRecord = new org.apache.commons.logging.LogFactory.LocationResolvingLogRecord ( java.util.logging.Level , java.lang.String . java.lang.String ( java.lang.Object ) ) ; org.apache.commons.logging.LogFactory.LocationResolvingLogRecord . void ( this . java.lang.String ) ; org.apache.commons.logging.LogFactory.LocationResolvingLogRecord . void ( java.util.logging.Logger . java.lang.String ( ) ) ; org.apache.commons.logging.LogFactory.LocationResolvingLogRecord . void ( java.util.logging.Logger . java.util.ResourceBundle ( ) ) ; org.apache.commons.logging.LogFactory.LocationResolvingLogRecord . void ( java.lang.Throwable ) ; java.util.logging.Logger . void ( org.apache.commons.logging.LogFactory.LocationResolvingLogRecord ) ; } }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( ) { return new org.apache.commons.logging.LogFactory.JavaUtilLog ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( java . util . logging . java.util.logging.Level java.util.logging.Level , java.lang.String java.lang.String ) { super( java.util.logging.Level , java.lang.String ); }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { if ( ! this . boolean ) { void ( ) ; } return super. java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { super. void ( java.lang.String ) ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { if ( ! this . boolean ) { void ( ) ; } return super. java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { super. void ( java.lang.String ) ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> private void void ( ) { java.lang.StackTraceElement [] java.lang.StackTraceElement[] = new java.lang.Throwable ( ) . java.lang.StackTraceElement[] ( ) ; java.lang.String java.lang.String = null ; java.lang.String java.lang.String = null ; boolean boolean = false ; for ( java.lang.StackTraceElement java.lang.StackTraceElement : java.lang.StackTraceElement[] ) { java.lang.String java.lang.String = java.lang.StackTraceElement . java.lang.String ( ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { boolean = true ; } else if ( boolean ) { java.lang.String = java.lang.String ; java.lang.String = java.lang.StackTraceElement . java.lang.String ( ) ; break; } } void ( java.lang.String ) ; void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Object java.lang.Object ( ) { java . util . logging . java.util.logging.LogRecord java.util.logging.LogRecord = new java . util . logging . java.util.logging.LogRecord ( java.util.logging.Level ( ) , java.lang.String ( ) ) ; java.util.logging.LogRecord . void ( java.lang.String ( ) ) ; java.util.logging.LogRecord . void ( java.util.ResourceBundle ( ) ) ; java.util.logging.LogRecord . void ( java.lang.String ( ) ) ; java.util.logging.LogRecord . void ( java.lang.String ( ) ) ; java.util.logging.LogRecord . void ( java.lang.String ( ) ) ; java.util.logging.LogRecord . void ( long ( ) ) ; java.util.logging.LogRecord . void ( java.lang.Object[] ( ) ) ; java.util.logging.LogRecord . void ( int ( ) ) ; java.util.logging.LogRecord . void ( long ( ) ) ; java.util.logging.LogRecord . void ( java.lang.Throwable ( ) ) ; return java.util.logging.LogRecord ; }  <METHOD_END>
