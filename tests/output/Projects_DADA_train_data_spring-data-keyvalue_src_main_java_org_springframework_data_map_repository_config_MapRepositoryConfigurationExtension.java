<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.map.repository.config.AbstractBeanDefinition org.springframework.data.map.repository.config.AbstractBeanDefinition ( RepositoryConfigurationSource org.springframework.data.map.repository.config.RepositoryConfigurationSource ) { BeanDefinitionBuilder org.springframework.data.map.repository.config.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( MapKeyValueAdapter .class ) ; org.springframework.data.map.repository.config.BeanDefinitionBuilder . addConstructorArgValue ( java.lang.Class<? extends java.util.Map> ( org.springframework.data.map.repository.config.RepositoryConfigurationSource ) ) ; BeanDefinitionBuilder org.springframework.data.map.repository.config.BeanDefinitionBuilder = BeanDefinitionBuilder . rootBeanDefinition ( KeyValueTemplate .class ) ; org.springframework.data.map.repository.config.BeanDefinitionBuilder . addConstructorArgValue ( ParsingUtils . getSourceBeanDefinition ( org.springframework.data.map.repository.config.BeanDefinitionBuilder , org.springframework.data.map.repository.config.RepositoryConfigurationSource . getSource ( ) ) ) ; org.springframework.data.map.repository.config.BeanDefinitionBuilder . setRole ( BeanDefinition . ROLE_SUPPORT ) ; return ParsingUtils . getSourceBeanDefinition ( org.springframework.data.map.repository.config.BeanDefinitionBuilder , org.springframework.data.map.repository.config.RepositoryConfigurationSource . getSource ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING , STRING } ) private static java.lang.Class<? extends java.util.Map> < ? extends java.util.Map > java.lang.Class<? extends java.util.Map> ( RepositoryConfigurationSource org.springframework.data.map.repository.config.RepositoryConfigurationSource ) { return ( java.lang.Class<? extends java.util.Map> < ? extends java.util.Map > ) ( ( AnnotationMetadata ) org.springframework.data.map.repository.config.RepositoryConfigurationSource . getSource ( ) ) . getAnnotationAttributes ( EnableMapRepositories .class . java.lang.String ( ) ) . get ( STRING ) ; }  <METHOD_END>
