<METHOD_START> public void ( MongoProperties org.springframework.boot.autoconfigure.mongo.MongoProperties , Environment org.springframework.boot.autoconfigure.mongo.Environment ) { this . org.springframework.boot.autoconfigure.mongo.MongoProperties = org.springframework.boot.autoconfigure.mongo.MongoProperties ; this . org.springframework.boot.autoconfigure.mongo.Environment = org.springframework.boot.autoconfigure.mongo.Environment ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.autoconfigure.mongo.MongoClient org.springframework.boot.autoconfigure.mongo.MongoClient ( MongoClientOptions org.springframework.boot.autoconfigure.mongo.MongoClientOptions ) { java.lang.Integer java.lang.Integer = java.lang.Integer ( ) ; if ( java.lang.Integer != null ) { return org.springframework.boot.autoconfigure.mongo.MongoClient ( org.springframework.boot.autoconfigure.mongo.MongoClientOptions , java.lang.Integer ) ; } return org.springframework.boot.autoconfigure.mongo.MongoClient ( org.springframework.boot.autoconfigure.mongo.MongoClientOptions ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Integer java.lang.Integer ( ) { if ( this . org.springframework.boot.autoconfigure.mongo.Environment != null ) { java.lang.String java.lang.String = this . org.springframework.boot.autoconfigure.mongo.Environment . getProperty ( STRING ) ; if ( java.lang.String != null ) { return java.lang.Integer . java.lang.Integer ( java.lang.String ) ; } } return null ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.mongo.MongoClient org.springframework.boot.autoconfigure.mongo.MongoClient ( MongoClientOptions org.springframework.boot.autoconfigure.mongo.MongoClientOptions , int int ) { if ( org.springframework.boot.autoconfigure.mongo.MongoClientOptions == null ) { org.springframework.boot.autoconfigure.mongo.MongoClientOptions = MongoClientOptions . builder ( ) . build ( ) ; } java.lang.String java.lang.String = this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getHost ( ) == null ? STRING : this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getHost ( ) ; return new MongoClient ( java.util.Collections . java.util.List ( new ServerAddress ( java.lang.String , int ) ) , java.util.Collections . java.util.List<java.lang.Object> ( ) , org.springframework.boot.autoconfigure.mongo.MongoClientOptions ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.mongo.MongoClient org.springframework.boot.autoconfigure.mongo.MongoClient ( MongoClientOptions org.springframework.boot.autoconfigure.mongo.MongoClientOptions ) { if ( boolean ( ) || boolean ( ) ) { if ( this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getUri ( ) != null ) { throw new java.lang.IllegalStateException ( STRING + STRING ) ; } if ( org.springframework.boot.autoconfigure.mongo.MongoClientOptions == null ) { org.springframework.boot.autoconfigure.mongo.MongoClientOptions = MongoClientOptions . builder ( ) . build ( ) ; } java.util.List<org.springframework.boot.autoconfigure.mongo.MongoCredential> < MongoCredential > java.util.List<org.springframework.boot.autoconfigure.mongo.MongoCredential> = new java.util.ArrayList<org.springframework.boot.autoconfigure.mongo.MongoCredential> <> ( ) ; if ( boolean ( ) ) { java.lang.String java.lang.String = this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getAuthenticationDatabase ( ) == null ? this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getMongoClientDatabase ( ) : this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getAuthenticationDatabase ( ) ; java.util.List<org.springframework.boot.autoconfigure.mongo.MongoCredential> . add ( MongoCredential . createCredential ( this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getUsername ( ) , java.lang.String , this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getPassword ( ) ) ) ; } java.lang.String java.lang.String = this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getHost ( ) == null ? STRING : this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getHost ( ) ; int int = this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getPort ( ) != null ? this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getPort ( ) : MongoProperties . DEFAULT_PORT ; return new MongoClient ( java.util.Collections . java.util.List ( new ServerAddress ( java.lang.String , int ) ) , java.util.List<org.springframework.boot.autoconfigure.mongo.MongoCredential> , org.springframework.boot.autoconfigure.mongo.MongoClientOptions ) ; } return new MongoClient ( new MongoClientURI ( this . org.springframework.boot.autoconfigure.mongo.MongoProperties . determineUri ( ) , org.springframework.boot.autoconfigure.mongo.Builder ( org.springframework.boot.autoconfigure.mongo.MongoClientOptions ) ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getHost ( ) != null || this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getPort ( ) != null ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getUsername ( ) != null && this . org.springframework.boot.autoconfigure.mongo.MongoProperties . getPassword ( ) != null ; }  <METHOD_END>
<METHOD_START> private org.springframework.boot.autoconfigure.mongo.Builder org.springframework.boot.autoconfigure.mongo.Builder ( MongoClientOptions org.springframework.boot.autoconfigure.mongo.MongoClientOptions ) { if ( org.springframework.boot.autoconfigure.mongo.MongoClientOptions != null ) { return MongoClientOptions . builder ( org.springframework.boot.autoconfigure.mongo.MongoClientOptions ) ; } return MongoClientOptions . builder ( ) ; }  <METHOD_END>
