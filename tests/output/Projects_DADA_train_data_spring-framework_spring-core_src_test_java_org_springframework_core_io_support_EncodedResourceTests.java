<METHOD_START> @ Test public void void ( ) { assertFalse ( new EncodedResource ( org.springframework.core.io.support.Resource ) . boolean ( null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { EncodedResource org.springframework.core.io.support.EncodedResource = new EncodedResource ( org.springframework.core.io.support.Resource , java.lang.String ) ; EncodedResource org.springframework.core.io.support.EncodedResource = new EncodedResource ( org.springframework.core.io.support.Resource , java.lang.String ) ; assertEquals ( org.springframework.core.io.support.EncodedResource , org.springframework.core.io.support.EncodedResource ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { EncodedResource org.springframework.core.io.support.EncodedResource = new EncodedResource ( org.springframework.core.io.support.Resource , java.lang.String ) ; EncodedResource org.springframework.core.io.support.EncodedResource = new EncodedResource ( org.springframework.core.io.support.Resource , java.lang.String ) ; assertNotEquals ( org.springframework.core.io.support.EncodedResource , org.springframework.core.io.support.EncodedResource ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { EncodedResource org.springframework.core.io.support.EncodedResource = new EncodedResource ( org.springframework.core.io.support.Resource , java.nio.charset.Charset ) ; EncodedResource org.springframework.core.io.support.EncodedResource = new EncodedResource ( org.springframework.core.io.support.Resource , java.nio.charset.Charset ) ; assertEquals ( org.springframework.core.io.support.EncodedResource , org.springframework.core.io.support.EncodedResource ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { EncodedResource org.springframework.core.io.support.EncodedResource = new EncodedResource ( org.springframework.core.io.support.Resource , java.nio.charset.Charset ) ; EncodedResource org.springframework.core.io.support.EncodedResource = new EncodedResource ( org.springframework.core.io.support.Resource , java.nio.charset.Charset ) ; assertNotEquals ( org.springframework.core.io.support.EncodedResource , org.springframework.core.io.support.EncodedResource ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { EncodedResource org.springframework.core.io.support.EncodedResource = new EncodedResource ( org.springframework.core.io.support.Resource , java.lang.String ) ; EncodedResource org.springframework.core.io.support.EncodedResource = new EncodedResource ( org.springframework.core.io.support.Resource , java.nio.charset.Charset ) ; assertNotEquals ( org.springframework.core.io.support.EncodedResource , org.springframework.core.io.support.EncodedResource ) ; }  <METHOD_END>
