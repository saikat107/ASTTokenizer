<METHOD_START> @ Test public void void ( ) { ManagedSet org.springframework.beans.factory.support.ManagedSet = new ManagedSet ( ) ; org.springframework.beans.factory.support.ManagedSet . add ( STRING ) ; org.springframework.beans.factory.support.ManagedSet . add ( STRING ) ; ManagedSet org.springframework.beans.factory.support.ManagedSet = new ManagedSet ( ) ; org.springframework.beans.factory.support.ManagedSet . add ( STRING ) ; org.springframework.beans.factory.support.ManagedSet . setMergeEnabled ( true ) ; java.util.Set java.util.Set = org.springframework.beans.factory.support.ManagedSet . merge ( org.springframework.beans.factory.support.ManagedSet ) ; assertEquals ( STRING , NUMBER , java.util.Set . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ManagedSet org.springframework.beans.factory.support.ManagedSet = new ManagedSet ( ) ; org.springframework.beans.factory.support.ManagedSet . add ( STRING ) ; org.springframework.beans.factory.support.ManagedSet . setMergeEnabled ( true ) ; assertSame ( org.springframework.beans.factory.support.ManagedSet , org.springframework.beans.factory.support.ManagedSet . merge ( null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) { new ManagedSet ( ) . merge ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) { ManagedSet org.springframework.beans.factory.support.ManagedSet = new ManagedSet ( ) ; org.springframework.beans.factory.support.ManagedSet . add ( STRING ) ; org.springframework.beans.factory.support.ManagedSet . setMergeEnabled ( true ) ; org.springframework.beans.factory.support.ManagedSet . merge ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ManagedSet org.springframework.beans.factory.support.ManagedSet = new ManagedSet ( ) ; org.springframework.beans.factory.support.ManagedSet . add ( STRING ) ; org.springframework.beans.factory.support.ManagedSet . add ( STRING ) ; ManagedSet org.springframework.beans.factory.support.ManagedSet = new ManagedSet ( ) ; org.springframework.beans.factory.support.ManagedSet . setMergeEnabled ( true ) ; java.util.Set java.util.Set = org.springframework.beans.factory.support.ManagedSet . merge ( org.springframework.beans.factory.support.ManagedSet ) ; assertEquals ( STRING , NUMBER , java.util.Set . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ManagedSet org.springframework.beans.factory.support.ManagedSet = new ManagedSet ( ) ; org.springframework.beans.factory.support.ManagedSet . add ( STRING ) ; org.springframework.beans.factory.support.ManagedSet . add ( STRING ) ; ManagedSet org.springframework.beans.factory.support.ManagedSet = new ManagedSet ( ) ; org.springframework.beans.factory.support.ManagedSet . add ( STRING ) ; org.springframework.beans.factory.support.ManagedSet . setMergeEnabled ( true ) ; java.util.Set java.util.Set = org.springframework.beans.factory.support.ManagedSet . merge ( org.springframework.beans.factory.support.ManagedSet ) ; assertEquals ( STRING , NUMBER , java.util.Set . int ( ) ) ; }  <METHOD_END>
