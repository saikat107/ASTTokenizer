<METHOD_START> @ Before public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> <> ( ) ; org.springframework.core.env.PropertySource<?> = new SystemEnvironmentPropertySource ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( false ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( ( java.lang.Object ) STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( ( java.lang.Object ) STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( ( java.lang.Object ) STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( ( java.lang.Object ) STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( ( java.lang.Object ) STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( ( java.lang.Object ) STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test @ java.lang.SuppressWarnings ( STRING ) public void void ( ) java.lang.Exception { java.util.Map<java.lang.String,java.lang.Object> = new java.util.HashMap<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > ( ) { @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { throw new java.lang.UnsupportedOperationException ( ) ; } @ java.lang.Override public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return new java.util.HashSet<java.lang.String> <> ( super. java.util.Set<java.lang.String> ( ) ) ; } } ; java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING , STRING ) ; org.springframework.core.env.PropertySource<?> = new SystemEnvironmentPropertySource ( STRING , java.util.Map<java.lang.String,java.lang.Object> ) { @ java.lang.Override protected boolean boolean ( ) { return true ; } } ; assertThat ( org.springframework.core.env.PropertySource<> . containsProperty ( STRING ) , equalTo ( true ) ) ; assertThat ( org.springframework.core.env.PropertySource<> . getProperty ( STRING ) , equalTo ( ( java.lang.Object ) STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { throw new java.lang.UnsupportedOperationException ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return new java.util.HashSet<java.lang.String> <> ( super. java.util.Set<java.lang.String> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
