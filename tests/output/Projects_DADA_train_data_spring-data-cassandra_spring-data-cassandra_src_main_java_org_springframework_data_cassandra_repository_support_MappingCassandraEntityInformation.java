<METHOD_START> public void ( CassandraPersistentEntity < T > org.springframework.data.cassandra.repository.support.CassandraPersistentEntity<T> , CassandraConverter org.springframework.data.cassandra.repository.support.CassandraConverter ) { super( org.springframework.data.cassandra.repository.support.CassandraPersistentEntity<T> . getType ( ) ); this . org.springframework.data.cassandra.repository.support.CassandraPersistentEntity<T> = org.springframework.data.cassandra.repository.support.CassandraPersistentEntity<T> ; this . org.springframework.data.cassandra.repository.support.CassandraConverter = org.springframework.data.cassandra.repository.support.CassandraConverter ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public java.util.Optional<ID> < ID > java.util.Optional<ID> ( T T ) { Assert . notNull ( T , STRING ) ; java.util.Optional<org.springframework.data.cassandra.repository.support.CassandraPersistentProperty> < CassandraPersistentProperty > java.util.Optional<org.springframework.data.cassandra.repository.support.CassandraPersistentProperty> = org.springframework.data.cassandra.repository.support.CassandraPersistentEntity<T> . getIdProperty ( ) ; return java.util.Optional<org.springframework.data.cassandra.repository.support.CassandraPersistentProperty> . map ( p -> entityMetadata . getIdentifierAccessor ( entity ) . getIdentifier ( ) ) . orElseGet ( ( ) Optional . ofNullable ( converter . getId ( entity , entityMetadata ) ) ) . map ( o -> ( ID ) o ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public java.lang.Class<ID> < ID > java.lang.Class<ID> ( ) { return org.springframework.data.cassandra.repository.support.CassandraPersistentEntity<T> . getIdProperty ( ) . map ( p -> ( Class < ID > ) p . getType ( ) ) . orElse ( ( java.lang.Class<ID> < ID > ) MapId .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.cassandra.repository.support.CqlIdentifier org.springframework.data.cassandra.repository.support.CqlIdentifier ( ) { return org.springframework.data.cassandra.repository.support.CassandraPersistentEntity<T> . getTableName ( ) ; }  <METHOD_END>
