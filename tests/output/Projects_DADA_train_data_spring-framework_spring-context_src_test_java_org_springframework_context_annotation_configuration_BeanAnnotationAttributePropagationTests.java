<METHOD_START> @ Test public void void ( ) { @ Configuration class Config { @ Bean ( initMethod = STRING ) java.lang.Object java.lang.Object ( ) { return null ; } } assertEquals ( STRING , STRING , org.springframework.context.annotation.configuration.AbstractBeanDefinition ( Config .class ) . getInitMethodName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( initMethod = STRING ) java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { @ Configuration class Config { @ Bean ( destroyMethod = STRING ) java.lang.Object java.lang.Object ( ) { return null ; } } assertEquals ( STRING , STRING , org.springframework.context.annotation.configuration.AbstractBeanDefinition ( Config .class ) . getDestroyMethodName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( destroyMethod = STRING ) java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { @ Configuration class Config { @ Bean ( ) @ DependsOn ( { STRING , STRING } ) java.lang.Object java.lang.Object ( ) { return null ; } } assertArrayEquals ( STRING , new java.lang.String [] { STRING , STRING } , org.springframework.context.annotation.configuration.AbstractBeanDefinition ( Config .class ) . getDependsOn ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean ( ) @ DependsOn ( { STRING , STRING } ) java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { @ Configuration class Config { @ Primary @ Bean java.lang.Object java.lang.Object ( ) { return null ; } } assertTrue ( STRING , org.springframework.context.annotation.configuration.AbstractBeanDefinition ( Config .class ) . isPrimary ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Primary @ Bean java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { @ Configuration class Config { @ Bean java.lang.Object java.lang.Object ( ) { return null ; } } assertFalse ( STRING , org.springframework.context.annotation.configuration.AbstractBeanDefinition ( Config .class ) . isPrimary ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { @ Configuration class Config { @ Lazy @ Bean java.lang.Object java.lang.Object ( ) { return null ; } } assertTrue ( STRING , org.springframework.context.annotation.configuration.AbstractBeanDefinition ( Config .class ) . isLazyInit ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Lazy @ Bean java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { @ Configuration class Config { @ Bean java.lang.Object java.lang.Object ( ) { return null ; } } assertFalse ( STRING , org.springframework.context.annotation.configuration.AbstractBeanDefinition ( Config .class ) . isLazyInit ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { @ Lazy @ Configuration class Config { @ Bean java.lang.Object java.lang.Object ( ) { return null ; } } assertTrue ( STRING , org.springframework.context.annotation.configuration.AbstractBeanDefinition ( Config .class ) . isLazyInit ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { @ Lazy @ Configuration class Config { @ Lazy ( false ) @ Bean java.lang.Object java.lang.Object ( ) { return null ; } } assertFalse ( STRING , org.springframework.context.annotation.configuration.AbstractBeanDefinition ( Config .class ) . isLazyInit ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Lazy ( false ) @ Bean java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { @ Lazy ( false ) @ Configuration class Config { @ Bean java.lang.Object java.lang.Object ( ) { return null ; } } assertFalse ( STRING , org.springframework.context.annotation.configuration.AbstractBeanDefinition ( Config .class ) . isLazyInit ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean java.lang.Object java.lang.Object ( ) { return null ; }  <METHOD_END>
<METHOD_START> private org.springframework.context.annotation.configuration.AbstractBeanDefinition org.springframework.context.annotation.configuration.AbstractBeanDefinition ( java.lang.Class<?> < ? > java.lang.Class<?> ) { DefaultListableBeanFactory org.springframework.context.annotation.configuration.DefaultListableBeanFactory = new DefaultListableBeanFactory ( ) ; org.springframework.context.annotation.configuration.DefaultListableBeanFactory . registerBeanDefinition ( STRING , new RootBeanDefinition ( java.lang.Class<> ) ) ; ConfigurationClassPostProcessor org.springframework.context.annotation.configuration.ConfigurationClassPostProcessor = new ConfigurationClassPostProcessor ( ) ; org.springframework.context.annotation.configuration.ConfigurationClassPostProcessor . postProcessBeanFactory ( org.springframework.context.annotation.configuration.DefaultListableBeanFactory ) ; return ( AbstractBeanDefinition ) org.springframework.context.annotation.configuration.DefaultListableBeanFactory . getBeanDefinition ( STRING ) ; }  <METHOD_END>
