<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , java.lang.reflect.Type java.lang.reflect.Type , java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < ? extends HttpMessageConverter < ? > > java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> ) { return ( AbstractJackson2HttpMessageConverter .class . boolean ( java.lang.Class<> ) && org.springframework.web.servlet.mvc.method.annotation.MethodParameter . getParameterAnnotation ( JsonView .class ) != null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.servlet.mvc.method.annotation.HttpInputMessage org.springframework.web.servlet.mvc.method.annotation.HttpInputMessage ( HttpInputMessage org.springframework.web.servlet.mvc.method.annotation.HttpInputMessage , MethodParameter org.springframework.web.servlet.mvc.method.annotation.MethodParameter , java.lang.reflect.Type java.lang.reflect.Type , java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> < ? extends HttpMessageConverter < ? > > java.lang.Class<? extends org.springframework.web.servlet.mvc.method.annotation.HttpMessageConverter<?>> ) throws java.io.IOException { JsonView org.springframework.web.servlet.mvc.method.annotation.JsonView = org.springframework.web.servlet.mvc.method.annotation.MethodParameter . getParameterAnnotation ( JsonView .class ) ; java.lang.Class<?> < ? > [] java.lang.Class<?>[] = org.springframework.web.servlet.mvc.method.annotation.JsonView . value ( ) ; if ( java.lang.Class<?>[] . int != NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING + org.springframework.web.servlet.mvc.method.annotation.MethodParameter ) ; } return new MappingJacksonInputMessage ( org.springframework.web.servlet.mvc.method.annotation.HttpInputMessage . getBody ( ) , org.springframework.web.servlet.mvc.method.annotation.HttpInputMessage . getHeaders ( ) , java.lang.Class<?>[] [ NUMBER ] ) ; }  <METHOD_END>
