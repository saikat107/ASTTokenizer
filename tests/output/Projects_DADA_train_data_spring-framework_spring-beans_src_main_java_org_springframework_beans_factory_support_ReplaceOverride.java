<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( java.lang.String ); Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.reflect.Method java.lang.reflect.Method ) { if ( ! java.lang.reflect.Method . java.lang.String ( ) . boolean ( getMethodName ( ) ) ) { return false ; } if ( ! isOverloaded ( ) ) { return true ; } if ( this . java.util.List<java.lang.String> . int ( ) != java.lang.reflect.Method . int ( ) ) { return false ; } for ( int int = NUMBER ; int < this . java.util.List<java.lang.String> . int ( ) ; int ++ ) { java.lang.String java.lang.String = this . java.util.List<java.lang.String> . java.lang.String ( int ) ; if ( ! java.lang.reflect.Method . java.lang.Class<?>[] ( ) [ int ] . java.lang.String ( ) . boolean ( java.lang.String ) ) { return false ; } } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( ! ( java.lang.Object instanceof org.springframework.beans.factory.support.ReplaceOverride ) || ! super. boolean ( java.lang.Object ) ) { return false ; } org.springframework.beans.factory.support.ReplaceOverride org.springframework.beans.factory.support.ReplaceOverride = ( org.springframework.beans.factory.support.ReplaceOverride ) java.lang.Object ; return ( ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.beans.factory.support.ReplaceOverride . java.lang.String ) && ObjectUtils . nullSafeEquals ( this . java.util.List<java.lang.String> , org.springframework.beans.factory.support.ReplaceOverride . java.util.List<java.lang.String> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = super. int ( ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( this . java.lang.String ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( this . java.util.List<java.lang.String> ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + getMethodName ( ) + STRING ; }  <METHOD_END>
