<METHOD_START> @ Test public void void ( ) { assertThat ( AnnotationAwareOrderComparator . INSTANCE , is ( instanceOf ( AnnotationAwareOrderComparator .class ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> <> ( ) ; java.util.List<java.lang.Object> . boolean ( new org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B ( ) ) ; java.util.List<java.lang.Object> . boolean ( new org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.A ( ) ) ; AnnotationAwareOrderComparator . sort ( java.util.List<java.lang.Object> ) ; assertTrue ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) instanceof org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.A ) ; assertTrue ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) instanceof org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> <> ( ) ; java.util.List<java.lang.Object> . boolean ( new org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B2 ( ) ) ; java.util.List<java.lang.Object> . boolean ( new org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.A2 ( ) ) ; AnnotationAwareOrderComparator . sort ( java.util.List<java.lang.Object> ) ; assertTrue ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) instanceof org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.A2 ) ; assertTrue ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) instanceof org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B2 ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> <> ( ) ; java.util.List<java.lang.Object> . boolean ( new org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B ( ) ) ; java.util.List<java.lang.Object> . boolean ( new org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.A2 ( ) ) ; AnnotationAwareOrderComparator . sort ( java.util.List<java.lang.Object> ) ; assertTrue ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) instanceof org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.A2 ) ; assertTrue ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) instanceof org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> <> ( ) ; java.util.List<java.lang.Object> . boolean ( new org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B ( ) ) ; java.util.List<java.lang.Object> . boolean ( new org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.C ( ) ) ; AnnotationAwareOrderComparator . sort ( java.util.List<java.lang.Object> ) ; assertTrue ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) instanceof org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.C ) ; assertTrue ( java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) instanceof org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> <> ( ) ; java.util.List<java.lang.Object> . boolean ( org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B .class ) ; java.util.List<java.lang.Object> . boolean ( org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.A .class ) ; AnnotationAwareOrderComparator . sort ( java.util.List<java.lang.Object> ) ; assertEquals ( org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.A .class , java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) ; assertEquals ( org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B .class , java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> <> ( ) ; java.util.List<java.lang.Object> . boolean ( org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B .class ) ; java.util.List<java.lang.Object> . boolean ( org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.C .class ) ; AnnotationAwareOrderComparator . sort ( java.util.List<java.lang.Object> ) ; assertEquals ( org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.C .class , java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) ; assertEquals ( org.springframework.core.annotation.AnnotationAwareOrderComparatorTests.B .class , java.util.List<java.lang.Object> . java.lang.Object ( NUMBER ) ) ; }  <METHOD_END>
