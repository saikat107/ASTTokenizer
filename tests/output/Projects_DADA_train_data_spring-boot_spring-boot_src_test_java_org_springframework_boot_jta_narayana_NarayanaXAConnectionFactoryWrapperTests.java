<METHOD_START> @ Test public void void ( ) { ConnectionFactory org.springframework.boot.jta.narayana.ConnectionFactory = this . org.springframework.boot.jta.narayana.NarayanaXAConnectionFactoryWrapper . wrapConnectionFactory ( this . org.springframework.boot.jta.narayana.XAConnectionFactory ) ; assertThat ( org.springframework.boot.jta.narayana.ConnectionFactory ) . isInstanceOf ( ConnectionFactoryProxy .class ) ; verify ( this . org.springframework.boot.jta.narayana.NarayanaRecoveryManagerBean , times ( NUMBER ) ) . registerXAResourceRecoveryHelper ( any ( JmsXAResourceRecoveryHelper .class ) ) ; verify ( this . org.springframework.boot.jta.narayana.NarayanaProperties , times ( NUMBER ) ) . getRecoveryJmsUser ( ) ; verify ( this . org.springframework.boot.jta.narayana.NarayanaProperties , times ( NUMBER ) ) . getRecoveryJmsPass ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { given ( this . org.springframework.boot.jta.narayana.NarayanaProperties . getRecoveryJmsUser ( ) ) . willReturn ( STRING ) ; given ( this . org.springframework.boot.jta.narayana.NarayanaProperties . getRecoveryJmsPass ( ) ) . willReturn ( STRING ) ; ConnectionFactory org.springframework.boot.jta.narayana.ConnectionFactory = this . org.springframework.boot.jta.narayana.NarayanaXAConnectionFactoryWrapper . wrapConnectionFactory ( this . org.springframework.boot.jta.narayana.XAConnectionFactory ) ; assertThat ( org.springframework.boot.jta.narayana.ConnectionFactory ) . isInstanceOf ( ConnectionFactoryProxy .class ) ; verify ( this . org.springframework.boot.jta.narayana.NarayanaRecoveryManagerBean , times ( NUMBER ) ) . registerXAResourceRecoveryHelper ( any ( JmsXAResourceRecoveryHelper .class ) ) ; verify ( this . org.springframework.boot.jta.narayana.NarayanaProperties , times ( NUMBER ) ) . getRecoveryJmsUser ( ) ; verify ( this . org.springframework.boot.jta.narayana.NarayanaProperties , times ( NUMBER ) ) . getRecoveryJmsPass ( ) ; }  <METHOD_END>
