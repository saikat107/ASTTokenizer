<METHOD_START> public void ( ) { this( java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> , java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> ); }  <METHOD_END>
<METHOD_START> public void ( Fields org.springframework.data.mongodb.core.aggregation.Fields ) { this( java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> , org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder . org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection . java.util.List<? extends org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> ( org.springframework.data.mongodb.core.aggregation.Fields ) ); }  <METHOD_END>
<METHOD_START> private void ( java.util.List<? extends org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> < ? extends org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection > java.util.List<? extends org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> , java.util.List<? extends org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> < ? extends org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection > java.util.List<? extends org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> ) { Assert . notNull ( java.util.List<> , STRING ) ; Assert . notNull ( java.util.List<> , STRING ) ; this . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> = new java.util.ArrayList<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> < org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection > ( java.util.List<> . int ( ) + java.util.List<> . int ( ) ) ; this . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> . boolean ( java.util.List<> ) ; this . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> . boolean ( java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection ) { return new org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( this . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> , java.util.Arrays . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection ) ) ; }  <METHOD_END>
<METHOD_START> private org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection ) { java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> < org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection > java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> = this . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> . boolean ( ) ? java.util.Collections .< org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection > java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> ( ) : this . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> ( NUMBER , this . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> . int ( ) - NUMBER ) ; return new org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> , java.util.Arrays . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { return new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String , this , null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjectionOperationBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjectionOperationBuilder ( java.lang.String , this , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , this , null ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( java.lang.String ... java.lang.String[] ) { for ( java.lang.String java.lang.String : java.lang.String[] ) { Assert . isTrue ( Fields . UNDERSCORE_ID . equals ( java.lang.String ) , java.lang.String . java.lang.String ( java.lang.String , java.lang.String , Fields . UNDERSCORE_ID ) ) ; } java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> < org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection > java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> = org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> ( Fields . fields ( java.lang.String[] ) , false ) ; return new org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( this . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> , java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( java.lang.String ... java.lang.String[] ) { java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> < org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection > java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> = org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> ( Fields . fields ( java.lang.String[] ) , true ) ; return new org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( this . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> , java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( Fields org.springframework.data.mongodb.core.aggregation.Fields ) { return new org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( this . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> , org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection . java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> ( org.springframework.data.mongodb.core.aggregation.Fields , true ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields ( ) { ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields = null ; for ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection : java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> ) { ExposedField org.springframework.data.mongodb.core.aggregation.ExposedField = org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection . org.springframework.data.mongodb.core.aggregation.ExposedField ( ) ; org.springframework.data.mongodb.core.aggregation.ExposedFields = org.springframework.data.mongodb.core.aggregation.ExposedFields == null ? ExposedFields . from ( org.springframework.data.mongodb.core.aggregation.ExposedField ) : org.springframework.data.mongodb.core.aggregation.ExposedFields . and ( org.springframework.data.mongodb.core.aggregation.ExposedField ) ; } return org.springframework.data.mongodb.core.aggregation.ExposedFields ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; for ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection : java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> ) { org.springframework.data.mongodb.core.aggregation.Document . putAll ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection . org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } return new Document ( STRING , org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Object java.lang.Object , org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ) { Assert . notNull ( java.lang.Object , STRING ) ; Assert . notNull ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation , STRING ) ; this . java.lang.Object = java.lang.Object ; this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation = org.springframework.data.mongodb.core.aggregation.ProjectionOperation ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; }  <METHOD_END>
<METHOD_START> public abstract org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> public abstract org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( Cond org.springframework.data.mongodb.core.aggregation.Cond );  <METHOD_END>
<METHOD_START> public abstract org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( IfNull org.springframework.data.mongodb.core.aggregation.IfNull );  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation , java.lang.Object [] java.lang.Object[] ) { super( java.lang.String , org.springframework.data.mongodb.core.aggregation.ProjectionOperation , null ); this . java.lang.String = java.lang.String ; this . java.lang.Object[] = java.lang.Object[] . java.lang.Object ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String , final java.lang.Object ... java.lang.Object[] ) { org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection = new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ( Fields . field ( java.lang.Object . java.lang.String ( ) ) , java.lang.String , java.lang.Object[] ) { @ java.lang.Override protected java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.lang.Object[] . int + NUMBER ) ; java.util.List<java.lang.Object> . boolean ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjectionOperationBuilder.ExpressionProjection . java.lang.Object ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext , org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjectionOperationBuilder .this . java.lang.String , org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjectionOperationBuilder .this . java.lang.Object[] ) ) ; java.util.List<java.lang.Object> . boolean ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ; return java.util.List<java.lang.Object> ; } } ; return new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Object , this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ) , org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.lang.Object[] . int + NUMBER ) ; java.util.List<java.lang.Object> . boolean ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjectionOperationBuilder.ExpressionProjection . java.lang.Object ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext , org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjectionOperationBuilder .this . java.lang.String , org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjectionOperationBuilder .this . java.lang.Object[] ) ) ; java.util.List<java.lang.Object> . boolean ( java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ; return java.util.List<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( java.lang.String java.lang.String ) { Field org.springframework.data.mongodb.core.aggregation.Field = Fields . field ( java.lang.String , java.lang.String ) ; return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjectionOperationBuilder.ExpressionProjection ( org.springframework.data.mongodb.core.aggregation.Field , this . java.lang.Object . java.lang.String ( ) , java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> public void ( Field org.springframework.data.mongodb.core.aggregation.Field , java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] ) { super( org.springframework.data.mongodb.core.aggregation.Field ); Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.Object[] , STRING ) ; this . java.lang.String = java.lang.String ; this . java.lang.Object[] = java.lang.Object[] . java.lang.Object ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return new Document ( org.springframework.data.mongodb.core.aggregation.ExposedField ( ) . getName ( ) , java.lang.Object ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext , java.lang.String , java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> protected static java.lang.Object java.lang.Object ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext , java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] ) { return org.springframework.data.mongodb.core.aggregation.SpelExpressionTransformer . transform ( java.lang.String , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation , org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ) { super( java.lang.String , org.springframework.data.mongodb.core.aggregation.ProjectionOperation ); this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection = org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.Object java.lang.Object , org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation , org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ) { super( java.lang.Object , org.springframework.data.mongodb.core.aggregation.ProjectionOperation ); this . java.lang.String = null ; this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection = org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( Fields . UNDERSCORE_ID ) . and ( new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.PreviousOperationProjection ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( Fields org.springframework.data.mongodb.core.aggregation.Fields ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.NestedFieldProjection ( java.lang.String , org.springframework.data.mongodb.core.aggregation.Fields ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( java.lang.String java.lang.String ) { if ( this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection != null ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection . org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ( java.lang.String ) ) ; } if ( java.lang.Object instanceof AggregationExpression ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjection ( Fields . field ( java.lang.String ) , ( AggregationExpression ) java.lang.Object ) ) ; } return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection ( Fields . field ( java.lang.String , java.lang.String ) , null ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( Cond org.springframework.data.mongodb.core.aggregation.Cond ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Cond , STRING ) ; return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjection ( Fields . field ( java.lang.String ) , org.springframework.data.mongodb.core.aggregation.Cond ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ProjectionOperation org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( IfNull org.springframework.data.mongodb.core.aggregation.IfNull ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.IfNull , STRING ) ; return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ExpressionProjection ( Fields . field ( java.lang.String ) , org.springframework.data.mongodb.core.aggregation.IfNull ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , java.lang.String ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , java.lang.String ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , java.lang.String ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , java.lang.String ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , java.lang.String ) ; Assert . isTrue ( java.lang.Math . int ( java.lang.Number . int ( ) ) != NUMBER , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , java.lang.String ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Number java.lang.Number ) { Assert . notNull ( java.lang.Number , java.lang.String ) ; Assert . isTrue ( java.lang.Math . int ( java.lang.Number . int ( ) ) != NUMBER , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , java.lang.String ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , Fields . field ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.AggregationExpression , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Object java.lang.Object ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( int int ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , int ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( int int , int int ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , int , int ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String , AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArrayOperators . Filter . filter ( java.lang.String ) . as ( java.lang.String ) . by ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , Fields . fields ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , Fields . fields ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String ... java.lang.String[] ) { Assert . notEmpty ( java.lang.String[] , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , Fields . fields ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , Fields . fields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , Fields . fields ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Abs . absoluteValueOf ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Ceil . ceilValueOf ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Exp . expValueOf ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Floor . floorValueOf ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Ln . lnValueOf ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Log . valueOf ( java.lang.String ) . log ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Number java.lang.Number ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Log . valueOf ( java.lang.String ) . log ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Log . valueOf ( java.lang.String ) . log ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Log10 . log10ValueOf ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Pow . valueOf ( java.lang.String ) . pow ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Number java.lang.Number ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Pow . valueOf ( java.lang.String ) . pow ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Pow . valueOf ( java.lang.String ) . pow ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Sqrt . sqrtOf ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArithmeticOperators . Trunc . truncValueOf ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Object ... java.lang.Object[] ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( int int ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( int , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( int int , int int ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , int , int ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( StringOperators . ToLower . lowerValueOf ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( StringOperators . ToUpper . upperValueOf ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( int int ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , int ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String ... java.lang.String[] ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING , Fields . fields ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( ArrayOperators . IsArray . isArray ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( LiteralOperators . Literal . asLiteral ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( DateOperators . DateToString . dateOf ( java.lang.String ) . toString ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression , java.lang.String java.lang.String , AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( VariableOperators . Let . define ( ExpressionVariable . newVariable ( java.lang.String ) . forExpression ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) . andApply ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.util.Collection<org.springframework.data.mongodb.core.aggregation.ExpressionVariable> < ExpressionVariable > java.util.Collection<org.springframework.data.mongodb.core.aggregation.ExpressionVariable> , AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( VariableOperators . Let . define ( java.util.Collection<org.springframework.data.mongodb.core.aggregation.ExpressionVariable> ) . andApply ( org.springframework.data.mongodb.core.aggregation.AggregationExpression ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.Document ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection = new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ( Fields . field ( java.lang.Object . java.lang.String ( ) ) , java.lang.String , java.lang.Object[] ) ; return new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( java.lang.Object , this . org.springframework.data.mongodb.core.aggregation.ProjectionOperation . org.springframework.data.mongodb.core.aggregation.ProjectionOperation ( org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ) , org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( Fields . field ( java.lang.String ) ); this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return new Document ( java.lang.String , Fields . UNDERSCORE_ID_REF ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { this( Fields . field ( java.lang.String ) , java.lang.Object ); }  <METHOD_END>
<METHOD_START> private void ( Field org.springframework.data.mongodb.core.aggregation.Field , java.lang.Object java.lang.Object ) { super( new ExposedField ( org.springframework.data.mongodb.core.aggregation.Field . getName ( ) , true ) ); this . org.springframework.data.mongodb.core.aggregation.Field = org.springframework.data.mongodb.core.aggregation.Field ; this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> public static java.util.List<? extends org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> < ? extends org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection > java.util.List<? extends org.springframework.data.mongodb.core.aggregation.ProjectionOperation.Projection> ( Fields org.springframework.data.mongodb.core.aggregation.Fields ) { return java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> ( org.springframework.data.mongodb.core.aggregation.Fields , null ) ; }  <METHOD_END>
<METHOD_START> public static java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> < org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection > java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> ( Fields org.springframework.data.mongodb.core.aggregation.Fields , java.lang.Object java.lang.Object ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Fields , STRING ) ; java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> < org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection > java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> = new java.util.ArrayList<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> < org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection > ( ) ; for ( Field org.springframework.data.mongodb.core.aggregation.Field : org.springframework.data.mongodb.core.aggregation.Fields ) { java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> . boolean ( new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection ( org.springframework.data.mongodb.core.aggregation.Field , java.lang.Object ) ) ; } return java.util.List<org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.FieldProjection> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return new Document ( org.springframework.data.mongodb.core.aggregation.Field . getName ( ) , java.lang.Object ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.Object java.lang.Object ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { if ( java.lang.Object == null || java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.Object ) ) { if ( Aggregation . SystemVariable . isReferingToSystemVariable ( org.springframework.data.mongodb.core.aggregation.Field . getTarget ( ) ) ) { return org.springframework.data.mongodb.core.aggregation.Field . getTarget ( ) ; } return org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( org.springframework.data.mongodb.core.aggregation.Field ) . getReferenceValue ( ) ; } else if ( java.lang.Boolean . java.lang.Boolean . boolean ( java.lang.Object ) ) { return NUMBER ; } return java.lang.Object ; }  <METHOD_END>
<METHOD_START> public void ( Field org.springframework.data.mongodb.core.aggregation.Field , java.lang.String java.lang.String , java.lang.Object [] java.lang.Object[] ) { super( org.springframework.data.mongodb.core.aggregation.Field ); Assert . hasText ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.Object[] , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.Field = org.springframework.data.mongodb.core.aggregation.Field ; this . java.lang.String = java.lang.String ; this . java.util.List<java.lang.Object> = java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( STRING + java.lang.String , java.util.List<java.lang.Object> ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; return new Document ( org.springframework.data.mongodb.core.aggregation.Field ( ) . getName ( ) , org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
<METHOD_START> protected java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( java.util.List<java.lang.Object> . int ( ) ) ; java.util.List<java.lang.Object> . boolean ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( org.springframework.data.mongodb.core.aggregation.Field ( ) . getName ( ) ) . toString ( ) ) ; for ( java.lang.Object java.lang.Object : java.util.List<java.lang.Object> ) { if ( java.lang.Object instanceof Field ) { java.util.List<java.lang.Object> . boolean ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( ( Field ) java.lang.Object ) . toString ( ) ) ; } else if ( java.lang.Object instanceof Fields ) { for ( Field org.springframework.data.mongodb.core.aggregation.Field : ( Fields ) java.lang.Object ) { java.util.List<java.lang.Object> . boolean ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( org.springframework.data.mongodb.core.aggregation.Field ) . toString ( ) ) ; } } else if ( java.lang.Object instanceof AggregationExpression ) { java.util.List<java.lang.Object> . boolean ( ( ( AggregationExpression ) java.lang.Object ) . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; } else { java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; } } return java.util.List<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.mongodb.core.aggregation.Field org.springframework.data.mongodb.core.aggregation.Field ( ) { return org.springframework.data.mongodb.core.aggregation.Field ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.ExposedField org.springframework.data.mongodb.core.aggregation.ExposedField ( ) { if ( ! org.springframework.data.mongodb.core.aggregation.Field ( ) . isAliased ( ) ) { return super. org.springframework.data.mongodb.core.aggregation.ExposedField ( ) ; } return new ExposedField ( new AggregationField ( org.springframework.data.mongodb.core.aggregation.Field ( ) . getName ( ) ) , true ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ( java.lang.String java.lang.String ) { final Field org.springframework.data.mongodb.core.aggregation.Field = Fields . field ( java.lang.String , this . org.springframework.data.mongodb.core.aggregation.Field . getName ( ) ) ; return new org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection ( org.springframework.data.mongodb.core.aggregation.Field , java.lang.String , java.util.List<java.lang.Object> . java.lang.Object[] ( ) ) { @ java.lang.Override protected org.springframework.data.mongodb.core.aggregation.Field org.springframework.data.mongodb.core.aggregation.Field ( ) { return org.springframework.data.mongodb.core.aggregation.Field ; } @ java.lang.Override protected java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection .this . java.util.List<java.lang.Object> ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.data.mongodb.core.aggregation.Field org.springframework.data.mongodb.core.aggregation.Field ( ) { return org.springframework.data.mongodb.core.aggregation.Field ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder.OperationProjection .this . java.util.List<java.lang.Object> ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , Fields org.springframework.data.mongodb.core.aggregation.Fields ) { super( Fields . field ( java.lang.String ) ); this . java.lang.String = java.lang.String ; this . org.springframework.data.mongodb.core.aggregation.Fields = org.springframework.data.mongodb.core.aggregation.Fields ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { Document org.springframework.data.mongodb.core.aggregation.Document = new Document ( ) ; for ( Field org.springframework.data.mongodb.core.aggregation.Field : org.springframework.data.mongodb.core.aggregation.Fields ) { org.springframework.data.mongodb.core.aggregation.Document . put ( org.springframework.data.mongodb.core.aggregation.Field . getName ( ) , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext . getReference ( org.springframework.data.mongodb.core.aggregation.Field . getTarget ( ) ) . toString ( ) ) ; } return new Document ( java.lang.String , org.springframework.data.mongodb.core.aggregation.Document ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( ) { return org.springframework.data.mongodb.core.aggregation.ProjectionOperation.ProjectionOperationBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> public void ( Field org.springframework.data.mongodb.core.aggregation.Field ) { Assert . notNull ( org.springframework.data.mongodb.core.aggregation.Field , STRING ) ; this . org.springframework.data.mongodb.core.aggregation.ExposedField = new ExposedField ( org.springframework.data.mongodb.core.aggregation.Field , true ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.mongodb.core.aggregation.ExposedField org.springframework.data.mongodb.core.aggregation.ExposedField ( ) { return org.springframework.data.mongodb.core.aggregation.ExposedField ; }  <METHOD_END>
<METHOD_START> public abstract org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext );  <METHOD_END>
<METHOD_START> public void ( Field org.springframework.data.mongodb.core.aggregation.Field , AggregationExpression org.springframework.data.mongodb.core.aggregation.AggregationExpression ) { super( org.springframework.data.mongodb.core.aggregation.Field ); this . org.springframework.data.mongodb.core.aggregation.Field = org.springframework.data.mongodb.core.aggregation.Field ; this . org.springframework.data.mongodb.core.aggregation.AggregationExpression = org.springframework.data.mongodb.core.aggregation.AggregationExpression ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { return new Document ( org.springframework.data.mongodb.core.aggregation.Field . getName ( ) , org.springframework.data.mongodb.core.aggregation.AggregationExpression . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; }  <METHOD_END>
