<METHOD_START> private void ( PersistentEntity < ? , ? extends PersistentProperty < ? > > org.springframework.data.rest.webmvc.json.PersistentEntity<?,? extends org.springframework.data.rest.webmvc.json.PersistentProperty<?>> , BeanDescription org.springframework.data.rest.webmvc.json.BeanDescription ) { Assert . notNull ( org.springframework.data.rest.webmvc.json.PersistentEntity<,> , STRING ) ; Assert . notNull ( org.springframework.data.rest.webmvc.json.BeanDescription , STRING ) ; this . java.util.Map<org.springframework.data.rest.webmvc.json.PersistentProperty<?>,org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> = new java.util.HashMap<org.springframework.data.rest.webmvc.json.PersistentProperty<?>,org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> < PersistentProperty < ? > , BeanPropertyDefinition > ( ) ; this . java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.PersistentProperty<?>> = new java.util.HashMap<java.lang.String,org.springframework.data.rest.webmvc.json.PersistentProperty<?>> < java.lang.String , PersistentProperty < ? > > ( ) ; this . java.util.Set<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> = new java.util.HashSet<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> < BeanPropertyDefinition > ( ) ; for ( BeanPropertyDefinition org.springframework.data.rest.webmvc.json.BeanPropertyDefinition : org.springframework.data.rest.webmvc.json.BeanDescription . findProperties ( ) ) { java.util.Optional<? extends org.springframework.data.rest.webmvc.json.PersistentProperty<?>> < ? extends PersistentProperty < ? > > java.util.Optional<? extends org.springframework.data.rest.webmvc.json.PersistentProperty<?>> = org.springframework.data.rest.webmvc.json.PersistentEntity<,> . getPersistentProperty ( org.springframework.data.rest.webmvc.json.BeanPropertyDefinition . getInternalName ( ) ) ; java.util.Optional<> . void ( it -> { java.util.Map<org.springframework.data.rest.webmvc.json.PersistentProperty<?>,org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> . put ( it , org.springframework.data.rest.webmvc.json.BeanPropertyDefinition ) ; java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.PersistentProperty<?>> . put ( org.springframework.data.rest.webmvc.json.BeanPropertyDefinition . getName ( ) , it ) ; } ) ; if ( ! java.util.Optional<> . boolean ( ) ) { java.util.Set<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> . add ( org.springframework.data.rest.webmvc.json.BeanPropertyDefinition ) ; } } }  <METHOD_END>
<METHOD_START> public static org.springframework.data.rest.webmvc.json.MappedProperties org.springframework.data.rest.webmvc.json.MappedProperties ( PersistentEntity < ? , ? > org.springframework.data.rest.webmvc.json.PersistentEntity<?,?> , ObjectMapper org.springframework.data.rest.webmvc.json.ObjectMapper ) { BeanDescription org.springframework.data.rest.webmvc.json.BeanDescription = org.springframework.data.rest.webmvc.json.ClassIntrospector . forDeserialization ( org.springframework.data.rest.webmvc.json.ObjectMapper . getDeserializationConfig ( ) , org.springframework.data.rest.webmvc.json.ObjectMapper . constructType ( org.springframework.data.rest.webmvc.json.PersistentEntity<,> . getType ( ) ) , org.springframework.data.rest.webmvc.json.ObjectMapper . getDeserializationConfig ( ) ) ; return new org.springframework.data.rest.webmvc.json.MappedProperties ( org.springframework.data.rest.webmvc.json.PersistentEntity<,> , org.springframework.data.rest.webmvc.json.BeanDescription ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.data.rest.webmvc.json.MappedProperties org.springframework.data.rest.webmvc.json.MappedProperties ( ) { return new org.springframework.data.rest.webmvc.json.MappedProperties ( java.util.Collections . java.util.Map<java.lang.Object,java.lang.Object> ( ) , java.util.Collections . java.util.Map<java.lang.Object,java.lang.Object> ( ) , java.util.Collections . java.util.Set<java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( PersistentProperty < ? > org.springframework.data.rest.webmvc.json.PersistentProperty<?> ) { Assert . notNull ( org.springframework.data.rest.webmvc.json.PersistentProperty<> , STRING ) ; return java.util.Map<org.springframework.data.rest.webmvc.json.PersistentProperty<?>,org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> . get ( org.springframework.data.rest.webmvc.json.PersistentProperty<> ) . getName ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.PersistentProperty<?>> . containsKey ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.rest.webmvc.json.PersistentProperty<?> < ? > org.springframework.data.rest.webmvc.json.PersistentProperty<?> ( java.lang.String java.lang.String ) { Assert . hasText ( java.lang.String , STRING ) ; return java.util.Map<java.lang.String,org.springframework.data.rest.webmvc.json.PersistentProperty<?>> . get ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Iterable<java.lang.String> < java.lang.String > java.lang.Iterable<java.lang.String> ( ) { if ( java.util.Set<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> . isEmpty ( ) ) { return java.util.Collections . java.util.Set<java.lang.String> ( ) ; } java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( java.util.Set<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> . size ( ) ) ; for ( BeanPropertyDefinition org.springframework.data.rest.webmvc.json.BeanPropertyDefinition : java.util.Set<org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> ) { java.util.List<java.lang.String> . boolean ( org.springframework.data.rest.webmvc.json.BeanPropertyDefinition . getInternalName ( ) ) ; } return java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( PersistentProperty < ? > org.springframework.data.rest.webmvc.json.PersistentProperty<?> ) { Assert . notNull ( org.springframework.data.rest.webmvc.json.PersistentProperty<> , STRING ) ; return java.util.Map<org.springframework.data.rest.webmvc.json.PersistentProperty<?>,org.springframework.data.rest.webmvc.json.BeanPropertyDefinition> . containsKey ( org.springframework.data.rest.webmvc.json.PersistentProperty<> ) ; }  <METHOD_END>
