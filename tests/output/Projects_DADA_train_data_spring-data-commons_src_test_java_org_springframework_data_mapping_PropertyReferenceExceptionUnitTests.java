<METHOD_START> @ Test public void void ( ) { org.springframework.data.mapping.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; org.springframework.data.mapping.ExpectedException . expectMessage ( STRING ) ; new PropertyReferenceException ( null , org.springframework.data.mapping.TypeInformation<org.springframework.data.mapping.PropertyReferenceExceptionUnitTests.Sample> , java.util.List<org.springframework.data.mapping.PropertyPath> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mapping.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; org.springframework.data.mapping.ExpectedException . expectMessage ( STRING ) ; new PropertyReferenceException ( STRING , null , java.util.List<org.springframework.data.mapping.PropertyPath> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { org.springframework.data.mapping.ExpectedException . expect ( java.lang.IllegalArgumentException .class ) ; org.springframework.data.mapping.ExpectedException . expectMessage ( STRING ) ; new PropertyReferenceException ( STRING , org.springframework.data.mapping.TypeInformation<org.springframework.data.mapping.PropertyReferenceExceptionUnitTests.Sample> , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { PropertyReferenceException org.springframework.data.mapping.PropertyReferenceException = new PropertyReferenceException ( STRING , org.springframework.data.mapping.TypeInformation<org.springframework.data.mapping.PropertyReferenceExceptionUnitTests.Sample> , java.util.List<org.springframework.data.mapping.PropertyPath> ) ; java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> = org.springframework.data.mapping.PropertyReferenceException . getPropertyMatches ( ) ; assertThat ( java.util.Collection<java.lang.String> ) . containsExactly ( STRING ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
