<METHOD_START> public void void ( MessageListener org.springframework.jms.listener.endpoint.MessageListener ) { this . org.springframework.jms.listener.endpoint.MessageListener = org.springframework.jms.listener.endpoint.MessageListener ; }  <METHOD_END>
<METHOD_START> protected org.springframework.jms.listener.endpoint.MessageListener org.springframework.jms.listener.endpoint.MessageListener ( ) { return this . org.springframework.jms.listener.endpoint.MessageListener ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.jms.listener.endpoint.AbstractMessageEndpoint org.springframework.jms.listener.endpoint.AbstractMessageEndpoint ( ) org.springframework.jms.listener.endpoint.UnavailableException { return new org.springframework.jms.listener.endpoint.JmsMessageEndpointFactory.JmsMessageEndpoint ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message org.springframework.jms.listener.endpoint.Message ) { boolean boolean = ! hasBeforeDeliveryBeenCalled ( ) ; if ( boolean ) { try { beforeDelivery ( null ) ; } catch ( ResourceException org.springframework.jms.listener.endpoint.ResourceException ) { throw new org.springframework.jms.listener.endpoint.JmsMessageEndpointFactory.JmsResourceException ( org.springframework.jms.listener.endpoint.ResourceException ) ; } } try { org.springframework.jms.listener.endpoint.MessageListener . onMessage ( org.springframework.jms.listener.endpoint.Message ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { onEndpointException ( java.lang.RuntimeException ) ; throw java.lang.RuntimeException ; } catch ( java.lang.Error java.lang.Error ) { onEndpointException ( java.lang.Error ) ; throw java.lang.Error ; } finally { if ( boolean ) { try { afterDelivery ( ) ; } catch ( ResourceException org.springframework.jms.listener.endpoint.ResourceException ) { throw new org.springframework.jms.listener.endpoint.JmsMessageEndpointFactory.JmsResourceException ( org.springframework.jms.listener.endpoint.ResourceException ) ; } } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.ClassLoader java.lang.ClassLoader ( ) { return org.springframework.jms.listener.endpoint.MessageListener . getClass ( ) . getClassLoader ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ResourceException org.springframework.jms.listener.endpoint.ResourceException ) { super( org.springframework.jms.listener.endpoint.ResourceException ); }  <METHOD_END>
