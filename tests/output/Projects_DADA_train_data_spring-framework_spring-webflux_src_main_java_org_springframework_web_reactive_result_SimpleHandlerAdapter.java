<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return WebHandler .class . boolean ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.web.reactive.result.Mono<org.springframework.web.reactive.result.HandlerResult> < HandlerResult > org.springframework.web.reactive.result.Mono<org.springframework.web.reactive.result.HandlerResult> ( ServerWebExchange org.springframework.web.reactive.result.ServerWebExchange , java.lang.Object java.lang.Object ) { WebHandler org.springframework.web.reactive.result.WebHandler = ( WebHandler ) java.lang.Object ; Mono < java.lang.Void > org.springframework.web.reactive.result.Mono<java.lang.Void> = org.springframework.web.reactive.result.WebHandler . handle ( org.springframework.web.reactive.result.ServerWebExchange ) ; return org.springframework.web.reactive.result.Mono<java.lang.Void> . then ( aVoid -> Mono . empty ( ) ) ; }  <METHOD_END>
