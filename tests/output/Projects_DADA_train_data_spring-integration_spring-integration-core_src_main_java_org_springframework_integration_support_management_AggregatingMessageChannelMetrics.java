<METHOD_START> public void ( ) { this( null , int ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int ) { super( java.lang.String ); this . int = int ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , ExponentialMovingAverage org.springframework.integration.support.management.ExponentialMovingAverage , ExponentialMovingAverageRate org.springframework.integration.support.management.ExponentialMovingAverageRate , ExponentialMovingAverageRatio org.springframework.integration.support.management.ExponentialMovingAverageRatio , ExponentialMovingAverageRate org.springframework.integration.support.management.ExponentialMovingAverageRate , int int ) { super( java.lang.String , org.springframework.integration.support.management.ExponentialMovingAverage , org.springframework.integration.support.management.ExponentialMovingAverageRate , org.springframework.integration.support.management.ExponentialMovingAverageRatio , org.springframework.integration.support.management.ExponentialMovingAverageRate ); this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public synchronized org.springframework.integration.support.management.MetricsContext org.springframework.integration.support.management.MetricsContext ( ) { long long = this . sendCount . getAndIncrement ( ) ; if ( isFullStatsEnabled ( ) && long % this . int == NUMBER ) { this . long = java.lang.System . long ( ) ; this . sendRate . increment ( this . long ) ; } return new org.springframework.integration.support.management.AggregatingMessageChannelMetrics.AggregatingChannelMetricsContext ( this . long , long + NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MetricsContext org.springframework.integration.support.management.MetricsContext , boolean boolean ) { org.springframework.integration.support.management.AggregatingMessageChannelMetrics.AggregatingChannelMetricsContext org.springframework.integration.support.management.AggregatingMessageChannelMetrics.AggregatingChannelMetricsContext = ( org.springframework.integration.support.management.AggregatingMessageChannelMetrics.AggregatingChannelMetricsContext ) org.springframework.integration.support.management.MetricsContext ; long long = org.springframework.integration.support.management.AggregatingMessageChannelMetrics.AggregatingChannelMetricsContext . long ; if ( boolean ) { if ( isFullStatsEnabled ( ) && long % this . int == NUMBER ) { long long = java.lang.System . long ( ) ; this . sendSuccessRatio . success ( long ) ; this . sendDuration . append ( long - org.springframework.integration.support.management.AggregatingMessageChannelMetrics.AggregatingChannelMetricsContext . start ) ; } } else { if ( isFullStatsEnabled ( ) && long % this . int == NUMBER ) { long long = java.lang.System . long ( ) ; this . sendSuccessRatio . failure ( long ) ; this . sendErrorRate . increment ( long ) ; } this . sendErrorCount . incrementAndGet ( ) ; } }  <METHOD_END>
<METHOD_START> public void ( long long , long long ) { super( long ); this . long = long ; }  <METHOD_END>
