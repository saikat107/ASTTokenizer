<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this( java.lang.Class<> , new EvoInflectorRelProvider ( ) ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> , RelProvider org.springframework.data.rest.core.mapping.RelProvider ) { Assert . notNull ( java.lang.Class<> , STRING ) ; Assert . notNull ( org.springframework.data.rest.core.mapping.RelProvider , STRING ) ; this . java.lang.Class<?> = java.lang.Class<> ; this . org.springframework.data.rest.core.mapping.RelProvider = org.springframework.data.rest.core.mapping.RelProvider ; this . org.springframework.data.rest.core.mapping.RestResource = AnnotationUtils . findAnnotation ( java.lang.Class<> , RestResource .class ) ; this . org.springframework.data.rest.core.mapping.Description = AnnotationUtils . findAnnotation ( java.lang.Class<> , Description .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.Path org.springframework.data.rest.core.mapping.Path ( ) { java.lang.String java.lang.String = org.springframework.data.rest.core.mapping.RestResource == null ? null : org.springframework.data.rest.core.mapping.RestResource . path ( ) . trim ( ) ; java.lang.String = StringUtils . hasText ( java.lang.String ) ? java.lang.String : java.lang.String ( java.lang.Class<> ) ; return new Path ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.springframework.data.rest.core.mapping.RestResource != null ? org.springframework.data.rest.core.mapping.RestResource . exported ( ) : java.lang.reflect.Modifier . boolean ( java.lang.Class<> . int ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { if ( org.springframework.data.rest.core.mapping.RestResource == null || ! StringUtils . hasText ( org.springframework.data.rest.core.mapping.RestResource . rel ( ) ) ) { return org.springframework.data.rest.core.mapping.RelProvider . getCollectionResourceRelFor ( java.lang.Class<> ) ; } return org.springframework.data.rest.core.mapping.RestResource . rel ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.data.rest.core.mapping.RelProvider . getItemResourceRelFor ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.ResourceDescription org.springframework.data.rest.core.mapping.ResourceDescription ( ) { ResourceDescription org.springframework.data.rest.core.mapping.ResourceDescription = SimpleResourceDescription . defaultFor ( java.lang.String ( ) ) ; if ( org.springframework.data.rest.core.mapping.Description != null ) { return new AnnotationBasedResourceDescription ( org.springframework.data.rest.core.mapping.Description , org.springframework.data.rest.core.mapping.ResourceDescription ) ; } if ( org.springframework.data.rest.core.mapping.RestResource != null ) { return new AnnotationBasedResourceDescription ( org.springframework.data.rest.core.mapping.RestResource . description ( ) , org.springframework.data.rest.core.mapping.ResourceDescription ) ; } return org.springframework.data.rest.core.mapping.ResourceDescription ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.rest.core.mapping.ResourceDescription org.springframework.data.rest.core.mapping.ResourceDescription ( ) { ResourceDescription org.springframework.data.rest.core.mapping.ResourceDescription = SimpleResourceDescription . defaultFor ( java.lang.String ( ) ) ; if ( org.springframework.data.rest.core.mapping.RestResource != null && StringUtils . hasText ( org.springframework.data.rest.core.mapping.RestResource . description ( ) . value ( ) ) ) { return new AnnotationBasedResourceDescription ( org.springframework.data.rest.core.mapping.RestResource . description ( ) , org.springframework.data.rest.core.mapping.ResourceDescription ) ; } if ( org.springframework.data.rest.core.mapping.Description != null ) { return new AnnotationBasedResourceDescription ( org.springframework.data.rest.core.mapping.Description , org.springframework.data.rest.core.mapping.ResourceDescription ) ; } return org.springframework.data.rest.core.mapping.ResourceDescription ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return null ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return java.lang.String ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return StringUtils . uncapitalize ( java.lang.Class<> . java.lang.String ( ) ) ; }  <METHOD_END>
