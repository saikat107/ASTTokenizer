<METHOD_START> public void ( boolean boolean ) { this( boolean , boolean ? new ConcurrentMapCache ( java.lang.String ) : null ); }  <METHOD_END>
<METHOD_START> public void ( boolean boolean , Cache org.springframework.web.servlet.config.annotation.Cache ) { Assert . isTrue ( ! boolean || org.springframework.web.servlet.config.annotation.Cache != null , STRING ) ; if ( boolean ) { this . java.util.List<org.springframework.web.servlet.config.annotation.ResourceResolver> . add ( new CachingResourceResolver ( org.springframework.web.servlet.config.annotation.Cache ) ) ; this . java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> . add ( new CachingResourceTransformer ( org.springframework.web.servlet.config.annotation.Cache ) ) ; } }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ResourceChainRegistration org.springframework.web.servlet.config.annotation.ResourceChainRegistration ( ResourceResolver org.springframework.web.servlet.config.annotation.ResourceResolver ) { Assert . notNull ( org.springframework.web.servlet.config.annotation.ResourceResolver , STRING ) ; this . java.util.List<org.springframework.web.servlet.config.annotation.ResourceResolver> . add ( org.springframework.web.servlet.config.annotation.ResourceResolver ) ; if ( org.springframework.web.servlet.config.annotation.ResourceResolver instanceof VersionResourceResolver ) { this . boolean = true ; } else if ( org.springframework.web.servlet.config.annotation.ResourceResolver instanceof PathResourceResolver ) { this . boolean = true ; } else if ( org.springframework.web.servlet.config.annotation.ResourceResolver instanceof WebJarsResourceResolver ) { this . boolean = true ; } return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.web.servlet.config.annotation.ResourceChainRegistration org.springframework.web.servlet.config.annotation.ResourceChainRegistration ( ResourceTransformer org.springframework.web.servlet.config.annotation.ResourceTransformer ) { Assert . notNull ( org.springframework.web.servlet.config.annotation.ResourceTransformer , STRING ) ; this . java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> . add ( org.springframework.web.servlet.config.annotation.ResourceTransformer ) ; if ( org.springframework.web.servlet.config.annotation.ResourceTransformer instanceof CssLinkResourceTransformer ) { this . boolean = true ; } return this ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.web.servlet.config.annotation.ResourceResolver> < ResourceResolver > java.util.List<org.springframework.web.servlet.config.annotation.ResourceResolver> ( ) { if ( ! this . boolean ) { java.util.List<org.springframework.web.servlet.config.annotation.ResourceResolver> < ResourceResolver > java.util.List<org.springframework.web.servlet.config.annotation.ResourceResolver> = new java.util.ArrayList <> ( this . java.util.List<org.springframework.web.servlet.config.annotation.ResourceResolver> ) ; if ( boolean && ! this . boolean ) { java.util.List<org.springframework.web.servlet.config.annotation.ResourceResolver> . add ( new WebJarsResourceResolver ( ) ) ; } java.util.List<org.springframework.web.servlet.config.annotation.ResourceResolver> . add ( new PathResourceResolver ( ) ) ; return java.util.List<org.springframework.web.servlet.config.annotation.ResourceResolver> ; } return this . java.util.List<org.springframework.web.servlet.config.annotation.ResourceResolver> ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> < ResourceTransformer > java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> ( ) { if ( this . boolean && ! this . boolean ) { java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> < ResourceTransformer > java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> = new java.util.ArrayList <> ( this . java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> ) ; boolean boolean = ! this . java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> . isEmpty ( ) ; boolean boolean = boolean && this . java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> . get ( NUMBER ) instanceof CachingResourceTransformer ; java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> . add ( boolean ? NUMBER : NUMBER , new CssLinkResourceTransformer ( ) ) ; return java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> ; } return this . java.util.List<org.springframework.web.servlet.config.annotation.ResourceTransformer> ; }  <METHOD_END>
