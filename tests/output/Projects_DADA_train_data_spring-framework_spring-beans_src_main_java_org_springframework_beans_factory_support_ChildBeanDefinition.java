<METHOD_START> public void ( java.lang.String java.lang.String ) { super(); this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , MutablePropertyValues org.springframework.beans.factory.support.MutablePropertyValues ) { super( null , org.springframework.beans.factory.support.MutablePropertyValues ); this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , ConstructorArgumentValues org.springframework.beans.factory.support.ConstructorArgumentValues , MutablePropertyValues org.springframework.beans.factory.support.MutablePropertyValues ) { super( org.springframework.beans.factory.support.ConstructorArgumentValues , org.springframework.beans.factory.support.MutablePropertyValues ); this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.Class<?> < ? > java.lang.Class<?> , ConstructorArgumentValues org.springframework.beans.factory.support.ConstructorArgumentValues , MutablePropertyValues org.springframework.beans.factory.support.MutablePropertyValues ) { super( org.springframework.beans.factory.support.ConstructorArgumentValues , org.springframework.beans.factory.support.MutablePropertyValues ); this . java.lang.String = java.lang.String ; setBeanClass ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , ConstructorArgumentValues org.springframework.beans.factory.support.ConstructorArgumentValues , MutablePropertyValues org.springframework.beans.factory.support.MutablePropertyValues ) { super( org.springframework.beans.factory.support.ConstructorArgumentValues , org.springframework.beans.factory.support.MutablePropertyValues ); this . java.lang.String = java.lang.String ; setBeanClassName ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( org.springframework.beans.factory.support.ChildBeanDefinition org.springframework.beans.factory.support.ChildBeanDefinition ) { super( org.springframework.beans.factory.support.ChildBeanDefinition ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) org.springframework.beans.factory.support.BeanDefinitionValidationException { super. validate ( ) ; if ( this . java.lang.String == null ) { throw new BeanDefinitionValidationException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.beans.factory.support.AbstractBeanDefinition org.springframework.beans.factory.support.AbstractBeanDefinition ( ) { return new org.springframework.beans.factory.support.ChildBeanDefinition ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.beans.factory.support.ChildBeanDefinition ) ) { return false ; } org.springframework.beans.factory.support.ChildBeanDefinition org.springframework.beans.factory.support.ChildBeanDefinition = ( org.springframework.beans.factory.support.ChildBeanDefinition ) java.lang.Object ; return ( ObjectUtils . nullSafeEquals ( this . java.lang.String , org.springframework.beans.factory.support.ChildBeanDefinition . java.lang.String ) && super. boolean ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return ObjectUtils . nullSafeHashCode ( this . java.lang.String ) * NUMBER + super. int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String + STRING + super. java.lang.String ( ) ; }  <METHOD_END>
