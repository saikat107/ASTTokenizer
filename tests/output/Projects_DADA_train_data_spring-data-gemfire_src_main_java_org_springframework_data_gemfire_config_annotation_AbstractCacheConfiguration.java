<METHOD_START> protected static boolean boolean ( java.lang.Object java.lang.Object ) { return ( java.lang.Object != null ) ; }  <METHOD_END>
<METHOD_START> protected static boolean boolean ( java.lang.Number java.lang.Number ) { return ( java.lang.Number != null && java.lang.Number . double ( ) != NUMBER ) ; }  <METHOD_END>
<METHOD_START> protected static boolean boolean ( java.lang.String java.lang.String ) { return StringUtils . hasText ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Bean protected java.util.Properties java.util.Properties ( ) { PropertiesBuilder org.springframework.data.gemfire.config.annotation.PropertiesBuilder = PropertiesBuilder . create ( ) ; org.springframework.data.gemfire.config.annotation.PropertiesBuilder . setProperty ( STRING , java.lang.String ( ) ) ; org.springframework.data.gemfire.config.annotation.PropertiesBuilder . setProperty ( STRING , java.lang.Integer ( ) ) ; org.springframework.data.gemfire.config.annotation.PropertiesBuilder . setProperty ( STRING , java.lang.String ( ) ) ; org.springframework.data.gemfire.config.annotation.PropertiesBuilder . setProperty ( STRING , java.lang.String ( ) ) ; org.springframework.data.gemfire.config.annotation.PropertiesBuilder . setProperty ( STRING , java.lang.String ( ) ) ; org.springframework.data.gemfire.config.annotation.PropertiesBuilder . add ( org.springframework.data.gemfire.config.annotation.PropertiesBuilder ) ; return org.springframework.data.gemfire.config.annotation.PropertiesBuilder . build ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . java.lang.ClassLoader = java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> protected java.lang.ClassLoader java.lang.ClassLoader ( ) { return java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanFactory org.springframework.data.gemfire.config.annotation.BeanFactory ) throws org.springframework.data.gemfire.config.annotation.BeansException { this . org.springframework.data.gemfire.config.annotation.BeanFactory = org.springframework.data.gemfire.config.annotation.BeanFactory ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.BeanFactory org.springframework.data.gemfire.config.annotation.BeanFactory ( ) { Assert . state ( this . org.springframework.data.gemfire.config.annotation.BeanFactory != null , STRING ) ; return this . org.springframework.data.gemfire.config.annotation.BeanFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { void ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; void ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; void ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; void ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; }  <METHOD_END>
<METHOD_START> protected void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { void ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; void ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; void ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; }  <METHOD_END>
<METHOD_START> protected void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { if ( boolean ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.gemfire.config.annotation.AnnotationMetadata . getAnnotationAttributes ( java.lang.String ( ) ) ; void ( java.lang.Boolean . java.lang.Boolean . boolean ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ) ; java.lang.Float java.lang.Float = ( java.lang.Float ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; if ( boolean ( java.lang.Float ) ) { void ( java.lang.Float ) ; } java.lang.Float java.lang.Float = ( java.lang.Float ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ; if ( boolean ( java.lang.Float ) ) { void ( java.lang.Float ) ; } void ( ( java.lang.String ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; void ( ( java.lang.String ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; void ( java.lang.Boolean . java.lang.Boolean . boolean ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { java.lang.String java.lang.String = EnablePdx .class . java.lang.String ( ) ; if ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata . hasAnnotation ( java.lang.String ) ) { java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> = org.springframework.data.gemfire.config.annotation.AnnotationMetadata . getAnnotationAttributes ( java.lang.String ) ; void ( ( java.lang.String ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ; void ( java.lang.Boolean . java.lang.Boolean . boolean ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ) ; void ( java.lang.Boolean . java.lang.Boolean . boolean ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ) ; void ( java.lang.Boolean . java.lang.Boolean . boolean ( java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ) ; void ( org.springframework.data.gemfire.config.annotation.PdxSerializer ( ( java.lang.String ) java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( STRING ) ) ) ; void ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) {	}  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.PdxSerializer org.springframework.data.gemfire.config.annotation.PdxSerializer ( java.lang.String java.lang.String ) { BeanFactory org.springframework.data.gemfire.config.annotation.BeanFactory = org.springframework.data.gemfire.config.annotation.BeanFactory ( ) ; PdxSerializer org.springframework.data.gemfire.config.annotation.PdxSerializer = org.springframework.data.gemfire.config.annotation.PdxSerializer ( ) ; return ( org.springframework.data.gemfire.config.annotation.BeanFactory . containsBean ( java.lang.String ) ? org.springframework.data.gemfire.config.annotation.BeanFactory . getBean ( java.lang.String , PdxSerializer .class ) : ( org.springframework.data.gemfire.config.annotation.PdxSerializer != null ? org.springframework.data.gemfire.config.annotation.PdxSerializer : org.springframework.data.gemfire.config.annotation.PdxSerializer ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) protected < T extends org.springframework.data.gemfire.config.annotation.PdxSerializer > T T ( ) { BeanFactory org.springframework.data.gemfire.config.annotation.BeanFactory = org.springframework.data.gemfire.config.annotation.BeanFactory ( ) ; ConversionService org.springframework.data.gemfire.config.annotation.ConversionService = ( org.springframework.data.gemfire.config.annotation.BeanFactory instanceof ConfigurableBeanFactory ? ( ( ConfigurableBeanFactory ) org.springframework.data.gemfire.config.annotation.BeanFactory ) . getConversionService ( ) : null ) ; return ( T ) MappingPdxSerializer . create ( this . org.springframework.data.gemfire.config.annotation.GemfireMappingContext , org.springframework.data.gemfire.config.annotation.ConversionService ) ; }  <METHOD_END>
<METHOD_START> protected void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { if ( java.util.concurrent.atomic.AtomicBoolean . boolean ( false , true ) ) { org.springframework.data.gemfire.config.annotation.AbstractBeanDefinition ( BeanDefinitionBuilder . rootBeanDefinition ( CustomEditorBeanFactoryPostProcessor .class ) . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) . getBeanDefinition ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { if ( java.util.concurrent.atomic.AtomicBoolean . boolean ( false , true ) ) { org.springframework.data.gemfire.config.annotation.AbstractBeanDefinition ( BeanDefinitionBuilder . rootBeanDefinition ( DefinedIndexesApplicationListener .class ) . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) . getBeanDefinition ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { if ( java.util.concurrent.atomic.AtomicBoolean . boolean ( false , true ) ) { org.springframework.data.gemfire.config.annotation.AbstractBeanDefinition ( BeanDefinitionBuilder . rootBeanDefinition ( DiskStoreDirectoryBeanPostProcessor .class ) . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) . getBeanDefinition ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { if ( StringUtils . hasText ( java.lang.String ( ) ) ) { if ( java.util.concurrent.atomic.AtomicBoolean . boolean ( false , true ) ) { org.springframework.data.gemfire.config.annotation.AbstractBeanDefinition ( BeanDefinitionBuilder . rootBeanDefinition ( PdxDiskStoreAwareBeanFactoryPostProcessor .class ) . setRole ( BeanDefinition . ROLE_INFRASTRUCTURE ) . addConstructorArgValue ( java.lang.String ( ) ) . getBeanDefinition ( ) ) ; } } }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.AbstractBeanDefinition org.springframework.data.gemfire.config.annotation.AbstractBeanDefinition ( AbstractBeanDefinition org.springframework.data.gemfire.config.annotation.AbstractBeanDefinition ) { if ( org.springframework.data.gemfire.config.annotation.BeanFactory ( ) instanceof BeanDefinitionRegistry ) { BeanDefinitionReaderUtils . registerWithGeneratedName ( org.springframework.data.gemfire.config.annotation.AbstractBeanDefinition , ( ( BeanDefinitionRegistry ) org.springframework.data.gemfire.config.annotation.BeanFactory ( ) ) ) ; } return org.springframework.data.gemfire.config.annotation.AbstractBeanDefinition ; }  <METHOD_END>
<METHOD_START> protected abstract java.lang.Class java.lang.Class ( )  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return java.lang.Class ( ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return java.lang.Class ( ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { return boolean ( CacheServerApplication .class , org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { return boolean ( ClientCacheApplication .class , org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { return boolean ( PeerCacheApplication .class , org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { return ( java.lang.Class<> . boolean ( java.lang.Class ( ) ) && org.springframework.data.gemfire.config.annotation.AnnotationMetadata . hasAnnotation ( java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { return ( boolean ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) || boolean ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( AnnotationMetadata org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) { return ( boolean ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) || boolean ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) || boolean ( org.springframework.data.gemfire.config.annotation.AnnotationMetadata ) ) ; }  <METHOD_END>
<METHOD_START> protected < T extends org.springframework.data.gemfire.config.annotation.CacheFactoryBean > T T ( ) { return T ( this .< T > T ( ) ) ; }  <METHOD_END>
<METHOD_START> protected abstract < T extends org.springframework.data.gemfire.config.annotation.CacheFactoryBean > T T ( )  <METHOD_END>
<METHOD_START> protected < T extends org.springframework.data.gemfire.config.annotation.CacheFactoryBean > T T ( T T ) { T . setBeanClassLoader ( java.lang.ClassLoader ( ) ) ; T . setBeanFactory ( org.springframework.data.gemfire.config.annotation.BeanFactory ( ) ) ; T . setCacheXml ( org.springframework.data.gemfire.config.annotation.Resource ( ) ) ; T . setClose ( boolean ( ) ) ; T . setCopyOnRead ( boolean ( ) ) ; T . setCriticalHeapPercentage ( java.lang.Float ( ) ) ; T . setDynamicRegionSupport ( org.springframework.data.gemfire.config.annotation.DynamicRegionSupport ( ) ) ; T . setEvictionHeapPercentage ( java.lang.Float ( ) ) ; T . setGatewayConflictResolver ( org.springframework.data.gemfire.config.annotation.GatewayConflictResolver ( ) ) ; T . setJndiDataSources ( java.util.List<CacheFactoryBean.JndiDataSource> ( ) ) ; T . setProperties ( java.util.Properties ( ) ) ; T . setPdxDiskStoreName ( java.lang.String ( ) ) ; T . setPdxIgnoreUnreadFields ( java.lang.Boolean ( ) ) ; T . setPdxPersistent ( java.lang.Boolean ( ) ) ; T . setPdxReadSerialized ( java.lang.Boolean ( ) ) ; T . setPdxSerializer ( org.springframework.data.gemfire.config.annotation.PdxSerializer ( ) ) ; T . setTransactionListeners ( java.util.List<org.springframework.data.gemfire.config.annotation.TransactionListener> ( ) ) ; T . setTransactionWriter ( org.springframework.data.gemfire.config.annotation.TransactionWriter ( ) ) ; return T ; }  <METHOD_END>
<METHOD_START> void void ( Resource org.springframework.data.gemfire.config.annotation.Resource ) { this . org.springframework.data.gemfire.config.annotation.Resource = org.springframework.data.gemfire.config.annotation.Resource ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.Resource org.springframework.data.gemfire.config.annotation.Resource ( ) { return this . org.springframework.data.gemfire.config.annotation.Resource ; }  <METHOD_END>
<METHOD_START> void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Float java.lang.Float ) { this . java.lang.Float = java.lang.Float ; }  <METHOD_END>
<METHOD_START> protected java.lang.Float java.lang.Float ( ) { return this . java.lang.Float ; }  <METHOD_END>
<METHOD_START> void void ( DynamicRegionSupport org.springframework.data.gemfire.config.annotation.DynamicRegionSupport ) { this . org.springframework.data.gemfire.config.annotation.DynamicRegionSupport = org.springframework.data.gemfire.config.annotation.DynamicRegionSupport ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.DynamicRegionSupport org.springframework.data.gemfire.config.annotation.DynamicRegionSupport ( ) { return this . org.springframework.data.gemfire.config.annotation.DynamicRegionSupport ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Float java.lang.Float ) { this . java.lang.Float = java.lang.Float ; }  <METHOD_END>
<METHOD_START> protected java.lang.Float java.lang.Float ( ) { return this . java.lang.Float ; }  <METHOD_END>
<METHOD_START> void void ( GatewayConflictResolver org.springframework.data.gemfire.config.annotation.GatewayConflictResolver ) { this . org.springframework.data.gemfire.config.annotation.GatewayConflictResolver = org.springframework.data.gemfire.config.annotation.GatewayConflictResolver ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.GatewayConflictResolver org.springframework.data.gemfire.config.annotation.GatewayConflictResolver ( ) { return this . org.springframework.data.gemfire.config.annotation.GatewayConflictResolver ; }  <METHOD_END>
<METHOD_START> void void ( java.util.List<org.springframework.data.gemfire.config.annotation.JndiDataSource> < JndiDataSource > java.util.List<org.springframework.data.gemfire.config.annotation.JndiDataSource> ) { this . java.util.List<org.springframework.data.gemfire.config.annotation.JndiDataSource> = java.util.List<org.springframework.data.gemfire.config.annotation.JndiDataSource> ; }  <METHOD_END>
<METHOD_START> protected java.util.List<CacheFactoryBean.JndiDataSource> < CacheFactoryBean . CacheFactoryBean > java.util.List<CacheFactoryBean.JndiDataSource> ( ) { return nullSafeList ( this . java.util.List<org.springframework.data.gemfire.config.annotation.JndiDataSource> ) ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.Integer = int ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return defaultIfNull ( this . java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> void void ( GemfireMappingContext org.springframework.data.gemfire.config.annotation.GemfireMappingContext ) { this . org.springframework.data.gemfire.config.annotation.GemfireMappingContext = org.springframework.data.gemfire.config.annotation.GemfireMappingContext ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.GemfireMappingContext org.springframework.data.gemfire.config.annotation.GemfireMappingContext ( ) { return this . org.springframework.data.gemfire.config.annotation.GemfireMappingContext ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.lang.Integer java.lang.Integer ( ) { return ( java.lang.Integer != null ? java.lang.Integer : int ) ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return ( StringUtils . hasText ( java.lang.String ) ? java.lang.String : java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> protected java.lang.Boolean java.lang.Boolean ( ) { return this . java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> protected java.lang.Boolean java.lang.Boolean ( ) { return this . java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Boolean java.lang.Boolean ) { this . java.lang.Boolean = java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> protected java.lang.Boolean java.lang.Boolean ( ) { return this . java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> void void ( PdxSerializer org.springframework.data.gemfire.config.annotation.PdxSerializer ) { this . org.springframework.data.gemfire.config.annotation.PdxSerializer = org.springframework.data.gemfire.config.annotation.PdxSerializer ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.PdxSerializer org.springframework.data.gemfire.config.annotation.PdxSerializer ( ) { return this . org.springframework.data.gemfire.config.annotation.PdxSerializer ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> void void ( java.util.List<org.springframework.data.gemfire.config.annotation.TransactionListener> < TransactionListener > java.util.List<org.springframework.data.gemfire.config.annotation.TransactionListener> ) { this . java.util.List<org.springframework.data.gemfire.config.annotation.TransactionListener> = java.util.List<org.springframework.data.gemfire.config.annotation.TransactionListener> ; }  <METHOD_END>
<METHOD_START> protected java.util.List<org.springframework.data.gemfire.config.annotation.TransactionListener> < TransactionListener > java.util.List<org.springframework.data.gemfire.config.annotation.TransactionListener> ( ) { return nullSafeList ( this . java.util.List<org.springframework.data.gemfire.config.annotation.TransactionListener> ) ; }  <METHOD_END>
<METHOD_START> void void ( TransactionWriter org.springframework.data.gemfire.config.annotation.TransactionWriter ) { this . org.springframework.data.gemfire.config.annotation.TransactionWriter = org.springframework.data.gemfire.config.annotation.TransactionWriter ; }  <METHOD_END>
<METHOD_START> protected org.springframework.data.gemfire.config.annotation.TransactionWriter org.springframework.data.gemfire.config.annotation.TransactionWriter ( ) { return this . org.springframework.data.gemfire.config.annotation.TransactionWriter ; }  <METHOD_END>
<METHOD_START> void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Properties java.util.Properties ) { org.springframework.data.gemfire.config.annotation.PropertiesBuilder . add ( java.util.Properties ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
