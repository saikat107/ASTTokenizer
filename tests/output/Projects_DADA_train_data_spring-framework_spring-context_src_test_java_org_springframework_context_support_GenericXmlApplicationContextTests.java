<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.support.ApplicationContext = new GenericXmlApplicationContext ( java.lang.Class<> , java.lang.String ) ; assertThat ( org.springframework.context.support.ApplicationContext . containsBean ( java.lang.String ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericXmlApplicationContext org.springframework.context.support.GenericXmlApplicationContext = new GenericXmlApplicationContext ( ) ; org.springframework.context.support.GenericXmlApplicationContext . load ( java.lang.Class<> , java.lang.String ) ; org.springframework.context.support.GenericXmlApplicationContext . refresh ( ) ; assertThat ( org.springframework.context.support.GenericXmlApplicationContext . containsBean ( java.lang.String ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.support.ApplicationContext = new GenericXmlApplicationContext ( java.lang.String ) ; assertThat ( org.springframework.context.support.ApplicationContext . containsBean ( java.lang.String ) , is ( true ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { GenericXmlApplicationContext org.springframework.context.support.GenericXmlApplicationContext = new GenericXmlApplicationContext ( ) ; org.springframework.context.support.GenericXmlApplicationContext . load ( java.lang.String ) ; org.springframework.context.support.GenericXmlApplicationContext . refresh ( ) ; assertThat ( org.springframework.context.support.GenericXmlApplicationContext . containsBean ( java.lang.String ) , is ( true ) ) ; }  <METHOD_END>
