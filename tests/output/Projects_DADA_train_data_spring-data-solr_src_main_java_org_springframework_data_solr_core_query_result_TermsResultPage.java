<METHOD_START> public final void void ( java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> < TermsFieldEntry > java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> , Field org.springframework.data.solr.core.query.result.Field ) { Assert . notNull ( org.springframework.data.solr.core.query.result.Field , STRING ) ; this . java.util.Map<org.springframework.data.solr.core.query.result.StringPageKey,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> . put ( new StringPageKey ( org.springframework.data.solr.core.query.result.Field . getName ( ) ) , java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> ) ; }  <METHOD_END>
<METHOD_START> public final void void ( java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> < TermsFieldEntry > java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> , java.lang.String java.lang.String ) { Assert . notNull ( java.lang.String , STRING ) ; this . java.util.Map<org.springframework.data.solr.core.query.result.StringPageKey,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> . put ( new StringPageKey ( java.lang.String ) , java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Map<java.lang.String,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> < java.lang.String , java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> < TermsFieldEntry > > java.util.Map<java.lang.String,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> < java.lang.String , java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> < TermsFieldEntry > > java.util.Map.Entry<java.lang.String,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> : java.util.Map<java.lang.String,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> . entrySet ( ) ) { void ( java.util.Map.Entry<java.lang.String,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> . getValue ( ) , java.util.Map.Entry<java.lang.String,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> . getKey ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Iterable<org.springframework.data.solr.core.query.result.TermsFieldEntry> < TermsFieldEntry > java.lang.Iterable<org.springframework.data.solr.core.query.result.TermsFieldEntry> ( java.lang.String java.lang.String ) { java.lang.Iterable<org.springframework.data.solr.core.query.result.TermsFieldEntry> < TermsFieldEntry > java.lang.Iterable<org.springframework.data.solr.core.query.result.TermsFieldEntry> = this . java.util.Map<org.springframework.data.solr.core.query.result.StringPageKey,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> . get ( new StringPageKey ( java.lang.String ) ) ; return java.lang.Iterable<org.springframework.data.solr.core.query.result.TermsFieldEntry> != null ? java.lang.Iterable<org.springframework.data.solr.core.query.result.TermsFieldEntry> : java.util.Collections .< TermsFieldEntry > java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.Iterable<org.springframework.data.solr.core.query.result.TermsFieldEntry> < TermsFieldEntry > java.lang.Iterable<org.springframework.data.solr.core.query.result.TermsFieldEntry> ( Field org.springframework.data.solr.core.query.result.Field ) { Assert . notNull ( org.springframework.data.solr.core.query.result.Field , STRING ) ; return java.lang.Iterable<org.springframework.data.solr.core.query.result.TermsFieldEntry> ( org.springframework.data.solr.core.query.result.Field . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<org.springframework.data.solr.core.query.result.Field> < Field > java.util.Collection<org.springframework.data.solr.core.query.result.Field> ( ) { if ( this . java.util.Map<org.springframework.data.solr.core.query.result.StringPageKey,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> . isEmpty ( ) ) { return java.util.Collections . java.util.List<org.springframework.data.solr.core.query.result.Field> ( ) ; } java.util.List<org.springframework.data.solr.core.query.result.Field> < Field > java.util.List<org.springframework.data.solr.core.query.result.Field> = new java.util.ArrayList <> ( this . java.util.Map<org.springframework.data.solr.core.query.result.StringPageKey,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> . size ( ) ) ; for ( StringPageKey org.springframework.data.solr.core.query.result.StringPageKey : this . java.util.Map<org.springframework.data.solr.core.query.result.StringPageKey,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> . keySet ( ) ) { java.util.List<org.springframework.data.solr.core.query.result.Field> . add ( new SimpleField ( org.springframework.data.solr.core.query.result.StringPageKey . getKey ( ) ) ) ; } return java.util.List<org.springframework.data.solr.core.query.result.Field> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<org.springframework.data.solr.core.query.result.TermsFieldEntry> < TermsFieldEntry > java.util.Iterator<org.springframework.data.solr.core.query.result.TermsFieldEntry> ( ) { return java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> ( ) . iterator ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> < TermsFieldEntry > java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> ( ) { java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> < TermsFieldEntry > java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> = new java.util.ArrayList<org.springframework.data.solr.core.query.result.TermsFieldEntry> <> ( ) ; for ( java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> < TermsFieldEntry > java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> : java.util.Map<org.springframework.data.solr.core.query.result.StringPageKey,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> . values ( ) ) { java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> . addAll ( java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> ) ; } return java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return ! java.util.Map<org.springframework.data.solr.core.query.result.StringPageKey,java.util.List<org.springframework.data.solr.core.query.result.TermsFieldEntry>> . isEmpty ( ) ; }  <METHOD_END>
