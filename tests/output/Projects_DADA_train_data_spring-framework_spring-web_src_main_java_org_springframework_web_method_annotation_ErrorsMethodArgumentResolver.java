<METHOD_START> @ java.lang.Override public boolean boolean ( MethodParameter org.springframework.web.method.annotation.MethodParameter ) { java.lang.Class<?> < ? > java.lang.Class<?> = org.springframework.web.method.annotation.MethodParameter . getParameterType ( ) ; return Errors .class . boolean ( java.lang.Class<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( MethodParameter org.springframework.web.method.annotation.MethodParameter , ModelAndViewContainer org.springframework.web.method.annotation.ModelAndViewContainer , NativeWebRequest org.springframework.web.method.annotation.NativeWebRequest , WebDataBinderFactory org.springframework.web.method.annotation.WebDataBinderFactory ) throws java.lang.Exception { ModelMap org.springframework.web.method.annotation.ModelMap = org.springframework.web.method.annotation.ModelAndViewContainer . getModel ( ) ; if ( org.springframework.web.method.annotation.ModelMap . size ( ) > NUMBER ) { int int = org.springframework.web.method.annotation.ModelMap . size ( ) - NUMBER ; java.lang.String java.lang.String = new java.util.ArrayList <> ( org.springframework.web.method.annotation.ModelMap . keySet ( ) ) . get ( int ) ; if ( java.lang.String . boolean ( BindingResult . MODEL_KEY_PREFIX ) ) { return org.springframework.web.method.annotation.ModelMap . get ( java.lang.String ) ; } } throw new java.lang.IllegalStateException ( STRING + STRING + org.springframework.web.method.annotation.MethodParameter . getMethod ( ) ) ; }  <METHOD_END>
