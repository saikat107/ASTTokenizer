<METHOD_START> public void ( WebConnection org.springframework.test.web.servlet.htmlunit.WebConnection , java.util.List<org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection> < org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection > java.util.List<org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection> ) { Assert . notNull ( org.springframework.test.web.servlet.htmlunit.WebConnection , STRING ) ; Assert . notEmpty ( java.util.List<org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection> , STRING ) ; this . java.util.List<org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection> = java.util.List<org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection> ; this . org.springframework.test.web.servlet.htmlunit.WebConnection = org.springframework.test.web.servlet.htmlunit.WebConnection ; }  <METHOD_END>
<METHOD_START> public void ( WebConnection org.springframework.test.web.servlet.htmlunit.WebConnection , org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection ... org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection[] ) { this( org.springframework.test.web.servlet.htmlunit.WebConnection , java.util.Arrays . java.util.List<org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection> ( org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection[] ) ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.test.web.servlet.htmlunit.WebResponse org.springframework.test.web.servlet.htmlunit.WebResponse ( WebRequest org.springframework.test.web.servlet.htmlunit.WebRequest ) throws java.io.IOException { for ( org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection : this . java.util.List<org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection> ) { if ( org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection . org.springframework.test.web.servlet.htmlunit.WebRequestMatcher ( ) . matches ( org.springframework.test.web.servlet.htmlunit.WebRequest ) ) { return org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection . org.springframework.test.web.servlet.htmlunit.WebConnection ( ) . getResponse ( org.springframework.test.web.servlet.htmlunit.WebRequest ) ; } } return this . org.springframework.test.web.servlet.htmlunit.WebConnection . getResponse ( org.springframework.test.web.servlet.htmlunit.WebRequest ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( WebRequestMatcher org.springframework.test.web.servlet.htmlunit.WebRequestMatcher , WebConnection org.springframework.test.web.servlet.htmlunit.WebConnection ) { this . org.springframework.test.web.servlet.htmlunit.WebRequestMatcher = org.springframework.test.web.servlet.htmlunit.WebRequestMatcher ; this . org.springframework.test.web.servlet.htmlunit.WebConnection = org.springframework.test.web.servlet.htmlunit.WebConnection ; }  <METHOD_END>
<METHOD_START> private org.springframework.test.web.servlet.htmlunit.WebRequestMatcher org.springframework.test.web.servlet.htmlunit.WebRequestMatcher ( ) { return this . org.springframework.test.web.servlet.htmlunit.WebRequestMatcher ; }  <METHOD_END>
<METHOD_START> private org.springframework.test.web.servlet.htmlunit.WebConnection org.springframework.test.web.servlet.htmlunit.WebConnection ( ) { return this . org.springframework.test.web.servlet.htmlunit.WebConnection ; }  <METHOD_END>
