<METHOD_START> @ Bean @ Scope ( value = STRING , proxyMode = ScopedProxyMode . TARGET_CLASS ) public demo.eventservice.ProxyFactoryBean demo.eventservice.ProxyFactoryBean ( ) { ProxyFactoryBean demo.eventservice.ProxyFactoryBean = new ProxyFactoryBean ( ) ; demo.eventservice.ProxyFactoryBean . setTargetSource ( demo.eventservice.CommonsPool2TargetSource ( ) ) ; return demo.eventservice.ProxyFactoryBean ; }  <METHOD_END>
<METHOD_START> @ Bean public demo.eventservice.CommonsPool2TargetSource demo.eventservice.CommonsPool2TargetSource ( ) { CommonsPool2TargetSource demo.eventservice.CommonsPool2TargetSource = new CommonsPool2TargetSource ( ) ; demo.eventservice.CommonsPool2TargetSource . setMaxSize ( NUMBER ) ; demo.eventservice.CommonsPool2TargetSource . setTargetBeanName ( STRING ) ; return demo.eventservice.CommonsPool2TargetSource ; }  <METHOD_END>
<METHOD_START> @ Bean ( name = STRING ) @ Scope ( scopeName = STRING ) public demo.eventservice.StateMachine<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.StateMachine<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) java.lang.Exception { Builder < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.Builder<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> = StateMachineBuilder .< demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > builder ( ) ; demo.eventservice.Builder<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . configureConfiguration ( ) . withConfiguration ( ) . autoStartup ( true ) ; demo.eventservice.Builder<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . configureStates ( ) . withStates ( ) . initial ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . states ( java.util.EnumSet . java.util.EnumSet<demo.eventservice.StateMachineConfig.States> ( demo.eventservice.StateMachineConfig.States .class ) ) ; demo.eventservice.Builder<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . configureTransitions ( ) . withInternal ( ) . source ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . event ( demo.eventservice.StateMachineConfig.Events . demo.eventservice.StateMachineConfig.Events ) . action ( demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) ) . and ( ) . withInternal ( ) . source ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . event ( demo.eventservice.StateMachineConfig.Events . demo.eventservice.StateMachineConfig.Events ) . action ( demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) ) . and ( ) . withInternal ( ) . source ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . event ( demo.eventservice.StateMachineConfig.Events . demo.eventservice.StateMachineConfig.Events ) . action ( demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) ) . and ( ) . withExternal ( ) . source ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . target ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . action ( demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) ) . event ( demo.eventservice.StateMachineConfig.Events . demo.eventservice.StateMachineConfig.Events ) . and ( ) . withExternal ( ) . source ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . target ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . action ( demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) ) . event ( demo.eventservice.StateMachineConfig.Events . demo.eventservice.StateMachineConfig.Events ) . and ( ) . withExternal ( ) . source ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . target ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . action ( demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) ) . event ( demo.eventservice.StateMachineConfig.Events . demo.eventservice.StateMachineConfig.Events ) . and ( ) . withExternal ( ) . source ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . target ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . action ( demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) ) . event ( demo.eventservice.StateMachineConfig.Events . demo.eventservice.StateMachineConfig.Events ) . and ( ) . withExternal ( ) . source ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . target ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . action ( demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) ) . event ( demo.eventservice.StateMachineConfig.Events . demo.eventservice.StateMachineConfig.Events ) . and ( ) . withExternal ( ) . source ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . target ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . action ( demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) ) . event ( demo.eventservice.StateMachineConfig.Events . demo.eventservice.StateMachineConfig.Events ) . and ( ) . withExternal ( ) . source ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . target ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . action ( demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) ) . event ( demo.eventservice.StateMachineConfig.Events . demo.eventservice.StateMachineConfig.Events ) . and ( ) . withExternal ( ) . source ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . target ( demo.eventservice.StateMachineConfig.States . demo.eventservice.StateMachineConfig.States ) . action ( demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) ) . event ( demo.eventservice.StateMachineConfig.Events . demo.eventservice.StateMachineConfig.Events ) ; return demo.eventservice.Builder<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) { return new Action < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > ( ) { @ java.lang.Override public void void ( StateContext < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ) { java.lang.String java.lang.String = demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getTarget ( ) . getId ( ) . toString ( ) ; java.lang.Integer java.lang.Integer = demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . get ( java.lang.String , java.lang.Integer .class ) ; if ( java.lang.Integer == null ) { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( java.lang.String , NUMBER ) ; } else { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( java.lang.String , ( java.lang.Integer + NUMBER ) ) ; } } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ) { java.lang.String java.lang.String = demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getTarget ( ) . getId ( ) . toString ( ) ; java.lang.Integer java.lang.Integer = demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . get ( java.lang.String , java.lang.Integer .class ) ; if ( java.lang.Integer == null ) { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( java.lang.String , NUMBER ) ; } else { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( java.lang.String , ( java.lang.Integer + NUMBER ) ) ; } }  <METHOD_END>
<METHOD_START> @ Bean public demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) { return new Action < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > ( ) { @ java.lang.Override public void void ( StateContext < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ) { java.lang.Integer java.lang.Integer = demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . get ( STRING , java.lang.Integer .class ) ; if ( java.lang.Integer == null ) { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , NUMBER ) ; } else { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , ( java.lang.Integer + NUMBER ) ) ; } } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ) { java.lang.Integer java.lang.Integer = demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . get ( STRING , java.lang.Integer .class ) ; if ( java.lang.Integer == null ) { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , NUMBER ) ; } else { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , ( java.lang.Integer + NUMBER ) ) ; } }  <METHOD_END>
<METHOD_START> @ Bean public demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) { return new Action < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > ( ) { @ java.lang.Override public void void ( StateContext < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ) { java.lang.Integer java.lang.Integer = demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . get ( STRING , java.lang.Integer .class ) ; if ( java.lang.Integer != null && java.lang.Integer > NUMBER ) { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , ( java.lang.Integer - NUMBER ) ) ; } } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ) { java.lang.Integer java.lang.Integer = demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . get ( STRING , java.lang.Integer .class ) ; if ( java.lang.Integer != null && java.lang.Integer > NUMBER ) { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , ( java.lang.Integer - NUMBER ) ) ; } }  <METHOD_END>
<METHOD_START> @ Bean public demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) { return new Action < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > ( ) { @ java.lang.Override public void void ( StateContext < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ) { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , true ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ) { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . put ( STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ Bean public demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.Action<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( ) { return new Action < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > ( ) { @ java.lang.Override public void void ( StateContext < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ) { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . clear ( ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( StateContext < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ) { demo.eventservice.StateContext<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> . getExtendedState ( ) . getVariables ( ) . clear ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public demo.eventservice.RedisConnectionFactory demo.eventservice.RedisConnectionFactory ( ) { return new JedisConnectionFactory ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public demo.eventservice.StateMachinePersist<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events,java.lang.String> < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events , java.lang.String > demo.eventservice.StateMachinePersist<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events,java.lang.String> ( RedisConnectionFactory demo.eventservice.RedisConnectionFactory ) { RedisStateMachineContextRepository < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.RedisStateMachineContextRepository<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> = new RedisStateMachineContextRepository < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > ( demo.eventservice.RedisConnectionFactory ) ; return new RepositoryStateMachinePersist < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > ( demo.eventservice.RedisStateMachineContextRepository<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public demo.eventservice.RedisStateMachinePersister<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > demo.eventservice.RedisStateMachinePersister<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events> ( StateMachinePersist < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events , java.lang.String > demo.eventservice.StateMachinePersist<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events,java.lang.String> ) { return new RedisStateMachinePersister < demo.eventservice.StateMachineConfig.States , demo.eventservice.StateMachineConfig.Events > ( demo.eventservice.StateMachinePersist<demo.eventservice.StateMachineConfig.States,demo.eventservice.StateMachineConfig.Events,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Bean public java.lang.String java.lang.String ( ) java.io.IOException { ClassPathResource demo.eventservice.ClassPathResource = new ClassPathResource ( STRING ) ; java.io.InputStream java.io.InputStream = demo.eventservice.ClassPathResource . getInputStream ( ) ; java.util.Scanner java.util.Scanner = new java.util.Scanner ( java.io.InputStream ) ; java.lang.String java.lang.String = java.util.Scanner . java.util.Scanner ( STRING ) . java.lang.String ( ) ; java.util.Scanner . void ( ) ; return java.lang.String ; }  <METHOD_END>
