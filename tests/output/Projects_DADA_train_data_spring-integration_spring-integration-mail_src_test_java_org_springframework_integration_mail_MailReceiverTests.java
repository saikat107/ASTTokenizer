<METHOD_START> @ Test public void void ( ) java.lang.Exception { AbstractMailReceiver org.springframework.integration.mail.AbstractMailReceiver = new AbstractMailReceiver ( ) { @ java.lang.Override protected org.springframework.integration.mail.Message [] org.springframework.integration.mail.Message[] ( ) org.springframework.integration.mail.MessagingException { return null ; } } ; java.util.Properties java.util.Properties = new java.util.Properties ( ) ; Session org.springframework.integration.mail.Session = Session . getInstance ( java.util.Properties ) ; org.springframework.integration.mail.AbstractMailReceiver . setSession ( org.springframework.integration.mail.Session ) ; org.springframework.integration.mail.AbstractMailReceiver . setProtocol ( STRING ) ; Store org.springframework.integration.mail.Store = org.springframework.integration.mail.Session . getStore ( STRING ) ; org.springframework.integration.mail.Store = spy ( org.springframework.integration.mail.Store ) ; new DirectFieldAccessor ( org.springframework.integration.mail.AbstractMailReceiver ) . setPropertyValue ( STRING , org.springframework.integration.mail.Store ) ; when ( org.springframework.integration.mail.Store . isConnected ( ) ) . thenReturn ( false ) ; Folder org.springframework.integration.mail.Folder = mock ( Folder .class ) ; when ( org.springframework.integration.mail.Folder . exists ( ) ) . thenReturn ( true ) ; when ( org.springframework.integration.mail.Folder . isOpen ( ) ) . thenReturn ( false ) ; doReturn ( org.springframework.integration.mail.Folder ) . when ( org.springframework.integration.mail.Store ) . getFolder ( ( URLName ) null ) ; doAnswer ( new DoesNothing ( ) ) . when ( org.springframework.integration.mail.Store ) . connect ( ) ; org.springframework.integration.mail.AbstractMailReceiver . openFolder ( ) ; org.springframework.integration.mail.AbstractMailReceiver . openFolder ( ) ; verify ( org.springframework.integration.mail.Store , times ( NUMBER ) ) . connect ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.springframework.integration.mail.Message [] org.springframework.integration.mail.Message[] ( ) org.springframework.integration.mail.MessagingException { return null ; }  <METHOD_END>
