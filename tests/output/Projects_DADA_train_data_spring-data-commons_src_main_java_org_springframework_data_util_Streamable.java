<METHOD_START> static < T > org.springframework.data.util.Streamable<T> < T > org.springframework.data.util.Streamable<T> ( ) { return java.util.Collections :: java.util.Iterator<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs static < T > org.springframework.data.util.Streamable<T> < T > org.springframework.data.util.Streamable<T> ( T ... T[] ) { return ( ) java.util.Arrays . java.util.List<T> ( T[] ) . java.util.Iterator<T> ( ) ; }  <METHOD_END>
<METHOD_START> static < T > org.springframework.data.util.Streamable<T> < T > org.springframework.data.util.Streamable<T> ( java.lang.Iterable<T> < T > java.lang.Iterable<T> ) { Assert . notNull ( java.lang.Iterable<T> , STRING ) ; return java.lang.Iterable<T> :: java.util.Iterator<T> ; }  <METHOD_END>
<METHOD_START> static < T > org.springframework.data.util.Streamable<T> < T > org.springframework.data.util.Streamable<T> ( java.util.function.Supplier<? extends java.util.stream.Stream<T>> < ? extends java.util.stream.Stream<T> < T > > java.util.function.Supplier<? extends java.util.stream.Stream<T>> ) { return LazyStreamable . of ( java.util.function.Supplier<> ) ; }  <METHOD_END>
<METHOD_START> default java.util.stream.Stream<T> < T > java.util.stream.Stream<T> ( ) { return java.util.stream.StreamSupport . java.util.stream.Stream<T> ( java.util.Spliterator<T> ( ) , false ) ; }  <METHOD_END>
<METHOD_START> default < R > org.springframework.data.util.Streamable<R> < R > org.springframework.data.util.Streamable<R> ( java.util.function.Function<? super T,? extends R> < ? super T , ? extends R > java.util.function.Function<? super T,? extends R> ) { Assert . notNull ( java.util.function.Function<,> , STRING ) ; return org.springframework.data.util.Streamable . org.springframework.data.util.Streamable<R> ( ( ) java.util.stream.Stream<T> ( ) . java.util.stream.Stream<R> ( java.util.function.Function<,> ) ) ; }  <METHOD_END>
<METHOD_START> default < R > org.springframework.data.util.Streamable<R> < R > org.springframework.data.util.Streamable<R> ( java.util.function.Function<? super T,? extends java.util.stream.Stream<? extends R>> < ? super T , ? extends java.util.stream.Stream<? extends R> < ? extends R > > java.util.function.Function<? super T,? extends java.util.stream.Stream<? extends R>> ) { Assert . notNull ( java.util.function.Function<,> , STRING ) ; return org.springframework.data.util.Streamable . org.springframework.data.util.Streamable<R> ( ( ) java.util.stream.Stream<T> ( ) . java.util.stream.Stream<R> ( java.util.function.Function<,> ) ) ; }  <METHOD_END>
<METHOD_START> default org.springframework.data.util.Streamable<T> < T > org.springframework.data.util.Streamable<T> ( java.util.function.Predicate<? super T> < ? super T > java.util.function.Predicate<? super T> ) { Assert . notNull ( java.util.function.Predicate<> , STRING ) ; return org.springframework.data.util.Streamable . org.springframework.data.util.Streamable<T> ( ( ) java.util.stream.Stream<T> ( ) . java.util.stream.Stream<T> ( java.util.function.Predicate<> ) ) ; }  <METHOD_END>
