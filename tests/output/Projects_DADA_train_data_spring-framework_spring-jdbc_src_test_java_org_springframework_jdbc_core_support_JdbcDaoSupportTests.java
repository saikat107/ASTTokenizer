<METHOD_START> @ Test public void void ( ) java.lang.Exception { javax.sql.DataSource javax.sql.DataSource = mock ( javax.sql.DataSource .class ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; JdbcDaoSupport org.springframework.jdbc.core.support.JdbcDaoSupport = new JdbcDaoSupport ( ) { @ java.lang.Override protected void void ( ) { java.util.List<java.lang.String> . boolean ( STRING ) ; } } ; org.springframework.jdbc.core.support.JdbcDaoSupport . setDataSource ( javax.sql.DataSource ) ; org.springframework.jdbc.core.support.JdbcDaoSupport . afterPropertiesSet ( ) ; assertEquals ( STRING , javax.sql.DataSource , org.springframework.jdbc.core.support.JdbcDaoSupport . getDataSource ( ) ) ; assertEquals ( STRING , javax.sql.DataSource , org.springframework.jdbc.core.support.JdbcDaoSupport . getJdbcTemplate ( ) . getDataSource ( ) ) ; assertEquals ( STRING , java.util.List<java.lang.String> . int ( ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { java.util.List<java.lang.String> . boolean ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { JdbcTemplate org.springframework.jdbc.core.support.JdbcTemplate = new JdbcTemplate ( ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; JdbcDaoSupport org.springframework.jdbc.core.support.JdbcDaoSupport = new JdbcDaoSupport ( ) { @ java.lang.Override protected void void ( ) { java.util.List<java.lang.String> . boolean ( STRING ) ; } } ; org.springframework.jdbc.core.support.JdbcDaoSupport . setJdbcTemplate ( org.springframework.jdbc.core.support.JdbcTemplate ) ; org.springframework.jdbc.core.support.JdbcDaoSupport . afterPropertiesSet ( ) ; assertEquals ( STRING , org.springframework.jdbc.core.support.JdbcDaoSupport . getJdbcTemplate ( ) , org.springframework.jdbc.core.support.JdbcTemplate ) ; assertEquals ( STRING , java.util.List<java.lang.String> . int ( ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { java.util.List<java.lang.String> . boolean ( STRING ) ; }  <METHOD_END>
