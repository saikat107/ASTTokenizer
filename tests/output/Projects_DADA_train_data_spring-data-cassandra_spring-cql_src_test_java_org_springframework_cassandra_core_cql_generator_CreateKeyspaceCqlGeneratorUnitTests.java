<METHOD_START> public static void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { assertThat ( java.lang.String . boolean ( STRING + java.lang.String + STRING ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> private static void void ( java.util.Map<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> < Option , java.lang.Object > java.util.Map<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> , java.lang.String java.lang.String ) { assertThat ( java.lang.String . boolean ( STRING ) ) . isTrue ( ) ; for ( java.util.Map . java.util.Map.Entry<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> < Option , java.lang.Object > java.util.Map.Entry<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> : java.util.Map<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> . entrySet ( ) ) { java.lang.String java.lang.String = STRING + java.util.Map.Entry<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> . getKey ( ) . getName ( ) + STRING + ( java.util.Map.Entry<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> . getKey ( ) . quotesValue ( ) ? STRING : STRING ) + java.util.Map.Entry<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> . getValue ( ) . toString ( ) + ( java.util.Map.Entry<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> . getKey ( ) . quotesValue ( ) ? STRING : STRING ) ; assertThat ( java.lang.String . boolean ( java.lang.String ) ) . isTrue ( ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.Boolean java.lang.Boolean , java.lang.String java.lang.String ) { assertThat ( java.lang.String . boolean ( STRING + java.lang.Boolean ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.cassandra.core.cql.generator.CreateKeyspaceCqlGenerator org.springframework.cassandra.core.cql.generator.CreateKeyspaceCqlGenerator ( ) { return new CreateKeyspaceCqlGenerator ( specification ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.cassandra.core.cql.generator.CreateKeyspaceSpecification org.springframework.cassandra.core.cql.generator.CreateKeyspaceSpecification ( ) { keyspace = java.lang.String ; return CreateKeyspaceSpecification . createKeyspace ( ) . name ( keyspace ) . with ( KeyspaceOption . REPLICATION , java.util.Map<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> ) . with ( KeyspaceOption . DURABLE_WRITES , java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { prepare ( ) ; void ( keyspace , cql ) ; void ( java.util.Map<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> , cql ) ; void ( java.lang.Boolean , cql ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.cassandra.core.cql.generator.CreateKeyspaceSpecification org.springframework.cassandra.core.cql.generator.CreateKeyspaceSpecification ( ) { keyspace = java.lang.String ; return CreateKeyspaceSpecification . createKeyspace ( ) . name ( keyspace ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { prepare ( ) ; void ( keyspace , cql ) ; void ( java.util.Map<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> , cql ) ; void ( java.lang.Boolean , cql ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.cassandra.core.cql.generator.CreateKeyspaceSpecification org.springframework.cassandra.core.cql.generator.CreateKeyspaceSpecification ( ) { keyspace = java.lang.String ; java.util.Map<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> . put ( new DefaultOption ( STRING , java.lang.String .class , false , false , true ) , STRING ) ; java.util.Map<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> . put ( new DefaultOption ( STRING , java.lang.Long .class , false , false , true ) , NUMBER ) ; java.util.Map<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> . put ( new DefaultOption ( STRING , java.lang.Long .class , false , false , true ) , NUMBER ) ; return CreateKeyspaceSpecification . createKeyspace ( ) . name ( keyspace ) . with ( KeyspaceOption . REPLICATION , java.util.Map<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> ) . with ( KeyspaceOption . DURABLE_WRITES , java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { prepare ( ) ; void ( keyspace , cql ) ; void ( java.util.Map<org.springframework.cassandra.core.cql.generator.Option,java.lang.Object> , cql ) ; void ( java.lang.Boolean , cql ) ; }  <METHOD_END>
