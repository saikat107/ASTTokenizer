<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this( java.lang.String , java.lang.String , null , false , null , null , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.Object java.lang.Object , boolean boolean , java.lang.String [] java.lang.String[] , java.lang.Object [] java.lang.Object[] , java.lang.String java.lang.String ) { super( java.lang.String , java.lang.String[] , java.lang.Object[] , java.lang.String ); Assert . notNull ( java.lang.String , STRING ) ; this . java.lang.String = java.lang.String ; this . java.lang.Object = java.lang.Object ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.Object java.lang.Object ( ) { return this . java.lang.Object ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + getObjectName ( ) + STRING + this . java.lang.String + STRING + this . java.lang.Object + STRING + resolvableToString ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! super. boolean ( java.lang.Object ) ) { return false ; } org.springframework.validation.FieldError org.springframework.validation.FieldError = ( org.springframework.validation.FieldError ) java.lang.Object ; return ( java.lang.String ( ) . boolean ( org.springframework.validation.FieldError . java.lang.String ( ) ) && ObjectUtils . nullSafeEquals ( java.lang.Object ( ) , org.springframework.validation.FieldError . java.lang.Object ( ) ) && boolean ( ) == org.springframework.validation.FieldError . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = super. int ( ) ; int = NUMBER * int + java.lang.String ( ) . int ( ) ; int = NUMBER * int + ObjectUtils . nullSafeHashCode ( java.lang.Object ( ) ) ; int = NUMBER * int + ( boolean ( ) ? NUMBER : NUMBER ) ; return int ; }  <METHOD_END>
