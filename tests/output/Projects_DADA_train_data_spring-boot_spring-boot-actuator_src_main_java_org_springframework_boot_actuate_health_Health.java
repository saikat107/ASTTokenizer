<METHOD_START> private void ( org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ) { Assert . notNull ( org.springframework.boot.actuate.health.Health.Builder , STRING ) ; this . org.springframework.boot.actuate.health.Status = org.springframework.boot.actuate.health.Health.Builder . org.springframework.boot.actuate.health.Status ; this . java.util.Map<java.lang.String,java.lang.Object> = java.util.Collections . java.util.Map<java.lang.String,java.lang.Object> ( org.springframework.boot.actuate.health.Health.Builder . java.util.Map<java.lang.String,java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> @ JsonUnwrapped public org.springframework.boot.actuate.health.Status org.springframework.boot.actuate.health.Status ( ) { return this . org.springframework.boot.actuate.health.Status ; }  <METHOD_END>
<METHOD_START> @ JsonAnyGetter public java.util.Map<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map<java.lang.String,java.lang.Object> ( ) { return this . java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( java.lang.Object == this ) { return true ; } if ( java.lang.Object != null && java.lang.Object instanceof org.springframework.boot.actuate.health.Health ) { org.springframework.boot.actuate.health.Health org.springframework.boot.actuate.health.Health = ( org.springframework.boot.actuate.health.Health ) java.lang.Object ; return this . org.springframework.boot.actuate.health.Status . equals ( org.springframework.boot.actuate.health.Health . org.springframework.boot.actuate.health.Status ) && this . java.util.Map<java.lang.String,java.lang.Object> . boolean ( org.springframework.boot.actuate.health.Health . java.util.Map<java.lang.String,java.lang.Object> ) ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = this . org.springframework.boot.actuate.health.Status . hashCode ( ) ; return NUMBER * int + this . java.util.Map<java.lang.String,java.lang.Object> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.springframework.boot.actuate.health.Status ( ) + STRING + java.util.Map<java.lang.String,java.lang.Object> ( ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( ) { return org.springframework.boot.actuate.health.Health.Builder ( Status . UNKNOWN ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( ) { return org.springframework.boot.actuate.health.Health.Builder ( Status . UP ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( java.lang.Exception java.lang.Exception ) { return org.springframework.boot.actuate.health.Health.Builder ( ) . org.springframework.boot.actuate.health.Health.Builder ( java.lang.Exception ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( ) { return org.springframework.boot.actuate.health.Health.Builder ( Status . DOWN ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( ) { return org.springframework.boot.actuate.health.Health.Builder ( Status . OUT_OF_SERVICE ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( java.lang.String java.lang.String ) { return org.springframework.boot.actuate.health.Health.Builder ( new Status ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( Status org.springframework.boot.actuate.health.Status ) { return new org.springframework.boot.actuate.health.Health.Builder ( org.springframework.boot.actuate.health.Status ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this . org.springframework.boot.actuate.health.Status = Status . UNKNOWN ; this . java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Status org.springframework.boot.actuate.health.Status ) { Assert . notNull ( org.springframework.boot.actuate.health.Status , STRING ) ; this . org.springframework.boot.actuate.health.Status = org.springframework.boot.actuate.health.Status ; this . java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Status org.springframework.boot.actuate.health.Status , java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ) { Assert . notNull ( org.springframework.boot.actuate.health.Status , STRING ) ; Assert . notNull ( java.util.Map<java.lang.String,> , STRING ) ; this . org.springframework.boot.actuate.health.Status = org.springframework.boot.actuate.health.Status ; this . java.util.Map<java.lang.String,java.lang.Object> = new java.util.LinkedHashMap<java.lang.String,java.lang.Object> <> ( java.util.Map<java.lang.String,> ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( java.lang.Exception java.lang.Exception ) { Assert . notNull ( java.lang.Exception , STRING ) ; return org.springframework.boot.actuate.health.Health.Builder ( STRING , java.lang.Exception . java.lang.Class<? extends java.lang.Exception> ( ) . java.lang.String ( ) + STRING + java.lang.Exception . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Assert . notNull ( java.lang.String , STRING ) ; Assert . notNull ( java.lang.Object , STRING ) ; this . java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( ) { return org.springframework.boot.actuate.health.Health.Builder ( Status . UNKNOWN ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( ) { return org.springframework.boot.actuate.health.Health.Builder ( Status . UP ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( java.lang.Exception java.lang.Exception ) { return org.springframework.boot.actuate.health.Health.Builder ( ) . org.springframework.boot.actuate.health.Health.Builder ( java.lang.Exception ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( ) { return org.springframework.boot.actuate.health.Health.Builder ( Status . DOWN ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( ) { return org.springframework.boot.actuate.health.Health.Builder ( Status . OUT_OF_SERVICE ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( java.lang.String java.lang.String ) { return org.springframework.boot.actuate.health.Health.Builder ( new Status ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.health.Health.Builder org.springframework.boot.actuate.health.Health.Builder ( Status org.springframework.boot.actuate.health.Status ) { this . org.springframework.boot.actuate.health.Status = org.springframework.boot.actuate.health.Status ; return this ; }  <METHOD_END>
<METHOD_START> public org.springframework.boot.actuate.health.Health org.springframework.boot.actuate.health.Health ( ) { return new org.springframework.boot.actuate.health.Health ( this ) ; }  <METHOD_END>
