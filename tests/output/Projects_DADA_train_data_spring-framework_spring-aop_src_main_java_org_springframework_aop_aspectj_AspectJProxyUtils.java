<METHOD_START> public static boolean boolean ( java.util.List<org.springframework.aop.aspectj.Advisor> < Advisor > java.util.List<org.springframework.aop.aspectj.Advisor> ) { if ( ! java.util.List<org.springframework.aop.aspectj.Advisor> . isEmpty ( ) ) { boolean boolean = false ; for ( Advisor org.springframework.aop.aspectj.Advisor : java.util.List<org.springframework.aop.aspectj.Advisor> ) { if ( boolean ( org.springframework.aop.aspectj.Advisor ) ) { boolean = true ; } } if ( boolean && ! java.util.List<org.springframework.aop.aspectj.Advisor> . contains ( ExposeInvocationInterceptor . ADVISOR ) ) { java.util.List<org.springframework.aop.aspectj.Advisor> . add ( NUMBER , ExposeInvocationInterceptor . ADVISOR ) ; return true ; } } return false ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( Advisor org.springframework.aop.aspectj.Advisor ) { return ( org.springframework.aop.aspectj.Advisor instanceof InstantiationModelAwarePointcutAdvisor || org.springframework.aop.aspectj.Advisor . getAdvice ( ) instanceof AbstractAspectJAdvice || ( org.springframework.aop.aspectj.Advisor instanceof PointcutAdvisor && ( ( PointcutAdvisor ) org.springframework.aop.aspectj.Advisor ) . getPointcut ( ) instanceof AspectJExpressionPointcut ) ) ; }  <METHOD_END>
