<METHOD_START> @ java.lang.Override public void void ( ConfigurableApplicationContext org.springframework.boot.autoconfigure.ConfigurableApplicationContext ) { org.springframework.boot.autoconfigure.ConfigurableApplicationContext . addBeanFactoryPostProcessor ( new org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer.CachingMetadataReaderFactoryPostProcessor ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return Ordered . HIGHEST_PRECEDENCE ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConfigurableListableBeanFactory org.springframework.boot.autoconfigure.ConfigurableListableBeanFactory )				throws org.springframework.boot.autoconfigure.BeansException {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BeanDefinitionRegistry org.springframework.boot.autoconfigure.BeanDefinitionRegistry )				throws org.springframework.boot.autoconfigure.BeansException { void ( org.springframework.boot.autoconfigure.BeanDefinitionRegistry ) ; void ( org.springframework.boot.autoconfigure.BeanDefinitionRegistry ) ; }  <METHOD_END>
<METHOD_START> private void void ( BeanDefinitionRegistry org.springframework.boot.autoconfigure.BeanDefinitionRegistry ) { RootBeanDefinition org.springframework.boot.autoconfigure.RootBeanDefinition = new RootBeanDefinition ( org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer.SharedMetadataReaderFactoryBean .class ) ; org.springframework.boot.autoconfigure.BeanDefinitionRegistry . registerBeanDefinition ( java.lang.String , org.springframework.boot.autoconfigure.RootBeanDefinition ) ; }  <METHOD_END>
<METHOD_START> private void void ( BeanDefinitionRegistry org.springframework.boot.autoconfigure.BeanDefinitionRegistry ) { try { BeanDefinition org.springframework.boot.autoconfigure.BeanDefinition = org.springframework.boot.autoconfigure.BeanDefinitionRegistry . getBeanDefinition ( AnnotationConfigUtils . CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME ) ; org.springframework.boot.autoconfigure.BeanDefinition . getPropertyValues ( ) . add ( STRING , new RuntimeBeanReference ( java.lang.String ) ) ; } catch ( NoSuchBeanDefinitionException org.springframework.boot.autoconfigure.NoSuchBeanDefinitionException ) {			} }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.ClassLoader java.lang.ClassLoader ) { this . org.springframework.boot.autoconfigure.ConcurrentReferenceCachingMetadataReaderFactory = new ConcurrentReferenceCachingMetadataReaderFactory ( java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.boot.autoconfigure.ConcurrentReferenceCachingMetadataReaderFactory org.springframework.boot.autoconfigure.ConcurrentReferenceCachingMetadataReaderFactory ( ) java.lang.Exception { return this . org.springframework.boot.autoconfigure.ConcurrentReferenceCachingMetadataReaderFactory ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return CachingMetadataReaderFactory .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ContextRefreshedEvent org.springframework.boot.autoconfigure.ContextRefreshedEvent ) { this . org.springframework.boot.autoconfigure.ConcurrentReferenceCachingMetadataReaderFactory . clearCache ( ) ; }  <METHOD_END>
