<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.Spr15275Tests.ConfigWithFactoryBean .class ) ; assertEquals ( STRING , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo . toString ( ) ) ; assertSame ( org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.FooInterface .class ) , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.Spr15275Tests.ConfigWithAbstractFactoryBean .class ) ; assertEquals ( STRING , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo . toString ( ) ) ; assertSame ( org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.FooInterface .class ) , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.Spr15275Tests.ConfigWithAbstractFactoryBeanForInterface .class ) ; assertEquals ( STRING , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo . toString ( ) ) ; assertSame ( org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.FooInterface .class ) , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.Spr15275Tests.ConfigWithAbstractFactoryBeanAsReturnType .class ) ; assertEquals ( STRING , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo . toString ( ) ) ; assertSame ( org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.FooInterface .class ) , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.Spr15275Tests.ConfigWithFinalFactoryBean .class ) ; assertEquals ( STRING , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo . toString ( ) ) ; assertSame ( org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.FooInterface .class ) , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { ApplicationContext org.springframework.context.annotation.ApplicationContext = new AnnotationConfigApplicationContext ( org.springframework.context.annotation.Spr15275Tests.ConfigWithFinalFactoryBeanAsReturnType .class ) ; assertEquals ( STRING , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo . toString ( ) ) ; assertNotSame ( org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.FooInterface .class ) , org.springframework.context.annotation.ApplicationContext . getBean ( org.springframework.context.annotation.Spr15275Tests.Bar .class ) . foo ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.Foo> < org.springframework.context.annotation.Spr15275Tests.Foo > org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.Foo> ( ) { return new FactoryBean < org.springframework.context.annotation.Spr15275Tests.Foo > ( ) { @ java.lang.Override public org.springframework.context.annotation.Spr15275Tests.Foo org.springframework.context.annotation.Spr15275Tests.Foo ( ) { return new org.springframework.context.annotation.Spr15275Tests.Foo ( STRING ) ; } @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.context.annotation.Spr15275Tests.Foo .class ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.annotation.Spr15275Tests.Foo org.springframework.context.annotation.Spr15275Tests.Foo ( ) { return new org.springframework.context.annotation.Spr15275Tests.Foo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.context.annotation.Spr15275Tests.Foo .class ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.Spr15275Tests.Bar org.springframework.context.annotation.Spr15275Tests.Bar ( ) java.lang.Exception { assertTrue ( org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.Foo> ( ) . isSingleton ( ) ) ; return new org.springframework.context.annotation.Spr15275Tests.Bar ( org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.Foo> ( ) . getObject ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.Foo> < org.springframework.context.annotation.Spr15275Tests.Foo > org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.Foo> ( ) { return new AbstractFactoryBean < org.springframework.context.annotation.Spr15275Tests.Foo > ( ) { @ java.lang.Override public org.springframework.context.annotation.Spr15275Tests.Foo org.springframework.context.annotation.Spr15275Tests.Foo ( ) { return new org.springframework.context.annotation.Spr15275Tests.Foo ( STRING ) ; } @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.context.annotation.Spr15275Tests.Foo .class ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.annotation.Spr15275Tests.Foo org.springframework.context.annotation.Spr15275Tests.Foo ( ) { return new org.springframework.context.annotation.Spr15275Tests.Foo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.context.annotation.Spr15275Tests.Foo .class ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.Spr15275Tests.Bar org.springframework.context.annotation.Spr15275Tests.Bar ( ) java.lang.Exception { assertTrue ( org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.Foo> ( ) . isSingleton ( ) ) ; return new org.springframework.context.annotation.Spr15275Tests.Bar ( org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.Foo> ( ) . getObject ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> < org.springframework.context.annotation.Spr15275Tests.FooInterface > org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> ( ) { return new AbstractFactoryBean < org.springframework.context.annotation.Spr15275Tests.FooInterface > ( ) { @ java.lang.Override public org.springframework.context.annotation.Spr15275Tests.FooInterface org.springframework.context.annotation.Spr15275Tests.FooInterface ( ) { return new org.springframework.context.annotation.Spr15275Tests.Foo ( STRING ) ; } @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.context.annotation.Spr15275Tests.FooInterface .class ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.annotation.Spr15275Tests.FooInterface org.springframework.context.annotation.Spr15275Tests.FooInterface ( ) { return new org.springframework.context.annotation.Spr15275Tests.Foo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.context.annotation.Spr15275Tests.FooInterface .class ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.Spr15275Tests.Bar org.springframework.context.annotation.Spr15275Tests.Bar ( ) java.lang.Exception { assertTrue ( org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> ( ) . isSingleton ( ) ) ; return new org.springframework.context.annotation.Spr15275Tests.Bar ( org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> ( ) . getObject ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.AbstractFactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> < org.springframework.context.annotation.Spr15275Tests.FooInterface > org.springframework.context.annotation.AbstractFactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> ( ) { return new AbstractFactoryBean < org.springframework.context.annotation.Spr15275Tests.FooInterface > ( ) { @ java.lang.Override public org.springframework.context.annotation.Spr15275Tests.FooInterface org.springframework.context.annotation.Spr15275Tests.FooInterface ( ) { return new org.springframework.context.annotation.Spr15275Tests.Foo ( STRING ) ; } @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.context.annotation.Spr15275Tests.Foo .class ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.annotation.Spr15275Tests.FooInterface org.springframework.context.annotation.Spr15275Tests.FooInterface ( ) { return new org.springframework.context.annotation.Spr15275Tests.Foo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.context.annotation.Spr15275Tests.Foo .class ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.Spr15275Tests.Bar org.springframework.context.annotation.Spr15275Tests.Bar ( ) java.lang.Exception { assertTrue ( org.springframework.context.annotation.AbstractFactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> ( ) . isSingleton ( ) ) ; return new org.springframework.context.annotation.Spr15275Tests.Bar ( org.springframework.context.annotation.AbstractFactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> ( ) . getObject ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> < org.springframework.context.annotation.Spr15275Tests.FooInterface > org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> ( ) { return new org.springframework.context.annotation.Spr15275Tests.FinalFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.Spr15275Tests.Bar org.springframework.context.annotation.Spr15275Tests.Bar ( ) java.lang.Exception { assertTrue ( org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> ( ) . isSingleton ( ) ) ; return new org.springframework.context.annotation.Spr15275Tests.Bar ( org.springframework.context.annotation.FactoryBean<org.springframework.context.annotation.Spr15275Tests.FooInterface> ( ) . getObject ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.Spr15275Tests.FinalFactoryBean org.springframework.context.annotation.Spr15275Tests.FinalFactoryBean ( ) { return new org.springframework.context.annotation.Spr15275Tests.FinalFactoryBean ( ) ; }  <METHOD_END>
<METHOD_START> @ Bean public org.springframework.context.annotation.Spr15275Tests.Bar org.springframework.context.annotation.Spr15275Tests.Bar ( ) java.lang.Exception { assertTrue ( org.springframework.context.annotation.Spr15275Tests.FinalFactoryBean ( ) . isSingleton ( ) ) ; return new org.springframework.context.annotation.Spr15275Tests.Bar ( org.springframework.context.annotation.Spr15275Tests.FinalFactoryBean ( ) . org.springframework.context.annotation.Spr15275Tests.Foo ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.context.annotation.Spr15275Tests.Foo org.springframework.context.annotation.Spr15275Tests.Foo ( ) { return new org.springframework.context.annotation.Spr15275Tests.Foo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return org.springframework.context.annotation.Spr15275Tests.FooInterface .class ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( org.springframework.context.annotation.Spr15275Tests.FooInterface org.springframework.context.annotation.Spr15275Tests.FooInterface ) { this . org.springframework.context.annotation.Spr15275Tests.FooInterface = org.springframework.context.annotation.Spr15275Tests.FooInterface ; }  <METHOD_END>
