<METHOD_START> static java.util.List<org.springframework.data.mongodb.core.aggregation.Document> < Document > java.util.List<org.springframework.data.mongodb.core.aggregation.Document> ( java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> < AggregationOperation > java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> , AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) { java.util.List<org.springframework.data.mongodb.core.aggregation.Document> < Document > java.util.List<org.springframework.data.mongodb.core.aggregation.Document> = new java.util.ArrayList<org.springframework.data.mongodb.core.aggregation.Document> < Document > ( java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> . size ( ) ) ; AggregationOperationContext org.springframework.data.mongodb.core.aggregation.AggregationOperationContext = org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ; for ( AggregationOperation org.springframework.data.mongodb.core.aggregation.AggregationOperation : java.util.List<org.springframework.data.mongodb.core.aggregation.AggregationOperation> ) { java.util.List<org.springframework.data.mongodb.core.aggregation.Document> . add ( org.springframework.data.mongodb.core.aggregation.AggregationOperation . toDocument ( org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ) ; if ( org.springframework.data.mongodb.core.aggregation.AggregationOperation instanceof FieldsExposingAggregationOperation ) { FieldsExposingAggregationOperation org.springframework.data.mongodb.core.aggregation.FieldsExposingAggregationOperation = ( FieldsExposingAggregationOperation ) org.springframework.data.mongodb.core.aggregation.AggregationOperation ; ExposedFields org.springframework.data.mongodb.core.aggregation.ExposedFields = org.springframework.data.mongodb.core.aggregation.FieldsExposingAggregationOperation . getFields ( ) ; if ( org.springframework.data.mongodb.core.aggregation.AggregationOperation instanceof InheritsFieldsAggregationOperation ) { org.springframework.data.mongodb.core.aggregation.AggregationOperationContext = new InheritingExposedFieldsAggregationOperationContext ( org.springframework.data.mongodb.core.aggregation.ExposedFields , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; } else { org.springframework.data.mongodb.core.aggregation.AggregationOperationContext = org.springframework.data.mongodb.core.aggregation.ExposedFields . exposesNoFields ( ) ? org.springframework.data.mongodb.core.aggregation.AggregationOperationContext : new ExposedFieldsAggregationOperationContext ( org.springframework.data.mongodb.core.aggregation.FieldsExposingAggregationOperation . getFields ( ) , org.springframework.data.mongodb.core.aggregation.AggregationOperationContext ) ; } } } return java.util.List<org.springframework.data.mongodb.core.aggregation.Document> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.Document org.springframework.data.mongodb.core.aggregation.Document ( Document org.springframework.data.mongodb.core.aggregation.Document ) { return org.springframework.data.mongodb.core.aggregation.Document ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.FieldReference org.springframework.data.mongodb.core.aggregation.FieldReference ( Field org.springframework.data.mongodb.core.aggregation.Field ) { return new DirectFieldReference ( new ExposedField ( org.springframework.data.mongodb.core.aggregation.Field , true ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.springframework.data.mongodb.core.aggregation.FieldReference org.springframework.data.mongodb.core.aggregation.FieldReference ( java.lang.String java.lang.String ) { return new DirectFieldReference ( new ExposedField ( new AggregationField ( java.lang.String ) , true ) ) ; }  <METHOD_END>
