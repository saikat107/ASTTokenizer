<METHOD_START> public void ( java.util.List<? extends org.springframework.data.geo.GeoResult<T>> < ? extends GeoResult < T > > java.util.List<? extends org.springframework.data.geo.GeoResult<T>> ) { this( java.util.List<> , ( Metric ) null ); }  <METHOD_END>
<METHOD_START> public void ( java.util.List<? extends org.springframework.data.geo.GeoResult<T>> < ? extends GeoResult < T > > java.util.List<? extends org.springframework.data.geo.GeoResult<T>> , Metric org.springframework.data.geo.Metric ) { this( java.util.List<> , org.springframework.data.geo.Distance ( java.util.List<> , org.springframework.data.geo.Metric ) ); }  <METHOD_END>
<METHOD_START> @ PersistenceConstructor public void ( java.util.List<? extends org.springframework.data.geo.GeoResult<T>> < ? extends GeoResult < T > > java.util.List<? extends org.springframework.data.geo.GeoResult<T>> , Distance org.springframework.data.geo.Distance ) { Assert . notNull ( java.util.List<> , STRING ) ; this . java.util.List<? extends org.springframework.data.geo.GeoResult<T>> = java.util.List<> ; this . org.springframework.data.geo.Distance = org.springframework.data.geo.Distance ; }  <METHOD_END>
<METHOD_START> public org.springframework.data.geo.Distance org.springframework.data.geo.Distance ( ) { return org.springframework.data.geo.Distance ; }  <METHOD_END>
<METHOD_START> public java.util.List<org.springframework.data.geo.GeoResult<T>> < GeoResult < T > > java.util.List<org.springframework.data.geo.GeoResult<T>> ( ) { return java.util.Collections . java.util.List<> ( java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public java.util.Iterator<org.springframework.data.geo.GeoResult<T>> < GeoResult < T > > java.util.Iterator<org.springframework.data.geo.GeoResult<T>> ( ) { return ( java.util.Iterator<org.springframework.data.geo.GeoResult<T>> < GeoResult < T > > ) java.util.List<> . java.util.Iterator<> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( ! ( java.lang.Object instanceof org.springframework.data.geo.GeoResults ) ) { return false ; } org.springframework.data.geo.GeoResults<?> < ? > org.springframework.data.geo.GeoResults<?> = ( org.springframework.data.geo.GeoResults<?> < ? > ) java.lang.Object ; return this . java.util.List<> . boolean ( org.springframework.data.geo.GeoResults<> . java.util.List<> ) && this . org.springframework.data.geo.Distance . equals ( org.springframework.data.geo.GeoResults<> . org.springframework.data.geo.Distance ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = NUMBER ; int += NUMBER * java.util.List<> . int ( ) ; int += NUMBER * org.springframework.data.geo.Distance . hashCode ( ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String . java.lang.String ( STRING , org.springframework.data.geo.Distance . toString ( ) , StringUtils . collectionToCommaDelimitedString ( java.util.List<> ) ) ; }  <METHOD_END>
<METHOD_START> private static org.springframework.data.geo.Distance org.springframework.data.geo.Distance ( java.util.List<? extends org.springframework.data.geo.GeoResult<?>> < ? extends GeoResult < ? > > java.util.List<? extends org.springframework.data.geo.GeoResult<?>> , Metric org.springframework.data.geo.Metric ) { if ( java.util.List<> . boolean ( ) ) { return new Distance ( NUMBER , org.springframework.data.geo.Metric ) ; } double double = NUMBER ; for ( GeoResult < ? > org.springframework.data.geo.GeoResult<?> : java.util.List<> ) { double += org.springframework.data.geo.GeoResult<> . getDistance ( ) . getValue ( ) ; } return new Distance ( double / java.util.List<> . int ( ) , org.springframework.data.geo.Metric ) ; }  <METHOD_END>
